// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSubscribedServicesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubscribedServicesPlainArgs Empty = new GetSubscribedServicesPlainArgs();

    /**
     * The OCID of the root compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetSubscribedServicesFilter> filters;

    public Optional<List<GetSubscribedServicesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
     * 
     */
    @Import(name="orderLineId")
    private @Nullable String orderLineId;

    /**
     * @return Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
     * 
     */
    public Optional<String> orderLineId() {
        return Optional.ofNullable(this.orderLineId);
    }

    /**
     * This param is used to filter subscribed services based on its status
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return This param is used to filter subscribed services based on its status
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Line level Subscription Id
     * 
     */
    @Import(name="subscriptionId", required=true)
    private String subscriptionId;

    /**
     * @return Line level Subscription Id
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    private GetSubscribedServicesPlainArgs() {}

    private GetSubscribedServicesPlainArgs(GetSubscribedServicesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.orderLineId = $.orderLineId;
        this.status = $.status;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubscribedServicesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubscribedServicesPlainArgs $;

        public Builder() {
            $ = new GetSubscribedServicesPlainArgs();
        }

        public Builder(GetSubscribedServicesPlainArgs defaults) {
            $ = new GetSubscribedServicesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetSubscribedServicesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetSubscribedServicesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param orderLineId Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
         * 
         * @return builder
         * 
         */
        public Builder orderLineId(@Nullable String orderLineId) {
            $.orderLineId = orderLineId;
            return this;
        }

        /**
         * @param status This param is used to filter subscribed services based on its status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param subscriptionId Line level Subscription Id
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        public GetSubscribedServicesPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetSubscribedServicesPlainArgs", "compartmentId");
            }
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("GetSubscribedServicesPlainArgs", "subscriptionId");
            }
            return $;
        }
    }

}
