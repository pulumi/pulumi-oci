// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetBillingSchedulesBillingScheduleProduct;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBillingSchedulesBillingSchedule {
    /**
     * @return Billing schedule line net amount
     * 
     */
    private String amount;
    /**
     * @return Indicates the associated AR Customer transaction id a unique identifier existing on AR.
     * 
     */
    private String arCustomerTransactionId;
    /**
     * @return Indicates the associated AR Invoice Number
     * 
     */
    private String arInvoiceNumber;
    /**
     * @return Billing frequency
     * 
     */
    private String billingFrequency;
    /**
     * @return Billing schedule invoice status
     * 
     */
    private String invoiceStatus;
    /**
     * @return Billing schedule net unit price
     * 
     */
    private String netUnitPrice;
    /**
     * @return Order number associated with the Subscribed Service
     * 
     */
    private String orderNumber;
    /**
     * @return Product description
     * 
     */
    private List<GetBillingSchedulesBillingScheduleProduct> products;
    /**
     * @return Billing schedule quantity
     * 
     */
    private String quantity;
    /**
     * @return This param is used to get only the billing schedules for a particular Subscribed Service
     * 
     */
    private String subscribedServiceId;
    /**
     * @return Billing schedule end date
     * 
     */
    private String timeEnd;
    /**
     * @return Billing schedule invoicing date
     * 
     */
    private String timeInvoicing;
    /**
     * @return Billing schedule start date
     * 
     */
    private String timeStart;

    private GetBillingSchedulesBillingSchedule() {}
    /**
     * @return Billing schedule line net amount
     * 
     */
    public String amount() {
        return this.amount;
    }
    /**
     * @return Indicates the associated AR Customer transaction id a unique identifier existing on AR.
     * 
     */
    public String arCustomerTransactionId() {
        return this.arCustomerTransactionId;
    }
    /**
     * @return Indicates the associated AR Invoice Number
     * 
     */
    public String arInvoiceNumber() {
        return this.arInvoiceNumber;
    }
    /**
     * @return Billing frequency
     * 
     */
    public String billingFrequency() {
        return this.billingFrequency;
    }
    /**
     * @return Billing schedule invoice status
     * 
     */
    public String invoiceStatus() {
        return this.invoiceStatus;
    }
    /**
     * @return Billing schedule net unit price
     * 
     */
    public String netUnitPrice() {
        return this.netUnitPrice;
    }
    /**
     * @return Order number associated with the Subscribed Service
     * 
     */
    public String orderNumber() {
        return this.orderNumber;
    }
    /**
     * @return Product description
     * 
     */
    public List<GetBillingSchedulesBillingScheduleProduct> products() {
        return this.products;
    }
    /**
     * @return Billing schedule quantity
     * 
     */
    public String quantity() {
        return this.quantity;
    }
    /**
     * @return This param is used to get only the billing schedules for a particular Subscribed Service
     * 
     */
    public String subscribedServiceId() {
        return this.subscribedServiceId;
    }
    /**
     * @return Billing schedule end date
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Billing schedule invoicing date
     * 
     */
    public String timeInvoicing() {
        return this.timeInvoicing;
    }
    /**
     * @return Billing schedule start date
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBillingSchedulesBillingSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String amount;
        private String arCustomerTransactionId;
        private String arInvoiceNumber;
        private String billingFrequency;
        private String invoiceStatus;
        private String netUnitPrice;
        private String orderNumber;
        private List<GetBillingSchedulesBillingScheduleProduct> products;
        private String quantity;
        private String subscribedServiceId;
        private String timeEnd;
        private String timeInvoicing;
        private String timeStart;
        public Builder() {}
        public Builder(GetBillingSchedulesBillingSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amount = defaults.amount;
    	      this.arCustomerTransactionId = defaults.arCustomerTransactionId;
    	      this.arInvoiceNumber = defaults.arInvoiceNumber;
    	      this.billingFrequency = defaults.billingFrequency;
    	      this.invoiceStatus = defaults.invoiceStatus;
    	      this.netUnitPrice = defaults.netUnitPrice;
    	      this.orderNumber = defaults.orderNumber;
    	      this.products = defaults.products;
    	      this.quantity = defaults.quantity;
    	      this.subscribedServiceId = defaults.subscribedServiceId;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeInvoicing = defaults.timeInvoicing;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder amount(String amount) {
            this.amount = Objects.requireNonNull(amount);
            return this;
        }
        @CustomType.Setter
        public Builder arCustomerTransactionId(String arCustomerTransactionId) {
            this.arCustomerTransactionId = Objects.requireNonNull(arCustomerTransactionId);
            return this;
        }
        @CustomType.Setter
        public Builder arInvoiceNumber(String arInvoiceNumber) {
            this.arInvoiceNumber = Objects.requireNonNull(arInvoiceNumber);
            return this;
        }
        @CustomType.Setter
        public Builder billingFrequency(String billingFrequency) {
            this.billingFrequency = Objects.requireNonNull(billingFrequency);
            return this;
        }
        @CustomType.Setter
        public Builder invoiceStatus(String invoiceStatus) {
            this.invoiceStatus = Objects.requireNonNull(invoiceStatus);
            return this;
        }
        @CustomType.Setter
        public Builder netUnitPrice(String netUnitPrice) {
            this.netUnitPrice = Objects.requireNonNull(netUnitPrice);
            return this;
        }
        @CustomType.Setter
        public Builder orderNumber(String orderNumber) {
            this.orderNumber = Objects.requireNonNull(orderNumber);
            return this;
        }
        @CustomType.Setter
        public Builder products(List<GetBillingSchedulesBillingScheduleProduct> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(GetBillingSchedulesBillingScheduleProduct... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder quantity(String quantity) {
            this.quantity = Objects.requireNonNull(quantity);
            return this;
        }
        @CustomType.Setter
        public Builder subscribedServiceId(String subscribedServiceId) {
            this.subscribedServiceId = Objects.requireNonNull(subscribedServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeInvoicing(String timeInvoicing) {
            this.timeInvoicing = Objects.requireNonNull(timeInvoicing);
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        public GetBillingSchedulesBillingSchedule build() {
            final var _resultValue = new GetBillingSchedulesBillingSchedule();
            _resultValue.amount = amount;
            _resultValue.arCustomerTransactionId = arCustomerTransactionId;
            _resultValue.arInvoiceNumber = arInvoiceNumber;
            _resultValue.billingFrequency = billingFrequency;
            _resultValue.invoiceStatus = invoiceStatus;
            _resultValue.netUnitPrice = netUnitPrice;
            _resultValue.orderNumber = orderNumber;
            _resultValue.products = products;
            _resultValue.quantity = quantity;
            _resultValue.subscribedServiceId = subscribedServiceId;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeInvoicing = timeInvoicing;
            _resultValue.timeStart = timeStart;
            return _resultValue;
        }
    }
}
