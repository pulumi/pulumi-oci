// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCommitmentsCommitment {
    /**
     * @return Commitment available amount
     * 
     */
    private String availableAmount;
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    private String fundedAllocationValue;
    /**
     * @return SPM internal Commitment ID
     * 
     */
    private String id;
    /**
     * @return Commitment quantity
     * 
     */
    private String quantity;
    /**
     * @return This param is used to get the commitments for a particular subscribed service
     * 
     */
    private String subscribedServiceId;
    /**
     * @return Commitment end date
     * 
     */
    private String timeEnd;
    /**
     * @return Commitment start date
     * 
     */
    private String timeStart;
    /**
     * @return Commitment used amount
     * 
     */
    private String usedAmount;

    private GetCommitmentsCommitment() {}
    /**
     * @return Commitment available amount
     * 
     */
    public String availableAmount() {
        return this.availableAmount;
    }
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    public String fundedAllocationValue() {
        return this.fundedAllocationValue;
    }
    /**
     * @return SPM internal Commitment ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Commitment quantity
     * 
     */
    public String quantity() {
        return this.quantity;
    }
    /**
     * @return This param is used to get the commitments for a particular subscribed service
     * 
     */
    public String subscribedServiceId() {
        return this.subscribedServiceId;
    }
    /**
     * @return Commitment end date
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Commitment start date
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }
    /**
     * @return Commitment used amount
     * 
     */
    public String usedAmount() {
        return this.usedAmount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCommitmentsCommitment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availableAmount;
        private String fundedAllocationValue;
        private String id;
        private String quantity;
        private String subscribedServiceId;
        private String timeEnd;
        private String timeStart;
        private String usedAmount;
        public Builder() {}
        public Builder(GetCommitmentsCommitment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableAmount = defaults.availableAmount;
    	      this.fundedAllocationValue = defaults.fundedAllocationValue;
    	      this.id = defaults.id;
    	      this.quantity = defaults.quantity;
    	      this.subscribedServiceId = defaults.subscribedServiceId;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
    	      this.usedAmount = defaults.usedAmount;
        }

        @CustomType.Setter
        public Builder availableAmount(String availableAmount) {
            this.availableAmount = Objects.requireNonNull(availableAmount);
            return this;
        }
        @CustomType.Setter
        public Builder fundedAllocationValue(String fundedAllocationValue) {
            this.fundedAllocationValue = Objects.requireNonNull(fundedAllocationValue);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder quantity(String quantity) {
            this.quantity = Objects.requireNonNull(quantity);
            return this;
        }
        @CustomType.Setter
        public Builder subscribedServiceId(String subscribedServiceId) {
            this.subscribedServiceId = Objects.requireNonNull(subscribedServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        @CustomType.Setter
        public Builder usedAmount(String usedAmount) {
            this.usedAmount = Objects.requireNonNull(usedAmount);
            return this;
        }
        public GetCommitmentsCommitment build() {
            final var o = new GetCommitmentsCommitment();
            o.availableAmount = availableAmount;
            o.fundedAllocationValue = fundedAllocationValue;
            o.id = id;
            o.quantity = quantity;
            o.subscribedServiceId = subscribedServiceId;
            o.timeEnd = timeEnd;
            o.timeStart = timeStart;
            o.usedAmount = usedAmount;
            return o;
        }
    }
}
