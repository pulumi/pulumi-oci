// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetInvoiceLineComputedUsagesFilter;
import com.pulumi.oci.OneSubsription.outputs.GetInvoiceLineComputedUsagesInvoicelineComputedUsage;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetInvoiceLineComputedUsagesResult {
    private String compartmentId;
    private @Nullable List<String> fields;
    private @Nullable List<GetInvoiceLineComputedUsagesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String invoiceLineId;
    /**
     * @return The list of invoiceline_computed_usages.
     * 
     */
    private List<GetInvoiceLineComputedUsagesInvoicelineComputedUsage> invoicelineComputedUsages;

    private GetInvoiceLineComputedUsagesResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<String> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    public List<GetInvoiceLineComputedUsagesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String invoiceLineId() {
        return this.invoiceLineId;
    }
    /**
     * @return The list of invoiceline_computed_usages.
     * 
     */
    public List<GetInvoiceLineComputedUsagesInvoicelineComputedUsage> invoicelineComputedUsages() {
        return this.invoicelineComputedUsages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoiceLineComputedUsagesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<String> fields;
        private @Nullable List<GetInvoiceLineComputedUsagesFilter> filters;
        private String id;
        private String invoiceLineId;
        private List<GetInvoiceLineComputedUsagesInvoicelineComputedUsage> invoicelineComputedUsages;
        public Builder() {}
        public Builder(GetInvoiceLineComputedUsagesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.fields = defaults.fields;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.invoiceLineId = defaults.invoiceLineId;
    	      this.invoicelineComputedUsages = defaults.invoicelineComputedUsages;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder fields(@Nullable List<String> fields) {
            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetInvoiceLineComputedUsagesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetInvoiceLineComputedUsagesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder invoiceLineId(String invoiceLineId) {
            this.invoiceLineId = Objects.requireNonNull(invoiceLineId);
            return this;
        }
        @CustomType.Setter
        public Builder invoicelineComputedUsages(List<GetInvoiceLineComputedUsagesInvoicelineComputedUsage> invoicelineComputedUsages) {
            this.invoicelineComputedUsages = Objects.requireNonNull(invoicelineComputedUsages);
            return this;
        }
        public Builder invoicelineComputedUsages(GetInvoiceLineComputedUsagesInvoicelineComputedUsage... invoicelineComputedUsages) {
            return invoicelineComputedUsages(List.of(invoicelineComputedUsages));
        }
        public GetInvoiceLineComputedUsagesResult build() {
            final var o = new GetInvoiceLineComputedUsagesResult();
            o.compartmentId = compartmentId;
            o.fields = fields;
            o.filters = filters;
            o.id = id;
            o.invoiceLineId = invoiceLineId;
            o.invoicelineComputedUsages = invoicelineComputedUsages;
            return o;
        }
    }
}
