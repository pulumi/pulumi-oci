// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceBillToAddress;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceBillToContact;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceBillToCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceCurrency;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceInvoiceLine;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceOrganization;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoicePaymentTerm;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInvoicesInvoice {
    /**
     * @return AR Invoice Numbers comma separated under one invoice
     * 
     */
    private @Nullable String arInvoices;
    /**
     * @return Address.
     * 
     */
    private @Nullable List<GetInvoicesInvoiceBillToAddress> billToAddresses;
    /**
     * @return User.
     * 
     */
    private @Nullable List<GetInvoicesInvoiceBillToContact> billToContacts;
    /**
     * @return Business partner.
     * 
     */
    private @Nullable List<GetInvoicesInvoiceBillToCustomer> billToCustomers;
    /**
     * @return User that created the Payment term
     * 
     */
    private @Nullable String createdBy;
    /**
     * @return Currency details
     * 
     */
    private @Nullable List<GetInvoicesInvoiceCurrency> currencies;
    /**
     * @return Invoice Lines under particular invoice.
     * 
     */
    private @Nullable List<GetInvoicesInvoiceInvoiceLine> invoiceLines;
    /**
     * @return Organization details
     * 
     */
    private @Nullable List<GetInvoicesInvoiceOrganization> organizations;
    /**
     * @return Payment Method
     * 
     */
    private @Nullable String paymentMethod;
    /**
     * @return Payment Term details
     * 
     */
    private @Nullable List<GetInvoicesInvoicePaymentTerm> paymentTerms;
    /**
     * @return Receipt Method of Payment Mode
     * 
     */
    private @Nullable String receiptMethod;
    /**
     * @return SPM Document Number is an functional identifier for invoice in SPM
     * 
     */
    private @Nullable String spmInvoiceNumber;
    /**
     * @return Document Status in SPM which depicts current state of invoice
     * 
     */
    private @Nullable String status;
    /**
     * @return Invoice associated subscription plan number.
     * 
     */
    private @Nullable String subscriptionNumber;
    /**
     * @return SPM Invocie creation date
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Invoice Date
     * 
     */
    private @Nullable String timeInvoiceDate;
    /**
     * @return SPM Invoice updated date
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return Document Type in SPM like SPM Invoice,SPM Credit Memo etc.,
     * 
     */
    private @Nullable String type;
    /**
     * @return User that updated SPM Invoice
     * 
     */
    private @Nullable String updatedBy;

    private GetInvoicesInvoice() {}
    /**
     * @return AR Invoice Numbers comma separated under one invoice
     * 
     */
    public Optional<String> arInvoices() {
        return Optional.ofNullable(this.arInvoices);
    }
    /**
     * @return Address.
     * 
     */
    public List<GetInvoicesInvoiceBillToAddress> billToAddresses() {
        return this.billToAddresses == null ? List.of() : this.billToAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetInvoicesInvoiceBillToContact> billToContacts() {
        return this.billToContacts == null ? List.of() : this.billToContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetInvoicesInvoiceBillToCustomer> billToCustomers() {
        return this.billToCustomers == null ? List.of() : this.billToCustomers;
    }
    /**
     * @return User that created the Payment term
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * @return Currency details
     * 
     */
    public List<GetInvoicesInvoiceCurrency> currencies() {
        return this.currencies == null ? List.of() : this.currencies;
    }
    /**
     * @return Invoice Lines under particular invoice.
     * 
     */
    public List<GetInvoicesInvoiceInvoiceLine> invoiceLines() {
        return this.invoiceLines == null ? List.of() : this.invoiceLines;
    }
    /**
     * @return Organization details
     * 
     */
    public List<GetInvoicesInvoiceOrganization> organizations() {
        return this.organizations == null ? List.of() : this.organizations;
    }
    /**
     * @return Payment Method
     * 
     */
    public Optional<String> paymentMethod() {
        return Optional.ofNullable(this.paymentMethod);
    }
    /**
     * @return Payment Term details
     * 
     */
    public List<GetInvoicesInvoicePaymentTerm> paymentTerms() {
        return this.paymentTerms == null ? List.of() : this.paymentTerms;
    }
    /**
     * @return Receipt Method of Payment Mode
     * 
     */
    public Optional<String> receiptMethod() {
        return Optional.ofNullable(this.receiptMethod);
    }
    /**
     * @return SPM Document Number is an functional identifier for invoice in SPM
     * 
     */
    public Optional<String> spmInvoiceNumber() {
        return Optional.ofNullable(this.spmInvoiceNumber);
    }
    /**
     * @return Document Status in SPM which depicts current state of invoice
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Invoice associated subscription plan number.
     * 
     */
    public Optional<String> subscriptionNumber() {
        return Optional.ofNullable(this.subscriptionNumber);
    }
    /**
     * @return SPM Invocie creation date
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Invoice Date
     * 
     */
    public Optional<String> timeInvoiceDate() {
        return Optional.ofNullable(this.timeInvoiceDate);
    }
    /**
     * @return SPM Invoice updated date
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return Document Type in SPM like SPM Invoice,SPM Credit Memo etc.,
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return User that updated SPM Invoice
     * 
     */
    public Optional<String> updatedBy() {
        return Optional.ofNullable(this.updatedBy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoicesInvoice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String arInvoices;
        private @Nullable List<GetInvoicesInvoiceBillToAddress> billToAddresses;
        private @Nullable List<GetInvoicesInvoiceBillToContact> billToContacts;
        private @Nullable List<GetInvoicesInvoiceBillToCustomer> billToCustomers;
        private @Nullable String createdBy;
        private @Nullable List<GetInvoicesInvoiceCurrency> currencies;
        private @Nullable List<GetInvoicesInvoiceInvoiceLine> invoiceLines;
        private @Nullable List<GetInvoicesInvoiceOrganization> organizations;
        private @Nullable String paymentMethod;
        private @Nullable List<GetInvoicesInvoicePaymentTerm> paymentTerms;
        private @Nullable String receiptMethod;
        private @Nullable String spmInvoiceNumber;
        private @Nullable String status;
        private @Nullable String subscriptionNumber;
        private @Nullable String timeCreated;
        private @Nullable String timeInvoiceDate;
        private @Nullable String timeUpdated;
        private @Nullable String type;
        private @Nullable String updatedBy;
        public Builder() {}
        public Builder(GetInvoicesInvoice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arInvoices = defaults.arInvoices;
    	      this.billToAddresses = defaults.billToAddresses;
    	      this.billToContacts = defaults.billToContacts;
    	      this.billToCustomers = defaults.billToCustomers;
    	      this.createdBy = defaults.createdBy;
    	      this.currencies = defaults.currencies;
    	      this.invoiceLines = defaults.invoiceLines;
    	      this.organizations = defaults.organizations;
    	      this.paymentMethod = defaults.paymentMethod;
    	      this.paymentTerms = defaults.paymentTerms;
    	      this.receiptMethod = defaults.receiptMethod;
    	      this.spmInvoiceNumber = defaults.spmInvoiceNumber;
    	      this.status = defaults.status;
    	      this.subscriptionNumber = defaults.subscriptionNumber;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeInvoiceDate = defaults.timeInvoiceDate;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
    	      this.updatedBy = defaults.updatedBy;
        }

        @CustomType.Setter
        public Builder arInvoices(@Nullable String arInvoices) {
            this.arInvoices = arInvoices;
            return this;
        }
        @CustomType.Setter
        public Builder billToAddresses(@Nullable List<GetInvoicesInvoiceBillToAddress> billToAddresses) {
            this.billToAddresses = billToAddresses;
            return this;
        }
        public Builder billToAddresses(GetInvoicesInvoiceBillToAddress... billToAddresses) {
            return billToAddresses(List.of(billToAddresses));
        }
        @CustomType.Setter
        public Builder billToContacts(@Nullable List<GetInvoicesInvoiceBillToContact> billToContacts) {
            this.billToContacts = billToContacts;
            return this;
        }
        public Builder billToContacts(GetInvoicesInvoiceBillToContact... billToContacts) {
            return billToContacts(List.of(billToContacts));
        }
        @CustomType.Setter
        public Builder billToCustomers(@Nullable List<GetInvoicesInvoiceBillToCustomer> billToCustomers) {
            this.billToCustomers = billToCustomers;
            return this;
        }
        public Builder billToCustomers(GetInvoicesInvoiceBillToCustomer... billToCustomers) {
            return billToCustomers(List.of(billToCustomers));
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder currencies(@Nullable List<GetInvoicesInvoiceCurrency> currencies) {
            this.currencies = currencies;
            return this;
        }
        public Builder currencies(GetInvoicesInvoiceCurrency... currencies) {
            return currencies(List.of(currencies));
        }
        @CustomType.Setter
        public Builder invoiceLines(@Nullable List<GetInvoicesInvoiceInvoiceLine> invoiceLines) {
            this.invoiceLines = invoiceLines;
            return this;
        }
        public Builder invoiceLines(GetInvoicesInvoiceInvoiceLine... invoiceLines) {
            return invoiceLines(List.of(invoiceLines));
        }
        @CustomType.Setter
        public Builder organizations(@Nullable List<GetInvoicesInvoiceOrganization> organizations) {
            this.organizations = organizations;
            return this;
        }
        public Builder organizations(GetInvoicesInvoiceOrganization... organizations) {
            return organizations(List.of(organizations));
        }
        @CustomType.Setter
        public Builder paymentMethod(@Nullable String paymentMethod) {
            this.paymentMethod = paymentMethod;
            return this;
        }
        @CustomType.Setter
        public Builder paymentTerms(@Nullable List<GetInvoicesInvoicePaymentTerm> paymentTerms) {
            this.paymentTerms = paymentTerms;
            return this;
        }
        public Builder paymentTerms(GetInvoicesInvoicePaymentTerm... paymentTerms) {
            return paymentTerms(List.of(paymentTerms));
        }
        @CustomType.Setter
        public Builder receiptMethod(@Nullable String receiptMethod) {
            this.receiptMethod = receiptMethod;
            return this;
        }
        @CustomType.Setter
        public Builder spmInvoiceNumber(@Nullable String spmInvoiceNumber) {
            this.spmInvoiceNumber = spmInvoiceNumber;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionNumber(@Nullable String subscriptionNumber) {
            this.subscriptionNumber = subscriptionNumber;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeInvoiceDate(@Nullable String timeInvoiceDate) {
            this.timeInvoiceDate = timeInvoiceDate;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(@Nullable String updatedBy) {
            this.updatedBy = updatedBy;
            return this;
        }
        public GetInvoicesInvoice build() {
            final var o = new GetInvoicesInvoice();
            o.arInvoices = arInvoices;
            o.billToAddresses = billToAddresses;
            o.billToContacts = billToContacts;
            o.billToCustomers = billToCustomers;
            o.createdBy = createdBy;
            o.currencies = currencies;
            o.invoiceLines = invoiceLines;
            o.organizations = organizations;
            o.paymentMethod = paymentMethod;
            o.paymentTerms = paymentTerms;
            o.receiptMethod = receiptMethod;
            o.spmInvoiceNumber = spmInvoiceNumber;
            o.status = status;
            o.subscriptionNumber = subscriptionNumber;
            o.timeCreated = timeCreated;
            o.timeInvoiceDate = timeInvoiceDate;
            o.timeUpdated = timeUpdated;
            o.type = type;
            o.updatedBy = updatedBy;
            return o;
        }
    }
}
