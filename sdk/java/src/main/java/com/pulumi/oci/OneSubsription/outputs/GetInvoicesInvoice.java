// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceBillToAddress;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceBillToContact;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceBillToCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceCurrency;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceInvoiceLine;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoiceOrganization;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoicePaymentTerm;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInvoicesInvoice {
    /**
     * @return AR Invoice Numbers comma separated under one invoice
     * 
     */
    private final String arInvoices;
    /**
     * @return Address.
     * 
     */
    private final List<GetInvoicesInvoiceBillToAddress> billToAddresses;
    /**
     * @return User.
     * 
     */
    private final List<GetInvoicesInvoiceBillToContact> billToContacts;
    /**
     * @return Business partner.
     * 
     */
    private final List<GetInvoicesInvoiceBillToCustomer> billToCustomers;
    /**
     * @return User that created the Payment term
     * 
     */
    private final String createdBy;
    /**
     * @return Currency details
     * 
     */
    private final List<GetInvoicesInvoiceCurrency> currencies;
    /**
     * @return Invoice Lines under particular invoice.
     * 
     */
    private final List<GetInvoicesInvoiceInvoiceLine> invoiceLines;
    /**
     * @return Organization details
     * 
     */
    private final List<GetInvoicesInvoiceOrganization> organizations;
    /**
     * @return Payment Method
     * 
     */
    private final String paymentMethod;
    /**
     * @return Payment Term details
     * 
     */
    private final List<GetInvoicesInvoicePaymentTerm> paymentTerms;
    /**
     * @return Receipt Method of Payment Mode
     * 
     */
    private final String receiptMethod;
    /**
     * @return SPM Document Number is an functional identifier for invoice in SPM
     * 
     */
    private final String spmInvoiceNumber;
    /**
     * @return Document Status in SPM which depicts current state of invoice
     * 
     */
    private final String status;
    /**
     * @return Invoice associated subscription plan number.
     * 
     */
    private final String subscriptionNumber;
    /**
     * @return SPM Invocie creation date
     * 
     */
    private final String timeCreated;
    /**
     * @return Invoice Date
     * 
     */
    private final String timeInvoiceDate;
    /**
     * @return SPM Invoice updated date
     * 
     */
    private final String timeUpdated;
    /**
     * @return Document Type in SPM like SPM Invoice,SPM Credit Memo etc.,
     * 
     */
    private final String type;
    /**
     * @return User that updated SPM Invoice
     * 
     */
    private final String updatedBy;

    @CustomType.Constructor
    private GetInvoicesInvoice(
        @CustomType.Parameter("arInvoices") String arInvoices,
        @CustomType.Parameter("billToAddresses") List<GetInvoicesInvoiceBillToAddress> billToAddresses,
        @CustomType.Parameter("billToContacts") List<GetInvoicesInvoiceBillToContact> billToContacts,
        @CustomType.Parameter("billToCustomers") List<GetInvoicesInvoiceBillToCustomer> billToCustomers,
        @CustomType.Parameter("createdBy") String createdBy,
        @CustomType.Parameter("currencies") List<GetInvoicesInvoiceCurrency> currencies,
        @CustomType.Parameter("invoiceLines") List<GetInvoicesInvoiceInvoiceLine> invoiceLines,
        @CustomType.Parameter("organizations") List<GetInvoicesInvoiceOrganization> organizations,
        @CustomType.Parameter("paymentMethod") String paymentMethod,
        @CustomType.Parameter("paymentTerms") List<GetInvoicesInvoicePaymentTerm> paymentTerms,
        @CustomType.Parameter("receiptMethod") String receiptMethod,
        @CustomType.Parameter("spmInvoiceNumber") String spmInvoiceNumber,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("subscriptionNumber") String subscriptionNumber,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeInvoiceDate") String timeInvoiceDate,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("updatedBy") String updatedBy) {
        this.arInvoices = arInvoices;
        this.billToAddresses = billToAddresses;
        this.billToContacts = billToContacts;
        this.billToCustomers = billToCustomers;
        this.createdBy = createdBy;
        this.currencies = currencies;
        this.invoiceLines = invoiceLines;
        this.organizations = organizations;
        this.paymentMethod = paymentMethod;
        this.paymentTerms = paymentTerms;
        this.receiptMethod = receiptMethod;
        this.spmInvoiceNumber = spmInvoiceNumber;
        this.status = status;
        this.subscriptionNumber = subscriptionNumber;
        this.timeCreated = timeCreated;
        this.timeInvoiceDate = timeInvoiceDate;
        this.timeUpdated = timeUpdated;
        this.type = type;
        this.updatedBy = updatedBy;
    }

    /**
     * @return AR Invoice Numbers comma separated under one invoice
     * 
     */
    public String arInvoices() {
        return this.arInvoices;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetInvoicesInvoiceBillToAddress> billToAddresses() {
        return this.billToAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetInvoicesInvoiceBillToContact> billToContacts() {
        return this.billToContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetInvoicesInvoiceBillToCustomer> billToCustomers() {
        return this.billToCustomers;
    }
    /**
     * @return User that created the Payment term
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Currency details
     * 
     */
    public List<GetInvoicesInvoiceCurrency> currencies() {
        return this.currencies;
    }
    /**
     * @return Invoice Lines under particular invoice.
     * 
     */
    public List<GetInvoicesInvoiceInvoiceLine> invoiceLines() {
        return this.invoiceLines;
    }
    /**
     * @return Organization details
     * 
     */
    public List<GetInvoicesInvoiceOrganization> organizations() {
        return this.organizations;
    }
    /**
     * @return Payment Method
     * 
     */
    public String paymentMethod() {
        return this.paymentMethod;
    }
    /**
     * @return Payment Term details
     * 
     */
    public List<GetInvoicesInvoicePaymentTerm> paymentTerms() {
        return this.paymentTerms;
    }
    /**
     * @return Receipt Method of Payment Mode
     * 
     */
    public String receiptMethod() {
        return this.receiptMethod;
    }
    /**
     * @return SPM Document Number is an functional identifier for invoice in SPM
     * 
     */
    public String spmInvoiceNumber() {
        return this.spmInvoiceNumber;
    }
    /**
     * @return Document Status in SPM which depicts current state of invoice
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Invoice associated subscription plan number.
     * 
     */
    public String subscriptionNumber() {
        return this.subscriptionNumber;
    }
    /**
     * @return SPM Invocie creation date
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Invoice Date
     * 
     */
    public String timeInvoiceDate() {
        return this.timeInvoiceDate;
    }
    /**
     * @return SPM Invoice updated date
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Document Type in SPM like SPM Invoice,SPM Credit Memo etc.,
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return User that updated SPM Invoice
     * 
     */
    public String updatedBy() {
        return this.updatedBy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoicesInvoice defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arInvoices;
        private List<GetInvoicesInvoiceBillToAddress> billToAddresses;
        private List<GetInvoicesInvoiceBillToContact> billToContacts;
        private List<GetInvoicesInvoiceBillToCustomer> billToCustomers;
        private String createdBy;
        private List<GetInvoicesInvoiceCurrency> currencies;
        private List<GetInvoicesInvoiceInvoiceLine> invoiceLines;
        private List<GetInvoicesInvoiceOrganization> organizations;
        private String paymentMethod;
        private List<GetInvoicesInvoicePaymentTerm> paymentTerms;
        private String receiptMethod;
        private String spmInvoiceNumber;
        private String status;
        private String subscriptionNumber;
        private String timeCreated;
        private String timeInvoiceDate;
        private String timeUpdated;
        private String type;
        private String updatedBy;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInvoicesInvoice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arInvoices = defaults.arInvoices;
    	      this.billToAddresses = defaults.billToAddresses;
    	      this.billToContacts = defaults.billToContacts;
    	      this.billToCustomers = defaults.billToCustomers;
    	      this.createdBy = defaults.createdBy;
    	      this.currencies = defaults.currencies;
    	      this.invoiceLines = defaults.invoiceLines;
    	      this.organizations = defaults.organizations;
    	      this.paymentMethod = defaults.paymentMethod;
    	      this.paymentTerms = defaults.paymentTerms;
    	      this.receiptMethod = defaults.receiptMethod;
    	      this.spmInvoiceNumber = defaults.spmInvoiceNumber;
    	      this.status = defaults.status;
    	      this.subscriptionNumber = defaults.subscriptionNumber;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeInvoiceDate = defaults.timeInvoiceDate;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
    	      this.updatedBy = defaults.updatedBy;
        }

        public Builder arInvoices(String arInvoices) {
            this.arInvoices = Objects.requireNonNull(arInvoices);
            return this;
        }
        public Builder billToAddresses(List<GetInvoicesInvoiceBillToAddress> billToAddresses) {
            this.billToAddresses = Objects.requireNonNull(billToAddresses);
            return this;
        }
        public Builder billToAddresses(GetInvoicesInvoiceBillToAddress... billToAddresses) {
            return billToAddresses(List.of(billToAddresses));
        }
        public Builder billToContacts(List<GetInvoicesInvoiceBillToContact> billToContacts) {
            this.billToContacts = Objects.requireNonNull(billToContacts);
            return this;
        }
        public Builder billToContacts(GetInvoicesInvoiceBillToContact... billToContacts) {
            return billToContacts(List.of(billToContacts));
        }
        public Builder billToCustomers(List<GetInvoicesInvoiceBillToCustomer> billToCustomers) {
            this.billToCustomers = Objects.requireNonNull(billToCustomers);
            return this;
        }
        public Builder billToCustomers(GetInvoicesInvoiceBillToCustomer... billToCustomers) {
            return billToCustomers(List.of(billToCustomers));
        }
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        public Builder currencies(List<GetInvoicesInvoiceCurrency> currencies) {
            this.currencies = Objects.requireNonNull(currencies);
            return this;
        }
        public Builder currencies(GetInvoicesInvoiceCurrency... currencies) {
            return currencies(List.of(currencies));
        }
        public Builder invoiceLines(List<GetInvoicesInvoiceInvoiceLine> invoiceLines) {
            this.invoiceLines = Objects.requireNonNull(invoiceLines);
            return this;
        }
        public Builder invoiceLines(GetInvoicesInvoiceInvoiceLine... invoiceLines) {
            return invoiceLines(List.of(invoiceLines));
        }
        public Builder organizations(List<GetInvoicesInvoiceOrganization> organizations) {
            this.organizations = Objects.requireNonNull(organizations);
            return this;
        }
        public Builder organizations(GetInvoicesInvoiceOrganization... organizations) {
            return organizations(List.of(organizations));
        }
        public Builder paymentMethod(String paymentMethod) {
            this.paymentMethod = Objects.requireNonNull(paymentMethod);
            return this;
        }
        public Builder paymentTerms(List<GetInvoicesInvoicePaymentTerm> paymentTerms) {
            this.paymentTerms = Objects.requireNonNull(paymentTerms);
            return this;
        }
        public Builder paymentTerms(GetInvoicesInvoicePaymentTerm... paymentTerms) {
            return paymentTerms(List.of(paymentTerms));
        }
        public Builder receiptMethod(String receiptMethod) {
            this.receiptMethod = Objects.requireNonNull(receiptMethod);
            return this;
        }
        public Builder spmInvoiceNumber(String spmInvoiceNumber) {
            this.spmInvoiceNumber = Objects.requireNonNull(spmInvoiceNumber);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder subscriptionNumber(String subscriptionNumber) {
            this.subscriptionNumber = Objects.requireNonNull(subscriptionNumber);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeInvoiceDate(String timeInvoiceDate) {
            this.timeInvoiceDate = Objects.requireNonNull(timeInvoiceDate);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder updatedBy(String updatedBy) {
            this.updatedBy = Objects.requireNonNull(updatedBy);
            return this;
        }        public GetInvoicesInvoice build() {
            return new GetInvoicesInvoice(arInvoices, billToAddresses, billToContacts, billToCustomers, createdBy, currencies, invoiceLines, organizations, paymentMethod, paymentTerms, receiptMethod, spmInvoiceNumber, status, subscriptionNumber, timeCreated, timeInvoiceDate, timeUpdated, type, updatedBy);
        }
    }
}
