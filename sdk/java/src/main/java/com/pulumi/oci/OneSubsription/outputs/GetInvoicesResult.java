// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesFilter;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesInvoice;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInvoicesResult {
    private final String arCustomerTransactionId;
    private final String compartmentId;
    private final @Nullable List<String> fields;
    private final @Nullable List<GetInvoicesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of invoices.
     * 
     */
    private final List<GetInvoicesInvoice> invoices;
    private final @Nullable String timeFrom;
    private final @Nullable String timeTo;

    @CustomType.Constructor
    private GetInvoicesResult(
        @CustomType.Parameter("arCustomerTransactionId") String arCustomerTransactionId,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("fields") @Nullable List<String> fields,
        @CustomType.Parameter("filters") @Nullable List<GetInvoicesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("invoices") List<GetInvoicesInvoice> invoices,
        @CustomType.Parameter("timeFrom") @Nullable String timeFrom,
        @CustomType.Parameter("timeTo") @Nullable String timeTo) {
        this.arCustomerTransactionId = arCustomerTransactionId;
        this.compartmentId = compartmentId;
        this.fields = fields;
        this.filters = filters;
        this.id = id;
        this.invoices = invoices;
        this.timeFrom = timeFrom;
        this.timeTo = timeTo;
    }

    public String arCustomerTransactionId() {
        return this.arCustomerTransactionId;
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<String> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    public List<GetInvoicesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of invoices.
     * 
     */
    public List<GetInvoicesInvoice> invoices() {
        return this.invoices;
    }
    public Optional<String> timeFrom() {
        return Optional.ofNullable(this.timeFrom);
    }
    public Optional<String> timeTo() {
        return Optional.ofNullable(this.timeTo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoicesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String arCustomerTransactionId;
        private String compartmentId;
        private @Nullable List<String> fields;
        private @Nullable List<GetInvoicesFilter> filters;
        private String id;
        private List<GetInvoicesInvoice> invoices;
        private @Nullable String timeFrom;
        private @Nullable String timeTo;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInvoicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arCustomerTransactionId = defaults.arCustomerTransactionId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.fields = defaults.fields;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.invoices = defaults.invoices;
    	      this.timeFrom = defaults.timeFrom;
    	      this.timeTo = defaults.timeTo;
        }

        public Builder arCustomerTransactionId(String arCustomerTransactionId) {
            this.arCustomerTransactionId = Objects.requireNonNull(arCustomerTransactionId);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder fields(@Nullable List<String> fields) {
            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        public Builder filters(@Nullable List<GetInvoicesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetInvoicesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder invoices(List<GetInvoicesInvoice> invoices) {
            this.invoices = Objects.requireNonNull(invoices);
            return this;
        }
        public Builder invoices(GetInvoicesInvoice... invoices) {
            return invoices(List.of(invoices));
        }
        public Builder timeFrom(@Nullable String timeFrom) {
            this.timeFrom = timeFrom;
            return this;
        }
        public Builder timeTo(@Nullable String timeTo) {
            this.timeTo = timeTo;
            return this;
        }        public GetInvoicesResult build() {
            return new GetInvoicesResult(arCustomerTransactionId, compartmentId, fields, filters, id, invoices, timeFrom, timeTo);
        }
    }
}
