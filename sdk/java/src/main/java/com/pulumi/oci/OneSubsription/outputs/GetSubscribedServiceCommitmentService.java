// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscribedServiceCommitmentService {
    /**
     * @return Commitment available amount
     * 
     */
    private String availableAmount;
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    private String fundedAllocationValue;
    /**
     * @return Subscribed service line net amount
     * 
     */
    private String lineNetAmount;
    /**
     * @return Subscribed service quantity
     * 
     */
    private String quantity;
    /**
     * @return Subscribed service end date
     * 
     */
    private String timeEnd;
    /**
     * @return Subscribed service start date
     * 
     */
    private String timeStart;

    private GetSubscribedServiceCommitmentService() {}
    /**
     * @return Commitment available amount
     * 
     */
    public String availableAmount() {
        return this.availableAmount;
    }
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    public String fundedAllocationValue() {
        return this.fundedAllocationValue;
    }
    /**
     * @return Subscribed service line net amount
     * 
     */
    public String lineNetAmount() {
        return this.lineNetAmount;
    }
    /**
     * @return Subscribed service quantity
     * 
     */
    public String quantity() {
        return this.quantity;
    }
    /**
     * @return Subscribed service end date
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Subscribed service start date
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscribedServiceCommitmentService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availableAmount;
        private String fundedAllocationValue;
        private String lineNetAmount;
        private String quantity;
        private String timeEnd;
        private String timeStart;
        public Builder() {}
        public Builder(GetSubscribedServiceCommitmentService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableAmount = defaults.availableAmount;
    	      this.fundedAllocationValue = defaults.fundedAllocationValue;
    	      this.lineNetAmount = defaults.lineNetAmount;
    	      this.quantity = defaults.quantity;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder availableAmount(String availableAmount) {
            if (availableAmount == null) {
              throw new MissingRequiredPropertyException("GetSubscribedServiceCommitmentService", "availableAmount");
            }
            this.availableAmount = availableAmount;
            return this;
        }
        @CustomType.Setter
        public Builder fundedAllocationValue(String fundedAllocationValue) {
            if (fundedAllocationValue == null) {
              throw new MissingRequiredPropertyException("GetSubscribedServiceCommitmentService", "fundedAllocationValue");
            }
            this.fundedAllocationValue = fundedAllocationValue;
            return this;
        }
        @CustomType.Setter
        public Builder lineNetAmount(String lineNetAmount) {
            if (lineNetAmount == null) {
              throw new MissingRequiredPropertyException("GetSubscribedServiceCommitmentService", "lineNetAmount");
            }
            this.lineNetAmount = lineNetAmount;
            return this;
        }
        @CustomType.Setter
        public Builder quantity(String quantity) {
            if (quantity == null) {
              throw new MissingRequiredPropertyException("GetSubscribedServiceCommitmentService", "quantity");
            }
            this.quantity = quantity;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(String timeEnd) {
            if (timeEnd == null) {
              throw new MissingRequiredPropertyException("GetSubscribedServiceCommitmentService", "timeEnd");
            }
            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            if (timeStart == null) {
              throw new MissingRequiredPropertyException("GetSubscribedServiceCommitmentService", "timeStart");
            }
            this.timeStart = timeStart;
            return this;
        }
        public GetSubscribedServiceCommitmentService build() {
            final var _resultValue = new GetSubscribedServiceCommitmentService();
            _resultValue.availableAmount = availableAmount;
            _resultValue.fundedAllocationValue = fundedAllocationValue;
            _resultValue.lineNetAmount = lineNetAmount;
            _resultValue.quantity = quantity;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeStart = timeStart;
            return _resultValue;
        }
    }
}
