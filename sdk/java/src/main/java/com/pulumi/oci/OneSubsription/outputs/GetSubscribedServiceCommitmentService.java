// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscribedServiceCommitmentService {
    /**
     * @return Commitment available amount
     * 
     */
    private @Nullable String availableAmount;
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    private @Nullable String fundedAllocationValue;
    /**
     * @return Subscribed service line net amount
     * 
     */
    private @Nullable String lineNetAmount;
    /**
     * @return Subscribed service quantity
     * 
     */
    private @Nullable String quantity;
    /**
     * @return Subscribed service end date
     * 
     */
    private @Nullable String timeEnd;
    /**
     * @return Subscribed service start date
     * 
     */
    private @Nullable String timeStart;

    private GetSubscribedServiceCommitmentService() {}
    /**
     * @return Commitment available amount
     * 
     */
    public Optional<String> availableAmount() {
        return Optional.ofNullable(this.availableAmount);
    }
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    public Optional<String> fundedAllocationValue() {
        return Optional.ofNullable(this.fundedAllocationValue);
    }
    /**
     * @return Subscribed service line net amount
     * 
     */
    public Optional<String> lineNetAmount() {
        return Optional.ofNullable(this.lineNetAmount);
    }
    /**
     * @return Subscribed service quantity
     * 
     */
    public Optional<String> quantity() {
        return Optional.ofNullable(this.quantity);
    }
    /**
     * @return Subscribed service end date
     * 
     */
    public Optional<String> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }
    /**
     * @return Subscribed service start date
     * 
     */
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscribedServiceCommitmentService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availableAmount;
        private @Nullable String fundedAllocationValue;
        private @Nullable String lineNetAmount;
        private @Nullable String quantity;
        private @Nullable String timeEnd;
        private @Nullable String timeStart;
        public Builder() {}
        public Builder(GetSubscribedServiceCommitmentService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableAmount = defaults.availableAmount;
    	      this.fundedAllocationValue = defaults.fundedAllocationValue;
    	      this.lineNetAmount = defaults.lineNetAmount;
    	      this.quantity = defaults.quantity;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder availableAmount(@Nullable String availableAmount) {
            this.availableAmount = availableAmount;
            return this;
        }
        @CustomType.Setter
        public Builder fundedAllocationValue(@Nullable String fundedAllocationValue) {
            this.fundedAllocationValue = fundedAllocationValue;
            return this;
        }
        @CustomType.Setter
        public Builder lineNetAmount(@Nullable String lineNetAmount) {
            this.lineNetAmount = lineNetAmount;
            return this;
        }
        @CustomType.Setter
        public Builder quantity(@Nullable String quantity) {
            this.quantity = quantity;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(@Nullable String timeEnd) {
            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(@Nullable String timeStart) {
            this.timeStart = timeStart;
            return this;
        }
        public GetSubscribedServiceCommitmentService build() {
            final var o = new GetSubscribedServiceCommitmentService();
            o.availableAmount = availableAmount;
            o.fundedAllocationValue = fundedAllocationValue;
            o.lineNetAmount = lineNetAmount;
            o.quantity = quantity;
            o.timeEnd = timeEnd;
            o.timeStart = timeStart;
            return o;
        }
    }
}
