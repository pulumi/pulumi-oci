// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceRateCardCurrency;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceRateCardProduct;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceRateCardRateCardTier;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSubscribedServiceRateCard {
    /**
     * @return Currency details
     * 
     */
    private final List<GetSubscribedServiceRateCardCurrency> currencies;
    /**
     * @return Rate card discretionary discount percentage
     * 
     */
    private final String discretionaryDiscountPercentage;
    /**
     * @return Rate card price tier flag
     * 
     */
    private final Boolean isTier;
    /**
     * @return Rate card tier net unit price
     * 
     */
    private final String netUnitPrice;
    /**
     * @return Rate card tier overage price
     * 
     */
    private final String overagePrice;
    /**
     * @return Product description
     * 
     */
    private final List<GetSubscribedServiceRateCardProduct> products;
    /**
     * @return List of tiered rate card prices
     * 
     */
    private final List<GetSubscribedServiceRateCardRateCardTier> rateCardTiers;
    /**
     * @return The Subscribed Service Id
     * 
     */
    private final String subscribedServiceId;
    /**
     * @return Subscribed service end date
     * 
     */
    private final String timeEnd;
    /**
     * @return Subscribed service start date
     * 
     */
    private final String timeStart;

    @CustomType.Constructor
    private GetSubscribedServiceRateCard(
        @CustomType.Parameter("currencies") List<GetSubscribedServiceRateCardCurrency> currencies,
        @CustomType.Parameter("discretionaryDiscountPercentage") String discretionaryDiscountPercentage,
        @CustomType.Parameter("isTier") Boolean isTier,
        @CustomType.Parameter("netUnitPrice") String netUnitPrice,
        @CustomType.Parameter("overagePrice") String overagePrice,
        @CustomType.Parameter("products") List<GetSubscribedServiceRateCardProduct> products,
        @CustomType.Parameter("rateCardTiers") List<GetSubscribedServiceRateCardRateCardTier> rateCardTiers,
        @CustomType.Parameter("subscribedServiceId") String subscribedServiceId,
        @CustomType.Parameter("timeEnd") String timeEnd,
        @CustomType.Parameter("timeStart") String timeStart) {
        this.currencies = currencies;
        this.discretionaryDiscountPercentage = discretionaryDiscountPercentage;
        this.isTier = isTier;
        this.netUnitPrice = netUnitPrice;
        this.overagePrice = overagePrice;
        this.products = products;
        this.rateCardTiers = rateCardTiers;
        this.subscribedServiceId = subscribedServiceId;
        this.timeEnd = timeEnd;
        this.timeStart = timeStart;
    }

    /**
     * @return Currency details
     * 
     */
    public List<GetSubscribedServiceRateCardCurrency> currencies() {
        return this.currencies;
    }
    /**
     * @return Rate card discretionary discount percentage
     * 
     */
    public String discretionaryDiscountPercentage() {
        return this.discretionaryDiscountPercentage;
    }
    /**
     * @return Rate card price tier flag
     * 
     */
    public Boolean isTier() {
        return this.isTier;
    }
    /**
     * @return Rate card tier net unit price
     * 
     */
    public String netUnitPrice() {
        return this.netUnitPrice;
    }
    /**
     * @return Rate card tier overage price
     * 
     */
    public String overagePrice() {
        return this.overagePrice;
    }
    /**
     * @return Product description
     * 
     */
    public List<GetSubscribedServiceRateCardProduct> products() {
        return this.products;
    }
    /**
     * @return List of tiered rate card prices
     * 
     */
    public List<GetSubscribedServiceRateCardRateCardTier> rateCardTiers() {
        return this.rateCardTiers;
    }
    /**
     * @return The Subscribed Service Id
     * 
     */
    public String subscribedServiceId() {
        return this.subscribedServiceId;
    }
    /**
     * @return Subscribed service end date
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Subscribed service start date
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscribedServiceRateCard defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetSubscribedServiceRateCardCurrency> currencies;
        private String discretionaryDiscountPercentage;
        private Boolean isTier;
        private String netUnitPrice;
        private String overagePrice;
        private List<GetSubscribedServiceRateCardProduct> products;
        private List<GetSubscribedServiceRateCardRateCardTier> rateCardTiers;
        private String subscribedServiceId;
        private String timeEnd;
        private String timeStart;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubscribedServiceRateCard defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currencies = defaults.currencies;
    	      this.discretionaryDiscountPercentage = defaults.discretionaryDiscountPercentage;
    	      this.isTier = defaults.isTier;
    	      this.netUnitPrice = defaults.netUnitPrice;
    	      this.overagePrice = defaults.overagePrice;
    	      this.products = defaults.products;
    	      this.rateCardTiers = defaults.rateCardTiers;
    	      this.subscribedServiceId = defaults.subscribedServiceId;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        public Builder currencies(List<GetSubscribedServiceRateCardCurrency> currencies) {
            this.currencies = Objects.requireNonNull(currencies);
            return this;
        }
        public Builder currencies(GetSubscribedServiceRateCardCurrency... currencies) {
            return currencies(List.of(currencies));
        }
        public Builder discretionaryDiscountPercentage(String discretionaryDiscountPercentage) {
            this.discretionaryDiscountPercentage = Objects.requireNonNull(discretionaryDiscountPercentage);
            return this;
        }
        public Builder isTier(Boolean isTier) {
            this.isTier = Objects.requireNonNull(isTier);
            return this;
        }
        public Builder netUnitPrice(String netUnitPrice) {
            this.netUnitPrice = Objects.requireNonNull(netUnitPrice);
            return this;
        }
        public Builder overagePrice(String overagePrice) {
            this.overagePrice = Objects.requireNonNull(overagePrice);
            return this;
        }
        public Builder products(List<GetSubscribedServiceRateCardProduct> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(GetSubscribedServiceRateCardProduct... products) {
            return products(List.of(products));
        }
        public Builder rateCardTiers(List<GetSubscribedServiceRateCardRateCardTier> rateCardTiers) {
            this.rateCardTiers = Objects.requireNonNull(rateCardTiers);
            return this;
        }
        public Builder rateCardTiers(GetSubscribedServiceRateCardRateCardTier... rateCardTiers) {
            return rateCardTiers(List.of(rateCardTiers));
        }
        public Builder subscribedServiceId(String subscribedServiceId) {
            this.subscribedServiceId = Objects.requireNonNull(subscribedServiceId);
            return this;
        }
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }        public GetSubscribedServiceRateCard build() {
            return new GetSubscribedServiceRateCard(currencies, discretionaryDiscountPercentage, isTier, netUnitPrice, overagePrice, products, rateCardTiers, subscribedServiceId, timeEnd, timeStart);
        }
    }
}
