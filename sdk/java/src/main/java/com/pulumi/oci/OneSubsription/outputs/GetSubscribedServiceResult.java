// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceBillToAddress;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceBillToContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceBillToCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceCommitmentService;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceEndUserAddress;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceEndUserContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceEndUserCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicePaymentTerm;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceProduct;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceRateCard;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceResellerAddress;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceResellerContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceResellerCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceServiceToAddress;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceServiceToContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceServiceToCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceSoldToContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceSoldToCustomer;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscribedServiceResult {
    /**
     * @return Subscribed service admin email id
     * 
     */
    private String adminEmail;
    /**
     * @return Subscribed service agreement ID
     * 
     */
    private String agreementId;
    /**
     * @return Subscribed service agrrement name
     * 
     */
    private String agreementName;
    /**
     * @return Subscribed service agrrement type
     * 
     */
    private String agreementType;
    /**
     * @return Commitment available amount
     * 
     */
    private String availableAmount;
    /**
     * @return Address.
     * 
     */
    private List<GetSubscribedServiceBillToAddress> billToAddresses;
    /**
     * @return User.
     * 
     */
    private List<GetSubscribedServiceBillToContact> billToContacts;
    /**
     * @return Business partner.
     * 
     */
    private List<GetSubscribedServiceBillToCustomer> billToCustomers;
    /**
     * @return Subscribed service invoice frequency
     * 
     */
    private String billingFrequency;
    /**
     * @return Booking Opportunity Number of Subscribed Service
     * 
     */
    private String bookingOptyNumber;
    /**
     * @return Subscribed service buyer email id
     * 
     */
    private String buyerEmail;
    /**
     * @return Subscribed service commitment schedule Id
     * 
     */
    private String commitmentScheduleId;
    /**
     * @return List of Commitment services of a line
     * 
     */
    private List<GetSubscribedServiceCommitmentService> commitmentServices;
    /**
     * @return User that created the Payment term
     * 
     */
    private String createdBy;
    /**
     * @return Subscribed service credit percentage
     * 
     */
    private String creditPercentage;
    /**
     * @return Subscribed service CSI number
     * 
     */
    private String csi;
    /**
     * @return Identifier for a customer&#39;s transactions for purchase of ay oracle services
     * 
     */
    private String customerTransactionReference;
    /**
     * @return Subscribed service data center
     * 
     */
    private String dataCenter;
    /**
     * @return Subscribed service data center region
     * 
     */
    private String dataCenterRegion;
    /**
     * @return Subscribed service eligible to renew field
     * 
     */
    private String eligibleToRenew;
    /**
     * @return Address.
     * 
     */
    private List<GetSubscribedServiceEndUserAddress> endUserAddresses;
    /**
     * @return User.
     * 
     */
    private List<GetSubscribedServiceEndUserContact> endUserContacts;
    /**
     * @return Business partner.
     * 
     */
    private List<GetSubscribedServiceEndUserCustomer> endUserCustomers;
    private @Nullable List<String> fields;
    /**
     * @return Subscribed service fulfillment set
     * 
     */
    private String fulfillmentSet;
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    private String fundedAllocationValue;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Indicates if a service can recieve usages and consequently have available amounts computed
     * 
     */
    private Boolean isAllowance;
    /**
     * @return If true compares rate between ratecard and the active pricelist and minimum rate would be fetched
     * 
     */
    private Boolean isCapToPriceList;
    /**
     * @return Used in context of service credit lines
     * 
     */
    private Boolean isCreditEnabled;
    /**
     * @return Indicator on whether or not there has been usage for the subscribed service
     * 
     */
    private Boolean isHavingUsage;
    /**
     * @return Subscribed service intent to pay flag
     * 
     */
    private Boolean isIntentToPay;
    /**
     * @return Subscribed service payg flag
     * 
     */
    private Boolean isPayg;
    /**
     * @return Indicates if the Subscribed service has a single ratecard
     * 
     */
    private Boolean isSingleRateCard;
    /**
     * @return Indicates if the commitment lines can have different quantities
     * 
     */
    private Boolean isVariableCommitment;
    /**
     * @return Subscribed service line net amount
     * 
     */
    private String lineNetAmount;
    /**
     * @return Subscribed service Major Set
     * 
     */
    private String majorSet;
    /**
     * @return Rate card tier net unit price
     * 
     */
    private String netUnitPrice;
    /**
     * @return Subscribed service operation type
     * 
     */
    private String operationType;
    /**
     * @return Sales Order Header associated to the subscribed service
     * 
     */
    private String orderHeaderId;
    /**
     * @return Sales Order Line Id associated to the subscribed service
     * 
     */
    private String orderLineId;
    /**
     * @return Sales Order Line Number associated to the subscribed service
     * 
     */
    private Integer orderLineNumber;
    /**
     * @return Sales Order Number associated to the subscribed service
     * 
     */
    private String orderNumber;
    /**
     * @return Order Type of Subscribed Service
     * 
     */
    private String orderType;
    /**
     * @return Subscribed service Promotion Amount
     * 
     */
    private String originalPromoAmount;
    /**
     * @return Overage Bill To of Subscribed Service
     * 
     */
    private String overageBillTo;
    /**
     * @return Subscribed service Overage Discount Percentage
     * 
     */
    private String overageDiscountPercentage;
    /**
     * @return Overage Policy of Subscribed Service
     * 
     */
    private String overagePolicy;
    /**
     * @return Subscribed service partner credit amount
     * 
     */
    private String partnerCreditAmount;
    /**
     * @return This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
     * 
     */
    private String partnerTransactionType;
    /**
     * @return Pay As You Go policy of Subscribed Service (Can be null - indicating no payg policy)
     * 
     */
    private String paygPolicy;
    /**
     * @return Payment Method of Subscribed Service
     * 
     */
    private String paymentMethod;
    /**
     * @return Payment Number of Subscribed Service
     * 
     */
    private String paymentNumber;
    /**
     * @return Payment Term details
     * 
     */
    private List<GetSubscribedServicePaymentTerm> paymentTerms;
    /**
     * @return Indicates the period for which the commitment amount can be utilised exceeding which the amount lapses. Also used in calculation of total contract line value
     * 
     */
    private String pricePeriod;
    /**
     * @return Subscribed service pricing model
     * 
     */
    private String pricingModel;
    /**
     * @return Product description
     * 
     */
    private List<GetSubscribedServiceProduct> products;
    /**
     * @return Subscribed service program type
     * 
     */
    private String programType;
    /**
     * @return Not null if this service has an associated promotion line in SPM. Contains the line identifier from Order Management of  the associated promo line.
     * 
     */
    private String promoOrderLineId;
    /**
     * @return Subscribed service promotion type
     * 
     */
    private String promoType;
    /**
     * @return Promotion Pricing Type of Subscribed Service (Can be null - indicating no promotion pricing)
     * 
     */
    private String promotionPricingType;
    /**
     * @return Subscribed service provisioning source
     * 
     */
    private String provisioningSource;
    /**
     * @return Subscribed service quantity
     * 
     */
    private String quantity;
    /**
     * @return Subscribed service Rate Card Discount Percentage
     * 
     */
    private String rateCardDiscountPercentage;
    /**
     * @return List of Rate Cards of a Subscribed Service
     * 
     */
    private List<GetSubscribedServiceRateCard> rateCards;
    /**
     * @return SPM Ratecard Type
     * 
     */
    private String ratecardType;
    /**
     * @return Subscribed service Opportunity Id
     * 
     */
    private String renewalOptyId;
    /**
     * @return Renewal Opportunity Number of Subscribed Service
     * 
     */
    private String renewalOptyNumber;
    /**
     * @return Renewal Opportunity Type of Subscribed Service
     * 
     */
    private String renewalOptyType;
    /**
     * @return SPM renewed Subscription ID
     * 
     */
    private String renewedSubscribedServiceId;
    /**
     * @return Address.
     * 
     */
    private List<GetSubscribedServiceResellerAddress> resellerAddresses;
    /**
     * @return User.
     * 
     */
    private List<GetSubscribedServiceResellerContact> resellerContacts;
    /**
     * @return Business partner.
     * 
     */
    private List<GetSubscribedServiceResellerCustomer> resellerCustomers;
    /**
     * @return Subscribed service Revenue Line Id
     * 
     */
    private String revenueLineId;
    /**
     * @return Revenue Line NUmber of Subscribed Service
     * 
     */
    private String revenueLineNumber;
    /**
     * @return Subscribed service Revised ARR
     * 
     */
    private String revisedArrInLc;
    /**
     * @return Subscribed service Revised ARR in Standard Currency
     * 
     */
    private String revisedArrInSc;
    /**
     * @return Subscribed service sales account party id
     * 
     */
    private String salesAccountPartyId;
    /**
     * @return Sales Channel of Subscribed Service
     * 
     */
    private String salesChannel;
    /**
     * @return Subscribed service line number
     * 
     */
    private String serialNumber;
    /**
     * @return Address.
     * 
     */
    private List<GetSubscribedServiceServiceToAddress> serviceToAddresses;
    /**
     * @return User.
     * 
     */
    private List<GetSubscribedServiceServiceToContact> serviceToContacts;
    /**
     * @return Business partner.
     * 
     */
    private List<GetSubscribedServiceServiceToCustomer> serviceToCustomers;
    /**
     * @return User.
     * 
     */
    private List<GetSubscribedServiceSoldToContact> soldToContacts;
    /**
     * @return Business partner.
     * 
     */
    private List<GetSubscribedServiceSoldToCustomer> soldToCustomers;
    /**
     * @return Subscribed service start date type
     * 
     */
    private String startDateType;
    /**
     * @return Subscribed service status
     * 
     */
    private String status;
    /**
     * @return SPM internal Subscribed Service ID
     * 
     */
    private String subscribedServiceId;
    /**
     * @return Subscription ID associated to the subscribed service
     * 
     */
    private String subscriptionId;
    /**
     * @return Subscribed service source
     * 
     */
    private String subscriptionSource;
    /**
     * @return Subscribed service System ARR
     * 
     */
    private String systemArrInLc;
    /**
     * @return Subscribed service System ARR in Standard Currency
     * 
     */
    private String systemArrInSc;
    /**
     * @return Subscribed service System ATR-ARR
     * 
     */
    private String systemAtrArrInLc;
    /**
     * @return Subscribed service System ATR-ARR in Standard Currency
     * 
     */
    private String systemAtrArrInSc;
    /**
     * @return Term value in Months
     * 
     */
    private String termValue;
    /**
     * @return Term value UOM
     * 
     */
    private String termValueUom;
    /**
     * @return Subscribed service agrrement end date
     * 
     */
    private String timeAgreementEnd;
    /**
     * @return Subscribed service creation date
     * 
     */
    private String timeCreated;
    /**
     * @return Subscribed service customer config date
     * 
     */
    private String timeCustomerConfig;
    /**
     * @return Subscribed service end date
     * 
     */
    private String timeEnd;
    /**
     * @return Subscribed service Major Set End date
     * 
     */
    private String timeMajorsetEnd;
    /**
     * @return Subscribed service Major Set Start date
     * 
     */
    private String timeMajorsetStart;
    /**
     * @return Subscribed service payment expiry date
     * 
     */
    private String timePaymentExpiry;
    /**
     * @return Subscribed service provisioning date
     * 
     */
    private String timeProvisioned;
    /**
     * @return Subscribed service service configuration email sent date
     * 
     */
    private String timeServiceConfigurationEmailSent;
    /**
     * @return Subscribed service start date
     * 
     */
    private String timeStart;
    /**
     * @return Subscribed service last update date
     * 
     */
    private String timeUpdated;
    /**
     * @return Subscribed service welcome email sent date
     * 
     */
    private String timeWelcomeEmailSent;
    /**
     * @return Subscribed service total value
     * 
     */
    private String totalValue;
    /**
     * @return Subscribed service Transaction Extension Id
     * 
     */
    private String transactionExtensionId;
    /**
     * @return Subscribed Service line type
     * 
     */
    private String type;
    /**
     * @return User that updated the subscribed service
     * 
     */
    private String updatedBy;
    /**
     * @return Subscribed service used amount
     * 
     */
    private String usedAmount;

    private GetSubscribedServiceResult() {}
    /**
     * @return Subscribed service admin email id
     * 
     */
    public String adminEmail() {
        return this.adminEmail;
    }
    /**
     * @return Subscribed service agreement ID
     * 
     */
    public String agreementId() {
        return this.agreementId;
    }
    /**
     * @return Subscribed service agrrement name
     * 
     */
    public String agreementName() {
        return this.agreementName;
    }
    /**
     * @return Subscribed service agrrement type
     * 
     */
    public String agreementType() {
        return this.agreementType;
    }
    /**
     * @return Commitment available amount
     * 
     */
    public String availableAmount() {
        return this.availableAmount;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetSubscribedServiceBillToAddress> billToAddresses() {
        return this.billToAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServiceBillToContact> billToContacts() {
        return this.billToContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServiceBillToCustomer> billToCustomers() {
        return this.billToCustomers;
    }
    /**
     * @return Subscribed service invoice frequency
     * 
     */
    public String billingFrequency() {
        return this.billingFrequency;
    }
    /**
     * @return Booking Opportunity Number of Subscribed Service
     * 
     */
    public String bookingOptyNumber() {
        return this.bookingOptyNumber;
    }
    /**
     * @return Subscribed service buyer email id
     * 
     */
    public String buyerEmail() {
        return this.buyerEmail;
    }
    /**
     * @return Subscribed service commitment schedule Id
     * 
     */
    public String commitmentScheduleId() {
        return this.commitmentScheduleId;
    }
    /**
     * @return List of Commitment services of a line
     * 
     */
    public List<GetSubscribedServiceCommitmentService> commitmentServices() {
        return this.commitmentServices;
    }
    /**
     * @return User that created the Payment term
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Subscribed service credit percentage
     * 
     */
    public String creditPercentage() {
        return this.creditPercentage;
    }
    /**
     * @return Subscribed service CSI number
     * 
     */
    public String csi() {
        return this.csi;
    }
    /**
     * @return Identifier for a customer&#39;s transactions for purchase of ay oracle services
     * 
     */
    public String customerTransactionReference() {
        return this.customerTransactionReference;
    }
    /**
     * @return Subscribed service data center
     * 
     */
    public String dataCenter() {
        return this.dataCenter;
    }
    /**
     * @return Subscribed service data center region
     * 
     */
    public String dataCenterRegion() {
        return this.dataCenterRegion;
    }
    /**
     * @return Subscribed service eligible to renew field
     * 
     */
    public String eligibleToRenew() {
        return this.eligibleToRenew;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetSubscribedServiceEndUserAddress> endUserAddresses() {
        return this.endUserAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServiceEndUserContact> endUserContacts() {
        return this.endUserContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServiceEndUserCustomer> endUserCustomers() {
        return this.endUserCustomers;
    }
    public List<String> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    /**
     * @return Subscribed service fulfillment set
     * 
     */
    public String fulfillmentSet() {
        return this.fulfillmentSet;
    }
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    public String fundedAllocationValue() {
        return this.fundedAllocationValue;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if a service can recieve usages and consequently have available amounts computed
     * 
     */
    public Boolean isAllowance() {
        return this.isAllowance;
    }
    /**
     * @return If true compares rate between ratecard and the active pricelist and minimum rate would be fetched
     * 
     */
    public Boolean isCapToPriceList() {
        return this.isCapToPriceList;
    }
    /**
     * @return Used in context of service credit lines
     * 
     */
    public Boolean isCreditEnabled() {
        return this.isCreditEnabled;
    }
    /**
     * @return Indicator on whether or not there has been usage for the subscribed service
     * 
     */
    public Boolean isHavingUsage() {
        return this.isHavingUsage;
    }
    /**
     * @return Subscribed service intent to pay flag
     * 
     */
    public Boolean isIntentToPay() {
        return this.isIntentToPay;
    }
    /**
     * @return Subscribed service payg flag
     * 
     */
    public Boolean isPayg() {
        return this.isPayg;
    }
    /**
     * @return Indicates if the Subscribed service has a single ratecard
     * 
     */
    public Boolean isSingleRateCard() {
        return this.isSingleRateCard;
    }
    /**
     * @return Indicates if the commitment lines can have different quantities
     * 
     */
    public Boolean isVariableCommitment() {
        return this.isVariableCommitment;
    }
    /**
     * @return Subscribed service line net amount
     * 
     */
    public String lineNetAmount() {
        return this.lineNetAmount;
    }
    /**
     * @return Subscribed service Major Set
     * 
     */
    public String majorSet() {
        return this.majorSet;
    }
    /**
     * @return Rate card tier net unit price
     * 
     */
    public String netUnitPrice() {
        return this.netUnitPrice;
    }
    /**
     * @return Subscribed service operation type
     * 
     */
    public String operationType() {
        return this.operationType;
    }
    /**
     * @return Sales Order Header associated to the subscribed service
     * 
     */
    public String orderHeaderId() {
        return this.orderHeaderId;
    }
    /**
     * @return Sales Order Line Id associated to the subscribed service
     * 
     */
    public String orderLineId() {
        return this.orderLineId;
    }
    /**
     * @return Sales Order Line Number associated to the subscribed service
     * 
     */
    public Integer orderLineNumber() {
        return this.orderLineNumber;
    }
    /**
     * @return Sales Order Number associated to the subscribed service
     * 
     */
    public String orderNumber() {
        return this.orderNumber;
    }
    /**
     * @return Order Type of Subscribed Service
     * 
     */
    public String orderType() {
        return this.orderType;
    }
    /**
     * @return Subscribed service Promotion Amount
     * 
     */
    public String originalPromoAmount() {
        return this.originalPromoAmount;
    }
    /**
     * @return Overage Bill To of Subscribed Service
     * 
     */
    public String overageBillTo() {
        return this.overageBillTo;
    }
    /**
     * @return Subscribed service Overage Discount Percentage
     * 
     */
    public String overageDiscountPercentage() {
        return this.overageDiscountPercentage;
    }
    /**
     * @return Overage Policy of Subscribed Service
     * 
     */
    public String overagePolicy() {
        return this.overagePolicy;
    }
    /**
     * @return Subscribed service partner credit amount
     * 
     */
    public String partnerCreditAmount() {
        return this.partnerCreditAmount;
    }
    /**
     * @return This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
     * 
     */
    public String partnerTransactionType() {
        return this.partnerTransactionType;
    }
    /**
     * @return Pay As You Go policy of Subscribed Service (Can be null - indicating no payg policy)
     * 
     */
    public String paygPolicy() {
        return this.paygPolicy;
    }
    /**
     * @return Payment Method of Subscribed Service
     * 
     */
    public String paymentMethod() {
        return this.paymentMethod;
    }
    /**
     * @return Payment Number of Subscribed Service
     * 
     */
    public String paymentNumber() {
        return this.paymentNumber;
    }
    /**
     * @return Payment Term details
     * 
     */
    public List<GetSubscribedServicePaymentTerm> paymentTerms() {
        return this.paymentTerms;
    }
    /**
     * @return Indicates the period for which the commitment amount can be utilised exceeding which the amount lapses. Also used in calculation of total contract line value
     * 
     */
    public String pricePeriod() {
        return this.pricePeriod;
    }
    /**
     * @return Subscribed service pricing model
     * 
     */
    public String pricingModel() {
        return this.pricingModel;
    }
    /**
     * @return Product description
     * 
     */
    public List<GetSubscribedServiceProduct> products() {
        return this.products;
    }
    /**
     * @return Subscribed service program type
     * 
     */
    public String programType() {
        return this.programType;
    }
    /**
     * @return Not null if this service has an associated promotion line in SPM. Contains the line identifier from Order Management of  the associated promo line.
     * 
     */
    public String promoOrderLineId() {
        return this.promoOrderLineId;
    }
    /**
     * @return Subscribed service promotion type
     * 
     */
    public String promoType() {
        return this.promoType;
    }
    /**
     * @return Promotion Pricing Type of Subscribed Service (Can be null - indicating no promotion pricing)
     * 
     */
    public String promotionPricingType() {
        return this.promotionPricingType;
    }
    /**
     * @return Subscribed service provisioning source
     * 
     */
    public String provisioningSource() {
        return this.provisioningSource;
    }
    /**
     * @return Subscribed service quantity
     * 
     */
    public String quantity() {
        return this.quantity;
    }
    /**
     * @return Subscribed service Rate Card Discount Percentage
     * 
     */
    public String rateCardDiscountPercentage() {
        return this.rateCardDiscountPercentage;
    }
    /**
     * @return List of Rate Cards of a Subscribed Service
     * 
     */
    public List<GetSubscribedServiceRateCard> rateCards() {
        return this.rateCards;
    }
    /**
     * @return SPM Ratecard Type
     * 
     */
    public String ratecardType() {
        return this.ratecardType;
    }
    /**
     * @return Subscribed service Opportunity Id
     * 
     */
    public String renewalOptyId() {
        return this.renewalOptyId;
    }
    /**
     * @return Renewal Opportunity Number of Subscribed Service
     * 
     */
    public String renewalOptyNumber() {
        return this.renewalOptyNumber;
    }
    /**
     * @return Renewal Opportunity Type of Subscribed Service
     * 
     */
    public String renewalOptyType() {
        return this.renewalOptyType;
    }
    /**
     * @return SPM renewed Subscription ID
     * 
     */
    public String renewedSubscribedServiceId() {
        return this.renewedSubscribedServiceId;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetSubscribedServiceResellerAddress> resellerAddresses() {
        return this.resellerAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServiceResellerContact> resellerContacts() {
        return this.resellerContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServiceResellerCustomer> resellerCustomers() {
        return this.resellerCustomers;
    }
    /**
     * @return Subscribed service Revenue Line Id
     * 
     */
    public String revenueLineId() {
        return this.revenueLineId;
    }
    /**
     * @return Revenue Line NUmber of Subscribed Service
     * 
     */
    public String revenueLineNumber() {
        return this.revenueLineNumber;
    }
    /**
     * @return Subscribed service Revised ARR
     * 
     */
    public String revisedArrInLc() {
        return this.revisedArrInLc;
    }
    /**
     * @return Subscribed service Revised ARR in Standard Currency
     * 
     */
    public String revisedArrInSc() {
        return this.revisedArrInSc;
    }
    /**
     * @return Subscribed service sales account party id
     * 
     */
    public String salesAccountPartyId() {
        return this.salesAccountPartyId;
    }
    /**
     * @return Sales Channel of Subscribed Service
     * 
     */
    public String salesChannel() {
        return this.salesChannel;
    }
    /**
     * @return Subscribed service line number
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetSubscribedServiceServiceToAddress> serviceToAddresses() {
        return this.serviceToAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServiceServiceToContact> serviceToContacts() {
        return this.serviceToContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServiceServiceToCustomer> serviceToCustomers() {
        return this.serviceToCustomers;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServiceSoldToContact> soldToContacts() {
        return this.soldToContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServiceSoldToCustomer> soldToCustomers() {
        return this.soldToCustomers;
    }
    /**
     * @return Subscribed service start date type
     * 
     */
    public String startDateType() {
        return this.startDateType;
    }
    /**
     * @return Subscribed service status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return SPM internal Subscribed Service ID
     * 
     */
    public String subscribedServiceId() {
        return this.subscribedServiceId;
    }
    /**
     * @return Subscription ID associated to the subscribed service
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return Subscribed service source
     * 
     */
    public String subscriptionSource() {
        return this.subscriptionSource;
    }
    /**
     * @return Subscribed service System ARR
     * 
     */
    public String systemArrInLc() {
        return this.systemArrInLc;
    }
    /**
     * @return Subscribed service System ARR in Standard Currency
     * 
     */
    public String systemArrInSc() {
        return this.systemArrInSc;
    }
    /**
     * @return Subscribed service System ATR-ARR
     * 
     */
    public String systemAtrArrInLc() {
        return this.systemAtrArrInLc;
    }
    /**
     * @return Subscribed service System ATR-ARR in Standard Currency
     * 
     */
    public String systemAtrArrInSc() {
        return this.systemAtrArrInSc;
    }
    /**
     * @return Term value in Months
     * 
     */
    public String termValue() {
        return this.termValue;
    }
    /**
     * @return Term value UOM
     * 
     */
    public String termValueUom() {
        return this.termValueUom;
    }
    /**
     * @return Subscribed service agrrement end date
     * 
     */
    public String timeAgreementEnd() {
        return this.timeAgreementEnd;
    }
    /**
     * @return Subscribed service creation date
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Subscribed service customer config date
     * 
     */
    public String timeCustomerConfig() {
        return this.timeCustomerConfig;
    }
    /**
     * @return Subscribed service end date
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Subscribed service Major Set End date
     * 
     */
    public String timeMajorsetEnd() {
        return this.timeMajorsetEnd;
    }
    /**
     * @return Subscribed service Major Set Start date
     * 
     */
    public String timeMajorsetStart() {
        return this.timeMajorsetStart;
    }
    /**
     * @return Subscribed service payment expiry date
     * 
     */
    public String timePaymentExpiry() {
        return this.timePaymentExpiry;
    }
    /**
     * @return Subscribed service provisioning date
     * 
     */
    public String timeProvisioned() {
        return this.timeProvisioned;
    }
    /**
     * @return Subscribed service service configuration email sent date
     * 
     */
    public String timeServiceConfigurationEmailSent() {
        return this.timeServiceConfigurationEmailSent;
    }
    /**
     * @return Subscribed service start date
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }
    /**
     * @return Subscribed service last update date
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Subscribed service welcome email sent date
     * 
     */
    public String timeWelcomeEmailSent() {
        return this.timeWelcomeEmailSent;
    }
    /**
     * @return Subscribed service total value
     * 
     */
    public String totalValue() {
        return this.totalValue;
    }
    /**
     * @return Subscribed service Transaction Extension Id
     * 
     */
    public String transactionExtensionId() {
        return this.transactionExtensionId;
    }
    /**
     * @return Subscribed Service line type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return User that updated the subscribed service
     * 
     */
    public String updatedBy() {
        return this.updatedBy;
    }
    /**
     * @return Subscribed service used amount
     * 
     */
    public String usedAmount() {
        return this.usedAmount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscribedServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adminEmail;
        private String agreementId;
        private String agreementName;
        private String agreementType;
        private String availableAmount;
        private List<GetSubscribedServiceBillToAddress> billToAddresses;
        private List<GetSubscribedServiceBillToContact> billToContacts;
        private List<GetSubscribedServiceBillToCustomer> billToCustomers;
        private String billingFrequency;
        private String bookingOptyNumber;
        private String buyerEmail;
        private String commitmentScheduleId;
        private List<GetSubscribedServiceCommitmentService> commitmentServices;
        private String createdBy;
        private String creditPercentage;
        private String csi;
        private String customerTransactionReference;
        private String dataCenter;
        private String dataCenterRegion;
        private String eligibleToRenew;
        private List<GetSubscribedServiceEndUserAddress> endUserAddresses;
        private List<GetSubscribedServiceEndUserContact> endUserContacts;
        private List<GetSubscribedServiceEndUserCustomer> endUserCustomers;
        private @Nullable List<String> fields;
        private String fulfillmentSet;
        private String fundedAllocationValue;
        private String id;
        private Boolean isAllowance;
        private Boolean isCapToPriceList;
        private Boolean isCreditEnabled;
        private Boolean isHavingUsage;
        private Boolean isIntentToPay;
        private Boolean isPayg;
        private Boolean isSingleRateCard;
        private Boolean isVariableCommitment;
        private String lineNetAmount;
        private String majorSet;
        private String netUnitPrice;
        private String operationType;
        private String orderHeaderId;
        private String orderLineId;
        private Integer orderLineNumber;
        private String orderNumber;
        private String orderType;
        private String originalPromoAmount;
        private String overageBillTo;
        private String overageDiscountPercentage;
        private String overagePolicy;
        private String partnerCreditAmount;
        private String partnerTransactionType;
        private String paygPolicy;
        private String paymentMethod;
        private String paymentNumber;
        private List<GetSubscribedServicePaymentTerm> paymentTerms;
        private String pricePeriod;
        private String pricingModel;
        private List<GetSubscribedServiceProduct> products;
        private String programType;
        private String promoOrderLineId;
        private String promoType;
        private String promotionPricingType;
        private String provisioningSource;
        private String quantity;
        private String rateCardDiscountPercentage;
        private List<GetSubscribedServiceRateCard> rateCards;
        private String ratecardType;
        private String renewalOptyId;
        private String renewalOptyNumber;
        private String renewalOptyType;
        private String renewedSubscribedServiceId;
        private List<GetSubscribedServiceResellerAddress> resellerAddresses;
        private List<GetSubscribedServiceResellerContact> resellerContacts;
        private List<GetSubscribedServiceResellerCustomer> resellerCustomers;
        private String revenueLineId;
        private String revenueLineNumber;
        private String revisedArrInLc;
        private String revisedArrInSc;
        private String salesAccountPartyId;
        private String salesChannel;
        private String serialNumber;
        private List<GetSubscribedServiceServiceToAddress> serviceToAddresses;
        private List<GetSubscribedServiceServiceToContact> serviceToContacts;
        private List<GetSubscribedServiceServiceToCustomer> serviceToCustomers;
        private List<GetSubscribedServiceSoldToContact> soldToContacts;
        private List<GetSubscribedServiceSoldToCustomer> soldToCustomers;
        private String startDateType;
        private String status;
        private String subscribedServiceId;
        private String subscriptionId;
        private String subscriptionSource;
        private String systemArrInLc;
        private String systemArrInSc;
        private String systemAtrArrInLc;
        private String systemAtrArrInSc;
        private String termValue;
        private String termValueUom;
        private String timeAgreementEnd;
        private String timeCreated;
        private String timeCustomerConfig;
        private String timeEnd;
        private String timeMajorsetEnd;
        private String timeMajorsetStart;
        private String timePaymentExpiry;
        private String timeProvisioned;
        private String timeServiceConfigurationEmailSent;
        private String timeStart;
        private String timeUpdated;
        private String timeWelcomeEmailSent;
        private String totalValue;
        private String transactionExtensionId;
        private String type;
        private String updatedBy;
        private String usedAmount;
        public Builder() {}
        public Builder(GetSubscribedServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminEmail = defaults.adminEmail;
    	      this.agreementId = defaults.agreementId;
    	      this.agreementName = defaults.agreementName;
    	      this.agreementType = defaults.agreementType;
    	      this.availableAmount = defaults.availableAmount;
    	      this.billToAddresses = defaults.billToAddresses;
    	      this.billToContacts = defaults.billToContacts;
    	      this.billToCustomers = defaults.billToCustomers;
    	      this.billingFrequency = defaults.billingFrequency;
    	      this.bookingOptyNumber = defaults.bookingOptyNumber;
    	      this.buyerEmail = defaults.buyerEmail;
    	      this.commitmentScheduleId = defaults.commitmentScheduleId;
    	      this.commitmentServices = defaults.commitmentServices;
    	      this.createdBy = defaults.createdBy;
    	      this.creditPercentage = defaults.creditPercentage;
    	      this.csi = defaults.csi;
    	      this.customerTransactionReference = defaults.customerTransactionReference;
    	      this.dataCenter = defaults.dataCenter;
    	      this.dataCenterRegion = defaults.dataCenterRegion;
    	      this.eligibleToRenew = defaults.eligibleToRenew;
    	      this.endUserAddresses = defaults.endUserAddresses;
    	      this.endUserContacts = defaults.endUserContacts;
    	      this.endUserCustomers = defaults.endUserCustomers;
    	      this.fields = defaults.fields;
    	      this.fulfillmentSet = defaults.fulfillmentSet;
    	      this.fundedAllocationValue = defaults.fundedAllocationValue;
    	      this.id = defaults.id;
    	      this.isAllowance = defaults.isAllowance;
    	      this.isCapToPriceList = defaults.isCapToPriceList;
    	      this.isCreditEnabled = defaults.isCreditEnabled;
    	      this.isHavingUsage = defaults.isHavingUsage;
    	      this.isIntentToPay = defaults.isIntentToPay;
    	      this.isPayg = defaults.isPayg;
    	      this.isSingleRateCard = defaults.isSingleRateCard;
    	      this.isVariableCommitment = defaults.isVariableCommitment;
    	      this.lineNetAmount = defaults.lineNetAmount;
    	      this.majorSet = defaults.majorSet;
    	      this.netUnitPrice = defaults.netUnitPrice;
    	      this.operationType = defaults.operationType;
    	      this.orderHeaderId = defaults.orderHeaderId;
    	      this.orderLineId = defaults.orderLineId;
    	      this.orderLineNumber = defaults.orderLineNumber;
    	      this.orderNumber = defaults.orderNumber;
    	      this.orderType = defaults.orderType;
    	      this.originalPromoAmount = defaults.originalPromoAmount;
    	      this.overageBillTo = defaults.overageBillTo;
    	      this.overageDiscountPercentage = defaults.overageDiscountPercentage;
    	      this.overagePolicy = defaults.overagePolicy;
    	      this.partnerCreditAmount = defaults.partnerCreditAmount;
    	      this.partnerTransactionType = defaults.partnerTransactionType;
    	      this.paygPolicy = defaults.paygPolicy;
    	      this.paymentMethod = defaults.paymentMethod;
    	      this.paymentNumber = defaults.paymentNumber;
    	      this.paymentTerms = defaults.paymentTerms;
    	      this.pricePeriod = defaults.pricePeriod;
    	      this.pricingModel = defaults.pricingModel;
    	      this.products = defaults.products;
    	      this.programType = defaults.programType;
    	      this.promoOrderLineId = defaults.promoOrderLineId;
    	      this.promoType = defaults.promoType;
    	      this.promotionPricingType = defaults.promotionPricingType;
    	      this.provisioningSource = defaults.provisioningSource;
    	      this.quantity = defaults.quantity;
    	      this.rateCardDiscountPercentage = defaults.rateCardDiscountPercentage;
    	      this.rateCards = defaults.rateCards;
    	      this.ratecardType = defaults.ratecardType;
    	      this.renewalOptyId = defaults.renewalOptyId;
    	      this.renewalOptyNumber = defaults.renewalOptyNumber;
    	      this.renewalOptyType = defaults.renewalOptyType;
    	      this.renewedSubscribedServiceId = defaults.renewedSubscribedServiceId;
    	      this.resellerAddresses = defaults.resellerAddresses;
    	      this.resellerContacts = defaults.resellerContacts;
    	      this.resellerCustomers = defaults.resellerCustomers;
    	      this.revenueLineId = defaults.revenueLineId;
    	      this.revenueLineNumber = defaults.revenueLineNumber;
    	      this.revisedArrInLc = defaults.revisedArrInLc;
    	      this.revisedArrInSc = defaults.revisedArrInSc;
    	      this.salesAccountPartyId = defaults.salesAccountPartyId;
    	      this.salesChannel = defaults.salesChannel;
    	      this.serialNumber = defaults.serialNumber;
    	      this.serviceToAddresses = defaults.serviceToAddresses;
    	      this.serviceToContacts = defaults.serviceToContacts;
    	      this.serviceToCustomers = defaults.serviceToCustomers;
    	      this.soldToContacts = defaults.soldToContacts;
    	      this.soldToCustomers = defaults.soldToCustomers;
    	      this.startDateType = defaults.startDateType;
    	      this.status = defaults.status;
    	      this.subscribedServiceId = defaults.subscribedServiceId;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.subscriptionSource = defaults.subscriptionSource;
    	      this.systemArrInLc = defaults.systemArrInLc;
    	      this.systemArrInSc = defaults.systemArrInSc;
    	      this.systemAtrArrInLc = defaults.systemAtrArrInLc;
    	      this.systemAtrArrInSc = defaults.systemAtrArrInSc;
    	      this.termValue = defaults.termValue;
    	      this.termValueUom = defaults.termValueUom;
    	      this.timeAgreementEnd = defaults.timeAgreementEnd;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeCustomerConfig = defaults.timeCustomerConfig;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeMajorsetEnd = defaults.timeMajorsetEnd;
    	      this.timeMajorsetStart = defaults.timeMajorsetStart;
    	      this.timePaymentExpiry = defaults.timePaymentExpiry;
    	      this.timeProvisioned = defaults.timeProvisioned;
    	      this.timeServiceConfigurationEmailSent = defaults.timeServiceConfigurationEmailSent;
    	      this.timeStart = defaults.timeStart;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timeWelcomeEmailSent = defaults.timeWelcomeEmailSent;
    	      this.totalValue = defaults.totalValue;
    	      this.transactionExtensionId = defaults.transactionExtensionId;
    	      this.type = defaults.type;
    	      this.updatedBy = defaults.updatedBy;
    	      this.usedAmount = defaults.usedAmount;
        }

        @CustomType.Setter
        public Builder adminEmail(String adminEmail) {
            this.adminEmail = Objects.requireNonNull(adminEmail);
            return this;
        }
        @CustomType.Setter
        public Builder agreementId(String agreementId) {
            this.agreementId = Objects.requireNonNull(agreementId);
            return this;
        }
        @CustomType.Setter
        public Builder agreementName(String agreementName) {
            this.agreementName = Objects.requireNonNull(agreementName);
            return this;
        }
        @CustomType.Setter
        public Builder agreementType(String agreementType) {
            this.agreementType = Objects.requireNonNull(agreementType);
            return this;
        }
        @CustomType.Setter
        public Builder availableAmount(String availableAmount) {
            this.availableAmount = Objects.requireNonNull(availableAmount);
            return this;
        }
        @CustomType.Setter
        public Builder billToAddresses(List<GetSubscribedServiceBillToAddress> billToAddresses) {
            this.billToAddresses = Objects.requireNonNull(billToAddresses);
            return this;
        }
        public Builder billToAddresses(GetSubscribedServiceBillToAddress... billToAddresses) {
            return billToAddresses(List.of(billToAddresses));
        }
        @CustomType.Setter
        public Builder billToContacts(List<GetSubscribedServiceBillToContact> billToContacts) {
            this.billToContacts = Objects.requireNonNull(billToContacts);
            return this;
        }
        public Builder billToContacts(GetSubscribedServiceBillToContact... billToContacts) {
            return billToContacts(List.of(billToContacts));
        }
        @CustomType.Setter
        public Builder billToCustomers(List<GetSubscribedServiceBillToCustomer> billToCustomers) {
            this.billToCustomers = Objects.requireNonNull(billToCustomers);
            return this;
        }
        public Builder billToCustomers(GetSubscribedServiceBillToCustomer... billToCustomers) {
            return billToCustomers(List.of(billToCustomers));
        }
        @CustomType.Setter
        public Builder billingFrequency(String billingFrequency) {
            this.billingFrequency = Objects.requireNonNull(billingFrequency);
            return this;
        }
        @CustomType.Setter
        public Builder bookingOptyNumber(String bookingOptyNumber) {
            this.bookingOptyNumber = Objects.requireNonNull(bookingOptyNumber);
            return this;
        }
        @CustomType.Setter
        public Builder buyerEmail(String buyerEmail) {
            this.buyerEmail = Objects.requireNonNull(buyerEmail);
            return this;
        }
        @CustomType.Setter
        public Builder commitmentScheduleId(String commitmentScheduleId) {
            this.commitmentScheduleId = Objects.requireNonNull(commitmentScheduleId);
            return this;
        }
        @CustomType.Setter
        public Builder commitmentServices(List<GetSubscribedServiceCommitmentService> commitmentServices) {
            this.commitmentServices = Objects.requireNonNull(commitmentServices);
            return this;
        }
        public Builder commitmentServices(GetSubscribedServiceCommitmentService... commitmentServices) {
            return commitmentServices(List.of(commitmentServices));
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        @CustomType.Setter
        public Builder creditPercentage(String creditPercentage) {
            this.creditPercentage = Objects.requireNonNull(creditPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder csi(String csi) {
            this.csi = Objects.requireNonNull(csi);
            return this;
        }
        @CustomType.Setter
        public Builder customerTransactionReference(String customerTransactionReference) {
            this.customerTransactionReference = Objects.requireNonNull(customerTransactionReference);
            return this;
        }
        @CustomType.Setter
        public Builder dataCenter(String dataCenter) {
            this.dataCenter = Objects.requireNonNull(dataCenter);
            return this;
        }
        @CustomType.Setter
        public Builder dataCenterRegion(String dataCenterRegion) {
            this.dataCenterRegion = Objects.requireNonNull(dataCenterRegion);
            return this;
        }
        @CustomType.Setter
        public Builder eligibleToRenew(String eligibleToRenew) {
            this.eligibleToRenew = Objects.requireNonNull(eligibleToRenew);
            return this;
        }
        @CustomType.Setter
        public Builder endUserAddresses(List<GetSubscribedServiceEndUserAddress> endUserAddresses) {
            this.endUserAddresses = Objects.requireNonNull(endUserAddresses);
            return this;
        }
        public Builder endUserAddresses(GetSubscribedServiceEndUserAddress... endUserAddresses) {
            return endUserAddresses(List.of(endUserAddresses));
        }
        @CustomType.Setter
        public Builder endUserContacts(List<GetSubscribedServiceEndUserContact> endUserContacts) {
            this.endUserContacts = Objects.requireNonNull(endUserContacts);
            return this;
        }
        public Builder endUserContacts(GetSubscribedServiceEndUserContact... endUserContacts) {
            return endUserContacts(List.of(endUserContacts));
        }
        @CustomType.Setter
        public Builder endUserCustomers(List<GetSubscribedServiceEndUserCustomer> endUserCustomers) {
            this.endUserCustomers = Objects.requireNonNull(endUserCustomers);
            return this;
        }
        public Builder endUserCustomers(GetSubscribedServiceEndUserCustomer... endUserCustomers) {
            return endUserCustomers(List.of(endUserCustomers));
        }
        @CustomType.Setter
        public Builder fields(@Nullable List<String> fields) {
            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        @CustomType.Setter
        public Builder fulfillmentSet(String fulfillmentSet) {
            this.fulfillmentSet = Objects.requireNonNull(fulfillmentSet);
            return this;
        }
        @CustomType.Setter
        public Builder fundedAllocationValue(String fundedAllocationValue) {
            this.fundedAllocationValue = Objects.requireNonNull(fundedAllocationValue);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isAllowance(Boolean isAllowance) {
            this.isAllowance = Objects.requireNonNull(isAllowance);
            return this;
        }
        @CustomType.Setter
        public Builder isCapToPriceList(Boolean isCapToPriceList) {
            this.isCapToPriceList = Objects.requireNonNull(isCapToPriceList);
            return this;
        }
        @CustomType.Setter
        public Builder isCreditEnabled(Boolean isCreditEnabled) {
            this.isCreditEnabled = Objects.requireNonNull(isCreditEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isHavingUsage(Boolean isHavingUsage) {
            this.isHavingUsage = Objects.requireNonNull(isHavingUsage);
            return this;
        }
        @CustomType.Setter
        public Builder isIntentToPay(Boolean isIntentToPay) {
            this.isIntentToPay = Objects.requireNonNull(isIntentToPay);
            return this;
        }
        @CustomType.Setter
        public Builder isPayg(Boolean isPayg) {
            this.isPayg = Objects.requireNonNull(isPayg);
            return this;
        }
        @CustomType.Setter
        public Builder isSingleRateCard(Boolean isSingleRateCard) {
            this.isSingleRateCard = Objects.requireNonNull(isSingleRateCard);
            return this;
        }
        @CustomType.Setter
        public Builder isVariableCommitment(Boolean isVariableCommitment) {
            this.isVariableCommitment = Objects.requireNonNull(isVariableCommitment);
            return this;
        }
        @CustomType.Setter
        public Builder lineNetAmount(String lineNetAmount) {
            this.lineNetAmount = Objects.requireNonNull(lineNetAmount);
            return this;
        }
        @CustomType.Setter
        public Builder majorSet(String majorSet) {
            this.majorSet = Objects.requireNonNull(majorSet);
            return this;
        }
        @CustomType.Setter
        public Builder netUnitPrice(String netUnitPrice) {
            this.netUnitPrice = Objects.requireNonNull(netUnitPrice);
            return this;
        }
        @CustomType.Setter
        public Builder operationType(String operationType) {
            this.operationType = Objects.requireNonNull(operationType);
            return this;
        }
        @CustomType.Setter
        public Builder orderHeaderId(String orderHeaderId) {
            this.orderHeaderId = Objects.requireNonNull(orderHeaderId);
            return this;
        }
        @CustomType.Setter
        public Builder orderLineId(String orderLineId) {
            this.orderLineId = Objects.requireNonNull(orderLineId);
            return this;
        }
        @CustomType.Setter
        public Builder orderLineNumber(Integer orderLineNumber) {
            this.orderLineNumber = Objects.requireNonNull(orderLineNumber);
            return this;
        }
        @CustomType.Setter
        public Builder orderNumber(String orderNumber) {
            this.orderNumber = Objects.requireNonNull(orderNumber);
            return this;
        }
        @CustomType.Setter
        public Builder orderType(String orderType) {
            this.orderType = Objects.requireNonNull(orderType);
            return this;
        }
        @CustomType.Setter
        public Builder originalPromoAmount(String originalPromoAmount) {
            this.originalPromoAmount = Objects.requireNonNull(originalPromoAmount);
            return this;
        }
        @CustomType.Setter
        public Builder overageBillTo(String overageBillTo) {
            this.overageBillTo = Objects.requireNonNull(overageBillTo);
            return this;
        }
        @CustomType.Setter
        public Builder overageDiscountPercentage(String overageDiscountPercentage) {
            this.overageDiscountPercentage = Objects.requireNonNull(overageDiscountPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder overagePolicy(String overagePolicy) {
            this.overagePolicy = Objects.requireNonNull(overagePolicy);
            return this;
        }
        @CustomType.Setter
        public Builder partnerCreditAmount(String partnerCreditAmount) {
            this.partnerCreditAmount = Objects.requireNonNull(partnerCreditAmount);
            return this;
        }
        @CustomType.Setter
        public Builder partnerTransactionType(String partnerTransactionType) {
            this.partnerTransactionType = Objects.requireNonNull(partnerTransactionType);
            return this;
        }
        @CustomType.Setter
        public Builder paygPolicy(String paygPolicy) {
            this.paygPolicy = Objects.requireNonNull(paygPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder paymentMethod(String paymentMethod) {
            this.paymentMethod = Objects.requireNonNull(paymentMethod);
            return this;
        }
        @CustomType.Setter
        public Builder paymentNumber(String paymentNumber) {
            this.paymentNumber = Objects.requireNonNull(paymentNumber);
            return this;
        }
        @CustomType.Setter
        public Builder paymentTerms(List<GetSubscribedServicePaymentTerm> paymentTerms) {
            this.paymentTerms = Objects.requireNonNull(paymentTerms);
            return this;
        }
        public Builder paymentTerms(GetSubscribedServicePaymentTerm... paymentTerms) {
            return paymentTerms(List.of(paymentTerms));
        }
        @CustomType.Setter
        public Builder pricePeriod(String pricePeriod) {
            this.pricePeriod = Objects.requireNonNull(pricePeriod);
            return this;
        }
        @CustomType.Setter
        public Builder pricingModel(String pricingModel) {
            this.pricingModel = Objects.requireNonNull(pricingModel);
            return this;
        }
        @CustomType.Setter
        public Builder products(List<GetSubscribedServiceProduct> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(GetSubscribedServiceProduct... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder programType(String programType) {
            this.programType = Objects.requireNonNull(programType);
            return this;
        }
        @CustomType.Setter
        public Builder promoOrderLineId(String promoOrderLineId) {
            this.promoOrderLineId = Objects.requireNonNull(promoOrderLineId);
            return this;
        }
        @CustomType.Setter
        public Builder promoType(String promoType) {
            this.promoType = Objects.requireNonNull(promoType);
            return this;
        }
        @CustomType.Setter
        public Builder promotionPricingType(String promotionPricingType) {
            this.promotionPricingType = Objects.requireNonNull(promotionPricingType);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningSource(String provisioningSource) {
            this.provisioningSource = Objects.requireNonNull(provisioningSource);
            return this;
        }
        @CustomType.Setter
        public Builder quantity(String quantity) {
            this.quantity = Objects.requireNonNull(quantity);
            return this;
        }
        @CustomType.Setter
        public Builder rateCardDiscountPercentage(String rateCardDiscountPercentage) {
            this.rateCardDiscountPercentage = Objects.requireNonNull(rateCardDiscountPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder rateCards(List<GetSubscribedServiceRateCard> rateCards) {
            this.rateCards = Objects.requireNonNull(rateCards);
            return this;
        }
        public Builder rateCards(GetSubscribedServiceRateCard... rateCards) {
            return rateCards(List.of(rateCards));
        }
        @CustomType.Setter
        public Builder ratecardType(String ratecardType) {
            this.ratecardType = Objects.requireNonNull(ratecardType);
            return this;
        }
        @CustomType.Setter
        public Builder renewalOptyId(String renewalOptyId) {
            this.renewalOptyId = Objects.requireNonNull(renewalOptyId);
            return this;
        }
        @CustomType.Setter
        public Builder renewalOptyNumber(String renewalOptyNumber) {
            this.renewalOptyNumber = Objects.requireNonNull(renewalOptyNumber);
            return this;
        }
        @CustomType.Setter
        public Builder renewalOptyType(String renewalOptyType) {
            this.renewalOptyType = Objects.requireNonNull(renewalOptyType);
            return this;
        }
        @CustomType.Setter
        public Builder renewedSubscribedServiceId(String renewedSubscribedServiceId) {
            this.renewedSubscribedServiceId = Objects.requireNonNull(renewedSubscribedServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder resellerAddresses(List<GetSubscribedServiceResellerAddress> resellerAddresses) {
            this.resellerAddresses = Objects.requireNonNull(resellerAddresses);
            return this;
        }
        public Builder resellerAddresses(GetSubscribedServiceResellerAddress... resellerAddresses) {
            return resellerAddresses(List.of(resellerAddresses));
        }
        @CustomType.Setter
        public Builder resellerContacts(List<GetSubscribedServiceResellerContact> resellerContacts) {
            this.resellerContacts = Objects.requireNonNull(resellerContacts);
            return this;
        }
        public Builder resellerContacts(GetSubscribedServiceResellerContact... resellerContacts) {
            return resellerContacts(List.of(resellerContacts));
        }
        @CustomType.Setter
        public Builder resellerCustomers(List<GetSubscribedServiceResellerCustomer> resellerCustomers) {
            this.resellerCustomers = Objects.requireNonNull(resellerCustomers);
            return this;
        }
        public Builder resellerCustomers(GetSubscribedServiceResellerCustomer... resellerCustomers) {
            return resellerCustomers(List.of(resellerCustomers));
        }
        @CustomType.Setter
        public Builder revenueLineId(String revenueLineId) {
            this.revenueLineId = Objects.requireNonNull(revenueLineId);
            return this;
        }
        @CustomType.Setter
        public Builder revenueLineNumber(String revenueLineNumber) {
            this.revenueLineNumber = Objects.requireNonNull(revenueLineNumber);
            return this;
        }
        @CustomType.Setter
        public Builder revisedArrInLc(String revisedArrInLc) {
            this.revisedArrInLc = Objects.requireNonNull(revisedArrInLc);
            return this;
        }
        @CustomType.Setter
        public Builder revisedArrInSc(String revisedArrInSc) {
            this.revisedArrInSc = Objects.requireNonNull(revisedArrInSc);
            return this;
        }
        @CustomType.Setter
        public Builder salesAccountPartyId(String salesAccountPartyId) {
            this.salesAccountPartyId = Objects.requireNonNull(salesAccountPartyId);
            return this;
        }
        @CustomType.Setter
        public Builder salesChannel(String salesChannel) {
            this.salesChannel = Objects.requireNonNull(salesChannel);
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        @CustomType.Setter
        public Builder serviceToAddresses(List<GetSubscribedServiceServiceToAddress> serviceToAddresses) {
            this.serviceToAddresses = Objects.requireNonNull(serviceToAddresses);
            return this;
        }
        public Builder serviceToAddresses(GetSubscribedServiceServiceToAddress... serviceToAddresses) {
            return serviceToAddresses(List.of(serviceToAddresses));
        }
        @CustomType.Setter
        public Builder serviceToContacts(List<GetSubscribedServiceServiceToContact> serviceToContacts) {
            this.serviceToContacts = Objects.requireNonNull(serviceToContacts);
            return this;
        }
        public Builder serviceToContacts(GetSubscribedServiceServiceToContact... serviceToContacts) {
            return serviceToContacts(List.of(serviceToContacts));
        }
        @CustomType.Setter
        public Builder serviceToCustomers(List<GetSubscribedServiceServiceToCustomer> serviceToCustomers) {
            this.serviceToCustomers = Objects.requireNonNull(serviceToCustomers);
            return this;
        }
        public Builder serviceToCustomers(GetSubscribedServiceServiceToCustomer... serviceToCustomers) {
            return serviceToCustomers(List.of(serviceToCustomers));
        }
        @CustomType.Setter
        public Builder soldToContacts(List<GetSubscribedServiceSoldToContact> soldToContacts) {
            this.soldToContacts = Objects.requireNonNull(soldToContacts);
            return this;
        }
        public Builder soldToContacts(GetSubscribedServiceSoldToContact... soldToContacts) {
            return soldToContacts(List.of(soldToContacts));
        }
        @CustomType.Setter
        public Builder soldToCustomers(List<GetSubscribedServiceSoldToCustomer> soldToCustomers) {
            this.soldToCustomers = Objects.requireNonNull(soldToCustomers);
            return this;
        }
        public Builder soldToCustomers(GetSubscribedServiceSoldToCustomer... soldToCustomers) {
            return soldToCustomers(List.of(soldToCustomers));
        }
        @CustomType.Setter
        public Builder startDateType(String startDateType) {
            this.startDateType = Objects.requireNonNull(startDateType);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder subscribedServiceId(String subscribedServiceId) {
            this.subscribedServiceId = Objects.requireNonNull(subscribedServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionSource(String subscriptionSource) {
            this.subscriptionSource = Objects.requireNonNull(subscriptionSource);
            return this;
        }
        @CustomType.Setter
        public Builder systemArrInLc(String systemArrInLc) {
            this.systemArrInLc = Objects.requireNonNull(systemArrInLc);
            return this;
        }
        @CustomType.Setter
        public Builder systemArrInSc(String systemArrInSc) {
            this.systemArrInSc = Objects.requireNonNull(systemArrInSc);
            return this;
        }
        @CustomType.Setter
        public Builder systemAtrArrInLc(String systemAtrArrInLc) {
            this.systemAtrArrInLc = Objects.requireNonNull(systemAtrArrInLc);
            return this;
        }
        @CustomType.Setter
        public Builder systemAtrArrInSc(String systemAtrArrInSc) {
            this.systemAtrArrInSc = Objects.requireNonNull(systemAtrArrInSc);
            return this;
        }
        @CustomType.Setter
        public Builder termValue(String termValue) {
            this.termValue = Objects.requireNonNull(termValue);
            return this;
        }
        @CustomType.Setter
        public Builder termValueUom(String termValueUom) {
            this.termValueUom = Objects.requireNonNull(termValueUom);
            return this;
        }
        @CustomType.Setter
        public Builder timeAgreementEnd(String timeAgreementEnd) {
            this.timeAgreementEnd = Objects.requireNonNull(timeAgreementEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeCustomerConfig(String timeCustomerConfig) {
            this.timeCustomerConfig = Objects.requireNonNull(timeCustomerConfig);
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeMajorsetEnd(String timeMajorsetEnd) {
            this.timeMajorsetEnd = Objects.requireNonNull(timeMajorsetEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeMajorsetStart(String timeMajorsetStart) {
            this.timeMajorsetStart = Objects.requireNonNull(timeMajorsetStart);
            return this;
        }
        @CustomType.Setter
        public Builder timePaymentExpiry(String timePaymentExpiry) {
            this.timePaymentExpiry = Objects.requireNonNull(timePaymentExpiry);
            return this;
        }
        @CustomType.Setter
        public Builder timeProvisioned(String timeProvisioned) {
            this.timeProvisioned = Objects.requireNonNull(timeProvisioned);
            return this;
        }
        @CustomType.Setter
        public Builder timeServiceConfigurationEmailSent(String timeServiceConfigurationEmailSent) {
            this.timeServiceConfigurationEmailSent = Objects.requireNonNull(timeServiceConfigurationEmailSent);
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder timeWelcomeEmailSent(String timeWelcomeEmailSent) {
            this.timeWelcomeEmailSent = Objects.requireNonNull(timeWelcomeEmailSent);
            return this;
        }
        @CustomType.Setter
        public Builder totalValue(String totalValue) {
            this.totalValue = Objects.requireNonNull(totalValue);
            return this;
        }
        @CustomType.Setter
        public Builder transactionExtensionId(String transactionExtensionId) {
            this.transactionExtensionId = Objects.requireNonNull(transactionExtensionId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder updatedBy(String updatedBy) {
            this.updatedBy = Objects.requireNonNull(updatedBy);
            return this;
        }
        @CustomType.Setter
        public Builder usedAmount(String usedAmount) {
            this.usedAmount = Objects.requireNonNull(usedAmount);
            return this;
        }
        public GetSubscribedServiceResult build() {
            final var _resultValue = new GetSubscribedServiceResult();
            _resultValue.adminEmail = adminEmail;
            _resultValue.agreementId = agreementId;
            _resultValue.agreementName = agreementName;
            _resultValue.agreementType = agreementType;
            _resultValue.availableAmount = availableAmount;
            _resultValue.billToAddresses = billToAddresses;
            _resultValue.billToContacts = billToContacts;
            _resultValue.billToCustomers = billToCustomers;
            _resultValue.billingFrequency = billingFrequency;
            _resultValue.bookingOptyNumber = bookingOptyNumber;
            _resultValue.buyerEmail = buyerEmail;
            _resultValue.commitmentScheduleId = commitmentScheduleId;
            _resultValue.commitmentServices = commitmentServices;
            _resultValue.createdBy = createdBy;
            _resultValue.creditPercentage = creditPercentage;
            _resultValue.csi = csi;
            _resultValue.customerTransactionReference = customerTransactionReference;
            _resultValue.dataCenter = dataCenter;
            _resultValue.dataCenterRegion = dataCenterRegion;
            _resultValue.eligibleToRenew = eligibleToRenew;
            _resultValue.endUserAddresses = endUserAddresses;
            _resultValue.endUserContacts = endUserContacts;
            _resultValue.endUserCustomers = endUserCustomers;
            _resultValue.fields = fields;
            _resultValue.fulfillmentSet = fulfillmentSet;
            _resultValue.fundedAllocationValue = fundedAllocationValue;
            _resultValue.id = id;
            _resultValue.isAllowance = isAllowance;
            _resultValue.isCapToPriceList = isCapToPriceList;
            _resultValue.isCreditEnabled = isCreditEnabled;
            _resultValue.isHavingUsage = isHavingUsage;
            _resultValue.isIntentToPay = isIntentToPay;
            _resultValue.isPayg = isPayg;
            _resultValue.isSingleRateCard = isSingleRateCard;
            _resultValue.isVariableCommitment = isVariableCommitment;
            _resultValue.lineNetAmount = lineNetAmount;
            _resultValue.majorSet = majorSet;
            _resultValue.netUnitPrice = netUnitPrice;
            _resultValue.operationType = operationType;
            _resultValue.orderHeaderId = orderHeaderId;
            _resultValue.orderLineId = orderLineId;
            _resultValue.orderLineNumber = orderLineNumber;
            _resultValue.orderNumber = orderNumber;
            _resultValue.orderType = orderType;
            _resultValue.originalPromoAmount = originalPromoAmount;
            _resultValue.overageBillTo = overageBillTo;
            _resultValue.overageDiscountPercentage = overageDiscountPercentage;
            _resultValue.overagePolicy = overagePolicy;
            _resultValue.partnerCreditAmount = partnerCreditAmount;
            _resultValue.partnerTransactionType = partnerTransactionType;
            _resultValue.paygPolicy = paygPolicy;
            _resultValue.paymentMethod = paymentMethod;
            _resultValue.paymentNumber = paymentNumber;
            _resultValue.paymentTerms = paymentTerms;
            _resultValue.pricePeriod = pricePeriod;
            _resultValue.pricingModel = pricingModel;
            _resultValue.products = products;
            _resultValue.programType = programType;
            _resultValue.promoOrderLineId = promoOrderLineId;
            _resultValue.promoType = promoType;
            _resultValue.promotionPricingType = promotionPricingType;
            _resultValue.provisioningSource = provisioningSource;
            _resultValue.quantity = quantity;
            _resultValue.rateCardDiscountPercentage = rateCardDiscountPercentage;
            _resultValue.rateCards = rateCards;
            _resultValue.ratecardType = ratecardType;
            _resultValue.renewalOptyId = renewalOptyId;
            _resultValue.renewalOptyNumber = renewalOptyNumber;
            _resultValue.renewalOptyType = renewalOptyType;
            _resultValue.renewedSubscribedServiceId = renewedSubscribedServiceId;
            _resultValue.resellerAddresses = resellerAddresses;
            _resultValue.resellerContacts = resellerContacts;
            _resultValue.resellerCustomers = resellerCustomers;
            _resultValue.revenueLineId = revenueLineId;
            _resultValue.revenueLineNumber = revenueLineNumber;
            _resultValue.revisedArrInLc = revisedArrInLc;
            _resultValue.revisedArrInSc = revisedArrInSc;
            _resultValue.salesAccountPartyId = salesAccountPartyId;
            _resultValue.salesChannel = salesChannel;
            _resultValue.serialNumber = serialNumber;
            _resultValue.serviceToAddresses = serviceToAddresses;
            _resultValue.serviceToContacts = serviceToContacts;
            _resultValue.serviceToCustomers = serviceToCustomers;
            _resultValue.soldToContacts = soldToContacts;
            _resultValue.soldToCustomers = soldToCustomers;
            _resultValue.startDateType = startDateType;
            _resultValue.status = status;
            _resultValue.subscribedServiceId = subscribedServiceId;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.subscriptionSource = subscriptionSource;
            _resultValue.systemArrInLc = systemArrInLc;
            _resultValue.systemArrInSc = systemArrInSc;
            _resultValue.systemAtrArrInLc = systemAtrArrInLc;
            _resultValue.systemAtrArrInSc = systemAtrArrInSc;
            _resultValue.termValue = termValue;
            _resultValue.termValueUom = termValueUom;
            _resultValue.timeAgreementEnd = timeAgreementEnd;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeCustomerConfig = timeCustomerConfig;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeMajorsetEnd = timeMajorsetEnd;
            _resultValue.timeMajorsetStart = timeMajorsetStart;
            _resultValue.timePaymentExpiry = timePaymentExpiry;
            _resultValue.timeProvisioned = timeProvisioned;
            _resultValue.timeServiceConfigurationEmailSent = timeServiceConfigurationEmailSent;
            _resultValue.timeStart = timeStart;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.timeWelcomeEmailSent = timeWelcomeEmailSent;
            _resultValue.totalValue = totalValue;
            _resultValue.transactionExtensionId = transactionExtensionId;
            _resultValue.type = type;
            _resultValue.updatedBy = updatedBy;
            _resultValue.usedAmount = usedAmount;
            return _resultValue;
        }
    }
}
