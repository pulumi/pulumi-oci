// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceBillToAddress;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceBillToContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceBillToCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceCommitmentService;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceEndUserAddress;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceEndUserContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceEndUserCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServicePaymentTerm;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceProduct;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceRateCard;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceResellerAddress;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceResellerContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceResellerCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceServiceToAddress;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceServiceToContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceServiceToCustomer;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceSoldToContact;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesSubscribedServiceSoldToCustomer;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSubscribedServicesSubscribedService {
    /**
     * @return Subscribed service admin email id
     * 
     */
    private final String adminEmail;
    /**
     * @return Subscribed service agreement ID
     * 
     */
    private final String agreementId;
    /**
     * @return Subscribed service agrrement name
     * 
     */
    private final String agreementName;
    /**
     * @return Subscribed service agrrement type
     * 
     */
    private final String agreementType;
    /**
     * @return Commitment available amount
     * 
     */
    private final String availableAmount;
    /**
     * @return Address.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceBillToAddress> billToAddresses;
    /**
     * @return User.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceBillToContact> billToContacts;
    /**
     * @return Business partner.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceBillToCustomer> billToCustomers;
    /**
     * @return Subscribed service invoice frequency
     * 
     */
    private final String billingFrequency;
    /**
     * @return Booking Opportunity Number of Subscribed Service
     * 
     */
    private final String bookingOptyNumber;
    /**
     * @return Subscribed service buyer email id
     * 
     */
    private final String buyerEmail;
    /**
     * @return Subscribed service commitment schedule Id
     * 
     */
    private final String commitmentScheduleId;
    /**
     * @return List of Commitment services of a line
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceCommitmentService> commitmentServices;
    /**
     * @return User that created the Payment term
     * 
     */
    private final String createdBy;
    /**
     * @return Subscribed service credit percentage
     * 
     */
    private final String creditPercentage;
    /**
     * @return Subscribed service CSI number
     * 
     */
    private final String csi;
    /**
     * @return Identifier for a customer&#39;s transactions for purchase of ay oracle services
     * 
     */
    private final String customerTransactionReference;
    /**
     * @return Subscribed service data center
     * 
     */
    private final String dataCenter;
    /**
     * @return Subscribed service data center region
     * 
     */
    private final String dataCenterRegion;
    /**
     * @return Subscribed service eligible to renew field
     * 
     */
    private final String eligibleToRenew;
    /**
     * @return Address.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceEndUserAddress> endUserAddresses;
    /**
     * @return User.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceEndUserContact> endUserContacts;
    /**
     * @return Business partner.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceEndUserCustomer> endUserCustomers;
    /**
     * @return Subscribed service fulfillment set
     * 
     */
    private final String fulfillmentSet;
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    private final String fundedAllocationValue;
    /**
     * @return SPM internal Subscribed Service ID
     * 
     */
    private final String id;
    /**
     * @return Indicates if a service can recieve usages and consequently have available amounts computed
     * 
     */
    private final Boolean isAllowance;
    /**
     * @return If true compares rate between ratecard and the active pricelist and minimum rate would be fetched
     * 
     */
    private final Boolean isCapToPriceList;
    /**
     * @return Used in context of service credit lines
     * 
     */
    private final Boolean isCreditEnabled;
    /**
     * @return Indicator on whether or not there has been usage for the subscribed service
     * 
     */
    private final Boolean isHavingUsage;
    /**
     * @return Subscribed service intent to pay flag
     * 
     */
    private final Boolean isIntentToPay;
    /**
     * @return Subscribed service payg flag
     * 
     */
    private final Boolean isPayg;
    /**
     * @return Indicates if the Subscribed service has a single ratecard
     * 
     */
    private final Boolean isSingleRateCard;
    /**
     * @return Indicates if the commitment lines can have different quantities
     * 
     */
    private final Boolean isVariableCommitment;
    /**
     * @return Subscribed service line net amount
     * 
     */
    private final String lineNetAmount;
    /**
     * @return Subscribed service Major Set
     * 
     */
    private final String majorSet;
    /**
     * @return Rate card tier net unit price
     * 
     */
    private final String netUnitPrice;
    /**
     * @return Subscribed service operation type
     * 
     */
    private final String operationType;
    /**
     * @return Sales Order Header associated to the subscribed service
     * 
     */
    private final String orderHeaderId;
    /**
     * @return Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
     * 
     */
    private final String orderLineId;
    /**
     * @return Sales Order Line Number associated to the subscribed service
     * 
     */
    private final Integer orderLineNumber;
    /**
     * @return Sales Order Number associated to the subscribed service
     * 
     */
    private final String orderNumber;
    /**
     * @return Order Type of Subscribed Service
     * 
     */
    private final String orderType;
    /**
     * @return Subscribed service Promotion Amount
     * 
     */
    private final String originalPromoAmount;
    /**
     * @return Overage Bill To of Subscribed Service
     * 
     */
    private final String overageBillTo;
    /**
     * @return Subscribed service Overage Discount Percentage
     * 
     */
    private final String overageDiscountPercentage;
    /**
     * @return Overage Policy of Subscribed Service
     * 
     */
    private final String overagePolicy;
    /**
     * @return Subscribed service partner credit amount
     * 
     */
    private final String partnerCreditAmount;
    /**
     * @return This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
     * 
     */
    private final String partnerTransactionType;
    /**
     * @return Pay As You Go policy of Subscribed Service (Can be null - indicating no payg policy)
     * 
     */
    private final String paygPolicy;
    /**
     * @return Payment Method of Subscribed Service
     * 
     */
    private final String paymentMethod;
    /**
     * @return Payment Number of Subscribed Service
     * 
     */
    private final String paymentNumber;
    /**
     * @return Payment Term details
     * 
     */
    private final List<GetSubscribedServicesSubscribedServicePaymentTerm> paymentTerms;
    /**
     * @return Indicates the period for which the commitment amount can be utilised exceeding which the amount lapses. Also used in calculation of total contract line value
     * 
     */
    private final String pricePeriod;
    /**
     * @return Subscribed service pricing model
     * 
     */
    private final String pricingModel;
    /**
     * @return Product description
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceProduct> products;
    /**
     * @return Subscribed service program type
     * 
     */
    private final String programType;
    /**
     * @return Not null if this service has an associated promotion line in SPM. Contains the line identifier from Order Management of  the associated promo line.
     * 
     */
    private final String promoOrderLineId;
    /**
     * @return Subscribed service promotion type
     * 
     */
    private final String promoType;
    /**
     * @return Promotion Pricing Type of Subscribed Service (Can be null - indicating no promotion pricing)
     * 
     */
    private final String promotionPricingType;
    /**
     * @return Subscribed service provisioning source
     * 
     */
    private final String provisioningSource;
    /**
     * @return Subscribed service quantity
     * 
     */
    private final String quantity;
    /**
     * @return Subscribed service Rate Card Discount Percentage
     * 
     */
    private final String rateCardDiscountPercentage;
    /**
     * @return List of Rate Cards of a Subscribed Service
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceRateCard> rateCards;
    /**
     * @return SPM Ratecard Type
     * 
     */
    private final String ratecardType;
    /**
     * @return Subscribed service Opportunity Id
     * 
     */
    private final String renewalOptyId;
    /**
     * @return Renewal Opportunity Number of Subscribed Service
     * 
     */
    private final String renewalOptyNumber;
    /**
     * @return Renewal Opportunity Type of Subscribed Service
     * 
     */
    private final String renewalOptyType;
    /**
     * @return SPM renewed Subscription ID
     * 
     */
    private final String renewedSubscribedServiceId;
    /**
     * @return Address.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceResellerAddress> resellerAddresses;
    /**
     * @return User.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceResellerContact> resellerContacts;
    /**
     * @return Business partner.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceResellerCustomer> resellerCustomers;
    /**
     * @return Subscribed service Revenue Line Id
     * 
     */
    private final String revenueLineId;
    /**
     * @return Revenue Line NUmber of Subscribed Service
     * 
     */
    private final String revenueLineNumber;
    /**
     * @return Subscribed service Revised ARR
     * 
     */
    private final String revisedArrInLc;
    /**
     * @return Subscribed service Revised ARR in Standard Currency
     * 
     */
    private final String revisedArrInSc;
    /**
     * @return Subscribed service sales account party id
     * 
     */
    private final String salesAccountPartyId;
    /**
     * @return Sales Channel of Subscribed Service
     * 
     */
    private final String salesChannel;
    /**
     * @return Subscribed service line number
     * 
     */
    private final String serialNumber;
    /**
     * @return Address.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceServiceToAddress> serviceToAddresses;
    /**
     * @return User.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceServiceToContact> serviceToContacts;
    /**
     * @return Business partner.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceServiceToCustomer> serviceToCustomers;
    /**
     * @return User.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceSoldToContact> soldToContacts;
    /**
     * @return Business partner.
     * 
     */
    private final List<GetSubscribedServicesSubscribedServiceSoldToCustomer> soldToCustomers;
    /**
     * @return Subscribed service start date type
     * 
     */
    private final String startDateType;
    /**
     * @return This param is used to filter subscribed services based on its status
     * 
     */
    private final String status;
    /**
     * @return Line level Subscription Id
     * 
     */
    private final String subscriptionId;
    /**
     * @return Subscribed service source
     * 
     */
    private final String subscriptionSource;
    /**
     * @return Subscribed service System ARR
     * 
     */
    private final String systemArrInLc;
    /**
     * @return Subscribed service System ARR in Standard Currency
     * 
     */
    private final String systemArrInSc;
    /**
     * @return Subscribed service System ATR-ARR
     * 
     */
    private final String systemAtrArrInLc;
    /**
     * @return Subscribed service System ATR-ARR in Standard Currency
     * 
     */
    private final String systemAtrArrInSc;
    /**
     * @return Term value in Months
     * 
     */
    private final String termValue;
    /**
     * @return Term value UOM
     * 
     */
    private final String termValueUom;
    /**
     * @return Subscribed service agrrement end date
     * 
     */
    private final String timeAgreementEnd;
    /**
     * @return Subscribed service creation date
     * 
     */
    private final String timeCreated;
    /**
     * @return Subscribed service customer config date
     * 
     */
    private final String timeCustomerConfig;
    /**
     * @return Subscribed service end date
     * 
     */
    private final String timeEnd;
    /**
     * @return Subscribed service Major Set End date
     * 
     */
    private final String timeMajorsetEnd;
    /**
     * @return Subscribed service Major Set Start date
     * 
     */
    private final String timeMajorsetStart;
    /**
     * @return Subscribed service payment expiry date
     * 
     */
    private final String timePaymentExpiry;
    /**
     * @return Subscribed service provisioning date
     * 
     */
    private final String timeProvisioned;
    /**
     * @return Subscribed service service configuration email sent date
     * 
     */
    private final String timeServiceConfigurationEmailSent;
    /**
     * @return Subscribed service start date
     * 
     */
    private final String timeStart;
    /**
     * @return Subscribed service last update date
     * 
     */
    private final String timeUpdated;
    /**
     * @return Subscribed service welcome email sent date
     * 
     */
    private final String timeWelcomeEmailSent;
    /**
     * @return Subscribed service total value
     * 
     */
    private final String totalValue;
    /**
     * @return Subscribed service Transaction Extension Id
     * 
     */
    private final String transactionExtensionId;
    /**
     * @return Subscribed Service line type
     * 
     */
    private final String type;
    /**
     * @return User that updated the subscribed service
     * 
     */
    private final String updatedBy;
    /**
     * @return Subscribed service used amount
     * 
     */
    private final String usedAmount;

    @CustomType.Constructor
    private GetSubscribedServicesSubscribedService(
        @CustomType.Parameter("adminEmail") String adminEmail,
        @CustomType.Parameter("agreementId") String agreementId,
        @CustomType.Parameter("agreementName") String agreementName,
        @CustomType.Parameter("agreementType") String agreementType,
        @CustomType.Parameter("availableAmount") String availableAmount,
        @CustomType.Parameter("billToAddresses") List<GetSubscribedServicesSubscribedServiceBillToAddress> billToAddresses,
        @CustomType.Parameter("billToContacts") List<GetSubscribedServicesSubscribedServiceBillToContact> billToContacts,
        @CustomType.Parameter("billToCustomers") List<GetSubscribedServicesSubscribedServiceBillToCustomer> billToCustomers,
        @CustomType.Parameter("billingFrequency") String billingFrequency,
        @CustomType.Parameter("bookingOptyNumber") String bookingOptyNumber,
        @CustomType.Parameter("buyerEmail") String buyerEmail,
        @CustomType.Parameter("commitmentScheduleId") String commitmentScheduleId,
        @CustomType.Parameter("commitmentServices") List<GetSubscribedServicesSubscribedServiceCommitmentService> commitmentServices,
        @CustomType.Parameter("createdBy") String createdBy,
        @CustomType.Parameter("creditPercentage") String creditPercentage,
        @CustomType.Parameter("csi") String csi,
        @CustomType.Parameter("customerTransactionReference") String customerTransactionReference,
        @CustomType.Parameter("dataCenter") String dataCenter,
        @CustomType.Parameter("dataCenterRegion") String dataCenterRegion,
        @CustomType.Parameter("eligibleToRenew") String eligibleToRenew,
        @CustomType.Parameter("endUserAddresses") List<GetSubscribedServicesSubscribedServiceEndUserAddress> endUserAddresses,
        @CustomType.Parameter("endUserContacts") List<GetSubscribedServicesSubscribedServiceEndUserContact> endUserContacts,
        @CustomType.Parameter("endUserCustomers") List<GetSubscribedServicesSubscribedServiceEndUserCustomer> endUserCustomers,
        @CustomType.Parameter("fulfillmentSet") String fulfillmentSet,
        @CustomType.Parameter("fundedAllocationValue") String fundedAllocationValue,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isAllowance") Boolean isAllowance,
        @CustomType.Parameter("isCapToPriceList") Boolean isCapToPriceList,
        @CustomType.Parameter("isCreditEnabled") Boolean isCreditEnabled,
        @CustomType.Parameter("isHavingUsage") Boolean isHavingUsage,
        @CustomType.Parameter("isIntentToPay") Boolean isIntentToPay,
        @CustomType.Parameter("isPayg") Boolean isPayg,
        @CustomType.Parameter("isSingleRateCard") Boolean isSingleRateCard,
        @CustomType.Parameter("isVariableCommitment") Boolean isVariableCommitment,
        @CustomType.Parameter("lineNetAmount") String lineNetAmount,
        @CustomType.Parameter("majorSet") String majorSet,
        @CustomType.Parameter("netUnitPrice") String netUnitPrice,
        @CustomType.Parameter("operationType") String operationType,
        @CustomType.Parameter("orderHeaderId") String orderHeaderId,
        @CustomType.Parameter("orderLineId") String orderLineId,
        @CustomType.Parameter("orderLineNumber") Integer orderLineNumber,
        @CustomType.Parameter("orderNumber") String orderNumber,
        @CustomType.Parameter("orderType") String orderType,
        @CustomType.Parameter("originalPromoAmount") String originalPromoAmount,
        @CustomType.Parameter("overageBillTo") String overageBillTo,
        @CustomType.Parameter("overageDiscountPercentage") String overageDiscountPercentage,
        @CustomType.Parameter("overagePolicy") String overagePolicy,
        @CustomType.Parameter("partnerCreditAmount") String partnerCreditAmount,
        @CustomType.Parameter("partnerTransactionType") String partnerTransactionType,
        @CustomType.Parameter("paygPolicy") String paygPolicy,
        @CustomType.Parameter("paymentMethod") String paymentMethod,
        @CustomType.Parameter("paymentNumber") String paymentNumber,
        @CustomType.Parameter("paymentTerms") List<GetSubscribedServicesSubscribedServicePaymentTerm> paymentTerms,
        @CustomType.Parameter("pricePeriod") String pricePeriod,
        @CustomType.Parameter("pricingModel") String pricingModel,
        @CustomType.Parameter("products") List<GetSubscribedServicesSubscribedServiceProduct> products,
        @CustomType.Parameter("programType") String programType,
        @CustomType.Parameter("promoOrderLineId") String promoOrderLineId,
        @CustomType.Parameter("promoType") String promoType,
        @CustomType.Parameter("promotionPricingType") String promotionPricingType,
        @CustomType.Parameter("provisioningSource") String provisioningSource,
        @CustomType.Parameter("quantity") String quantity,
        @CustomType.Parameter("rateCardDiscountPercentage") String rateCardDiscountPercentage,
        @CustomType.Parameter("rateCards") List<GetSubscribedServicesSubscribedServiceRateCard> rateCards,
        @CustomType.Parameter("ratecardType") String ratecardType,
        @CustomType.Parameter("renewalOptyId") String renewalOptyId,
        @CustomType.Parameter("renewalOptyNumber") String renewalOptyNumber,
        @CustomType.Parameter("renewalOptyType") String renewalOptyType,
        @CustomType.Parameter("renewedSubscribedServiceId") String renewedSubscribedServiceId,
        @CustomType.Parameter("resellerAddresses") List<GetSubscribedServicesSubscribedServiceResellerAddress> resellerAddresses,
        @CustomType.Parameter("resellerContacts") List<GetSubscribedServicesSubscribedServiceResellerContact> resellerContacts,
        @CustomType.Parameter("resellerCustomers") List<GetSubscribedServicesSubscribedServiceResellerCustomer> resellerCustomers,
        @CustomType.Parameter("revenueLineId") String revenueLineId,
        @CustomType.Parameter("revenueLineNumber") String revenueLineNumber,
        @CustomType.Parameter("revisedArrInLc") String revisedArrInLc,
        @CustomType.Parameter("revisedArrInSc") String revisedArrInSc,
        @CustomType.Parameter("salesAccountPartyId") String salesAccountPartyId,
        @CustomType.Parameter("salesChannel") String salesChannel,
        @CustomType.Parameter("serialNumber") String serialNumber,
        @CustomType.Parameter("serviceToAddresses") List<GetSubscribedServicesSubscribedServiceServiceToAddress> serviceToAddresses,
        @CustomType.Parameter("serviceToContacts") List<GetSubscribedServicesSubscribedServiceServiceToContact> serviceToContacts,
        @CustomType.Parameter("serviceToCustomers") List<GetSubscribedServicesSubscribedServiceServiceToCustomer> serviceToCustomers,
        @CustomType.Parameter("soldToContacts") List<GetSubscribedServicesSubscribedServiceSoldToContact> soldToContacts,
        @CustomType.Parameter("soldToCustomers") List<GetSubscribedServicesSubscribedServiceSoldToCustomer> soldToCustomers,
        @CustomType.Parameter("startDateType") String startDateType,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("subscriptionId") String subscriptionId,
        @CustomType.Parameter("subscriptionSource") String subscriptionSource,
        @CustomType.Parameter("systemArrInLc") String systemArrInLc,
        @CustomType.Parameter("systemArrInSc") String systemArrInSc,
        @CustomType.Parameter("systemAtrArrInLc") String systemAtrArrInLc,
        @CustomType.Parameter("systemAtrArrInSc") String systemAtrArrInSc,
        @CustomType.Parameter("termValue") String termValue,
        @CustomType.Parameter("termValueUom") String termValueUom,
        @CustomType.Parameter("timeAgreementEnd") String timeAgreementEnd,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeCustomerConfig") String timeCustomerConfig,
        @CustomType.Parameter("timeEnd") String timeEnd,
        @CustomType.Parameter("timeMajorsetEnd") String timeMajorsetEnd,
        @CustomType.Parameter("timeMajorsetStart") String timeMajorsetStart,
        @CustomType.Parameter("timePaymentExpiry") String timePaymentExpiry,
        @CustomType.Parameter("timeProvisioned") String timeProvisioned,
        @CustomType.Parameter("timeServiceConfigurationEmailSent") String timeServiceConfigurationEmailSent,
        @CustomType.Parameter("timeStart") String timeStart,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("timeWelcomeEmailSent") String timeWelcomeEmailSent,
        @CustomType.Parameter("totalValue") String totalValue,
        @CustomType.Parameter("transactionExtensionId") String transactionExtensionId,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("updatedBy") String updatedBy,
        @CustomType.Parameter("usedAmount") String usedAmount) {
        this.adminEmail = adminEmail;
        this.agreementId = agreementId;
        this.agreementName = agreementName;
        this.agreementType = agreementType;
        this.availableAmount = availableAmount;
        this.billToAddresses = billToAddresses;
        this.billToContacts = billToContacts;
        this.billToCustomers = billToCustomers;
        this.billingFrequency = billingFrequency;
        this.bookingOptyNumber = bookingOptyNumber;
        this.buyerEmail = buyerEmail;
        this.commitmentScheduleId = commitmentScheduleId;
        this.commitmentServices = commitmentServices;
        this.createdBy = createdBy;
        this.creditPercentage = creditPercentage;
        this.csi = csi;
        this.customerTransactionReference = customerTransactionReference;
        this.dataCenter = dataCenter;
        this.dataCenterRegion = dataCenterRegion;
        this.eligibleToRenew = eligibleToRenew;
        this.endUserAddresses = endUserAddresses;
        this.endUserContacts = endUserContacts;
        this.endUserCustomers = endUserCustomers;
        this.fulfillmentSet = fulfillmentSet;
        this.fundedAllocationValue = fundedAllocationValue;
        this.id = id;
        this.isAllowance = isAllowance;
        this.isCapToPriceList = isCapToPriceList;
        this.isCreditEnabled = isCreditEnabled;
        this.isHavingUsage = isHavingUsage;
        this.isIntentToPay = isIntentToPay;
        this.isPayg = isPayg;
        this.isSingleRateCard = isSingleRateCard;
        this.isVariableCommitment = isVariableCommitment;
        this.lineNetAmount = lineNetAmount;
        this.majorSet = majorSet;
        this.netUnitPrice = netUnitPrice;
        this.operationType = operationType;
        this.orderHeaderId = orderHeaderId;
        this.orderLineId = orderLineId;
        this.orderLineNumber = orderLineNumber;
        this.orderNumber = orderNumber;
        this.orderType = orderType;
        this.originalPromoAmount = originalPromoAmount;
        this.overageBillTo = overageBillTo;
        this.overageDiscountPercentage = overageDiscountPercentage;
        this.overagePolicy = overagePolicy;
        this.partnerCreditAmount = partnerCreditAmount;
        this.partnerTransactionType = partnerTransactionType;
        this.paygPolicy = paygPolicy;
        this.paymentMethod = paymentMethod;
        this.paymentNumber = paymentNumber;
        this.paymentTerms = paymentTerms;
        this.pricePeriod = pricePeriod;
        this.pricingModel = pricingModel;
        this.products = products;
        this.programType = programType;
        this.promoOrderLineId = promoOrderLineId;
        this.promoType = promoType;
        this.promotionPricingType = promotionPricingType;
        this.provisioningSource = provisioningSource;
        this.quantity = quantity;
        this.rateCardDiscountPercentage = rateCardDiscountPercentage;
        this.rateCards = rateCards;
        this.ratecardType = ratecardType;
        this.renewalOptyId = renewalOptyId;
        this.renewalOptyNumber = renewalOptyNumber;
        this.renewalOptyType = renewalOptyType;
        this.renewedSubscribedServiceId = renewedSubscribedServiceId;
        this.resellerAddresses = resellerAddresses;
        this.resellerContacts = resellerContacts;
        this.resellerCustomers = resellerCustomers;
        this.revenueLineId = revenueLineId;
        this.revenueLineNumber = revenueLineNumber;
        this.revisedArrInLc = revisedArrInLc;
        this.revisedArrInSc = revisedArrInSc;
        this.salesAccountPartyId = salesAccountPartyId;
        this.salesChannel = salesChannel;
        this.serialNumber = serialNumber;
        this.serviceToAddresses = serviceToAddresses;
        this.serviceToContacts = serviceToContacts;
        this.serviceToCustomers = serviceToCustomers;
        this.soldToContacts = soldToContacts;
        this.soldToCustomers = soldToCustomers;
        this.startDateType = startDateType;
        this.status = status;
        this.subscriptionId = subscriptionId;
        this.subscriptionSource = subscriptionSource;
        this.systemArrInLc = systemArrInLc;
        this.systemArrInSc = systemArrInSc;
        this.systemAtrArrInLc = systemAtrArrInLc;
        this.systemAtrArrInSc = systemAtrArrInSc;
        this.termValue = termValue;
        this.termValueUom = termValueUom;
        this.timeAgreementEnd = timeAgreementEnd;
        this.timeCreated = timeCreated;
        this.timeCustomerConfig = timeCustomerConfig;
        this.timeEnd = timeEnd;
        this.timeMajorsetEnd = timeMajorsetEnd;
        this.timeMajorsetStart = timeMajorsetStart;
        this.timePaymentExpiry = timePaymentExpiry;
        this.timeProvisioned = timeProvisioned;
        this.timeServiceConfigurationEmailSent = timeServiceConfigurationEmailSent;
        this.timeStart = timeStart;
        this.timeUpdated = timeUpdated;
        this.timeWelcomeEmailSent = timeWelcomeEmailSent;
        this.totalValue = totalValue;
        this.transactionExtensionId = transactionExtensionId;
        this.type = type;
        this.updatedBy = updatedBy;
        this.usedAmount = usedAmount;
    }

    /**
     * @return Subscribed service admin email id
     * 
     */
    public String adminEmail() {
        return this.adminEmail;
    }
    /**
     * @return Subscribed service agreement ID
     * 
     */
    public String agreementId() {
        return this.agreementId;
    }
    /**
     * @return Subscribed service agrrement name
     * 
     */
    public String agreementName() {
        return this.agreementName;
    }
    /**
     * @return Subscribed service agrrement type
     * 
     */
    public String agreementType() {
        return this.agreementType;
    }
    /**
     * @return Commitment available amount
     * 
     */
    public String availableAmount() {
        return this.availableAmount;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceBillToAddress> billToAddresses() {
        return this.billToAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceBillToContact> billToContacts() {
        return this.billToContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceBillToCustomer> billToCustomers() {
        return this.billToCustomers;
    }
    /**
     * @return Subscribed service invoice frequency
     * 
     */
    public String billingFrequency() {
        return this.billingFrequency;
    }
    /**
     * @return Booking Opportunity Number of Subscribed Service
     * 
     */
    public String bookingOptyNumber() {
        return this.bookingOptyNumber;
    }
    /**
     * @return Subscribed service buyer email id
     * 
     */
    public String buyerEmail() {
        return this.buyerEmail;
    }
    /**
     * @return Subscribed service commitment schedule Id
     * 
     */
    public String commitmentScheduleId() {
        return this.commitmentScheduleId;
    }
    /**
     * @return List of Commitment services of a line
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceCommitmentService> commitmentServices() {
        return this.commitmentServices;
    }
    /**
     * @return User that created the Payment term
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Subscribed service credit percentage
     * 
     */
    public String creditPercentage() {
        return this.creditPercentage;
    }
    /**
     * @return Subscribed service CSI number
     * 
     */
    public String csi() {
        return this.csi;
    }
    /**
     * @return Identifier for a customer&#39;s transactions for purchase of ay oracle services
     * 
     */
    public String customerTransactionReference() {
        return this.customerTransactionReference;
    }
    /**
     * @return Subscribed service data center
     * 
     */
    public String dataCenter() {
        return this.dataCenter;
    }
    /**
     * @return Subscribed service data center region
     * 
     */
    public String dataCenterRegion() {
        return this.dataCenterRegion;
    }
    /**
     * @return Subscribed service eligible to renew field
     * 
     */
    public String eligibleToRenew() {
        return this.eligibleToRenew;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceEndUserAddress> endUserAddresses() {
        return this.endUserAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceEndUserContact> endUserContacts() {
        return this.endUserContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceEndUserCustomer> endUserCustomers() {
        return this.endUserCustomers;
    }
    /**
     * @return Subscribed service fulfillment set
     * 
     */
    public String fulfillmentSet() {
        return this.fulfillmentSet;
    }
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    public String fundedAllocationValue() {
        return this.fundedAllocationValue;
    }
    /**
     * @return SPM internal Subscribed Service ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if a service can recieve usages and consequently have available amounts computed
     * 
     */
    public Boolean isAllowance() {
        return this.isAllowance;
    }
    /**
     * @return If true compares rate between ratecard and the active pricelist and minimum rate would be fetched
     * 
     */
    public Boolean isCapToPriceList() {
        return this.isCapToPriceList;
    }
    /**
     * @return Used in context of service credit lines
     * 
     */
    public Boolean isCreditEnabled() {
        return this.isCreditEnabled;
    }
    /**
     * @return Indicator on whether or not there has been usage for the subscribed service
     * 
     */
    public Boolean isHavingUsage() {
        return this.isHavingUsage;
    }
    /**
     * @return Subscribed service intent to pay flag
     * 
     */
    public Boolean isIntentToPay() {
        return this.isIntentToPay;
    }
    /**
     * @return Subscribed service payg flag
     * 
     */
    public Boolean isPayg() {
        return this.isPayg;
    }
    /**
     * @return Indicates if the Subscribed service has a single ratecard
     * 
     */
    public Boolean isSingleRateCard() {
        return this.isSingleRateCard;
    }
    /**
     * @return Indicates if the commitment lines can have different quantities
     * 
     */
    public Boolean isVariableCommitment() {
        return this.isVariableCommitment;
    }
    /**
     * @return Subscribed service line net amount
     * 
     */
    public String lineNetAmount() {
        return this.lineNetAmount;
    }
    /**
     * @return Subscribed service Major Set
     * 
     */
    public String majorSet() {
        return this.majorSet;
    }
    /**
     * @return Rate card tier net unit price
     * 
     */
    public String netUnitPrice() {
        return this.netUnitPrice;
    }
    /**
     * @return Subscribed service operation type
     * 
     */
    public String operationType() {
        return this.operationType;
    }
    /**
     * @return Sales Order Header associated to the subscribed service
     * 
     */
    public String orderHeaderId() {
        return this.orderHeaderId;
    }
    /**
     * @return Order Line identifier at subscribed service level . This identifier is originated in Order Management module. Default is null.
     * 
     */
    public String orderLineId() {
        return this.orderLineId;
    }
    /**
     * @return Sales Order Line Number associated to the subscribed service
     * 
     */
    public Integer orderLineNumber() {
        return this.orderLineNumber;
    }
    /**
     * @return Sales Order Number associated to the subscribed service
     * 
     */
    public String orderNumber() {
        return this.orderNumber;
    }
    /**
     * @return Order Type of Subscribed Service
     * 
     */
    public String orderType() {
        return this.orderType;
    }
    /**
     * @return Subscribed service Promotion Amount
     * 
     */
    public String originalPromoAmount() {
        return this.originalPromoAmount;
    }
    /**
     * @return Overage Bill To of Subscribed Service
     * 
     */
    public String overageBillTo() {
        return this.overageBillTo;
    }
    /**
     * @return Subscribed service Overage Discount Percentage
     * 
     */
    public String overageDiscountPercentage() {
        return this.overageDiscountPercentage;
    }
    /**
     * @return Overage Policy of Subscribed Service
     * 
     */
    public String overagePolicy() {
        return this.overagePolicy;
    }
    /**
     * @return Subscribed service partner credit amount
     * 
     */
    public String partnerCreditAmount() {
        return this.partnerCreditAmount;
    }
    /**
     * @return This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
     * 
     */
    public String partnerTransactionType() {
        return this.partnerTransactionType;
    }
    /**
     * @return Pay As You Go policy of Subscribed Service (Can be null - indicating no payg policy)
     * 
     */
    public String paygPolicy() {
        return this.paygPolicy;
    }
    /**
     * @return Payment Method of Subscribed Service
     * 
     */
    public String paymentMethod() {
        return this.paymentMethod;
    }
    /**
     * @return Payment Number of Subscribed Service
     * 
     */
    public String paymentNumber() {
        return this.paymentNumber;
    }
    /**
     * @return Payment Term details
     * 
     */
    public List<GetSubscribedServicesSubscribedServicePaymentTerm> paymentTerms() {
        return this.paymentTerms;
    }
    /**
     * @return Indicates the period for which the commitment amount can be utilised exceeding which the amount lapses. Also used in calculation of total contract line value
     * 
     */
    public String pricePeriod() {
        return this.pricePeriod;
    }
    /**
     * @return Subscribed service pricing model
     * 
     */
    public String pricingModel() {
        return this.pricingModel;
    }
    /**
     * @return Product description
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceProduct> products() {
        return this.products;
    }
    /**
     * @return Subscribed service program type
     * 
     */
    public String programType() {
        return this.programType;
    }
    /**
     * @return Not null if this service has an associated promotion line in SPM. Contains the line identifier from Order Management of  the associated promo line.
     * 
     */
    public String promoOrderLineId() {
        return this.promoOrderLineId;
    }
    /**
     * @return Subscribed service promotion type
     * 
     */
    public String promoType() {
        return this.promoType;
    }
    /**
     * @return Promotion Pricing Type of Subscribed Service (Can be null - indicating no promotion pricing)
     * 
     */
    public String promotionPricingType() {
        return this.promotionPricingType;
    }
    /**
     * @return Subscribed service provisioning source
     * 
     */
    public String provisioningSource() {
        return this.provisioningSource;
    }
    /**
     * @return Subscribed service quantity
     * 
     */
    public String quantity() {
        return this.quantity;
    }
    /**
     * @return Subscribed service Rate Card Discount Percentage
     * 
     */
    public String rateCardDiscountPercentage() {
        return this.rateCardDiscountPercentage;
    }
    /**
     * @return List of Rate Cards of a Subscribed Service
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceRateCard> rateCards() {
        return this.rateCards;
    }
    /**
     * @return SPM Ratecard Type
     * 
     */
    public String ratecardType() {
        return this.ratecardType;
    }
    /**
     * @return Subscribed service Opportunity Id
     * 
     */
    public String renewalOptyId() {
        return this.renewalOptyId;
    }
    /**
     * @return Renewal Opportunity Number of Subscribed Service
     * 
     */
    public String renewalOptyNumber() {
        return this.renewalOptyNumber;
    }
    /**
     * @return Renewal Opportunity Type of Subscribed Service
     * 
     */
    public String renewalOptyType() {
        return this.renewalOptyType;
    }
    /**
     * @return SPM renewed Subscription ID
     * 
     */
    public String renewedSubscribedServiceId() {
        return this.renewedSubscribedServiceId;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceResellerAddress> resellerAddresses() {
        return this.resellerAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceResellerContact> resellerContacts() {
        return this.resellerContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceResellerCustomer> resellerCustomers() {
        return this.resellerCustomers;
    }
    /**
     * @return Subscribed service Revenue Line Id
     * 
     */
    public String revenueLineId() {
        return this.revenueLineId;
    }
    /**
     * @return Revenue Line NUmber of Subscribed Service
     * 
     */
    public String revenueLineNumber() {
        return this.revenueLineNumber;
    }
    /**
     * @return Subscribed service Revised ARR
     * 
     */
    public String revisedArrInLc() {
        return this.revisedArrInLc;
    }
    /**
     * @return Subscribed service Revised ARR in Standard Currency
     * 
     */
    public String revisedArrInSc() {
        return this.revisedArrInSc;
    }
    /**
     * @return Subscribed service sales account party id
     * 
     */
    public String salesAccountPartyId() {
        return this.salesAccountPartyId;
    }
    /**
     * @return Sales Channel of Subscribed Service
     * 
     */
    public String salesChannel() {
        return this.salesChannel;
    }
    /**
     * @return Subscribed service line number
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return Address.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceServiceToAddress> serviceToAddresses() {
        return this.serviceToAddresses;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceServiceToContact> serviceToContacts() {
        return this.serviceToContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceServiceToCustomer> serviceToCustomers() {
        return this.serviceToCustomers;
    }
    /**
     * @return User.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceSoldToContact> soldToContacts() {
        return this.soldToContacts;
    }
    /**
     * @return Business partner.
     * 
     */
    public List<GetSubscribedServicesSubscribedServiceSoldToCustomer> soldToCustomers() {
        return this.soldToCustomers;
    }
    /**
     * @return Subscribed service start date type
     * 
     */
    public String startDateType() {
        return this.startDateType;
    }
    /**
     * @return This param is used to filter subscribed services based on its status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Line level Subscription Id
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return Subscribed service source
     * 
     */
    public String subscriptionSource() {
        return this.subscriptionSource;
    }
    /**
     * @return Subscribed service System ARR
     * 
     */
    public String systemArrInLc() {
        return this.systemArrInLc;
    }
    /**
     * @return Subscribed service System ARR in Standard Currency
     * 
     */
    public String systemArrInSc() {
        return this.systemArrInSc;
    }
    /**
     * @return Subscribed service System ATR-ARR
     * 
     */
    public String systemAtrArrInLc() {
        return this.systemAtrArrInLc;
    }
    /**
     * @return Subscribed service System ATR-ARR in Standard Currency
     * 
     */
    public String systemAtrArrInSc() {
        return this.systemAtrArrInSc;
    }
    /**
     * @return Term value in Months
     * 
     */
    public String termValue() {
        return this.termValue;
    }
    /**
     * @return Term value UOM
     * 
     */
    public String termValueUom() {
        return this.termValueUom;
    }
    /**
     * @return Subscribed service agrrement end date
     * 
     */
    public String timeAgreementEnd() {
        return this.timeAgreementEnd;
    }
    /**
     * @return Subscribed service creation date
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Subscribed service customer config date
     * 
     */
    public String timeCustomerConfig() {
        return this.timeCustomerConfig;
    }
    /**
     * @return Subscribed service end date
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Subscribed service Major Set End date
     * 
     */
    public String timeMajorsetEnd() {
        return this.timeMajorsetEnd;
    }
    /**
     * @return Subscribed service Major Set Start date
     * 
     */
    public String timeMajorsetStart() {
        return this.timeMajorsetStart;
    }
    /**
     * @return Subscribed service payment expiry date
     * 
     */
    public String timePaymentExpiry() {
        return this.timePaymentExpiry;
    }
    /**
     * @return Subscribed service provisioning date
     * 
     */
    public String timeProvisioned() {
        return this.timeProvisioned;
    }
    /**
     * @return Subscribed service service configuration email sent date
     * 
     */
    public String timeServiceConfigurationEmailSent() {
        return this.timeServiceConfigurationEmailSent;
    }
    /**
     * @return Subscribed service start date
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }
    /**
     * @return Subscribed service last update date
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Subscribed service welcome email sent date
     * 
     */
    public String timeWelcomeEmailSent() {
        return this.timeWelcomeEmailSent;
    }
    /**
     * @return Subscribed service total value
     * 
     */
    public String totalValue() {
        return this.totalValue;
    }
    /**
     * @return Subscribed service Transaction Extension Id
     * 
     */
    public String transactionExtensionId() {
        return this.transactionExtensionId;
    }
    /**
     * @return Subscribed Service line type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return User that updated the subscribed service
     * 
     */
    public String updatedBy() {
        return this.updatedBy;
    }
    /**
     * @return Subscribed service used amount
     * 
     */
    public String usedAmount() {
        return this.usedAmount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscribedServicesSubscribedService defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String adminEmail;
        private String agreementId;
        private String agreementName;
        private String agreementType;
        private String availableAmount;
        private List<GetSubscribedServicesSubscribedServiceBillToAddress> billToAddresses;
        private List<GetSubscribedServicesSubscribedServiceBillToContact> billToContacts;
        private List<GetSubscribedServicesSubscribedServiceBillToCustomer> billToCustomers;
        private String billingFrequency;
        private String bookingOptyNumber;
        private String buyerEmail;
        private String commitmentScheduleId;
        private List<GetSubscribedServicesSubscribedServiceCommitmentService> commitmentServices;
        private String createdBy;
        private String creditPercentage;
        private String csi;
        private String customerTransactionReference;
        private String dataCenter;
        private String dataCenterRegion;
        private String eligibleToRenew;
        private List<GetSubscribedServicesSubscribedServiceEndUserAddress> endUserAddresses;
        private List<GetSubscribedServicesSubscribedServiceEndUserContact> endUserContacts;
        private List<GetSubscribedServicesSubscribedServiceEndUserCustomer> endUserCustomers;
        private String fulfillmentSet;
        private String fundedAllocationValue;
        private String id;
        private Boolean isAllowance;
        private Boolean isCapToPriceList;
        private Boolean isCreditEnabled;
        private Boolean isHavingUsage;
        private Boolean isIntentToPay;
        private Boolean isPayg;
        private Boolean isSingleRateCard;
        private Boolean isVariableCommitment;
        private String lineNetAmount;
        private String majorSet;
        private String netUnitPrice;
        private String operationType;
        private String orderHeaderId;
        private String orderLineId;
        private Integer orderLineNumber;
        private String orderNumber;
        private String orderType;
        private String originalPromoAmount;
        private String overageBillTo;
        private String overageDiscountPercentage;
        private String overagePolicy;
        private String partnerCreditAmount;
        private String partnerTransactionType;
        private String paygPolicy;
        private String paymentMethod;
        private String paymentNumber;
        private List<GetSubscribedServicesSubscribedServicePaymentTerm> paymentTerms;
        private String pricePeriod;
        private String pricingModel;
        private List<GetSubscribedServicesSubscribedServiceProduct> products;
        private String programType;
        private String promoOrderLineId;
        private String promoType;
        private String promotionPricingType;
        private String provisioningSource;
        private String quantity;
        private String rateCardDiscountPercentage;
        private List<GetSubscribedServicesSubscribedServiceRateCard> rateCards;
        private String ratecardType;
        private String renewalOptyId;
        private String renewalOptyNumber;
        private String renewalOptyType;
        private String renewedSubscribedServiceId;
        private List<GetSubscribedServicesSubscribedServiceResellerAddress> resellerAddresses;
        private List<GetSubscribedServicesSubscribedServiceResellerContact> resellerContacts;
        private List<GetSubscribedServicesSubscribedServiceResellerCustomer> resellerCustomers;
        private String revenueLineId;
        private String revenueLineNumber;
        private String revisedArrInLc;
        private String revisedArrInSc;
        private String salesAccountPartyId;
        private String salesChannel;
        private String serialNumber;
        private List<GetSubscribedServicesSubscribedServiceServiceToAddress> serviceToAddresses;
        private List<GetSubscribedServicesSubscribedServiceServiceToContact> serviceToContacts;
        private List<GetSubscribedServicesSubscribedServiceServiceToCustomer> serviceToCustomers;
        private List<GetSubscribedServicesSubscribedServiceSoldToContact> soldToContacts;
        private List<GetSubscribedServicesSubscribedServiceSoldToCustomer> soldToCustomers;
        private String startDateType;
        private String status;
        private String subscriptionId;
        private String subscriptionSource;
        private String systemArrInLc;
        private String systemArrInSc;
        private String systemAtrArrInLc;
        private String systemAtrArrInSc;
        private String termValue;
        private String termValueUom;
        private String timeAgreementEnd;
        private String timeCreated;
        private String timeCustomerConfig;
        private String timeEnd;
        private String timeMajorsetEnd;
        private String timeMajorsetStart;
        private String timePaymentExpiry;
        private String timeProvisioned;
        private String timeServiceConfigurationEmailSent;
        private String timeStart;
        private String timeUpdated;
        private String timeWelcomeEmailSent;
        private String totalValue;
        private String transactionExtensionId;
        private String type;
        private String updatedBy;
        private String usedAmount;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubscribedServicesSubscribedService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminEmail = defaults.adminEmail;
    	      this.agreementId = defaults.agreementId;
    	      this.agreementName = defaults.agreementName;
    	      this.agreementType = defaults.agreementType;
    	      this.availableAmount = defaults.availableAmount;
    	      this.billToAddresses = defaults.billToAddresses;
    	      this.billToContacts = defaults.billToContacts;
    	      this.billToCustomers = defaults.billToCustomers;
    	      this.billingFrequency = defaults.billingFrequency;
    	      this.bookingOptyNumber = defaults.bookingOptyNumber;
    	      this.buyerEmail = defaults.buyerEmail;
    	      this.commitmentScheduleId = defaults.commitmentScheduleId;
    	      this.commitmentServices = defaults.commitmentServices;
    	      this.createdBy = defaults.createdBy;
    	      this.creditPercentage = defaults.creditPercentage;
    	      this.csi = defaults.csi;
    	      this.customerTransactionReference = defaults.customerTransactionReference;
    	      this.dataCenter = defaults.dataCenter;
    	      this.dataCenterRegion = defaults.dataCenterRegion;
    	      this.eligibleToRenew = defaults.eligibleToRenew;
    	      this.endUserAddresses = defaults.endUserAddresses;
    	      this.endUserContacts = defaults.endUserContacts;
    	      this.endUserCustomers = defaults.endUserCustomers;
    	      this.fulfillmentSet = defaults.fulfillmentSet;
    	      this.fundedAllocationValue = defaults.fundedAllocationValue;
    	      this.id = defaults.id;
    	      this.isAllowance = defaults.isAllowance;
    	      this.isCapToPriceList = defaults.isCapToPriceList;
    	      this.isCreditEnabled = defaults.isCreditEnabled;
    	      this.isHavingUsage = defaults.isHavingUsage;
    	      this.isIntentToPay = defaults.isIntentToPay;
    	      this.isPayg = defaults.isPayg;
    	      this.isSingleRateCard = defaults.isSingleRateCard;
    	      this.isVariableCommitment = defaults.isVariableCommitment;
    	      this.lineNetAmount = defaults.lineNetAmount;
    	      this.majorSet = defaults.majorSet;
    	      this.netUnitPrice = defaults.netUnitPrice;
    	      this.operationType = defaults.operationType;
    	      this.orderHeaderId = defaults.orderHeaderId;
    	      this.orderLineId = defaults.orderLineId;
    	      this.orderLineNumber = defaults.orderLineNumber;
    	      this.orderNumber = defaults.orderNumber;
    	      this.orderType = defaults.orderType;
    	      this.originalPromoAmount = defaults.originalPromoAmount;
    	      this.overageBillTo = defaults.overageBillTo;
    	      this.overageDiscountPercentage = defaults.overageDiscountPercentage;
    	      this.overagePolicy = defaults.overagePolicy;
    	      this.partnerCreditAmount = defaults.partnerCreditAmount;
    	      this.partnerTransactionType = defaults.partnerTransactionType;
    	      this.paygPolicy = defaults.paygPolicy;
    	      this.paymentMethod = defaults.paymentMethod;
    	      this.paymentNumber = defaults.paymentNumber;
    	      this.paymentTerms = defaults.paymentTerms;
    	      this.pricePeriod = defaults.pricePeriod;
    	      this.pricingModel = defaults.pricingModel;
    	      this.products = defaults.products;
    	      this.programType = defaults.programType;
    	      this.promoOrderLineId = defaults.promoOrderLineId;
    	      this.promoType = defaults.promoType;
    	      this.promotionPricingType = defaults.promotionPricingType;
    	      this.provisioningSource = defaults.provisioningSource;
    	      this.quantity = defaults.quantity;
    	      this.rateCardDiscountPercentage = defaults.rateCardDiscountPercentage;
    	      this.rateCards = defaults.rateCards;
    	      this.ratecardType = defaults.ratecardType;
    	      this.renewalOptyId = defaults.renewalOptyId;
    	      this.renewalOptyNumber = defaults.renewalOptyNumber;
    	      this.renewalOptyType = defaults.renewalOptyType;
    	      this.renewedSubscribedServiceId = defaults.renewedSubscribedServiceId;
    	      this.resellerAddresses = defaults.resellerAddresses;
    	      this.resellerContacts = defaults.resellerContacts;
    	      this.resellerCustomers = defaults.resellerCustomers;
    	      this.revenueLineId = defaults.revenueLineId;
    	      this.revenueLineNumber = defaults.revenueLineNumber;
    	      this.revisedArrInLc = defaults.revisedArrInLc;
    	      this.revisedArrInSc = defaults.revisedArrInSc;
    	      this.salesAccountPartyId = defaults.salesAccountPartyId;
    	      this.salesChannel = defaults.salesChannel;
    	      this.serialNumber = defaults.serialNumber;
    	      this.serviceToAddresses = defaults.serviceToAddresses;
    	      this.serviceToContacts = defaults.serviceToContacts;
    	      this.serviceToCustomers = defaults.serviceToCustomers;
    	      this.soldToContacts = defaults.soldToContacts;
    	      this.soldToCustomers = defaults.soldToCustomers;
    	      this.startDateType = defaults.startDateType;
    	      this.status = defaults.status;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.subscriptionSource = defaults.subscriptionSource;
    	      this.systemArrInLc = defaults.systemArrInLc;
    	      this.systemArrInSc = defaults.systemArrInSc;
    	      this.systemAtrArrInLc = defaults.systemAtrArrInLc;
    	      this.systemAtrArrInSc = defaults.systemAtrArrInSc;
    	      this.termValue = defaults.termValue;
    	      this.termValueUom = defaults.termValueUom;
    	      this.timeAgreementEnd = defaults.timeAgreementEnd;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeCustomerConfig = defaults.timeCustomerConfig;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeMajorsetEnd = defaults.timeMajorsetEnd;
    	      this.timeMajorsetStart = defaults.timeMajorsetStart;
    	      this.timePaymentExpiry = defaults.timePaymentExpiry;
    	      this.timeProvisioned = defaults.timeProvisioned;
    	      this.timeServiceConfigurationEmailSent = defaults.timeServiceConfigurationEmailSent;
    	      this.timeStart = defaults.timeStart;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timeWelcomeEmailSent = defaults.timeWelcomeEmailSent;
    	      this.totalValue = defaults.totalValue;
    	      this.transactionExtensionId = defaults.transactionExtensionId;
    	      this.type = defaults.type;
    	      this.updatedBy = defaults.updatedBy;
    	      this.usedAmount = defaults.usedAmount;
        }

        public Builder adminEmail(String adminEmail) {
            this.adminEmail = Objects.requireNonNull(adminEmail);
            return this;
        }
        public Builder agreementId(String agreementId) {
            this.agreementId = Objects.requireNonNull(agreementId);
            return this;
        }
        public Builder agreementName(String agreementName) {
            this.agreementName = Objects.requireNonNull(agreementName);
            return this;
        }
        public Builder agreementType(String agreementType) {
            this.agreementType = Objects.requireNonNull(agreementType);
            return this;
        }
        public Builder availableAmount(String availableAmount) {
            this.availableAmount = Objects.requireNonNull(availableAmount);
            return this;
        }
        public Builder billToAddresses(List<GetSubscribedServicesSubscribedServiceBillToAddress> billToAddresses) {
            this.billToAddresses = Objects.requireNonNull(billToAddresses);
            return this;
        }
        public Builder billToAddresses(GetSubscribedServicesSubscribedServiceBillToAddress... billToAddresses) {
            return billToAddresses(List.of(billToAddresses));
        }
        public Builder billToContacts(List<GetSubscribedServicesSubscribedServiceBillToContact> billToContacts) {
            this.billToContacts = Objects.requireNonNull(billToContacts);
            return this;
        }
        public Builder billToContacts(GetSubscribedServicesSubscribedServiceBillToContact... billToContacts) {
            return billToContacts(List.of(billToContacts));
        }
        public Builder billToCustomers(List<GetSubscribedServicesSubscribedServiceBillToCustomer> billToCustomers) {
            this.billToCustomers = Objects.requireNonNull(billToCustomers);
            return this;
        }
        public Builder billToCustomers(GetSubscribedServicesSubscribedServiceBillToCustomer... billToCustomers) {
            return billToCustomers(List.of(billToCustomers));
        }
        public Builder billingFrequency(String billingFrequency) {
            this.billingFrequency = Objects.requireNonNull(billingFrequency);
            return this;
        }
        public Builder bookingOptyNumber(String bookingOptyNumber) {
            this.bookingOptyNumber = Objects.requireNonNull(bookingOptyNumber);
            return this;
        }
        public Builder buyerEmail(String buyerEmail) {
            this.buyerEmail = Objects.requireNonNull(buyerEmail);
            return this;
        }
        public Builder commitmentScheduleId(String commitmentScheduleId) {
            this.commitmentScheduleId = Objects.requireNonNull(commitmentScheduleId);
            return this;
        }
        public Builder commitmentServices(List<GetSubscribedServicesSubscribedServiceCommitmentService> commitmentServices) {
            this.commitmentServices = Objects.requireNonNull(commitmentServices);
            return this;
        }
        public Builder commitmentServices(GetSubscribedServicesSubscribedServiceCommitmentService... commitmentServices) {
            return commitmentServices(List.of(commitmentServices));
        }
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        public Builder creditPercentage(String creditPercentage) {
            this.creditPercentage = Objects.requireNonNull(creditPercentage);
            return this;
        }
        public Builder csi(String csi) {
            this.csi = Objects.requireNonNull(csi);
            return this;
        }
        public Builder customerTransactionReference(String customerTransactionReference) {
            this.customerTransactionReference = Objects.requireNonNull(customerTransactionReference);
            return this;
        }
        public Builder dataCenter(String dataCenter) {
            this.dataCenter = Objects.requireNonNull(dataCenter);
            return this;
        }
        public Builder dataCenterRegion(String dataCenterRegion) {
            this.dataCenterRegion = Objects.requireNonNull(dataCenterRegion);
            return this;
        }
        public Builder eligibleToRenew(String eligibleToRenew) {
            this.eligibleToRenew = Objects.requireNonNull(eligibleToRenew);
            return this;
        }
        public Builder endUserAddresses(List<GetSubscribedServicesSubscribedServiceEndUserAddress> endUserAddresses) {
            this.endUserAddresses = Objects.requireNonNull(endUserAddresses);
            return this;
        }
        public Builder endUserAddresses(GetSubscribedServicesSubscribedServiceEndUserAddress... endUserAddresses) {
            return endUserAddresses(List.of(endUserAddresses));
        }
        public Builder endUserContacts(List<GetSubscribedServicesSubscribedServiceEndUserContact> endUserContacts) {
            this.endUserContacts = Objects.requireNonNull(endUserContacts);
            return this;
        }
        public Builder endUserContacts(GetSubscribedServicesSubscribedServiceEndUserContact... endUserContacts) {
            return endUserContacts(List.of(endUserContacts));
        }
        public Builder endUserCustomers(List<GetSubscribedServicesSubscribedServiceEndUserCustomer> endUserCustomers) {
            this.endUserCustomers = Objects.requireNonNull(endUserCustomers);
            return this;
        }
        public Builder endUserCustomers(GetSubscribedServicesSubscribedServiceEndUserCustomer... endUserCustomers) {
            return endUserCustomers(List.of(endUserCustomers));
        }
        public Builder fulfillmentSet(String fulfillmentSet) {
            this.fulfillmentSet = Objects.requireNonNull(fulfillmentSet);
            return this;
        }
        public Builder fundedAllocationValue(String fundedAllocationValue) {
            this.fundedAllocationValue = Objects.requireNonNull(fundedAllocationValue);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isAllowance(Boolean isAllowance) {
            this.isAllowance = Objects.requireNonNull(isAllowance);
            return this;
        }
        public Builder isCapToPriceList(Boolean isCapToPriceList) {
            this.isCapToPriceList = Objects.requireNonNull(isCapToPriceList);
            return this;
        }
        public Builder isCreditEnabled(Boolean isCreditEnabled) {
            this.isCreditEnabled = Objects.requireNonNull(isCreditEnabled);
            return this;
        }
        public Builder isHavingUsage(Boolean isHavingUsage) {
            this.isHavingUsage = Objects.requireNonNull(isHavingUsage);
            return this;
        }
        public Builder isIntentToPay(Boolean isIntentToPay) {
            this.isIntentToPay = Objects.requireNonNull(isIntentToPay);
            return this;
        }
        public Builder isPayg(Boolean isPayg) {
            this.isPayg = Objects.requireNonNull(isPayg);
            return this;
        }
        public Builder isSingleRateCard(Boolean isSingleRateCard) {
            this.isSingleRateCard = Objects.requireNonNull(isSingleRateCard);
            return this;
        }
        public Builder isVariableCommitment(Boolean isVariableCommitment) {
            this.isVariableCommitment = Objects.requireNonNull(isVariableCommitment);
            return this;
        }
        public Builder lineNetAmount(String lineNetAmount) {
            this.lineNetAmount = Objects.requireNonNull(lineNetAmount);
            return this;
        }
        public Builder majorSet(String majorSet) {
            this.majorSet = Objects.requireNonNull(majorSet);
            return this;
        }
        public Builder netUnitPrice(String netUnitPrice) {
            this.netUnitPrice = Objects.requireNonNull(netUnitPrice);
            return this;
        }
        public Builder operationType(String operationType) {
            this.operationType = Objects.requireNonNull(operationType);
            return this;
        }
        public Builder orderHeaderId(String orderHeaderId) {
            this.orderHeaderId = Objects.requireNonNull(orderHeaderId);
            return this;
        }
        public Builder orderLineId(String orderLineId) {
            this.orderLineId = Objects.requireNonNull(orderLineId);
            return this;
        }
        public Builder orderLineNumber(Integer orderLineNumber) {
            this.orderLineNumber = Objects.requireNonNull(orderLineNumber);
            return this;
        }
        public Builder orderNumber(String orderNumber) {
            this.orderNumber = Objects.requireNonNull(orderNumber);
            return this;
        }
        public Builder orderType(String orderType) {
            this.orderType = Objects.requireNonNull(orderType);
            return this;
        }
        public Builder originalPromoAmount(String originalPromoAmount) {
            this.originalPromoAmount = Objects.requireNonNull(originalPromoAmount);
            return this;
        }
        public Builder overageBillTo(String overageBillTo) {
            this.overageBillTo = Objects.requireNonNull(overageBillTo);
            return this;
        }
        public Builder overageDiscountPercentage(String overageDiscountPercentage) {
            this.overageDiscountPercentage = Objects.requireNonNull(overageDiscountPercentage);
            return this;
        }
        public Builder overagePolicy(String overagePolicy) {
            this.overagePolicy = Objects.requireNonNull(overagePolicy);
            return this;
        }
        public Builder partnerCreditAmount(String partnerCreditAmount) {
            this.partnerCreditAmount = Objects.requireNonNull(partnerCreditAmount);
            return this;
        }
        public Builder partnerTransactionType(String partnerTransactionType) {
            this.partnerTransactionType = Objects.requireNonNull(partnerTransactionType);
            return this;
        }
        public Builder paygPolicy(String paygPolicy) {
            this.paygPolicy = Objects.requireNonNull(paygPolicy);
            return this;
        }
        public Builder paymentMethod(String paymentMethod) {
            this.paymentMethod = Objects.requireNonNull(paymentMethod);
            return this;
        }
        public Builder paymentNumber(String paymentNumber) {
            this.paymentNumber = Objects.requireNonNull(paymentNumber);
            return this;
        }
        public Builder paymentTerms(List<GetSubscribedServicesSubscribedServicePaymentTerm> paymentTerms) {
            this.paymentTerms = Objects.requireNonNull(paymentTerms);
            return this;
        }
        public Builder paymentTerms(GetSubscribedServicesSubscribedServicePaymentTerm... paymentTerms) {
            return paymentTerms(List.of(paymentTerms));
        }
        public Builder pricePeriod(String pricePeriod) {
            this.pricePeriod = Objects.requireNonNull(pricePeriod);
            return this;
        }
        public Builder pricingModel(String pricingModel) {
            this.pricingModel = Objects.requireNonNull(pricingModel);
            return this;
        }
        public Builder products(List<GetSubscribedServicesSubscribedServiceProduct> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(GetSubscribedServicesSubscribedServiceProduct... products) {
            return products(List.of(products));
        }
        public Builder programType(String programType) {
            this.programType = Objects.requireNonNull(programType);
            return this;
        }
        public Builder promoOrderLineId(String promoOrderLineId) {
            this.promoOrderLineId = Objects.requireNonNull(promoOrderLineId);
            return this;
        }
        public Builder promoType(String promoType) {
            this.promoType = Objects.requireNonNull(promoType);
            return this;
        }
        public Builder promotionPricingType(String promotionPricingType) {
            this.promotionPricingType = Objects.requireNonNull(promotionPricingType);
            return this;
        }
        public Builder provisioningSource(String provisioningSource) {
            this.provisioningSource = Objects.requireNonNull(provisioningSource);
            return this;
        }
        public Builder quantity(String quantity) {
            this.quantity = Objects.requireNonNull(quantity);
            return this;
        }
        public Builder rateCardDiscountPercentage(String rateCardDiscountPercentage) {
            this.rateCardDiscountPercentage = Objects.requireNonNull(rateCardDiscountPercentage);
            return this;
        }
        public Builder rateCards(List<GetSubscribedServicesSubscribedServiceRateCard> rateCards) {
            this.rateCards = Objects.requireNonNull(rateCards);
            return this;
        }
        public Builder rateCards(GetSubscribedServicesSubscribedServiceRateCard... rateCards) {
            return rateCards(List.of(rateCards));
        }
        public Builder ratecardType(String ratecardType) {
            this.ratecardType = Objects.requireNonNull(ratecardType);
            return this;
        }
        public Builder renewalOptyId(String renewalOptyId) {
            this.renewalOptyId = Objects.requireNonNull(renewalOptyId);
            return this;
        }
        public Builder renewalOptyNumber(String renewalOptyNumber) {
            this.renewalOptyNumber = Objects.requireNonNull(renewalOptyNumber);
            return this;
        }
        public Builder renewalOptyType(String renewalOptyType) {
            this.renewalOptyType = Objects.requireNonNull(renewalOptyType);
            return this;
        }
        public Builder renewedSubscribedServiceId(String renewedSubscribedServiceId) {
            this.renewedSubscribedServiceId = Objects.requireNonNull(renewedSubscribedServiceId);
            return this;
        }
        public Builder resellerAddresses(List<GetSubscribedServicesSubscribedServiceResellerAddress> resellerAddresses) {
            this.resellerAddresses = Objects.requireNonNull(resellerAddresses);
            return this;
        }
        public Builder resellerAddresses(GetSubscribedServicesSubscribedServiceResellerAddress... resellerAddresses) {
            return resellerAddresses(List.of(resellerAddresses));
        }
        public Builder resellerContacts(List<GetSubscribedServicesSubscribedServiceResellerContact> resellerContacts) {
            this.resellerContacts = Objects.requireNonNull(resellerContacts);
            return this;
        }
        public Builder resellerContacts(GetSubscribedServicesSubscribedServiceResellerContact... resellerContacts) {
            return resellerContacts(List.of(resellerContacts));
        }
        public Builder resellerCustomers(List<GetSubscribedServicesSubscribedServiceResellerCustomer> resellerCustomers) {
            this.resellerCustomers = Objects.requireNonNull(resellerCustomers);
            return this;
        }
        public Builder resellerCustomers(GetSubscribedServicesSubscribedServiceResellerCustomer... resellerCustomers) {
            return resellerCustomers(List.of(resellerCustomers));
        }
        public Builder revenueLineId(String revenueLineId) {
            this.revenueLineId = Objects.requireNonNull(revenueLineId);
            return this;
        }
        public Builder revenueLineNumber(String revenueLineNumber) {
            this.revenueLineNumber = Objects.requireNonNull(revenueLineNumber);
            return this;
        }
        public Builder revisedArrInLc(String revisedArrInLc) {
            this.revisedArrInLc = Objects.requireNonNull(revisedArrInLc);
            return this;
        }
        public Builder revisedArrInSc(String revisedArrInSc) {
            this.revisedArrInSc = Objects.requireNonNull(revisedArrInSc);
            return this;
        }
        public Builder salesAccountPartyId(String salesAccountPartyId) {
            this.salesAccountPartyId = Objects.requireNonNull(salesAccountPartyId);
            return this;
        }
        public Builder salesChannel(String salesChannel) {
            this.salesChannel = Objects.requireNonNull(salesChannel);
            return this;
        }
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        public Builder serviceToAddresses(List<GetSubscribedServicesSubscribedServiceServiceToAddress> serviceToAddresses) {
            this.serviceToAddresses = Objects.requireNonNull(serviceToAddresses);
            return this;
        }
        public Builder serviceToAddresses(GetSubscribedServicesSubscribedServiceServiceToAddress... serviceToAddresses) {
            return serviceToAddresses(List.of(serviceToAddresses));
        }
        public Builder serviceToContacts(List<GetSubscribedServicesSubscribedServiceServiceToContact> serviceToContacts) {
            this.serviceToContacts = Objects.requireNonNull(serviceToContacts);
            return this;
        }
        public Builder serviceToContacts(GetSubscribedServicesSubscribedServiceServiceToContact... serviceToContacts) {
            return serviceToContacts(List.of(serviceToContacts));
        }
        public Builder serviceToCustomers(List<GetSubscribedServicesSubscribedServiceServiceToCustomer> serviceToCustomers) {
            this.serviceToCustomers = Objects.requireNonNull(serviceToCustomers);
            return this;
        }
        public Builder serviceToCustomers(GetSubscribedServicesSubscribedServiceServiceToCustomer... serviceToCustomers) {
            return serviceToCustomers(List.of(serviceToCustomers));
        }
        public Builder soldToContacts(List<GetSubscribedServicesSubscribedServiceSoldToContact> soldToContacts) {
            this.soldToContacts = Objects.requireNonNull(soldToContacts);
            return this;
        }
        public Builder soldToContacts(GetSubscribedServicesSubscribedServiceSoldToContact... soldToContacts) {
            return soldToContacts(List.of(soldToContacts));
        }
        public Builder soldToCustomers(List<GetSubscribedServicesSubscribedServiceSoldToCustomer> soldToCustomers) {
            this.soldToCustomers = Objects.requireNonNull(soldToCustomers);
            return this;
        }
        public Builder soldToCustomers(GetSubscribedServicesSubscribedServiceSoldToCustomer... soldToCustomers) {
            return soldToCustomers(List.of(soldToCustomers));
        }
        public Builder startDateType(String startDateType) {
            this.startDateType = Objects.requireNonNull(startDateType);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        public Builder subscriptionSource(String subscriptionSource) {
            this.subscriptionSource = Objects.requireNonNull(subscriptionSource);
            return this;
        }
        public Builder systemArrInLc(String systemArrInLc) {
            this.systemArrInLc = Objects.requireNonNull(systemArrInLc);
            return this;
        }
        public Builder systemArrInSc(String systemArrInSc) {
            this.systemArrInSc = Objects.requireNonNull(systemArrInSc);
            return this;
        }
        public Builder systemAtrArrInLc(String systemAtrArrInLc) {
            this.systemAtrArrInLc = Objects.requireNonNull(systemAtrArrInLc);
            return this;
        }
        public Builder systemAtrArrInSc(String systemAtrArrInSc) {
            this.systemAtrArrInSc = Objects.requireNonNull(systemAtrArrInSc);
            return this;
        }
        public Builder termValue(String termValue) {
            this.termValue = Objects.requireNonNull(termValue);
            return this;
        }
        public Builder termValueUom(String termValueUom) {
            this.termValueUom = Objects.requireNonNull(termValueUom);
            return this;
        }
        public Builder timeAgreementEnd(String timeAgreementEnd) {
            this.timeAgreementEnd = Objects.requireNonNull(timeAgreementEnd);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeCustomerConfig(String timeCustomerConfig) {
            this.timeCustomerConfig = Objects.requireNonNull(timeCustomerConfig);
            return this;
        }
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        public Builder timeMajorsetEnd(String timeMajorsetEnd) {
            this.timeMajorsetEnd = Objects.requireNonNull(timeMajorsetEnd);
            return this;
        }
        public Builder timeMajorsetStart(String timeMajorsetStart) {
            this.timeMajorsetStart = Objects.requireNonNull(timeMajorsetStart);
            return this;
        }
        public Builder timePaymentExpiry(String timePaymentExpiry) {
            this.timePaymentExpiry = Objects.requireNonNull(timePaymentExpiry);
            return this;
        }
        public Builder timeProvisioned(String timeProvisioned) {
            this.timeProvisioned = Objects.requireNonNull(timeProvisioned);
            return this;
        }
        public Builder timeServiceConfigurationEmailSent(String timeServiceConfigurationEmailSent) {
            this.timeServiceConfigurationEmailSent = Objects.requireNonNull(timeServiceConfigurationEmailSent);
            return this;
        }
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder timeWelcomeEmailSent(String timeWelcomeEmailSent) {
            this.timeWelcomeEmailSent = Objects.requireNonNull(timeWelcomeEmailSent);
            return this;
        }
        public Builder totalValue(String totalValue) {
            this.totalValue = Objects.requireNonNull(totalValue);
            return this;
        }
        public Builder transactionExtensionId(String transactionExtensionId) {
            this.transactionExtensionId = Objects.requireNonNull(transactionExtensionId);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder updatedBy(String updatedBy) {
            this.updatedBy = Objects.requireNonNull(updatedBy);
            return this;
        }
        public Builder usedAmount(String usedAmount) {
            this.usedAmount = Objects.requireNonNull(usedAmount);
            return this;
        }        public GetSubscribedServicesSubscribedService build() {
            return new GetSubscribedServicesSubscribedService(adminEmail, agreementId, agreementName, agreementType, availableAmount, billToAddresses, billToContacts, billToCustomers, billingFrequency, bookingOptyNumber, buyerEmail, commitmentScheduleId, commitmentServices, createdBy, creditPercentage, csi, customerTransactionReference, dataCenter, dataCenterRegion, eligibleToRenew, endUserAddresses, endUserContacts, endUserCustomers, fulfillmentSet, fundedAllocationValue, id, isAllowance, isCapToPriceList, isCreditEnabled, isHavingUsage, isIntentToPay, isPayg, isSingleRateCard, isVariableCommitment, lineNetAmount, majorSet, netUnitPrice, operationType, orderHeaderId, orderLineId, orderLineNumber, orderNumber, orderType, originalPromoAmount, overageBillTo, overageDiscountPercentage, overagePolicy, partnerCreditAmount, partnerTransactionType, paygPolicy, paymentMethod, paymentNumber, paymentTerms, pricePeriod, pricingModel, products, programType, promoOrderLineId, promoType, promotionPricingType, provisioningSource, quantity, rateCardDiscountPercentage, rateCards, ratecardType, renewalOptyId, renewalOptyNumber, renewalOptyType, renewedSubscribedServiceId, resellerAddresses, resellerContacts, resellerCustomers, revenueLineId, revenueLineNumber, revisedArrInLc, revisedArrInSc, salesAccountPartyId, salesChannel, serialNumber, serviceToAddresses, serviceToContacts, serviceToCustomers, soldToContacts, soldToCustomers, startDateType, status, subscriptionId, subscriptionSource, systemArrInLc, systemArrInSc, systemAtrArrInLc, systemAtrArrInSc, termValue, termValueUom, timeAgreementEnd, timeCreated, timeCustomerConfig, timeEnd, timeMajorsetEnd, timeMajorsetStart, timePaymentExpiry, timeProvisioned, timeServiceConfigurationEmailSent, timeStart, timeUpdated, timeWelcomeEmailSent, totalValue, transactionExtensionId, type, updatedBy, usedAmount);
        }
    }
}
