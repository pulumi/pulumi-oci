// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetSubscriptionsFilter;
import com.pulumi.oci.OneSubsription.outputs.GetSubscriptionsSubscription;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscriptionsResult {
    private final @Nullable String buyerEmail;
    private final String compartmentId;
    private final @Nullable List<GetSubscriptionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable Boolean isCommitInfoRequired;
    private final @Nullable String planNumber;
    private final @Nullable String subscriptionId;
    /**
     * @return The list of subscriptions.
     * 
     */
    private final List<GetSubscriptionsSubscription> subscriptions;

    @CustomType.Constructor
    private GetSubscriptionsResult(
        @CustomType.Parameter("buyerEmail") @Nullable String buyerEmail,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetSubscriptionsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isCommitInfoRequired") @Nullable Boolean isCommitInfoRequired,
        @CustomType.Parameter("planNumber") @Nullable String planNumber,
        @CustomType.Parameter("subscriptionId") @Nullable String subscriptionId,
        @CustomType.Parameter("subscriptions") List<GetSubscriptionsSubscription> subscriptions) {
        this.buyerEmail = buyerEmail;
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.isCommitInfoRequired = isCommitInfoRequired;
        this.planNumber = planNumber;
        this.subscriptionId = subscriptionId;
        this.subscriptions = subscriptions;
    }

    public Optional<String> buyerEmail() {
        return Optional.ofNullable(this.buyerEmail);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetSubscriptionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> isCommitInfoRequired() {
        return Optional.ofNullable(this.isCommitInfoRequired);
    }
    public Optional<String> planNumber() {
        return Optional.ofNullable(this.planNumber);
    }
    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }
    /**
     * @return The list of subscriptions.
     * 
     */
    public List<GetSubscriptionsSubscription> subscriptions() {
        return this.subscriptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String buyerEmail;
        private String compartmentId;
        private @Nullable List<GetSubscriptionsFilter> filters;
        private String id;
        private @Nullable Boolean isCommitInfoRequired;
        private @Nullable String planNumber;
        private @Nullable String subscriptionId;
        private List<GetSubscriptionsSubscription> subscriptions;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubscriptionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buyerEmail = defaults.buyerEmail;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isCommitInfoRequired = defaults.isCommitInfoRequired;
    	      this.planNumber = defaults.planNumber;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.subscriptions = defaults.subscriptions;
        }

        public Builder buyerEmail(@Nullable String buyerEmail) {
            this.buyerEmail = buyerEmail;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetSubscriptionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSubscriptionsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isCommitInfoRequired(@Nullable Boolean isCommitInfoRequired) {
            this.isCommitInfoRequired = isCommitInfoRequired;
            return this;
        }
        public Builder planNumber(@Nullable String planNumber) {
            this.planNumber = planNumber;
            return this;
        }
        public Builder subscriptionId(@Nullable String subscriptionId) {
            this.subscriptionId = subscriptionId;
            return this;
        }
        public Builder subscriptions(List<GetSubscriptionsSubscription> subscriptions) {
            this.subscriptions = Objects.requireNonNull(subscriptions);
            return this;
        }
        public Builder subscriptions(GetSubscriptionsSubscription... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }        public GetSubscriptionsResult build() {
            return new GetSubscriptionsResult(buyerEmail, compartmentId, filters, id, isCommitInfoRequired, planNumber, subscriptionId, subscriptions);
        }
    }
}
