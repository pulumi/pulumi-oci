// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetSubscriptionsSubscriptionCurrency;
import com.pulumi.oci.OneSubsription.outputs.GetSubscriptionsSubscriptionSubscribedService;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSubscriptionsSubscription {
    /**
     * @return Currency details
     * 
     */
    private List<GetSubscriptionsSubscriptionCurrency> currencies;
    /**
     * @return Hold reason of the plan
     * 
     */
    private String holdReason;
    /**
     * @return Customer friendly service name provided by PRG
     * 
     */
    private String serviceName;
    /**
     * @return Subscribed service status
     * 
     */
    private String status;
    /**
     * @return List of Subscribed Services of the plan
     * 
     */
    private List<GetSubscriptionsSubscriptionSubscribedService> subscribedServices;
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    private String timeEnd;
    /**
     * @return Represents the date of the hold release
     * 
     */
    private String timeHoldReleaseEta;
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    private String timeStart;

    private GetSubscriptionsSubscription() {}
    /**
     * @return Currency details
     * 
     */
    public List<GetSubscriptionsSubscriptionCurrency> currencies() {
        return this.currencies;
    }
    /**
     * @return Hold reason of the plan
     * 
     */
    public String holdReason() {
        return this.holdReason;
    }
    /**
     * @return Customer friendly service name provided by PRG
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Subscribed service status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return List of Subscribed Services of the plan
     * 
     */
    public List<GetSubscriptionsSubscriptionSubscribedService> subscribedServices() {
        return this.subscribedServices;
    }
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Represents the date of the hold release
     * 
     */
    public String timeHoldReleaseEta() {
        return this.timeHoldReleaseEta;
    }
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsSubscription defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSubscriptionsSubscriptionCurrency> currencies;
        private String holdReason;
        private String serviceName;
        private String status;
        private List<GetSubscriptionsSubscriptionSubscribedService> subscribedServices;
        private String timeEnd;
        private String timeHoldReleaseEta;
        private String timeStart;
        public Builder() {}
        public Builder(GetSubscriptionsSubscription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currencies = defaults.currencies;
    	      this.holdReason = defaults.holdReason;
    	      this.serviceName = defaults.serviceName;
    	      this.status = defaults.status;
    	      this.subscribedServices = defaults.subscribedServices;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeHoldReleaseEta = defaults.timeHoldReleaseEta;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder currencies(List<GetSubscriptionsSubscriptionCurrency> currencies) {
            this.currencies = Objects.requireNonNull(currencies);
            return this;
        }
        public Builder currencies(GetSubscriptionsSubscriptionCurrency... currencies) {
            return currencies(List.of(currencies));
        }
        @CustomType.Setter
        public Builder holdReason(String holdReason) {
            this.holdReason = Objects.requireNonNull(holdReason);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder subscribedServices(List<GetSubscriptionsSubscriptionSubscribedService> subscribedServices) {
            this.subscribedServices = Objects.requireNonNull(subscribedServices);
            return this;
        }
        public Builder subscribedServices(GetSubscriptionsSubscriptionSubscribedService... subscribedServices) {
            return subscribedServices(List.of(subscribedServices));
        }
        @CustomType.Setter
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeHoldReleaseEta(String timeHoldReleaseEta) {
            this.timeHoldReleaseEta = Objects.requireNonNull(timeHoldReleaseEta);
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        public GetSubscriptionsSubscription build() {
            final var _resultValue = new GetSubscriptionsSubscription();
            _resultValue.currencies = currencies;
            _resultValue.holdReason = holdReason;
            _resultValue.serviceName = serviceName;
            _resultValue.status = status;
            _resultValue.subscribedServices = subscribedServices;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeHoldReleaseEta = timeHoldReleaseEta;
            _resultValue.timeStart = timeStart;
            return _resultValue;
        }
    }
}
