// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OneSubsription.outputs.GetSubscriptionsSubscriptionSubscribedServiceCommitmentService;
import com.pulumi.oci.OneSubsription.outputs.GetSubscriptionsSubscriptionSubscribedServiceProduct;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscriptionsSubscriptionSubscribedService {
    /**
     * @return Commitment available amount
     * 
     */
    private @Nullable String availableAmount;
    /**
     * @return Booking Opportunity Number of Subscribed Service
     * 
     */
    private @Nullable String bookingOptyNumber;
    /**
     * @return List of Commitment services of a line
     * 
     */
    private @Nullable List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices;
    /**
     * @return Subscribed service CSI number
     * 
     */
    private @Nullable String csi;
    /**
     * @return Subscribed service data center region
     * 
     */
    private @Nullable String dataCenterRegion;
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    private @Nullable String fundedAllocationValue;
    /**
     * @return SPM internal Subscribed Service ID
     * 
     */
    private @Nullable String id;
    /**
     * @return Subscribed service intent to pay flag
     * 
     */
    private @Nullable Boolean isIntentToPay;
    /**
     * @return Subscribed service net unit price
     * 
     */
    private @Nullable String netUnitPrice;
    /**
     * @return Subscribed service operation type
     * 
     */
    private @Nullable String operationType;
    /**
     * @return Sales Order Number associated to the subscribed service
     * 
     */
    private @Nullable String orderNumber;
    /**
     * @return Subscribed service Promotion Amount
     * 
     */
    private @Nullable String originalPromoAmount;
    /**
     * @return This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
     * 
     */
    private @Nullable String partnerTransactionType;
    /**
     * @return Subscribed service pricing model
     * 
     */
    private @Nullable String pricingModel;
    /**
     * @return Product description
     * 
     */
    private @Nullable List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products;
    /**
     * @return Subscribed service program type
     * 
     */
    private @Nullable String programType;
    /**
     * @return Subscribed service promotion type
     * 
     */
    private @Nullable String promoType;
    /**
     * @return Subscribed service quantity
     * 
     */
    private @Nullable String quantity;
    /**
     * @return Subscribed service status
     * 
     */
    private @Nullable String status;
    /**
     * @return Term value in Months
     * 
     */
    private @Nullable String termValue;
    /**
     * @return Term value UOM
     * 
     */
    private @Nullable String termValueUom;
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    private @Nullable String timeEnd;
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    private @Nullable String timeStart;
    /**
     * @return Subscribed service total value
     * 
     */
    private @Nullable String totalValue;
    /**
     * @return Subscribed service used amount
     * 
     */
    private @Nullable String usedAmount;

    private GetSubscriptionsSubscriptionSubscribedService() {}
    /**
     * @return Commitment available amount
     * 
     */
    public Optional<String> availableAmount() {
        return Optional.ofNullable(this.availableAmount);
    }
    /**
     * @return Booking Opportunity Number of Subscribed Service
     * 
     */
    public Optional<String> bookingOptyNumber() {
        return Optional.ofNullable(this.bookingOptyNumber);
    }
    /**
     * @return List of Commitment services of a line
     * 
     */
    public List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices() {
        return this.commitmentServices == null ? List.of() : this.commitmentServices;
    }
    /**
     * @return Subscribed service CSI number
     * 
     */
    public Optional<String> csi() {
        return Optional.ofNullable(this.csi);
    }
    /**
     * @return Subscribed service data center region
     * 
     */
    public Optional<String> dataCenterRegion() {
        return Optional.ofNullable(this.dataCenterRegion);
    }
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    public Optional<String> fundedAllocationValue() {
        return Optional.ofNullable(this.fundedAllocationValue);
    }
    /**
     * @return SPM internal Subscribed Service ID
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Subscribed service intent to pay flag
     * 
     */
    public Optional<Boolean> isIntentToPay() {
        return Optional.ofNullable(this.isIntentToPay);
    }
    /**
     * @return Subscribed service net unit price
     * 
     */
    public Optional<String> netUnitPrice() {
        return Optional.ofNullable(this.netUnitPrice);
    }
    /**
     * @return Subscribed service operation type
     * 
     */
    public Optional<String> operationType() {
        return Optional.ofNullable(this.operationType);
    }
    /**
     * @return Sales Order Number associated to the subscribed service
     * 
     */
    public Optional<String> orderNumber() {
        return Optional.ofNullable(this.orderNumber);
    }
    /**
     * @return Subscribed service Promotion Amount
     * 
     */
    public Optional<String> originalPromoAmount() {
        return Optional.ofNullable(this.originalPromoAmount);
    }
    /**
     * @return This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
     * 
     */
    public Optional<String> partnerTransactionType() {
        return Optional.ofNullable(this.partnerTransactionType);
    }
    /**
     * @return Subscribed service pricing model
     * 
     */
    public Optional<String> pricingModel() {
        return Optional.ofNullable(this.pricingModel);
    }
    /**
     * @return Product description
     * 
     */
    public List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products() {
        return this.products == null ? List.of() : this.products;
    }
    /**
     * @return Subscribed service program type
     * 
     */
    public Optional<String> programType() {
        return Optional.ofNullable(this.programType);
    }
    /**
     * @return Subscribed service promotion type
     * 
     */
    public Optional<String> promoType() {
        return Optional.ofNullable(this.promoType);
    }
    /**
     * @return Subscribed service quantity
     * 
     */
    public Optional<String> quantity() {
        return Optional.ofNullable(this.quantity);
    }
    /**
     * @return Subscribed service status
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Term value in Months
     * 
     */
    public Optional<String> termValue() {
        return Optional.ofNullable(this.termValue);
    }
    /**
     * @return Term value UOM
     * 
     */
    public Optional<String> termValueUom() {
        return Optional.ofNullable(this.termValueUom);
    }
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    public Optional<String> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }
    /**
     * @return Subscribed service total value
     * 
     */
    public Optional<String> totalValue() {
        return Optional.ofNullable(this.totalValue);
    }
    /**
     * @return Subscribed service used amount
     * 
     */
    public Optional<String> usedAmount() {
        return Optional.ofNullable(this.usedAmount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsSubscriptionSubscribedService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availableAmount;
        private @Nullable String bookingOptyNumber;
        private @Nullable List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices;
        private @Nullable String csi;
        private @Nullable String dataCenterRegion;
        private @Nullable String fundedAllocationValue;
        private @Nullable String id;
        private @Nullable Boolean isIntentToPay;
        private @Nullable String netUnitPrice;
        private @Nullable String operationType;
        private @Nullable String orderNumber;
        private @Nullable String originalPromoAmount;
        private @Nullable String partnerTransactionType;
        private @Nullable String pricingModel;
        private @Nullable List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products;
        private @Nullable String programType;
        private @Nullable String promoType;
        private @Nullable String quantity;
        private @Nullable String status;
        private @Nullable String termValue;
        private @Nullable String termValueUom;
        private @Nullable String timeEnd;
        private @Nullable String timeStart;
        private @Nullable String totalValue;
        private @Nullable String usedAmount;
        public Builder() {}
        public Builder(GetSubscriptionsSubscriptionSubscribedService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableAmount = defaults.availableAmount;
    	      this.bookingOptyNumber = defaults.bookingOptyNumber;
    	      this.commitmentServices = defaults.commitmentServices;
    	      this.csi = defaults.csi;
    	      this.dataCenterRegion = defaults.dataCenterRegion;
    	      this.fundedAllocationValue = defaults.fundedAllocationValue;
    	      this.id = defaults.id;
    	      this.isIntentToPay = defaults.isIntentToPay;
    	      this.netUnitPrice = defaults.netUnitPrice;
    	      this.operationType = defaults.operationType;
    	      this.orderNumber = defaults.orderNumber;
    	      this.originalPromoAmount = defaults.originalPromoAmount;
    	      this.partnerTransactionType = defaults.partnerTransactionType;
    	      this.pricingModel = defaults.pricingModel;
    	      this.products = defaults.products;
    	      this.programType = defaults.programType;
    	      this.promoType = defaults.promoType;
    	      this.quantity = defaults.quantity;
    	      this.status = defaults.status;
    	      this.termValue = defaults.termValue;
    	      this.termValueUom = defaults.termValueUom;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
    	      this.totalValue = defaults.totalValue;
    	      this.usedAmount = defaults.usedAmount;
        }

        @CustomType.Setter
        public Builder availableAmount(@Nullable String availableAmount) {
            this.availableAmount = availableAmount;
            return this;
        }
        @CustomType.Setter
        public Builder bookingOptyNumber(@Nullable String bookingOptyNumber) {
            this.bookingOptyNumber = bookingOptyNumber;
            return this;
        }
        @CustomType.Setter
        public Builder commitmentServices(@Nullable List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices) {
            this.commitmentServices = commitmentServices;
            return this;
        }
        public Builder commitmentServices(GetSubscriptionsSubscriptionSubscribedServiceCommitmentService... commitmentServices) {
            return commitmentServices(List.of(commitmentServices));
        }
        @CustomType.Setter
        public Builder csi(@Nullable String csi) {
            this.csi = csi;
            return this;
        }
        @CustomType.Setter
        public Builder dataCenterRegion(@Nullable String dataCenterRegion) {
            this.dataCenterRegion = dataCenterRegion;
            return this;
        }
        @CustomType.Setter
        public Builder fundedAllocationValue(@Nullable String fundedAllocationValue) {
            this.fundedAllocationValue = fundedAllocationValue;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isIntentToPay(@Nullable Boolean isIntentToPay) {
            this.isIntentToPay = isIntentToPay;
            return this;
        }
        @CustomType.Setter
        public Builder netUnitPrice(@Nullable String netUnitPrice) {
            this.netUnitPrice = netUnitPrice;
            return this;
        }
        @CustomType.Setter
        public Builder operationType(@Nullable String operationType) {
            this.operationType = operationType;
            return this;
        }
        @CustomType.Setter
        public Builder orderNumber(@Nullable String orderNumber) {
            this.orderNumber = orderNumber;
            return this;
        }
        @CustomType.Setter
        public Builder originalPromoAmount(@Nullable String originalPromoAmount) {
            this.originalPromoAmount = originalPromoAmount;
            return this;
        }
        @CustomType.Setter
        public Builder partnerTransactionType(@Nullable String partnerTransactionType) {
            this.partnerTransactionType = partnerTransactionType;
            return this;
        }
        @CustomType.Setter
        public Builder pricingModel(@Nullable String pricingModel) {
            this.pricingModel = pricingModel;
            return this;
        }
        @CustomType.Setter
        public Builder products(@Nullable List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products) {
            this.products = products;
            return this;
        }
        public Builder products(GetSubscriptionsSubscriptionSubscribedServiceProduct... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder programType(@Nullable String programType) {
            this.programType = programType;
            return this;
        }
        @CustomType.Setter
        public Builder promoType(@Nullable String promoType) {
            this.promoType = promoType;
            return this;
        }
        @CustomType.Setter
        public Builder quantity(@Nullable String quantity) {
            this.quantity = quantity;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder termValue(@Nullable String termValue) {
            this.termValue = termValue;
            return this;
        }
        @CustomType.Setter
        public Builder termValueUom(@Nullable String termValueUom) {
            this.termValueUom = termValueUom;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(@Nullable String timeEnd) {
            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(@Nullable String timeStart) {
            this.timeStart = timeStart;
            return this;
        }
        @CustomType.Setter
        public Builder totalValue(@Nullable String totalValue) {
            this.totalValue = totalValue;
            return this;
        }
        @CustomType.Setter
        public Builder usedAmount(@Nullable String usedAmount) {
            this.usedAmount = usedAmount;
            return this;
        }
        public GetSubscriptionsSubscriptionSubscribedService build() {
            final var o = new GetSubscriptionsSubscriptionSubscribedService();
            o.availableAmount = availableAmount;
            o.bookingOptyNumber = bookingOptyNumber;
            o.commitmentServices = commitmentServices;
            o.csi = csi;
            o.dataCenterRegion = dataCenterRegion;
            o.fundedAllocationValue = fundedAllocationValue;
            o.id = id;
            o.isIntentToPay = isIntentToPay;
            o.netUnitPrice = netUnitPrice;
            o.operationType = operationType;
            o.orderNumber = orderNumber;
            o.originalPromoAmount = originalPromoAmount;
            o.partnerTransactionType = partnerTransactionType;
            o.pricingModel = pricingModel;
            o.products = products;
            o.programType = programType;
            o.promoType = promoType;
            o.quantity = quantity;
            o.status = status;
            o.termValue = termValue;
            o.termValueUom = termValueUom;
            o.timeEnd = timeEnd;
            o.timeStart = timeStart;
            o.totalValue = totalValue;
            o.usedAmount = usedAmount;
            return o;
        }
    }
}
