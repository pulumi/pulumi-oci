// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ons.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNotificationTopicResult {
    /**
     * @return The endpoint for managing subscriptions or publishing messages to the topic.
     * 
     */
    private @Nullable String apiEndpoint;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the topic.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The description of the topic.
     * 
     */
    private @Nullable String description;
    /**
     * @return For optimistic concurrency control. See `if-match`.
     * 
     */
    private @Nullable String etag;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    private @Nullable String id;
    /**
     * @return The name of the topic.
     * 
     */
    private @Nullable String name;
    /**
     * @return A unique short topic Id. This is used only for SMS subscriptions.
     * 
     */
    private @Nullable String shortTopicId;
    /**
     * @return The lifecycle state of the topic.
     * 
     */
    private @Nullable String state;
    /**
     * @return The time the topic was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
     * 
     */
    private String topicId;

    private GetNotificationTopicResult() {}
    /**
     * @return The endpoint for managing subscriptions or publishing messages to the topic.
     * 
     */
    public Optional<String> apiEndpoint() {
        return Optional.ofNullable(this.apiEndpoint);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the topic.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The description of the topic.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return For optimistic concurrency control. See `if-match`.
     * 
     */
    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the topic.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return A unique short topic Id. This is used only for SMS subscriptions.
     * 
     */
    public Optional<String> shortTopicId() {
        return Optional.ofNullable(this.shortTopicId);
    }
    /**
     * @return The lifecycle state of the topic.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time the topic was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
     * 
     */
    public String topicId() {
        return this.topicId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotificationTopicResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiEndpoint;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String etag;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String shortTopicId;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private String topicId;
        public Builder() {}
        public Builder(GetNotificationTopicResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiEndpoint = defaults.apiEndpoint;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.shortTopicId = defaults.shortTopicId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.topicId = defaults.topicId;
        }

        @CustomType.Setter
        public Builder apiEndpoint(@Nullable String apiEndpoint) {
            this.apiEndpoint = apiEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder etag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder shortTopicId(@Nullable String shortTopicId) {
            this.shortTopicId = shortTopicId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder topicId(String topicId) {
            this.topicId = Objects.requireNonNull(topicId);
            return this;
        }
        public GetNotificationTopicResult build() {
            final var o = new GetNotificationTopicResult();
            o.apiEndpoint = apiEndpoint;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.etag = etag;
            o.freeformTags = freeformTags;
            o.id = id;
            o.name = name;
            o.shortTopicId = shortTopicId;
            o.state = state;
            o.timeCreated = timeCreated;
            o.topicId = topicId;
            return o;
        }
    }
}
