// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ons.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSubscriptionResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
     * 
     */
    private String compartmentId;
    /**
     * @return The time when this suscription was created.
     * 
     */
    private String createdTime;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The delivery policy of the subscription. Stored as a JSON string.
     * 
     */
    private String deliveryPolicy;
    /**
     * @return A locator that corresponds to the subscription protocol. For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol.
     * 
     */
    private String endpoint;
    /**
     * @return For optimistic concurrency control. See `if-match`.
     * 
     */
    private String etag;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription.
     * 
     */
    private String id;
    /**
     * @return The protocol used for the subscription.
     * 
     */
    private String protocol;
    /**
     * @return The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
     * 
     */
    private String state;
    private String subscriptionId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated topic.
     * 
     */
    private String topicId;

    private GetSubscriptionResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The time when this suscription was created.
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The delivery policy of the subscription. Stored as a JSON string.
     * 
     */
    public String deliveryPolicy() {
        return this.deliveryPolicy;
    }
    /**
     * @return A locator that corresponds to the subscription protocol. For example, an email address for a subscription that uses the `EMAIL` protocol, or a URL for a subscription that uses an HTTP-based protocol.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return For optimistic concurrency control. See `if-match`.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The protocol used for the subscription.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The lifecycle state of the subscription. The status of a new subscription is PENDING; when confirmed, the subscription status changes to ACTIVE.
     * 
     */
    public String state() {
        return this.state;
    }
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated topic.
     * 
     */
    public String topicId() {
        return this.topicId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String createdTime;
        private Map<String,Object> definedTags;
        private String deliveryPolicy;
        private String endpoint;
        private String etag;
        private Map<String,Object> freeformTags;
        private String id;
        private String protocol;
        private String state;
        private String subscriptionId;
        private String topicId;
        public Builder() {}
        public Builder(GetSubscriptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdTime = defaults.createdTime;
    	      this.definedTags = defaults.definedTags;
    	      this.deliveryPolicy = defaults.deliveryPolicy;
    	      this.endpoint = defaults.endpoint;
    	      this.etag = defaults.etag;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.protocol = defaults.protocol;
    	      this.state = defaults.state;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.topicId = defaults.topicId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            this.createdTime = Objects.requireNonNull(createdTime);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder deliveryPolicy(String deliveryPolicy) {
            this.deliveryPolicy = Objects.requireNonNull(deliveryPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        @CustomType.Setter
        public Builder topicId(String topicId) {
            this.topicId = Objects.requireNonNull(topicId);
            return this;
        }
        public GetSubscriptionResult build() {
            final var _resultValue = new GetSubscriptionResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.createdTime = createdTime;
            _resultValue.definedTags = definedTags;
            _resultValue.deliveryPolicy = deliveryPolicy;
            _resultValue.endpoint = endpoint;
            _resultValue.etag = etag;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.protocol = protocol;
            _resultValue.state = state;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.topicId = topicId;
            return _resultValue;
        }
    }
}
