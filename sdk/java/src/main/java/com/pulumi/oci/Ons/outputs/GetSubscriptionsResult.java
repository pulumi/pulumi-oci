// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ons.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Ons.outputs.GetSubscriptionsFilter;
import com.pulumi.oci.Ons.outputs.GetSubscriptionsSubscription;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscriptionsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetSubscriptionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of subscriptions.
     * 
     */
    private List<GetSubscriptionsSubscription> subscriptions;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated topic.
     * 
     */
    private @Nullable String topicId;

    private GetSubscriptionsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetSubscriptionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of subscriptions.
     * 
     */
    public List<GetSubscriptionsSubscription> subscriptions() {
        return this.subscriptions;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated topic.
     * 
     */
    public Optional<String> topicId() {
        return Optional.ofNullable(this.topicId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetSubscriptionsFilter> filters;
        private String id;
        private List<GetSubscriptionsSubscription> subscriptions;
        private @Nullable String topicId;
        public Builder() {}
        public Builder(GetSubscriptionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.subscriptions = defaults.subscriptions;
    	      this.topicId = defaults.topicId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSubscriptionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSubscriptionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptions(List<GetSubscriptionsSubscription> subscriptions) {
            if (subscriptions == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsResult", "subscriptions");
            }
            this.subscriptions = subscriptions;
            return this;
        }
        public Builder subscriptions(GetSubscriptionsSubscription... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }
        @CustomType.Setter
        public Builder topicId(@Nullable String topicId) {

            this.topicId = topicId;
            return this;
        }
        public GetSubscriptionsResult build() {
            final var _resultValue = new GetSubscriptionsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.subscriptions = subscriptions;
            _resultValue.topicId = topicId;
            return _resultValue;
        }
    }
}
