// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opa.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Opa.inputs.OpaInstanceAttachmentArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpaInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final OpaInstanceState Empty = new OpaInstanceState();

    /**
     * A list of associated attachments to other services
     * 
     */
    @Import(name="attachments")
    private @Nullable Output<List<OpaInstanceAttachmentArgs>> attachments;

    /**
     * @return A list of associated attachments to other services
     * 
     */
    public Optional<Output<List<OpaInstanceAttachmentArgs>>> attachments() {
        return Optional.ofNullable(this.attachments);
    }

    /**
     * (Updatable) Compartment Identifier
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Parameter specifying which entitlement to use for billing purposes
     * 
     */
    @Import(name="consumptionModel")
    private @Nullable Output<String> consumptionModel;

    /**
     * @return Parameter specifying which entitlement to use for billing purposes
     * 
     */
    public Optional<Output<String>> consumptionModel() {
        return Optional.ofNullable(this.consumptionModel);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Description of the Oracle Process Automation instance.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of the Oracle Process Automation instance.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) OpaInstance Identifier. User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) OpaInstance Identifier. User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * IDCS Authentication token. This is required for all realms with IDCS. This property is optional, as it is not required for non-IDCS realms.
     * 
     */
    @Import(name="idcsAt")
    private @Nullable Output<String> idcsAt;

    /**
     * @return IDCS Authentication token. This is required for all realms with IDCS. This property is optional, as it is not required for non-IDCS realms.
     * 
     */
    public Optional<Output<String>> idcsAt() {
        return Optional.ofNullable(this.idcsAt);
    }

    /**
     * This property specifies the name of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    @Import(name="identityAppDisplayName")
    private @Nullable Output<String> identityAppDisplayName;

    /**
     * @return This property specifies the name of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    public Optional<Output<String>> identityAppDisplayName() {
        return Optional.ofNullable(this.identityAppDisplayName);
    }

    /**
     * This property specifies the GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user role mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    @Import(name="identityAppGuid")
    private @Nullable Output<String> identityAppGuid;

    /**
     * @return This property specifies the GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user role mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    public Optional<Output<String>> identityAppGuid() {
        return Optional.ofNullable(this.identityAppGuid);
    }

    /**
     * This property specifies the OPC Service Instance GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    @Import(name="identityAppOpcServiceInstanceGuid")
    private @Nullable Output<String> identityAppOpcServiceInstanceGuid;

    /**
     * @return This property specifies the OPC Service Instance GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    public Optional<Output<String>> identityAppOpcServiceInstanceGuid() {
        return Optional.ofNullable(this.identityAppOpcServiceInstanceGuid);
    }

    /**
     * This property specifies the domain url of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    @Import(name="identityDomainUrl")
    private @Nullable Output<String> identityDomainUrl;

    /**
     * @return This property specifies the domain url of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    public Optional<Output<String>> identityDomainUrl() {
        return Optional.ofNullable(this.identityDomainUrl);
    }

    /**
     * OPA Instance URL
     * 
     */
    @Import(name="instanceUrl")
    private @Nullable Output<String> instanceUrl;

    /**
     * @return OPA Instance URL
     * 
     */
    public Optional<Output<String>> instanceUrl() {
        return Optional.ofNullable(this.instanceUrl);
    }

    /**
     * indicates if breakGlass is enabled for the opa instance.
     * 
     */
    @Import(name="isBreakglassEnabled")
    private @Nullable Output<Boolean> isBreakglassEnabled;

    /**
     * @return indicates if breakGlass is enabled for the opa instance.
     * 
     */
    public Optional<Output<Boolean>> isBreakglassEnabled() {
        return Optional.ofNullable(this.isBreakglassEnabled);
    }

    /**
     * MeteringType Identifier
     * 
     */
    @Import(name="meteringType")
    private @Nullable Output<String> meteringType;

    /**
     * @return MeteringType Identifier
     * 
     */
    public Optional<Output<String>> meteringType() {
        return Optional.ofNullable(this.meteringType);
    }

    /**
     * Shape of the instance.
     * 
     */
    @Import(name="shapeName")
    private @Nullable Output<String> shapeName;

    /**
     * @return Shape of the instance.
     * 
     */
    public Optional<Output<String>> shapeName() {
        return Optional.ofNullable(this.shapeName);
    }

    /**
     * (Updatable) The target state for the Opa Instance. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The target state for the Opa Instance. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time when OpaInstance was created. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time when OpaInstance was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the OpaInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the OpaInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private OpaInstanceState() {}

    private OpaInstanceState(OpaInstanceState $) {
        this.attachments = $.attachments;
        this.compartmentId = $.compartmentId;
        this.consumptionModel = $.consumptionModel;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.idcsAt = $.idcsAt;
        this.identityAppDisplayName = $.identityAppDisplayName;
        this.identityAppGuid = $.identityAppGuid;
        this.identityAppOpcServiceInstanceGuid = $.identityAppOpcServiceInstanceGuid;
        this.identityDomainUrl = $.identityDomainUrl;
        this.instanceUrl = $.instanceUrl;
        this.isBreakglassEnabled = $.isBreakglassEnabled;
        this.meteringType = $.meteringType;
        this.shapeName = $.shapeName;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpaInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpaInstanceState $;

        public Builder() {
            $ = new OpaInstanceState();
        }

        public Builder(OpaInstanceState defaults) {
            $ = new OpaInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(@Nullable Output<List<OpaInstanceAttachmentArgs>> attachments) {
            $.attachments = attachments;
            return this;
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(List<OpaInstanceAttachmentArgs> attachments) {
            return attachments(Output.of(attachments));
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(OpaInstanceAttachmentArgs... attachments) {
            return attachments(List.of(attachments));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param consumptionModel Parameter specifying which entitlement to use for billing purposes
         * 
         * @return builder
         * 
         */
        public Builder consumptionModel(@Nullable Output<String> consumptionModel) {
            $.consumptionModel = consumptionModel;
            return this;
        }

        /**
         * @param consumptionModel Parameter specifying which entitlement to use for billing purposes
         * 
         * @return builder
         * 
         */
        public Builder consumptionModel(String consumptionModel) {
            return consumptionModel(Output.of(consumptionModel));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Description of the Oracle Process Automation instance.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of the Oracle Process Automation instance.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) OpaInstance Identifier. User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) OpaInstance Identifier. User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param idcsAt IDCS Authentication token. This is required for all realms with IDCS. This property is optional, as it is not required for non-IDCS realms.
         * 
         * @return builder
         * 
         */
        public Builder idcsAt(@Nullable Output<String> idcsAt) {
            $.idcsAt = idcsAt;
            return this;
        }

        /**
         * @param idcsAt IDCS Authentication token. This is required for all realms with IDCS. This property is optional, as it is not required for non-IDCS realms.
         * 
         * @return builder
         * 
         */
        public Builder idcsAt(String idcsAt) {
            return idcsAt(Output.of(idcsAt));
        }

        /**
         * @param identityAppDisplayName This property specifies the name of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppDisplayName(@Nullable Output<String> identityAppDisplayName) {
            $.identityAppDisplayName = identityAppDisplayName;
            return this;
        }

        /**
         * @param identityAppDisplayName This property specifies the name of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppDisplayName(String identityAppDisplayName) {
            return identityAppDisplayName(Output.of(identityAppDisplayName));
        }

        /**
         * @param identityAppGuid This property specifies the GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user role mappings to grant access to this OPA instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppGuid(@Nullable Output<String> identityAppGuid) {
            $.identityAppGuid = identityAppGuid;
            return this;
        }

        /**
         * @param identityAppGuid This property specifies the GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user role mappings to grant access to this OPA instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppGuid(String identityAppGuid) {
            return identityAppGuid(Output.of(identityAppGuid));
        }

        /**
         * @param identityAppOpcServiceInstanceGuid This property specifies the OPC Service Instance GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppOpcServiceInstanceGuid(@Nullable Output<String> identityAppOpcServiceInstanceGuid) {
            $.identityAppOpcServiceInstanceGuid = identityAppOpcServiceInstanceGuid;
            return this;
        }

        /**
         * @param identityAppOpcServiceInstanceGuid This property specifies the OPC Service Instance GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppOpcServiceInstanceGuid(String identityAppOpcServiceInstanceGuid) {
            return identityAppOpcServiceInstanceGuid(Output.of(identityAppOpcServiceInstanceGuid));
        }

        /**
         * @param identityDomainUrl This property specifies the domain url of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityDomainUrl(@Nullable Output<String> identityDomainUrl) {
            $.identityDomainUrl = identityDomainUrl;
            return this;
        }

        /**
         * @param identityDomainUrl This property specifies the domain url of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityDomainUrl(String identityDomainUrl) {
            return identityDomainUrl(Output.of(identityDomainUrl));
        }

        /**
         * @param instanceUrl OPA Instance URL
         * 
         * @return builder
         * 
         */
        public Builder instanceUrl(@Nullable Output<String> instanceUrl) {
            $.instanceUrl = instanceUrl;
            return this;
        }

        /**
         * @param instanceUrl OPA Instance URL
         * 
         * @return builder
         * 
         */
        public Builder instanceUrl(String instanceUrl) {
            return instanceUrl(Output.of(instanceUrl));
        }

        /**
         * @param isBreakglassEnabled indicates if breakGlass is enabled for the opa instance.
         * 
         * @return builder
         * 
         */
        public Builder isBreakglassEnabled(@Nullable Output<Boolean> isBreakglassEnabled) {
            $.isBreakglassEnabled = isBreakglassEnabled;
            return this;
        }

        /**
         * @param isBreakglassEnabled indicates if breakGlass is enabled for the opa instance.
         * 
         * @return builder
         * 
         */
        public Builder isBreakglassEnabled(Boolean isBreakglassEnabled) {
            return isBreakglassEnabled(Output.of(isBreakglassEnabled));
        }

        /**
         * @param meteringType MeteringType Identifier
         * 
         * @return builder
         * 
         */
        public Builder meteringType(@Nullable Output<String> meteringType) {
            $.meteringType = meteringType;
            return this;
        }

        /**
         * @param meteringType MeteringType Identifier
         * 
         * @return builder
         * 
         */
        public Builder meteringType(String meteringType) {
            return meteringType(Output.of(meteringType));
        }

        /**
         * @param shapeName Shape of the instance.
         * 
         * @return builder
         * 
         */
        public Builder shapeName(@Nullable Output<String> shapeName) {
            $.shapeName = shapeName;
            return this;
        }

        /**
         * @param shapeName Shape of the instance.
         * 
         * @return builder
         * 
         */
        public Builder shapeName(String shapeName) {
            return shapeName(Output.of(shapeName));
        }

        /**
         * @param state (Updatable) The target state for the Opa Instance. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The target state for the Opa Instance. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time when OpaInstance was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time when OpaInstance was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the OpaInstance was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the OpaInstance was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public OpaInstanceState build() {
            return $;
        }
    }

}
