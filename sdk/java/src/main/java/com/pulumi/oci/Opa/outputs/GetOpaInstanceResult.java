// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opa.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Opa.outputs.GetOpaInstanceAttachment;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOpaInstanceResult {
    /**
     * @return A list of associated attachments to other services
     * 
     */
    private @Nullable List<GetOpaInstanceAttachment> attachments;
    /**
     * @return Compartment Identifier
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The entitlement used for billing purposes
     * 
     */
    private @Nullable String consumptionModel;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Description of the Process Automation instance.
     * 
     */
    private @Nullable String description;
    /**
     * @return OpaInstance Identifier, can be renamed
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private @Nullable String id;
    private @Nullable String idcsAt;
    /**
     * @return This property specifies the name of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    private @Nullable String identityAppDisplayName;
    /**
     * @return This property specifies the GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user role mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    private @Nullable String identityAppGuid;
    /**
     * @return This property specifies the OPC Service Instance GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    private @Nullable String identityAppOpcServiceInstanceGuid;
    /**
     * @return This property specifies the domain url of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    private @Nullable String identityDomainUrl;
    /**
     * @return OPA Instance URL
     * 
     */
    private @Nullable String instanceUrl;
    /**
     * @return indicates if breakGlass is enabled for the opa instance.
     * 
     */
    private @Nullable Boolean isBreakglassEnabled;
    /**
     * @return MeteringType Identifier
     * 
     */
    private @Nullable String meteringType;
    private String opaInstanceId;
    /**
     * @return Shape of the instance.
     * 
     */
    private @Nullable String shapeName;
    /**
     * @return The current state of the OpaInstance.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time when OpaInstance was created. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the OpaInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeUpdated;

    private GetOpaInstanceResult() {}
    /**
     * @return A list of associated attachments to other services
     * 
     */
    public List<GetOpaInstanceAttachment> attachments() {
        return this.attachments == null ? List.of() : this.attachments;
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The entitlement used for billing purposes
     * 
     */
    public Optional<String> consumptionModel() {
        return Optional.ofNullable(this.consumptionModel);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Description of the Process Automation instance.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return OpaInstance Identifier, can be renamed
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> idcsAt() {
        return Optional.ofNullable(this.idcsAt);
    }
    /**
     * @return This property specifies the name of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    public Optional<String> identityAppDisplayName() {
        return Optional.ofNullable(this.identityAppDisplayName);
    }
    /**
     * @return This property specifies the GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user role mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    public Optional<String> identityAppGuid() {
        return Optional.ofNullable(this.identityAppGuid);
    }
    /**
     * @return This property specifies the OPC Service Instance GUID of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    public Optional<String> identityAppOpcServiceInstanceGuid() {
        return Optional.ofNullable(this.identityAppOpcServiceInstanceGuid);
    }
    /**
     * @return This property specifies the domain url of the Identity Application instance OPA has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this OPA instance for users within the identity domain.
     * 
     */
    public Optional<String> identityDomainUrl() {
        return Optional.ofNullable(this.identityDomainUrl);
    }
    /**
     * @return OPA Instance URL
     * 
     */
    public Optional<String> instanceUrl() {
        return Optional.ofNullable(this.instanceUrl);
    }
    /**
     * @return indicates if breakGlass is enabled for the opa instance.
     * 
     */
    public Optional<Boolean> isBreakglassEnabled() {
        return Optional.ofNullable(this.isBreakglassEnabled);
    }
    /**
     * @return MeteringType Identifier
     * 
     */
    public Optional<String> meteringType() {
        return Optional.ofNullable(this.meteringType);
    }
    public String opaInstanceId() {
        return this.opaInstanceId;
    }
    /**
     * @return Shape of the instance.
     * 
     */
    public Optional<String> shapeName() {
        return Optional.ofNullable(this.shapeName);
    }
    /**
     * @return The current state of the OpaInstance.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time when OpaInstance was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the OpaInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpaInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetOpaInstanceAttachment> attachments;
        private @Nullable String compartmentId;
        private @Nullable String consumptionModel;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String idcsAt;
        private @Nullable String identityAppDisplayName;
        private @Nullable String identityAppGuid;
        private @Nullable String identityAppOpcServiceInstanceGuid;
        private @Nullable String identityDomainUrl;
        private @Nullable String instanceUrl;
        private @Nullable Boolean isBreakglassEnabled;
        private @Nullable String meteringType;
        private String opaInstanceId;
        private @Nullable String shapeName;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetOpaInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachments = defaults.attachments;
    	      this.compartmentId = defaults.compartmentId;
    	      this.consumptionModel = defaults.consumptionModel;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.idcsAt = defaults.idcsAt;
    	      this.identityAppDisplayName = defaults.identityAppDisplayName;
    	      this.identityAppGuid = defaults.identityAppGuid;
    	      this.identityAppOpcServiceInstanceGuid = defaults.identityAppOpcServiceInstanceGuid;
    	      this.identityDomainUrl = defaults.identityDomainUrl;
    	      this.instanceUrl = defaults.instanceUrl;
    	      this.isBreakglassEnabled = defaults.isBreakglassEnabled;
    	      this.meteringType = defaults.meteringType;
    	      this.opaInstanceId = defaults.opaInstanceId;
    	      this.shapeName = defaults.shapeName;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder attachments(@Nullable List<GetOpaInstanceAttachment> attachments) {
            this.attachments = attachments;
            return this;
        }
        public Builder attachments(GetOpaInstanceAttachment... attachments) {
            return attachments(List.of(attachments));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder consumptionModel(@Nullable String consumptionModel) {
            this.consumptionModel = consumptionModel;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsAt(@Nullable String idcsAt) {
            this.idcsAt = idcsAt;
            return this;
        }
        @CustomType.Setter
        public Builder identityAppDisplayName(@Nullable String identityAppDisplayName) {
            this.identityAppDisplayName = identityAppDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder identityAppGuid(@Nullable String identityAppGuid) {
            this.identityAppGuid = identityAppGuid;
            return this;
        }
        @CustomType.Setter
        public Builder identityAppOpcServiceInstanceGuid(@Nullable String identityAppOpcServiceInstanceGuid) {
            this.identityAppOpcServiceInstanceGuid = identityAppOpcServiceInstanceGuid;
            return this;
        }
        @CustomType.Setter
        public Builder identityDomainUrl(@Nullable String identityDomainUrl) {
            this.identityDomainUrl = identityDomainUrl;
            return this;
        }
        @CustomType.Setter
        public Builder instanceUrl(@Nullable String instanceUrl) {
            this.instanceUrl = instanceUrl;
            return this;
        }
        @CustomType.Setter
        public Builder isBreakglassEnabled(@Nullable Boolean isBreakglassEnabled) {
            this.isBreakglassEnabled = isBreakglassEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder meteringType(@Nullable String meteringType) {
            this.meteringType = meteringType;
            return this;
        }
        @CustomType.Setter
        public Builder opaInstanceId(String opaInstanceId) {
            this.opaInstanceId = Objects.requireNonNull(opaInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder shapeName(@Nullable String shapeName) {
            this.shapeName = shapeName;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetOpaInstanceResult build() {
            final var o = new GetOpaInstanceResult();
            o.attachments = attachments;
            o.compartmentId = compartmentId;
            o.consumptionModel = consumptionModel;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.idcsAt = idcsAt;
            o.identityAppDisplayName = identityAppDisplayName;
            o.identityAppGuid = identityAppGuid;
            o.identityAppOpcServiceInstanceGuid = identityAppOpcServiceInstanceGuid;
            o.identityDomainUrl = identityDomainUrl;
            o.instanceUrl = instanceUrl;
            o.isBreakglassEnabled = isBreakglassEnabled;
            o.meteringType = meteringType;
            o.opaInstanceId = opaInstanceId;
            o.shapeName = shapeName;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
