// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Opensearch.ClusterArgs;
import com.pulumi.oci.Opensearch.inputs.ClusterState;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Opensearch Cluster resource in Oracle Cloud Infrastructure Opensearch service.
 * 
 * Creates a new OpensearchCluster.
 * 
 * ## Prerequisites
 * 
 * The below policies must be created in compartment before creating OpensearchCluster
 * 
 * ##### {Compartment-Name} - Name of  your compartment
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *     }
 * }
 * ```
 * 
 * For latest documentation on OpenSearch use please refer to https://docs.oracle.com/en-us/iaas/Content/search-opensearch/home.htm\
 * Required permissions: https://docs.oracle.com/en-us/iaas/Content/search-opensearch/Concepts/ocisearchpermissions.htm
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Opensearch.Cluster;
 * import com.pulumi.oci.Opensearch.ClusterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testOpensearchCluster = new Cluster(&#34;testOpensearchCluster&#34;, ClusterArgs.builder()        
 *             .compartmentId(var_.compartment_id())
 *             .dataNodeCount(var_.opensearch_cluster_data_node_count())
 *             .dataNodeHostMemoryGb(var_.opensearch_cluster_data_node_host_memory_gb())
 *             .dataNodeHostOcpuCount(var_.opensearch_cluster_data_node_host_ocpu_count())
 *             .dataNodeHostType(var_.opensearch_cluster_data_node_host_type())
 *             .dataNodeStorageGb(var_.opensearch_cluster_data_node_storage_gb())
 *             .displayName(var_.opensearch_cluster_display_name())
 *             .masterNodeCount(var_.opensearch_cluster_master_node_count())
 *             .masterNodeHostMemoryGb(var_.opensearch_cluster_master_node_host_memory_gb())
 *             .masterNodeHostOcpuCount(var_.opensearch_cluster_master_node_host_ocpu_count())
 *             .masterNodeHostType(var_.opensearch_cluster_master_node_host_type())
 *             .opendashboardNodeCount(var_.opensearch_cluster_opendashboard_node_count())
 *             .opendashboardNodeHostMemoryGb(var_.opensearch_cluster_opendashboard_node_host_memory_gb())
 *             .opendashboardNodeHostOcpuCount(var_.opensearch_cluster_opendashboard_node_host_ocpu_count())
 *             .softwareVersion(var_.opensearch_cluster_software_version())
 *             .subnetCompartmentId(oci_identity_compartment.test_compartment().id())
 *             .subnetId(oci_core_subnet.test_subnet().id())
 *             .vcnCompartmentId(oci_identity_compartment.test_compartment().id())
 *             .vcnId(oci_core_vcn.test_vcn().id())
 *             .dataNodeHostBareMetalShape(var_.opensearch_cluster_data_node_host_bare_metal_shape())
 *             .definedTags(Map.of(&#34;foo-namespace.bar-key&#34;, &#34;value&#34;))
 *             .freeformTags(Map.of(&#34;bar-key&#34;, &#34;value&#34;))
 *             .masterNodeHostBareMetalShape(var_.opensearch_cluster_master_node_host_bare_metal_shape())
 *             .systemTags(var_.opensearch_cluster_system_tags())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * OpensearchClusters can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Opensearch/cluster:Cluster test_opensearch_cluster &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Opensearch/cluster:Cluster")
public class Cluster extends com.pulumi.resources.CustomResource {
    /**
     * The availability domains to distribute the cluser nodes across.
     * 
     */
    @Export(name="availabilityDomains", type=List.class, parameters={String.class})
    private Output<List<String>> availabilityDomains;

    /**
     * @return The availability domains to distribute the cluser nodes across.
     * 
     */
    public Output<List<String>> availabilityDomains() {
        return this.availabilityDomains;
    }
    /**
     * The OCID of the compartment to create the cluster in.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment to create the cluster in.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The number of data nodes to configure for the cluster.
     * 
     */
    @Export(name="dataNodeCount", type=Integer.class, parameters={})
    private Output<Integer> dataNodeCount;

    /**
     * @return The number of data nodes to configure for the cluster.
     * 
     */
    public Output<Integer> dataNodeCount() {
        return this.dataNodeCount;
    }
    /**
     * The bare metal shape for the cluster&#39;s data nodes.
     * 
     */
    @Export(name="dataNodeHostBareMetalShape", type=String.class, parameters={})
    private Output<String> dataNodeHostBareMetalShape;

    /**
     * @return The bare metal shape for the cluster&#39;s data nodes.
     * 
     */
    public Output<String> dataNodeHostBareMetalShape() {
        return this.dataNodeHostBareMetalShape;
    }
    /**
     * The amount of memory in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    @Export(name="dataNodeHostMemoryGb", type=Integer.class, parameters={})
    private Output<Integer> dataNodeHostMemoryGb;

    /**
     * @return The amount of memory in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    public Output<Integer> dataNodeHostMemoryGb() {
        return this.dataNodeHostMemoryGb;
    }
    /**
     * The number of OCPUs to configure for the cluster&#39;s data nodes.
     * 
     */
    @Export(name="dataNodeHostOcpuCount", type=Integer.class, parameters={})
    private Output<Integer> dataNodeHostOcpuCount;

    /**
     * @return The number of OCPUs to configure for the cluster&#39;s data nodes.
     * 
     */
    public Output<Integer> dataNodeHostOcpuCount() {
        return this.dataNodeHostOcpuCount;
    }
    /**
     * TThe instance type for the cluster&#39;s data nodes.
     * 
     */
    @Export(name="dataNodeHostType", type=String.class, parameters={})
    private Output<String> dataNodeHostType;

    /**
     * @return TThe instance type for the cluster&#39;s data nodes.
     * 
     */
    public Output<String> dataNodeHostType() {
        return this.dataNodeHostType;
    }
    /**
     * The amount of storage in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    @Export(name="dataNodeStorageGb", type=Integer.class, parameters={})
    private Output<Integer> dataNodeStorageGb;

    /**
     * @return The amount of storage in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    public Output<Integer> dataNodeStorageGb() {
        return this.dataNodeStorageGb;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) The name of the cluster. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) The name of the cluster. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    @Export(name="fqdn", type=String.class, parameters={})
    private Output<String> fqdn;

    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * Additional information about the current lifecycle state of the cluster.
     * 
     */
    @Export(name="lifecycleDetails", type=String.class, parameters={})
    private Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state of the cluster.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * The number of master nodes to configure for the cluster.
     * 
     */
    @Export(name="masterNodeCount", type=Integer.class, parameters={})
    private Output<Integer> masterNodeCount;

    /**
     * @return The number of master nodes to configure for the cluster.
     * 
     */
    public Output<Integer> masterNodeCount() {
        return this.masterNodeCount;
    }
    /**
     * The bare metal shape for the cluster&#39;s master nodes.
     * 
     */
    @Export(name="masterNodeHostBareMetalShape", type=String.class, parameters={})
    private Output<String> masterNodeHostBareMetalShape;

    /**
     * @return The bare metal shape for the cluster&#39;s master nodes.
     * 
     */
    public Output<String> masterNodeHostBareMetalShape() {
        return this.masterNodeHostBareMetalShape;
    }
    /**
     * The amount of memory in GB, to configure per node for the cluster&#39;s master nodes.
     * 
     */
    @Export(name="masterNodeHostMemoryGb", type=Integer.class, parameters={})
    private Output<Integer> masterNodeHostMemoryGb;

    /**
     * @return The amount of memory in GB, to configure per node for the cluster&#39;s master nodes.
     * 
     */
    public Output<Integer> masterNodeHostMemoryGb() {
        return this.masterNodeHostMemoryGb;
    }
    /**
     * The number of OCPUs to configure for the cluser&#39;s master nodes.
     * 
     */
    @Export(name="masterNodeHostOcpuCount", type=Integer.class, parameters={})
    private Output<Integer> masterNodeHostOcpuCount;

    /**
     * @return The number of OCPUs to configure for the cluser&#39;s master nodes.
     * 
     */
    public Output<Integer> masterNodeHostOcpuCount() {
        return this.masterNodeHostOcpuCount;
    }
    /**
     * The instance type for the cluster&#39;s master nodes.
     * 
     */
    @Export(name="masterNodeHostType", type=String.class, parameters={})
    private Output<String> masterNodeHostType;

    /**
     * @return The instance type for the cluster&#39;s master nodes.
     * 
     */
    public Output<String> masterNodeHostType() {
        return this.masterNodeHostType;
    }
    /**
     * The fully qualified domain name (FQDN) for the cluster&#39;s OpenSearch Dashboard API endpoint.
     * 
     */
    @Export(name="opendashboardFqdn", type=String.class, parameters={})
    private Output<String> opendashboardFqdn;

    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s OpenSearch Dashboard API endpoint.
     * 
     */
    public Output<String> opendashboardFqdn() {
        return this.opendashboardFqdn;
    }
    /**
     * The number of OpenSearch Dashboard nodes to configure for the cluster.
     * 
     */
    @Export(name="opendashboardNodeCount", type=Integer.class, parameters={})
    private Output<Integer> opendashboardNodeCount;

    /**
     * @return The number of OpenSearch Dashboard nodes to configure for the cluster.
     * 
     */
    public Output<Integer> opendashboardNodeCount() {
        return this.opendashboardNodeCount;
    }
    /**
     * The amount of memory in GB, to configure for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    @Export(name="opendashboardNodeHostMemoryGb", type=Integer.class, parameters={})
    private Output<Integer> opendashboardNodeHostMemoryGb;

    /**
     * @return The amount of memory in GB, to configure for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    public Output<Integer> opendashboardNodeHostMemoryGb() {
        return this.opendashboardNodeHostMemoryGb;
    }
    /**
     * The number of OCPUs to configure for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    @Export(name="opendashboardNodeHostOcpuCount", type=Integer.class, parameters={})
    private Output<Integer> opendashboardNodeHostOcpuCount;

    /**
     * @return The number of OCPUs to configure for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    public Output<Integer> opendashboardNodeHostOcpuCount() {
        return this.opendashboardNodeHostOcpuCount;
    }
    /**
     * The private IP address for the cluster&#39;s OpenSearch Dashboard.
     * 
     */
    @Export(name="opendashboardPrivateIp", type=String.class, parameters={})
    private Output<String> opendashboardPrivateIp;

    /**
     * @return The private IP address for the cluster&#39;s OpenSearch Dashboard.
     * 
     */
    public Output<String> opendashboardPrivateIp() {
        return this.opendashboardPrivateIp;
    }
    /**
     * The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    @Export(name="opensearchFqdn", type=String.class, parameters={})
    private Output<String> opensearchFqdn;

    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public Output<String> opensearchFqdn() {
        return this.opensearchFqdn;
    }
    /**
     * The cluster&#39;s private IP address.
     * 
     */
    @Export(name="opensearchPrivateIp", type=String.class, parameters={})
    private Output<String> opensearchPrivateIp;

    /**
     * @return The cluster&#39;s private IP address.
     * 
     */
    public Output<String> opensearchPrivateIp() {
        return this.opensearchPrivateIp;
    }
    /**
     * (Updatable) The version of the software the cluster is running.
     * 
     */
    @Export(name="softwareVersion", type=String.class, parameters={})
    private Output<String> softwareVersion;

    /**
     * @return (Updatable) The version of the software the cluster is running.
     * 
     */
    public Output<String> softwareVersion() {
        return this.softwareVersion;
    }
    /**
     * The current state of the cluster.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the cluster.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The OCID for the compartment where the cluster&#39;s subnet is located.
     * 
     */
    @Export(name="subnetCompartmentId", type=String.class, parameters={})
    private Output<String> subnetCompartmentId;

    /**
     * @return The OCID for the compartment where the cluster&#39;s subnet is located.
     * 
     */
    public Output<String> subnetCompartmentId() {
        return this.subnetCompartmentId;
    }
    /**
     * The OCID of the cluster&#39;s subnet.
     * 
     */
    @Export(name="subnetId", type=String.class, parameters={})
    private Output<String> subnetId;

    /**
     * @return The OCID of the cluster&#39;s subnet.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,Object>> systemTags() {
        return this.systemTags;
    }
    /**
     * The amount of time in milliseconds since the cluster was created.
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The amount of time in milliseconds since the cluster was created.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The amount of time in milliseconds since the cluster was updated.
     * 
     */
    @Export(name="timeDeleted", type=String.class, parameters={})
    private Output<String> timeDeleted;

    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    public Output<String> timeDeleted() {
        return this.timeDeleted;
    }
    /**
     * The amount of time in milliseconds since the cluster was updated.
     * 
     */
    @Export(name="timeUpdated", type=String.class, parameters={})
    private Output<String> timeUpdated;

    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * The size in GB of the cluster&#39;s total storage.
     * 
     */
    @Export(name="totalStorageGb", type=Integer.class, parameters={})
    private Output<Integer> totalStorageGb;

    /**
     * @return The size in GB of the cluster&#39;s total storage.
     * 
     */
    public Output<Integer> totalStorageGb() {
        return this.totalStorageGb;
    }
    /**
     * The OCID for the compartment where the cluster&#39;s VCN is located.
     * 
     */
    @Export(name="vcnCompartmentId", type=String.class, parameters={})
    private Output<String> vcnCompartmentId;

    /**
     * @return The OCID for the compartment where the cluster&#39;s VCN is located.
     * 
     */
    public Output<String> vcnCompartmentId() {
        return this.vcnCompartmentId;
    }
    /**
     * The OCID of the cluster&#39;s VCN.
     * 
     */
    @Export(name="vcnId", type=String.class, parameters={})
    private Output<String> vcnId;

    /**
     * @return The OCID of the cluster&#39;s VCN.
     * 
     */
    public Output<String> vcnId() {
        return this.vcnId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Cluster(String name) {
        this(name, ClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Cluster(String name, ClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cluster(String name, ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Opensearch/cluster:Cluster", name, args == null ? ClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Cluster(String name, Output<String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Opensearch/cluster:Cluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cluster get(String name, Output<String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Cluster(name, id, state, options);
    }
}
