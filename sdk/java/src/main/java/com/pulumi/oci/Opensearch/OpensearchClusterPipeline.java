// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Opensearch.OpensearchClusterPipelineArgs;
import com.pulumi.oci.Opensearch.inputs.OpensearchClusterPipelineState;
import com.pulumi.oci.Opensearch.outputs.OpensearchClusterPipelineReverseConnectionEndpoint;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Opensearch Cluster Pipeline resource in Oracle Cloud Infrastructure Opensearch service.
 * 
 * Creates a new OpensearchCluster Pipeline.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Opensearch.OpensearchClusterPipeline;
 * import com.pulumi.oci.Opensearch.OpensearchClusterPipelineArgs;
 * import com.pulumi.oci.Opensearch.inputs.OpensearchClusterPipelineReverseConnectionEndpointArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testOpensearchClusterPipeline = new OpensearchClusterPipeline("testOpensearchClusterPipeline", OpensearchClusterPipelineArgs.builder()
 *             .compartmentId(compartmentId)
 *             .dataPrepperConfigurationBody(opensearchClusterPipelineDataPrepperConfigurationBody)
 *             .displayName(opensearchClusterPipelineDisplayName)
 *             .memoryGb(opensearchClusterPipelineMemoryGb)
 *             .nodeCount(opensearchClusterPipelineNodeCount)
 *             .ocpuCount(opensearchClusterPipelineOcpuCount)
 *             .pipelineConfigurationBody(opensearchClusterPipelinePipelineConfigurationBody)
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .nodeShape(opensearchClusterPipelineNodeShape)
 *             .nsgId(testNsg.id())
 *             .opcDryRun(opensearchClusterPipelineOpcDryRun)
 *             .reverseConnectionEndpoints(OpensearchClusterPipelineReverseConnectionEndpointArgs.builder()
 *                 .customerFqdn(opensearchClusterPipelineReverseConnectionEndpointsCustomerFqdn)
 *                 .customerIp(opensearchClusterPipelineReverseConnectionEndpointsCustomerIp)
 *                 .build())
 *             .subnetCompartmentId(testCompartment.id())
 *             .subnetId(testSubnet.id())
 *             .vcnCompartmentId(testCompartment.id())
 *             .vcnId(testVcn.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * OpensearchClusterPipelines can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Opensearch/opensearchClusterPipeline:OpensearchClusterPipeline test_opensearch_cluster_pipeline &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Opensearch/opensearchClusterPipeline:OpensearchClusterPipeline")
public class OpensearchClusterPipeline extends com.pulumi.resources.CustomResource {
    /**
     * The OCID of the compartment to create the pipeline in.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment to create the pipeline in.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    @Export(name="dataPrepperConfigurationBody", refs={String.class}, tree="[0]")
    private Output<String> dataPrepperConfigurationBody;

    /**
     * @return (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    public Output<String> dataPrepperConfigurationBody() {
        return this.dataPrepperConfigurationBody;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) The amount of memory in GB, for each pipeline node.
     * 
     */
    @Export(name="memoryGb", refs={Integer.class}, tree="[0]")
    private Output<Integer> memoryGb;

    /**
     * @return (Updatable) The amount of memory in GB, for each pipeline node.
     * 
     */
    public Output<Integer> memoryGb() {
        return this.memoryGb;
    }
    /**
     * (Updatable) The number of nodes configured for the pipeline.
     * 
     */
    @Export(name="nodeCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> nodeCount;

    /**
     * @return (Updatable) The number of nodes configured for the pipeline.
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }
    /**
     * (Updatable) The pipeline node shape.
     * 
     */
    @Export(name="nodeShape", refs={String.class}, tree="[0]")
    private Output<String> nodeShape;

    /**
     * @return (Updatable) The pipeline node shape.
     * 
     */
    public Output<String> nodeShape() {
        return this.nodeShape;
    }
    /**
     * (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     * 
     */
    @Export(name="nsgId", refs={String.class}, tree="[0]")
    private Output<String> nsgId;

    /**
     * @return (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     * 
     */
    public Output<String> nsgId() {
        return this.nsgId;
    }
    /**
     * (Updatable) The number of OCPUs configured for each pipeline node.
     * 
     */
    @Export(name="ocpuCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> ocpuCount;

    /**
     * @return (Updatable) The number of OCPUs configured for each pipeline node.
     * 
     */
    public Output<Integer> ocpuCount() {
        return this.ocpuCount;
    }
    /**
     * (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    @Export(name="opcDryRun", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> opcDryRun;

    /**
     * @return (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    public Output<Boolean> opcDryRun() {
        return this.opcDryRun;
    }
    /**
     * The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    @Export(name="opensearchPipelineFqdn", refs={String.class}, tree="[0]")
    private Output<String> opensearchPipelineFqdn;

    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public Output<String> opensearchPipelineFqdn() {
        return this.opensearchPipelineFqdn;
    }
    /**
     * The pipeline&#39;s private IP address.
     * 
     */
    @Export(name="opensearchPipelinePrivateIp", refs={String.class}, tree="[0]")
    private Output<String> opensearchPipelinePrivateIp;

    /**
     * @return The pipeline&#39;s private IP address.
     * 
     */
    public Output<String> opensearchPipelinePrivateIp() {
        return this.opensearchPipelinePrivateIp;
    }
    /**
     * (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    @Export(name="pipelineConfigurationBody", refs={String.class}, tree="[0]")
    private Output<String> pipelineConfigurationBody;

    /**
     * @return (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    public Output<String> pipelineConfigurationBody() {
        return this.pipelineConfigurationBody;
    }
    /**
     * The current state of the pipeline.
     * 
     */
    @Export(name="pipelineMode", refs={String.class}, tree="[0]")
    private Output<String> pipelineMode;

    /**
     * @return The current state of the pipeline.
     * 
     */
    public Output<String> pipelineMode() {
        return this.pipelineMode;
    }
    /**
     * (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     * 
     */
    @Export(name="reverseConnectionEndpoints", refs={List.class,OpensearchClusterPipelineReverseConnectionEndpoint.class}, tree="[0,1]")
    private Output<List<OpensearchClusterPipelineReverseConnectionEndpoint>> reverseConnectionEndpoints;

    /**
     * @return (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     * 
     */
    public Output<List<OpensearchClusterPipelineReverseConnectionEndpoint>> reverseConnectionEndpoints() {
        return this.reverseConnectionEndpoints;
    }
    /**
     * The current state of the cluster backup.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the cluster backup.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * (Updatable) The OCID for the compartment where the pipeline&#39;s subnet is located.
     * 
     */
    @Export(name="subnetCompartmentId", refs={String.class}, tree="[0]")
    private Output<String> subnetCompartmentId;

    /**
     * @return (Updatable) The OCID for the compartment where the pipeline&#39;s subnet is located.
     * 
     */
    public Output<String> subnetCompartmentId() {
        return this.subnetCompartmentId;
    }
    /**
     * (Updatable) The OCID of the pipeline&#39;s subnet.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return (Updatable) The OCID of the pipeline&#39;s subnet.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,String>> systemTags() {
        return this.systemTags;
    }
    /**
     * The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The amount of time in milliseconds since the pipeline was updated.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The amount of time in milliseconds since the pipeline was updated.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) The OCID for the compartment where the pipeline&#39;s VCN is located.
     * 
     */
    @Export(name="vcnCompartmentId", refs={String.class}, tree="[0]")
    private Output<String> vcnCompartmentId;

    /**
     * @return (Updatable) The OCID for the compartment where the pipeline&#39;s VCN is located.
     * 
     */
    public Output<String> vcnCompartmentId() {
        return this.vcnCompartmentId;
    }
    /**
     * (Updatable) The OCID of the pipeline&#39;s VCN.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="vcnId", refs={String.class}, tree="[0]")
    private Output<String> vcnId;

    /**
     * @return (Updatable) The OCID of the pipeline&#39;s VCN.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> vcnId() {
        return this.vcnId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OpensearchClusterPipeline(java.lang.String name) {
        this(name, OpensearchClusterPipelineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OpensearchClusterPipeline(java.lang.String name, OpensearchClusterPipelineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OpensearchClusterPipeline(java.lang.String name, OpensearchClusterPipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Opensearch/opensearchClusterPipeline:OpensearchClusterPipeline", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private OpensearchClusterPipeline(java.lang.String name, Output<java.lang.String> id, @Nullable OpensearchClusterPipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Opensearch/opensearchClusterPipeline:OpensearchClusterPipeline", name, state, makeResourceOptions(options, id), false);
    }

    private static OpensearchClusterPipelineArgs makeArgs(OpensearchClusterPipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OpensearchClusterPipelineArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OpensearchClusterPipeline get(java.lang.String name, Output<java.lang.String> id, @Nullable OpensearchClusterPipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OpensearchClusterPipeline(name, id, state, options);
    }
}
