// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Opensearch.inputs.OpensearchClusterPipelineReverseConnectionEndpointArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpensearchClusterPipelineState extends com.pulumi.resources.ResourceArgs {

    public static final OpensearchClusterPipelineState Empty = new OpensearchClusterPipelineState();

    /**
     * The OCID of the compartment to create the pipeline in.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment to create the pipeline in.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    @Import(name="dataPrepperConfigurationBody")
    private @Nullable Output<String> dataPrepperConfigurationBody;

    /**
     * @return (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    public Optional<Output<String>> dataPrepperConfigurationBody() {
        return Optional.ofNullable(this.dataPrepperConfigurationBody);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The amount of memory in GB, for each pipeline node.
     * 
     */
    @Import(name="memoryGb")
    private @Nullable Output<Integer> memoryGb;

    /**
     * @return (Updatable) The amount of memory in GB, for each pipeline node.
     * 
     */
    public Optional<Output<Integer>> memoryGb() {
        return Optional.ofNullable(this.memoryGb);
    }

    /**
     * (Updatable) The number of nodes configured for the pipeline.
     * 
     */
    @Import(name="nodeCount")
    private @Nullable Output<Integer> nodeCount;

    /**
     * @return (Updatable) The number of nodes configured for the pipeline.
     * 
     */
    public Optional<Output<Integer>> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    /**
     * (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     * 
     */
    @Import(name="nsgId")
    private @Nullable Output<String> nsgId;

    /**
     * @return (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     * 
     */
    public Optional<Output<String>> nsgId() {
        return Optional.ofNullable(this.nsgId);
    }

    /**
     * (Updatable) The number of OCPUs configured for each pipeline node.
     * 
     */
    @Import(name="ocpuCount")
    private @Nullable Output<Integer> ocpuCount;

    /**
     * @return (Updatable) The number of OCPUs configured for each pipeline node.
     * 
     */
    public Optional<Output<Integer>> ocpuCount() {
        return Optional.ofNullable(this.ocpuCount);
    }

    /**
     * (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    @Import(name="opcDryRun")
    private @Nullable Output<Boolean> opcDryRun;

    /**
     * @return (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    public Optional<Output<Boolean>> opcDryRun() {
        return Optional.ofNullable(this.opcDryRun);
    }

    /**
     * The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    @Import(name="opensearchPipelineFqdn")
    private @Nullable Output<String> opensearchPipelineFqdn;

    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public Optional<Output<String>> opensearchPipelineFqdn() {
        return Optional.ofNullable(this.opensearchPipelineFqdn);
    }

    /**
     * The pipeline&#39;s private IP address.
     * 
     */
    @Import(name="opensearchPipelinePrivateIp")
    private @Nullable Output<String> opensearchPipelinePrivateIp;

    /**
     * @return The pipeline&#39;s private IP address.
     * 
     */
    public Optional<Output<String>> opensearchPipelinePrivateIp() {
        return Optional.ofNullable(this.opensearchPipelinePrivateIp);
    }

    /**
     * (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    @Import(name="pipelineConfigurationBody")
    private @Nullable Output<String> pipelineConfigurationBody;

    /**
     * @return (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    public Optional<Output<String>> pipelineConfigurationBody() {
        return Optional.ofNullable(this.pipelineConfigurationBody);
    }

    /**
     * The current state of the pipeline.
     * 
     */
    @Import(name="pipelineMode")
    private @Nullable Output<String> pipelineMode;

    /**
     * @return The current state of the pipeline.
     * 
     */
    public Optional<Output<String>> pipelineMode() {
        return Optional.ofNullable(this.pipelineMode);
    }

    /**
     * (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     * 
     */
    @Import(name="reverseConnectionEndpoints")
    private @Nullable Output<List<OpensearchClusterPipelineReverseConnectionEndpointArgs>> reverseConnectionEndpoints;

    /**
     * @return (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     * 
     */
    public Optional<Output<List<OpensearchClusterPipelineReverseConnectionEndpointArgs>>> reverseConnectionEndpoints() {
        return Optional.ofNullable(this.reverseConnectionEndpoints);
    }

    /**
     * The current state of the cluster backup.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the cluster backup.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) The OCID for the compartment where the pipeline&#39;s subnet is located.
     * 
     */
    @Import(name="subnetCompartmentId")
    private @Nullable Output<String> subnetCompartmentId;

    /**
     * @return (Updatable) The OCID for the compartment where the pipeline&#39;s subnet is located.
     * 
     */
    public Optional<Output<String>> subnetCompartmentId() {
        return Optional.ofNullable(this.subnetCompartmentId);
    }

    /**
     * (Updatable) The OCID of the pipeline&#39;s subnet.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return (Updatable) The OCID of the pipeline&#39;s subnet.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The amount of time in milliseconds since the pipeline was updated.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The amount of time in milliseconds since the pipeline was updated.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * (Updatable) The OCID for the compartment where the pipeline&#39;s VCN is located.
     * 
     */
    @Import(name="vcnCompartmentId")
    private @Nullable Output<String> vcnCompartmentId;

    /**
     * @return (Updatable) The OCID for the compartment where the pipeline&#39;s VCN is located.
     * 
     */
    public Optional<Output<String>> vcnCompartmentId() {
        return Optional.ofNullable(this.vcnCompartmentId);
    }

    /**
     * (Updatable) The OCID of the pipeline&#39;s VCN.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="vcnId")
    private @Nullable Output<String> vcnId;

    /**
     * @return (Updatable) The OCID of the pipeline&#39;s VCN.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> vcnId() {
        return Optional.ofNullable(this.vcnId);
    }

    private OpensearchClusterPipelineState() {}

    private OpensearchClusterPipelineState(OpensearchClusterPipelineState $) {
        this.compartmentId = $.compartmentId;
        this.dataPrepperConfigurationBody = $.dataPrepperConfigurationBody;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.memoryGb = $.memoryGb;
        this.nodeCount = $.nodeCount;
        this.nsgId = $.nsgId;
        this.ocpuCount = $.ocpuCount;
        this.opcDryRun = $.opcDryRun;
        this.opensearchPipelineFqdn = $.opensearchPipelineFqdn;
        this.opensearchPipelinePrivateIp = $.opensearchPipelinePrivateIp;
        this.pipelineConfigurationBody = $.pipelineConfigurationBody;
        this.pipelineMode = $.pipelineMode;
        this.reverseConnectionEndpoints = $.reverseConnectionEndpoints;
        this.state = $.state;
        this.subnetCompartmentId = $.subnetCompartmentId;
        this.subnetId = $.subnetId;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.vcnCompartmentId = $.vcnCompartmentId;
        this.vcnId = $.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpensearchClusterPipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpensearchClusterPipelineState $;

        public Builder() {
            $ = new OpensearchClusterPipelineState();
        }

        public Builder(OpensearchClusterPipelineState defaults) {
            $ = new OpensearchClusterPipelineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment to create the pipeline in.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment to create the pipeline in.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dataPrepperConfigurationBody (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
         * 
         * @return builder
         * 
         */
        public Builder dataPrepperConfigurationBody(@Nullable Output<String> dataPrepperConfigurationBody) {
            $.dataPrepperConfigurationBody = dataPrepperConfigurationBody;
            return this;
        }

        /**
         * @param dataPrepperConfigurationBody (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
         * 
         * @return builder
         * 
         */
        public Builder dataPrepperConfigurationBody(String dataPrepperConfigurationBody) {
            return dataPrepperConfigurationBody(Output.of(dataPrepperConfigurationBody));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param memoryGb (Updatable) The amount of memory in GB, for each pipeline node.
         * 
         * @return builder
         * 
         */
        public Builder memoryGb(@Nullable Output<Integer> memoryGb) {
            $.memoryGb = memoryGb;
            return this;
        }

        /**
         * @param memoryGb (Updatable) The amount of memory in GB, for each pipeline node.
         * 
         * @return builder
         * 
         */
        public Builder memoryGb(Integer memoryGb) {
            return memoryGb(Output.of(memoryGb));
        }

        /**
         * @param nodeCount (Updatable) The number of nodes configured for the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(@Nullable Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount (Updatable) The number of nodes configured for the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param nsgId (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
         * 
         * @return builder
         * 
         */
        public Builder nsgId(@Nullable Output<String> nsgId) {
            $.nsgId = nsgId;
            return this;
        }

        /**
         * @param nsgId (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
         * 
         * @return builder
         * 
         */
        public Builder nsgId(String nsgId) {
            return nsgId(Output.of(nsgId));
        }

        /**
         * @param ocpuCount (Updatable) The number of OCPUs configured for each pipeline node.
         * 
         * @return builder
         * 
         */
        public Builder ocpuCount(@Nullable Output<Integer> ocpuCount) {
            $.ocpuCount = ocpuCount;
            return this;
        }

        /**
         * @param ocpuCount (Updatable) The number of OCPUs configured for each pipeline node.
         * 
         * @return builder
         * 
         */
        public Builder ocpuCount(Integer ocpuCount) {
            return ocpuCount(Output.of(ocpuCount));
        }

        /**
         * @param opcDryRun (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
         * 
         * @return builder
         * 
         */
        public Builder opcDryRun(@Nullable Output<Boolean> opcDryRun) {
            $.opcDryRun = opcDryRun;
            return this;
        }

        /**
         * @param opcDryRun (Updatable) Indicates that the request is a dry run, if set to &#34;true&#34;. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
         * 
         * @return builder
         * 
         */
        public Builder opcDryRun(Boolean opcDryRun) {
            return opcDryRun(Output.of(opcDryRun));
        }

        /**
         * @param opensearchPipelineFqdn The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
         * 
         * @return builder
         * 
         */
        public Builder opensearchPipelineFqdn(@Nullable Output<String> opensearchPipelineFqdn) {
            $.opensearchPipelineFqdn = opensearchPipelineFqdn;
            return this;
        }

        /**
         * @param opensearchPipelineFqdn The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
         * 
         * @return builder
         * 
         */
        public Builder opensearchPipelineFqdn(String opensearchPipelineFqdn) {
            return opensearchPipelineFqdn(Output.of(opensearchPipelineFqdn));
        }

        /**
         * @param opensearchPipelinePrivateIp The pipeline&#39;s private IP address.
         * 
         * @return builder
         * 
         */
        public Builder opensearchPipelinePrivateIp(@Nullable Output<String> opensearchPipelinePrivateIp) {
            $.opensearchPipelinePrivateIp = opensearchPipelinePrivateIp;
            return this;
        }

        /**
         * @param opensearchPipelinePrivateIp The pipeline&#39;s private IP address.
         * 
         * @return builder
         * 
         */
        public Builder opensearchPipelinePrivateIp(String opensearchPipelinePrivateIp) {
            return opensearchPipelinePrivateIp(Output.of(opensearchPipelinePrivateIp));
        }

        /**
         * @param pipelineConfigurationBody (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
         * 
         * @return builder
         * 
         */
        public Builder pipelineConfigurationBody(@Nullable Output<String> pipelineConfigurationBody) {
            $.pipelineConfigurationBody = pipelineConfigurationBody;
            return this;
        }

        /**
         * @param pipelineConfigurationBody (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
         * 
         * @return builder
         * 
         */
        public Builder pipelineConfigurationBody(String pipelineConfigurationBody) {
            return pipelineConfigurationBody(Output.of(pipelineConfigurationBody));
        }

        /**
         * @param pipelineMode The current state of the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder pipelineMode(@Nullable Output<String> pipelineMode) {
            $.pipelineMode = pipelineMode;
            return this;
        }

        /**
         * @param pipelineMode The current state of the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder pipelineMode(String pipelineMode) {
            return pipelineMode(Output.of(pipelineMode));
        }

        /**
         * @param reverseConnectionEndpoints (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
         * 
         * @return builder
         * 
         */
        public Builder reverseConnectionEndpoints(@Nullable Output<List<OpensearchClusterPipelineReverseConnectionEndpointArgs>> reverseConnectionEndpoints) {
            $.reverseConnectionEndpoints = reverseConnectionEndpoints;
            return this;
        }

        /**
         * @param reverseConnectionEndpoints (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
         * 
         * @return builder
         * 
         */
        public Builder reverseConnectionEndpoints(List<OpensearchClusterPipelineReverseConnectionEndpointArgs> reverseConnectionEndpoints) {
            return reverseConnectionEndpoints(Output.of(reverseConnectionEndpoints));
        }

        /**
         * @param reverseConnectionEndpoints (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
         * 
         * @return builder
         * 
         */
        public Builder reverseConnectionEndpoints(OpensearchClusterPipelineReverseConnectionEndpointArgs... reverseConnectionEndpoints) {
            return reverseConnectionEndpoints(List.of(reverseConnectionEndpoints));
        }

        /**
         * @param state The current state of the cluster backup.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the cluster backup.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param subnetCompartmentId (Updatable) The OCID for the compartment where the pipeline&#39;s subnet is located.
         * 
         * @return builder
         * 
         */
        public Builder subnetCompartmentId(@Nullable Output<String> subnetCompartmentId) {
            $.subnetCompartmentId = subnetCompartmentId;
            return this;
        }

        /**
         * @param subnetCompartmentId (Updatable) The OCID for the compartment where the pipeline&#39;s subnet is located.
         * 
         * @return builder
         * 
         */
        public Builder subnetCompartmentId(String subnetCompartmentId) {
            return subnetCompartmentId(Output.of(subnetCompartmentId));
        }

        /**
         * @param subnetId (Updatable) The OCID of the pipeline&#39;s subnet.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId (Updatable) The OCID of the pipeline&#39;s subnet.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The amount of time in milliseconds since the pipeline was updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The amount of time in milliseconds since the pipeline was updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param vcnCompartmentId (Updatable) The OCID for the compartment where the pipeline&#39;s VCN is located.
         * 
         * @return builder
         * 
         */
        public Builder vcnCompartmentId(@Nullable Output<String> vcnCompartmentId) {
            $.vcnCompartmentId = vcnCompartmentId;
            return this;
        }

        /**
         * @param vcnCompartmentId (Updatable) The OCID for the compartment where the pipeline&#39;s VCN is located.
         * 
         * @return builder
         * 
         */
        public Builder vcnCompartmentId(String vcnCompartmentId) {
            return vcnCompartmentId(Output.of(vcnCompartmentId));
        }

        /**
         * @param vcnId (Updatable) The OCID of the pipeline&#39;s VCN.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vcnId(@Nullable Output<String> vcnId) {
            $.vcnId = vcnId;
            return this;
        }

        /**
         * @param vcnId (Updatable) The OCID of the pipeline&#39;s VCN.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vcnId(String vcnId) {
            return vcnId(Output.of(vcnId));
        }

        public OpensearchClusterPipelineState build() {
            return $;
        }
    }

}
