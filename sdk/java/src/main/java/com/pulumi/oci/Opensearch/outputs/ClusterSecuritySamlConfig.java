// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterSecuritySamlConfig {
    /**
     * @return The backend role of admins who have all permissions like local master user
     * 
     */
    private @Nullable String adminBackendRole;
    /**
     * @return The unique name for a identity provider entity
     * 
     */
    private String idpEntityId;
    /**
     * @return The content of identity provider metadata
     * 
     */
    private String idpMetadataContent;
    /**
     * @return A flag determine whether SAML is enabled
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The endpoint of opendashboard
     * 
     */
    private @Nullable String opendashboardUrl;
    /**
     * @return The roles key is sued to get backend roles from SAML assertion
     * 
     */
    private @Nullable String rolesKey;
    /**
     * @return The subject key is used to get username from SAML assertion. By default, it is NameID
     * 
     */
    private @Nullable String subjectKey;

    private ClusterSecuritySamlConfig() {}
    /**
     * @return The backend role of admins who have all permissions like local master user
     * 
     */
    public Optional<String> adminBackendRole() {
        return Optional.ofNullable(this.adminBackendRole);
    }
    /**
     * @return The unique name for a identity provider entity
     * 
     */
    public String idpEntityId() {
        return this.idpEntityId;
    }
    /**
     * @return The content of identity provider metadata
     * 
     */
    public String idpMetadataContent() {
        return this.idpMetadataContent;
    }
    /**
     * @return A flag determine whether SAML is enabled
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The endpoint of opendashboard
     * 
     */
    public Optional<String> opendashboardUrl() {
        return Optional.ofNullable(this.opendashboardUrl);
    }
    /**
     * @return The roles key is sued to get backend roles from SAML assertion
     * 
     */
    public Optional<String> rolesKey() {
        return Optional.ofNullable(this.rolesKey);
    }
    /**
     * @return The subject key is used to get username from SAML assertion. By default, it is NameID
     * 
     */
    public Optional<String> subjectKey() {
        return Optional.ofNullable(this.subjectKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterSecuritySamlConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String adminBackendRole;
        private String idpEntityId;
        private String idpMetadataContent;
        private Boolean isEnabled;
        private @Nullable String opendashboardUrl;
        private @Nullable String rolesKey;
        private @Nullable String subjectKey;
        public Builder() {}
        public Builder(ClusterSecuritySamlConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminBackendRole = defaults.adminBackendRole;
    	      this.idpEntityId = defaults.idpEntityId;
    	      this.idpMetadataContent = defaults.idpMetadataContent;
    	      this.isEnabled = defaults.isEnabled;
    	      this.opendashboardUrl = defaults.opendashboardUrl;
    	      this.rolesKey = defaults.rolesKey;
    	      this.subjectKey = defaults.subjectKey;
        }

        @CustomType.Setter
        public Builder adminBackendRole(@Nullable String adminBackendRole) {

            this.adminBackendRole = adminBackendRole;
            return this;
        }
        @CustomType.Setter
        public Builder idpEntityId(String idpEntityId) {
            if (idpEntityId == null) {
              throw new MissingRequiredPropertyException("ClusterSecuritySamlConfig", "idpEntityId");
            }
            this.idpEntityId = idpEntityId;
            return this;
        }
        @CustomType.Setter
        public Builder idpMetadataContent(String idpMetadataContent) {
            if (idpMetadataContent == null) {
              throw new MissingRequiredPropertyException("ClusterSecuritySamlConfig", "idpMetadataContent");
            }
            this.idpMetadataContent = idpMetadataContent;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("ClusterSecuritySamlConfig", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardUrl(@Nullable String opendashboardUrl) {

            this.opendashboardUrl = opendashboardUrl;
            return this;
        }
        @CustomType.Setter
        public Builder rolesKey(@Nullable String rolesKey) {

            this.rolesKey = rolesKey;
            return this;
        }
        @CustomType.Setter
        public Builder subjectKey(@Nullable String subjectKey) {

            this.subjectKey = subjectKey;
            return this;
        }
        public ClusterSecuritySamlConfig build() {
            final var _resultValue = new ClusterSecuritySamlConfig();
            _resultValue.adminBackendRole = adminBackendRole;
            _resultValue.idpEntityId = idpEntityId;
            _resultValue.idpMetadataContent = idpMetadataContent;
            _resultValue.isEnabled = isEnabled;
            _resultValue.opendashboardUrl = opendashboardUrl;
            _resultValue.rolesKey = rolesKey;
            _resultValue.subjectKey = subjectKey;
            return _resultValue;
        }
    }
}
