// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Opensearch.outputs.GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItemReverseConnectionEndpoint;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    private String dataPrepperConfigurationBody;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return unique OpensearchClusterPipeline identifier
     * 
     */
    private String id;
    /**
     * @return The amount of memory in GB, for each pipeline node.
     * 
     */
    private Integer memoryGb;
    /**
     * @return The number of nodes configured for the pipeline.
     * 
     */
    private Integer nodeCount;
    /**
     * @return The pipeline node shape.
     * 
     */
    private String nodeShape;
    /**
     * @return The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     * 
     */
    private String nsgId;
    /**
     * @return The number of OCPUs configured for each pipeline node.
     * 
     */
    private Integer ocpuCount;
    private Boolean opcDryRun;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    private String opensearchPipelineFqdn;
    /**
     * @return The pipeline&#39;s private IP address.
     * 
     */
    private String opensearchPipelinePrivateIp;
    /**
     * @return The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    private String pipelineConfigurationBody;
    /**
     * @return The current state of the pipeline.
     * 
     */
    private String pipelineMode;
    /**
     * @return The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     * 
     */
    private List<GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItemReverseConnectionEndpoint> reverseConnectionEndpoints;
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return The OCID for the compartment where the pipeline&#39;s subnet is located.
     * 
     */
    private String subnetCompartmentId;
    /**
     * @return The OCID of the pipeline&#39;s subnet.
     * 
     */
    private String subnetId;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return The amount of time in milliseconds since the pipeline was updated.
     * 
     */
    private String timeUpdated;
    /**
     * @return The OCID for the compartment where the pipeline&#39;s VCN is located.
     * 
     */
    private String vcnCompartmentId;
    /**
     * @return The OCID of the pipeline&#39;s VCN.
     * 
     */
    private String vcnId;

    private GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    public String dataPrepperConfigurationBody() {
        return this.dataPrepperConfigurationBody;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return unique OpensearchClusterPipeline identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The amount of memory in GB, for each pipeline node.
     * 
     */
    public Integer memoryGb() {
        return this.memoryGb;
    }
    /**
     * @return The number of nodes configured for the pipeline.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return The pipeline node shape.
     * 
     */
    public String nodeShape() {
        return this.nodeShape;
    }
    /**
     * @return The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     * 
     */
    public String nsgId() {
        return this.nsgId;
    }
    /**
     * @return The number of OCPUs configured for each pipeline node.
     * 
     */
    public Integer ocpuCount() {
        return this.ocpuCount;
    }
    public Boolean opcDryRun() {
        return this.opcDryRun;
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public String opensearchPipelineFqdn() {
        return this.opensearchPipelineFqdn;
    }
    /**
     * @return The pipeline&#39;s private IP address.
     * 
     */
    public String opensearchPipelinePrivateIp() {
        return this.opensearchPipelinePrivateIp;
    }
    /**
     * @return The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     * 
     */
    public String pipelineConfigurationBody() {
        return this.pipelineConfigurationBody;
    }
    /**
     * @return The current state of the pipeline.
     * 
     */
    public String pipelineMode() {
        return this.pipelineMode;
    }
    /**
     * @return The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     * 
     */
    public List<GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItemReverseConnectionEndpoint> reverseConnectionEndpoints() {
        return this.reverseConnectionEndpoints;
    }
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The OCID for the compartment where the pipeline&#39;s subnet is located.
     * 
     */
    public String subnetCompartmentId() {
        return this.subnetCompartmentId;
    }
    /**
     * @return The OCID of the pipeline&#39;s subnet.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The amount of time in milliseconds since the pipeline was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The OCID for the compartment where the pipeline&#39;s VCN is located.
     * 
     */
    public String vcnCompartmentId() {
        return this.vcnCompartmentId;
    }
    /**
     * @return The OCID of the pipeline&#39;s VCN.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String dataPrepperConfigurationBody;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private Integer memoryGb;
        private Integer nodeCount;
        private String nodeShape;
        private String nsgId;
        private Integer ocpuCount;
        private Boolean opcDryRun;
        private String opensearchPipelineFqdn;
        private String opensearchPipelinePrivateIp;
        private String pipelineConfigurationBody;
        private String pipelineMode;
        private List<GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItemReverseConnectionEndpoint> reverseConnectionEndpoints;
        private String state;
        private String subnetCompartmentId;
        private String subnetId;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String vcnCompartmentId;
        private String vcnId;
        public Builder() {}
        public Builder(GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataPrepperConfigurationBody = defaults.dataPrepperConfigurationBody;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.memoryGb = defaults.memoryGb;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodeShape = defaults.nodeShape;
    	      this.nsgId = defaults.nsgId;
    	      this.ocpuCount = defaults.ocpuCount;
    	      this.opcDryRun = defaults.opcDryRun;
    	      this.opensearchPipelineFqdn = defaults.opensearchPipelineFqdn;
    	      this.opensearchPipelinePrivateIp = defaults.opensearchPipelinePrivateIp;
    	      this.pipelineConfigurationBody = defaults.pipelineConfigurationBody;
    	      this.pipelineMode = defaults.pipelineMode;
    	      this.reverseConnectionEndpoints = defaults.reverseConnectionEndpoints;
    	      this.state = defaults.state;
    	      this.subnetCompartmentId = defaults.subnetCompartmentId;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vcnCompartmentId = defaults.vcnCompartmentId;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dataPrepperConfigurationBody(String dataPrepperConfigurationBody) {
            if (dataPrepperConfigurationBody == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "dataPrepperConfigurationBody");
            }
            this.dataPrepperConfigurationBody = dataPrepperConfigurationBody;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder memoryGb(Integer memoryGb) {
            if (memoryGb == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "memoryGb");
            }
            this.memoryGb = memoryGb;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            if (nodeCount == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "nodeCount");
            }
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nodeShape(String nodeShape) {
            if (nodeShape == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "nodeShape");
            }
            this.nodeShape = nodeShape;
            return this;
        }
        @CustomType.Setter
        public Builder nsgId(String nsgId) {
            if (nsgId == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "nsgId");
            }
            this.nsgId = nsgId;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuCount(Integer ocpuCount) {
            if (ocpuCount == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "ocpuCount");
            }
            this.ocpuCount = ocpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder opcDryRun(Boolean opcDryRun) {
            if (opcDryRun == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "opcDryRun");
            }
            this.opcDryRun = opcDryRun;
            return this;
        }
        @CustomType.Setter
        public Builder opensearchPipelineFqdn(String opensearchPipelineFqdn) {
            if (opensearchPipelineFqdn == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "opensearchPipelineFqdn");
            }
            this.opensearchPipelineFqdn = opensearchPipelineFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder opensearchPipelinePrivateIp(String opensearchPipelinePrivateIp) {
            if (opensearchPipelinePrivateIp == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "opensearchPipelinePrivateIp");
            }
            this.opensearchPipelinePrivateIp = opensearchPipelinePrivateIp;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineConfigurationBody(String pipelineConfigurationBody) {
            if (pipelineConfigurationBody == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "pipelineConfigurationBody");
            }
            this.pipelineConfigurationBody = pipelineConfigurationBody;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineMode(String pipelineMode) {
            if (pipelineMode == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "pipelineMode");
            }
            this.pipelineMode = pipelineMode;
            return this;
        }
        @CustomType.Setter
        public Builder reverseConnectionEndpoints(List<GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItemReverseConnectionEndpoint> reverseConnectionEndpoints) {
            if (reverseConnectionEndpoints == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "reverseConnectionEndpoints");
            }
            this.reverseConnectionEndpoints = reverseConnectionEndpoints;
            return this;
        }
        public Builder reverseConnectionEndpoints(GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItemReverseConnectionEndpoint... reverseConnectionEndpoints) {
            return reverseConnectionEndpoints(List.of(reverseConnectionEndpoints));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetCompartmentId(String subnetCompartmentId) {
            if (subnetCompartmentId == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "subnetCompartmentId");
            }
            this.subnetCompartmentId = subnetCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder vcnCompartmentId(String vcnCompartmentId) {
            if (vcnCompartmentId == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "vcnCompartmentId");
            }
            this.vcnCompartmentId = vcnCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(String vcnId) {
            if (vcnId == null) {
              throw new MissingRequiredPropertyException("GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem", "vcnId");
            }
            this.vcnId = vcnId;
            return this;
        }
        public GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem build() {
            final var _resultValue = new GetOpensearchClusterPipelinesOpensearchClusterPipelineCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.dataPrepperConfigurationBody = dataPrepperConfigurationBody;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.memoryGb = memoryGb;
            _resultValue.nodeCount = nodeCount;
            _resultValue.nodeShape = nodeShape;
            _resultValue.nsgId = nsgId;
            _resultValue.ocpuCount = ocpuCount;
            _resultValue.opcDryRun = opcDryRun;
            _resultValue.opensearchPipelineFqdn = opensearchPipelineFqdn;
            _resultValue.opensearchPipelinePrivateIp = opensearchPipelinePrivateIp;
            _resultValue.pipelineConfigurationBody = pipelineConfigurationBody;
            _resultValue.pipelineMode = pipelineMode;
            _resultValue.reverseConnectionEndpoints = reverseConnectionEndpoints;
            _resultValue.state = state;
            _resultValue.subnetCompartmentId = subnetCompartmentId;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.vcnCompartmentId = vcnCompartmentId;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
