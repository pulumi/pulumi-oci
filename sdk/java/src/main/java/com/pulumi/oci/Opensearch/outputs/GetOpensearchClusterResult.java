// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOpensearchClusterResult {
    /**
     * @return The availability domains to distribute the cluser nodes across.
     * 
     */
    private @Nullable List<String> availabilityDomains;
    /**
     * @return The OCID of the compartment where the cluster is located.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The number of data nodes configured for the cluster.
     * 
     */
    private @Nullable Integer dataNodeCount;
    /**
     * @return The bare metal shape for the cluster&#39;s data nodes.
     * 
     */
    private @Nullable String dataNodeHostBareMetalShape;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s data nodes.
     * 
     */
    private @Nullable Integer dataNodeHostMemoryGb;
    /**
     * @return The number of OCPUs configured for the cluster&#39;s data nodes.
     * 
     */
    private @Nullable Integer dataNodeHostOcpuCount;
    /**
     * @return The instance type for the cluster&#39;s data nodes.
     * 
     */
    private @Nullable String dataNodeHostType;
    /**
     * @return The amount of storage in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    private @Nullable Integer dataNodeStorageGb;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The name of the cluster. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    private @Nullable String fqdn;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the cluster.
     * 
     */
    private @Nullable String id;
    /**
     * @return Additional information about the current lifecycle state of the cluster.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The number of master nodes configured for the cluster.
     * 
     */
    private @Nullable Integer masterNodeCount;
    /**
     * @return The bare metal shape for the cluster&#39;s master nodes.
     * 
     */
    private @Nullable String masterNodeHostBareMetalShape;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s master nodes.
     * 
     */
    private @Nullable Integer masterNodeHostMemoryGb;
    /**
     * @return The number of OCPUs configured for cluster&#39;s master nodes.
     * 
     */
    private @Nullable Integer masterNodeHostOcpuCount;
    /**
     * @return The instance type for the cluster&#39;s master nodes.
     * 
     */
    private @Nullable String masterNodeHostType;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s OpenSearch Dashboard API endpoint.
     * 
     */
    private @Nullable String opendashboardFqdn;
    /**
     * @return The number of OpenSearch Dashboard nodes configured for the cluster.
     * 
     */
    private @Nullable Integer opendashboardNodeCount;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    private @Nullable Integer opendashboardNodeHostMemoryGb;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    private @Nullable Integer opendashboardNodeHostOcpuCount;
    /**
     * @return The private IP address for the cluster&#39;s OpenSearch Dashboard.
     * 
     */
    private @Nullable String opendashboardPrivateIp;
    private String opensearchClusterId;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    private @Nullable String opensearchFqdn;
    /**
     * @return The cluster&#39;s private IP address.
     * 
     */
    private @Nullable String opensearchPrivateIp;
    /**
     * @return The name of the master user that are used to manage security config
     * 
     */
    private @Nullable String securityMasterUserName;
    /**
     * @return The password hash of the master user that are used to manage security config
     * 
     */
    private @Nullable String securityMasterUserPasswordHash;
    /**
     * @return The security mode of the cluster.
     * 
     */
    private @Nullable String securityMode;
    /**
     * @return The software version the cluster is running.
     * 
     */
    private @Nullable String softwareVersion;
    /**
     * @return The current state of the cluster.
     * 
     */
    private @Nullable String state;
    /**
     * @return The OCID for the compartment where the cluster&#39;s subnet is located.
     * 
     */
    private @Nullable String subnetCompartmentId;
    /**
     * @return The OCID of the cluster&#39;s subnet.
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The amount of time in milliseconds since the cluster was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    private @Nullable String timeDeleted;
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The size in GB of the cluster&#39;s total storage.
     * 
     */
    private @Nullable Integer totalStorageGb;
    /**
     * @return The OCID for the compartment where the cluster&#39;s VCN is located.
     * 
     */
    private @Nullable String vcnCompartmentId;
    /**
     * @return The OCID of the cluster&#39;s VCN.
     * 
     */
    private @Nullable String vcnId;

    private GetOpensearchClusterResult() {}
    /**
     * @return The availability domains to distribute the cluser nodes across.
     * 
     */
    public List<String> availabilityDomains() {
        return this.availabilityDomains == null ? List.of() : this.availabilityDomains;
    }
    /**
     * @return The OCID of the compartment where the cluster is located.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The number of data nodes configured for the cluster.
     * 
     */
    public Optional<Integer> dataNodeCount() {
        return Optional.ofNullable(this.dataNodeCount);
    }
    /**
     * @return The bare metal shape for the cluster&#39;s data nodes.
     * 
     */
    public Optional<String> dataNodeHostBareMetalShape() {
        return Optional.ofNullable(this.dataNodeHostBareMetalShape);
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s data nodes.
     * 
     */
    public Optional<Integer> dataNodeHostMemoryGb() {
        return Optional.ofNullable(this.dataNodeHostMemoryGb);
    }
    /**
     * @return The number of OCPUs configured for the cluster&#39;s data nodes.
     * 
     */
    public Optional<Integer> dataNodeHostOcpuCount() {
        return Optional.ofNullable(this.dataNodeHostOcpuCount);
    }
    /**
     * @return The instance type for the cluster&#39;s data nodes.
     * 
     */
    public Optional<String> dataNodeHostType() {
        return Optional.ofNullable(this.dataNodeHostType);
    }
    /**
     * @return The amount of storage in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    public Optional<Integer> dataNodeStorageGb() {
        return Optional.ofNullable(this.dataNodeStorageGb);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The name of the cluster. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public Optional<String> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the cluster.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Additional information about the current lifecycle state of the cluster.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The number of master nodes configured for the cluster.
     * 
     */
    public Optional<Integer> masterNodeCount() {
        return Optional.ofNullable(this.masterNodeCount);
    }
    /**
     * @return The bare metal shape for the cluster&#39;s master nodes.
     * 
     */
    public Optional<String> masterNodeHostBareMetalShape() {
        return Optional.ofNullable(this.masterNodeHostBareMetalShape);
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s master nodes.
     * 
     */
    public Optional<Integer> masterNodeHostMemoryGb() {
        return Optional.ofNullable(this.masterNodeHostMemoryGb);
    }
    /**
     * @return The number of OCPUs configured for cluster&#39;s master nodes.
     * 
     */
    public Optional<Integer> masterNodeHostOcpuCount() {
        return Optional.ofNullable(this.masterNodeHostOcpuCount);
    }
    /**
     * @return The instance type for the cluster&#39;s master nodes.
     * 
     */
    public Optional<String> masterNodeHostType() {
        return Optional.ofNullable(this.masterNodeHostType);
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s OpenSearch Dashboard API endpoint.
     * 
     */
    public Optional<String> opendashboardFqdn() {
        return Optional.ofNullable(this.opendashboardFqdn);
    }
    /**
     * @return The number of OpenSearch Dashboard nodes configured for the cluster.
     * 
     */
    public Optional<Integer> opendashboardNodeCount() {
        return Optional.ofNullable(this.opendashboardNodeCount);
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    public Optional<Integer> opendashboardNodeHostMemoryGb() {
        return Optional.ofNullable(this.opendashboardNodeHostMemoryGb);
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    public Optional<Integer> opendashboardNodeHostOcpuCount() {
        return Optional.ofNullable(this.opendashboardNodeHostOcpuCount);
    }
    /**
     * @return The private IP address for the cluster&#39;s OpenSearch Dashboard.
     * 
     */
    public Optional<String> opendashboardPrivateIp() {
        return Optional.ofNullable(this.opendashboardPrivateIp);
    }
    public String opensearchClusterId() {
        return this.opensearchClusterId;
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public Optional<String> opensearchFqdn() {
        return Optional.ofNullable(this.opensearchFqdn);
    }
    /**
     * @return The cluster&#39;s private IP address.
     * 
     */
    public Optional<String> opensearchPrivateIp() {
        return Optional.ofNullable(this.opensearchPrivateIp);
    }
    /**
     * @return The name of the master user that are used to manage security config
     * 
     */
    public Optional<String> securityMasterUserName() {
        return Optional.ofNullable(this.securityMasterUserName);
    }
    /**
     * @return The password hash of the master user that are used to manage security config
     * 
     */
    public Optional<String> securityMasterUserPasswordHash() {
        return Optional.ofNullable(this.securityMasterUserPasswordHash);
    }
    /**
     * @return The security mode of the cluster.
     * 
     */
    public Optional<String> securityMode() {
        return Optional.ofNullable(this.securityMode);
    }
    /**
     * @return The software version the cluster is running.
     * 
     */
    public Optional<String> softwareVersion() {
        return Optional.ofNullable(this.softwareVersion);
    }
    /**
     * @return The current state of the cluster.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCID for the compartment where the cluster&#39;s subnet is located.
     * 
     */
    public Optional<String> subnetCompartmentId() {
        return Optional.ofNullable(this.subnetCompartmentId);
    }
    /**
     * @return The OCID of the cluster&#39;s subnet.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The amount of time in milliseconds since the cluster was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    public Optional<String> timeDeleted() {
        return Optional.ofNullable(this.timeDeleted);
    }
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The size in GB of the cluster&#39;s total storage.
     * 
     */
    public Optional<Integer> totalStorageGb() {
        return Optional.ofNullable(this.totalStorageGb);
    }
    /**
     * @return The OCID for the compartment where the cluster&#39;s VCN is located.
     * 
     */
    public Optional<String> vcnCompartmentId() {
        return Optional.ofNullable(this.vcnCompartmentId);
    }
    /**
     * @return The OCID of the cluster&#39;s VCN.
     * 
     */
    public Optional<String> vcnId() {
        return Optional.ofNullable(this.vcnId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpensearchClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> availabilityDomains;
        private @Nullable String compartmentId;
        private @Nullable Integer dataNodeCount;
        private @Nullable String dataNodeHostBareMetalShape;
        private @Nullable Integer dataNodeHostMemoryGb;
        private @Nullable Integer dataNodeHostOcpuCount;
        private @Nullable String dataNodeHostType;
        private @Nullable Integer dataNodeStorageGb;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable String fqdn;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable Integer masterNodeCount;
        private @Nullable String masterNodeHostBareMetalShape;
        private @Nullable Integer masterNodeHostMemoryGb;
        private @Nullable Integer masterNodeHostOcpuCount;
        private @Nullable String masterNodeHostType;
        private @Nullable String opendashboardFqdn;
        private @Nullable Integer opendashboardNodeCount;
        private @Nullable Integer opendashboardNodeHostMemoryGb;
        private @Nullable Integer opendashboardNodeHostOcpuCount;
        private @Nullable String opendashboardPrivateIp;
        private String opensearchClusterId;
        private @Nullable String opensearchFqdn;
        private @Nullable String opensearchPrivateIp;
        private @Nullable String securityMasterUserName;
        private @Nullable String securityMasterUserPasswordHash;
        private @Nullable String securityMode;
        private @Nullable String softwareVersion;
        private @Nullable String state;
        private @Nullable String subnetCompartmentId;
        private @Nullable String subnetId;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeDeleted;
        private @Nullable String timeUpdated;
        private @Nullable Integer totalStorageGb;
        private @Nullable String vcnCompartmentId;
        private @Nullable String vcnId;
        public Builder() {}
        public Builder(GetOpensearchClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomains = defaults.availabilityDomains;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataNodeCount = defaults.dataNodeCount;
    	      this.dataNodeHostBareMetalShape = defaults.dataNodeHostBareMetalShape;
    	      this.dataNodeHostMemoryGb = defaults.dataNodeHostMemoryGb;
    	      this.dataNodeHostOcpuCount = defaults.dataNodeHostOcpuCount;
    	      this.dataNodeHostType = defaults.dataNodeHostType;
    	      this.dataNodeStorageGb = defaults.dataNodeStorageGb;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.fqdn = defaults.fqdn;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.masterNodeCount = defaults.masterNodeCount;
    	      this.masterNodeHostBareMetalShape = defaults.masterNodeHostBareMetalShape;
    	      this.masterNodeHostMemoryGb = defaults.masterNodeHostMemoryGb;
    	      this.masterNodeHostOcpuCount = defaults.masterNodeHostOcpuCount;
    	      this.masterNodeHostType = defaults.masterNodeHostType;
    	      this.opendashboardFqdn = defaults.opendashboardFqdn;
    	      this.opendashboardNodeCount = defaults.opendashboardNodeCount;
    	      this.opendashboardNodeHostMemoryGb = defaults.opendashboardNodeHostMemoryGb;
    	      this.opendashboardNodeHostOcpuCount = defaults.opendashboardNodeHostOcpuCount;
    	      this.opendashboardPrivateIp = defaults.opendashboardPrivateIp;
    	      this.opensearchClusterId = defaults.opensearchClusterId;
    	      this.opensearchFqdn = defaults.opensearchFqdn;
    	      this.opensearchPrivateIp = defaults.opensearchPrivateIp;
    	      this.securityMasterUserName = defaults.securityMasterUserName;
    	      this.securityMasterUserPasswordHash = defaults.securityMasterUserPasswordHash;
    	      this.securityMode = defaults.securityMode;
    	      this.softwareVersion = defaults.softwareVersion;
    	      this.state = defaults.state;
    	      this.subnetCompartmentId = defaults.subnetCompartmentId;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDeleted = defaults.timeDeleted;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.totalStorageGb = defaults.totalStorageGb;
    	      this.vcnCompartmentId = defaults.vcnCompartmentId;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder availabilityDomains(@Nullable List<String> availabilityDomains) {
            this.availabilityDomains = availabilityDomains;
            return this;
        }
        public Builder availabilityDomains(String... availabilityDomains) {
            return availabilityDomains(List.of(availabilityDomains));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeCount(@Nullable Integer dataNodeCount) {
            this.dataNodeCount = dataNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeHostBareMetalShape(@Nullable String dataNodeHostBareMetalShape) {
            this.dataNodeHostBareMetalShape = dataNodeHostBareMetalShape;
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeHostMemoryGb(@Nullable Integer dataNodeHostMemoryGb) {
            this.dataNodeHostMemoryGb = dataNodeHostMemoryGb;
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeHostOcpuCount(@Nullable Integer dataNodeHostOcpuCount) {
            this.dataNodeHostOcpuCount = dataNodeHostOcpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeHostType(@Nullable String dataNodeHostType) {
            this.dataNodeHostType = dataNodeHostType;
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeStorageGb(@Nullable Integer dataNodeStorageGb) {
            this.dataNodeStorageGb = dataNodeStorageGb;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(@Nullable String fqdn) {
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeCount(@Nullable Integer masterNodeCount) {
            this.masterNodeCount = masterNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeHostBareMetalShape(@Nullable String masterNodeHostBareMetalShape) {
            this.masterNodeHostBareMetalShape = masterNodeHostBareMetalShape;
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeHostMemoryGb(@Nullable Integer masterNodeHostMemoryGb) {
            this.masterNodeHostMemoryGb = masterNodeHostMemoryGb;
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeHostOcpuCount(@Nullable Integer masterNodeHostOcpuCount) {
            this.masterNodeHostOcpuCount = masterNodeHostOcpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeHostType(@Nullable String masterNodeHostType) {
            this.masterNodeHostType = masterNodeHostType;
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardFqdn(@Nullable String opendashboardFqdn) {
            this.opendashboardFqdn = opendashboardFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardNodeCount(@Nullable Integer opendashboardNodeCount) {
            this.opendashboardNodeCount = opendashboardNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardNodeHostMemoryGb(@Nullable Integer opendashboardNodeHostMemoryGb) {
            this.opendashboardNodeHostMemoryGb = opendashboardNodeHostMemoryGb;
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardNodeHostOcpuCount(@Nullable Integer opendashboardNodeHostOcpuCount) {
            this.opendashboardNodeHostOcpuCount = opendashboardNodeHostOcpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardPrivateIp(@Nullable String opendashboardPrivateIp) {
            this.opendashboardPrivateIp = opendashboardPrivateIp;
            return this;
        }
        @CustomType.Setter
        public Builder opensearchClusterId(String opensearchClusterId) {
            this.opensearchClusterId = Objects.requireNonNull(opensearchClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder opensearchFqdn(@Nullable String opensearchFqdn) {
            this.opensearchFqdn = opensearchFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder opensearchPrivateIp(@Nullable String opensearchPrivateIp) {
            this.opensearchPrivateIp = opensearchPrivateIp;
            return this;
        }
        @CustomType.Setter
        public Builder securityMasterUserName(@Nullable String securityMasterUserName) {
            this.securityMasterUserName = securityMasterUserName;
            return this;
        }
        @CustomType.Setter
        public Builder securityMasterUserPasswordHash(@Nullable String securityMasterUserPasswordHash) {
            this.securityMasterUserPasswordHash = securityMasterUserPasswordHash;
            return this;
        }
        @CustomType.Setter
        public Builder securityMode(@Nullable String securityMode) {
            this.securityMode = securityMode;
            return this;
        }
        @CustomType.Setter
        public Builder softwareVersion(@Nullable String softwareVersion) {
            this.softwareVersion = softwareVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetCompartmentId(@Nullable String subnetCompartmentId) {
            this.subnetCompartmentId = subnetCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeDeleted(@Nullable String timeDeleted) {
            this.timeDeleted = timeDeleted;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder totalStorageGb(@Nullable Integer totalStorageGb) {
            this.totalStorageGb = totalStorageGb;
            return this;
        }
        @CustomType.Setter
        public Builder vcnCompartmentId(@Nullable String vcnCompartmentId) {
            this.vcnCompartmentId = vcnCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(@Nullable String vcnId) {
            this.vcnId = vcnId;
            return this;
        }
        public GetOpensearchClusterResult build() {
            final var o = new GetOpensearchClusterResult();
            o.availabilityDomains = availabilityDomains;
            o.compartmentId = compartmentId;
            o.dataNodeCount = dataNodeCount;
            o.dataNodeHostBareMetalShape = dataNodeHostBareMetalShape;
            o.dataNodeHostMemoryGb = dataNodeHostMemoryGb;
            o.dataNodeHostOcpuCount = dataNodeHostOcpuCount;
            o.dataNodeHostType = dataNodeHostType;
            o.dataNodeStorageGb = dataNodeStorageGb;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.fqdn = fqdn;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.masterNodeCount = masterNodeCount;
            o.masterNodeHostBareMetalShape = masterNodeHostBareMetalShape;
            o.masterNodeHostMemoryGb = masterNodeHostMemoryGb;
            o.masterNodeHostOcpuCount = masterNodeHostOcpuCount;
            o.masterNodeHostType = masterNodeHostType;
            o.opendashboardFqdn = opendashboardFqdn;
            o.opendashboardNodeCount = opendashboardNodeCount;
            o.opendashboardNodeHostMemoryGb = opendashboardNodeHostMemoryGb;
            o.opendashboardNodeHostOcpuCount = opendashboardNodeHostOcpuCount;
            o.opendashboardPrivateIp = opendashboardPrivateIp;
            o.opensearchClusterId = opensearchClusterId;
            o.opensearchFqdn = opensearchFqdn;
            o.opensearchPrivateIp = opensearchPrivateIp;
            o.securityMasterUserName = securityMasterUserName;
            o.securityMasterUserPasswordHash = securityMasterUserPasswordHash;
            o.securityMode = securityMode;
            o.softwareVersion = softwareVersion;
            o.state = state;
            o.subnetCompartmentId = subnetCompartmentId;
            o.subnetId = subnetId;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeDeleted = timeDeleted;
            o.timeUpdated = timeUpdated;
            o.totalStorageGb = totalStorageGb;
            o.vcnCompartmentId = vcnCompartmentId;
            o.vcnId = vcnId;
            return o;
        }
    }
}
