// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOpensearchClusterResult {
    /**
     * @return The availability domains to distribute the cluser nodes across.
     * 
     */
    private final List<String> availabilityDomains;
    /**
     * @return The OCID of the compartment where the cluster is located.
     * 
     */
    private final String compartmentId;
    /**
     * @return The number of data nodes configured for the cluster.
     * 
     */
    private final Integer dataNodeCount;
    /**
     * @return The bare metal shape for the cluster&#39;s data nodes.
     * 
     */
    private final String dataNodeHostBareMetalShape;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s data nodes.
     * 
     */
    private final Integer dataNodeHostMemoryGb;
    /**
     * @return The number of OCPUs configured for the cluster&#39;s data nodes.
     * 
     */
    private final Integer dataNodeHostOcpuCount;
    /**
     * @return The instance type for the cluster&#39;s data nodes.
     * 
     */
    private final String dataNodeHostType;
    /**
     * @return The amount of storage in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    private final Integer dataNodeStorageGb;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The name of the cluster. Avoid entering confidential information.
     * 
     */
    private final String displayName;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    private final String fqdn;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the cluster.
     * 
     */
    private final String id;
    /**
     * @return Additional information about the current lifecycle state of the cluster.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return The number of master nodes configured for the cluster.
     * 
     */
    private final Integer masterNodeCount;
    /**
     * @return The bare metal shape for the cluster&#39;s master nodes.
     * 
     */
    private final String masterNodeHostBareMetalShape;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s master nodes.
     * 
     */
    private final Integer masterNodeHostMemoryGb;
    /**
     * @return The number of OCPUs configured for cluster&#39;s master nodes.
     * 
     */
    private final Integer masterNodeHostOcpuCount;
    /**
     * @return The instance type for the cluster&#39;s master nodes.
     * 
     */
    private final String masterNodeHostType;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s OpenSearch Dashboard API endpoint.
     * 
     */
    private final String opendashboardFqdn;
    /**
     * @return The number of OpenSearch Dashboard nodes configured for the cluster.
     * 
     */
    private final Integer opendashboardNodeCount;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    private final Integer opendashboardNodeHostMemoryGb;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    private final Integer opendashboardNodeHostOcpuCount;
    /**
     * @return The private IP address for the cluster&#39;s OpenSearch Dashboard.
     * 
     */
    private final String opendashboardPrivateIp;
    private final String opensearchClusterId;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    private final String opensearchFqdn;
    /**
     * @return The cluster&#39;s private IP address.
     * 
     */
    private final String opensearchPrivateIp;
    /**
     * @return The software version the cluster is running.
     * 
     */
    private final String softwareVersion;
    /**
     * @return The current state of the cluster.
     * 
     */
    private final String state;
    /**
     * @return The OCID for the compartment where the cluster&#39;s subnet is located.
     * 
     */
    private final String subnetCompartmentId;
    /**
     * @return The OCID of the cluster&#39;s subnet.
     * 
     */
    private final String subnetId;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The amount of time in milliseconds since the cluster was created.
     * 
     */
    private final String timeCreated;
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    private final String timeDeleted;
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    private final String timeUpdated;
    /**
     * @return The size in GB of the cluster&#39;s total storage.
     * 
     */
    private final Integer totalStorageGb;
    /**
     * @return The OCID for the compartment where the cluster&#39;s VCN is located.
     * 
     */
    private final String vcnCompartmentId;
    /**
     * @return The OCID of the cluster&#39;s VCN.
     * 
     */
    private final String vcnId;

    @CustomType.Constructor
    private GetOpensearchClusterResult(
        @CustomType.Parameter("availabilityDomains") List<String> availabilityDomains,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("dataNodeCount") Integer dataNodeCount,
        @CustomType.Parameter("dataNodeHostBareMetalShape") String dataNodeHostBareMetalShape,
        @CustomType.Parameter("dataNodeHostMemoryGb") Integer dataNodeHostMemoryGb,
        @CustomType.Parameter("dataNodeHostOcpuCount") Integer dataNodeHostOcpuCount,
        @CustomType.Parameter("dataNodeHostType") String dataNodeHostType,
        @CustomType.Parameter("dataNodeStorageGb") Integer dataNodeStorageGb,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("fqdn") String fqdn,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("masterNodeCount") Integer masterNodeCount,
        @CustomType.Parameter("masterNodeHostBareMetalShape") String masterNodeHostBareMetalShape,
        @CustomType.Parameter("masterNodeHostMemoryGb") Integer masterNodeHostMemoryGb,
        @CustomType.Parameter("masterNodeHostOcpuCount") Integer masterNodeHostOcpuCount,
        @CustomType.Parameter("masterNodeHostType") String masterNodeHostType,
        @CustomType.Parameter("opendashboardFqdn") String opendashboardFqdn,
        @CustomType.Parameter("opendashboardNodeCount") Integer opendashboardNodeCount,
        @CustomType.Parameter("opendashboardNodeHostMemoryGb") Integer opendashboardNodeHostMemoryGb,
        @CustomType.Parameter("opendashboardNodeHostOcpuCount") Integer opendashboardNodeHostOcpuCount,
        @CustomType.Parameter("opendashboardPrivateIp") String opendashboardPrivateIp,
        @CustomType.Parameter("opensearchClusterId") String opensearchClusterId,
        @CustomType.Parameter("opensearchFqdn") String opensearchFqdn,
        @CustomType.Parameter("opensearchPrivateIp") String opensearchPrivateIp,
        @CustomType.Parameter("softwareVersion") String softwareVersion,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("subnetCompartmentId") String subnetCompartmentId,
        @CustomType.Parameter("subnetId") String subnetId,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeDeleted") String timeDeleted,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("totalStorageGb") Integer totalStorageGb,
        @CustomType.Parameter("vcnCompartmentId") String vcnCompartmentId,
        @CustomType.Parameter("vcnId") String vcnId) {
        this.availabilityDomains = availabilityDomains;
        this.compartmentId = compartmentId;
        this.dataNodeCount = dataNodeCount;
        this.dataNodeHostBareMetalShape = dataNodeHostBareMetalShape;
        this.dataNodeHostMemoryGb = dataNodeHostMemoryGb;
        this.dataNodeHostOcpuCount = dataNodeHostOcpuCount;
        this.dataNodeHostType = dataNodeHostType;
        this.dataNodeStorageGb = dataNodeStorageGb;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.fqdn = fqdn;
        this.freeformTags = freeformTags;
        this.id = id;
        this.lifecycleDetails = lifecycleDetails;
        this.masterNodeCount = masterNodeCount;
        this.masterNodeHostBareMetalShape = masterNodeHostBareMetalShape;
        this.masterNodeHostMemoryGb = masterNodeHostMemoryGb;
        this.masterNodeHostOcpuCount = masterNodeHostOcpuCount;
        this.masterNodeHostType = masterNodeHostType;
        this.opendashboardFqdn = opendashboardFqdn;
        this.opendashboardNodeCount = opendashboardNodeCount;
        this.opendashboardNodeHostMemoryGb = opendashboardNodeHostMemoryGb;
        this.opendashboardNodeHostOcpuCount = opendashboardNodeHostOcpuCount;
        this.opendashboardPrivateIp = opendashboardPrivateIp;
        this.opensearchClusterId = opensearchClusterId;
        this.opensearchFqdn = opensearchFqdn;
        this.opensearchPrivateIp = opensearchPrivateIp;
        this.softwareVersion = softwareVersion;
        this.state = state;
        this.subnetCompartmentId = subnetCompartmentId;
        this.subnetId = subnetId;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeDeleted = timeDeleted;
        this.timeUpdated = timeUpdated;
        this.totalStorageGb = totalStorageGb;
        this.vcnCompartmentId = vcnCompartmentId;
        this.vcnId = vcnId;
    }

    /**
     * @return The availability domains to distribute the cluser nodes across.
     * 
     */
    public List<String> availabilityDomains() {
        return this.availabilityDomains;
    }
    /**
     * @return The OCID of the compartment where the cluster is located.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The number of data nodes configured for the cluster.
     * 
     */
    public Integer dataNodeCount() {
        return this.dataNodeCount;
    }
    /**
     * @return The bare metal shape for the cluster&#39;s data nodes.
     * 
     */
    public String dataNodeHostBareMetalShape() {
        return this.dataNodeHostBareMetalShape;
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s data nodes.
     * 
     */
    public Integer dataNodeHostMemoryGb() {
        return this.dataNodeHostMemoryGb;
    }
    /**
     * @return The number of OCPUs configured for the cluster&#39;s data nodes.
     * 
     */
    public Integer dataNodeHostOcpuCount() {
        return this.dataNodeHostOcpuCount;
    }
    /**
     * @return The instance type for the cluster&#39;s data nodes.
     * 
     */
    public String dataNodeHostType() {
        return this.dataNodeHostType;
    }
    /**
     * @return The amount of storage in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    public Integer dataNodeStorageGb() {
        return this.dataNodeStorageGb;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The name of the cluster. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycle state of the cluster.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The number of master nodes configured for the cluster.
     * 
     */
    public Integer masterNodeCount() {
        return this.masterNodeCount;
    }
    /**
     * @return The bare metal shape for the cluster&#39;s master nodes.
     * 
     */
    public String masterNodeHostBareMetalShape() {
        return this.masterNodeHostBareMetalShape;
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s master nodes.
     * 
     */
    public Integer masterNodeHostMemoryGb() {
        return this.masterNodeHostMemoryGb;
    }
    /**
     * @return The number of OCPUs configured for cluster&#39;s master nodes.
     * 
     */
    public Integer masterNodeHostOcpuCount() {
        return this.masterNodeHostOcpuCount;
    }
    /**
     * @return The instance type for the cluster&#39;s master nodes.
     * 
     */
    public String masterNodeHostType() {
        return this.masterNodeHostType;
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s OpenSearch Dashboard API endpoint.
     * 
     */
    public String opendashboardFqdn() {
        return this.opendashboardFqdn;
    }
    /**
     * @return The number of OpenSearch Dashboard nodes configured for the cluster.
     * 
     */
    public Integer opendashboardNodeCount() {
        return this.opendashboardNodeCount;
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    public Integer opendashboardNodeHostMemoryGb() {
        return this.opendashboardNodeHostMemoryGb;
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    public Integer opendashboardNodeHostOcpuCount() {
        return this.opendashboardNodeHostOcpuCount;
    }
    /**
     * @return The private IP address for the cluster&#39;s OpenSearch Dashboard.
     * 
     */
    public String opendashboardPrivateIp() {
        return this.opendashboardPrivateIp;
    }
    public String opensearchClusterId() {
        return this.opensearchClusterId;
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public String opensearchFqdn() {
        return this.opensearchFqdn;
    }
    /**
     * @return The cluster&#39;s private IP address.
     * 
     */
    public String opensearchPrivateIp() {
        return this.opensearchPrivateIp;
    }
    /**
     * @return The software version the cluster is running.
     * 
     */
    public String softwareVersion() {
        return this.softwareVersion;
    }
    /**
     * @return The current state of the cluster.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The OCID for the compartment where the cluster&#39;s subnet is located.
     * 
     */
    public String subnetCompartmentId() {
        return this.subnetCompartmentId;
    }
    /**
     * @return The OCID of the cluster&#39;s subnet.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The amount of time in milliseconds since the cluster was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    public String timeDeleted() {
        return this.timeDeleted;
    }
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The size in GB of the cluster&#39;s total storage.
     * 
     */
    public Integer totalStorageGb() {
        return this.totalStorageGb;
    }
    /**
     * @return The OCID for the compartment where the cluster&#39;s VCN is located.
     * 
     */
    public String vcnCompartmentId() {
        return this.vcnCompartmentId;
    }
    /**
     * @return The OCID of the cluster&#39;s VCN.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpensearchClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> availabilityDomains;
        private String compartmentId;
        private Integer dataNodeCount;
        private String dataNodeHostBareMetalShape;
        private Integer dataNodeHostMemoryGb;
        private Integer dataNodeHostOcpuCount;
        private String dataNodeHostType;
        private Integer dataNodeStorageGb;
        private Map<String,Object> definedTags;
        private String displayName;
        private String fqdn;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private Integer masterNodeCount;
        private String masterNodeHostBareMetalShape;
        private Integer masterNodeHostMemoryGb;
        private Integer masterNodeHostOcpuCount;
        private String masterNodeHostType;
        private String opendashboardFqdn;
        private Integer opendashboardNodeCount;
        private Integer opendashboardNodeHostMemoryGb;
        private Integer opendashboardNodeHostOcpuCount;
        private String opendashboardPrivateIp;
        private String opensearchClusterId;
        private String opensearchFqdn;
        private String opensearchPrivateIp;
        private String softwareVersion;
        private String state;
        private String subnetCompartmentId;
        private String subnetId;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeDeleted;
        private String timeUpdated;
        private Integer totalStorageGb;
        private String vcnCompartmentId;
        private String vcnId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOpensearchClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomains = defaults.availabilityDomains;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataNodeCount = defaults.dataNodeCount;
    	      this.dataNodeHostBareMetalShape = defaults.dataNodeHostBareMetalShape;
    	      this.dataNodeHostMemoryGb = defaults.dataNodeHostMemoryGb;
    	      this.dataNodeHostOcpuCount = defaults.dataNodeHostOcpuCount;
    	      this.dataNodeHostType = defaults.dataNodeHostType;
    	      this.dataNodeStorageGb = defaults.dataNodeStorageGb;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.fqdn = defaults.fqdn;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.masterNodeCount = defaults.masterNodeCount;
    	      this.masterNodeHostBareMetalShape = defaults.masterNodeHostBareMetalShape;
    	      this.masterNodeHostMemoryGb = defaults.masterNodeHostMemoryGb;
    	      this.masterNodeHostOcpuCount = defaults.masterNodeHostOcpuCount;
    	      this.masterNodeHostType = defaults.masterNodeHostType;
    	      this.opendashboardFqdn = defaults.opendashboardFqdn;
    	      this.opendashboardNodeCount = defaults.opendashboardNodeCount;
    	      this.opendashboardNodeHostMemoryGb = defaults.opendashboardNodeHostMemoryGb;
    	      this.opendashboardNodeHostOcpuCount = defaults.opendashboardNodeHostOcpuCount;
    	      this.opendashboardPrivateIp = defaults.opendashboardPrivateIp;
    	      this.opensearchClusterId = defaults.opensearchClusterId;
    	      this.opensearchFqdn = defaults.opensearchFqdn;
    	      this.opensearchPrivateIp = defaults.opensearchPrivateIp;
    	      this.softwareVersion = defaults.softwareVersion;
    	      this.state = defaults.state;
    	      this.subnetCompartmentId = defaults.subnetCompartmentId;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDeleted = defaults.timeDeleted;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.totalStorageGb = defaults.totalStorageGb;
    	      this.vcnCompartmentId = defaults.vcnCompartmentId;
    	      this.vcnId = defaults.vcnId;
        }

        public Builder availabilityDomains(List<String> availabilityDomains) {
            this.availabilityDomains = Objects.requireNonNull(availabilityDomains);
            return this;
        }
        public Builder availabilityDomains(String... availabilityDomains) {
            return availabilityDomains(List.of(availabilityDomains));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder dataNodeCount(Integer dataNodeCount) {
            this.dataNodeCount = Objects.requireNonNull(dataNodeCount);
            return this;
        }
        public Builder dataNodeHostBareMetalShape(String dataNodeHostBareMetalShape) {
            this.dataNodeHostBareMetalShape = Objects.requireNonNull(dataNodeHostBareMetalShape);
            return this;
        }
        public Builder dataNodeHostMemoryGb(Integer dataNodeHostMemoryGb) {
            this.dataNodeHostMemoryGb = Objects.requireNonNull(dataNodeHostMemoryGb);
            return this;
        }
        public Builder dataNodeHostOcpuCount(Integer dataNodeHostOcpuCount) {
            this.dataNodeHostOcpuCount = Objects.requireNonNull(dataNodeHostOcpuCount);
            return this;
        }
        public Builder dataNodeHostType(String dataNodeHostType) {
            this.dataNodeHostType = Objects.requireNonNull(dataNodeHostType);
            return this;
        }
        public Builder dataNodeStorageGb(Integer dataNodeStorageGb) {
            this.dataNodeStorageGb = Objects.requireNonNull(dataNodeStorageGb);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder masterNodeCount(Integer masterNodeCount) {
            this.masterNodeCount = Objects.requireNonNull(masterNodeCount);
            return this;
        }
        public Builder masterNodeHostBareMetalShape(String masterNodeHostBareMetalShape) {
            this.masterNodeHostBareMetalShape = Objects.requireNonNull(masterNodeHostBareMetalShape);
            return this;
        }
        public Builder masterNodeHostMemoryGb(Integer masterNodeHostMemoryGb) {
            this.masterNodeHostMemoryGb = Objects.requireNonNull(masterNodeHostMemoryGb);
            return this;
        }
        public Builder masterNodeHostOcpuCount(Integer masterNodeHostOcpuCount) {
            this.masterNodeHostOcpuCount = Objects.requireNonNull(masterNodeHostOcpuCount);
            return this;
        }
        public Builder masterNodeHostType(String masterNodeHostType) {
            this.masterNodeHostType = Objects.requireNonNull(masterNodeHostType);
            return this;
        }
        public Builder opendashboardFqdn(String opendashboardFqdn) {
            this.opendashboardFqdn = Objects.requireNonNull(opendashboardFqdn);
            return this;
        }
        public Builder opendashboardNodeCount(Integer opendashboardNodeCount) {
            this.opendashboardNodeCount = Objects.requireNonNull(opendashboardNodeCount);
            return this;
        }
        public Builder opendashboardNodeHostMemoryGb(Integer opendashboardNodeHostMemoryGb) {
            this.opendashboardNodeHostMemoryGb = Objects.requireNonNull(opendashboardNodeHostMemoryGb);
            return this;
        }
        public Builder opendashboardNodeHostOcpuCount(Integer opendashboardNodeHostOcpuCount) {
            this.opendashboardNodeHostOcpuCount = Objects.requireNonNull(opendashboardNodeHostOcpuCount);
            return this;
        }
        public Builder opendashboardPrivateIp(String opendashboardPrivateIp) {
            this.opendashboardPrivateIp = Objects.requireNonNull(opendashboardPrivateIp);
            return this;
        }
        public Builder opensearchClusterId(String opensearchClusterId) {
            this.opensearchClusterId = Objects.requireNonNull(opensearchClusterId);
            return this;
        }
        public Builder opensearchFqdn(String opensearchFqdn) {
            this.opensearchFqdn = Objects.requireNonNull(opensearchFqdn);
            return this;
        }
        public Builder opensearchPrivateIp(String opensearchPrivateIp) {
            this.opensearchPrivateIp = Objects.requireNonNull(opensearchPrivateIp);
            return this;
        }
        public Builder softwareVersion(String softwareVersion) {
            this.softwareVersion = Objects.requireNonNull(softwareVersion);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder subnetCompartmentId(String subnetCompartmentId) {
            this.subnetCompartmentId = Objects.requireNonNull(subnetCompartmentId);
            return this;
        }
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeDeleted(String timeDeleted) {
            this.timeDeleted = Objects.requireNonNull(timeDeleted);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder totalStorageGb(Integer totalStorageGb) {
            this.totalStorageGb = Objects.requireNonNull(totalStorageGb);
            return this;
        }
        public Builder vcnCompartmentId(String vcnCompartmentId) {
            this.vcnCompartmentId = Objects.requireNonNull(vcnCompartmentId);
            return this;
        }
        public Builder vcnId(String vcnId) {
            this.vcnId = Objects.requireNonNull(vcnId);
            return this;
        }        public GetOpensearchClusterResult build() {
            return new GetOpensearchClusterResult(availabilityDomains, compartmentId, dataNodeCount, dataNodeHostBareMetalShape, dataNodeHostMemoryGb, dataNodeHostOcpuCount, dataNodeHostType, dataNodeStorageGb, definedTags, displayName, fqdn, freeformTags, id, lifecycleDetails, masterNodeCount, masterNodeHostBareMetalShape, masterNodeHostMemoryGb, masterNodeHostOcpuCount, masterNodeHostType, opendashboardFqdn, opendashboardNodeCount, opendashboardNodeHostMemoryGb, opendashboardNodeHostOcpuCount, opendashboardPrivateIp, opensearchClusterId, opensearchFqdn, opensearchPrivateIp, softwareVersion, state, subnetCompartmentId, subnetId, systemTags, timeCreated, timeDeleted, timeUpdated, totalStorageGb, vcnCompartmentId, vcnId);
        }
    }
}
