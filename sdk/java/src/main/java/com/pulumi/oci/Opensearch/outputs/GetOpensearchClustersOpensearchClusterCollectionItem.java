// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOpensearchClustersOpensearchClusterCollectionItem {
    /**
     * @return The availability domains to distribute the cluser nodes across.
     * 
     */
    private List<String> availabilityDomains;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return The number of data nodes configured for the cluster.
     * 
     */
    private Integer dataNodeCount;
    /**
     * @return The bare metal shape for the cluster&#39;s data nodes.
     * 
     */
    private String dataNodeHostBareMetalShape;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s data nodes.
     * 
     */
    private Integer dataNodeHostMemoryGb;
    /**
     * @return The number of OCPUs configured for the cluster&#39;s data nodes.
     * 
     */
    private Integer dataNodeHostOcpuCount;
    /**
     * @return The instance type for the cluster&#39;s data nodes.
     * 
     */
    private String dataNodeHostType;
    /**
     * @return The amount of storage in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    private Integer dataNodeStorageGb;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    private String fqdn;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return unique OpensearchCluster identifier
     * 
     */
    private String id;
    /**
     * @return Additional information about the current lifecycle state of the cluster.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The number of master nodes configured for the cluster.
     * 
     */
    private Integer masterNodeCount;
    /**
     * @return The bare metal shape for the cluster&#39;s master nodes.
     * 
     */
    private String masterNodeHostBareMetalShape;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s master nodes.
     * 
     */
    private Integer masterNodeHostMemoryGb;
    /**
     * @return The number of OCPUs configured for cluster&#39;s master nodes.
     * 
     */
    private Integer masterNodeHostOcpuCount;
    /**
     * @return The instance type for the cluster&#39;s master nodes.
     * 
     */
    private String masterNodeHostType;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s OpenSearch Dashboard API endpoint.
     * 
     */
    private String opendashboardFqdn;
    /**
     * @return The number of OpenSearch Dashboard nodes configured for the cluster.
     * 
     */
    private Integer opendashboardNodeCount;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    private Integer opendashboardNodeHostMemoryGb;
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    private Integer opendashboardNodeHostOcpuCount;
    /**
     * @return The private IP address for the cluster&#39;s OpenSearch Dashboard.
     * 
     */
    private String opendashboardPrivateIp;
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    private String opensearchFqdn;
    /**
     * @return The cluster&#39;s private IP address.
     * 
     */
    private String opensearchPrivateIp;
    /**
     * @return The name of the master user that are used to manage security config
     * 
     */
    private String securityMasterUserName;
    /**
     * @return The password hash of the master user that are used to manage security config
     * 
     */
    private String securityMasterUserPasswordHash;
    /**
     * @return The security mode of the cluster.
     * 
     */
    private String securityMode;
    /**
     * @return The software version the cluster is running.
     * 
     */
    private String softwareVersion;
    /**
     * @return A filter to return only OpensearchClusters their lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return The OCID for the compartment where the cluster&#39;s subnet is located.
     * 
     */
    private String subnetCompartmentId;
    /**
     * @return The OCID of the cluster&#39;s subnet.
     * 
     */
    private String subnetId;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The amount of time in milliseconds since the cluster was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    private String timeDeleted;
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    private String timeUpdated;
    /**
     * @return The size in GB of the cluster&#39;s total storage.
     * 
     */
    private Integer totalStorageGb;
    /**
     * @return The OCID for the compartment where the cluster&#39;s VCN is located.
     * 
     */
    private String vcnCompartmentId;
    /**
     * @return The OCID of the cluster&#39;s VCN.
     * 
     */
    private String vcnId;

    private GetOpensearchClustersOpensearchClusterCollectionItem() {}
    /**
     * @return The availability domains to distribute the cluser nodes across.
     * 
     */
    public List<String> availabilityDomains() {
        return this.availabilityDomains;
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The number of data nodes configured for the cluster.
     * 
     */
    public Integer dataNodeCount() {
        return this.dataNodeCount;
    }
    /**
     * @return The bare metal shape for the cluster&#39;s data nodes.
     * 
     */
    public String dataNodeHostBareMetalShape() {
        return this.dataNodeHostBareMetalShape;
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s data nodes.
     * 
     */
    public Integer dataNodeHostMemoryGb() {
        return this.dataNodeHostMemoryGb;
    }
    /**
     * @return The number of OCPUs configured for the cluster&#39;s data nodes.
     * 
     */
    public Integer dataNodeHostOcpuCount() {
        return this.dataNodeHostOcpuCount;
    }
    /**
     * @return The instance type for the cluster&#39;s data nodes.
     * 
     */
    public String dataNodeHostType() {
        return this.dataNodeHostType;
    }
    /**
     * @return The amount of storage in GB, to configure per node for the cluster&#39;s data nodes.
     * 
     */
    public Integer dataNodeStorageGb() {
        return this.dataNodeStorageGb;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return unique OpensearchCluster identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycle state of the cluster.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The number of master nodes configured for the cluster.
     * 
     */
    public Integer masterNodeCount() {
        return this.masterNodeCount;
    }
    /**
     * @return The bare metal shape for the cluster&#39;s master nodes.
     * 
     */
    public String masterNodeHostBareMetalShape() {
        return this.masterNodeHostBareMetalShape;
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s master nodes.
     * 
     */
    public Integer masterNodeHostMemoryGb() {
        return this.masterNodeHostMemoryGb;
    }
    /**
     * @return The number of OCPUs configured for cluster&#39;s master nodes.
     * 
     */
    public Integer masterNodeHostOcpuCount() {
        return this.masterNodeHostOcpuCount;
    }
    /**
     * @return The instance type for the cluster&#39;s master nodes.
     * 
     */
    public String masterNodeHostType() {
        return this.masterNodeHostType;
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s OpenSearch Dashboard API endpoint.
     * 
     */
    public String opendashboardFqdn() {
        return this.opendashboardFqdn;
    }
    /**
     * @return The number of OpenSearch Dashboard nodes configured for the cluster.
     * 
     */
    public Integer opendashboardNodeCount() {
        return this.opendashboardNodeCount;
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    public Integer opendashboardNodeHostMemoryGb() {
        return this.opendashboardNodeHostMemoryGb;
    }
    /**
     * @return The amount of memory in GB, for the cluster&#39;s OpenSearch Dashboard nodes.
     * 
     */
    public Integer opendashboardNodeHostOcpuCount() {
        return this.opendashboardNodeHostOcpuCount;
    }
    /**
     * @return The private IP address for the cluster&#39;s OpenSearch Dashboard.
     * 
     */
    public String opendashboardPrivateIp() {
        return this.opendashboardPrivateIp;
    }
    /**
     * @return The fully qualified domain name (FQDN) for the cluster&#39;s API endpoint.
     * 
     */
    public String opensearchFqdn() {
        return this.opensearchFqdn;
    }
    /**
     * @return The cluster&#39;s private IP address.
     * 
     */
    public String opensearchPrivateIp() {
        return this.opensearchPrivateIp;
    }
    /**
     * @return The name of the master user that are used to manage security config
     * 
     */
    public String securityMasterUserName() {
        return this.securityMasterUserName;
    }
    /**
     * @return The password hash of the master user that are used to manage security config
     * 
     */
    public String securityMasterUserPasswordHash() {
        return this.securityMasterUserPasswordHash;
    }
    /**
     * @return The security mode of the cluster.
     * 
     */
    public String securityMode() {
        return this.securityMode;
    }
    /**
     * @return The software version the cluster is running.
     * 
     */
    public String softwareVersion() {
        return this.softwareVersion;
    }
    /**
     * @return A filter to return only OpensearchClusters their lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The OCID for the compartment where the cluster&#39;s subnet is located.
     * 
     */
    public String subnetCompartmentId() {
        return this.subnetCompartmentId;
    }
    /**
     * @return The OCID of the cluster&#39;s subnet.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The amount of time in milliseconds since the cluster was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    public String timeDeleted() {
        return this.timeDeleted;
    }
    /**
     * @return The amount of time in milliseconds since the cluster was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The size in GB of the cluster&#39;s total storage.
     * 
     */
    public Integer totalStorageGb() {
        return this.totalStorageGb;
    }
    /**
     * @return The OCID for the compartment where the cluster&#39;s VCN is located.
     * 
     */
    public String vcnCompartmentId() {
        return this.vcnCompartmentId;
    }
    /**
     * @return The OCID of the cluster&#39;s VCN.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpensearchClustersOpensearchClusterCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> availabilityDomains;
        private String compartmentId;
        private Integer dataNodeCount;
        private String dataNodeHostBareMetalShape;
        private Integer dataNodeHostMemoryGb;
        private Integer dataNodeHostOcpuCount;
        private String dataNodeHostType;
        private Integer dataNodeStorageGb;
        private Map<String,Object> definedTags;
        private String displayName;
        private String fqdn;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private Integer masterNodeCount;
        private String masterNodeHostBareMetalShape;
        private Integer masterNodeHostMemoryGb;
        private Integer masterNodeHostOcpuCount;
        private String masterNodeHostType;
        private String opendashboardFqdn;
        private Integer opendashboardNodeCount;
        private Integer opendashboardNodeHostMemoryGb;
        private Integer opendashboardNodeHostOcpuCount;
        private String opendashboardPrivateIp;
        private String opensearchFqdn;
        private String opensearchPrivateIp;
        private String securityMasterUserName;
        private String securityMasterUserPasswordHash;
        private String securityMode;
        private String softwareVersion;
        private String state;
        private String subnetCompartmentId;
        private String subnetId;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeDeleted;
        private String timeUpdated;
        private Integer totalStorageGb;
        private String vcnCompartmentId;
        private String vcnId;
        public Builder() {}
        public Builder(GetOpensearchClustersOpensearchClusterCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomains = defaults.availabilityDomains;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataNodeCount = defaults.dataNodeCount;
    	      this.dataNodeHostBareMetalShape = defaults.dataNodeHostBareMetalShape;
    	      this.dataNodeHostMemoryGb = defaults.dataNodeHostMemoryGb;
    	      this.dataNodeHostOcpuCount = defaults.dataNodeHostOcpuCount;
    	      this.dataNodeHostType = defaults.dataNodeHostType;
    	      this.dataNodeStorageGb = defaults.dataNodeStorageGb;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.fqdn = defaults.fqdn;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.masterNodeCount = defaults.masterNodeCount;
    	      this.masterNodeHostBareMetalShape = defaults.masterNodeHostBareMetalShape;
    	      this.masterNodeHostMemoryGb = defaults.masterNodeHostMemoryGb;
    	      this.masterNodeHostOcpuCount = defaults.masterNodeHostOcpuCount;
    	      this.masterNodeHostType = defaults.masterNodeHostType;
    	      this.opendashboardFqdn = defaults.opendashboardFqdn;
    	      this.opendashboardNodeCount = defaults.opendashboardNodeCount;
    	      this.opendashboardNodeHostMemoryGb = defaults.opendashboardNodeHostMemoryGb;
    	      this.opendashboardNodeHostOcpuCount = defaults.opendashboardNodeHostOcpuCount;
    	      this.opendashboardPrivateIp = defaults.opendashboardPrivateIp;
    	      this.opensearchFqdn = defaults.opensearchFqdn;
    	      this.opensearchPrivateIp = defaults.opensearchPrivateIp;
    	      this.securityMasterUserName = defaults.securityMasterUserName;
    	      this.securityMasterUserPasswordHash = defaults.securityMasterUserPasswordHash;
    	      this.securityMode = defaults.securityMode;
    	      this.softwareVersion = defaults.softwareVersion;
    	      this.state = defaults.state;
    	      this.subnetCompartmentId = defaults.subnetCompartmentId;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDeleted = defaults.timeDeleted;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.totalStorageGb = defaults.totalStorageGb;
    	      this.vcnCompartmentId = defaults.vcnCompartmentId;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder availabilityDomains(List<String> availabilityDomains) {
            this.availabilityDomains = Objects.requireNonNull(availabilityDomains);
            return this;
        }
        public Builder availabilityDomains(String... availabilityDomains) {
            return availabilityDomains(List.of(availabilityDomains));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeCount(Integer dataNodeCount) {
            this.dataNodeCount = Objects.requireNonNull(dataNodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeHostBareMetalShape(String dataNodeHostBareMetalShape) {
            this.dataNodeHostBareMetalShape = Objects.requireNonNull(dataNodeHostBareMetalShape);
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeHostMemoryGb(Integer dataNodeHostMemoryGb) {
            this.dataNodeHostMemoryGb = Objects.requireNonNull(dataNodeHostMemoryGb);
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeHostOcpuCount(Integer dataNodeHostOcpuCount) {
            this.dataNodeHostOcpuCount = Objects.requireNonNull(dataNodeHostOcpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeHostType(String dataNodeHostType) {
            this.dataNodeHostType = Objects.requireNonNull(dataNodeHostType);
            return this;
        }
        @CustomType.Setter
        public Builder dataNodeStorageGb(Integer dataNodeStorageGb) {
            this.dataNodeStorageGb = Objects.requireNonNull(dataNodeStorageGb);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeCount(Integer masterNodeCount) {
            this.masterNodeCount = Objects.requireNonNull(masterNodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeHostBareMetalShape(String masterNodeHostBareMetalShape) {
            this.masterNodeHostBareMetalShape = Objects.requireNonNull(masterNodeHostBareMetalShape);
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeHostMemoryGb(Integer masterNodeHostMemoryGb) {
            this.masterNodeHostMemoryGb = Objects.requireNonNull(masterNodeHostMemoryGb);
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeHostOcpuCount(Integer masterNodeHostOcpuCount) {
            this.masterNodeHostOcpuCount = Objects.requireNonNull(masterNodeHostOcpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder masterNodeHostType(String masterNodeHostType) {
            this.masterNodeHostType = Objects.requireNonNull(masterNodeHostType);
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardFqdn(String opendashboardFqdn) {
            this.opendashboardFqdn = Objects.requireNonNull(opendashboardFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardNodeCount(Integer opendashboardNodeCount) {
            this.opendashboardNodeCount = Objects.requireNonNull(opendashboardNodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardNodeHostMemoryGb(Integer opendashboardNodeHostMemoryGb) {
            this.opendashboardNodeHostMemoryGb = Objects.requireNonNull(opendashboardNodeHostMemoryGb);
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardNodeHostOcpuCount(Integer opendashboardNodeHostOcpuCount) {
            this.opendashboardNodeHostOcpuCount = Objects.requireNonNull(opendashboardNodeHostOcpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder opendashboardPrivateIp(String opendashboardPrivateIp) {
            this.opendashboardPrivateIp = Objects.requireNonNull(opendashboardPrivateIp);
            return this;
        }
        @CustomType.Setter
        public Builder opensearchFqdn(String opensearchFqdn) {
            this.opensearchFqdn = Objects.requireNonNull(opensearchFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder opensearchPrivateIp(String opensearchPrivateIp) {
            this.opensearchPrivateIp = Objects.requireNonNull(opensearchPrivateIp);
            return this;
        }
        @CustomType.Setter
        public Builder securityMasterUserName(String securityMasterUserName) {
            this.securityMasterUserName = Objects.requireNonNull(securityMasterUserName);
            return this;
        }
        @CustomType.Setter
        public Builder securityMasterUserPasswordHash(String securityMasterUserPasswordHash) {
            this.securityMasterUserPasswordHash = Objects.requireNonNull(securityMasterUserPasswordHash);
            return this;
        }
        @CustomType.Setter
        public Builder securityMode(String securityMode) {
            this.securityMode = Objects.requireNonNull(securityMode);
            return this;
        }
        @CustomType.Setter
        public Builder softwareVersion(String softwareVersion) {
            this.softwareVersion = Objects.requireNonNull(softwareVersion);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subnetCompartmentId(String subnetCompartmentId) {
            this.subnetCompartmentId = Objects.requireNonNull(subnetCompartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeDeleted(String timeDeleted) {
            this.timeDeleted = Objects.requireNonNull(timeDeleted);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder totalStorageGb(Integer totalStorageGb) {
            this.totalStorageGb = Objects.requireNonNull(totalStorageGb);
            return this;
        }
        @CustomType.Setter
        public Builder vcnCompartmentId(String vcnCompartmentId) {
            this.vcnCompartmentId = Objects.requireNonNull(vcnCompartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(String vcnId) {
            this.vcnId = Objects.requireNonNull(vcnId);
            return this;
        }
        public GetOpensearchClustersOpensearchClusterCollectionItem build() {
            final var o = new GetOpensearchClustersOpensearchClusterCollectionItem();
            o.availabilityDomains = availabilityDomains;
            o.compartmentId = compartmentId;
            o.dataNodeCount = dataNodeCount;
            o.dataNodeHostBareMetalShape = dataNodeHostBareMetalShape;
            o.dataNodeHostMemoryGb = dataNodeHostMemoryGb;
            o.dataNodeHostOcpuCount = dataNodeHostOcpuCount;
            o.dataNodeHostType = dataNodeHostType;
            o.dataNodeStorageGb = dataNodeStorageGb;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.fqdn = fqdn;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.masterNodeCount = masterNodeCount;
            o.masterNodeHostBareMetalShape = masterNodeHostBareMetalShape;
            o.masterNodeHostMemoryGb = masterNodeHostMemoryGb;
            o.masterNodeHostOcpuCount = masterNodeHostOcpuCount;
            o.masterNodeHostType = masterNodeHostType;
            o.opendashboardFqdn = opendashboardFqdn;
            o.opendashboardNodeCount = opendashboardNodeCount;
            o.opendashboardNodeHostMemoryGb = opendashboardNodeHostMemoryGb;
            o.opendashboardNodeHostOcpuCount = opendashboardNodeHostOcpuCount;
            o.opendashboardPrivateIp = opendashboardPrivateIp;
            o.opensearchFqdn = opensearchFqdn;
            o.opensearchPrivateIp = opensearchPrivateIp;
            o.securityMasterUserName = securityMasterUserName;
            o.securityMasterUserPasswordHash = securityMasterUserPasswordHash;
            o.securityMode = securityMode;
            o.softwareVersion = softwareVersion;
            o.state = state;
            o.subnetCompartmentId = subnetCompartmentId;
            o.subnetId = subnetId;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeDeleted = timeDeleted;
            o.timeUpdated = timeUpdated;
            o.totalStorageGb = totalStorageGb;
            o.vcnCompartmentId = vcnCompartmentId;
            o.vcnId = vcnId;
            return o;
        }
    }
}
