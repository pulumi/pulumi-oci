// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opensearch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Opensearch.outputs.GetOpensearchVersionsFilter;
import com.pulumi.oci.Opensearch.outputs.GetOpensearchVersionsOpensearchVersionsCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetOpensearchVersionsResult {
    private final String compartmentId;
    private final @Nullable List<GetOpensearchVersionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of opensearch_versions_collection.
     * 
     */
    private final List<GetOpensearchVersionsOpensearchVersionsCollection> opensearchVersionsCollections;

    @CustomType.Constructor
    private GetOpensearchVersionsResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetOpensearchVersionsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("opensearchVersionsCollections") List<GetOpensearchVersionsOpensearchVersionsCollection> opensearchVersionsCollections) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.opensearchVersionsCollections = opensearchVersionsCollections;
    }

    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetOpensearchVersionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of opensearch_versions_collection.
     * 
     */
    public List<GetOpensearchVersionsOpensearchVersionsCollection> opensearchVersionsCollections() {
        return this.opensearchVersionsCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpensearchVersionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetOpensearchVersionsFilter> filters;
        private String id;
        private List<GetOpensearchVersionsOpensearchVersionsCollection> opensearchVersionsCollections;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOpensearchVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.opensearchVersionsCollections = defaults.opensearchVersionsCollections;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetOpensearchVersionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetOpensearchVersionsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder opensearchVersionsCollections(List<GetOpensearchVersionsOpensearchVersionsCollection> opensearchVersionsCollections) {
            this.opensearchVersionsCollections = Objects.requireNonNull(opensearchVersionsCollections);
            return this;
        }
        public Builder opensearchVersionsCollections(GetOpensearchVersionsOpensearchVersionsCollection... opensearchVersionsCollections) {
            return opensearchVersionsCollections(List.of(opensearchVersionsCollections));
        }        public GetOpensearchVersionsResult build() {
            return new GetOpensearchVersionsResult(compartmentId, filters, id, opensearchVersionsCollections);
        }
    }
}
