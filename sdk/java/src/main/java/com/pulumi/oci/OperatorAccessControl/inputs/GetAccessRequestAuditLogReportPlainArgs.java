// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OperatorAccessControl.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAccessRequestAuditLogReportPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAccessRequestAuditLogReportPlainArgs Empty = new GetAccessRequestAuditLogReportPlainArgs();

    /**
     * unique AccessRequest identifier
     * 
     */
    @Import(name="accessRequestId", required=true)
    private String accessRequestId;

    /**
     * @return unique AccessRequest identifier
     * 
     */
    public String accessRequestId() {
        return this.accessRequestId;
    }

    /**
     * To enable process tree computation in audit report
     * 
     */
    @Import(name="enableProcessTree")
    private @Nullable Integer enableProcessTree;

    /**
     * @return To enable process tree computation in audit report
     * 
     */
    public Optional<Integer> enableProcessTree() {
        return Optional.ofNullable(this.enableProcessTree);
    }

    private GetAccessRequestAuditLogReportPlainArgs() {}

    private GetAccessRequestAuditLogReportPlainArgs(GetAccessRequestAuditLogReportPlainArgs $) {
        this.accessRequestId = $.accessRequestId;
        this.enableProcessTree = $.enableProcessTree;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccessRequestAuditLogReportPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccessRequestAuditLogReportPlainArgs $;

        public Builder() {
            $ = new GetAccessRequestAuditLogReportPlainArgs();
        }

        public Builder(GetAccessRequestAuditLogReportPlainArgs defaults) {
            $ = new GetAccessRequestAuditLogReportPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessRequestId unique AccessRequest identifier
         * 
         * @return builder
         * 
         */
        public Builder accessRequestId(String accessRequestId) {
            $.accessRequestId = accessRequestId;
            return this;
        }

        /**
         * @param enableProcessTree To enable process tree computation in audit report
         * 
         * @return builder
         * 
         */
        public Builder enableProcessTree(@Nullable Integer enableProcessTree) {
            $.enableProcessTree = enableProcessTree;
            return this;
        }

        public GetAccessRequestAuditLogReportPlainArgs build() {
            if ($.accessRequestId == null) {
                throw new MissingRequiredPropertyException("GetAccessRequestAuditLogReportPlainArgs", "accessRequestId");
            }
            return $;
        }
    }

}
