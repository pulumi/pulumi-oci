// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OperatorAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccessRequestAuditLogReportResult {
    private String accessRequestId;
    /**
     * @return auditReportStatus for the accessRequestId
     * 
     */
    private String auditReportStatus;
    private @Nullable Integer enableProcessTree;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Contains the process tree data
     * 
     */
    private String processTree;
    /**
     * @return Contains the report data.
     * 
     */
    private String report;
    /**
     * @return Time when the audit report was generated [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeOfReportGeneration;

    private GetAccessRequestAuditLogReportResult() {}
    public String accessRequestId() {
        return this.accessRequestId;
    }
    /**
     * @return auditReportStatus for the accessRequestId
     * 
     */
    public String auditReportStatus() {
        return this.auditReportStatus;
    }
    public Optional<Integer> enableProcessTree() {
        return Optional.ofNullable(this.enableProcessTree);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Contains the process tree data
     * 
     */
    public String processTree() {
        return this.processTree;
    }
    /**
     * @return Contains the report data.
     * 
     */
    public String report() {
        return this.report;
    }
    /**
     * @return Time when the audit report was generated [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeOfReportGeneration() {
        return this.timeOfReportGeneration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccessRequestAuditLogReportResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessRequestId;
        private String auditReportStatus;
        private @Nullable Integer enableProcessTree;
        private String id;
        private String processTree;
        private String report;
        private String timeOfReportGeneration;
        public Builder() {}
        public Builder(GetAccessRequestAuditLogReportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessRequestId = defaults.accessRequestId;
    	      this.auditReportStatus = defaults.auditReportStatus;
    	      this.enableProcessTree = defaults.enableProcessTree;
    	      this.id = defaults.id;
    	      this.processTree = defaults.processTree;
    	      this.report = defaults.report;
    	      this.timeOfReportGeneration = defaults.timeOfReportGeneration;
        }

        @CustomType.Setter
        public Builder accessRequestId(String accessRequestId) {
            if (accessRequestId == null) {
              throw new MissingRequiredPropertyException("GetAccessRequestAuditLogReportResult", "accessRequestId");
            }
            this.accessRequestId = accessRequestId;
            return this;
        }
        @CustomType.Setter
        public Builder auditReportStatus(String auditReportStatus) {
            if (auditReportStatus == null) {
              throw new MissingRequiredPropertyException("GetAccessRequestAuditLogReportResult", "auditReportStatus");
            }
            this.auditReportStatus = auditReportStatus;
            return this;
        }
        @CustomType.Setter
        public Builder enableProcessTree(@Nullable Integer enableProcessTree) {

            this.enableProcessTree = enableProcessTree;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccessRequestAuditLogReportResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder processTree(String processTree) {
            if (processTree == null) {
              throw new MissingRequiredPropertyException("GetAccessRequestAuditLogReportResult", "processTree");
            }
            this.processTree = processTree;
            return this;
        }
        @CustomType.Setter
        public Builder report(String report) {
            if (report == null) {
              throw new MissingRequiredPropertyException("GetAccessRequestAuditLogReportResult", "report");
            }
            this.report = report;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfReportGeneration(String timeOfReportGeneration) {
            if (timeOfReportGeneration == null) {
              throw new MissingRequiredPropertyException("GetAccessRequestAuditLogReportResult", "timeOfReportGeneration");
            }
            this.timeOfReportGeneration = timeOfReportGeneration;
            return this;
        }
        public GetAccessRequestAuditLogReportResult build() {
            final var _resultValue = new GetAccessRequestAuditLogReportResult();
            _resultValue.accessRequestId = accessRequestId;
            _resultValue.auditReportStatus = auditReportStatus;
            _resultValue.enableProcessTree = enableProcessTree;
            _resultValue.id = id;
            _resultValue.processTree = processTree;
            _resultValue.report = report;
            _resultValue.timeOfReportGeneration = timeOfReportGeneration;
            return _resultValue;
        }
    }
}
