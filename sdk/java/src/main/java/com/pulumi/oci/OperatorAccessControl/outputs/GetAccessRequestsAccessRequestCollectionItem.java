// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OperatorAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccessRequestsAccessRequestCollectionItem {
    /**
     * @return Summary comment by the operator creating the access request.
     * 
     */
    private @Nullable String accessReasonSummary;
    /**
     * @return List of operator actions for which approval is sought by the operator user.
     * 
     */
    private @Nullable List<String> actionRequestsLists;
    /**
     * @return The last recent Comment entered by the approver of the request.
     * 
     */
    private @Nullable String approverComment;
    /**
     * @return Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level.  By default, auditing is enabled at the command level i.e., each command issued by the operator is audited. When keystroke-level is chosen,  in addition to command level logging, key strokes are also logged.
     * 
     */
    private @Nullable List<String> auditTypes;
    /**
     * @return The comment entered by the operator while closing the request.
     * 
     */
    private @Nullable String closureComment;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Duration in hours for which access is sought on the target resource.
     * 
     */
    private @Nullable Integer duration;
    /**
     * @return Duration in hours for which extension access is sought on the target resource.
     * 
     */
    private @Nullable Integer extendDuration;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the access request.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether the access request was automatically approved.
     * 
     */
    private @Nullable Boolean isAutoApproved;
    /**
     * @return more in detail about the lifeCycleState.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Additional message specific to the access request that can be specified by the approver at the time of approval.
     * 
     */
    private @Nullable String opctlAdditionalMessage;
    /**
     * @return The OCID of the operator control governing the target resource.
     * 
     */
    private @Nullable String opctlId;
    /**
     * @return Name of the Operator control governing the target resource.
     * 
     */
    private @Nullable String opctlName;
    /**
     * @return A unique identifier associated with the operator who raised the request. This identifier can not be used directly to identify the operator. You need to provide this identifier if you would like Oracle to provide additional information about the operator action within Oracle tenancy.
     * 
     */
    private @Nullable String operatorId;
    /**
     * @return Summary reason for which the operator is requesting access on the target resource.
     * 
     */
    private @Nullable String reason;
    /**
     * @return This is an automatic identifier generated by the system which is easier for human comprehension.
     * 
     */
    private @Nullable String requestId;
    /**
     * @return The OCID of the target resource associated with the access request. The operator raises an access request to get approval to  access the target resource.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return A filter to return only resources that match the given ResourceName.
     * 
     */
    private @Nullable String resourceName;
    /**
     * @return A filter to return only lists of resources that match the entire given service type.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return Priority assigned to the access request by the operator
     * 
     */
    private @Nullable String severity;
    /**
     * @return A filter to return only resources whose lifecycleState matches the given AccessRequest lifecycleState.
     * 
     */
    private @Nullable String state;
    /**
     * @return The subresources requested for approval.
     * 
     */
    private @Nullable List<String> subResourceLists;
    /**
     * @return System message that will be displayed to the operator at login to the target resource.
     * 
     */
    private @Nullable String systemMessage;
    /**
     * @return Time when the access request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private @Nullable String timeOfCreation;
    /**
     * @return Time when the access request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private @Nullable String timeOfModification;
    /**
     * @return The time when access request is scheduled to be approved in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private @Nullable String timeOfUserCreation;
    /**
     * @return The OCID of the user that last modified the access request.
     * 
     */
    private @Nullable String userId;
    /**
     * @return The OCID of the workflow associated with the access request. This is needed if you want to contact Oracle Support for a stuck access request or for an access request that encounters an internal error.
     * 
     */
    private @Nullable List<String> workflowIds;

    private GetAccessRequestsAccessRequestCollectionItem() {}
    /**
     * @return Summary comment by the operator creating the access request.
     * 
     */
    public Optional<String> accessReasonSummary() {
        return Optional.ofNullable(this.accessReasonSummary);
    }
    /**
     * @return List of operator actions for which approval is sought by the operator user.
     * 
     */
    public List<String> actionRequestsLists() {
        return this.actionRequestsLists == null ? List.of() : this.actionRequestsLists;
    }
    /**
     * @return The last recent Comment entered by the approver of the request.
     * 
     */
    public Optional<String> approverComment() {
        return Optional.ofNullable(this.approverComment);
    }
    /**
     * @return Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level.  By default, auditing is enabled at the command level i.e., each command issued by the operator is audited. When keystroke-level is chosen,  in addition to command level logging, key strokes are also logged.
     * 
     */
    public List<String> auditTypes() {
        return this.auditTypes == null ? List.of() : this.auditTypes;
    }
    /**
     * @return The comment entered by the operator while closing the request.
     * 
     */
    public Optional<String> closureComment() {
        return Optional.ofNullable(this.closureComment);
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Duration in hours for which access is sought on the target resource.
     * 
     */
    public Optional<Integer> duration() {
        return Optional.ofNullable(this.duration);
    }
    /**
     * @return Duration in hours for which extension access is sought on the target resource.
     * 
     */
    public Optional<Integer> extendDuration() {
        return Optional.ofNullable(this.extendDuration);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the access request.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether the access request was automatically approved.
     * 
     */
    public Optional<Boolean> isAutoApproved() {
        return Optional.ofNullable(this.isAutoApproved);
    }
    /**
     * @return more in detail about the lifeCycleState.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Additional message specific to the access request that can be specified by the approver at the time of approval.
     * 
     */
    public Optional<String> opctlAdditionalMessage() {
        return Optional.ofNullable(this.opctlAdditionalMessage);
    }
    /**
     * @return The OCID of the operator control governing the target resource.
     * 
     */
    public Optional<String> opctlId() {
        return Optional.ofNullable(this.opctlId);
    }
    /**
     * @return Name of the Operator control governing the target resource.
     * 
     */
    public Optional<String> opctlName() {
        return Optional.ofNullable(this.opctlName);
    }
    /**
     * @return A unique identifier associated with the operator who raised the request. This identifier can not be used directly to identify the operator. You need to provide this identifier if you would like Oracle to provide additional information about the operator action within Oracle tenancy.
     * 
     */
    public Optional<String> operatorId() {
        return Optional.ofNullable(this.operatorId);
    }
    /**
     * @return Summary reason for which the operator is requesting access on the target resource.
     * 
     */
    public Optional<String> reason() {
        return Optional.ofNullable(this.reason);
    }
    /**
     * @return This is an automatic identifier generated by the system which is easier for human comprehension.
     * 
     */
    public Optional<String> requestId() {
        return Optional.ofNullable(this.requestId);
    }
    /**
     * @return The OCID of the target resource associated with the access request. The operator raises an access request to get approval to  access the target resource.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return A filter to return only resources that match the given ResourceName.
     * 
     */
    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }
    /**
     * @return A filter to return only lists of resources that match the entire given service type.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return Priority assigned to the access request by the operator
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return A filter to return only resources whose lifecycleState matches the given AccessRequest lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The subresources requested for approval.
     * 
     */
    public List<String> subResourceLists() {
        return this.subResourceLists == null ? List.of() : this.subResourceLists;
    }
    /**
     * @return System message that will be displayed to the operator at login to the target resource.
     * 
     */
    public Optional<String> systemMessage() {
        return Optional.ofNullable(this.systemMessage);
    }
    /**
     * @return Time when the access request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<String> timeOfCreation() {
        return Optional.ofNullable(this.timeOfCreation);
    }
    /**
     * @return Time when the access request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<String> timeOfModification() {
        return Optional.ofNullable(this.timeOfModification);
    }
    /**
     * @return The time when access request is scheduled to be approved in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<String> timeOfUserCreation() {
        return Optional.ofNullable(this.timeOfUserCreation);
    }
    /**
     * @return The OCID of the user that last modified the access request.
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }
    /**
     * @return The OCID of the workflow associated with the access request. This is needed if you want to contact Oracle Support for a stuck access request or for an access request that encounters an internal error.
     * 
     */
    public List<String> workflowIds() {
        return this.workflowIds == null ? List.of() : this.workflowIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccessRequestsAccessRequestCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessReasonSummary;
        private @Nullable List<String> actionRequestsLists;
        private @Nullable String approverComment;
        private @Nullable List<String> auditTypes;
        private @Nullable String closureComment;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable Integer duration;
        private @Nullable Integer extendDuration;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isAutoApproved;
        private @Nullable String lifecycleDetails;
        private @Nullable String opctlAdditionalMessage;
        private @Nullable String opctlId;
        private @Nullable String opctlName;
        private @Nullable String operatorId;
        private @Nullable String reason;
        private @Nullable String requestId;
        private @Nullable String resourceId;
        private @Nullable String resourceName;
        private @Nullable String resourceType;
        private @Nullable String severity;
        private @Nullable String state;
        private @Nullable List<String> subResourceLists;
        private @Nullable String systemMessage;
        private @Nullable String timeOfCreation;
        private @Nullable String timeOfModification;
        private @Nullable String timeOfUserCreation;
        private @Nullable String userId;
        private @Nullable List<String> workflowIds;
        public Builder() {}
        public Builder(GetAccessRequestsAccessRequestCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessReasonSummary = defaults.accessReasonSummary;
    	      this.actionRequestsLists = defaults.actionRequestsLists;
    	      this.approverComment = defaults.approverComment;
    	      this.auditTypes = defaults.auditTypes;
    	      this.closureComment = defaults.closureComment;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.duration = defaults.duration;
    	      this.extendDuration = defaults.extendDuration;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutoApproved = defaults.isAutoApproved;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.opctlAdditionalMessage = defaults.opctlAdditionalMessage;
    	      this.opctlId = defaults.opctlId;
    	      this.opctlName = defaults.opctlName;
    	      this.operatorId = defaults.operatorId;
    	      this.reason = defaults.reason;
    	      this.requestId = defaults.requestId;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.severity = defaults.severity;
    	      this.state = defaults.state;
    	      this.subResourceLists = defaults.subResourceLists;
    	      this.systemMessage = defaults.systemMessage;
    	      this.timeOfCreation = defaults.timeOfCreation;
    	      this.timeOfModification = defaults.timeOfModification;
    	      this.timeOfUserCreation = defaults.timeOfUserCreation;
    	      this.userId = defaults.userId;
    	      this.workflowIds = defaults.workflowIds;
        }

        @CustomType.Setter
        public Builder accessReasonSummary(@Nullable String accessReasonSummary) {
            this.accessReasonSummary = accessReasonSummary;
            return this;
        }
        @CustomType.Setter
        public Builder actionRequestsLists(@Nullable List<String> actionRequestsLists) {
            this.actionRequestsLists = actionRequestsLists;
            return this;
        }
        public Builder actionRequestsLists(String... actionRequestsLists) {
            return actionRequestsLists(List.of(actionRequestsLists));
        }
        @CustomType.Setter
        public Builder approverComment(@Nullable String approverComment) {
            this.approverComment = approverComment;
            return this;
        }
        @CustomType.Setter
        public Builder auditTypes(@Nullable List<String> auditTypes) {
            this.auditTypes = auditTypes;
            return this;
        }
        public Builder auditTypes(String... auditTypes) {
            return auditTypes(List.of(auditTypes));
        }
        @CustomType.Setter
        public Builder closureComment(@Nullable String closureComment) {
            this.closureComment = closureComment;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder duration(@Nullable Integer duration) {
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder extendDuration(@Nullable Integer extendDuration) {
            this.extendDuration = extendDuration;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoApproved(@Nullable Boolean isAutoApproved) {
            this.isAutoApproved = isAutoApproved;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder opctlAdditionalMessage(@Nullable String opctlAdditionalMessage) {
            this.opctlAdditionalMessage = opctlAdditionalMessage;
            return this;
        }
        @CustomType.Setter
        public Builder opctlId(@Nullable String opctlId) {
            this.opctlId = opctlId;
            return this;
        }
        @CustomType.Setter
        public Builder opctlName(@Nullable String opctlName) {
            this.opctlName = opctlName;
            return this;
        }
        @CustomType.Setter
        public Builder operatorId(@Nullable String operatorId) {
            this.operatorId = operatorId;
            return this;
        }
        @CustomType.Setter
        public Builder reason(@Nullable String reason) {
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder requestId(@Nullable String requestId) {
            this.requestId = requestId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(@Nullable String resourceName) {
            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subResourceLists(@Nullable List<String> subResourceLists) {
            this.subResourceLists = subResourceLists;
            return this;
        }
        public Builder subResourceLists(String... subResourceLists) {
            return subResourceLists(List.of(subResourceLists));
        }
        @CustomType.Setter
        public Builder systemMessage(@Nullable String systemMessage) {
            this.systemMessage = systemMessage;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfCreation(@Nullable String timeOfCreation) {
            this.timeOfCreation = timeOfCreation;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfModification(@Nullable String timeOfModification) {
            this.timeOfModification = timeOfModification;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfUserCreation(@Nullable String timeOfUserCreation) {
            this.timeOfUserCreation = timeOfUserCreation;
            return this;
        }
        @CustomType.Setter
        public Builder userId(@Nullable String userId) {
            this.userId = userId;
            return this;
        }
        @CustomType.Setter
        public Builder workflowIds(@Nullable List<String> workflowIds) {
            this.workflowIds = workflowIds;
            return this;
        }
        public Builder workflowIds(String... workflowIds) {
            return workflowIds(List.of(workflowIds));
        }
        public GetAccessRequestsAccessRequestCollectionItem build() {
            final var o = new GetAccessRequestsAccessRequestCollectionItem();
            o.accessReasonSummary = accessReasonSummary;
            o.actionRequestsLists = actionRequestsLists;
            o.approverComment = approverComment;
            o.auditTypes = auditTypes;
            o.closureComment = closureComment;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.duration = duration;
            o.extendDuration = extendDuration;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isAutoApproved = isAutoApproved;
            o.lifecycleDetails = lifecycleDetails;
            o.opctlAdditionalMessage = opctlAdditionalMessage;
            o.opctlId = opctlId;
            o.opctlName = opctlName;
            o.operatorId = operatorId;
            o.reason = reason;
            o.requestId = requestId;
            o.resourceId = resourceId;
            o.resourceName = resourceName;
            o.resourceType = resourceType;
            o.severity = severity;
            o.state = state;
            o.subResourceLists = subResourceLists;
            o.systemMessage = systemMessage;
            o.timeOfCreation = timeOfCreation;
            o.timeOfModification = timeOfModification;
            o.timeOfUserCreation = timeOfUserCreation;
            o.userId = userId;
            o.workflowIds = workflowIds;
            return o;
        }
    }
}
