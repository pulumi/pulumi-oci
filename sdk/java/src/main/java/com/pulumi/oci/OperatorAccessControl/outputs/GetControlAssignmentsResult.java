// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OperatorAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OperatorAccessControl.outputs.GetControlAssignmentsFilter;
import com.pulumi.oci.OperatorAccessControl.outputs.GetControlAssignmentsOperatorControlAssignmentCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetControlAssignmentsResult {
    /**
     * @return The OCID of the comparment that contains the operator control assignment.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetControlAssignmentsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of operator_control_assignment_collection.
     * 
     */
    private List<GetControlAssignmentsOperatorControlAssignmentCollection> operatorControlAssignmentCollections;
    private @Nullable String operatorControlName;
    /**
     * @return Name of the target resource.
     * 
     */
    private @Nullable String resourceName;
    /**
     * @return resourceType for which the OperatorControlAssignment is applicable
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The current lifcycle state of the OperatorControl.
     * 
     */
    private @Nullable String state;

    private GetControlAssignmentsResult() {}
    /**
     * @return The OCID of the comparment that contains the operator control assignment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetControlAssignmentsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of operator_control_assignment_collection.
     * 
     */
    public List<GetControlAssignmentsOperatorControlAssignmentCollection> operatorControlAssignmentCollections() {
        return this.operatorControlAssignmentCollections;
    }
    public Optional<String> operatorControlName() {
        return Optional.ofNullable(this.operatorControlName);
    }
    /**
     * @return Name of the target resource.
     * 
     */
    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }
    /**
     * @return resourceType for which the OperatorControlAssignment is applicable
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The current lifcycle state of the OperatorControl.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlAssignmentsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetControlAssignmentsFilter> filters;
        private String id;
        private List<GetControlAssignmentsOperatorControlAssignmentCollection> operatorControlAssignmentCollections;
        private @Nullable String operatorControlName;
        private @Nullable String resourceName;
        private @Nullable String resourceType;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetControlAssignmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.operatorControlAssignmentCollections = defaults.operatorControlAssignmentCollections;
    	      this.operatorControlName = defaults.operatorControlName;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetControlAssignmentsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetControlAssignmentsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder operatorControlAssignmentCollections(List<GetControlAssignmentsOperatorControlAssignmentCollection> operatorControlAssignmentCollections) {
            this.operatorControlAssignmentCollections = Objects.requireNonNull(operatorControlAssignmentCollections);
            return this;
        }
        public Builder operatorControlAssignmentCollections(GetControlAssignmentsOperatorControlAssignmentCollection... operatorControlAssignmentCollections) {
            return operatorControlAssignmentCollections(List.of(operatorControlAssignmentCollections));
        }
        @CustomType.Setter
        public Builder operatorControlName(@Nullable String operatorControlName) {
            this.operatorControlName = operatorControlName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(@Nullable String resourceName) {
            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetControlAssignmentsResult build() {
            final var o = new GetControlAssignmentsResult();
            o.compartmentId = compartmentId;
            o.filters = filters;
            o.id = id;
            o.operatorControlAssignmentCollections = operatorControlAssignmentCollections;
            o.operatorControlName = operatorControlName;
            o.resourceName = resourceName;
            o.resourceType = resourceType;
            o.state = state;
            return o;
        }
    }
}
