// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OperatorAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetControlResult {
    /**
     * @return List of operator actions that need explicit approval. Any operator action not in the pre-approved list will require explicit approval. Access requests associated with a resource governed by this operator control will be require explicit approval if the access request contains any operator action in this list.
     * 
     */
    private @Nullable List<String> approvalRequiredOpActionLists;
    /**
     * @return List of user groups who can approve an access request associated with a target resource under the governance of this operator control.
     * 
     */
    private @Nullable List<String> approverGroupsLists;
    /**
     * @return List of users who can approve an access request associated with a target resource under the governance of this operator control.
     * 
     */
    private @Nullable List<String> approversLists;
    /**
     * @return The OCID of the compartment that contains the operator control.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Description of operator control.
     * 
     */
    private @Nullable String description;
    /**
     * @return List of emailId.
     * 
     */
    private @Nullable List<String> emailIdLists;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the operator control.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether the operator control is a default Operator Control.
     * 
     */
    private @Nullable Boolean isDefaultOperatorControl;
    /**
     * @return Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
     * 
     */
    private @Nullable Boolean isFullyPreApproved;
    /**
     * @return Description associated with the latest modification of the operator control.
     * 
     */
    private @Nullable String lastModifiedInfo;
    private String operatorControlId;
    /**
     * @return Name of the operator control. The name must be unique.
     * 
     */
    private @Nullable String operatorControlName;
    /**
     * @return List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be automatically approved if the access request only contain operator actions in the pre-approved list.
     * 
     */
    private @Nullable List<String> preApprovedOpActionLists;
    /**
     * @return resourceType for which the OperatorControl is applicable
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The current lifecycle state of the operator control.
     * 
     */
    private @Nullable String state;
    /**
     * @return System message that would be displayed to the operator users on accessing the target resource under the governance of this operator control.
     * 
     */
    private @Nullable String systemMessage;
    /**
     * @return Time when the operator control was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private @Nullable String timeOfCreation;
    /**
     * @return Time when deleted expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;. Note a deleted operator control still stays in the system, so that you can still audit operator actions associated with access requests raised on target resources governed by the deleted operator control.
     * 
     */
    private @Nullable String timeOfDeletion;
    /**
     * @return Time when the operator control was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private @Nullable String timeOfModification;

    private GetControlResult() {}
    /**
     * @return List of operator actions that need explicit approval. Any operator action not in the pre-approved list will require explicit approval. Access requests associated with a resource governed by this operator control will be require explicit approval if the access request contains any operator action in this list.
     * 
     */
    public List<String> approvalRequiredOpActionLists() {
        return this.approvalRequiredOpActionLists == null ? List.of() : this.approvalRequiredOpActionLists;
    }
    /**
     * @return List of user groups who can approve an access request associated with a target resource under the governance of this operator control.
     * 
     */
    public List<String> approverGroupsLists() {
        return this.approverGroupsLists == null ? List.of() : this.approverGroupsLists;
    }
    /**
     * @return List of users who can approve an access request associated with a target resource under the governance of this operator control.
     * 
     */
    public List<String> approversLists() {
        return this.approversLists == null ? List.of() : this.approversLists;
    }
    /**
     * @return The OCID of the compartment that contains the operator control.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Description of operator control.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return List of emailId.
     * 
     */
    public List<String> emailIdLists() {
        return this.emailIdLists == null ? List.of() : this.emailIdLists;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the operator control.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether the operator control is a default Operator Control.
     * 
     */
    public Optional<Boolean> isDefaultOperatorControl() {
        return Optional.ofNullable(this.isDefaultOperatorControl);
    }
    /**
     * @return Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
     * 
     */
    public Optional<Boolean> isFullyPreApproved() {
        return Optional.ofNullable(this.isFullyPreApproved);
    }
    /**
     * @return Description associated with the latest modification of the operator control.
     * 
     */
    public Optional<String> lastModifiedInfo() {
        return Optional.ofNullable(this.lastModifiedInfo);
    }
    public String operatorControlId() {
        return this.operatorControlId;
    }
    /**
     * @return Name of the operator control. The name must be unique.
     * 
     */
    public Optional<String> operatorControlName() {
        return Optional.ofNullable(this.operatorControlName);
    }
    /**
     * @return List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be automatically approved if the access request only contain operator actions in the pre-approved list.
     * 
     */
    public List<String> preApprovedOpActionLists() {
        return this.preApprovedOpActionLists == null ? List.of() : this.preApprovedOpActionLists;
    }
    /**
     * @return resourceType for which the OperatorControl is applicable
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The current lifecycle state of the operator control.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return System message that would be displayed to the operator users on accessing the target resource under the governance of this operator control.
     * 
     */
    public Optional<String> systemMessage() {
        return Optional.ofNullable(this.systemMessage);
    }
    /**
     * @return Time when the operator control was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<String> timeOfCreation() {
        return Optional.ofNullable(this.timeOfCreation);
    }
    /**
     * @return Time when deleted expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;. Note a deleted operator control still stays in the system, so that you can still audit operator actions associated with access requests raised on target resources governed by the deleted operator control.
     * 
     */
    public Optional<String> timeOfDeletion() {
        return Optional.ofNullable(this.timeOfDeletion);
    }
    /**
     * @return Time when the operator control was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<String> timeOfModification() {
        return Optional.ofNullable(this.timeOfModification);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> approvalRequiredOpActionLists;
        private @Nullable List<String> approverGroupsLists;
        private @Nullable List<String> approversLists;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable List<String> emailIdLists;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isDefaultOperatorControl;
        private @Nullable Boolean isFullyPreApproved;
        private @Nullable String lastModifiedInfo;
        private String operatorControlId;
        private @Nullable String operatorControlName;
        private @Nullable List<String> preApprovedOpActionLists;
        private @Nullable String resourceType;
        private @Nullable String state;
        private @Nullable String systemMessage;
        private @Nullable String timeOfCreation;
        private @Nullable String timeOfDeletion;
        private @Nullable String timeOfModification;
        public Builder() {}
        public Builder(GetControlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approvalRequiredOpActionLists = defaults.approvalRequiredOpActionLists;
    	      this.approverGroupsLists = defaults.approverGroupsLists;
    	      this.approversLists = defaults.approversLists;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.emailIdLists = defaults.emailIdLists;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isDefaultOperatorControl = defaults.isDefaultOperatorControl;
    	      this.isFullyPreApproved = defaults.isFullyPreApproved;
    	      this.lastModifiedInfo = defaults.lastModifiedInfo;
    	      this.operatorControlId = defaults.operatorControlId;
    	      this.operatorControlName = defaults.operatorControlName;
    	      this.preApprovedOpActionLists = defaults.preApprovedOpActionLists;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.systemMessage = defaults.systemMessage;
    	      this.timeOfCreation = defaults.timeOfCreation;
    	      this.timeOfDeletion = defaults.timeOfDeletion;
    	      this.timeOfModification = defaults.timeOfModification;
        }

        @CustomType.Setter
        public Builder approvalRequiredOpActionLists(@Nullable List<String> approvalRequiredOpActionLists) {
            this.approvalRequiredOpActionLists = approvalRequiredOpActionLists;
            return this;
        }
        public Builder approvalRequiredOpActionLists(String... approvalRequiredOpActionLists) {
            return approvalRequiredOpActionLists(List.of(approvalRequiredOpActionLists));
        }
        @CustomType.Setter
        public Builder approverGroupsLists(@Nullable List<String> approverGroupsLists) {
            this.approverGroupsLists = approverGroupsLists;
            return this;
        }
        public Builder approverGroupsLists(String... approverGroupsLists) {
            return approverGroupsLists(List.of(approverGroupsLists));
        }
        @CustomType.Setter
        public Builder approversLists(@Nullable List<String> approversLists) {
            this.approversLists = approversLists;
            return this;
        }
        public Builder approversLists(String... approversLists) {
            return approversLists(List.of(approversLists));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder emailIdLists(@Nullable List<String> emailIdLists) {
            this.emailIdLists = emailIdLists;
            return this;
        }
        public Builder emailIdLists(String... emailIdLists) {
            return emailIdLists(List.of(emailIdLists));
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDefaultOperatorControl(@Nullable Boolean isDefaultOperatorControl) {
            this.isDefaultOperatorControl = isDefaultOperatorControl;
            return this;
        }
        @CustomType.Setter
        public Builder isFullyPreApproved(@Nullable Boolean isFullyPreApproved) {
            this.isFullyPreApproved = isFullyPreApproved;
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedInfo(@Nullable String lastModifiedInfo) {
            this.lastModifiedInfo = lastModifiedInfo;
            return this;
        }
        @CustomType.Setter
        public Builder operatorControlId(String operatorControlId) {
            this.operatorControlId = Objects.requireNonNull(operatorControlId);
            return this;
        }
        @CustomType.Setter
        public Builder operatorControlName(@Nullable String operatorControlName) {
            this.operatorControlName = operatorControlName;
            return this;
        }
        @CustomType.Setter
        public Builder preApprovedOpActionLists(@Nullable List<String> preApprovedOpActionLists) {
            this.preApprovedOpActionLists = preApprovedOpActionLists;
            return this;
        }
        public Builder preApprovedOpActionLists(String... preApprovedOpActionLists) {
            return preApprovedOpActionLists(List.of(preApprovedOpActionLists));
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemMessage(@Nullable String systemMessage) {
            this.systemMessage = systemMessage;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfCreation(@Nullable String timeOfCreation) {
            this.timeOfCreation = timeOfCreation;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfDeletion(@Nullable String timeOfDeletion) {
            this.timeOfDeletion = timeOfDeletion;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfModification(@Nullable String timeOfModification) {
            this.timeOfModification = timeOfModification;
            return this;
        }
        public GetControlResult build() {
            final var o = new GetControlResult();
            o.approvalRequiredOpActionLists = approvalRequiredOpActionLists;
            o.approverGroupsLists = approverGroupsLists;
            o.approversLists = approversLists;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.emailIdLists = emailIdLists;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isDefaultOperatorControl = isDefaultOperatorControl;
            o.isFullyPreApproved = isFullyPreApproved;
            o.lastModifiedInfo = lastModifiedInfo;
            o.operatorControlId = operatorControlId;
            o.operatorControlName = operatorControlName;
            o.preApprovedOpActionLists = preApprovedOpActionLists;
            o.resourceType = resourceType;
            o.state = state;
            o.systemMessage = systemMessage;
            o.timeOfCreation = timeOfCreation;
            o.timeOfDeletion = timeOfDeletion;
            o.timeOfModification = timeOfModification;
            return o;
        }
    }
}
