// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Opsi.inputs.OpsiConfigurationConfigItemArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpsiConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpsiConfigurationArgs Empty = new OpsiConfigurationArgs();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Specifies whether only customized configuration items or only non-customized configuration items or both have to be returned. By default only customized configuration items are returned.
     * 
     */
    @Import(name="configItemCustomStatuses")
    private @Nullable Output<List<String>> configItemCustomStatuses;

    /**
     * @return Specifies whether only customized configuration items or only non-customized configuration items or both have to be returned. By default only customized configuration items are returned.
     * 
     */
    public Optional<Output<List<String>>> configItemCustomStatuses() {
        return Optional.ofNullable(this.configItemCustomStatuses);
    }

    /**
     * Specifies the fields to return in a config item summary.
     * 
     */
    @Import(name="configItemFields")
    private @Nullable Output<List<String>> configItemFields;

    /**
     * @return Specifies the fields to return in a config item summary.
     * 
     */
    public Optional<Output<List<String>>> configItemFields() {
        return Optional.ofNullable(this.configItemFields);
    }

    /**
     * (Updatable) Array of configuration items with custom values. All and only configuration items requiring custom values should be part of this array.
     * 
     */
    @Import(name="configItems")
    private @Nullable Output<List<OpsiConfigurationConfigItemArgs>> configItems;

    /**
     * @return (Updatable) Array of configuration items with custom values. All and only configuration items requiring custom values should be part of this array.
     * 
     */
    public Optional<Output<List<OpsiConfigurationConfigItemArgs>>> configItems() {
        return Optional.ofNullable(this.configItems);
    }

    /**
     * Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
     * 
     */
    @Import(name="configItemsApplicableContexts")
    private @Nullable Output<List<String>> configItemsApplicableContexts;

    /**
     * @return Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
     * 
     */
    public Optional<Output<List<String>>> configItemsApplicableContexts() {
        return Optional.ofNullable(this.configItemsApplicableContexts);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Description of OPSI configuration.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of OPSI configuration.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) User-friendly display name for the OPSI configuration. The name does not have to be unique.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) User-friendly display name for the OPSI configuration. The name does not have to be unique.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Optional fields to return as part of OpsiConfiguration object. Unless requested, these fields will not be returned by default.
     * 
     */
    @Import(name="opsiConfigFields")
    private @Nullable Output<List<String>> opsiConfigFields;

    /**
     * @return Optional fields to return as part of OpsiConfiguration object. Unless requested, these fields will not be returned by default.
     * 
     */
    public Optional<Output<List<String>>> opsiConfigFields() {
        return Optional.ofNullable(this.opsiConfigFields);
    }

    /**
     * (Updatable) OPSI configuration type.
     * 
     */
    @Import(name="opsiConfigType", required=true)
    private Output<String> opsiConfigType;

    /**
     * @return (Updatable) OPSI configuration type.
     * 
     */
    public Output<String> opsiConfigType() {
        return this.opsiConfigType;
    }

    /**
     * (Updatable) System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return (Updatable) System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    private OpsiConfigurationArgs() {}

    private OpsiConfigurationArgs(OpsiConfigurationArgs $) {
        this.compartmentId = $.compartmentId;
        this.configItemCustomStatuses = $.configItemCustomStatuses;
        this.configItemFields = $.configItemFields;
        this.configItems = $.configItems;
        this.configItemsApplicableContexts = $.configItemsApplicableContexts;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.opsiConfigFields = $.opsiConfigFields;
        this.opsiConfigType = $.opsiConfigType;
        this.systemTags = $.systemTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpsiConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpsiConfigurationArgs $;

        public Builder() {
            $ = new OpsiConfigurationArgs();
        }

        public Builder(OpsiConfigurationArgs defaults) {
            $ = new OpsiConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param configItemCustomStatuses Specifies whether only customized configuration items or only non-customized configuration items or both have to be returned. By default only customized configuration items are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemCustomStatuses(@Nullable Output<List<String>> configItemCustomStatuses) {
            $.configItemCustomStatuses = configItemCustomStatuses;
            return this;
        }

        /**
         * @param configItemCustomStatuses Specifies whether only customized configuration items or only non-customized configuration items or both have to be returned. By default only customized configuration items are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemCustomStatuses(List<String> configItemCustomStatuses) {
            return configItemCustomStatuses(Output.of(configItemCustomStatuses));
        }

        /**
         * @param configItemCustomStatuses Specifies whether only customized configuration items or only non-customized configuration items or both have to be returned. By default only customized configuration items are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemCustomStatuses(String... configItemCustomStatuses) {
            return configItemCustomStatuses(List.of(configItemCustomStatuses));
        }

        /**
         * @param configItemFields Specifies the fields to return in a config item summary.
         * 
         * @return builder
         * 
         */
        public Builder configItemFields(@Nullable Output<List<String>> configItemFields) {
            $.configItemFields = configItemFields;
            return this;
        }

        /**
         * @param configItemFields Specifies the fields to return in a config item summary.
         * 
         * @return builder
         * 
         */
        public Builder configItemFields(List<String> configItemFields) {
            return configItemFields(Output.of(configItemFields));
        }

        /**
         * @param configItemFields Specifies the fields to return in a config item summary.
         * 
         * @return builder
         * 
         */
        public Builder configItemFields(String... configItemFields) {
            return configItemFields(List.of(configItemFields));
        }

        /**
         * @param configItems (Updatable) Array of configuration items with custom values. All and only configuration items requiring custom values should be part of this array.
         * 
         * @return builder
         * 
         */
        public Builder configItems(@Nullable Output<List<OpsiConfigurationConfigItemArgs>> configItems) {
            $.configItems = configItems;
            return this;
        }

        /**
         * @param configItems (Updatable) Array of configuration items with custom values. All and only configuration items requiring custom values should be part of this array.
         * 
         * @return builder
         * 
         */
        public Builder configItems(List<OpsiConfigurationConfigItemArgs> configItems) {
            return configItems(Output.of(configItems));
        }

        /**
         * @param configItems (Updatable) Array of configuration items with custom values. All and only configuration items requiring custom values should be part of this array.
         * 
         * @return builder
         * 
         */
        public Builder configItems(OpsiConfigurationConfigItemArgs... configItems) {
            return configItems(List.of(configItems));
        }

        /**
         * @param configItemsApplicableContexts Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemsApplicableContexts(@Nullable Output<List<String>> configItemsApplicableContexts) {
            $.configItemsApplicableContexts = configItemsApplicableContexts;
            return this;
        }

        /**
         * @param configItemsApplicableContexts Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemsApplicableContexts(List<String> configItemsApplicableContexts) {
            return configItemsApplicableContexts(Output.of(configItemsApplicableContexts));
        }

        /**
         * @param configItemsApplicableContexts Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemsApplicableContexts(String... configItemsApplicableContexts) {
            return configItemsApplicableContexts(List.of(configItemsApplicableContexts));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Description of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) User-friendly display name for the OPSI configuration. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) User-friendly display name for the OPSI configuration. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param opsiConfigFields Optional fields to return as part of OpsiConfiguration object. Unless requested, these fields will not be returned by default.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigFields(@Nullable Output<List<String>> opsiConfigFields) {
            $.opsiConfigFields = opsiConfigFields;
            return this;
        }

        /**
         * @param opsiConfigFields Optional fields to return as part of OpsiConfiguration object. Unless requested, these fields will not be returned by default.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigFields(List<String> opsiConfigFields) {
            return opsiConfigFields(Output.of(opsiConfigFields));
        }

        /**
         * @param opsiConfigFields Optional fields to return as part of OpsiConfiguration object. Unless requested, these fields will not be returned by default.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigFields(String... opsiConfigFields) {
            return opsiConfigFields(List.of(opsiConfigFields));
        }

        /**
         * @param opsiConfigType (Updatable) OPSI configuration type.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigType(Output<String> opsiConfigType) {
            $.opsiConfigType = opsiConfigType;
            return this;
        }

        /**
         * @param opsiConfigType (Updatable) OPSI configuration type.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigType(String opsiConfigType) {
            return opsiConfigType(Output.of(opsiConfigType));
        }

        /**
         * @param systemTags (Updatable) System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags (Updatable) System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        public OpsiConfigurationArgs build() {
            if ($.opsiConfigType == null) {
                throw new MissingRequiredPropertyException("OpsiConfigurationArgs", "opsiConfigType");
            }
            return $;
        }
    }

}
