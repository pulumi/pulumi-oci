// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs Empty = new ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs();

    @Import(name="credentialSourceName")
    private @Nullable Output<String> credentialSourceName;

    public Optional<Output<String>> credentialSourceName() {
        return Optional.ofNullable(this.credentialSourceName);
    }

    @Import(name="credentialType", required=true)
    private Output<String> credentialType;

    public Output<String> credentialType() {
        return this.credentialType;
    }

    @Import(name="passwordSecretId")
    private @Nullable Output<String> passwordSecretId;

    public Optional<Output<String>> passwordSecretId() {
        return Optional.ofNullable(this.passwordSecretId);
    }

    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    @Import(name="userName")
    private @Nullable Output<String> userName;

    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs() {}

    private ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs(ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs $) {
        this.credentialSourceName = $.credentialSourceName;
        this.credentialType = $.credentialType;
        this.passwordSecretId = $.passwordSecretId;
        this.role = $.role;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs $;

        public Builder() {
            $ = new ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs();
        }

        public Builder(ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs defaults) {
            $ = new ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs(Objects.requireNonNull(defaults));
        }

        public Builder credentialSourceName(@Nullable Output<String> credentialSourceName) {
            $.credentialSourceName = credentialSourceName;
            return this;
        }

        public Builder credentialSourceName(String credentialSourceName) {
            return credentialSourceName(Output.of(credentialSourceName));
        }

        public Builder credentialType(Output<String> credentialType) {
            $.credentialType = credentialType;
            return this;
        }

        public Builder credentialType(String credentialType) {
            return credentialType(Output.of(credentialType));
        }

        public Builder passwordSecretId(@Nullable Output<String> passwordSecretId) {
            $.passwordSecretId = passwordSecretId;
            return this;
        }

        public Builder passwordSecretId(String passwordSecretId) {
            return passwordSecretId(Output.of(passwordSecretId));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public ExadataInsightMemberVmClusterDetailMemberDatabaseDetailCredentialDetailsArgs build() {
            $.credentialType = Objects.requireNonNull($.credentialType, "expected parameter 'credentialType' to be non-null");
            return $;
        }
    }

}
