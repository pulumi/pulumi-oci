// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Opsi.inputs.GetAwrHubSourcesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAwrHubSourcesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAwrHubSourcesPlainArgs Empty = new GetAwrHubSourcesPlainArgs();

    /**
     * Unique Awr Hub identifier
     * 
     */
    @Import(name="awrHubId", required=true)
    private String awrHubId;

    /**
     * @return Unique Awr Hub identifier
     * 
     */
    public String awrHubId() {
        return this.awrHubId;
    }

    /**
     * Awr Hub source identifier
     * 
     */
    @Import(name="awrHubSourceId")
    private @Nullable String awrHubSourceId;

    /**
     * @return Awr Hub source identifier
     * 
     */
    public Optional<String> awrHubSourceId() {
        return Optional.ofNullable(this.awrHubSourceId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable List<GetAwrHubSourcesFilter> filters;

    public Optional<List<GetAwrHubSourcesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Awr Hub source database name
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Awr Hub source database name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
     * 
     */
    @Import(name="sourceTypes")
    private @Nullable List<String> sourceTypes;

    /**
     * @return Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
     * 
     */
    public Optional<List<String>> sourceTypes() {
        return Optional.ofNullable(this.sourceTypes);
    }

    /**
     * Lifecycle states
     * 
     */
    @Import(name="states")
    private @Nullable List<String> states;

    /**
     * @return Lifecycle states
     * 
     */
    public Optional<List<String>> states() {
        return Optional.ofNullable(this.states);
    }

    /**
     * Resource Status
     * 
     */
    @Import(name="statuses")
    private @Nullable List<String> statuses;

    /**
     * @return Resource Status
     * 
     */
    public Optional<List<String>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    private GetAwrHubSourcesPlainArgs() {}

    private GetAwrHubSourcesPlainArgs(GetAwrHubSourcesPlainArgs $) {
        this.awrHubId = $.awrHubId;
        this.awrHubSourceId = $.awrHubSourceId;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
        this.sourceTypes = $.sourceTypes;
        this.states = $.states;
        this.statuses = $.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAwrHubSourcesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAwrHubSourcesPlainArgs $;

        public Builder() {
            $ = new GetAwrHubSourcesPlainArgs();
        }

        public Builder(GetAwrHubSourcesPlainArgs defaults) {
            $ = new GetAwrHubSourcesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param awrHubId Unique Awr Hub identifier
         * 
         * @return builder
         * 
         */
        public Builder awrHubId(String awrHubId) {
            $.awrHubId = awrHubId;
            return this;
        }

        /**
         * @param awrHubSourceId Awr Hub source identifier
         * 
         * @return builder
         * 
         */
        public Builder awrHubSourceId(@Nullable String awrHubSourceId) {
            $.awrHubSourceId = awrHubSourceId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetAwrHubSourcesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAwrHubSourcesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name Awr Hub source database name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param sourceTypes Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
         * 
         * @return builder
         * 
         */
        public Builder sourceTypes(@Nullable List<String> sourceTypes) {
            $.sourceTypes = sourceTypes;
            return this;
        }

        /**
         * @param sourceTypes Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
         * 
         * @return builder
         * 
         */
        public Builder sourceTypes(String... sourceTypes) {
            return sourceTypes(List.of(sourceTypes));
        }

        /**
         * @param states Lifecycle states
         * 
         * @return builder
         * 
         */
        public Builder states(@Nullable List<String> states) {
            $.states = states;
            return this;
        }

        /**
         * @param states Lifecycle states
         * 
         * @return builder
         * 
         */
        public Builder states(String... states) {
            return states(List.of(states));
        }

        /**
         * @param statuses Resource Status
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable List<String> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses Resource Status
         * 
         * @return builder
         * 
         */
        public Builder statuses(String... statuses) {
            return statuses(List.of(statuses));
        }

        public GetAwrHubSourcesPlainArgs build() {
            if ($.awrHubId == null) {
                throw new MissingRequiredPropertyException("GetAwrHubSourcesPlainArgs", "awrHubId");
            }
            return $;
        }
    }

}
