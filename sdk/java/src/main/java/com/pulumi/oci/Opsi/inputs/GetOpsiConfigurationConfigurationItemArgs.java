// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOpsiConfigurationConfigurationItemArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOpsiConfigurationConfigurationItemArgs Empty = new GetOpsiConfigurationConfigurationItemArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Specifies the fields to return in a config item summary.
     * 
     */
    @Import(name="configItemFields")
    private @Nullable Output<List<String>> configItemFields;

    /**
     * @return Specifies the fields to return in a config item summary.
     * 
     */
    public Optional<Output<List<String>>> configItemFields() {
        return Optional.ofNullable(this.configItemFields);
    }

    /**
     * Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
     * 
     */
    @Import(name="configItemsApplicableContexts")
    private @Nullable Output<List<String>> configItemsApplicableContexts;

    /**
     * @return Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
     * 
     */
    public Optional<Output<List<String>>> configItemsApplicableContexts() {
        return Optional.ofNullable(this.configItemsApplicableContexts);
    }

    /**
     * A filter to return only configuration items that match the entire name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A filter to return only configuration items that match the entire name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Filter to return configuration items based on configuration type of OPSI configuration.
     * 
     */
    @Import(name="opsiConfigType", required=true)
    private Output<String> opsiConfigType;

    /**
     * @return Filter to return configuration items based on configuration type of OPSI configuration.
     * 
     */
    public Output<String> opsiConfigType() {
        return this.opsiConfigType;
    }

    private GetOpsiConfigurationConfigurationItemArgs() {}

    private GetOpsiConfigurationConfigurationItemArgs(GetOpsiConfigurationConfigurationItemArgs $) {
        this.compartmentId = $.compartmentId;
        this.configItemFields = $.configItemFields;
        this.configItemsApplicableContexts = $.configItemsApplicableContexts;
        this.name = $.name;
        this.opsiConfigType = $.opsiConfigType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOpsiConfigurationConfigurationItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOpsiConfigurationConfigurationItemArgs $;

        public Builder() {
            $ = new GetOpsiConfigurationConfigurationItemArgs();
        }

        public Builder(GetOpsiConfigurationConfigurationItemArgs defaults) {
            $ = new GetOpsiConfigurationConfigurationItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param configItemFields Specifies the fields to return in a config item summary.
         * 
         * @return builder
         * 
         */
        public Builder configItemFields(@Nullable Output<List<String>> configItemFields) {
            $.configItemFields = configItemFields;
            return this;
        }

        /**
         * @param configItemFields Specifies the fields to return in a config item summary.
         * 
         * @return builder
         * 
         */
        public Builder configItemFields(List<String> configItemFields) {
            return configItemFields(Output.of(configItemFields));
        }

        /**
         * @param configItemFields Specifies the fields to return in a config item summary.
         * 
         * @return builder
         * 
         */
        public Builder configItemFields(String... configItemFields) {
            return configItemFields(List.of(configItemFields));
        }

        /**
         * @param configItemsApplicableContexts Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemsApplicableContexts(@Nullable Output<List<String>> configItemsApplicableContexts) {
            $.configItemsApplicableContexts = configItemsApplicableContexts;
            return this;
        }

        /**
         * @param configItemsApplicableContexts Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemsApplicableContexts(List<String> configItemsApplicableContexts) {
            return configItemsApplicableContexts(Output.of(configItemsApplicableContexts));
        }

        /**
         * @param configItemsApplicableContexts Returns the configuration items filtered by applicable contexts sent in this param. By default configuration items of all applicable contexts are returned.
         * 
         * @return builder
         * 
         */
        public Builder configItemsApplicableContexts(String... configItemsApplicableContexts) {
            return configItemsApplicableContexts(List.of(configItemsApplicableContexts));
        }

        /**
         * @param name A filter to return only configuration items that match the entire name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter to return only configuration items that match the entire name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param opsiConfigType Filter to return configuration items based on configuration type of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigType(Output<String> opsiConfigType) {
            $.opsiConfigType = opsiConfigType;
            return this;
        }

        /**
         * @param opsiConfigType Filter to return configuration items based on configuration type of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigType(String opsiConfigType) {
            return opsiConfigType(Output.of(opsiConfigType));
        }

        public GetOpsiConfigurationConfigurationItemArgs build() {
            if ($.opsiConfigType == null) {
                throw new MissingRequiredPropertyException("GetOpsiConfigurationConfigurationItemArgs", "opsiConfigType");
            }
            return $;
        }
    }

}
