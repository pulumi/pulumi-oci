// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Opsi.inputs.GetOpsiConfigurationsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOpsiConfigurationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOpsiConfigurationsArgs Empty = new GetOpsiConfigurationsArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Filter to return based on resources that match the entire display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Filter to return based on resources that match the entire display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetOpsiConfigurationsFilterArgs>> filters;

    public Optional<Output<List<GetOpsiConfigurationsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Filter to return based on configuration type of OPSI configuration.
     * 
     */
    @Import(name="opsiConfigTypes")
    private @Nullable Output<List<String>> opsiConfigTypes;

    /**
     * @return Filter to return based on configuration type of OPSI configuration.
     * 
     */
    public Optional<Output<List<String>>> opsiConfigTypes() {
        return Optional.ofNullable(this.opsiConfigTypes);
    }

    /**
     * Filter to return based on Lifecycle state of OPSI configuration.
     * 
     */
    @Import(name="states")
    private @Nullable Output<List<String>> states;

    /**
     * @return Filter to return based on Lifecycle state of OPSI configuration.
     * 
     */
    public Optional<Output<List<String>>> states() {
        return Optional.ofNullable(this.states);
    }

    private GetOpsiConfigurationsArgs() {}

    private GetOpsiConfigurationsArgs(GetOpsiConfigurationsArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.opsiConfigTypes = $.opsiConfigTypes;
        this.states = $.states;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOpsiConfigurationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOpsiConfigurationsArgs $;

        public Builder() {
            $ = new GetOpsiConfigurationsArgs();
        }

        public Builder(GetOpsiConfigurationsArgs defaults) {
            $ = new GetOpsiConfigurationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName Filter to return based on resources that match the entire display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Filter to return based on resources that match the entire display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetOpsiConfigurationsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetOpsiConfigurationsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetOpsiConfigurationsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param opsiConfigTypes Filter to return based on configuration type of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigTypes(@Nullable Output<List<String>> opsiConfigTypes) {
            $.opsiConfigTypes = opsiConfigTypes;
            return this;
        }

        /**
         * @param opsiConfigTypes Filter to return based on configuration type of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigTypes(List<String> opsiConfigTypes) {
            return opsiConfigTypes(Output.of(opsiConfigTypes));
        }

        /**
         * @param opsiConfigTypes Filter to return based on configuration type of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder opsiConfigTypes(String... opsiConfigTypes) {
            return opsiConfigTypes(List.of(opsiConfigTypes));
        }

        /**
         * @param states Filter to return based on Lifecycle state of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder states(@Nullable Output<List<String>> states) {
            $.states = states;
            return this;
        }

        /**
         * @param states Filter to return based on Lifecycle state of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder states(List<String> states) {
            return states(Output.of(states));
        }

        /**
         * @param states Filter to return based on Lifecycle state of OPSI configuration.
         * 
         * @return builder
         * 
         */
        public Builder states(String... states) {
            return states(List.of(states));
        }

        public GetOpsiConfigurationsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
