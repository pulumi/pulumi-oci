// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseInsightConnectionCredentialDetails {
    /**
     * @return Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
     * 
     */
    private @Nullable String credentialSourceName;
    /**
     * @return Credential type.
     * 
     */
    private @Nullable String credentialType;
    /**
     * @return The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
     * 
     */
    private @Nullable String passwordSecretId;
    /**
     * @return database user role.
     * 
     */
    private @Nullable String role;
    /**
     * @return database user name.
     * 
     */
    private @Nullable String userName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the database keystore contents are stored.
     * 
     */
    private @Nullable String walletSecretId;

    private DatabaseInsightConnectionCredentialDetails() {}
    /**
     * @return Credential source name that had been added in Management Agent wallet. This is supplied in the External Database Service.
     * 
     */
    public Optional<String> credentialSourceName() {
        return Optional.ofNullable(this.credentialSourceName);
    }
    /**
     * @return Credential type.
     * 
     */
    public Optional<String> credentialType() {
        return Optional.ofNullable(this.credentialType);
    }
    /**
     * @return The secret [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) mapping to the database credentials.
     * 
     */
    public Optional<String> passwordSecretId() {
        return Optional.ofNullable(this.passwordSecretId);
    }
    /**
     * @return database user role.
     * 
     */
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }
    /**
     * @return database user name.
     * 
     */
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the database keystore contents are stored.
     * 
     */
    public Optional<String> walletSecretId() {
        return Optional.ofNullable(this.walletSecretId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInsightConnectionCredentialDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String credentialSourceName;
        private @Nullable String credentialType;
        private @Nullable String passwordSecretId;
        private @Nullable String role;
        private @Nullable String userName;
        private @Nullable String walletSecretId;
        public Builder() {}
        public Builder(DatabaseInsightConnectionCredentialDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialSourceName = defaults.credentialSourceName;
    	      this.credentialType = defaults.credentialType;
    	      this.passwordSecretId = defaults.passwordSecretId;
    	      this.role = defaults.role;
    	      this.userName = defaults.userName;
    	      this.walletSecretId = defaults.walletSecretId;
        }

        @CustomType.Setter
        public Builder credentialSourceName(@Nullable String credentialSourceName) {
            this.credentialSourceName = credentialSourceName;
            return this;
        }
        @CustomType.Setter
        public Builder credentialType(@Nullable String credentialType) {
            this.credentialType = credentialType;
            return this;
        }
        @CustomType.Setter
        public Builder passwordSecretId(@Nullable String passwordSecretId) {
            this.passwordSecretId = passwordSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder role(@Nullable String role) {
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder userName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }
        @CustomType.Setter
        public Builder walletSecretId(@Nullable String walletSecretId) {
            this.walletSecretId = walletSecretId;
            return this;
        }
        public DatabaseInsightConnectionCredentialDetails build() {
            final var _resultValue = new DatabaseInsightConnectionCredentialDetails();
            _resultValue.credentialSourceName = credentialSourceName;
            _resultValue.credentialType = credentialType;
            _resultValue.passwordSecretId = passwordSecretId;
            _resultValue.role = role;
            _resultValue.userName = userName;
            _resultValue.walletSecretId = walletSecretId;
            return _resultValue;
        }
    }
}
