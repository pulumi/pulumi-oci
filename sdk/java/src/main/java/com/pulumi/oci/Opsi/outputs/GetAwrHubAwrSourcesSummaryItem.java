// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAwrHubAwrSourcesSummaryItem {
    /**
     * @return Unique Awr Hub identifier
     * 
     */
    private String awrHubId;
    /**
     * @return DatabaseId of the Source database for which AWR Data will be uploaded to AWR Hub.
     * 
     */
    private String awrSourceDatabaseId;
    /**
     * @return Number of hours since last AWR snapshots import happened from the Source database.
     * 
     */
    private Double hoursSinceLastImport;
    /**
     * @return The maximum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
     * 
     */
    private Double maxSnapshotIdentifier;
    /**
     * @return The minimum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
     * 
     */
    private Double minSnapshotIdentifier;
    /**
     * @return Name for an Awr source database
     * 
     */
    private String name;
    /**
     * @return Number of AWR snapshots uploaded from the Source database.
     * 
     */
    private Double snapshotsUploaded;
    /**
     * @return The time at which the earliest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
     * 
     */
    private String timeFirstSnapshotGenerated;
    /**
     * @return The time at which the latest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
     * 
     */
    private String timeLastSnapshotGenerated;

    private GetAwrHubAwrSourcesSummaryItem() {}
    /**
     * @return Unique Awr Hub identifier
     * 
     */
    public String awrHubId() {
        return this.awrHubId;
    }
    /**
     * @return DatabaseId of the Source database for which AWR Data will be uploaded to AWR Hub.
     * 
     */
    public String awrSourceDatabaseId() {
        return this.awrSourceDatabaseId;
    }
    /**
     * @return Number of hours since last AWR snapshots import happened from the Source database.
     * 
     */
    public Double hoursSinceLastImport() {
        return this.hoursSinceLastImport;
    }
    /**
     * @return The maximum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
     * 
     */
    public Double maxSnapshotIdentifier() {
        return this.maxSnapshotIdentifier;
    }
    /**
     * @return The minimum snapshot identifier of the source database for which AWR data is uploaded to AWR Hub.
     * 
     */
    public Double minSnapshotIdentifier() {
        return this.minSnapshotIdentifier;
    }
    /**
     * @return Name for an Awr source database
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Number of AWR snapshots uploaded from the Source database.
     * 
     */
    public Double snapshotsUploaded() {
        return this.snapshotsUploaded;
    }
    /**
     * @return The time at which the earliest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
     * 
     */
    public String timeFirstSnapshotGenerated() {
        return this.timeFirstSnapshotGenerated;
    }
    /**
     * @return The time at which the latest snapshot was generated in the source database for which data is uploaded to AWR Hub. An RFC3339 formatted datetime string
     * 
     */
    public String timeLastSnapshotGenerated() {
        return this.timeLastSnapshotGenerated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAwrHubAwrSourcesSummaryItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String awrHubId;
        private String awrSourceDatabaseId;
        private Double hoursSinceLastImport;
        private Double maxSnapshotIdentifier;
        private Double minSnapshotIdentifier;
        private String name;
        private Double snapshotsUploaded;
        private String timeFirstSnapshotGenerated;
        private String timeLastSnapshotGenerated;
        public Builder() {}
        public Builder(GetAwrHubAwrSourcesSummaryItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awrHubId = defaults.awrHubId;
    	      this.awrSourceDatabaseId = defaults.awrSourceDatabaseId;
    	      this.hoursSinceLastImport = defaults.hoursSinceLastImport;
    	      this.maxSnapshotIdentifier = defaults.maxSnapshotIdentifier;
    	      this.minSnapshotIdentifier = defaults.minSnapshotIdentifier;
    	      this.name = defaults.name;
    	      this.snapshotsUploaded = defaults.snapshotsUploaded;
    	      this.timeFirstSnapshotGenerated = defaults.timeFirstSnapshotGenerated;
    	      this.timeLastSnapshotGenerated = defaults.timeLastSnapshotGenerated;
        }

        @CustomType.Setter
        public Builder awrHubId(String awrHubId) {
            if (awrHubId == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "awrHubId");
            }
            this.awrHubId = awrHubId;
            return this;
        }
        @CustomType.Setter
        public Builder awrSourceDatabaseId(String awrSourceDatabaseId) {
            if (awrSourceDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "awrSourceDatabaseId");
            }
            this.awrSourceDatabaseId = awrSourceDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder hoursSinceLastImport(Double hoursSinceLastImport) {
            if (hoursSinceLastImport == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "hoursSinceLastImport");
            }
            this.hoursSinceLastImport = hoursSinceLastImport;
            return this;
        }
        @CustomType.Setter
        public Builder maxSnapshotIdentifier(Double maxSnapshotIdentifier) {
            if (maxSnapshotIdentifier == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "maxSnapshotIdentifier");
            }
            this.maxSnapshotIdentifier = maxSnapshotIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder minSnapshotIdentifier(Double minSnapshotIdentifier) {
            if (minSnapshotIdentifier == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "minSnapshotIdentifier");
            }
            this.minSnapshotIdentifier = minSnapshotIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotsUploaded(Double snapshotsUploaded) {
            if (snapshotsUploaded == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "snapshotsUploaded");
            }
            this.snapshotsUploaded = snapshotsUploaded;
            return this;
        }
        @CustomType.Setter
        public Builder timeFirstSnapshotGenerated(String timeFirstSnapshotGenerated) {
            if (timeFirstSnapshotGenerated == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "timeFirstSnapshotGenerated");
            }
            this.timeFirstSnapshotGenerated = timeFirstSnapshotGenerated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSnapshotGenerated(String timeLastSnapshotGenerated) {
            if (timeLastSnapshotGenerated == null) {
              throw new MissingRequiredPropertyException("GetAwrHubAwrSourcesSummaryItem", "timeLastSnapshotGenerated");
            }
            this.timeLastSnapshotGenerated = timeLastSnapshotGenerated;
            return this;
        }
        public GetAwrHubAwrSourcesSummaryItem build() {
            final var _resultValue = new GetAwrHubAwrSourcesSummaryItem();
            _resultValue.awrHubId = awrHubId;
            _resultValue.awrSourceDatabaseId = awrSourceDatabaseId;
            _resultValue.hoursSinceLastImport = hoursSinceLastImport;
            _resultValue.maxSnapshotIdentifier = maxSnapshotIdentifier;
            _resultValue.minSnapshotIdentifier = minSnapshotIdentifier;
            _resultValue.name = name;
            _resultValue.snapshotsUploaded = snapshotsUploaded;
            _resultValue.timeFirstSnapshotGenerated = timeFirstSnapshotGenerated;
            _resultValue.timeLastSnapshotGenerated = timeLastSnapshotGenerated;
            return _resultValue;
        }
    }
}
