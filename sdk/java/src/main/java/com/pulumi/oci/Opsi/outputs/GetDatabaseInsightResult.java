// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Opsi.outputs.GetDatabaseInsightConnectionCredentialDetail;
import com.pulumi.oci.Opsi.outputs.GetDatabaseInsightConnectionDetail;
import com.pulumi.oci.Opsi.outputs.GetDatabaseInsightCredentialDetail;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatabaseInsightResult {
    /**
     * @return Compartment identifier of the database
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return User credential details to connect to the database. This is supplied via the External Database Service.
     * 
     */
    private @Nullable List<GetDatabaseInsightConnectionCredentialDetail> connectionCredentialDetails;
    /**
     * @return Connection details to connect to the database. HostName, protocol, and port should be specified.
     * 
     */
    private @Nullable List<GetDatabaseInsightConnectionDetail> connectionDetails;
    /**
     * @return User credential details to connect to the database.
     * 
     */
    private @Nullable List<GetDatabaseInsightCredentialDetail> credentialDetails;
    /**
     * @return A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
     * 
     */
    private @Nullable String databaseConnectionStatusDetails;
    /**
     * @return Display name of database
     * 
     */
    private @Nullable String databaseDisplayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    private @Nullable String databaseId;
    private String databaseInsightId;
    /**
     * @return Name of database
     * 
     */
    private @Nullable String databaseName;
    /**
     * @return Oracle Cloud Infrastructure database resource type
     * 
     */
    private @Nullable String databaseResourceType;
    /**
     * @return Operations Insights internal representation of the database type.
     * 
     */
    private @Nullable String databaseType;
    /**
     * @return The version of the database.
     * 
     */
    private @Nullable String databaseVersion;
    private @Nullable String dbmPrivateEndpointId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    private @Nullable String deploymentType;
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    private @Nullable String enterpriseManagerBridgeId;
    /**
     * @return Enterprise Manager Entity Display Name
     * 
     */
    private @Nullable String enterpriseManagerEntityDisplayName;
    /**
     * @return Enterprise Manager Entity Unique Identifier
     * 
     */
    private @Nullable String enterpriseManagerEntityIdentifier;
    /**
     * @return Enterprise Manager Entity Name
     * 
     */
    private @Nullable String enterpriseManagerEntityName;
    /**
     * @return Enterprise Manager Entity Type
     * 
     */
    private @Nullable String enterpriseManagerEntityType;
    /**
     * @return Enterprise Manager Unqiue Identifier
     * 
     */
    private @Nullable String enterpriseManagerIdentifier;
    /**
     * @return Source of the database entity.
     * 
     */
    private @Nullable String entitySource;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
     * 
     */
    private @Nullable String exadataInsightId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Database insight identifier
     * 
     */
    private @Nullable String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
     * 
     */
    private @Nullable String opsiPrivateEndpointId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Cluster or DB System ID, depending on which configuration the resource belongs to.
     * 
     */
    private @Nullable String parentId;
    /**
     * @return Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
     * 
     */
    private @Nullable Integer processorCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
     * 
     */
    private @Nullable String rootId;
    /**
     * @return Database service name used for connection requests.
     * 
     */
    private @Nullable String serviceName;
    /**
     * @return The current state of the database.
     * 
     */
    private @Nullable String state;
    /**
     * @return Indicates the status of a database insight in Operations Insights
     * 
     */
    private @Nullable String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the the database insight was first enabled. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the database insight was updated. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeUpdated;

    private GetDatabaseInsightResult() {}
    /**
     * @return Compartment identifier of the database
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return User credential details to connect to the database. This is supplied via the External Database Service.
     * 
     */
    public List<GetDatabaseInsightConnectionCredentialDetail> connectionCredentialDetails() {
        return this.connectionCredentialDetails == null ? List.of() : this.connectionCredentialDetails;
    }
    /**
     * @return Connection details to connect to the database. HostName, protocol, and port should be specified.
     * 
     */
    public List<GetDatabaseInsightConnectionDetail> connectionDetails() {
        return this.connectionDetails == null ? List.of() : this.connectionDetails;
    }
    /**
     * @return User credential details to connect to the database.
     * 
     */
    public List<GetDatabaseInsightCredentialDetail> credentialDetails() {
        return this.credentialDetails == null ? List.of() : this.credentialDetails;
    }
    /**
     * @return A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
     * 
     */
    public Optional<String> databaseConnectionStatusDetails() {
        return Optional.ofNullable(this.databaseConnectionStatusDetails);
    }
    /**
     * @return Display name of database
     * 
     */
    public Optional<String> databaseDisplayName() {
        return Optional.ofNullable(this.databaseDisplayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public Optional<String> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }
    public String databaseInsightId() {
        return this.databaseInsightId;
    }
    /**
     * @return Name of database
     * 
     */
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    /**
     * @return Oracle Cloud Infrastructure database resource type
     * 
     */
    public Optional<String> databaseResourceType() {
        return Optional.ofNullable(this.databaseResourceType);
    }
    /**
     * @return Operations Insights internal representation of the database type.
     * 
     */
    public Optional<String> databaseType() {
        return Optional.ofNullable(this.databaseType);
    }
    /**
     * @return The version of the database.
     * 
     */
    public Optional<String> databaseVersion() {
        return Optional.ofNullable(this.databaseVersion);
    }
    public Optional<String> dbmPrivateEndpointId() {
        return Optional.ofNullable(this.dbmPrivateEndpointId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    public Optional<String> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    public Optional<String> enterpriseManagerBridgeId() {
        return Optional.ofNullable(this.enterpriseManagerBridgeId);
    }
    /**
     * @return Enterprise Manager Entity Display Name
     * 
     */
    public Optional<String> enterpriseManagerEntityDisplayName() {
        return Optional.ofNullable(this.enterpriseManagerEntityDisplayName);
    }
    /**
     * @return Enterprise Manager Entity Unique Identifier
     * 
     */
    public Optional<String> enterpriseManagerEntityIdentifier() {
        return Optional.ofNullable(this.enterpriseManagerEntityIdentifier);
    }
    /**
     * @return Enterprise Manager Entity Name
     * 
     */
    public Optional<String> enterpriseManagerEntityName() {
        return Optional.ofNullable(this.enterpriseManagerEntityName);
    }
    /**
     * @return Enterprise Manager Entity Type
     * 
     */
    public Optional<String> enterpriseManagerEntityType() {
        return Optional.ofNullable(this.enterpriseManagerEntityType);
    }
    /**
     * @return Enterprise Manager Unqiue Identifier
     * 
     */
    public Optional<String> enterpriseManagerIdentifier() {
        return Optional.ofNullable(this.enterpriseManagerIdentifier);
    }
    /**
     * @return Source of the database entity.
     * 
     */
    public Optional<String> entitySource() {
        return Optional.ofNullable(this.entitySource);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
     * 
     */
    public Optional<String> exadataInsightId() {
        return Optional.ofNullable(this.exadataInsightId);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Database insight identifier
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
     * 
     */
    public Optional<String> opsiPrivateEndpointId() {
        return Optional.ofNullable(this.opsiPrivateEndpointId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Cluster or DB System ID, depending on which configuration the resource belongs to.
     * 
     */
    public Optional<String> parentId() {
        return Optional.ofNullable(this.parentId);
    }
    /**
     * @return Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
     * 
     */
    public Optional<Integer> processorCount() {
        return Optional.ofNullable(this.processorCount);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
     * 
     */
    public Optional<String> rootId() {
        return Optional.ofNullable(this.rootId);
    }
    /**
     * @return Database service name used for connection requests.
     * 
     */
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }
    /**
     * @return The current state of the database.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Indicates the status of a database insight in Operations Insights
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the the database insight was first enabled. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the database insight was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInsightResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetDatabaseInsightConnectionCredentialDetail> connectionCredentialDetails;
        private @Nullable List<GetDatabaseInsightConnectionDetail> connectionDetails;
        private @Nullable List<GetDatabaseInsightCredentialDetail> credentialDetails;
        private @Nullable String databaseConnectionStatusDetails;
        private @Nullable String databaseDisplayName;
        private @Nullable String databaseId;
        private String databaseInsightId;
        private @Nullable String databaseName;
        private @Nullable String databaseResourceType;
        private @Nullable String databaseType;
        private @Nullable String databaseVersion;
        private @Nullable String dbmPrivateEndpointId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String deploymentType;
        private @Nullable String enterpriseManagerBridgeId;
        private @Nullable String enterpriseManagerEntityDisplayName;
        private @Nullable String enterpriseManagerEntityIdentifier;
        private @Nullable String enterpriseManagerEntityName;
        private @Nullable String enterpriseManagerEntityType;
        private @Nullable String enterpriseManagerIdentifier;
        private @Nullable String entitySource;
        private @Nullable String exadataInsightId;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String opsiPrivateEndpointId;
        private @Nullable String parentId;
        private @Nullable Integer processorCount;
        private @Nullable String rootId;
        private @Nullable String serviceName;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetDatabaseInsightResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionCredentialDetails = defaults.connectionCredentialDetails;
    	      this.connectionDetails = defaults.connectionDetails;
    	      this.credentialDetails = defaults.credentialDetails;
    	      this.databaseConnectionStatusDetails = defaults.databaseConnectionStatusDetails;
    	      this.databaseDisplayName = defaults.databaseDisplayName;
    	      this.databaseId = defaults.databaseId;
    	      this.databaseInsightId = defaults.databaseInsightId;
    	      this.databaseName = defaults.databaseName;
    	      this.databaseResourceType = defaults.databaseResourceType;
    	      this.databaseType = defaults.databaseType;
    	      this.databaseVersion = defaults.databaseVersion;
    	      this.dbmPrivateEndpointId = defaults.dbmPrivateEndpointId;
    	      this.definedTags = defaults.definedTags;
    	      this.deploymentType = defaults.deploymentType;
    	      this.enterpriseManagerBridgeId = defaults.enterpriseManagerBridgeId;
    	      this.enterpriseManagerEntityDisplayName = defaults.enterpriseManagerEntityDisplayName;
    	      this.enterpriseManagerEntityIdentifier = defaults.enterpriseManagerEntityIdentifier;
    	      this.enterpriseManagerEntityName = defaults.enterpriseManagerEntityName;
    	      this.enterpriseManagerEntityType = defaults.enterpriseManagerEntityType;
    	      this.enterpriseManagerIdentifier = defaults.enterpriseManagerIdentifier;
    	      this.entitySource = defaults.entitySource;
    	      this.exadataInsightId = defaults.exadataInsightId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.opsiPrivateEndpointId = defaults.opsiPrivateEndpointId;
    	      this.parentId = defaults.parentId;
    	      this.processorCount = defaults.processorCount;
    	      this.rootId = defaults.rootId;
    	      this.serviceName = defaults.serviceName;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionCredentialDetails(@Nullable List<GetDatabaseInsightConnectionCredentialDetail> connectionCredentialDetails) {
            this.connectionCredentialDetails = connectionCredentialDetails;
            return this;
        }
        public Builder connectionCredentialDetails(GetDatabaseInsightConnectionCredentialDetail... connectionCredentialDetails) {
            return connectionCredentialDetails(List.of(connectionCredentialDetails));
        }
        @CustomType.Setter
        public Builder connectionDetails(@Nullable List<GetDatabaseInsightConnectionDetail> connectionDetails) {
            this.connectionDetails = connectionDetails;
            return this;
        }
        public Builder connectionDetails(GetDatabaseInsightConnectionDetail... connectionDetails) {
            return connectionDetails(List.of(connectionDetails));
        }
        @CustomType.Setter
        public Builder credentialDetails(@Nullable List<GetDatabaseInsightCredentialDetail> credentialDetails) {
            this.credentialDetails = credentialDetails;
            return this;
        }
        public Builder credentialDetails(GetDatabaseInsightCredentialDetail... credentialDetails) {
            return credentialDetails(List.of(credentialDetails));
        }
        @CustomType.Setter
        public Builder databaseConnectionStatusDetails(@Nullable String databaseConnectionStatusDetails) {
            this.databaseConnectionStatusDetails = databaseConnectionStatusDetails;
            return this;
        }
        @CustomType.Setter
        public Builder databaseDisplayName(@Nullable String databaseDisplayName) {
            this.databaseDisplayName = databaseDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder databaseId(@Nullable String databaseId) {
            this.databaseId = databaseId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseInsightId(String databaseInsightId) {
            this.databaseInsightId = Objects.requireNonNull(databaseInsightId);
            return this;
        }
        @CustomType.Setter
        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = databaseName;
            return this;
        }
        @CustomType.Setter
        public Builder databaseResourceType(@Nullable String databaseResourceType) {
            this.databaseResourceType = databaseResourceType;
            return this;
        }
        @CustomType.Setter
        public Builder databaseType(@Nullable String databaseType) {
            this.databaseType = databaseType;
            return this;
        }
        @CustomType.Setter
        public Builder databaseVersion(@Nullable String databaseVersion) {
            this.databaseVersion = databaseVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dbmPrivateEndpointId(@Nullable String dbmPrivateEndpointId) {
            this.dbmPrivateEndpointId = dbmPrivateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(@Nullable String deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerBridgeId(@Nullable String enterpriseManagerBridgeId) {
            this.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityDisplayName(@Nullable String enterpriseManagerEntityDisplayName) {
            this.enterpriseManagerEntityDisplayName = enterpriseManagerEntityDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityIdentifier(@Nullable String enterpriseManagerEntityIdentifier) {
            this.enterpriseManagerEntityIdentifier = enterpriseManagerEntityIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityName(@Nullable String enterpriseManagerEntityName) {
            this.enterpriseManagerEntityName = enterpriseManagerEntityName;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityType(@Nullable String enterpriseManagerEntityType) {
            this.enterpriseManagerEntityType = enterpriseManagerEntityType;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerIdentifier(@Nullable String enterpriseManagerIdentifier) {
            this.enterpriseManagerIdentifier = enterpriseManagerIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder entitySource(@Nullable String entitySource) {
            this.entitySource = entitySource;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInsightId(@Nullable String exadataInsightId) {
            this.exadataInsightId = exadataInsightId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder opsiPrivateEndpointId(@Nullable String opsiPrivateEndpointId) {
            this.opsiPrivateEndpointId = opsiPrivateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder parentId(@Nullable String parentId) {
            this.parentId = parentId;
            return this;
        }
        @CustomType.Setter
        public Builder processorCount(@Nullable Integer processorCount) {
            this.processorCount = processorCount;
            return this;
        }
        @CustomType.Setter
        public Builder rootId(@Nullable String rootId) {
            this.rootId = rootId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDatabaseInsightResult build() {
            final var o = new GetDatabaseInsightResult();
            o.compartmentId = compartmentId;
            o.connectionCredentialDetails = connectionCredentialDetails;
            o.connectionDetails = connectionDetails;
            o.credentialDetails = credentialDetails;
            o.databaseConnectionStatusDetails = databaseConnectionStatusDetails;
            o.databaseDisplayName = databaseDisplayName;
            o.databaseId = databaseId;
            o.databaseInsightId = databaseInsightId;
            o.databaseName = databaseName;
            o.databaseResourceType = databaseResourceType;
            o.databaseType = databaseType;
            o.databaseVersion = databaseVersion;
            o.dbmPrivateEndpointId = dbmPrivateEndpointId;
            o.definedTags = definedTags;
            o.deploymentType = deploymentType;
            o.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            o.enterpriseManagerEntityDisplayName = enterpriseManagerEntityDisplayName;
            o.enterpriseManagerEntityIdentifier = enterpriseManagerEntityIdentifier;
            o.enterpriseManagerEntityName = enterpriseManagerEntityName;
            o.enterpriseManagerEntityType = enterpriseManagerEntityType;
            o.enterpriseManagerIdentifier = enterpriseManagerIdentifier;
            o.entitySource = entitySource;
            o.exadataInsightId = exadataInsightId;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.opsiPrivateEndpointId = opsiPrivateEndpointId;
            o.parentId = parentId;
            o.processorCount = processorCount;
            o.rootId = rootId;
            o.serviceName = serviceName;
            o.state = state;
            o.status = status;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
