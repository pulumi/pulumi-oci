// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Opsi.outputs.GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollection;
import com.pulumi.oci.Opsi.outputs.GetEnterpriseManagerBridgesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEnterpriseManagerBridgesResult {
    /**
     * @return Compartment identifier of the Enterprise Manager bridge
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return User-friedly name of Enterprise Manager Bridge that does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The list of enterprise_manager_bridge_collection.
     * 
     */
    private @Nullable List<GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollection> enterpriseManagerBridgeCollections;
    private @Nullable List<GetEnterpriseManagerBridgesFilter> filters;
    /**
     * @return Enterprise Manager bridge identifier
     * 
     */
    private @Nullable String id;
    /**
     * @return The current state of the Enterprise Manager bridge.
     * 
     */
    private @Nullable List<String> states;

    private GetEnterpriseManagerBridgesResult() {}
    /**
     * @return Compartment identifier of the Enterprise Manager bridge
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return User-friedly name of Enterprise Manager Bridge that does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The list of enterprise_manager_bridge_collection.
     * 
     */
    public List<GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollection> enterpriseManagerBridgeCollections() {
        return this.enterpriseManagerBridgeCollections == null ? List.of() : this.enterpriseManagerBridgeCollections;
    }
    public List<GetEnterpriseManagerBridgesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Enterprise Manager bridge identifier
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The current state of the Enterprise Manager bridge.
     * 
     */
    public List<String> states() {
        return this.states == null ? List.of() : this.states;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnterpriseManagerBridgesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollection> enterpriseManagerBridgeCollections;
        private @Nullable List<GetEnterpriseManagerBridgesFilter> filters;
        private @Nullable String id;
        private @Nullable List<String> states;
        public Builder() {}
        public Builder(GetEnterpriseManagerBridgesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.enterpriseManagerBridgeCollections = defaults.enterpriseManagerBridgeCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.states = defaults.states;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerBridgeCollections(@Nullable List<GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollection> enterpriseManagerBridgeCollections) {
            this.enterpriseManagerBridgeCollections = enterpriseManagerBridgeCollections;
            return this;
        }
        public Builder enterpriseManagerBridgeCollections(GetEnterpriseManagerBridgesEnterpriseManagerBridgeCollection... enterpriseManagerBridgeCollections) {
            return enterpriseManagerBridgeCollections(List.of(enterpriseManagerBridgeCollections));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetEnterpriseManagerBridgesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetEnterpriseManagerBridgesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder states(@Nullable List<String> states) {
            this.states = states;
            return this;
        }
        public Builder states(String... states) {
            return states(List.of(states));
        }
        public GetEnterpriseManagerBridgesResult build() {
            final var o = new GetEnterpriseManagerBridgesResult();
            o.compartmentId = compartmentId;
            o.compartmentIdInSubtree = compartmentIdInSubtree;
            o.displayName = displayName;
            o.enterpriseManagerBridgeCollections = enterpriseManagerBridgeCollections;
            o.filters = filters;
            o.id = id;
            o.states = states;
            return o;
        }
    }
}
