// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Opsi.outputs.GetExadataInsightMemberVmClusterDetail;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetExadataInsightResult {
    /**
     * @return Compartment identifier of the Exadata insight resource
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    private String enterpriseManagerBridgeId;
    /**
     * @return Enterprise Manager Entity Display Name
     * 
     */
    private String enterpriseManagerEntityDisplayName;
    /**
     * @return Enterprise Manager Entity Unique Identifier
     * 
     */
    private String enterpriseManagerEntityIdentifier;
    /**
     * @return Enterprise Manager Entity Name
     * 
     */
    private String enterpriseManagerEntityName;
    /**
     * @return Enterprise Manager Entity Type
     * 
     */
    private String enterpriseManagerEntityType;
    /**
     * @return Enterprise Manager Unique Identifier
     * 
     */
    private String enterpriseManagerIdentifier;
    /**
     * @return Source of the Exadata system.
     * 
     */
    private String entitySource;
    /**
     * @return The user-friendly name for the Exadata system. The name does not have to be unique.
     * 
     */
    private String exadataDisplayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
     * 
     */
    private String exadataInfraId;
    /**
     * @return Oracle Cloud Infrastructure exadata infrastructure resource type
     * 
     */
    private String exadataInfraResourceType;
    private String exadataInsightId;
    /**
     * @return The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
     * 
     */
    private String exadataName;
    /**
     * @return Exadata rack type.
     * 
     */
    private String exadataRackType;
    /**
     * @return The shape of the Exadata Infrastructure.
     * 
     */
    private String exadataShape;
    /**
     * @return Operations Insights internal representation of the the Exadata system type.
     * 
     */
    private String exadataType;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Exadata insight identifier
     * 
     */
    private String id;
    private Boolean isAutoSyncEnabled;
    /**
     * @return true if virtualization is used in the Exadata system
     * 
     */
    private Boolean isVirtualizedExadata;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    private List<GetExadataInsightMemberVmClusterDetail> memberVmClusterDetails;
    /**
     * @return The current state of the Exadata insight.
     * 
     */
    private String state;
    /**
     * @return Indicates the status of an Exadata insight in Operations Insights
     * 
     */
    private String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the Exadata insight was updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;

    private GetExadataInsightResult() {}
    /**
     * @return Compartment identifier of the Exadata insight resource
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    public String enterpriseManagerBridgeId() {
        return this.enterpriseManagerBridgeId;
    }
    /**
     * @return Enterprise Manager Entity Display Name
     * 
     */
    public String enterpriseManagerEntityDisplayName() {
        return this.enterpriseManagerEntityDisplayName;
    }
    /**
     * @return Enterprise Manager Entity Unique Identifier
     * 
     */
    public String enterpriseManagerEntityIdentifier() {
        return this.enterpriseManagerEntityIdentifier;
    }
    /**
     * @return Enterprise Manager Entity Name
     * 
     */
    public String enterpriseManagerEntityName() {
        return this.enterpriseManagerEntityName;
    }
    /**
     * @return Enterprise Manager Entity Type
     * 
     */
    public String enterpriseManagerEntityType() {
        return this.enterpriseManagerEntityType;
    }
    /**
     * @return Enterprise Manager Unique Identifier
     * 
     */
    public String enterpriseManagerIdentifier() {
        return this.enterpriseManagerIdentifier;
    }
    /**
     * @return Source of the Exadata system.
     * 
     */
    public String entitySource() {
        return this.entitySource;
    }
    /**
     * @return The user-friendly name for the Exadata system. The name does not have to be unique.
     * 
     */
    public String exadataDisplayName() {
        return this.exadataDisplayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
     * 
     */
    public String exadataInfraId() {
        return this.exadataInfraId;
    }
    /**
     * @return Oracle Cloud Infrastructure exadata infrastructure resource type
     * 
     */
    public String exadataInfraResourceType() {
        return this.exadataInfraResourceType;
    }
    public String exadataInsightId() {
        return this.exadataInsightId;
    }
    /**
     * @return The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
     * 
     */
    public String exadataName() {
        return this.exadataName;
    }
    /**
     * @return Exadata rack type.
     * 
     */
    public String exadataRackType() {
        return this.exadataRackType;
    }
    /**
     * @return The shape of the Exadata Infrastructure.
     * 
     */
    public String exadataShape() {
        return this.exadataShape;
    }
    /**
     * @return Operations Insights internal representation of the the Exadata system type.
     * 
     */
    public String exadataType() {
        return this.exadataType;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Exadata insight identifier
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean isAutoSyncEnabled() {
        return this.isAutoSyncEnabled;
    }
    /**
     * @return true if virtualization is used in the Exadata system
     * 
     */
    public Boolean isVirtualizedExadata() {
        return this.isVirtualizedExadata;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public List<GetExadataInsightMemberVmClusterDetail> memberVmClusterDetails() {
        return this.memberVmClusterDetails;
    }
    /**
     * @return The current state of the Exadata insight.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Indicates the status of an Exadata insight in Operations Insights
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Exadata insight was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExadataInsightResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String enterpriseManagerBridgeId;
        private String enterpriseManagerEntityDisplayName;
        private String enterpriseManagerEntityIdentifier;
        private String enterpriseManagerEntityName;
        private String enterpriseManagerEntityType;
        private String enterpriseManagerIdentifier;
        private String entitySource;
        private String exadataDisplayName;
        private String exadataInfraId;
        private String exadataInfraResourceType;
        private String exadataInsightId;
        private String exadataName;
        private String exadataRackType;
        private String exadataShape;
        private String exadataType;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isAutoSyncEnabled;
        private Boolean isVirtualizedExadata;
        private String lifecycleDetails;
        private List<GetExadataInsightMemberVmClusterDetail> memberVmClusterDetails;
        private String state;
        private String status;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetExadataInsightResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.enterpriseManagerBridgeId = defaults.enterpriseManagerBridgeId;
    	      this.enterpriseManagerEntityDisplayName = defaults.enterpriseManagerEntityDisplayName;
    	      this.enterpriseManagerEntityIdentifier = defaults.enterpriseManagerEntityIdentifier;
    	      this.enterpriseManagerEntityName = defaults.enterpriseManagerEntityName;
    	      this.enterpriseManagerEntityType = defaults.enterpriseManagerEntityType;
    	      this.enterpriseManagerIdentifier = defaults.enterpriseManagerIdentifier;
    	      this.entitySource = defaults.entitySource;
    	      this.exadataDisplayName = defaults.exadataDisplayName;
    	      this.exadataInfraId = defaults.exadataInfraId;
    	      this.exadataInfraResourceType = defaults.exadataInfraResourceType;
    	      this.exadataInsightId = defaults.exadataInsightId;
    	      this.exadataName = defaults.exadataName;
    	      this.exadataRackType = defaults.exadataRackType;
    	      this.exadataShape = defaults.exadataShape;
    	      this.exadataType = defaults.exadataType;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutoSyncEnabled = defaults.isAutoSyncEnabled;
    	      this.isVirtualizedExadata = defaults.isVirtualizedExadata;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.memberVmClusterDetails = defaults.memberVmClusterDetails;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerBridgeId(String enterpriseManagerBridgeId) {
            this.enterpriseManagerBridgeId = Objects.requireNonNull(enterpriseManagerBridgeId);
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityDisplayName(String enterpriseManagerEntityDisplayName) {
            this.enterpriseManagerEntityDisplayName = Objects.requireNonNull(enterpriseManagerEntityDisplayName);
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityIdentifier(String enterpriseManagerEntityIdentifier) {
            this.enterpriseManagerEntityIdentifier = Objects.requireNonNull(enterpriseManagerEntityIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityName(String enterpriseManagerEntityName) {
            this.enterpriseManagerEntityName = Objects.requireNonNull(enterpriseManagerEntityName);
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityType(String enterpriseManagerEntityType) {
            this.enterpriseManagerEntityType = Objects.requireNonNull(enterpriseManagerEntityType);
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerIdentifier(String enterpriseManagerIdentifier) {
            this.enterpriseManagerIdentifier = Objects.requireNonNull(enterpriseManagerIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder entitySource(String entitySource) {
            this.entitySource = Objects.requireNonNull(entitySource);
            return this;
        }
        @CustomType.Setter
        public Builder exadataDisplayName(String exadataDisplayName) {
            this.exadataDisplayName = Objects.requireNonNull(exadataDisplayName);
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfraId(String exadataInfraId) {
            this.exadataInfraId = Objects.requireNonNull(exadataInfraId);
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfraResourceType(String exadataInfraResourceType) {
            this.exadataInfraResourceType = Objects.requireNonNull(exadataInfraResourceType);
            return this;
        }
        @CustomType.Setter
        public Builder exadataInsightId(String exadataInsightId) {
            this.exadataInsightId = Objects.requireNonNull(exadataInsightId);
            return this;
        }
        @CustomType.Setter
        public Builder exadataName(String exadataName) {
            this.exadataName = Objects.requireNonNull(exadataName);
            return this;
        }
        @CustomType.Setter
        public Builder exadataRackType(String exadataRackType) {
            this.exadataRackType = Objects.requireNonNull(exadataRackType);
            return this;
        }
        @CustomType.Setter
        public Builder exadataShape(String exadataShape) {
            this.exadataShape = Objects.requireNonNull(exadataShape);
            return this;
        }
        @CustomType.Setter
        public Builder exadataType(String exadataType) {
            this.exadataType = Objects.requireNonNull(exadataType);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isAutoSyncEnabled(Boolean isAutoSyncEnabled) {
            this.isAutoSyncEnabled = Objects.requireNonNull(isAutoSyncEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isVirtualizedExadata(Boolean isVirtualizedExadata) {
            this.isVirtualizedExadata = Objects.requireNonNull(isVirtualizedExadata);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder memberVmClusterDetails(List<GetExadataInsightMemberVmClusterDetail> memberVmClusterDetails) {
            this.memberVmClusterDetails = Objects.requireNonNull(memberVmClusterDetails);
            return this;
        }
        public Builder memberVmClusterDetails(GetExadataInsightMemberVmClusterDetail... memberVmClusterDetails) {
            return memberVmClusterDetails(List.of(memberVmClusterDetails));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetExadataInsightResult build() {
            final var o = new GetExadataInsightResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            o.enterpriseManagerEntityDisplayName = enterpriseManagerEntityDisplayName;
            o.enterpriseManagerEntityIdentifier = enterpriseManagerEntityIdentifier;
            o.enterpriseManagerEntityName = enterpriseManagerEntityName;
            o.enterpriseManagerEntityType = enterpriseManagerEntityType;
            o.enterpriseManagerIdentifier = enterpriseManagerIdentifier;
            o.entitySource = entitySource;
            o.exadataDisplayName = exadataDisplayName;
            o.exadataInfraId = exadataInfraId;
            o.exadataInfraResourceType = exadataInfraResourceType;
            o.exadataInsightId = exadataInsightId;
            o.exadataName = exadataName;
            o.exadataRackType = exadataRackType;
            o.exadataShape = exadataShape;
            o.exadataType = exadataType;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isAutoSyncEnabled = isAutoSyncEnabled;
            o.isVirtualizedExadata = isVirtualizedExadata;
            o.lifecycleDetails = lifecycleDetails;
            o.memberVmClusterDetails = memberVmClusterDetails;
            o.state = state;
            o.status = status;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
