// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Opsi.outputs.GetExadataInsightsExadataInsightSummaryCollection;
import com.pulumi.oci.Opsi.outputs.GetExadataInsightsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExadataInsightsResult {
    /**
     * @return Compartment identifier of the Exadata insight resource
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    private @Nullable String enterpriseManagerBridgeId;
    /**
     * @return The list of exadata_insight_summary_collection.
     * 
     */
    private List<GetExadataInsightsExadataInsightSummaryCollection> exadataInsightSummaryCollections;
    /**
     * @return Operations Insights internal representation of the the Exadata system type.
     * 
     */
    private @Nullable List<String> exadataTypes;
    private @Nullable List<GetExadataInsightsFilter> filters;
    /**
     * @return Exadata insight identifier
     * 
     */
    private @Nullable String id;
    /**
     * @return The current state of the Exadata insight.
     * 
     */
    private @Nullable List<String> states;
    /**
     * @return Indicates the status of an Exadata insight in Operations Insights
     * 
     */
    private @Nullable List<String> statuses;

    private GetExadataInsightsResult() {}
    /**
     * @return Compartment identifier of the Exadata insight resource
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    public Optional<String> enterpriseManagerBridgeId() {
        return Optional.ofNullable(this.enterpriseManagerBridgeId);
    }
    /**
     * @return The list of exadata_insight_summary_collection.
     * 
     */
    public List<GetExadataInsightsExadataInsightSummaryCollection> exadataInsightSummaryCollections() {
        return this.exadataInsightSummaryCollections;
    }
    /**
     * @return Operations Insights internal representation of the the Exadata system type.
     * 
     */
    public List<String> exadataTypes() {
        return this.exadataTypes == null ? List.of() : this.exadataTypes;
    }
    public List<GetExadataInsightsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Exadata insight identifier
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The current state of the Exadata insight.
     * 
     */
    public List<String> states() {
        return this.states == null ? List.of() : this.states;
    }
    /**
     * @return Indicates the status of an Exadata insight in Operations Insights
     * 
     */
    public List<String> statuses() {
        return this.statuses == null ? List.of() : this.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExadataInsightsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String enterpriseManagerBridgeId;
        private List<GetExadataInsightsExadataInsightSummaryCollection> exadataInsightSummaryCollections;
        private @Nullable List<String> exadataTypes;
        private @Nullable List<GetExadataInsightsFilter> filters;
        private @Nullable String id;
        private @Nullable List<String> states;
        private @Nullable List<String> statuses;
        public Builder() {}
        public Builder(GetExadataInsightsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.enterpriseManagerBridgeId = defaults.enterpriseManagerBridgeId;
    	      this.exadataInsightSummaryCollections = defaults.exadataInsightSummaryCollections;
    	      this.exadataTypes = defaults.exadataTypes;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.states = defaults.states;
    	      this.statuses = defaults.statuses;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerBridgeId(@Nullable String enterpriseManagerBridgeId) {

            this.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInsightSummaryCollections(List<GetExadataInsightsExadataInsightSummaryCollection> exadataInsightSummaryCollections) {
            if (exadataInsightSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetExadataInsightsResult", "exadataInsightSummaryCollections");
            }
            this.exadataInsightSummaryCollections = exadataInsightSummaryCollections;
            return this;
        }
        public Builder exadataInsightSummaryCollections(GetExadataInsightsExadataInsightSummaryCollection... exadataInsightSummaryCollections) {
            return exadataInsightSummaryCollections(List.of(exadataInsightSummaryCollections));
        }
        @CustomType.Setter
        public Builder exadataTypes(@Nullable List<String> exadataTypes) {

            this.exadataTypes = exadataTypes;
            return this;
        }
        public Builder exadataTypes(String... exadataTypes) {
            return exadataTypes(List.of(exadataTypes));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetExadataInsightsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetExadataInsightsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder states(@Nullable List<String> states) {

            this.states = states;
            return this;
        }
        public Builder states(String... states) {
            return states(List.of(states));
        }
        @CustomType.Setter
        public Builder statuses(@Nullable List<String> statuses) {

            this.statuses = statuses;
            return this;
        }
        public Builder statuses(String... statuses) {
            return statuses(List.of(statuses));
        }
        public GetExadataInsightsResult build() {
            final var _resultValue = new GetExadataInsightsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            _resultValue.exadataInsightSummaryCollections = exadataInsightSummaryCollections;
            _resultValue.exadataTypes = exadataTypes;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.states = states;
            _resultValue.statuses = statuses;
            return _resultValue;
        }
    }
}
