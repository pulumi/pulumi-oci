// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetHostInsightResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute Instance
     * 
     */
    private String computeId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    private String enterpriseManagerBridgeId;
    /**
     * @return Enterprise Manager Entity Display Name
     * 
     */
    private String enterpriseManagerEntityDisplayName;
    /**
     * @return Enterprise Manager Entity Unique Identifier
     * 
     */
    private String enterpriseManagerEntityIdentifier;
    /**
     * @return Enterprise Manager Entity Name
     * 
     */
    private String enterpriseManagerEntityName;
    /**
     * @return Enterprise Manager Entity Type
     * 
     */
    private String enterpriseManagerEntityType;
    /**
     * @return Enterprise Manager Unique Identifier
     * 
     */
    private String enterpriseManagerIdentifier;
    /**
     * @return Source of the host entity.
     * 
     */
    private String entitySource;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
     * 
     */
    private String exadataInsightId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The user-friendly name for the host. The name does not have to be unique.
     * 
     */
    private String hostDisplayName;
    private String hostInsightId;
    /**
     * @return The host name. The host name is unique amongst the hosts managed by the same management agent.
     * 
     */
    private String hostName;
    /**
     * @return Ops Insights internal representation of the host type. Possible value is EXTERNAL-HOST.
     * 
     */
    private String hostType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host insight resource.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
     * 
     */
    private String managementAgentId;
    /**
     * @return Platform name.
     * 
     */
    private String platformName;
    /**
     * @return Platform type. Supported platformType(s) for MACS-managed external host insight: [LINUX, SOLARIS, WINDOWS]. Supported platformType(s) for MACS-managed cloud host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX, WINDOWS, AIX].
     * 
     */
    private String platformType;
    /**
     * @return Platform version.
     * 
     */
    private String platformVersion;
    private Integer processorCount;
    /**
     * @return The current state of the host.
     * 
     */
    private String state;
    /**
     * @return Indicates the status of a host insight in Operations Insights
     * 
     */
    private String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the the host insight was first enabled. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the host insight was updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;

    private GetHostInsightResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute Instance
     * 
     */
    public String computeId() {
        return this.computeId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    public String enterpriseManagerBridgeId() {
        return this.enterpriseManagerBridgeId;
    }
    /**
     * @return Enterprise Manager Entity Display Name
     * 
     */
    public String enterpriseManagerEntityDisplayName() {
        return this.enterpriseManagerEntityDisplayName;
    }
    /**
     * @return Enterprise Manager Entity Unique Identifier
     * 
     */
    public String enterpriseManagerEntityIdentifier() {
        return this.enterpriseManagerEntityIdentifier;
    }
    /**
     * @return Enterprise Manager Entity Name
     * 
     */
    public String enterpriseManagerEntityName() {
        return this.enterpriseManagerEntityName;
    }
    /**
     * @return Enterprise Manager Entity Type
     * 
     */
    public String enterpriseManagerEntityType() {
        return this.enterpriseManagerEntityType;
    }
    /**
     * @return Enterprise Manager Unique Identifier
     * 
     */
    public String enterpriseManagerIdentifier() {
        return this.enterpriseManagerIdentifier;
    }
    /**
     * @return Source of the host entity.
     * 
     */
    public String entitySource() {
        return this.entitySource;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
     * 
     */
    public String exadataInsightId() {
        return this.exadataInsightId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The user-friendly name for the host. The name does not have to be unique.
     * 
     */
    public String hostDisplayName() {
        return this.hostDisplayName;
    }
    public String hostInsightId() {
        return this.hostInsightId;
    }
    /**
     * @return The host name. The host name is unique amongst the hosts managed by the same management agent.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return Ops Insights internal representation of the host type. Possible value is EXTERNAL-HOST.
     * 
     */
    public String hostType() {
        return this.hostType;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host insight resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * @return Platform name.
     * 
     */
    public String platformName() {
        return this.platformName;
    }
    /**
     * @return Platform type. Supported platformType(s) for MACS-managed external host insight: [LINUX, SOLARIS, WINDOWS]. Supported platformType(s) for MACS-managed cloud host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX, WINDOWS, AIX].
     * 
     */
    public String platformType() {
        return this.platformType;
    }
    /**
     * @return Platform version.
     * 
     */
    public String platformVersion() {
        return this.platformVersion;
    }
    public Integer processorCount() {
        return this.processorCount;
    }
    /**
     * @return The current state of the host.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Indicates the status of a host insight in Operations Insights
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the host insight was first enabled. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the host insight was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHostInsightResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String computeId;
        private Map<String,String> definedTags;
        private String enterpriseManagerBridgeId;
        private String enterpriseManagerEntityDisplayName;
        private String enterpriseManagerEntityIdentifier;
        private String enterpriseManagerEntityName;
        private String enterpriseManagerEntityType;
        private String enterpriseManagerIdentifier;
        private String entitySource;
        private String exadataInsightId;
        private Map<String,String> freeformTags;
        private String hostDisplayName;
        private String hostInsightId;
        private String hostName;
        private String hostType;
        private String id;
        private String lifecycleDetails;
        private String managementAgentId;
        private String platformName;
        private String platformType;
        private String platformVersion;
        private Integer processorCount;
        private String state;
        private String status;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetHostInsightResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeId = defaults.computeId;
    	      this.definedTags = defaults.definedTags;
    	      this.enterpriseManagerBridgeId = defaults.enterpriseManagerBridgeId;
    	      this.enterpriseManagerEntityDisplayName = defaults.enterpriseManagerEntityDisplayName;
    	      this.enterpriseManagerEntityIdentifier = defaults.enterpriseManagerEntityIdentifier;
    	      this.enterpriseManagerEntityName = defaults.enterpriseManagerEntityName;
    	      this.enterpriseManagerEntityType = defaults.enterpriseManagerEntityType;
    	      this.enterpriseManagerIdentifier = defaults.enterpriseManagerIdentifier;
    	      this.entitySource = defaults.entitySource;
    	      this.exadataInsightId = defaults.exadataInsightId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostDisplayName = defaults.hostDisplayName;
    	      this.hostInsightId = defaults.hostInsightId;
    	      this.hostName = defaults.hostName;
    	      this.hostType = defaults.hostType;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.platformName = defaults.platformName;
    	      this.platformType = defaults.platformType;
    	      this.platformVersion = defaults.platformVersion;
    	      this.processorCount = defaults.processorCount;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeId(String computeId) {
            if (computeId == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "computeId");
            }
            this.computeId = computeId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerBridgeId(String enterpriseManagerBridgeId) {
            if (enterpriseManagerBridgeId == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "enterpriseManagerBridgeId");
            }
            this.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityDisplayName(String enterpriseManagerEntityDisplayName) {
            if (enterpriseManagerEntityDisplayName == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "enterpriseManagerEntityDisplayName");
            }
            this.enterpriseManagerEntityDisplayName = enterpriseManagerEntityDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityIdentifier(String enterpriseManagerEntityIdentifier) {
            if (enterpriseManagerEntityIdentifier == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "enterpriseManagerEntityIdentifier");
            }
            this.enterpriseManagerEntityIdentifier = enterpriseManagerEntityIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityName(String enterpriseManagerEntityName) {
            if (enterpriseManagerEntityName == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "enterpriseManagerEntityName");
            }
            this.enterpriseManagerEntityName = enterpriseManagerEntityName;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerEntityType(String enterpriseManagerEntityType) {
            if (enterpriseManagerEntityType == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "enterpriseManagerEntityType");
            }
            this.enterpriseManagerEntityType = enterpriseManagerEntityType;
            return this;
        }
        @CustomType.Setter
        public Builder enterpriseManagerIdentifier(String enterpriseManagerIdentifier) {
            if (enterpriseManagerIdentifier == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "enterpriseManagerIdentifier");
            }
            this.enterpriseManagerIdentifier = enterpriseManagerIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder entitySource(String entitySource) {
            if (entitySource == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "entitySource");
            }
            this.entitySource = entitySource;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInsightId(String exadataInsightId) {
            if (exadataInsightId == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "exadataInsightId");
            }
            this.exadataInsightId = exadataInsightId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostDisplayName(String hostDisplayName) {
            if (hostDisplayName == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "hostDisplayName");
            }
            this.hostDisplayName = hostDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder hostInsightId(String hostInsightId) {
            if (hostInsightId == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "hostInsightId");
            }
            this.hostInsightId = hostInsightId;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder hostType(String hostType) {
            if (hostType == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "hostType");
            }
            this.hostType = hostType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            if (managementAgentId == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "managementAgentId");
            }
            this.managementAgentId = managementAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder platformName(String platformName) {
            if (platformName == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "platformName");
            }
            this.platformName = platformName;
            return this;
        }
        @CustomType.Setter
        public Builder platformType(String platformType) {
            if (platformType == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "platformType");
            }
            this.platformType = platformType;
            return this;
        }
        @CustomType.Setter
        public Builder platformVersion(String platformVersion) {
            if (platformVersion == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "platformVersion");
            }
            this.platformVersion = platformVersion;
            return this;
        }
        @CustomType.Setter
        public Builder processorCount(Integer processorCount) {
            if (processorCount == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "processorCount");
            }
            this.processorCount = processorCount;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetHostInsightResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetHostInsightResult build() {
            final var _resultValue = new GetHostInsightResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeId = computeId;
            _resultValue.definedTags = definedTags;
            _resultValue.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            _resultValue.enterpriseManagerEntityDisplayName = enterpriseManagerEntityDisplayName;
            _resultValue.enterpriseManagerEntityIdentifier = enterpriseManagerEntityIdentifier;
            _resultValue.enterpriseManagerEntityName = enterpriseManagerEntityName;
            _resultValue.enterpriseManagerEntityType = enterpriseManagerEntityType;
            _resultValue.enterpriseManagerIdentifier = enterpriseManagerIdentifier;
            _resultValue.entitySource = entitySource;
            _resultValue.exadataInsightId = exadataInsightId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostDisplayName = hostDisplayName;
            _resultValue.hostInsightId = hostInsightId;
            _resultValue.hostName = hostName;
            _resultValue.hostType = hostType;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.managementAgentId = managementAgentId;
            _resultValue.platformName = platformName;
            _resultValue.platformType = platformType;
            _resultValue.platformVersion = platformVersion;
            _resultValue.processorCount = processorCount;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
