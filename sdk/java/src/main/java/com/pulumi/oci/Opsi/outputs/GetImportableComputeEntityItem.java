// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetImportableComputeEntityItem {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The [Display Name](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Display) of the Compute Instance
     * 
     */
    private String computeDisplayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute Instance
     * 
     */
    private String computeId;
    /**
     * @return Source of the importable agent entity.
     * 
     */
    private String entitySource;
    /**
     * @return The host name. The host name is unique amongst the hosts managed by the same management agent.
     * 
     */
    private String hostName;
    /**
     * @return Platform type. Supported platformType(s) for MACS-managed external host insight: [LINUX, SOLARIS, WINDOWS]. Supported platformType(s) for MACS-managed cloud host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX, WINDOWS].
     * 
     */
    private String platformType;

    private GetImportableComputeEntityItem() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [Display Name](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Display) of the Compute Instance
     * 
     */
    public String computeDisplayName() {
        return this.computeDisplayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute Instance
     * 
     */
    public String computeId() {
        return this.computeId;
    }
    /**
     * @return Source of the importable agent entity.
     * 
     */
    public String entitySource() {
        return this.entitySource;
    }
    /**
     * @return The host name. The host name is unique amongst the hosts managed by the same management agent.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return Platform type. Supported platformType(s) for MACS-managed external host insight: [LINUX, SOLARIS, WINDOWS]. Supported platformType(s) for MACS-managed cloud host insight: [LINUX]. Supported platformType(s) for EM-managed external host insight: [LINUX, SOLARIS, SUNOS, ZLINUX, WINDOWS].
     * 
     */
    public String platformType() {
        return this.platformType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImportableComputeEntityItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String computeDisplayName;
        private String computeId;
        private String entitySource;
        private String hostName;
        private String platformType;
        public Builder() {}
        public Builder(GetImportableComputeEntityItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeDisplayName = defaults.computeDisplayName;
    	      this.computeId = defaults.computeId;
    	      this.entitySource = defaults.entitySource;
    	      this.hostName = defaults.hostName;
    	      this.platformType = defaults.platformType;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetImportableComputeEntityItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeDisplayName(String computeDisplayName) {
            if (computeDisplayName == null) {
              throw new MissingRequiredPropertyException("GetImportableComputeEntityItem", "computeDisplayName");
            }
            this.computeDisplayName = computeDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder computeId(String computeId) {
            if (computeId == null) {
              throw new MissingRequiredPropertyException("GetImportableComputeEntityItem", "computeId");
            }
            this.computeId = computeId;
            return this;
        }
        @CustomType.Setter
        public Builder entitySource(String entitySource) {
            if (entitySource == null) {
              throw new MissingRequiredPropertyException("GetImportableComputeEntityItem", "entitySource");
            }
            this.entitySource = entitySource;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetImportableComputeEntityItem", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder platformType(String platformType) {
            if (platformType == null) {
              throw new MissingRequiredPropertyException("GetImportableComputeEntityItem", "platformType");
            }
            this.platformType = platformType;
            return this;
        }
        public GetImportableComputeEntityItem build() {
            final var _resultValue = new GetImportableComputeEntityItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeDisplayName = computeDisplayName;
            _resultValue.computeId = computeId;
            _resultValue.entitySource = entitySource;
            _resultValue.hostName = hostName;
            _resultValue.platformType = platformType;
            return _resultValue;
        }
    }
}
