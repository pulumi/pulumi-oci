// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Opsi.outputs.GetNewsReportContentType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNewsReportResult {
    /**
     * @return A flag to consider the resources within a given compartment and all sub-compartments.
     * 
     */
    private Boolean areChildCompartmentsIncluded;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Content types that the news report can handle.
     * 
     */
    private List<GetNewsReportContentType> contentTypes;
    /**
     * @return Day of the week in which the news report will be sent if the frequency is set to WEEKLY.
     * 
     */
    private String dayOfWeek;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The description of the news report.
     * 
     */
    private String description;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the news report resource.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Language of the news report.
     * 
     */
    private String locale;
    /**
     * @return The news report name.
     * 
     */
    private String name;
    /**
     * @return News report frequency.
     * 
     */
    private String newsFrequency;
    private String newsReportId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ONS topic.
     * 
     */
    private String onsTopicId;
    /**
     * @return The current state of the news report.
     * 
     */
    private String state;
    /**
     * @return Indicates the status of a news report in Operations Insights.
     * 
     */
    private String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time the the news report was first enabled. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time the news report was updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetNewsReportResult() {}
    /**
     * @return A flag to consider the resources within a given compartment and all sub-compartments.
     * 
     */
    public Boolean areChildCompartmentsIncluded() {
        return this.areChildCompartmentsIncluded;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Content types that the news report can handle.
     * 
     */
    public List<GetNewsReportContentType> contentTypes() {
        return this.contentTypes;
    }
    /**
     * @return Day of the week in which the news report will be sent if the frequency is set to WEEKLY.
     * 
     */
    public String dayOfWeek() {
        return this.dayOfWeek;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the news report.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the news report resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Language of the news report.
     * 
     */
    public String locale() {
        return this.locale;
    }
    /**
     * @return The news report name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return News report frequency.
     * 
     */
    public String newsFrequency() {
        return this.newsFrequency;
    }
    public String newsReportId() {
        return this.newsReportId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ONS topic.
     * 
     */
    public String onsTopicId() {
        return this.onsTopicId;
    }
    /**
     * @return The current state of the news report.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Indicates the status of a news report in Operations Insights.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the news report was first enabled. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the news report was updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNewsReportResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean areChildCompartmentsIncluded;
        private String compartmentId;
        private List<GetNewsReportContentType> contentTypes;
        private String dayOfWeek;
        private Map<String,Object> definedTags;
        private String description;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String locale;
        private String name;
        private String newsFrequency;
        private String newsReportId;
        private String onsTopicId;
        private String state;
        private String status;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetNewsReportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areChildCompartmentsIncluded = defaults.areChildCompartmentsIncluded;
    	      this.compartmentId = defaults.compartmentId;
    	      this.contentTypes = defaults.contentTypes;
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.locale = defaults.locale;
    	      this.name = defaults.name;
    	      this.newsFrequency = defaults.newsFrequency;
    	      this.newsReportId = defaults.newsReportId;
    	      this.onsTopicId = defaults.onsTopicId;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder areChildCompartmentsIncluded(Boolean areChildCompartmentsIncluded) {
            if (areChildCompartmentsIncluded == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "areChildCompartmentsIncluded");
            }
            this.areChildCompartmentsIncluded = areChildCompartmentsIncluded;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder contentTypes(List<GetNewsReportContentType> contentTypes) {
            if (contentTypes == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "contentTypes");
            }
            this.contentTypes = contentTypes;
            return this;
        }
        public Builder contentTypes(GetNewsReportContentType... contentTypes) {
            return contentTypes(List.of(contentTypes));
        }
        @CustomType.Setter
        public Builder dayOfWeek(String dayOfWeek) {
            if (dayOfWeek == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "dayOfWeek");
            }
            this.dayOfWeek = dayOfWeek;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder locale(String locale) {
            if (locale == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "locale");
            }
            this.locale = locale;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder newsFrequency(String newsFrequency) {
            if (newsFrequency == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "newsFrequency");
            }
            this.newsFrequency = newsFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder newsReportId(String newsReportId) {
            if (newsReportId == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "newsReportId");
            }
            this.newsReportId = newsReportId;
            return this;
        }
        @CustomType.Setter
        public Builder onsTopicId(String onsTopicId) {
            if (onsTopicId == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "onsTopicId");
            }
            this.onsTopicId = onsTopicId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetNewsReportResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetNewsReportResult build() {
            final var _resultValue = new GetNewsReportResult();
            _resultValue.areChildCompartmentsIncluded = areChildCompartmentsIncluded;
            _resultValue.compartmentId = compartmentId;
            _resultValue.contentTypes = contentTypes;
            _resultValue.dayOfWeek = dayOfWeek;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.locale = locale;
            _resultValue.name = name;
            _resultValue.newsFrequency = newsFrequency;
            _resultValue.newsReportId = newsReportId;
            _resultValue.onsTopicId = onsTopicId;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
