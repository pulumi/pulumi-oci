// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOperationsInsightsWarehouseResourceUsageSummaryResult {
    /**
     * @return Number of OCPUs used by OPSI Warehouse ADW. Can be fractional.
     * 
     */
    private @Nullable Double cpuUsed;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String operationsInsightsWarehouseId;
    /**
     * @return Possible lifecycle states
     * 
     */
    private @Nullable String state;
    /**
     * @return Storage by OPSI Warehouse ADW in GB.
     * 
     */
    private @Nullable Double storageUsedInGbs;

    private GetOperationsInsightsWarehouseResourceUsageSummaryResult() {}
    /**
     * @return Number of OCPUs used by OPSI Warehouse ADW. Can be fractional.
     * 
     */
    public Optional<Double> cpuUsed() {
        return Optional.ofNullable(this.cpuUsed);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String operationsInsightsWarehouseId() {
        return this.operationsInsightsWarehouseId;
    }
    /**
     * @return Possible lifecycle states
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Storage by OPSI Warehouse ADW in GB.
     * 
     */
    public Optional<Double> storageUsedInGbs() {
        return Optional.ofNullable(this.storageUsedInGbs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOperationsInsightsWarehouseResourceUsageSummaryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double cpuUsed;
        private @Nullable String id;
        private String operationsInsightsWarehouseId;
        private @Nullable String state;
        private @Nullable Double storageUsedInGbs;
        public Builder() {}
        public Builder(GetOperationsInsightsWarehouseResourceUsageSummaryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuUsed = defaults.cpuUsed;
    	      this.id = defaults.id;
    	      this.operationsInsightsWarehouseId = defaults.operationsInsightsWarehouseId;
    	      this.state = defaults.state;
    	      this.storageUsedInGbs = defaults.storageUsedInGbs;
        }

        @CustomType.Setter
        public Builder cpuUsed(@Nullable Double cpuUsed) {
            this.cpuUsed = cpuUsed;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder operationsInsightsWarehouseId(String operationsInsightsWarehouseId) {
            this.operationsInsightsWarehouseId = Objects.requireNonNull(operationsInsightsWarehouseId);
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageUsedInGbs(@Nullable Double storageUsedInGbs) {
            this.storageUsedInGbs = storageUsedInGbs;
            return this;
        }
        public GetOperationsInsightsWarehouseResourceUsageSummaryResult build() {
            final var o = new GetOperationsInsightsWarehouseResourceUsageSummaryResult();
            o.cpuUsed = cpuUsed;
            o.id = id;
            o.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
            o.state = state;
            o.storageUsedInGbs = storageUsedInGbs;
            return o;
        }
    }
}
