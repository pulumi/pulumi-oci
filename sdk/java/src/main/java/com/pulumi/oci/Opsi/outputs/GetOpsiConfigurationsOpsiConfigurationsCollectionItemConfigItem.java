// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Opsi.outputs.GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItemMetadata;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem {
    /**
     * @return List of contexts in Operations Insights where this configuration item is applicable.
     * 
     */
    private List<String> applicableContexts;
    /**
     * @return Type of configuration item.
     * 
     */
    private String configItemType;
    /**
     * @return Value of configuration item.
     * 
     */
    private String defaultValue;
    /**
     * @return Configuration item metadata.
     * 
     */
    private List<GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItemMetadata> metadatas;
    /**
     * @return Name of configuration item.
     * 
     */
    private String name;
    /**
     * @return Value of configuration item.
     * 
     */
    private String value;

    private GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem() {}
    /**
     * @return List of contexts in Operations Insights where this configuration item is applicable.
     * 
     */
    public List<String> applicableContexts() {
        return this.applicableContexts;
    }
    /**
     * @return Type of configuration item.
     * 
     */
    public String configItemType() {
        return this.configItemType;
    }
    /**
     * @return Value of configuration item.
     * 
     */
    public String defaultValue() {
        return this.defaultValue;
    }
    /**
     * @return Configuration item metadata.
     * 
     */
    public List<GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItemMetadata> metadatas() {
        return this.metadatas;
    }
    /**
     * @return Name of configuration item.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Value of configuration item.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> applicableContexts;
        private String configItemType;
        private String defaultValue;
        private List<GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItemMetadata> metadatas;
        private String name;
        private String value;
        public Builder() {}
        public Builder(GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicableContexts = defaults.applicableContexts;
    	      this.configItemType = defaults.configItemType;
    	      this.defaultValue = defaults.defaultValue;
    	      this.metadatas = defaults.metadatas;
    	      this.name = defaults.name;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder applicableContexts(List<String> applicableContexts) {
            if (applicableContexts == null) {
              throw new MissingRequiredPropertyException("GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem", "applicableContexts");
            }
            this.applicableContexts = applicableContexts;
            return this;
        }
        public Builder applicableContexts(String... applicableContexts) {
            return applicableContexts(List.of(applicableContexts));
        }
        @CustomType.Setter
        public Builder configItemType(String configItemType) {
            if (configItemType == null) {
              throw new MissingRequiredPropertyException("GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem", "configItemType");
            }
            this.configItemType = configItemType;
            return this;
        }
        @CustomType.Setter
        public Builder defaultValue(String defaultValue) {
            if (defaultValue == null) {
              throw new MissingRequiredPropertyException("GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem", "defaultValue");
            }
            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(List<GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItemMetadata> metadatas) {
            if (metadatas == null) {
              throw new MissingRequiredPropertyException("GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem", "metadatas");
            }
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItemMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem", "value");
            }
            this.value = value;
            return this;
        }
        public GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem build() {
            final var _resultValue = new GetOpsiConfigurationsOpsiConfigurationsCollectionItemConfigItem();
            _resultValue.applicableContexts = applicableContexts;
            _resultValue.configItemType = configItemType;
            _resultValue.defaultValue = defaultValue;
            _resultValue.metadatas = metadatas;
            _resultValue.name = name;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
