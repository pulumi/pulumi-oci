// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetCategoriesCategoryCollectionItemRecommendationCount;
import com.pulumi.oci.Optimizer.outputs.GetCategoriesCategoryCollectionItemResourceCount;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCategoriesCategoryCollectionItem {
    /**
     * @return The OCID of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The name associated with the compartment.
     * 
     */
    private @Nullable String compartmentName;
    /**
     * @return Text describing the category.
     * 
     */
    private @Nullable String description;
    /**
     * @return The estimated cost savings, in dollars, for the category.
     * 
     */
    private @Nullable Double estimatedCostSaving;
    /**
     * @return Additional metadata key/value pairs for the category.
     * 
     */
    private @Nullable Map<String,Object> extendedMetadata;
    /**
     * @return The unique OCID of the category.
     * 
     */
    private @Nullable String id;
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    private @Nullable String name;
    /**
     * @return An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
     * 
     */
    private @Nullable List<GetCategoriesCategoryCollectionItemRecommendationCount> recommendationCounts;
    /**
     * @return An array of `ResourceCount` objects grouped by the status of the recommendation.
     * 
     */
    private @Nullable List<GetCategoriesCategoryCollectionItemResourceCount> resourceCounts;
    /**
     * @return A filter that returns results that match the lifecycle state specified.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the category details were created, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the category details were last updated, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetCategoriesCategoryCollectionItem() {}
    /**
     * @return The OCID of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name associated with the compartment.
     * 
     */
    public Optional<String> compartmentName() {
        return Optional.ofNullable(this.compartmentName);
    }
    /**
     * @return Text describing the category.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The estimated cost savings, in dollars, for the category.
     * 
     */
    public Optional<Double> estimatedCostSaving() {
        return Optional.ofNullable(this.estimatedCostSaving);
    }
    /**
     * @return Additional metadata key/value pairs for the category.
     * 
     */
    public Map<String,Object> extendedMetadata() {
        return this.extendedMetadata == null ? Map.of() : this.extendedMetadata;
    }
    /**
     * @return The unique OCID of the category.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
     * 
     */
    public List<GetCategoriesCategoryCollectionItemRecommendationCount> recommendationCounts() {
        return this.recommendationCounts == null ? List.of() : this.recommendationCounts;
    }
    /**
     * @return An array of `ResourceCount` objects grouped by the status of the recommendation.
     * 
     */
    public List<GetCategoriesCategoryCollectionItemResourceCount> resourceCounts() {
        return this.resourceCounts == null ? List.of() : this.resourceCounts;
    }
    /**
     * @return A filter that returns results that match the lifecycle state specified.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the category details were created, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the category details were last updated, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCategoriesCategoryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String compartmentName;
        private @Nullable String description;
        private @Nullable Double estimatedCostSaving;
        private @Nullable Map<String,Object> extendedMetadata;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable List<GetCategoriesCategoryCollectionItemRecommendationCount> recommendationCounts;
        private @Nullable List<GetCategoriesCategoryCollectionItemResourceCount> resourceCounts;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetCategoriesCategoryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentName = defaults.compartmentName;
    	      this.description = defaults.description;
    	      this.estimatedCostSaving = defaults.estimatedCostSaving;
    	      this.extendedMetadata = defaults.extendedMetadata;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.recommendationCounts = defaults.recommendationCounts;
    	      this.resourceCounts = defaults.resourceCounts;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentName(@Nullable String compartmentName) {
            this.compartmentName = compartmentName;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder estimatedCostSaving(@Nullable Double estimatedCostSaving) {
            this.estimatedCostSaving = estimatedCostSaving;
            return this;
        }
        @CustomType.Setter
        public Builder extendedMetadata(@Nullable Map<String,Object> extendedMetadata) {
            this.extendedMetadata = extendedMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationCounts(@Nullable List<GetCategoriesCategoryCollectionItemRecommendationCount> recommendationCounts) {
            this.recommendationCounts = recommendationCounts;
            return this;
        }
        public Builder recommendationCounts(GetCategoriesCategoryCollectionItemRecommendationCount... recommendationCounts) {
            return recommendationCounts(List.of(recommendationCounts));
        }
        @CustomType.Setter
        public Builder resourceCounts(@Nullable List<GetCategoriesCategoryCollectionItemResourceCount> resourceCounts) {
            this.resourceCounts = resourceCounts;
            return this;
        }
        public Builder resourceCounts(GetCategoriesCategoryCollectionItemResourceCount... resourceCounts) {
            return resourceCounts(List.of(resourceCounts));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetCategoriesCategoryCollectionItem build() {
            final var o = new GetCategoriesCategoryCollectionItem();
            o.compartmentId = compartmentId;
            o.compartmentName = compartmentName;
            o.description = description;
            o.estimatedCostSaving = estimatedCostSaving;
            o.extendedMetadata = extendedMetadata;
            o.id = id;
            o.name = name;
            o.recommendationCounts = recommendationCounts;
            o.resourceCounts = resourceCounts;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
