// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetHistoriesHistoryCollectionItemAction;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHistoriesHistoryCollectionItem {
    /**
     * @return Details about the recommended action.
     * 
     */
    private @Nullable List<GetHistoriesHistoryCollectionItemAction> actions;
    /**
     * @return The unique OCID associated with the category.
     * 
     */
    private @Nullable String categoryId;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The name assigned to the compartment.
     * 
     */
    private @Nullable String compartmentName;
    /**
     * @return The estimated cost savings, in dollars, for the resource action.
     * 
     */
    private @Nullable Double estimatedCostSaving;
    /**
     * @return Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     */
    private @Nullable Map<String,Object> extendedMetadata;
    /**
     * @return The unique OCID associated with the recommendation history.
     * 
     */
    private @Nullable String id;
    /**
     * @return Custom metadata key/value pairs for the resource action.
     * 
     */
    private @Nullable Map<String,Object> metadata;
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    private @Nullable String name;
    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    private @Nullable String recommendationId;
    /**
     * @return Optional. A filter that returns results that match the recommendation name specified.
     * 
     */
    private @Nullable String recommendationName;
    /**
     * @return The unique OCID associated with the resource action.
     * 
     */
    private @Nullable String resourceActionId;
    /**
     * @return The unique OCID associated with the resource.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return Optional. A filter that returns results that match the resource type specified.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return A filter that returns results that match the lifecycle state specified.
     * 
     */
    private @Nullable String state;
    /**
     * @return A filter that returns recommendations that match the status specified.
     * 
     */
    private @Nullable String status;
    /**
     * @return The date and time the recommendation history was created, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;

    private GetHistoriesHistoryCollectionItem() {}
    /**
     * @return Details about the recommended action.
     * 
     */
    public List<GetHistoriesHistoryCollectionItemAction> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    /**
     * @return The unique OCID associated with the category.
     * 
     */
    public Optional<String> categoryId() {
        return Optional.ofNullable(this.categoryId);
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name assigned to the compartment.
     * 
     */
    public Optional<String> compartmentName() {
        return Optional.ofNullable(this.compartmentName);
    }
    /**
     * @return The estimated cost savings, in dollars, for the resource action.
     * 
     */
    public Optional<Double> estimatedCostSaving() {
        return Optional.ofNullable(this.estimatedCostSaving);
    }
    /**
     * @return Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     */
    public Map<String,Object> extendedMetadata() {
        return this.extendedMetadata == null ? Map.of() : this.extendedMetadata;
    }
    /**
     * @return The unique OCID associated with the recommendation history.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Custom metadata key/value pairs for the resource action.
     * 
     */
    public Map<String,Object> metadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    public Optional<String> recommendationId() {
        return Optional.ofNullable(this.recommendationId);
    }
    /**
     * @return Optional. A filter that returns results that match the recommendation name specified.
     * 
     */
    public Optional<String> recommendationName() {
        return Optional.ofNullable(this.recommendationName);
    }
    /**
     * @return The unique OCID associated with the resource action.
     * 
     */
    public Optional<String> resourceActionId() {
        return Optional.ofNullable(this.resourceActionId);
    }
    /**
     * @return The unique OCID associated with the resource.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return Optional. A filter that returns results that match the resource type specified.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return A filter that returns results that match the lifecycle state specified.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return A filter that returns recommendations that match the status specified.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The date and time the recommendation history was created, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHistoriesHistoryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetHistoriesHistoryCollectionItemAction> actions;
        private @Nullable String categoryId;
        private @Nullable String compartmentId;
        private @Nullable String compartmentName;
        private @Nullable Double estimatedCostSaving;
        private @Nullable Map<String,Object> extendedMetadata;
        private @Nullable String id;
        private @Nullable Map<String,Object> metadata;
        private @Nullable String name;
        private @Nullable String recommendationId;
        private @Nullable String recommendationName;
        private @Nullable String resourceActionId;
        private @Nullable String resourceId;
        private @Nullable String resourceType;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetHistoriesHistoryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.categoryId = defaults.categoryId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentName = defaults.compartmentName;
    	      this.estimatedCostSaving = defaults.estimatedCostSaving;
    	      this.extendedMetadata = defaults.extendedMetadata;
    	      this.id = defaults.id;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.recommendationId = defaults.recommendationId;
    	      this.recommendationName = defaults.recommendationName;
    	      this.resourceActionId = defaults.resourceActionId;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder actions(@Nullable List<GetHistoriesHistoryCollectionItemAction> actions) {
            this.actions = actions;
            return this;
        }
        public Builder actions(GetHistoriesHistoryCollectionItemAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder categoryId(@Nullable String categoryId) {
            this.categoryId = categoryId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentName(@Nullable String compartmentName) {
            this.compartmentName = compartmentName;
            return this;
        }
        @CustomType.Setter
        public Builder estimatedCostSaving(@Nullable Double estimatedCostSaving) {
            this.estimatedCostSaving = estimatedCostSaving;
            return this;
        }
        @CustomType.Setter
        public Builder extendedMetadata(@Nullable Map<String,Object> extendedMetadata) {
            this.extendedMetadata = extendedMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(@Nullable Map<String,Object> metadata) {
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationId(@Nullable String recommendationId) {
            this.recommendationId = recommendationId;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationName(@Nullable String recommendationName) {
            this.recommendationName = recommendationName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceActionId(@Nullable String resourceActionId) {
            this.resourceActionId = resourceActionId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetHistoriesHistoryCollectionItem build() {
            final var o = new GetHistoriesHistoryCollectionItem();
            o.actions = actions;
            o.categoryId = categoryId;
            o.compartmentId = compartmentId;
            o.compartmentName = compartmentName;
            o.estimatedCostSaving = estimatedCostSaving;
            o.extendedMetadata = extendedMetadata;
            o.id = id;
            o.metadata = metadata;
            o.name = name;
            o.recommendationId = recommendationId;
            o.recommendationName = recommendationName;
            o.resourceActionId = resourceActionId;
            o.resourceId = resourceId;
            o.resourceType = resourceType;
            o.state = state;
            o.status = status;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
