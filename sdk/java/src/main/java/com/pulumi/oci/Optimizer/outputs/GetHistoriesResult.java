// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetHistoriesFilter;
import com.pulumi.oci.Optimizer.outputs.GetHistoriesHistoryCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHistoriesResult {
    /**
     * @return The OCID of the compartment.
     * 
     */
    private String compartmentId;
    private Boolean compartmentIdInSubtree;
    private @Nullable List<GetHistoriesFilter> filters;
    /**
     * @return The list of history_collection.
     * 
     */
    private @Nullable List<GetHistoriesHistoryCollection> historyCollections;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The name assigned to the resource.
     * 
     */
    private @Nullable String name;
    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    private @Nullable String recommendationId;
    /**
     * @return The name assigned to the recommendation.
     * 
     */
    private @Nullable String recommendationName;
    /**
     * @return The kind of resource.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The recommendation history&#39;s current state.
     * 
     */
    private @Nullable String state;
    /**
     * @return The current status of the resource action.
     * 
     */
    private @Nullable String status;

    private GetHistoriesResult() {}
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Boolean compartmentIdInSubtree() {
        return this.compartmentIdInSubtree;
    }
    public List<GetHistoriesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The list of history_collection.
     * 
     */
    public List<GetHistoriesHistoryCollection> historyCollections() {
        return this.historyCollections == null ? List.of() : this.historyCollections;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name assigned to the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    public Optional<String> recommendationId() {
        return Optional.ofNullable(this.recommendationId);
    }
    /**
     * @return The name assigned to the recommendation.
     * 
     */
    public Optional<String> recommendationName() {
        return Optional.ofNullable(this.recommendationName);
    }
    /**
     * @return The kind of resource.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The recommendation history&#39;s current state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The current status of the resource action.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHistoriesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Boolean compartmentIdInSubtree;
        private @Nullable List<GetHistoriesFilter> filters;
        private @Nullable List<GetHistoriesHistoryCollection> historyCollections;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String recommendationId;
        private @Nullable String recommendationName;
        private @Nullable String resourceType;
        private @Nullable String state;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetHistoriesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.historyCollections = defaults.historyCollections;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.recommendationId = defaults.recommendationId;
    	      this.recommendationName = defaults.recommendationName;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = Objects.requireNonNull(compartmentIdInSubtree);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetHistoriesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetHistoriesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder historyCollections(@Nullable List<GetHistoriesHistoryCollection> historyCollections) {
            this.historyCollections = historyCollections;
            return this;
        }
        public Builder historyCollections(GetHistoriesHistoryCollection... historyCollections) {
            return historyCollections(List.of(historyCollections));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationId(@Nullable String recommendationId) {
            this.recommendationId = recommendationId;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationName(@Nullable String recommendationName) {
            this.recommendationName = recommendationName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public GetHistoriesResult build() {
            final var o = new GetHistoriesResult();
            o.compartmentId = compartmentId;
            o.compartmentIdInSubtree = compartmentIdInSubtree;
            o.filters = filters;
            o.historyCollections = historyCollections;
            o.id = id;
            o.name = name;
            o.recommendationId = recommendationId;
            o.recommendationName = recommendationName;
            o.resourceType = resourceType;
            o.state = state;
            o.status = status;
            return o;
        }
    }
}
