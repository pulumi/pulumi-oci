// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetProfileLevelItemMetric;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProfileLevelItem {
    /**
     * @return The default aggregation interval (in days) for profiles using this profile level.
     * 
     */
    private @Nullable Integer defaultInterval;
    /**
     * @return The metrics that will be evaluated by profiles using this profile level.
     * 
     */
    private @Nullable List<GetProfileLevelItemMetric> metrics;
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    private @Nullable String name;
    /**
     * @return Optional. A filter that returns results that match the recommendation name specified.
     * 
     */
    private @Nullable String recommendationName;
    /**
     * @return The date and time the category details were created, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the category details were last updated, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return An array of aggregation intervals (in days) allowed for profiles using this profile level.
     * 
     */
    private @Nullable List<Integer> validIntervals;

    private GetProfileLevelItem() {}
    /**
     * @return The default aggregation interval (in days) for profiles using this profile level.
     * 
     */
    public Optional<Integer> defaultInterval() {
        return Optional.ofNullable(this.defaultInterval);
    }
    /**
     * @return The metrics that will be evaluated by profiles using this profile level.
     * 
     */
    public List<GetProfileLevelItemMetric> metrics() {
        return this.metrics == null ? List.of() : this.metrics;
    }
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Optional. A filter that returns results that match the recommendation name specified.
     * 
     */
    public Optional<String> recommendationName() {
        return Optional.ofNullable(this.recommendationName);
    }
    /**
     * @return The date and time the category details were created, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the category details were last updated, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return An array of aggregation intervals (in days) allowed for profiles using this profile level.
     * 
     */
    public List<Integer> validIntervals() {
        return this.validIntervals == null ? List.of() : this.validIntervals;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfileLevelItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer defaultInterval;
        private @Nullable List<GetProfileLevelItemMetric> metrics;
        private @Nullable String name;
        private @Nullable String recommendationName;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable List<Integer> validIntervals;
        public Builder() {}
        public Builder(GetProfileLevelItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultInterval = defaults.defaultInterval;
    	      this.metrics = defaults.metrics;
    	      this.name = defaults.name;
    	      this.recommendationName = defaults.recommendationName;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.validIntervals = defaults.validIntervals;
        }

        @CustomType.Setter
        public Builder defaultInterval(@Nullable Integer defaultInterval) {
            this.defaultInterval = defaultInterval;
            return this;
        }
        @CustomType.Setter
        public Builder metrics(@Nullable List<GetProfileLevelItemMetric> metrics) {
            this.metrics = metrics;
            return this;
        }
        public Builder metrics(GetProfileLevelItemMetric... metrics) {
            return metrics(List.of(metrics));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationName(@Nullable String recommendationName) {
            this.recommendationName = recommendationName;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder validIntervals(@Nullable List<Integer> validIntervals) {
            this.validIntervals = validIntervals;
            return this;
        }
        public Builder validIntervals(Integer... validIntervals) {
            return validIntervals(List.of(validIntervals));
        }
        public GetProfileLevelItem build() {
            final var o = new GetProfileLevelItem();
            o.defaultInterval = defaultInterval;
            o.metrics = metrics;
            o.name = name;
            o.recommendationName = recommendationName;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.validIntervals = validIntervals;
            return o;
        }
    }
}
