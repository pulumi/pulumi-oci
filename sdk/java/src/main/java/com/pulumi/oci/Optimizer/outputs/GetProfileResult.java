// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetProfileLevelsConfiguration;
import com.pulumi.oci.Optimizer.outputs.GetProfileTargetCompartment;
import com.pulumi.oci.Optimizer.outputs.GetProfileTargetTag;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetProfileResult {
    /**
     * @return The time period over which to collect data for the recommendations, measured in number of days.
     * 
     */
    private Integer aggregationIntervalInDays;
    /**
     * @return The OCID of the tenancy. The tenancy is the root compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Text describing the profile. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The unique OCID of the profile.
     * 
     */
    private String id;
    /**
     * @return A list of configuration levels for each recommendation.
     * 
     */
    private List<GetProfileLevelsConfiguration> levelsConfigurations;
    /**
     * @return The name assigned to the profile. Avoid entering confidential information.
     * 
     */
    private String name;
    private String profileId;
    /**
     * @return The profile&#39;s current state.
     * 
     */
    private String state;
    /**
     * @return Optional. The compartments specified in the profile override for a recommendation.
     * 
     */
    private List<GetProfileTargetCompartment> targetCompartments;
    /**
     * @return Optional. The tags specified in the profile override for a recommendation.
     * 
     */
    private List<GetProfileTargetTag> targetTags;
    /**
     * @return The date and time the profile was created, in the format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the profile was last updated, in the format defined by RFC3339.
     * 
     */
    private String timeUpdated;

    private GetProfileResult() {}
    /**
     * @return The time period over which to collect data for the recommendations, measured in number of days.
     * 
     */
    public Integer aggregationIntervalInDays() {
        return this.aggregationIntervalInDays;
    }
    /**
     * @return The OCID of the tenancy. The tenancy is the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Text describing the profile. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The unique OCID of the profile.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of configuration levels for each recommendation.
     * 
     */
    public List<GetProfileLevelsConfiguration> levelsConfigurations() {
        return this.levelsConfigurations;
    }
    /**
     * @return The name assigned to the profile. Avoid entering confidential information.
     * 
     */
    public String name() {
        return this.name;
    }
    public String profileId() {
        return this.profileId;
    }
    /**
     * @return The profile&#39;s current state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Optional. The compartments specified in the profile override for a recommendation.
     * 
     */
    public List<GetProfileTargetCompartment> targetCompartments() {
        return this.targetCompartments;
    }
    /**
     * @return Optional. The tags specified in the profile override for a recommendation.
     * 
     */
    public List<GetProfileTargetTag> targetTags() {
        return this.targetTags;
    }
    /**
     * @return The date and time the profile was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the profile was last updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer aggregationIntervalInDays;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetProfileLevelsConfiguration> levelsConfigurations;
        private String name;
        private String profileId;
        private String state;
        private List<GetProfileTargetCompartment> targetCompartments;
        private List<GetProfileTargetTag> targetTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationIntervalInDays = defaults.aggregationIntervalInDays;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.levelsConfigurations = defaults.levelsConfigurations;
    	      this.name = defaults.name;
    	      this.profileId = defaults.profileId;
    	      this.state = defaults.state;
    	      this.targetCompartments = defaults.targetCompartments;
    	      this.targetTags = defaults.targetTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder aggregationIntervalInDays(Integer aggregationIntervalInDays) {
            this.aggregationIntervalInDays = Objects.requireNonNull(aggregationIntervalInDays);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder levelsConfigurations(List<GetProfileLevelsConfiguration> levelsConfigurations) {
            this.levelsConfigurations = Objects.requireNonNull(levelsConfigurations);
            return this;
        }
        public Builder levelsConfigurations(GetProfileLevelsConfiguration... levelsConfigurations) {
            return levelsConfigurations(List.of(levelsConfigurations));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder profileId(String profileId) {
            this.profileId = Objects.requireNonNull(profileId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder targetCompartments(List<GetProfileTargetCompartment> targetCompartments) {
            this.targetCompartments = Objects.requireNonNull(targetCompartments);
            return this;
        }
        public Builder targetCompartments(GetProfileTargetCompartment... targetCompartments) {
            return targetCompartments(List.of(targetCompartments));
        }
        @CustomType.Setter
        public Builder targetTags(List<GetProfileTargetTag> targetTags) {
            this.targetTags = Objects.requireNonNull(targetTags);
            return this;
        }
        public Builder targetTags(GetProfileTargetTag... targetTags) {
            return targetTags(List.of(targetTags));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetProfileResult build() {
            final var o = new GetProfileResult();
            o.aggregationIntervalInDays = aggregationIntervalInDays;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.freeformTags = freeformTags;
            o.id = id;
            o.levelsConfigurations = levelsConfigurations;
            o.name = name;
            o.profileId = profileId;
            o.state = state;
            o.targetCompartments = targetCompartments;
            o.targetTags = targetTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
