// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategyParametersDefinition {
    /**
     * @return A default value used for the strategy parameter.
     * 
     */
    private @Nullable List<Object> defaultValues;
    /**
     * @return Text describing the strategy parameter.
     * 
     */
    private @Nullable String description;
    /**
     * @return Whether this parameter is required.
     * 
     */
    private @Nullable Boolean isRequired;
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    private @Nullable String name;
    /**
     * @return The list of possible values used for these strategy parameters.
     * 
     */
    private @Nullable List<Object> possibleValues;
    /**
     * @return The type of strategy parameter.
     * 
     */
    private @Nullable String type;

    private GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategyParametersDefinition() {}
    /**
     * @return A default value used for the strategy parameter.
     * 
     */
    public List<Object> defaultValues() {
        return this.defaultValues == null ? List.of() : this.defaultValues;
    }
    /**
     * @return Text describing the strategy parameter.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Whether this parameter is required.
     * 
     */
    public Optional<Boolean> isRequired() {
        return Optional.ofNullable(this.isRequired);
    }
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of possible values used for these strategy parameters.
     * 
     */
    public List<Object> possibleValues() {
        return this.possibleValues == null ? List.of() : this.possibleValues;
    }
    /**
     * @return The type of strategy parameter.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategyParametersDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<Object> defaultValues;
        private @Nullable String description;
        private @Nullable Boolean isRequired;
        private @Nullable String name;
        private @Nullable List<Object> possibleValues;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategyParametersDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValues = defaults.defaultValues;
    	      this.description = defaults.description;
    	      this.isRequired = defaults.isRequired;
    	      this.name = defaults.name;
    	      this.possibleValues = defaults.possibleValues;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder defaultValues(@Nullable List<Object> defaultValues) {
            this.defaultValues = defaultValues;
            return this;
        }
        public Builder defaultValues(Object... defaultValues) {
            return defaultValues(List.of(defaultValues));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder isRequired(@Nullable Boolean isRequired) {
            this.isRequired = isRequired;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder possibleValues(@Nullable List<Object> possibleValues) {
            this.possibleValues = possibleValues;
            return this;
        }
        public Builder possibleValues(Object... possibleValues) {
            return possibleValues(List.of(possibleValues));
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategyParametersDefinition build() {
            final var o = new GetRecommendationStrategiesRecommendationStrategyCollectionItemStrategyParametersDefinition();
            o.defaultValues = defaultValues;
            o.description = description;
            o.isRequired = isRequired;
            o.name = name;
            o.possibleValues = possibleValues;
            o.type = type;
            return o;
        }
    }
}
