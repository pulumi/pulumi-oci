// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetRecommendationStrategiesFilter;
import com.pulumi.oci.Optimizer.outputs.GetRecommendationStrategiesRecommendationStrategyCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRecommendationStrategiesResult {
    private String compartmentId;
    private Boolean compartmentIdInSubtree;
    private @Nullable List<GetRecommendationStrategiesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the strategy parameter.
     * 
     */
    private @Nullable String name;
    private @Nullable String recommendationName;
    /**
     * @return The list of recommendation_strategy_collection.
     * 
     */
    private List<GetRecommendationStrategiesRecommendationStrategyCollection> recommendationStrategyCollections;

    private GetRecommendationStrategiesResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public Boolean compartmentIdInSubtree() {
        return this.compartmentIdInSubtree;
    }
    public List<GetRecommendationStrategiesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the strategy parameter.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> recommendationName() {
        return Optional.ofNullable(this.recommendationName);
    }
    /**
     * @return The list of recommendation_strategy_collection.
     * 
     */
    public List<GetRecommendationStrategiesRecommendationStrategyCollection> recommendationStrategyCollections() {
        return this.recommendationStrategyCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecommendationStrategiesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Boolean compartmentIdInSubtree;
        private @Nullable List<GetRecommendationStrategiesFilter> filters;
        private String id;
        private @Nullable String name;
        private @Nullable String recommendationName;
        private List<GetRecommendationStrategiesRecommendationStrategyCollection> recommendationStrategyCollections;
        public Builder() {}
        public Builder(GetRecommendationStrategiesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.recommendationName = defaults.recommendationName;
    	      this.recommendationStrategyCollections = defaults.recommendationStrategyCollections;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = Objects.requireNonNull(compartmentIdInSubtree);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetRecommendationStrategiesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetRecommendationStrategiesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationName(@Nullable String recommendationName) {
            this.recommendationName = recommendationName;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationStrategyCollections(List<GetRecommendationStrategiesRecommendationStrategyCollection> recommendationStrategyCollections) {
            this.recommendationStrategyCollections = Objects.requireNonNull(recommendationStrategyCollections);
            return this;
        }
        public Builder recommendationStrategyCollections(GetRecommendationStrategiesRecommendationStrategyCollection... recommendationStrategyCollections) {
            return recommendationStrategyCollections(List.of(recommendationStrategyCollections));
        }
        public GetRecommendationStrategiesResult build() {
            final var _resultValue = new GetRecommendationStrategiesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.recommendationName = recommendationName;
            _resultValue.recommendationStrategyCollections = recommendationStrategyCollections;
            return _resultValue;
        }
    }
}
