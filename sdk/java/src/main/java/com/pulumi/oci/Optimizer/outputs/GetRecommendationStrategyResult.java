// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Optimizer.outputs.GetRecommendationStrategyItem;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRecommendationStrategyResult {
    private String compartmentId;
    private Boolean compartmentIdInSubtree;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A collection of recommendation strategy summaries.
     * 
     */
    private List<GetRecommendationStrategyItem> items;
    /**
     * @return The name of the strategy parameter.
     * 
     */
    private @Nullable String name;
    private @Nullable String recommendationName;

    private GetRecommendationStrategyResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public Boolean compartmentIdInSubtree() {
        return this.compartmentIdInSubtree;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A collection of recommendation strategy summaries.
     * 
     */
    public List<GetRecommendationStrategyItem> items() {
        return this.items;
    }
    /**
     * @return The name of the strategy parameter.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> recommendationName() {
        return Optional.ofNullable(this.recommendationName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecommendationStrategyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Boolean compartmentIdInSubtree;
        private String id;
        private List<GetRecommendationStrategyItem> items;
        private @Nullable String name;
        private @Nullable String recommendationName;
        public Builder() {}
        public Builder(GetRecommendationStrategyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.name = defaults.name;
    	      this.recommendationName = defaults.recommendationName;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetRecommendationStrategyResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            if (compartmentIdInSubtree == null) {
              throw new MissingRequiredPropertyException("GetRecommendationStrategyResult", "compartmentIdInSubtree");
            }
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRecommendationStrategyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetRecommendationStrategyItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetRecommendationStrategyResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetRecommendationStrategyItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationName(@Nullable String recommendationName) {

            this.recommendationName = recommendationName;
            return this;
        }
        public GetRecommendationStrategyResult build() {
            final var _resultValue = new GetRecommendationStrategyResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.name = name;
            _resultValue.recommendationName = recommendationName;
            return _resultValue;
        }
    }
}
