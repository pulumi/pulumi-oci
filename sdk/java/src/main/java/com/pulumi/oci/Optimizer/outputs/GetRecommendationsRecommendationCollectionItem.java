// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetRecommendationsRecommendationCollectionItemResourceCount;
import com.pulumi.oci.Optimizer.outputs.GetRecommendationsRecommendationCollectionItemSupportedLevel;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRecommendationsRecommendationCollectionItem {
    /**
     * @return The unique OCID associated with the category.
     * 
     */
    private @Nullable String categoryId;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Text describing the recommendation.
     * 
     */
    private @Nullable String description;
    /**
     * @return The estimated cost savings, in dollars, for the recommendation.
     * 
     */
    private @Nullable Double estimatedCostSaving;
    /**
     * @return Additional metadata key/value pairs for the recommendation.
     * 
     */
    private @Nullable Map<String,Object> extendedMetadata;
    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    private @Nullable String id;
    /**
     * @return The level of importance assigned to the recommendation.
     * 
     */
    private @Nullable String importance;
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    private @Nullable String name;
    private @Nullable String recommendationId;
    /**
     * @return An array of `ResourceCount` objects grouped by the status of the resource actions.
     * 
     */
    private @Nullable List<GetRecommendationsRecommendationCollectionItemResourceCount> resourceCounts;
    /**
     * @return A filter that returns results that match the lifecycle state specified.
     * 
     */
    private @Nullable String state;
    /**
     * @return A filter that returns recommendations that match the status specified.
     * 
     */
    private @Nullable String status;
    /**
     * @return Optional. The profile levels supported by a recommendation. For example, profile level values could be `Low`, `Medium`, and `High`. Not all recommendations support this field.
     * 
     */
    private @Nullable List<GetRecommendationsRecommendationCollectionItemSupportedLevel> supportedLevels;
    /**
     * @return The date and time the recommendation details were created, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time that the recommendation entered its current status. The format is defined by RFC3339.
     * 
     */
    private @Nullable String timeStatusBegin;
    /**
     * @return The date and time the current status will change. The format is defined by RFC3339.
     * 
     */
    private @Nullable String timeStatusEnd;
    /**
     * @return The date and time the recommendation details were last updated, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetRecommendationsRecommendationCollectionItem() {}
    /**
     * @return The unique OCID associated with the category.
     * 
     */
    public Optional<String> categoryId() {
        return Optional.ofNullable(this.categoryId);
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Text describing the recommendation.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The estimated cost savings, in dollars, for the recommendation.
     * 
     */
    public Optional<Double> estimatedCostSaving() {
        return Optional.ofNullable(this.estimatedCostSaving);
    }
    /**
     * @return Additional metadata key/value pairs for the recommendation.
     * 
     */
    public Map<String,Object> extendedMetadata() {
        return this.extendedMetadata == null ? Map.of() : this.extendedMetadata;
    }
    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The level of importance assigned to the recommendation.
     * 
     */
    public Optional<String> importance() {
        return Optional.ofNullable(this.importance);
    }
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> recommendationId() {
        return Optional.ofNullable(this.recommendationId);
    }
    /**
     * @return An array of `ResourceCount` objects grouped by the status of the resource actions.
     * 
     */
    public List<GetRecommendationsRecommendationCollectionItemResourceCount> resourceCounts() {
        return this.resourceCounts == null ? List.of() : this.resourceCounts;
    }
    /**
     * @return A filter that returns results that match the lifecycle state specified.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return A filter that returns recommendations that match the status specified.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Optional. The profile levels supported by a recommendation. For example, profile level values could be `Low`, `Medium`, and `High`. Not all recommendations support this field.
     * 
     */
    public List<GetRecommendationsRecommendationCollectionItemSupportedLevel> supportedLevels() {
        return this.supportedLevels == null ? List.of() : this.supportedLevels;
    }
    /**
     * @return The date and time the recommendation details were created, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time that the recommendation entered its current status. The format is defined by RFC3339.
     * 
     */
    public Optional<String> timeStatusBegin() {
        return Optional.ofNullable(this.timeStatusBegin);
    }
    /**
     * @return The date and time the current status will change. The format is defined by RFC3339.
     * 
     */
    public Optional<String> timeStatusEnd() {
        return Optional.ofNullable(this.timeStatusEnd);
    }
    /**
     * @return The date and time the recommendation details were last updated, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecommendationsRecommendationCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String categoryId;
        private @Nullable String compartmentId;
        private @Nullable String description;
        private @Nullable Double estimatedCostSaving;
        private @Nullable Map<String,Object> extendedMetadata;
        private @Nullable String id;
        private @Nullable String importance;
        private @Nullable String name;
        private @Nullable String recommendationId;
        private @Nullable List<GetRecommendationsRecommendationCollectionItemResourceCount> resourceCounts;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable List<GetRecommendationsRecommendationCollectionItemSupportedLevel> supportedLevels;
        private @Nullable String timeCreated;
        private @Nullable String timeStatusBegin;
        private @Nullable String timeStatusEnd;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetRecommendationsRecommendationCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categoryId = defaults.categoryId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.description = defaults.description;
    	      this.estimatedCostSaving = defaults.estimatedCostSaving;
    	      this.extendedMetadata = defaults.extendedMetadata;
    	      this.id = defaults.id;
    	      this.importance = defaults.importance;
    	      this.name = defaults.name;
    	      this.recommendationId = defaults.recommendationId;
    	      this.resourceCounts = defaults.resourceCounts;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.supportedLevels = defaults.supportedLevels;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeStatusBegin = defaults.timeStatusBegin;
    	      this.timeStatusEnd = defaults.timeStatusEnd;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder categoryId(@Nullable String categoryId) {
            this.categoryId = categoryId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder estimatedCostSaving(@Nullable Double estimatedCostSaving) {
            this.estimatedCostSaving = estimatedCostSaving;
            return this;
        }
        @CustomType.Setter
        public Builder extendedMetadata(@Nullable Map<String,Object> extendedMetadata) {
            this.extendedMetadata = extendedMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder importance(@Nullable String importance) {
            this.importance = importance;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationId(@Nullable String recommendationId) {
            this.recommendationId = recommendationId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceCounts(@Nullable List<GetRecommendationsRecommendationCollectionItemResourceCount> resourceCounts) {
            this.resourceCounts = resourceCounts;
            return this;
        }
        public Builder resourceCounts(GetRecommendationsRecommendationCollectionItemResourceCount... resourceCounts) {
            return resourceCounts(List.of(resourceCounts));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder supportedLevels(@Nullable List<GetRecommendationsRecommendationCollectionItemSupportedLevel> supportedLevels) {
            this.supportedLevels = supportedLevels;
            return this;
        }
        public Builder supportedLevels(GetRecommendationsRecommendationCollectionItemSupportedLevel... supportedLevels) {
            return supportedLevels(List.of(supportedLevels));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeStatusBegin(@Nullable String timeStatusBegin) {
            this.timeStatusBegin = timeStatusBegin;
            return this;
        }
        @CustomType.Setter
        public Builder timeStatusEnd(@Nullable String timeStatusEnd) {
            this.timeStatusEnd = timeStatusEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetRecommendationsRecommendationCollectionItem build() {
            final var o = new GetRecommendationsRecommendationCollectionItem();
            o.categoryId = categoryId;
            o.compartmentId = compartmentId;
            o.description = description;
            o.estimatedCostSaving = estimatedCostSaving;
            o.extendedMetadata = extendedMetadata;
            o.id = id;
            o.importance = importance;
            o.name = name;
            o.recommendationId = recommendationId;
            o.resourceCounts = resourceCounts;
            o.state = state;
            o.status = status;
            o.supportedLevels = supportedLevels;
            o.timeCreated = timeCreated;
            o.timeStatusBegin = timeStatusBegin;
            o.timeStatusEnd = timeStatusEnd;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
