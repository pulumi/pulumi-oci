// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Optimizer.outputs.GetResourceActionsFilter;
import com.pulumi.oci.Optimizer.outputs.GetResourceActionsResourceActionCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResourceActionsResult {
    private @Nullable List<String> childTenancyIds;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private String compartmentId;
    private Boolean compartmentIdInSubtree;
    private @Nullable List<GetResourceActionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean includeOrganization;
    private @Nullable Boolean includeResourceMetadata;
    /**
     * @return The name assigned to the resource.
     * 
     */
    private @Nullable String name;
    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    private @Nullable String recommendationId;
    private @Nullable String recommendationName;
    /**
     * @return The list of resource_action_collection.
     * 
     */
    private List<GetResourceActionsResourceActionCollection> resourceActionCollections;
    /**
     * @return The kind of resource.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The resource action&#39;s current state.
     * 
     */
    private @Nullable String state;
    /**
     * @return The current status of the resource action.
     * 
     */
    private @Nullable String status;

    private GetResourceActionsResult() {}
    public List<String> childTenancyIds() {
        return this.childTenancyIds == null ? List.of() : this.childTenancyIds;
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Boolean compartmentIdInSubtree() {
        return this.compartmentIdInSubtree;
    }
    public List<GetResourceActionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> includeOrganization() {
        return Optional.ofNullable(this.includeOrganization);
    }
    public Optional<Boolean> includeResourceMetadata() {
        return Optional.ofNullable(this.includeResourceMetadata);
    }
    /**
     * @return The name assigned to the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    public Optional<String> recommendationId() {
        return Optional.ofNullable(this.recommendationId);
    }
    public Optional<String> recommendationName() {
        return Optional.ofNullable(this.recommendationName);
    }
    /**
     * @return The list of resource_action_collection.
     * 
     */
    public List<GetResourceActionsResourceActionCollection> resourceActionCollections() {
        return this.resourceActionCollections;
    }
    /**
     * @return The kind of resource.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The resource action&#39;s current state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The current status of the resource action.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceActionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> childTenancyIds;
        private String compartmentId;
        private Boolean compartmentIdInSubtree;
        private @Nullable List<GetResourceActionsFilter> filters;
        private String id;
        private @Nullable Boolean includeOrganization;
        private @Nullable Boolean includeResourceMetadata;
        private @Nullable String name;
        private @Nullable String recommendationId;
        private @Nullable String recommendationName;
        private List<GetResourceActionsResourceActionCollection> resourceActionCollections;
        private @Nullable String resourceType;
        private @Nullable String state;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetResourceActionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childTenancyIds = defaults.childTenancyIds;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.includeOrganization = defaults.includeOrganization;
    	      this.includeResourceMetadata = defaults.includeResourceMetadata;
    	      this.name = defaults.name;
    	      this.recommendationId = defaults.recommendationId;
    	      this.recommendationName = defaults.recommendationName;
    	      this.resourceActionCollections = defaults.resourceActionCollections;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder childTenancyIds(@Nullable List<String> childTenancyIds) {

            this.childTenancyIds = childTenancyIds;
            return this;
        }
        public Builder childTenancyIds(String... childTenancyIds) {
            return childTenancyIds(List.of(childTenancyIds));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetResourceActionsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            if (compartmentIdInSubtree == null) {
              throw new MissingRequiredPropertyException("GetResourceActionsResult", "compartmentIdInSubtree");
            }
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetResourceActionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetResourceActionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResourceActionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeOrganization(@Nullable Boolean includeOrganization) {

            this.includeOrganization = includeOrganization;
            return this;
        }
        @CustomType.Setter
        public Builder includeResourceMetadata(@Nullable Boolean includeResourceMetadata) {

            this.includeResourceMetadata = includeResourceMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationId(@Nullable String recommendationId) {

            this.recommendationId = recommendationId;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationName(@Nullable String recommendationName) {

            this.recommendationName = recommendationName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceActionCollections(List<GetResourceActionsResourceActionCollection> resourceActionCollections) {
            if (resourceActionCollections == null) {
              throw new MissingRequiredPropertyException("GetResourceActionsResult", "resourceActionCollections");
            }
            this.resourceActionCollections = resourceActionCollections;
            return this;
        }
        public Builder resourceActionCollections(GetResourceActionsResourceActionCollection... resourceActionCollections) {
            return resourceActionCollections(List.of(resourceActionCollections));
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetResourceActionsResult build() {
            final var _resultValue = new GetResourceActionsResult();
            _resultValue.childTenancyIds = childTenancyIds;
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.includeOrganization = includeOrganization;
            _resultValue.includeResourceMetadata = includeResourceMetadata;
            _resultValue.name = name;
            _resultValue.recommendationId = recommendationId;
            _resultValue.recommendationName = recommendationName;
            _resultValue.resourceActionCollections = resourceActionCollections;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
