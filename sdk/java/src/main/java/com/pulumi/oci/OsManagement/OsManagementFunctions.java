// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceEventReportArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceEventReportPlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupPlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupsArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupsPlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceModuleStreamsArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceModuleStreamsPlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstancePlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceStreamProfileArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceStreamProfilePlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstancesArgs;
import com.pulumi.oci.OsManagement.inputs.GetManagedInstancesPlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamPlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamProfileArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamProfilePlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourcePlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceStreamProfileArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceStreamProfilePlainArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourcesArgs;
import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourcesPlainArgs;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceEventReportResult;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceGroupResult;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceGroupsResult;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceModuleStreamsResult;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceResult;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceStreamProfileResult;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstancesResult;
import com.pulumi.oci.OsManagement.outputs.GetSoftwareSourceModuleStreamProfileResult;
import com.pulumi.oci.OsManagement.outputs.GetSoftwareSourceModuleStreamResult;
import com.pulumi.oci.OsManagement.outputs.GetSoftwareSourceResult;
import com.pulumi.oci.OsManagement.outputs.GetSoftwareSourceStreamProfileResult;
import com.pulumi.oci.OsManagement.outputs.GetSoftwareSourcesResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class OsManagementFunctions {
    /**
     * This data source provides details about a specific Managed Instance resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Managed Instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstance = OsManagementFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .managedInstanceId(oci_osmanagement_managed_instance.test_managed_instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceResult> getManagedInstance(GetManagedInstanceArgs args) {
        return getManagedInstance(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Managed Instance resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Managed Instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstance = OsManagementFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .managedInstanceId(oci_osmanagement_managed_instance.test_managed_instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceResult> getManagedInstancePlain(GetManagedInstancePlainArgs args) {
        return getManagedInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Managed Instance resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Managed Instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstance = OsManagementFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .managedInstanceId(oci_osmanagement_managed_instance.test_managed_instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceResult> getManagedInstance(GetManagedInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getManagedInstance:getManagedInstance", TypeShape.of(GetManagedInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Managed Instance resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Managed Instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstance = OsManagementFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .managedInstanceId(oci_osmanagement_managed_instance.test_managed_instance().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceResult> getManagedInstancePlain(GetManagedInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getManagedInstance:getManagedInstance", TypeShape.of(GetManagedInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Managed Instance Event Report resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Get summary information about events on this instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceEventReportArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceEventReport = OsManagementFunctions.getManagedInstanceEventReport(GetManagedInstanceEventReportArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .managedInstanceId(oci_osmanagement_managed_instance.test_managed_instance().id())
     *             .latestTimestampGreaterThanOrEqualTo(var_.managed_instance_event_report_latest_timestamp_greater_than_or_equal_to())
     *             .latestTimestampLessThan(var_.managed_instance_event_report_latest_timestamp_less_than())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceEventReportResult> getManagedInstanceEventReport(GetManagedInstanceEventReportArgs args) {
        return getManagedInstanceEventReport(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Managed Instance Event Report resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Get summary information about events on this instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceEventReportArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceEventReport = OsManagementFunctions.getManagedInstanceEventReport(GetManagedInstanceEventReportArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .managedInstanceId(oci_osmanagement_managed_instance.test_managed_instance().id())
     *             .latestTimestampGreaterThanOrEqualTo(var_.managed_instance_event_report_latest_timestamp_greater_than_or_equal_to())
     *             .latestTimestampLessThan(var_.managed_instance_event_report_latest_timestamp_less_than())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceEventReportResult> getManagedInstanceEventReportPlain(GetManagedInstanceEventReportPlainArgs args) {
        return getManagedInstanceEventReportPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Managed Instance Event Report resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Get summary information about events on this instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceEventReportArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceEventReport = OsManagementFunctions.getManagedInstanceEventReport(GetManagedInstanceEventReportArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .managedInstanceId(oci_osmanagement_managed_instance.test_managed_instance().id())
     *             .latestTimestampGreaterThanOrEqualTo(var_.managed_instance_event_report_latest_timestamp_greater_than_or_equal_to())
     *             .latestTimestampLessThan(var_.managed_instance_event_report_latest_timestamp_less_than())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceEventReportResult> getManagedInstanceEventReport(GetManagedInstanceEventReportArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getManagedInstanceEventReport:getManagedInstanceEventReport", TypeShape.of(GetManagedInstanceEventReportResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Managed Instance Event Report resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Get summary information about events on this instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceEventReportArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceEventReport = OsManagementFunctions.getManagedInstanceEventReport(GetManagedInstanceEventReportArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .managedInstanceId(oci_osmanagement_managed_instance.test_managed_instance().id())
     *             .latestTimestampGreaterThanOrEqualTo(var_.managed_instance_event_report_latest_timestamp_greater_than_or_equal_to())
     *             .latestTimestampLessThan(var_.managed_instance_event_report_latest_timestamp_less_than())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceEventReportResult> getManagedInstanceEventReportPlain(GetManagedInstanceEventReportPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getManagedInstanceEventReport:getManagedInstanceEventReport", TypeShape.of(GetManagedInstanceEventReportResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Managed Instance Group resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Managed Instance Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceGroup = OsManagementFunctions.getManagedInstanceGroup(GetManagedInstanceGroupArgs.builder()
     *             .managedInstanceGroupId(oci_osmanagement_managed_instance_group.test_managed_instance_group().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceGroupResult> getManagedInstanceGroup(GetManagedInstanceGroupArgs args) {
        return getManagedInstanceGroup(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Managed Instance Group resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Managed Instance Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceGroup = OsManagementFunctions.getManagedInstanceGroup(GetManagedInstanceGroupArgs.builder()
     *             .managedInstanceGroupId(oci_osmanagement_managed_instance_group.test_managed_instance_group().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceGroupResult> getManagedInstanceGroupPlain(GetManagedInstanceGroupPlainArgs args) {
        return getManagedInstanceGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Managed Instance Group resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Managed Instance Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceGroup = OsManagementFunctions.getManagedInstanceGroup(GetManagedInstanceGroupArgs.builder()
     *             .managedInstanceGroupId(oci_osmanagement_managed_instance_group.test_managed_instance_group().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceGroupResult> getManagedInstanceGroup(GetManagedInstanceGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getManagedInstanceGroup:getManagedInstanceGroup", TypeShape.of(GetManagedInstanceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Managed Instance Group resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Managed Instance Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceGroup = OsManagementFunctions.getManagedInstanceGroup(GetManagedInstanceGroupArgs.builder()
     *             .managedInstanceGroupId(oci_osmanagement_managed_instance_group.test_managed_instance_group().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceGroupResult> getManagedInstanceGroupPlain(GetManagedInstanceGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getManagedInstanceGroup:getManagedInstanceGroup", TypeShape.of(GetManagedInstanceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Managed Instance Groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceGroups = OsManagementFunctions.getManagedInstanceGroups(GetManagedInstanceGroupsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.managed_instance_group_display_name())
     *             .osFamily(var_.managed_instance_group_os_family())
     *             .state(var_.managed_instance_group_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceGroupsResult> getManagedInstanceGroups(GetManagedInstanceGroupsArgs args) {
        return getManagedInstanceGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Managed Instance Groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceGroups = OsManagementFunctions.getManagedInstanceGroups(GetManagedInstanceGroupsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.managed_instance_group_display_name())
     *             .osFamily(var_.managed_instance_group_os_family())
     *             .state(var_.managed_instance_group_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceGroupsResult> getManagedInstanceGroupsPlain(GetManagedInstanceGroupsPlainArgs args) {
        return getManagedInstanceGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Managed Instance Groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceGroups = OsManagementFunctions.getManagedInstanceGroups(GetManagedInstanceGroupsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.managed_instance_group_display_name())
     *             .osFamily(var_.managed_instance_group_os_family())
     *             .state(var_.managed_instance_group_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceGroupsResult> getManagedInstanceGroups(GetManagedInstanceGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", TypeShape.of(GetManagedInstanceGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Managed Instance Groups.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceGroups = OsManagementFunctions.getManagedInstanceGroups(GetManagedInstanceGroupsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.managed_instance_group_display_name())
     *             .osFamily(var_.managed_instance_group_os_family())
     *             .state(var_.managed_instance_group_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceGroupsResult> getManagedInstanceGroupsPlain(GetManagedInstanceGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", TypeShape.of(GetManagedInstanceGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Managed Instance Module Streams in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module streams, along with a summary of their
     * status, from a managed instance.  Filters may be applied to select
     * a subset of module streams based on the filter criteria.
     * 
     * The &#39;moduleName&#39; attribute filters against the name of a module.
     * It accepts strings of the format &#34;&lt;module&gt;&#34;.  If this attribute
     * is defined, only streams that belong to the specified module are
     * included in the result set.  If it is not defined, the request is
     * not subject to this filter.
     * 
     * The &#34;status&#34; attribute filters against the state of a module stream.
     * Valid values are &#34;ENABLED&#34;, &#34;DISABLED&#34;, and &#34;ACTIVE&#34;.  If the
     * attribute is set to &#34;ENABLED&#34;, only module streams that are enabled
     * are included in the result set.  If the attribute is set to &#34;DISABLED&#34;,
     * only module streams that are not enabled are included in the result
     * set.  If the attribute is set to &#34;ACTIVE&#34;, only module streams that
     * are active are included in the result set.  If the attribute is not
     * defined, the request is not subject to this filter.
     * 
     * When sorting by the display name, the result set is sorted first
     * by the module name and then by the stream name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceModuleStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceModuleStreams = OsManagementFunctions.getManagedInstanceModuleStreams(GetManagedInstanceModuleStreamsArgs.builder()
     *             .managedInstanceId(var_.managed_instance_id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.managed_instance_module_name())
     *             .streamName(var_.managed_instance_module_stream_name())
     *             .streamStatus(var_.managed_instance_module_stream_status())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceModuleStreamsResult> getManagedInstanceModuleStreams(GetManagedInstanceModuleStreamsArgs args) {
        return getManagedInstanceModuleStreams(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Managed Instance Module Streams in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module streams, along with a summary of their
     * status, from a managed instance.  Filters may be applied to select
     * a subset of module streams based on the filter criteria.
     * 
     * The &#39;moduleName&#39; attribute filters against the name of a module.
     * It accepts strings of the format &#34;&lt;module&gt;&#34;.  If this attribute
     * is defined, only streams that belong to the specified module are
     * included in the result set.  If it is not defined, the request is
     * not subject to this filter.
     * 
     * The &#34;status&#34; attribute filters against the state of a module stream.
     * Valid values are &#34;ENABLED&#34;, &#34;DISABLED&#34;, and &#34;ACTIVE&#34;.  If the
     * attribute is set to &#34;ENABLED&#34;, only module streams that are enabled
     * are included in the result set.  If the attribute is set to &#34;DISABLED&#34;,
     * only module streams that are not enabled are included in the result
     * set.  If the attribute is set to &#34;ACTIVE&#34;, only module streams that
     * are active are included in the result set.  If the attribute is not
     * defined, the request is not subject to this filter.
     * 
     * When sorting by the display name, the result set is sorted first
     * by the module name and then by the stream name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceModuleStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceModuleStreams = OsManagementFunctions.getManagedInstanceModuleStreams(GetManagedInstanceModuleStreamsArgs.builder()
     *             .managedInstanceId(var_.managed_instance_id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.managed_instance_module_name())
     *             .streamName(var_.managed_instance_module_stream_name())
     *             .streamStatus(var_.managed_instance_module_stream_status())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceModuleStreamsResult> getManagedInstanceModuleStreamsPlain(GetManagedInstanceModuleStreamsPlainArgs args) {
        return getManagedInstanceModuleStreamsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Managed Instance Module Streams in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module streams, along with a summary of their
     * status, from a managed instance.  Filters may be applied to select
     * a subset of module streams based on the filter criteria.
     * 
     * The &#39;moduleName&#39; attribute filters against the name of a module.
     * It accepts strings of the format &#34;&lt;module&gt;&#34;.  If this attribute
     * is defined, only streams that belong to the specified module are
     * included in the result set.  If it is not defined, the request is
     * not subject to this filter.
     * 
     * The &#34;status&#34; attribute filters against the state of a module stream.
     * Valid values are &#34;ENABLED&#34;, &#34;DISABLED&#34;, and &#34;ACTIVE&#34;.  If the
     * attribute is set to &#34;ENABLED&#34;, only module streams that are enabled
     * are included in the result set.  If the attribute is set to &#34;DISABLED&#34;,
     * only module streams that are not enabled are included in the result
     * set.  If the attribute is set to &#34;ACTIVE&#34;, only module streams that
     * are active are included in the result set.  If the attribute is not
     * defined, the request is not subject to this filter.
     * 
     * When sorting by the display name, the result set is sorted first
     * by the module name and then by the stream name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceModuleStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceModuleStreams = OsManagementFunctions.getManagedInstanceModuleStreams(GetManagedInstanceModuleStreamsArgs.builder()
     *             .managedInstanceId(var_.managed_instance_id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.managed_instance_module_name())
     *             .streamName(var_.managed_instance_module_stream_name())
     *             .streamStatus(var_.managed_instance_module_stream_status())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceModuleStreamsResult> getManagedInstanceModuleStreams(GetManagedInstanceModuleStreamsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getManagedInstanceModuleStreams:getManagedInstanceModuleStreams", TypeShape.of(GetManagedInstanceModuleStreamsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Managed Instance Module Streams in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module streams, along with a summary of their
     * status, from a managed instance.  Filters may be applied to select
     * a subset of module streams based on the filter criteria.
     * 
     * The &#39;moduleName&#39; attribute filters against the name of a module.
     * It accepts strings of the format &#34;&lt;module&gt;&#34;.  If this attribute
     * is defined, only streams that belong to the specified module are
     * included in the result set.  If it is not defined, the request is
     * not subject to this filter.
     * 
     * The &#34;status&#34; attribute filters against the state of a module stream.
     * Valid values are &#34;ENABLED&#34;, &#34;DISABLED&#34;, and &#34;ACTIVE&#34;.  If the
     * attribute is set to &#34;ENABLED&#34;, only module streams that are enabled
     * are included in the result set.  If the attribute is set to &#34;DISABLED&#34;,
     * only module streams that are not enabled are included in the result
     * set.  If the attribute is set to &#34;ACTIVE&#34;, only module streams that
     * are active are included in the result set.  If the attribute is not
     * defined, the request is not subject to this filter.
     * 
     * When sorting by the display name, the result set is sorted first
     * by the module name and then by the stream name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceModuleStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceModuleStreams = OsManagementFunctions.getManagedInstanceModuleStreams(GetManagedInstanceModuleStreamsArgs.builder()
     *             .managedInstanceId(var_.managed_instance_id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.managed_instance_module_name())
     *             .streamName(var_.managed_instance_module_stream_name())
     *             .streamStatus(var_.managed_instance_module_stream_status())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceModuleStreamsResult> getManagedInstanceModuleStreamsPlain(GetManagedInstanceModuleStreamsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getManagedInstanceModuleStreams:getManagedInstanceModuleStreams", TypeShape.of(GetManagedInstanceModuleStreamsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Managed Instance Stream Profiles in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module stream profiles, along with a summary of their
     * of their status, from a managed instance.  Filters may be applied to
     * select a subset of profiles based on the filter criteria.
     * 
     * The &#34;moduleName&#34;, &#34;streamName&#34;, and &#34;profileName&#34; attributes combine
     * to form a set of filters on the list of module stream profiles.  If
     * a &#34;modulName&#34; is provided, only profiles that belong to that module
     * are returned.  If both a &#34;moduleName&#34; and &#34;streamName&#34; are given,
     * only profiles belonging to that module stream are returned.  Finally,
     * if all three are given then only the particular profile indicated
     * by the triple is returned.  It is not valid to supply a &#34;streamName&#34;
     * without a &#34;moduleName&#34;.  It is also not valid to supply a &#34;profileName&#34;
     * without a &#34;streamName&#34;.
     * 
     * The &#34;status&#34; attribute filters against the state of a module stream
     * profile.  Valid values are &#34;INSTALLED&#34; and &#34;AVAILABLE&#34;.  If the
     * attribute is set to &#34;INSTALLED&#34;, only module stream profiles that
     * are installed are included in the result set.  If the attribute is
     * set to &#34;AVAILABLE&#34;, only module stream profiles that are not
     * installed are included in the result set.  If the attribute is not
     * defined, the request is not subject to this filter.
     * 
     * When sorting by display name, the result set is sorted first by
     * module name, then by stream name, and finally by profile name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceStreamProfiles = OsManagementFunctions.getManagedInstanceStreamProfile(GetManagedInstanceStreamProfileArgs.builder()
     *             .managedInstanceId(var_.managed_instance_id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.managed_instance_module_name())
     *             .profileName(var_.managed_instance_module_stream_profile_name())
     *             .profileStatus(var_.managed_instance_profile_status())
     *             .streamName(var_.managed_instance_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceStreamProfileResult> getManagedInstanceStreamProfile(GetManagedInstanceStreamProfileArgs args) {
        return getManagedInstanceStreamProfile(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Managed Instance Stream Profiles in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module stream profiles, along with a summary of their
     * of their status, from a managed instance.  Filters may be applied to
     * select a subset of profiles based on the filter criteria.
     * 
     * The &#34;moduleName&#34;, &#34;streamName&#34;, and &#34;profileName&#34; attributes combine
     * to form a set of filters on the list of module stream profiles.  If
     * a &#34;modulName&#34; is provided, only profiles that belong to that module
     * are returned.  If both a &#34;moduleName&#34; and &#34;streamName&#34; are given,
     * only profiles belonging to that module stream are returned.  Finally,
     * if all three are given then only the particular profile indicated
     * by the triple is returned.  It is not valid to supply a &#34;streamName&#34;
     * without a &#34;moduleName&#34;.  It is also not valid to supply a &#34;profileName&#34;
     * without a &#34;streamName&#34;.
     * 
     * The &#34;status&#34; attribute filters against the state of a module stream
     * profile.  Valid values are &#34;INSTALLED&#34; and &#34;AVAILABLE&#34;.  If the
     * attribute is set to &#34;INSTALLED&#34;, only module stream profiles that
     * are installed are included in the result set.  If the attribute is
     * set to &#34;AVAILABLE&#34;, only module stream profiles that are not
     * installed are included in the result set.  If the attribute is not
     * defined, the request is not subject to this filter.
     * 
     * When sorting by display name, the result set is sorted first by
     * module name, then by stream name, and finally by profile name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceStreamProfiles = OsManagementFunctions.getManagedInstanceStreamProfile(GetManagedInstanceStreamProfileArgs.builder()
     *             .managedInstanceId(var_.managed_instance_id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.managed_instance_module_name())
     *             .profileName(var_.managed_instance_module_stream_profile_name())
     *             .profileStatus(var_.managed_instance_profile_status())
     *             .streamName(var_.managed_instance_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceStreamProfileResult> getManagedInstanceStreamProfilePlain(GetManagedInstanceStreamProfilePlainArgs args) {
        return getManagedInstanceStreamProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Managed Instance Stream Profiles in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module stream profiles, along with a summary of their
     * of their status, from a managed instance.  Filters may be applied to
     * select a subset of profiles based on the filter criteria.
     * 
     * The &#34;moduleName&#34;, &#34;streamName&#34;, and &#34;profileName&#34; attributes combine
     * to form a set of filters on the list of module stream profiles.  If
     * a &#34;modulName&#34; is provided, only profiles that belong to that module
     * are returned.  If both a &#34;moduleName&#34; and &#34;streamName&#34; are given,
     * only profiles belonging to that module stream are returned.  Finally,
     * if all three are given then only the particular profile indicated
     * by the triple is returned.  It is not valid to supply a &#34;streamName&#34;
     * without a &#34;moduleName&#34;.  It is also not valid to supply a &#34;profileName&#34;
     * without a &#34;streamName&#34;.
     * 
     * The &#34;status&#34; attribute filters against the state of a module stream
     * profile.  Valid values are &#34;INSTALLED&#34; and &#34;AVAILABLE&#34;.  If the
     * attribute is set to &#34;INSTALLED&#34;, only module stream profiles that
     * are installed are included in the result set.  If the attribute is
     * set to &#34;AVAILABLE&#34;, only module stream profiles that are not
     * installed are included in the result set.  If the attribute is not
     * defined, the request is not subject to this filter.
     * 
     * When sorting by display name, the result set is sorted first by
     * module name, then by stream name, and finally by profile name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceStreamProfiles = OsManagementFunctions.getManagedInstanceStreamProfile(GetManagedInstanceStreamProfileArgs.builder()
     *             .managedInstanceId(var_.managed_instance_id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.managed_instance_module_name())
     *             .profileName(var_.managed_instance_module_stream_profile_name())
     *             .profileStatus(var_.managed_instance_profile_status())
     *             .streamName(var_.managed_instance_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstanceStreamProfileResult> getManagedInstanceStreamProfile(GetManagedInstanceStreamProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getManagedInstanceStreamProfile:getManagedInstanceStreamProfile", TypeShape.of(GetManagedInstanceStreamProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Managed Instance Stream Profiles in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module stream profiles, along with a summary of their
     * of their status, from a managed instance.  Filters may be applied to
     * select a subset of profiles based on the filter criteria.
     * 
     * The &#34;moduleName&#34;, &#34;streamName&#34;, and &#34;profileName&#34; attributes combine
     * to form a set of filters on the list of module stream profiles.  If
     * a &#34;modulName&#34; is provided, only profiles that belong to that module
     * are returned.  If both a &#34;moduleName&#34; and &#34;streamName&#34; are given,
     * only profiles belonging to that module stream are returned.  Finally,
     * if all three are given then only the particular profile indicated
     * by the triple is returned.  It is not valid to supply a &#34;streamName&#34;
     * without a &#34;moduleName&#34;.  It is also not valid to supply a &#34;profileName&#34;
     * without a &#34;streamName&#34;.
     * 
     * The &#34;status&#34; attribute filters against the state of a module stream
     * profile.  Valid values are &#34;INSTALLED&#34; and &#34;AVAILABLE&#34;.  If the
     * attribute is set to &#34;INSTALLED&#34;, only module stream profiles that
     * are installed are included in the result set.  If the attribute is
     * set to &#34;AVAILABLE&#34;, only module stream profiles that are not
     * installed are included in the result set.  If the attribute is not
     * defined, the request is not subject to this filter.
     * 
     * When sorting by display name, the result set is sorted first by
     * module name, then by stream name, and finally by profile name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstanceStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstanceStreamProfiles = OsManagementFunctions.getManagedInstanceStreamProfile(GetManagedInstanceStreamProfileArgs.builder()
     *             .managedInstanceId(var_.managed_instance_id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.managed_instance_module_name())
     *             .profileName(var_.managed_instance_module_stream_profile_name())
     *             .profileStatus(var_.managed_instance_profile_status())
     *             .streamName(var_.managed_instance_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstanceStreamProfileResult> getManagedInstanceStreamProfilePlain(GetManagedInstanceStreamProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getManagedInstanceStreamProfile:getManagedInstanceStreamProfile", TypeShape.of(GetManagedInstanceStreamProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Managed Instances in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Managed Instances.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstances = OsManagementFunctions.getManagedInstances(GetManagedInstancesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.managed_instance_display_name())
     *             .osFamily(var_.managed_instance_os_family())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstancesResult> getManagedInstances(GetManagedInstancesArgs args) {
        return getManagedInstances(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Managed Instances in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Managed Instances.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstances = OsManagementFunctions.getManagedInstances(GetManagedInstancesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.managed_instance_display_name())
     *             .osFamily(var_.managed_instance_os_family())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstancesResult> getManagedInstancesPlain(GetManagedInstancesPlainArgs args) {
        return getManagedInstancesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Managed Instances in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Managed Instances.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstances = OsManagementFunctions.getManagedInstances(GetManagedInstancesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.managed_instance_display_name())
     *             .osFamily(var_.managed_instance_os_family())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetManagedInstancesResult> getManagedInstances(GetManagedInstancesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getManagedInstances:getManagedInstances", TypeShape.of(GetManagedInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Managed Instances in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Managed Instances.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetManagedInstancesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testManagedInstances = OsManagementFunctions.getManagedInstances(GetManagedInstancesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.managed_instance_display_name())
     *             .osFamily(var_.managed_instance_os_family())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetManagedInstancesResult> getManagedInstancesPlain(GetManagedInstancesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getManagedInstances:getManagedInstances", TypeShape.of(GetManagedInstancesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Software Source resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Software Source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSource = OsManagementFunctions.getSoftwareSource(GetSoftwareSourceArgs.builder()
     *             .softwareSourceId(oci_osmanagement_software_source.test_software_source().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourceResult> getSoftwareSource(GetSoftwareSourceArgs args) {
        return getSoftwareSource(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Software Source resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Software Source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSource = OsManagementFunctions.getSoftwareSource(GetSoftwareSourceArgs.builder()
     *             .softwareSourceId(oci_osmanagement_software_source.test_software_source().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourceResult> getSoftwareSourcePlain(GetSoftwareSourcePlainArgs args) {
        return getSoftwareSourcePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Software Source resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Software Source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSource = OsManagementFunctions.getSoftwareSource(GetSoftwareSourceArgs.builder()
     *             .softwareSourceId(oci_osmanagement_software_source.test_software_source().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourceResult> getSoftwareSource(GetSoftwareSourceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getSoftwareSource:getSoftwareSource", TypeShape.of(GetSoftwareSourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Software Source resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a specific Software Source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSource = OsManagementFunctions.getSoftwareSource(GetSoftwareSourceArgs.builder()
     *             .softwareSourceId(oci_osmanagement_software_source.test_software_source().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourceResult> getSoftwareSourcePlain(GetSoftwareSourcePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getSoftwareSource:getSoftwareSource", TypeShape.of(GetSoftwareSourceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Software Source Module Stream resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a detailed description of a module stream from a software source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceModuleStream = OsManagementFunctions.getSoftwareSourceModuleStream(GetSoftwareSourceModuleStreamArgs.builder()
     *             .moduleName(var_.software_source_module_stream_module_name())
     *             .softwareSourceId(var_.software_source().id())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourceModuleStreamResult> getSoftwareSourceModuleStream(GetSoftwareSourceModuleStreamArgs args) {
        return getSoftwareSourceModuleStream(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Software Source Module Stream resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a detailed description of a module stream from a software source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceModuleStream = OsManagementFunctions.getSoftwareSourceModuleStream(GetSoftwareSourceModuleStreamArgs.builder()
     *             .moduleName(var_.software_source_module_stream_module_name())
     *             .softwareSourceId(var_.software_source().id())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourceModuleStreamResult> getSoftwareSourceModuleStreamPlain(GetSoftwareSourceModuleStreamPlainArgs args) {
        return getSoftwareSourceModuleStreamPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Software Source Module Stream resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a detailed description of a module stream from a software source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceModuleStream = OsManagementFunctions.getSoftwareSourceModuleStream(GetSoftwareSourceModuleStreamArgs.builder()
     *             .moduleName(var_.software_source_module_stream_module_name())
     *             .softwareSourceId(var_.software_source().id())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourceModuleStreamResult> getSoftwareSourceModuleStream(GetSoftwareSourceModuleStreamArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getSoftwareSourceModuleStream:getSoftwareSourceModuleStream", TypeShape.of(GetSoftwareSourceModuleStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Software Source Module Stream resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a detailed description of a module stream from a software source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceModuleStream = OsManagementFunctions.getSoftwareSourceModuleStream(GetSoftwareSourceModuleStreamArgs.builder()
     *             .moduleName(var_.software_source_module_stream_module_name())
     *             .softwareSourceId(var_.software_source().id())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourceModuleStreamResult> getSoftwareSourceModuleStreamPlain(GetSoftwareSourceModuleStreamPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getSoftwareSourceModuleStream:getSoftwareSourceModuleStream", TypeShape.of(GetSoftwareSourceModuleStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Software Source Module Stream Profile resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a detailed description of a module stream profile from a software source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceModuleStreamProfile = OsManagementFunctions.getSoftwareSourceModuleStreamProfile(GetSoftwareSourceModuleStreamProfileArgs.builder()
     *             .moduleName(var_.software_source_module_name())
     *             .profileName(var_.software_source_module_stream_profile_name())
     *             .softwareSourceId(var_.software_source().id())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourceModuleStreamProfileResult> getSoftwareSourceModuleStreamProfile(GetSoftwareSourceModuleStreamProfileArgs args) {
        return getSoftwareSourceModuleStreamProfile(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Software Source Module Stream Profile resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a detailed description of a module stream profile from a software source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceModuleStreamProfile = OsManagementFunctions.getSoftwareSourceModuleStreamProfile(GetSoftwareSourceModuleStreamProfileArgs.builder()
     *             .moduleName(var_.software_source_module_name())
     *             .profileName(var_.software_source_module_stream_profile_name())
     *             .softwareSourceId(var_.software_source().id())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourceModuleStreamProfileResult> getSoftwareSourceModuleStreamProfilePlain(GetSoftwareSourceModuleStreamProfilePlainArgs args) {
        return getSoftwareSourceModuleStreamProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Software Source Module Stream Profile resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a detailed description of a module stream profile from a software source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceModuleStreamProfile = OsManagementFunctions.getSoftwareSourceModuleStreamProfile(GetSoftwareSourceModuleStreamProfileArgs.builder()
     *             .moduleName(var_.software_source_module_name())
     *             .profileName(var_.software_source_module_stream_profile_name())
     *             .softwareSourceId(var_.software_source().id())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourceModuleStreamProfileResult> getSoftwareSourceModuleStreamProfile(GetSoftwareSourceModuleStreamProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getSoftwareSourceModuleStreamProfile:getSoftwareSourceModuleStreamProfile", TypeShape.of(GetSoftwareSourceModuleStreamProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Software Source Module Stream Profile resource in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a detailed description of a module stream profile from a software source.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceModuleStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceModuleStreamProfile = OsManagementFunctions.getSoftwareSourceModuleStreamProfile(GetSoftwareSourceModuleStreamProfileArgs.builder()
     *             .moduleName(var_.software_source_module_name())
     *             .profileName(var_.software_source_module_stream_profile_name())
     *             .softwareSourceId(var_.software_source().id())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourceModuleStreamProfileResult> getSoftwareSourceModuleStreamProfilePlain(GetSoftwareSourceModuleStreamProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getSoftwareSourceModuleStreamProfile:getSoftwareSourceModuleStreamProfile", TypeShape.of(GetSoftwareSourceModuleStreamProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Software Source Stream Profiles in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module stream profiles from a software source.
     * Filters may be applied to select a subset of module stream profiles
     * based on the filter criteria.
     * 
     * The &#34;moduleName&#34;, &#34;streamName&#34;, and &#34;profileName&#34; attributes combine
     * to form a set of filters on the list of module stream profiles.  If
     * a &#34;moduleName&#34; is provided, only profiles that belong to that module
     * are returned.  If both a &#34;moduleName&#34; and &#34;streamName&#34; are given,
     * only profiles belonging to that module stream are returned.  Finally,
     * if all three are given then only the particular profile indicated
     * by the triple is returned.  It is not valid to supply a &#34;streamName&#34;
     * without a &#34;moduleName&#34;.  It is also not valid to supply a &#34;profileName&#34;
     * without a &#34;streamName&#34;.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceStreamProfiles = OsManagementFunctions.getSoftwareSourceStreamProfile(GetSoftwareSourceStreamProfileArgs.builder()
     *             .softwareSourceId(var_.software_source().id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.software_source_module_name())
     *             .profileName(var_.software_source_module_stream_profile_name())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourceStreamProfileResult> getSoftwareSourceStreamProfile(GetSoftwareSourceStreamProfileArgs args) {
        return getSoftwareSourceStreamProfile(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Software Source Stream Profiles in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module stream profiles from a software source.
     * Filters may be applied to select a subset of module stream profiles
     * based on the filter criteria.
     * 
     * The &#34;moduleName&#34;, &#34;streamName&#34;, and &#34;profileName&#34; attributes combine
     * to form a set of filters on the list of module stream profiles.  If
     * a &#34;moduleName&#34; is provided, only profiles that belong to that module
     * are returned.  If both a &#34;moduleName&#34; and &#34;streamName&#34; are given,
     * only profiles belonging to that module stream are returned.  Finally,
     * if all three are given then only the particular profile indicated
     * by the triple is returned.  It is not valid to supply a &#34;streamName&#34;
     * without a &#34;moduleName&#34;.  It is also not valid to supply a &#34;profileName&#34;
     * without a &#34;streamName&#34;.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceStreamProfiles = OsManagementFunctions.getSoftwareSourceStreamProfile(GetSoftwareSourceStreamProfileArgs.builder()
     *             .softwareSourceId(var_.software_source().id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.software_source_module_name())
     *             .profileName(var_.software_source_module_stream_profile_name())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourceStreamProfileResult> getSoftwareSourceStreamProfilePlain(GetSoftwareSourceStreamProfilePlainArgs args) {
        return getSoftwareSourceStreamProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Software Source Stream Profiles in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module stream profiles from a software source.
     * Filters may be applied to select a subset of module stream profiles
     * based on the filter criteria.
     * 
     * The &#34;moduleName&#34;, &#34;streamName&#34;, and &#34;profileName&#34; attributes combine
     * to form a set of filters on the list of module stream profiles.  If
     * a &#34;moduleName&#34; is provided, only profiles that belong to that module
     * are returned.  If both a &#34;moduleName&#34; and &#34;streamName&#34; are given,
     * only profiles belonging to that module stream are returned.  Finally,
     * if all three are given then only the particular profile indicated
     * by the triple is returned.  It is not valid to supply a &#34;streamName&#34;
     * without a &#34;moduleName&#34;.  It is also not valid to supply a &#34;profileName&#34;
     * without a &#34;streamName&#34;.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceStreamProfiles = OsManagementFunctions.getSoftwareSourceStreamProfile(GetSoftwareSourceStreamProfileArgs.builder()
     *             .softwareSourceId(var_.software_source().id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.software_source_module_name())
     *             .profileName(var_.software_source_module_stream_profile_name())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourceStreamProfileResult> getSoftwareSourceStreamProfile(GetSoftwareSourceStreamProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getSoftwareSourceStreamProfile:getSoftwareSourceStreamProfile", TypeShape.of(GetSoftwareSourceStreamProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Software Source Stream Profiles in Oracle Cloud Infrastructure OS Management service.
     * 
     * Retrieve a list of module stream profiles from a software source.
     * Filters may be applied to select a subset of module stream profiles
     * based on the filter criteria.
     * 
     * The &#34;moduleName&#34;, &#34;streamName&#34;, and &#34;profileName&#34; attributes combine
     * to form a set of filters on the list of module stream profiles.  If
     * a &#34;moduleName&#34; is provided, only profiles that belong to that module
     * are returned.  If both a &#34;moduleName&#34; and &#34;streamName&#34; are given,
     * only profiles belonging to that module stream are returned.  Finally,
     * if all three are given then only the particular profile indicated
     * by the triple is returned.  It is not valid to supply a &#34;streamName&#34;
     * without a &#34;moduleName&#34;.  It is also not valid to supply a &#34;profileName&#34;
     * without a &#34;streamName&#34;.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourceStreamProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSourceStreamProfiles = OsManagementFunctions.getSoftwareSourceStreamProfile(GetSoftwareSourceStreamProfileArgs.builder()
     *             .softwareSourceId(var_.software_source().id())
     *             .compartmentId(var_.compartment_id())
     *             .moduleName(var_.software_source_module_name())
     *             .profileName(var_.software_source_module_stream_profile_name())
     *             .streamName(var_.software_source_module_stream_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourceStreamProfileResult> getSoftwareSourceStreamProfilePlain(GetSoftwareSourceStreamProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getSoftwareSourceStreamProfile:getSoftwareSourceStreamProfile", TypeShape.of(GetSoftwareSourceStreamProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Software Sources in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Software Sources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSources = OsManagementFunctions.getSoftwareSources(GetSoftwareSourcesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.software_source_display_name())
     *             .state(var_.software_source_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourcesResult> getSoftwareSources(GetSoftwareSourcesArgs args) {
        return getSoftwareSources(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Software Sources in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Software Sources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSources = OsManagementFunctions.getSoftwareSources(GetSoftwareSourcesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.software_source_display_name())
     *             .state(var_.software_source_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourcesResult> getSoftwareSourcesPlain(GetSoftwareSourcesPlainArgs args) {
        return getSoftwareSourcesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Software Sources in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Software Sources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSources = OsManagementFunctions.getSoftwareSources(GetSoftwareSourcesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.software_source_display_name())
     *             .state(var_.software_source_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSoftwareSourcesResult> getSoftwareSources(GetSoftwareSourcesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OsManagement/getSoftwareSources:getSoftwareSources", TypeShape.of(GetSoftwareSourcesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Software Sources in Oracle Cloud Infrastructure OS Management service.
     * 
     * Returns a list of all Software Sources.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OsManagement.OsManagementFunctions;
     * import com.pulumi.oci.OsManagement.inputs.GetSoftwareSourcesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSoftwareSources = OsManagementFunctions.getSoftwareSources(GetSoftwareSourcesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.software_source_display_name())
     *             .state(var_.software_source_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSoftwareSourcesResult> getSoftwareSourcesPlain(GetSoftwareSourcesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OsManagement/getSoftwareSources:getSoftwareSources", TypeShape.of(GetSoftwareSourcesResult.class), args, Utilities.withVersion(options));
    }
}
