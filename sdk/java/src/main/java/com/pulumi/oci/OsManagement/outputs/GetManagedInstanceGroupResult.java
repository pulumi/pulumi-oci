// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceGroupManagedInstance;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceGroupResult {
    /**
     * @return OCID for the Compartment
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Information specified by the user about the managed instance group
     * 
     */
    private @Nullable String description;
    /**
     * @return User friendly name
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return unique identifier that is immutable on creation
     * 
     */
    private @Nullable String id;
    private @Nullable Integer managedInstanceCount;
    private String managedInstanceGroupId;
    /**
     * @return list of Managed Instances in the group
     * 
     */
    private @Nullable List<GetManagedInstanceGroupManagedInstance> managedInstances;
    /**
     * @return The Operating System type of the managed instance.
     * 
     */
    private @Nullable String osFamily;
    /**
     * @return The current state of the Software Source.
     * 
     */
    private @Nullable String state;

    private GetManagedInstanceGroupResult() {}
    /**
     * @return OCID for the Compartment
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Information specified by the user about the managed instance group
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return User friendly name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return unique identifier that is immutable on creation
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Integer> managedInstanceCount() {
        return Optional.ofNullable(this.managedInstanceCount);
    }
    public String managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }
    /**
     * @return list of Managed Instances in the group
     * 
     */
    public List<GetManagedInstanceGroupManagedInstance> managedInstances() {
        return this.managedInstances == null ? List.of() : this.managedInstances;
    }
    /**
     * @return The Operating System type of the managed instance.
     * 
     */
    public Optional<String> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }
    /**
     * @return The current state of the Software Source.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Integer managedInstanceCount;
        private String managedInstanceGroupId;
        private @Nullable List<GetManagedInstanceGroupManagedInstance> managedInstances;
        private @Nullable String osFamily;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetManagedInstanceGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.managedInstanceCount = defaults.managedInstanceCount;
    	      this.managedInstanceGroupId = defaults.managedInstanceGroupId;
    	      this.managedInstances = defaults.managedInstances;
    	      this.osFamily = defaults.osFamily;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceCount(@Nullable Integer managedInstanceCount) {
            this.managedInstanceCount = managedInstanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            this.managedInstanceGroupId = Objects.requireNonNull(managedInstanceGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder managedInstances(@Nullable List<GetManagedInstanceGroupManagedInstance> managedInstances) {
            this.managedInstances = managedInstances;
            return this;
        }
        public Builder managedInstances(GetManagedInstanceGroupManagedInstance... managedInstances) {
            return managedInstances(List.of(managedInstances));
        }
        @CustomType.Setter
        public Builder osFamily(@Nullable String osFamily) {
            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetManagedInstanceGroupResult build() {
            final var o = new GetManagedInstanceGroupResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.managedInstanceCount = managedInstanceCount;
            o.managedInstanceGroupId = managedInstanceGroupId;
            o.managedInstances = managedInstances;
            o.osFamily = osFamily;
            o.state = state;
            return o;
        }
    }
}
