// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance {
    /**
     * @return The name of a module.  This parameter is required if a streamName is specified.
     * 
     */
    private String moduleName;
    /**
     * @return The set of profiles that the module stream contains.
     * 
     */
    private List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile> profiles;
    /**
     * @return The OCID of the software source that provides this module stream.
     * 
     */
    private String softwareSourceId;
    /**
     * @return The status of the stream
     * 
     */
    private String status;
    /**
     * @return The name of the stream of the containing module.  This parameter is required if a profileName is specified.
     * 
     */
    private String streamName;
    /**
     * @return The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    private String timeModified;

    private GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance() {}
    /**
     * @return The name of a module.  This parameter is required if a streamName is specified.
     * 
     */
    public String moduleName() {
        return this.moduleName;
    }
    /**
     * @return The set of profiles that the module stream contains.
     * 
     */
    public List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile> profiles() {
        return this.profiles;
    }
    /**
     * @return The OCID of the software source that provides this module stream.
     * 
     */
    public String softwareSourceId() {
        return this.softwareSourceId;
    }
    /**
     * @return The status of the stream
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The name of the stream of the containing module.  This parameter is required if a profileName is specified.
     * 
     */
    public String streamName() {
        return this.streamName;
    }
    /**
     * @return The date and time of the last status change for this profile, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public String timeModified() {
        return this.timeModified;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String moduleName;
        private List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile> profiles;
        private String softwareSourceId;
        private String status;
        private String streamName;
        private String timeModified;
        public Builder() {}
        public Builder(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.moduleName = defaults.moduleName;
    	      this.profiles = defaults.profiles;
    	      this.softwareSourceId = defaults.softwareSourceId;
    	      this.status = defaults.status;
    	      this.streamName = defaults.streamName;
    	      this.timeModified = defaults.timeModified;
        }

        @CustomType.Setter
        public Builder moduleName(String moduleName) {
            this.moduleName = Objects.requireNonNull(moduleName);
            return this;
        }
        @CustomType.Setter
        public Builder profiles(List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile> profiles) {
            this.profiles = Objects.requireNonNull(profiles);
            return this;
        }
        public Builder profiles(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstanceProfile... profiles) {
            return profiles(List.of(profiles));
        }
        @CustomType.Setter
        public Builder softwareSourceId(String softwareSourceId) {
            this.softwareSourceId = Objects.requireNonNull(softwareSourceId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder streamName(String streamName) {
            this.streamName = Objects.requireNonNull(streamName);
            return this;
        }
        @CustomType.Setter
        public Builder timeModified(String timeModified) {
            this.timeModified = Objects.requireNonNull(timeModified);
            return this;
        }
        public GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance build() {
            final var o = new GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance();
            o.moduleName = moduleName;
            o.profiles = profiles;
            o.softwareSourceId = softwareSourceId;
            o.status = status;
            o.streamName = streamName;
            o.timeModified = timeModified;
            return o;
        }
    }
}
