// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceModuleStreamsFilter;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceModuleStreamsResult {
    private final @Nullable String compartmentId;
    private final @Nullable List<GetManagedInstanceModuleStreamsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String managedInstanceId;
    /**
     * @return The name of the module that contains the stream profile
     * 
     */
    private final @Nullable String moduleName;
    /**
     * @return The list of module_stream_on_managed_instances.
     * 
     */
    private final List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance> moduleStreamOnManagedInstances;
    /**
     * @return The name of the stream.
     * 
     */
    private final @Nullable String streamName;
    private final @Nullable String streamStatus;

    @CustomType.Constructor
    private GetManagedInstanceModuleStreamsResult(
        @CustomType.Parameter("compartmentId") @Nullable String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetManagedInstanceModuleStreamsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("managedInstanceId") String managedInstanceId,
        @CustomType.Parameter("moduleName") @Nullable String moduleName,
        @CustomType.Parameter("moduleStreamOnManagedInstances") List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance> moduleStreamOnManagedInstances,
        @CustomType.Parameter("streamName") @Nullable String streamName,
        @CustomType.Parameter("streamStatus") @Nullable String streamStatus) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.managedInstanceId = managedInstanceId;
        this.moduleName = moduleName;
        this.moduleStreamOnManagedInstances = moduleStreamOnManagedInstances;
        this.streamName = streamName;
        this.streamStatus = streamStatus;
    }

    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetManagedInstanceModuleStreamsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * @return The name of the module that contains the stream profile
     * 
     */
    public Optional<String> moduleName() {
        return Optional.ofNullable(this.moduleName);
    }
    /**
     * @return The list of module_stream_on_managed_instances.
     * 
     */
    public List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance> moduleStreamOnManagedInstances() {
        return this.moduleStreamOnManagedInstances;
    }
    /**
     * @return The name of the stream.
     * 
     */
    public Optional<String> streamName() {
        return Optional.ofNullable(this.streamName);
    }
    public Optional<String> streamStatus() {
        return Optional.ofNullable(this.streamStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceModuleStreamsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetManagedInstanceModuleStreamsFilter> filters;
        private String id;
        private String managedInstanceId;
        private @Nullable String moduleName;
        private List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance> moduleStreamOnManagedInstances;
        private @Nullable String streamName;
        private @Nullable String streamStatus;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedInstanceModuleStreamsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.moduleName = defaults.moduleName;
    	      this.moduleStreamOnManagedInstances = defaults.moduleStreamOnManagedInstances;
    	      this.streamName = defaults.streamName;
    	      this.streamStatus = defaults.streamStatus;
        }

        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        public Builder filters(@Nullable List<GetManagedInstanceModuleStreamsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedInstanceModuleStreamsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder managedInstanceId(String managedInstanceId) {
            this.managedInstanceId = Objects.requireNonNull(managedInstanceId);
            return this;
        }
        public Builder moduleName(@Nullable String moduleName) {
            this.moduleName = moduleName;
            return this;
        }
        public Builder moduleStreamOnManagedInstances(List<GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance> moduleStreamOnManagedInstances) {
            this.moduleStreamOnManagedInstances = Objects.requireNonNull(moduleStreamOnManagedInstances);
            return this;
        }
        public Builder moduleStreamOnManagedInstances(GetManagedInstanceModuleStreamsModuleStreamOnManagedInstance... moduleStreamOnManagedInstances) {
            return moduleStreamOnManagedInstances(List.of(moduleStreamOnManagedInstances));
        }
        public Builder streamName(@Nullable String streamName) {
            this.streamName = streamName;
            return this;
        }
        public Builder streamStatus(@Nullable String streamStatus) {
            this.streamStatus = streamStatus;
            return this;
        }        public GetManagedInstanceModuleStreamsResult build() {
            return new GetManagedInstanceModuleStreamsResult(compartmentId, filters, id, managedInstanceId, moduleName, moduleStreamOnManagedInstances, streamName, streamStatus);
        }
    }
}
