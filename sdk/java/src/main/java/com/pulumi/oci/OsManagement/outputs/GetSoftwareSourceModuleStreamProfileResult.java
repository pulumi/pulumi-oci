// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSoftwareSourceModuleStreamProfileResult {
    /**
     * @return A description of the contents of the module stream profile
     * 
     */
    private final String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Indicates if this profile is the default for its module stream.
     * 
     */
    private final Boolean isDefault;
    /**
     * @return The name of the module that contains the stream profile
     * 
     */
    private final String moduleName;
    /**
     * @return A list of packages that constitute the profile.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management APIs that interact directly with packages.
     * 
     */
    private final List<String> packages;
    /**
     * @return The name of the profile
     * 
     */
    private final String profileName;
    private final String softwareSourceId;
    /**
     * @return The name of the stream that contains the profile
     * 
     */
    private final String streamName;

    @CustomType.Constructor
    private GetSoftwareSourceModuleStreamProfileResult(
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isDefault") Boolean isDefault,
        @CustomType.Parameter("moduleName") String moduleName,
        @CustomType.Parameter("packages") List<String> packages,
        @CustomType.Parameter("profileName") String profileName,
        @CustomType.Parameter("softwareSourceId") String softwareSourceId,
        @CustomType.Parameter("streamName") String streamName) {
        this.description = description;
        this.id = id;
        this.isDefault = isDefault;
        this.moduleName = moduleName;
        this.packages = packages;
        this.profileName = profileName;
        this.softwareSourceId = softwareSourceId;
        this.streamName = streamName;
    }

    /**
     * @return A description of the contents of the module stream profile
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if this profile is the default for its module stream.
     * 
     */
    public Boolean isDefault() {
        return this.isDefault;
    }
    /**
     * @return The name of the module that contains the stream profile
     * 
     */
    public String moduleName() {
        return this.moduleName;
    }
    /**
     * @return A list of packages that constitute the profile.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management APIs that interact directly with packages.
     * 
     */
    public List<String> packages() {
        return this.packages;
    }
    /**
     * @return The name of the profile
     * 
     */
    public String profileName() {
        return this.profileName;
    }
    public String softwareSourceId() {
        return this.softwareSourceId;
    }
    /**
     * @return The name of the stream that contains the profile
     * 
     */
    public String streamName() {
        return this.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoftwareSourceModuleStreamProfileResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private String id;
        private Boolean isDefault;
        private String moduleName;
        private List<String> packages;
        private String profileName;
        private String softwareSourceId;
        private String streamName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSoftwareSourceModuleStreamProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.isDefault = defaults.isDefault;
    	      this.moduleName = defaults.moduleName;
    	      this.packages = defaults.packages;
    	      this.profileName = defaults.profileName;
    	      this.softwareSourceId = defaults.softwareSourceId;
    	      this.streamName = defaults.streamName;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isDefault(Boolean isDefault) {
            this.isDefault = Objects.requireNonNull(isDefault);
            return this;
        }
        public Builder moduleName(String moduleName) {
            this.moduleName = Objects.requireNonNull(moduleName);
            return this;
        }
        public Builder packages(List<String> packages) {
            this.packages = Objects.requireNonNull(packages);
            return this;
        }
        public Builder packages(String... packages) {
            return packages(List.of(packages));
        }
        public Builder profileName(String profileName) {
            this.profileName = Objects.requireNonNull(profileName);
            return this;
        }
        public Builder softwareSourceId(String softwareSourceId) {
            this.softwareSourceId = Objects.requireNonNull(softwareSourceId);
            return this;
        }
        public Builder streamName(String streamName) {
            this.streamName = Objects.requireNonNull(streamName);
            return this;
        }        public GetSoftwareSourceModuleStreamProfileResult build() {
            return new GetSoftwareSourceModuleStreamProfileResult(description, id, isDefault, moduleName, packages, profileName, softwareSourceId, streamName);
        }
    }
}
