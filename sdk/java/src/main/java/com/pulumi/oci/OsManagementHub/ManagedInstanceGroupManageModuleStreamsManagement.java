// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementState;
import com.pulumi.oci.OsManagementHub.outputs.ManagedInstanceGroupManageModuleStreamsManagementDisable;
import com.pulumi.oci.OsManagementHub.outputs.ManagedInstanceGroupManageModuleStreamsManagementEnable;
import com.pulumi.oci.OsManagementHub.outputs.ManagedInstanceGroupManageModuleStreamsManagementInstall;
import com.pulumi.oci.OsManagementHub.outputs.ManagedInstanceGroupManageModuleStreamsManagementRemove;
import com.pulumi.oci.OsManagementHub.outputs.ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This resource provides the Managed Instance Group Manage Module Streams Management resource in Oracle Cloud Infrastructure Os Management Hub service.
 * 
 * Enables or disables module streams and installs or removes module stream profiles. Once complete, the state of the modules, streams, and profiles will match the state indicated in the operation. See [ManageModuleStreamsOnManagedInstanceGroupDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/ManageModuleStreamsOnManagedInstanceGroupDetails) for more information.
 * You can preform this operation as a dry run. For a dry run, the service evaluates the operation against the current module, stream, and profile state on the managed instance, but does not commit the changes. Instead, the service returns work request log or error entries indicating the impact of the operation.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagement;
 * import com.pulumi.oci.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementArgs;
 * import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementDisableArgs;
 * import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementEnableArgs;
 * import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementInstallArgs;
 * import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs;
 * import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testManagedInstanceGroupManageModuleStreamsManagement = new ManagedInstanceGroupManageModuleStreamsManagement("testManagedInstanceGroupManageModuleStreamsManagement", ManagedInstanceGroupManageModuleStreamsManagementArgs.builder()
 *             .managedInstanceGroupId(testManagedInstanceGroup.id())
 *             .disables(ManagedInstanceGroupManageModuleStreamsManagementDisableArgs.builder()
 *                 .moduleName(managedInstanceGroupManageModuleStreamsManagementDisableModuleName)
 *                 .streamName(testStream.name())
 *                 .softwareSourceId(testSoftwareSource.id())
 *                 .build())
 *             .enables(ManagedInstanceGroupManageModuleStreamsManagementEnableArgs.builder()
 *                 .moduleName(managedInstanceGroupManageModuleStreamsManagementEnableModuleName)
 *                 .streamName(testStream.name())
 *                 .softwareSourceId(testSoftwareSource.id())
 *                 .build())
 *             .installs(ManagedInstanceGroupManageModuleStreamsManagementInstallArgs.builder()
 *                 .moduleName(managedInstanceGroupManageModuleStreamsManagementInstallModuleName)
 *                 .profileName(testProfile.name())
 *                 .streamName(testStream.name())
 *                 .softwareSourceId(testSoftwareSource.id())
 *                 .build())
 *             .isDryRun(managedInstanceGroupManageModuleStreamsManagementIsDryRun)
 *             .removes(ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs.builder()
 *                 .moduleName(managedInstanceGroupManageModuleStreamsManagementRemoveModuleName)
 *                 .profileName(testProfile.name())
 *                 .streamName(testStream.name())
 *                 .softwareSourceId(testSoftwareSource.id())
 *                 .build())
 *             .workRequestDetails(ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsArgs.builder()
 *                 .description(managedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsDescription)
 *                 .displayName(managedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsDisplayName)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ManagedInstanceGroupManageModuleStreamsManagement can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement test_managed_instance_group_manage_module_streams_management &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement")
public class ManagedInstanceGroupManageModuleStreamsManagement extends com.pulumi.resources.CustomResource {
    /**
     * The set of module streams to disable.
     * 
     */
    @Export(name="disables", refs={List.class,ManagedInstanceGroupManageModuleStreamsManagementDisable.class}, tree="[0,1]")
    private Output<List<ManagedInstanceGroupManageModuleStreamsManagementDisable>> disables;

    /**
     * @return The set of module streams to disable.
     * 
     */
    public Output<List<ManagedInstanceGroupManageModuleStreamsManagementDisable>> disables() {
        return this.disables;
    }
    /**
     * The set of module streams to enable.
     * 
     */
    @Export(name="enables", refs={List.class,ManagedInstanceGroupManageModuleStreamsManagementEnable.class}, tree="[0,1]")
    private Output<List<ManagedInstanceGroupManageModuleStreamsManagementEnable>> enables;

    /**
     * @return The set of module streams to enable.
     * 
     */
    public Output<List<ManagedInstanceGroupManageModuleStreamsManagementEnable>> enables() {
        return this.enables;
    }
    /**
     * The set of module stream profiles to install.
     * 
     */
    @Export(name="installs", refs={List.class,ManagedInstanceGroupManageModuleStreamsManagementInstall.class}, tree="[0,1]")
    private Output<List<ManagedInstanceGroupManageModuleStreamsManagementInstall>> installs;

    /**
     * @return The set of module stream profiles to install.
     * 
     */
    public Output<List<ManagedInstanceGroupManageModuleStreamsManagementInstall>> installs() {
        return this.installs;
    }
    /**
     * Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
     * 
     */
    @Export(name="isDryRun", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isDryRun;

    /**
     * @return Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
     * 
     */
    public Output<Boolean> isDryRun() {
        return this.isDryRun;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     * 
     */
    @Export(name="managedInstanceGroupId", refs={String.class}, tree="[0]")
    private Output<String> managedInstanceGroupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     * 
     */
    public Output<String> managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }
    /**
     * The set of module stream profiles to remove.
     * 
     */
    @Export(name="removes", refs={List.class,ManagedInstanceGroupManageModuleStreamsManagementRemove.class}, tree="[0,1]")
    private Output<List<ManagedInstanceGroupManageModuleStreamsManagementRemove>> removes;

    /**
     * @return The set of module stream profiles to remove.
     * 
     */
    public Output<List<ManagedInstanceGroupManageModuleStreamsManagementRemove>> removes() {
        return this.removes;
    }
    /**
     * Provides the name and description of the job.
     * 
     */
    @Export(name="workRequestDetails", refs={ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails.class}, tree="[0]")
    private Output<ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails> workRequestDetails;

    /**
     * @return Provides the name and description of the job.
     * 
     */
    public Output<ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails> workRequestDetails() {
        return this.workRequestDetails;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedInstanceGroupManageModuleStreamsManagement(java.lang.String name) {
        this(name, ManagedInstanceGroupManageModuleStreamsManagementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedInstanceGroupManageModuleStreamsManagement(java.lang.String name, ManagedInstanceGroupManageModuleStreamsManagementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedInstanceGroupManageModuleStreamsManagement(java.lang.String name, ManagedInstanceGroupManageModuleStreamsManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ManagedInstanceGroupManageModuleStreamsManagement(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedInstanceGroupManageModuleStreamsManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement", name, state, makeResourceOptions(options, id), false);
    }

    private static ManagedInstanceGroupManageModuleStreamsManagementArgs makeArgs(ManagedInstanceGroupManageModuleStreamsManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ManagedInstanceGroupManageModuleStreamsManagementArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedInstanceGroupManageModuleStreamsManagement get(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedInstanceGroupManageModuleStreamsManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedInstanceGroupManageModuleStreamsManagement(name, id, state, options);
    }
}
