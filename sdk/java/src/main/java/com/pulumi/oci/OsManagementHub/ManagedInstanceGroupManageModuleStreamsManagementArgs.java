// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementDisableArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementEnableArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementInstallArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceGroupManageModuleStreamsManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceGroupManageModuleStreamsManagementArgs Empty = new ManagedInstanceGroupManageModuleStreamsManagementArgs();

    /**
     * The set of module streams to disable.
     * 
     */
    @Import(name="disables")
    private @Nullable Output<List<ManagedInstanceGroupManageModuleStreamsManagementDisableArgs>> disables;

    /**
     * @return The set of module streams to disable.
     * 
     */
    public Optional<Output<List<ManagedInstanceGroupManageModuleStreamsManagementDisableArgs>>> disables() {
        return Optional.ofNullable(this.disables);
    }

    /**
     * The set of module streams to enable.
     * 
     */
    @Import(name="enables")
    private @Nullable Output<List<ManagedInstanceGroupManageModuleStreamsManagementEnableArgs>> enables;

    /**
     * @return The set of module streams to enable.
     * 
     */
    public Optional<Output<List<ManagedInstanceGroupManageModuleStreamsManagementEnableArgs>>> enables() {
        return Optional.ofNullable(this.enables);
    }

    /**
     * The set of module stream profiles to install.
     * 
     */
    @Import(name="installs")
    private @Nullable Output<List<ManagedInstanceGroupManageModuleStreamsManagementInstallArgs>> installs;

    /**
     * @return The set of module stream profiles to install.
     * 
     */
    public Optional<Output<List<ManagedInstanceGroupManageModuleStreamsManagementInstallArgs>>> installs() {
        return Optional.ofNullable(this.installs);
    }

    /**
     * Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
     * 
     */
    @Import(name="isDryRun")
    private @Nullable Output<Boolean> isDryRun;

    /**
     * @return Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
     * 
     */
    public Optional<Output<Boolean>> isDryRun() {
        return Optional.ofNullable(this.isDryRun);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     * 
     */
    @Import(name="managedInstanceGroupId", required=true)
    private Output<String> managedInstanceGroupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     * 
     */
    public Output<String> managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }

    /**
     * The set of module stream profiles to remove.
     * 
     */
    @Import(name="removes")
    private @Nullable Output<List<ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs>> removes;

    /**
     * @return The set of module stream profiles to remove.
     * 
     */
    public Optional<Output<List<ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs>>> removes() {
        return Optional.ofNullable(this.removes);
    }

    /**
     * Provides the name and description of the job.
     * 
     */
    @Import(name="workRequestDetails")
    private @Nullable Output<ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsArgs> workRequestDetails;

    /**
     * @return Provides the name and description of the job.
     * 
     */
    public Optional<Output<ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsArgs>> workRequestDetails() {
        return Optional.ofNullable(this.workRequestDetails);
    }

    private ManagedInstanceGroupManageModuleStreamsManagementArgs() {}

    private ManagedInstanceGroupManageModuleStreamsManagementArgs(ManagedInstanceGroupManageModuleStreamsManagementArgs $) {
        this.disables = $.disables;
        this.enables = $.enables;
        this.installs = $.installs;
        this.isDryRun = $.isDryRun;
        this.managedInstanceGroupId = $.managedInstanceGroupId;
        this.removes = $.removes;
        this.workRequestDetails = $.workRequestDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceGroupManageModuleStreamsManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceGroupManageModuleStreamsManagementArgs $;

        public Builder() {
            $ = new ManagedInstanceGroupManageModuleStreamsManagementArgs();
        }

        public Builder(ManagedInstanceGroupManageModuleStreamsManagementArgs defaults) {
            $ = new ManagedInstanceGroupManageModuleStreamsManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disables The set of module streams to disable.
         * 
         * @return builder
         * 
         */
        public Builder disables(@Nullable Output<List<ManagedInstanceGroupManageModuleStreamsManagementDisableArgs>> disables) {
            $.disables = disables;
            return this;
        }

        /**
         * @param disables The set of module streams to disable.
         * 
         * @return builder
         * 
         */
        public Builder disables(List<ManagedInstanceGroupManageModuleStreamsManagementDisableArgs> disables) {
            return disables(Output.of(disables));
        }

        /**
         * @param disables The set of module streams to disable.
         * 
         * @return builder
         * 
         */
        public Builder disables(ManagedInstanceGroupManageModuleStreamsManagementDisableArgs... disables) {
            return disables(List.of(disables));
        }

        /**
         * @param enables The set of module streams to enable.
         * 
         * @return builder
         * 
         */
        public Builder enables(@Nullable Output<List<ManagedInstanceGroupManageModuleStreamsManagementEnableArgs>> enables) {
            $.enables = enables;
            return this;
        }

        /**
         * @param enables The set of module streams to enable.
         * 
         * @return builder
         * 
         */
        public Builder enables(List<ManagedInstanceGroupManageModuleStreamsManagementEnableArgs> enables) {
            return enables(Output.of(enables));
        }

        /**
         * @param enables The set of module streams to enable.
         * 
         * @return builder
         * 
         */
        public Builder enables(ManagedInstanceGroupManageModuleStreamsManagementEnableArgs... enables) {
            return enables(List.of(enables));
        }

        /**
         * @param installs The set of module stream profiles to install.
         * 
         * @return builder
         * 
         */
        public Builder installs(@Nullable Output<List<ManagedInstanceGroupManageModuleStreamsManagementInstallArgs>> installs) {
            $.installs = installs;
            return this;
        }

        /**
         * @param installs The set of module stream profiles to install.
         * 
         * @return builder
         * 
         */
        public Builder installs(List<ManagedInstanceGroupManageModuleStreamsManagementInstallArgs> installs) {
            return installs(Output.of(installs));
        }

        /**
         * @param installs The set of module stream profiles to install.
         * 
         * @return builder
         * 
         */
        public Builder installs(ManagedInstanceGroupManageModuleStreamsManagementInstallArgs... installs) {
            return installs(List.of(installs));
        }

        /**
         * @param isDryRun Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
         * 
         * @return builder
         * 
         */
        public Builder isDryRun(@Nullable Output<Boolean> isDryRun) {
            $.isDryRun = isDryRun;
            return this;
        }

        /**
         * @param isDryRun Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
         * 
         * @return builder
         * 
         */
        public Builder isDryRun(Boolean isDryRun) {
            return isDryRun(Output.of(isDryRun));
        }

        /**
         * @param managedInstanceGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(Output<String> managedInstanceGroupId) {
            $.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }

        /**
         * @param managedInstanceGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            return managedInstanceGroupId(Output.of(managedInstanceGroupId));
        }

        /**
         * @param removes The set of module stream profiles to remove.
         * 
         * @return builder
         * 
         */
        public Builder removes(@Nullable Output<List<ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs>> removes) {
            $.removes = removes;
            return this;
        }

        /**
         * @param removes The set of module stream profiles to remove.
         * 
         * @return builder
         * 
         */
        public Builder removes(List<ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs> removes) {
            return removes(Output.of(removes));
        }

        /**
         * @param removes The set of module stream profiles to remove.
         * 
         * @return builder
         * 
         */
        public Builder removes(ManagedInstanceGroupManageModuleStreamsManagementRemoveArgs... removes) {
            return removes(List.of(removes));
        }

        /**
         * @param workRequestDetails Provides the name and description of the job.
         * 
         * @return builder
         * 
         */
        public Builder workRequestDetails(@Nullable Output<ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsArgs> workRequestDetails) {
            $.workRequestDetails = workRequestDetails;
            return this;
        }

        /**
         * @param workRequestDetails Provides the name and description of the job.
         * 
         * @return builder
         * 
         */
        public Builder workRequestDetails(ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsArgs workRequestDetails) {
            return workRequestDetails(Output.of(workRequestDetails));
        }

        public ManagedInstanceGroupManageModuleStreamsManagementArgs build() {
            if ($.managedInstanceGroupId == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceGroupManageModuleStreamsManagementArgs", "managedInstanceGroupId");
            }
            return $;
        }
    }

}
