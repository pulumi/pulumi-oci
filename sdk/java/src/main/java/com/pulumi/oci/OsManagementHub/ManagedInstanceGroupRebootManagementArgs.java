// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupRebootManagementWorkRequestDetailsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceGroupRebootManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceGroupRebootManagementArgs Empty = new ManagedInstanceGroupRebootManagementArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     * 
     */
    @Import(name="managedInstanceGroupId", required=true)
    private Output<String> managedInstanceGroupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     * 
     */
    public Output<String> managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }

    /**
     * The number of minutes the service waits for the reboot to complete. If the instances in the group don&#39;t reboot  within this time, the reboot job status is set to failed.
     * 
     */
    @Import(name="rebootTimeoutInMins")
    private @Nullable Output<Integer> rebootTimeoutInMins;

    /**
     * @return The number of minutes the service waits for the reboot to complete. If the instances in the group don&#39;t reboot  within this time, the reboot job status is set to failed.
     * 
     */
    public Optional<Output<Integer>> rebootTimeoutInMins() {
        return Optional.ofNullable(this.rebootTimeoutInMins);
    }

    /**
     * Provides the name and description of the job.
     * 
     */
    @Import(name="workRequestDetails")
    private @Nullable Output<ManagedInstanceGroupRebootManagementWorkRequestDetailsArgs> workRequestDetails;

    /**
     * @return Provides the name and description of the job.
     * 
     */
    public Optional<Output<ManagedInstanceGroupRebootManagementWorkRequestDetailsArgs>> workRequestDetails() {
        return Optional.ofNullable(this.workRequestDetails);
    }

    private ManagedInstanceGroupRebootManagementArgs() {}

    private ManagedInstanceGroupRebootManagementArgs(ManagedInstanceGroupRebootManagementArgs $) {
        this.managedInstanceGroupId = $.managedInstanceGroupId;
        this.rebootTimeoutInMins = $.rebootTimeoutInMins;
        this.workRequestDetails = $.workRequestDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceGroupRebootManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceGroupRebootManagementArgs $;

        public Builder() {
            $ = new ManagedInstanceGroupRebootManagementArgs();
        }

        public Builder(ManagedInstanceGroupRebootManagementArgs defaults) {
            $ = new ManagedInstanceGroupRebootManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedInstanceGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(Output<String> managedInstanceGroupId) {
            $.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }

        /**
         * @param managedInstanceGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            return managedInstanceGroupId(Output.of(managedInstanceGroupId));
        }

        /**
         * @param rebootTimeoutInMins The number of minutes the service waits for the reboot to complete. If the instances in the group don&#39;t reboot  within this time, the reboot job status is set to failed.
         * 
         * @return builder
         * 
         */
        public Builder rebootTimeoutInMins(@Nullable Output<Integer> rebootTimeoutInMins) {
            $.rebootTimeoutInMins = rebootTimeoutInMins;
            return this;
        }

        /**
         * @param rebootTimeoutInMins The number of minutes the service waits for the reboot to complete. If the instances in the group don&#39;t reboot  within this time, the reboot job status is set to failed.
         * 
         * @return builder
         * 
         */
        public Builder rebootTimeoutInMins(Integer rebootTimeoutInMins) {
            return rebootTimeoutInMins(Output.of(rebootTimeoutInMins));
        }

        /**
         * @param workRequestDetails Provides the name and description of the job.
         * 
         * @return builder
         * 
         */
        public Builder workRequestDetails(@Nullable Output<ManagedInstanceGroupRebootManagementWorkRequestDetailsArgs> workRequestDetails) {
            $.workRequestDetails = workRequestDetails;
            return this;
        }

        /**
         * @param workRequestDetails Provides the name and description of the job.
         * 
         * @return builder
         * 
         */
        public Builder workRequestDetails(ManagedInstanceGroupRebootManagementWorkRequestDetailsArgs workRequestDetails) {
            return workRequestDetails(Output.of(workRequestDetails));
        }

        public ManagedInstanceGroupRebootManagementArgs build() {
            if ($.managedInstanceGroupId == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceGroupRebootManagementArgs", "managedInstanceGroupId");
            }
            return $;
        }
    }

}
