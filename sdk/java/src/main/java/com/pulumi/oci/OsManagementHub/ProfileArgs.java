// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProfileArgs Empty = new ProfileArgs();

    /**
     * The architecture type.
     * 
     */
    @Import(name="archType")
    private @Nullable Output<String> archType;

    /**
     * @return The architecture type.
     * 
     */
    public Optional<Output<String>> archType() {
        return Optional.ofNullable(this.archType);
    }

    /**
     * The OCID of the tenancy containing the registration profile.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the tenancy containing the registration profile.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The description of the registration profile.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the registration profile.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The OCID of the lifecycle stage from which the registration profile will inherit its software source.
     * 
     */
    @Import(name="lifecycleStageId")
    private @Nullable Output<String> lifecycleStageId;

    /**
     * @return The OCID of the lifecycle stage from which the registration profile will inherit its software source.
     * 
     */
    public Optional<Output<String>> lifecycleStageId() {
        return Optional.ofNullable(this.lifecycleStageId);
    }

    /**
     * The OCID of the managed instance group from which the registration profile will inherit its software sources.
     * 
     */
    @Import(name="managedInstanceGroupId")
    private @Nullable Output<String> managedInstanceGroupId;

    /**
     * @return The OCID of the managed instance group from which the registration profile will inherit its software sources.
     * 
     */
    public Optional<Output<String>> managedInstanceGroupId() {
        return Optional.ofNullable(this.managedInstanceGroupId);
    }

    /**
     * The OCID of the management station.
     * 
     */
    @Import(name="managementStationId")
    private @Nullable Output<String> managementStationId;

    /**
     * @return The OCID of the management station.
     * 
     */
    public Optional<Output<String>> managementStationId() {
        return Optional.ofNullable(this.managementStationId);
    }

    /**
     * The operating system family.
     * 
     */
    @Import(name="osFamily")
    private @Nullable Output<String> osFamily;

    /**
     * @return The operating system family.
     * 
     */
    public Optional<Output<String>> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }

    /**
     * The type of registration profile. Either SOFTWARESOURCE, GROUP or LIFECYCLE.
     * 
     */
    @Import(name="profileType", required=true)
    private Output<String> profileType;

    /**
     * @return The type of registration profile. Either SOFTWARESOURCE, GROUP or LIFECYCLE.
     * 
     */
    public Output<String> profileType() {
        return this.profileType;
    }

    /**
     * The list of software source OCIDs that the registration profile will use.
     * 
     */
    @Import(name="softwareSourceIds")
    private @Nullable Output<List<String>> softwareSourceIds;

    /**
     * @return The list of software source OCIDs that the registration profile will use.
     * 
     */
    public Optional<Output<List<String>>> softwareSourceIds() {
        return Optional.ofNullable(this.softwareSourceIds);
    }

    /**
     * The software source vendor name.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="vendorName")
    private @Nullable Output<String> vendorName;

    /**
     * @return The software source vendor name.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> vendorName() {
        return Optional.ofNullable(this.vendorName);
    }

    private ProfileArgs() {}

    private ProfileArgs(ProfileArgs $) {
        this.archType = $.archType;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lifecycleStageId = $.lifecycleStageId;
        this.managedInstanceGroupId = $.managedInstanceGroupId;
        this.managementStationId = $.managementStationId;
        this.osFamily = $.osFamily;
        this.profileType = $.profileType;
        this.softwareSourceIds = $.softwareSourceIds;
        this.vendorName = $.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileArgs $;

        public Builder() {
            $ = new ProfileArgs();
        }

        public Builder(ProfileArgs defaults) {
            $ = new ProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param archType The architecture type.
         * 
         * @return builder
         * 
         */
        public Builder archType(@Nullable Output<String> archType) {
            $.archType = archType;
            return this;
        }

        /**
         * @param archType The architecture type.
         * 
         * @return builder
         * 
         */
        public Builder archType(String archType) {
            return archType(Output.of(archType));
        }

        /**
         * @param compartmentId The OCID of the tenancy containing the registration profile.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the tenancy containing the registration profile.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) The description of the registration profile.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the registration profile.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifecycleStageId The OCID of the lifecycle stage from which the registration profile will inherit its software source.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStageId(@Nullable Output<String> lifecycleStageId) {
            $.lifecycleStageId = lifecycleStageId;
            return this;
        }

        /**
         * @param lifecycleStageId The OCID of the lifecycle stage from which the registration profile will inherit its software source.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStageId(String lifecycleStageId) {
            return lifecycleStageId(Output.of(lifecycleStageId));
        }

        /**
         * @param managedInstanceGroupId The OCID of the managed instance group from which the registration profile will inherit its software sources.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(@Nullable Output<String> managedInstanceGroupId) {
            $.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }

        /**
         * @param managedInstanceGroupId The OCID of the managed instance group from which the registration profile will inherit its software sources.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            return managedInstanceGroupId(Output.of(managedInstanceGroupId));
        }

        /**
         * @param managementStationId The OCID of the management station.
         * 
         * @return builder
         * 
         */
        public Builder managementStationId(@Nullable Output<String> managementStationId) {
            $.managementStationId = managementStationId;
            return this;
        }

        /**
         * @param managementStationId The OCID of the management station.
         * 
         * @return builder
         * 
         */
        public Builder managementStationId(String managementStationId) {
            return managementStationId(Output.of(managementStationId));
        }

        /**
         * @param osFamily The operating system family.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(@Nullable Output<String> osFamily) {
            $.osFamily = osFamily;
            return this;
        }

        /**
         * @param osFamily The operating system family.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(String osFamily) {
            return osFamily(Output.of(osFamily));
        }

        /**
         * @param profileType The type of registration profile. Either SOFTWARESOURCE, GROUP or LIFECYCLE.
         * 
         * @return builder
         * 
         */
        public Builder profileType(Output<String> profileType) {
            $.profileType = profileType;
            return this;
        }

        /**
         * @param profileType The type of registration profile. Either SOFTWARESOURCE, GROUP or LIFECYCLE.
         * 
         * @return builder
         * 
         */
        public Builder profileType(String profileType) {
            return profileType(Output.of(profileType));
        }

        /**
         * @param softwareSourceIds The list of software source OCIDs that the registration profile will use.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(@Nullable Output<List<String>> softwareSourceIds) {
            $.softwareSourceIds = softwareSourceIds;
            return this;
        }

        /**
         * @param softwareSourceIds The list of software source OCIDs that the registration profile will use.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(List<String> softwareSourceIds) {
            return softwareSourceIds(Output.of(softwareSourceIds));
        }

        /**
         * @param softwareSourceIds The list of software source OCIDs that the registration profile will use.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(String... softwareSourceIds) {
            return softwareSourceIds(List.of(softwareSourceIds));
        }

        /**
         * @param vendorName The software source vendor name.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vendorName(@Nullable Output<String> vendorName) {
            $.vendorName = vendorName;
            return this;
        }

        /**
         * @param vendorName The software source vendor name.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vendorName(String vendorName) {
            return vendorName(Output.of(vendorName));
        }

        public ProfileArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ProfileArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ProfileArgs", "displayName");
            }
            if ($.profileType == null) {
                throw new MissingRequiredPropertyException("ProfileArgs", "profileType");
            }
            return $;
        }
    }

}
