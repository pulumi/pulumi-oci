// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.ScheduledJobOperationArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledJobArgs Empty = new ScheduledJobArgs();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Indicates whether this scheduled job is managed by the Autonomous Linux service.
     * 
     */
    @Import(name="isManagedByAutonomousLinux")
    private @Nullable Output<Boolean> isManagedByAutonomousLinux;

    /**
     * @return Indicates whether this scheduled job is managed by the Autonomous Linux service.
     * 
     */
    public Optional<Output<Boolean>> isManagedByAutonomousLinux() {
        return Optional.ofNullable(this.isManagedByAutonomousLinux);
    }

    /**
     * Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
     * 
     */
    @Import(name="isSubcompartmentIncluded")
    private @Nullable Output<Boolean> isSubcompartmentIncluded;

    /**
     * @return Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
     * 
     */
    public Optional<Output<Boolean>> isSubcompartmentIncluded() {
        return Optional.ofNullable(this.isSubcompartmentIncluded);
    }

    /**
     * The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
     * 
     */
    @Import(name="lifecycleStageIds")
    private @Nullable Output<List<String>> lifecycleStageIds;

    /**
     * @return The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
     * 
     */
    public Optional<Output<List<String>>> lifecycleStageIds() {
        return Optional.ofNullable(this.lifecycleStageIds);
    }

    /**
     * The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<String>> locations;

    /**
     * @return The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
     * 
     */
    public Optional<Output<List<String>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    /**
     * The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
     * 
     */
    @Import(name="managedCompartmentIds")
    private @Nullable Output<List<String>> managedCompartmentIds;

    /**
     * @return The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
     * 
     */
    public Optional<Output<List<String>>> managedCompartmentIds() {
        return Optional.ofNullable(this.managedCompartmentIds);
    }

    /**
     * The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
     * 
     */
    @Import(name="managedInstanceGroupIds")
    private @Nullable Output<List<String>> managedInstanceGroupIds;

    /**
     * @return The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
     * 
     */
    public Optional<Output<List<String>>> managedInstanceGroupIds() {
        return Optional.ofNullable(this.managedInstanceGroupIds);
    }

    /**
     * The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
     * 
     */
    @Import(name="managedInstanceIds")
    private @Nullable Output<List<String>> managedInstanceIds;

    /**
     * @return The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
     * 
     */
    public Optional<Output<List<String>>> managedInstanceIds() {
        return Optional.ofNullable(this.managedInstanceIds);
    }

    /**
     * (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
     * * UPDATE_PACKAGES
     * * UPDATE_ALL
     * * UPDATE_SECURITY
     * * UPDATE_BUGFIX
     * * UPDATE_ENHANCEMENT
     * * UPDATE_OTHER
     * * UPDATE_KSPLICE_USERSPACE
     * * UPDATE_KSPLICE_KERNEL
     * 
     */
    @Import(name="operations", required=true)
    private Output<List<ScheduledJobOperationArgs>> operations;

    /**
     * @return (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
     * * UPDATE_PACKAGES
     * * UPDATE_ALL
     * * UPDATE_SECURITY
     * * UPDATE_BUGFIX
     * * UPDATE_ENHANCEMENT
     * * UPDATE_OTHER
     * * UPDATE_KSPLICE_USERSPACE
     * * UPDATE_KSPLICE_KERNEL
     * 
     */
    public Output<List<ScheduledJobOperationArgs>> operations() {
        return this.operations;
    }

    /**
     * (Updatable) The frequency schedule for a recurring scheduled job.
     * 
     */
    @Import(name="recurringRule")
    private @Nullable Output<String> recurringRule;

    /**
     * @return (Updatable) The frequency schedule for a recurring scheduled job.
     * 
     */
    public Optional<Output<String>> recurringRule() {
        return Optional.ofNullable(this.recurringRule);
    }

    /**
     * (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
     * 
     */
    @Import(name="retryIntervals")
    private @Nullable Output<List<Integer>> retryIntervals;

    /**
     * @return (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
     * 
     */
    public Optional<Output<List<Integer>>> retryIntervals() {
        return Optional.ofNullable(this.retryIntervals);
    }

    /**
     * (Updatable) The type of scheduling frequency for the scheduled job.
     * 
     */
    @Import(name="scheduleType", required=true)
    private Output<String> scheduleType;

    /**
     * @return (Updatable) The type of scheduling frequency for the scheduled job.
     * 
     */
    public Output<String> scheduleType() {
        return this.scheduleType;
    }

    /**
     * (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeNextExecution", required=true)
    private Output<String> timeNextExecution;

    /**
     * @return (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> timeNextExecution() {
        return this.timeNextExecution;
    }

    private ScheduledJobArgs() {}

    private ScheduledJobArgs(ScheduledJobArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isManagedByAutonomousLinux = $.isManagedByAutonomousLinux;
        this.isSubcompartmentIncluded = $.isSubcompartmentIncluded;
        this.lifecycleStageIds = $.lifecycleStageIds;
        this.locations = $.locations;
        this.managedCompartmentIds = $.managedCompartmentIds;
        this.managedInstanceGroupIds = $.managedInstanceGroupIds;
        this.managedInstanceIds = $.managedInstanceIds;
        this.operations = $.operations;
        this.recurringRule = $.recurringRule;
        this.retryIntervals = $.retryIntervals;
        this.scheduleType = $.scheduleType;
        this.timeNextExecution = $.timeNextExecution;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledJobArgs $;

        public Builder() {
            $ = new ScheduledJobArgs();
        }

        public Builder(ScheduledJobArgs defaults) {
            $ = new ScheduledJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isManagedByAutonomousLinux Indicates whether this scheduled job is managed by the Autonomous Linux service.
         * 
         * @return builder
         * 
         */
        public Builder isManagedByAutonomousLinux(@Nullable Output<Boolean> isManagedByAutonomousLinux) {
            $.isManagedByAutonomousLinux = isManagedByAutonomousLinux;
            return this;
        }

        /**
         * @param isManagedByAutonomousLinux Indicates whether this scheduled job is managed by the Autonomous Linux service.
         * 
         * @return builder
         * 
         */
        public Builder isManagedByAutonomousLinux(Boolean isManagedByAutonomousLinux) {
            return isManagedByAutonomousLinux(Output.of(isManagedByAutonomousLinux));
        }

        /**
         * @param isSubcompartmentIncluded Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
         * 
         * @return builder
         * 
         */
        public Builder isSubcompartmentIncluded(@Nullable Output<Boolean> isSubcompartmentIncluded) {
            $.isSubcompartmentIncluded = isSubcompartmentIncluded;
            return this;
        }

        /**
         * @param isSubcompartmentIncluded Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
         * 
         * @return builder
         * 
         */
        public Builder isSubcompartmentIncluded(Boolean isSubcompartmentIncluded) {
            return isSubcompartmentIncluded(Output.of(isSubcompartmentIncluded));
        }

        /**
         * @param lifecycleStageIds The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStageIds(@Nullable Output<List<String>> lifecycleStageIds) {
            $.lifecycleStageIds = lifecycleStageIds;
            return this;
        }

        /**
         * @param lifecycleStageIds The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStageIds(List<String> lifecycleStageIds) {
            return lifecycleStageIds(Output.of(lifecycleStageIds));
        }

        /**
         * @param lifecycleStageIds The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStageIds(String... lifecycleStageIds) {
            return lifecycleStageIds(List.of(lifecycleStageIds));
        }

        /**
         * @param locations The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
         * 
         * @return builder
         * 
         */
        public Builder locations(@Nullable Output<List<String>> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
         * 
         * @return builder
         * 
         */
        public Builder locations(List<String> locations) {
            return locations(Output.of(locations));
        }

        /**
         * @param locations The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
         * 
         * @return builder
         * 
         */
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        /**
         * @param managedCompartmentIds The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedCompartmentIds(@Nullable Output<List<String>> managedCompartmentIds) {
            $.managedCompartmentIds = managedCompartmentIds;
            return this;
        }

        /**
         * @param managedCompartmentIds The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedCompartmentIds(List<String> managedCompartmentIds) {
            return managedCompartmentIds(Output.of(managedCompartmentIds));
        }

        /**
         * @param managedCompartmentIds The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedCompartmentIds(String... managedCompartmentIds) {
            return managedCompartmentIds(List.of(managedCompartmentIds));
        }

        /**
         * @param managedInstanceGroupIds The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupIds(@Nullable Output<List<String>> managedInstanceGroupIds) {
            $.managedInstanceGroupIds = managedInstanceGroupIds;
            return this;
        }

        /**
         * @param managedInstanceGroupIds The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupIds(List<String> managedInstanceGroupIds) {
            return managedInstanceGroupIds(Output.of(managedInstanceGroupIds));
        }

        /**
         * @param managedInstanceGroupIds The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupIds(String... managedInstanceGroupIds) {
            return managedInstanceGroupIds(List.of(managedInstanceGroupIds));
        }

        /**
         * @param managedInstanceIds The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceIds(@Nullable Output<List<String>> managedInstanceIds) {
            $.managedInstanceIds = managedInstanceIds;
            return this;
        }

        /**
         * @param managedInstanceIds The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceIds(List<String> managedInstanceIds) {
            return managedInstanceIds(Output.of(managedInstanceIds));
        }

        /**
         * @param managedInstanceIds The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceIds(String... managedInstanceIds) {
            return managedInstanceIds(List.of(managedInstanceIds));
        }

        /**
         * @param operations (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
         * * UPDATE_PACKAGES
         * * UPDATE_ALL
         * * UPDATE_SECURITY
         * * UPDATE_BUGFIX
         * * UPDATE_ENHANCEMENT
         * * UPDATE_OTHER
         * * UPDATE_KSPLICE_USERSPACE
         * * UPDATE_KSPLICE_KERNEL
         * 
         * @return builder
         * 
         */
        public Builder operations(Output<List<ScheduledJobOperationArgs>> operations) {
            $.operations = operations;
            return this;
        }

        /**
         * @param operations (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
         * * UPDATE_PACKAGES
         * * UPDATE_ALL
         * * UPDATE_SECURITY
         * * UPDATE_BUGFIX
         * * UPDATE_ENHANCEMENT
         * * UPDATE_OTHER
         * * UPDATE_KSPLICE_USERSPACE
         * * UPDATE_KSPLICE_KERNEL
         * 
         * @return builder
         * 
         */
        public Builder operations(List<ScheduledJobOperationArgs> operations) {
            return operations(Output.of(operations));
        }

        /**
         * @param operations (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
         * * UPDATE_PACKAGES
         * * UPDATE_ALL
         * * UPDATE_SECURITY
         * * UPDATE_BUGFIX
         * * UPDATE_ENHANCEMENT
         * * UPDATE_OTHER
         * * UPDATE_KSPLICE_USERSPACE
         * * UPDATE_KSPLICE_KERNEL
         * 
         * @return builder
         * 
         */
        public Builder operations(ScheduledJobOperationArgs... operations) {
            return operations(List.of(operations));
        }

        /**
         * @param recurringRule (Updatable) The frequency schedule for a recurring scheduled job.
         * 
         * @return builder
         * 
         */
        public Builder recurringRule(@Nullable Output<String> recurringRule) {
            $.recurringRule = recurringRule;
            return this;
        }

        /**
         * @param recurringRule (Updatable) The frequency schedule for a recurring scheduled job.
         * 
         * @return builder
         * 
         */
        public Builder recurringRule(String recurringRule) {
            return recurringRule(Output.of(recurringRule));
        }

        /**
         * @param retryIntervals (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
         * 
         * @return builder
         * 
         */
        public Builder retryIntervals(@Nullable Output<List<Integer>> retryIntervals) {
            $.retryIntervals = retryIntervals;
            return this;
        }

        /**
         * @param retryIntervals (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
         * 
         * @return builder
         * 
         */
        public Builder retryIntervals(List<Integer> retryIntervals) {
            return retryIntervals(Output.of(retryIntervals));
        }

        /**
         * @param retryIntervals (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
         * 
         * @return builder
         * 
         */
        public Builder retryIntervals(Integer... retryIntervals) {
            return retryIntervals(List.of(retryIntervals));
        }

        /**
         * @param scheduleType (Updatable) The type of scheduling frequency for the scheduled job.
         * 
         * @return builder
         * 
         */
        public Builder scheduleType(Output<String> scheduleType) {
            $.scheduleType = scheduleType;
            return this;
        }

        /**
         * @param scheduleType (Updatable) The type of scheduling frequency for the scheduled job.
         * 
         * @return builder
         * 
         */
        public Builder scheduleType(String scheduleType) {
            return scheduleType(Output.of(scheduleType));
        }

        /**
         * @param timeNextExecution (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeNextExecution(Output<String> timeNextExecution) {
            $.timeNextExecution = timeNextExecution;
            return this;
        }

        /**
         * @param timeNextExecution (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeNextExecution(String timeNextExecution) {
            return timeNextExecution(Output.of(timeNextExecution));
        }

        public ScheduledJobArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ScheduledJobArgs", "compartmentId");
            }
            if ($.operations == null) {
                throw new MissingRequiredPropertyException("ScheduledJobArgs", "operations");
            }
            if ($.scheduleType == null) {
                throw new MissingRequiredPropertyException("ScheduledJobArgs", "scheduleType");
            }
            if ($.timeNextExecution == null) {
                throw new MissingRequiredPropertyException("ScheduledJobArgs", "timeNextExecution");
            }
            return $;
        }
    }

}
