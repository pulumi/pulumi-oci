// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareSourceAddPackagesManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareSourceAddPackagesManagementArgs Empty = new SoftwareSourceAddPackagesManagementArgs();

    /**
     * Indicates whether the service should generate a custom software source when the package list contains invalid values. When set to true, the service ignores any invalid packages and generates the custom software source with using the valid packages.
     * 
     */
    @Import(name="isContinueOnMissingPackages")
    private @Nullable Output<Boolean> isContinueOnMissingPackages;

    /**
     * @return Indicates whether the service should generate a custom software source when the package list contains invalid values. When set to true, the service ignores any invalid packages and generates the custom software source with using the valid packages.
     * 
     */
    public Optional<Output<Boolean>> isContinueOnMissingPackages() {
        return Optional.ofNullable(this.isContinueOnMissingPackages);
    }

    /**
     * List of packages specified by the name of the package (N) or the full package name (NVRA or NEVRA).
     * 
     */
    @Import(name="packages", required=true)
    private Output<List<String>> packages;

    /**
     * @return List of packages specified by the name of the package (N) or the full package name (NVRA or NEVRA).
     * 
     */
    public Output<List<String>> packages() {
        return this.packages;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="softwareSourceId", required=true)
    private Output<String> softwareSourceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> softwareSourceId() {
        return this.softwareSourceId;
    }

    private SoftwareSourceAddPackagesManagementArgs() {}

    private SoftwareSourceAddPackagesManagementArgs(SoftwareSourceAddPackagesManagementArgs $) {
        this.isContinueOnMissingPackages = $.isContinueOnMissingPackages;
        this.packages = $.packages;
        this.softwareSourceId = $.softwareSourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareSourceAddPackagesManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareSourceAddPackagesManagementArgs $;

        public Builder() {
            $ = new SoftwareSourceAddPackagesManagementArgs();
        }

        public Builder(SoftwareSourceAddPackagesManagementArgs defaults) {
            $ = new SoftwareSourceAddPackagesManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isContinueOnMissingPackages Indicates whether the service should generate a custom software source when the package list contains invalid values. When set to true, the service ignores any invalid packages and generates the custom software source with using the valid packages.
         * 
         * @return builder
         * 
         */
        public Builder isContinueOnMissingPackages(@Nullable Output<Boolean> isContinueOnMissingPackages) {
            $.isContinueOnMissingPackages = isContinueOnMissingPackages;
            return this;
        }

        /**
         * @param isContinueOnMissingPackages Indicates whether the service should generate a custom software source when the package list contains invalid values. When set to true, the service ignores any invalid packages and generates the custom software source with using the valid packages.
         * 
         * @return builder
         * 
         */
        public Builder isContinueOnMissingPackages(Boolean isContinueOnMissingPackages) {
            return isContinueOnMissingPackages(Output.of(isContinueOnMissingPackages));
        }

        /**
         * @param packages List of packages specified by the name of the package (N) or the full package name (NVRA or NEVRA).
         * 
         * @return builder
         * 
         */
        public Builder packages(Output<List<String>> packages) {
            $.packages = packages;
            return this;
        }

        /**
         * @param packages List of packages specified by the name of the package (N) or the full package name (NVRA or NEVRA).
         * 
         * @return builder
         * 
         */
        public Builder packages(List<String> packages) {
            return packages(Output.of(packages));
        }

        /**
         * @param packages List of packages specified by the name of the package (N) or the full package name (NVRA or NEVRA).
         * 
         * @return builder
         * 
         */
        public Builder packages(String... packages) {
            return packages(List.of(packages));
        }

        /**
         * @param softwareSourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(Output<String> softwareSourceId) {
            $.softwareSourceId = softwareSourceId;
            return this;
        }

        /**
         * @param softwareSourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(String softwareSourceId) {
            return softwareSourceId(Output.of(softwareSourceId));
        }

        public SoftwareSourceAddPackagesManagementArgs build() {
            if ($.packages == null) {
                throw new MissingRequiredPropertyException("SoftwareSourceAddPackagesManagementArgs", "packages");
            }
            if ($.softwareSourceId == null) {
                throw new MissingRequiredPropertyException("SoftwareSourceAddPackagesManagementArgs", "softwareSourceId");
            }
            return $;
        }
    }

}
