// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.SoftwareSourceCustomSoftwareSourceFilterArgs;
import com.pulumi.oci.OsManagementHub.inputs.SoftwareSourceVendorSoftwareSourceArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareSourceArgs Empty = new SoftwareSourceArgs();

    /**
     * (Updatable) The OCID of the tenancy containing the software source.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the tenancy containing the software source.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     * 
     */
    @Import(name="customSoftwareSourceFilter")
    private @Nullable Output<SoftwareSourceCustomSoftwareSourceFilterArgs> customSoftwareSourceFilter;

    /**
     * @return (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     * 
     */
    public Optional<Output<SoftwareSourceCustomSoftwareSourceFilterArgs>> customSoftwareSourceFilter() {
        return Optional.ofNullable(this.customSoftwareSourceFilter);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Information specified by the user about the software source.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Information specified by the user about the software source.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) User friendly name.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) User friendly name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Indicates whether service should automatically update the custom software source for the user.
     * 
     */
    @Import(name="isAutomaticallyUpdated")
    private @Nullable Output<Boolean> isAutomaticallyUpdated;

    /**
     * @return (Updatable) Indicates whether service should automatically update the custom software source for the user.
     * 
     */
    public Optional<Output<Boolean>> isAutomaticallyUpdated() {
        return Optional.ofNullable(this.isAutomaticallyUpdated);
    }

    /**
     * (Updatable) Type of the software source.
     * 
     */
    @Import(name="softwareSourceType", required=true)
    private Output<String> softwareSourceType;

    /**
     * @return (Updatable) Type of the software source.
     * 
     */
    public Output<String> softwareSourceType() {
        return this.softwareSourceType;
    }

    /**
     * The version to assign to this custom software source.
     * 
     */
    @Import(name="softwareSourceVersion")
    private @Nullable Output<String> softwareSourceVersion;

    /**
     * @return The version to assign to this custom software source.
     * 
     */
    public Optional<Output<String>> softwareSourceVersion() {
        return Optional.ofNullable(this.softwareSourceVersion);
    }

    /**
     * (Updatable) List of vendor software sources.
     * 
     */
    @Import(name="vendorSoftwareSources", required=true)
    private Output<List<SoftwareSourceVendorSoftwareSourceArgs>> vendorSoftwareSources;

    /**
     * @return (Updatable) List of vendor software sources.
     * 
     */
    public Output<List<SoftwareSourceVendorSoftwareSourceArgs>> vendorSoftwareSources() {
        return this.vendorSoftwareSources;
    }

    private SoftwareSourceArgs() {}

    private SoftwareSourceArgs(SoftwareSourceArgs $) {
        this.compartmentId = $.compartmentId;
        this.customSoftwareSourceFilter = $.customSoftwareSourceFilter;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isAutomaticallyUpdated = $.isAutomaticallyUpdated;
        this.softwareSourceType = $.softwareSourceType;
        this.softwareSourceVersion = $.softwareSourceVersion;
        this.vendorSoftwareSources = $.vendorSoftwareSources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareSourceArgs $;

        public Builder() {
            $ = new SoftwareSourceArgs();
        }

        public Builder(SoftwareSourceArgs defaults) {
            $ = new SoftwareSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the tenancy containing the software source.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the tenancy containing the software source.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param customSoftwareSourceFilter (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
         * 
         * @return builder
         * 
         */
        public Builder customSoftwareSourceFilter(@Nullable Output<SoftwareSourceCustomSoftwareSourceFilterArgs> customSoftwareSourceFilter) {
            $.customSoftwareSourceFilter = customSoftwareSourceFilter;
            return this;
        }

        /**
         * @param customSoftwareSourceFilter (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
         * 
         * @return builder
         * 
         */
        public Builder customSoftwareSourceFilter(SoftwareSourceCustomSoftwareSourceFilterArgs customSoftwareSourceFilter) {
            return customSoftwareSourceFilter(Output.of(customSoftwareSourceFilter));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Information specified by the user about the software source.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Information specified by the user about the software source.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) User friendly name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) User friendly name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAutomaticallyUpdated (Updatable) Indicates whether service should automatically update the custom software source for the user.
         * 
         * @return builder
         * 
         */
        public Builder isAutomaticallyUpdated(@Nullable Output<Boolean> isAutomaticallyUpdated) {
            $.isAutomaticallyUpdated = isAutomaticallyUpdated;
            return this;
        }

        /**
         * @param isAutomaticallyUpdated (Updatable) Indicates whether service should automatically update the custom software source for the user.
         * 
         * @return builder
         * 
         */
        public Builder isAutomaticallyUpdated(Boolean isAutomaticallyUpdated) {
            return isAutomaticallyUpdated(Output.of(isAutomaticallyUpdated));
        }

        /**
         * @param softwareSourceType (Updatable) Type of the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceType(Output<String> softwareSourceType) {
            $.softwareSourceType = softwareSourceType;
            return this;
        }

        /**
         * @param softwareSourceType (Updatable) Type of the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceType(String softwareSourceType) {
            return softwareSourceType(Output.of(softwareSourceType));
        }

        /**
         * @param softwareSourceVersion The version to assign to this custom software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceVersion(@Nullable Output<String> softwareSourceVersion) {
            $.softwareSourceVersion = softwareSourceVersion;
            return this;
        }

        /**
         * @param softwareSourceVersion The version to assign to this custom software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceVersion(String softwareSourceVersion) {
            return softwareSourceVersion(Output.of(softwareSourceVersion));
        }

        /**
         * @param vendorSoftwareSources (Updatable) List of vendor software sources.
         * 
         * @return builder
         * 
         */
        public Builder vendorSoftwareSources(Output<List<SoftwareSourceVendorSoftwareSourceArgs>> vendorSoftwareSources) {
            $.vendorSoftwareSources = vendorSoftwareSources;
            return this;
        }

        /**
         * @param vendorSoftwareSources (Updatable) List of vendor software sources.
         * 
         * @return builder
         * 
         */
        public Builder vendorSoftwareSources(List<SoftwareSourceVendorSoftwareSourceArgs> vendorSoftwareSources) {
            return vendorSoftwareSources(Output.of(vendorSoftwareSources));
        }

        /**
         * @param vendorSoftwareSources (Updatable) List of vendor software sources.
         * 
         * @return builder
         * 
         */
        public Builder vendorSoftwareSources(SoftwareSourceVendorSoftwareSourceArgs... vendorSoftwareSources) {
            return vendorSoftwareSources(List.of(vendorSoftwareSources));
        }

        public SoftwareSourceArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("SoftwareSourceArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("SoftwareSourceArgs", "displayName");
            }
            if ($.softwareSourceType == null) {
                throw new MissingRequiredPropertyException("SoftwareSourceArgs", "softwareSourceType");
            }
            if ($.vendorSoftwareSources == null) {
                throw new MissingRequiredPropertyException("SoftwareSourceArgs", "vendorSoftwareSources");
            }
            return $;
        }
    }

}
