// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs;
import java.util.List;
import java.util.Objects;


public final class SoftwareSourceChangeAvailabilityManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareSourceChangeAvailabilityManagementArgs Empty = new SoftwareSourceChangeAvailabilityManagementArgs();

    /**
     * List of vendor software sources and their availability statuses.
     * 
     */
    @Import(name="softwareSourceAvailabilities", required=true)
    private Output<List<SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs>> softwareSourceAvailabilities;

    /**
     * @return List of vendor software sources and their availability statuses.
     * 
     */
    public Output<List<SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs>> softwareSourceAvailabilities() {
        return this.softwareSourceAvailabilities;
    }

    private SoftwareSourceChangeAvailabilityManagementArgs() {}

    private SoftwareSourceChangeAvailabilityManagementArgs(SoftwareSourceChangeAvailabilityManagementArgs $) {
        this.softwareSourceAvailabilities = $.softwareSourceAvailabilities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareSourceChangeAvailabilityManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareSourceChangeAvailabilityManagementArgs $;

        public Builder() {
            $ = new SoftwareSourceChangeAvailabilityManagementArgs();
        }

        public Builder(SoftwareSourceChangeAvailabilityManagementArgs defaults) {
            $ = new SoftwareSourceChangeAvailabilityManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param softwareSourceAvailabilities List of vendor software sources and their availability statuses.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceAvailabilities(Output<List<SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs>> softwareSourceAvailabilities) {
            $.softwareSourceAvailabilities = softwareSourceAvailabilities;
            return this;
        }

        /**
         * @param softwareSourceAvailabilities List of vendor software sources and their availability statuses.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceAvailabilities(List<SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs> softwareSourceAvailabilities) {
            return softwareSourceAvailabilities(Output.of(softwareSourceAvailabilities));
        }

        /**
         * @param softwareSourceAvailabilities List of vendor software sources and their availability statuses.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceAvailabilities(SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs... softwareSourceAvailabilities) {
            return softwareSourceAvailabilities(List.of(softwareSourceAvailabilities));
        }

        public SoftwareSourceChangeAvailabilityManagementArgs build() {
            if ($.softwareSourceAvailabilities == null) {
                throw new MissingRequiredPropertyException("SoftwareSourceChangeAvailabilityManagementArgs", "softwareSourceAvailabilities");
            }
            return $;
        }
    }

}
