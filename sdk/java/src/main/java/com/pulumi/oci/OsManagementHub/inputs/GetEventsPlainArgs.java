// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.GetEventsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEventsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEventsPlainArgs Empty = new GetEventsPlainArgs();

    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The eventFingerprint of the KernelEventData.
     * 
     */
    @Import(name="eventFingerprint")
    private @Nullable String eventFingerprint;

    /**
     * @return The eventFingerprint of the KernelEventData.
     * 
     */
    public Optional<String> eventFingerprint() {
        return Optional.ofNullable(this.eventFingerprint);
    }

    /**
     * A filter to return only events whose summary matches the given value.
     * 
     */
    @Import(name="eventSummary")
    private @Nullable String eventSummary;

    /**
     * @return A filter to return only events whose summary matches the given value.
     * 
     */
    public Optional<String> eventSummary() {
        return Optional.ofNullable(this.eventSummary);
    }

    /**
     * A filter to return only events with a summary that contains the value provided.
     * 
     */
    @Import(name="eventSummaryContains")
    private @Nullable String eventSummaryContains;

    /**
     * @return A filter to return only events with a summary that contains the value provided.
     * 
     */
    public Optional<String> eventSummaryContains() {
        return Optional.ofNullable(this.eventSummaryContains);
    }

    @Import(name="filters")
    private @Nullable List<GetEventsFilter> filters;

    public Optional<List<GetEventsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Indicates whether to list only resources managed by the Autonomous Linux service.
     * 
     */
    @Import(name="isManagedByAutonomousLinux")
    private @Nullable Boolean isManagedByAutonomousLinux;

    /**
     * @return Indicates whether to list only resources managed by the Autonomous Linux service.
     * 
     */
    public Optional<Boolean> isManagedByAutonomousLinux() {
        return Optional.ofNullable(this.isManagedByAutonomousLinux);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource. This filter returns resources associated with the specified resource.
     * 
     */
    @Import(name="resourceId")
    private @Nullable String resourceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource. This filter returns resources associated with the specified resource.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * A filter to return only events that match the state provided. The state value is case-insensitive.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only events that match the state provided. The state value is case-insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter that returns events that occurred on or after the date provided.       Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreatedGreaterThanOrEqualTo")
    private @Nullable String timeCreatedGreaterThanOrEqualTo;

    /**
     * @return A filter that returns events that occurred on or after the date provided.       Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }

    /**
     * A filter that returns events that occurred on or before the date provided.       Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreatedLessThan")
    private @Nullable String timeCreatedLessThan;

    /**
     * @return A filter that returns events that occurred on or before the date provided.       Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }

    /**
     * A filter to return only resources whose type matches the given value.
     * 
     */
    @Import(name="types")
    private @Nullable List<String> types;

    /**
     * @return A filter to return only resources whose type matches the given value.
     * 
     */
    public Optional<List<String>> types() {
        return Optional.ofNullable(this.types);
    }

    private GetEventsPlainArgs() {}

    private GetEventsPlainArgs(GetEventsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.eventFingerprint = $.eventFingerprint;
        this.eventSummary = $.eventSummary;
        this.eventSummaryContains = $.eventSummaryContains;
        this.filters = $.filters;
        this.id = $.id;
        this.isManagedByAutonomousLinux = $.isManagedByAutonomousLinux;
        this.resourceId = $.resourceId;
        this.state = $.state;
        this.timeCreatedGreaterThanOrEqualTo = $.timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = $.timeCreatedLessThan;
        this.types = $.types;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEventsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEventsPlainArgs $;

        public Builder() {
            $ = new GetEventsPlainArgs();
        }

        public Builder(GetEventsPlainArgs defaults) {
            $ = new GetEventsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param eventFingerprint The eventFingerprint of the KernelEventData.
         * 
         * @return builder
         * 
         */
        public Builder eventFingerprint(@Nullable String eventFingerprint) {
            $.eventFingerprint = eventFingerprint;
            return this;
        }

        /**
         * @param eventSummary A filter to return only events whose summary matches the given value.
         * 
         * @return builder
         * 
         */
        public Builder eventSummary(@Nullable String eventSummary) {
            $.eventSummary = eventSummary;
            return this;
        }

        /**
         * @param eventSummaryContains A filter to return only events with a summary that contains the value provided.
         * 
         * @return builder
         * 
         */
        public Builder eventSummaryContains(@Nullable String eventSummaryContains) {
            $.eventSummaryContains = eventSummaryContains;
            return this;
        }

        public Builder filters(@Nullable List<GetEventsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetEventsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param isManagedByAutonomousLinux Indicates whether to list only resources managed by the Autonomous Linux service.
         * 
         * @return builder
         * 
         */
        public Builder isManagedByAutonomousLinux(@Nullable Boolean isManagedByAutonomousLinux) {
            $.isManagedByAutonomousLinux = isManagedByAutonomousLinux;
            return this;
        }

        /**
         * @param resourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource. This filter returns resources associated with the specified resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param state A filter to return only events that match the state provided. The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param timeCreatedGreaterThanOrEqualTo A filter that returns events that occurred on or after the date provided.       Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {
            $.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeCreatedLessThan A filter that returns events that occurred on or before the date provided.       Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {
            $.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }

        /**
         * @param types A filter to return only resources whose type matches the given value.
         * 
         * @return builder
         * 
         */
        public Builder types(@Nullable List<String> types) {
            $.types = types;
            return this;
        }

        /**
         * @param types A filter to return only resources whose type matches the given value.
         * 
         * @return builder
         * 
         */
        public Builder types(String... types) {
            return types(List.of(types));
        }

        public GetEventsPlainArgs build() {
            return $;
        }
    }

}
