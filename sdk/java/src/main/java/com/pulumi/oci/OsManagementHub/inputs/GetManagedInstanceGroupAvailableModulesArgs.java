// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.GetManagedInstanceGroupAvailableModulesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedInstanceGroupAvailableModulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedInstanceGroupAvailableModulesArgs Empty = new GetManagedInstanceGroupAvailableModulesArgs();

    /**
     * The OCID of the compartment that contains the resources to list.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment that contains the resources to list.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetManagedInstanceGroupAvailableModulesFilterArgs>> filters;

    public Optional<Output<List<GetManagedInstanceGroupAvailableModulesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The managed instance group OCID.
     * 
     */
    @Import(name="managedInstanceGroupId", required=true)
    private Output<String> managedInstanceGroupId;

    /**
     * @return The managed instance group OCID.
     * 
     */
    public Output<String> managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }

    /**
     * The resource name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return resources that may partially match the name given.
     * 
     */
    @Import(name="nameContains")
    private @Nullable Output<String> nameContains;

    /**
     * @return A filter to return resources that may partially match the name given.
     * 
     */
    public Optional<Output<String>> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }

    private GetManagedInstanceGroupAvailableModulesArgs() {}

    private GetManagedInstanceGroupAvailableModulesArgs(GetManagedInstanceGroupAvailableModulesArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.managedInstanceGroupId = $.managedInstanceGroupId;
        this.name = $.name;
        this.nameContains = $.nameContains;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedInstanceGroupAvailableModulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedInstanceGroupAvailableModulesArgs $;

        public Builder() {
            $ = new GetManagedInstanceGroupAvailableModulesArgs();
        }

        public Builder(GetManagedInstanceGroupAvailableModulesArgs defaults) {
            $ = new GetManagedInstanceGroupAvailableModulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetManagedInstanceGroupAvailableModulesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetManagedInstanceGroupAvailableModulesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetManagedInstanceGroupAvailableModulesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedInstanceGroupId The managed instance group OCID.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(Output<String> managedInstanceGroupId) {
            $.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }

        /**
         * @param managedInstanceGroupId The managed instance group OCID.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            return managedInstanceGroupId(Output.of(managedInstanceGroupId));
        }

        /**
         * @param name The resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameContains A filter to return resources that may partially match the name given.
         * 
         * @return builder
         * 
         */
        public Builder nameContains(@Nullable Output<String> nameContains) {
            $.nameContains = nameContains;
            return this;
        }

        /**
         * @param nameContains A filter to return resources that may partially match the name given.
         * 
         * @return builder
         * 
         */
        public Builder nameContains(String nameContains) {
            return nameContains(Output.of(nameContains));
        }

        public GetManagedInstanceGroupAvailableModulesArgs build() {
            if ($.managedInstanceGroupId == null) {
                throw new MissingRequiredPropertyException("GetManagedInstanceGroupAvailableModulesArgs", "managedInstanceGroupId");
            }
            return $;
        }
    }

}
