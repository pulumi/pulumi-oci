// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.GetManagedInstanceGroupAvailablePackagesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedInstanceGroupAvailablePackagesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedInstanceGroupAvailablePackagesPlainArgs Empty = new GetManagedInstanceGroupAvailablePackagesPlainArgs();

    /**
     * The OCID of the compartment that contains the resources to list.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The OCID of the compartment that contains the resources to list.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return resources that may partially match the given display name.
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable String displayNameContains;

    /**
     * @return A filter to return resources that may partially match the given display name.
     * 
     */
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    /**
     * A filter to return resources that match the given display names.
     * 
     */
    @Import(name="displayNames")
    private @Nullable List<String> displayNames;

    /**
     * @return A filter to return resources that match the given display names.
     * 
     */
    public Optional<List<String>> displayNames() {
        return Optional.ofNullable(this.displayNames);
    }

    @Import(name="filters")
    private @Nullable List<GetManagedInstanceGroupAvailablePackagesFilter> filters;

    public Optional<List<GetManagedInstanceGroupAvailablePackagesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
     * 
     */
    @Import(name="isLatest")
    private @Nullable Boolean isLatest;

    /**
     * @return A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
     * 
     */
    public Optional<Boolean> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }

    /**
     * The managed instance group OCID.
     * 
     */
    @Import(name="managedInstanceGroupId", required=true)
    private String managedInstanceGroupId;

    /**
     * @return The managed instance group OCID.
     * 
     */
    public String managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }

    private GetManagedInstanceGroupAvailablePackagesPlainArgs() {}

    private GetManagedInstanceGroupAvailablePackagesPlainArgs(GetManagedInstanceGroupAvailablePackagesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayNameContains = $.displayNameContains;
        this.displayNames = $.displayNames;
        this.filters = $.filters;
        this.isLatest = $.isLatest;
        this.managedInstanceGroupId = $.managedInstanceGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedInstanceGroupAvailablePackagesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedInstanceGroupAvailablePackagesPlainArgs $;

        public Builder() {
            $ = new GetManagedInstanceGroupAvailablePackagesPlainArgs();
        }

        public Builder(GetManagedInstanceGroupAvailablePackagesPlainArgs defaults) {
            $ = new GetManagedInstanceGroupAvailablePackagesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable String displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(@Nullable List<String> displayNames) {
            $.displayNames = displayNames;
            return this;
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }

        public Builder filters(@Nullable List<GetManagedInstanceGroupAvailablePackagesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagedInstanceGroupAvailablePackagesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isLatest A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
         * 
         * @return builder
         * 
         */
        public Builder isLatest(@Nullable Boolean isLatest) {
            $.isLatest = isLatest;
            return this;
        }

        /**
         * @param managedInstanceGroupId The managed instance group OCID.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            $.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }

        public GetManagedInstanceGroupAvailablePackagesPlainArgs build() {
            if ($.managedInstanceGroupId == null) {
                throw new MissingRequiredPropertyException("GetManagedInstanceGroupAvailablePackagesPlainArgs", "managedInstanceGroupId");
            }
            return $;
        }
    }

}
