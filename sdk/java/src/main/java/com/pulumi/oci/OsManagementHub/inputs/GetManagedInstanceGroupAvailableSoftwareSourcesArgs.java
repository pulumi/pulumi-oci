// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedInstanceGroupAvailableSoftwareSourcesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedInstanceGroupAvailableSoftwareSourcesArgs Empty = new GetManagedInstanceGroupAvailableSoftwareSourcesArgs();

    /**
     * The OCID of the compartment that contains the resources to list.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment that contains the resources to list.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return resources that may partially match the given display name.
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable Output<String> displayNameContains;

    /**
     * @return A filter to return resources that may partially match the given display name.
     * 
     */
    public Optional<Output<String>> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    /**
     * A filter to return resources that match the given display names.
     * 
     */
    @Import(name="displayNames")
    private @Nullable Output<List<String>> displayNames;

    /**
     * @return A filter to return resources that match the given display names.
     * 
     */
    public Optional<Output<List<String>>> displayNames() {
        return Optional.ofNullable(this.displayNames);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs>> filters;

    public Optional<Output<List<GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The managed instance group OCID.
     * 
     */
    @Import(name="managedInstanceGroupId", required=true)
    private Output<String> managedInstanceGroupId;

    /**
     * @return The managed instance group OCID.
     * 
     */
    public Output<String> managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }

    private GetManagedInstanceGroupAvailableSoftwareSourcesArgs() {}

    private GetManagedInstanceGroupAvailableSoftwareSourcesArgs(GetManagedInstanceGroupAvailableSoftwareSourcesArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayNameContains = $.displayNameContains;
        this.displayNames = $.displayNames;
        this.filters = $.filters;
        this.managedInstanceGroupId = $.managedInstanceGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedInstanceGroupAvailableSoftwareSourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedInstanceGroupAvailableSoftwareSourcesArgs $;

        public Builder() {
            $ = new GetManagedInstanceGroupAvailableSoftwareSourcesArgs();
        }

        public Builder(GetManagedInstanceGroupAvailableSoftwareSourcesArgs defaults) {
            $ = new GetManagedInstanceGroupAvailableSoftwareSourcesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable Output<String> displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(String displayNameContains) {
            return displayNameContains(Output.of(displayNameContains));
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(@Nullable Output<List<String>> displayNames) {
            $.displayNames = displayNames;
            return this;
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(List<String> displayNames) {
            return displayNames(Output.of(displayNames));
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }

        public Builder filters(@Nullable Output<List<GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedInstanceGroupId The managed instance group OCID.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(Output<String> managedInstanceGroupId) {
            $.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }

        /**
         * @param managedInstanceGroupId The managed instance group OCID.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            return managedInstanceGroupId(Output.of(managedInstanceGroupId));
        }

        public GetManagedInstanceGroupAvailableSoftwareSourcesArgs build() {
            if ($.managedInstanceGroupId == null) {
                throw new MissingRequiredPropertyException("GetManagedInstanceGroupAvailableSoftwareSourcesArgs", "managedInstanceGroupId");
            }
            return $;
        }
    }

}
