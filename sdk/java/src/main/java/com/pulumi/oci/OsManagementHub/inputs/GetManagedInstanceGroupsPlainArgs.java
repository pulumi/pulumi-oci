// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.GetManagedInstanceGroupsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedInstanceGroupsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedInstanceGroupsPlainArgs Empty = new GetManagedInstanceGroupsPlainArgs();

    /**
     * A filter to return only profiles that match the given archType.
     * 
     */
    @Import(name="archType")
    private @Nullable String archType;

    /**
     * @return A filter to return only profiles that match the given archType.
     * 
     */
    public Optional<String> archType() {
        return Optional.ofNullable(this.archType);
    }

    /**
     * The OCID of the compartment that contains the resources to list.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The OCID of the compartment that contains the resources to list.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return resources that may partially match the given display name.
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable String displayNameContains;

    /**
     * @return A filter to return resources that may partially match the given display name.
     * 
     */
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    /**
     * A filter to return resources that match the given display names.
     * 
     */
    @Import(name="displayNames")
    private @Nullable List<String> displayNames;

    /**
     * @return A filter to return resources that match the given display names.
     * 
     */
    public Optional<List<String>> displayNames() {
        return Optional.ofNullable(this.displayNames);
    }

    @Import(name="filters")
    private @Nullable List<GetManagedInstanceGroupsFilter> filters;

    public Optional<List<GetManagedInstanceGroupsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the managed instance group for which to list resources.
     * 
     */
    @Import(name="managedInstanceGroupId")
    private @Nullable String managedInstanceGroupId;

    /**
     * @return The OCID of the managed instance group for which to list resources.
     * 
     */
    public Optional<String> managedInstanceGroupId() {
        return Optional.ofNullable(this.managedInstanceGroupId);
    }

    /**
     * A filter to return only profiles that match the given osFamily.
     * 
     */
    @Import(name="osFamily")
    private @Nullable String osFamily;

    /**
     * @return A filter to return only profiles that match the given osFamily.
     * 
     */
    public Optional<String> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }

    /**
     * The OCID for the software source.
     * 
     */
    @Import(name="softwareSourceId")
    private @Nullable String softwareSourceId;

    /**
     * @return The OCID for the software source.
     * 
     */
    public Optional<String> softwareSourceId() {
        return Optional.ofNullable(this.softwareSourceId);
    }

    /**
     * A filter to return only resources their lifecycle state matches the given lifecycle state.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources their lifecycle state matches the given lifecycle state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetManagedInstanceGroupsPlainArgs() {}

    private GetManagedInstanceGroupsPlainArgs(GetManagedInstanceGroupsPlainArgs $) {
        this.archType = $.archType;
        this.compartmentId = $.compartmentId;
        this.displayNameContains = $.displayNameContains;
        this.displayNames = $.displayNames;
        this.filters = $.filters;
        this.managedInstanceGroupId = $.managedInstanceGroupId;
        this.osFamily = $.osFamily;
        this.softwareSourceId = $.softwareSourceId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedInstanceGroupsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedInstanceGroupsPlainArgs $;

        public Builder() {
            $ = new GetManagedInstanceGroupsPlainArgs();
        }

        public Builder(GetManagedInstanceGroupsPlainArgs defaults) {
            $ = new GetManagedInstanceGroupsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param archType A filter to return only profiles that match the given archType.
         * 
         * @return builder
         * 
         */
        public Builder archType(@Nullable String archType) {
            $.archType = archType;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable String displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(@Nullable List<String> displayNames) {
            $.displayNames = displayNames;
            return this;
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }

        public Builder filters(@Nullable List<GetManagedInstanceGroupsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagedInstanceGroupsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedInstanceGroupId The OCID of the managed instance group for which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(@Nullable String managedInstanceGroupId) {
            $.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }

        /**
         * @param osFamily A filter to return only profiles that match the given osFamily.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(@Nullable String osFamily) {
            $.osFamily = osFamily;
            return this;
        }

        /**
         * @param softwareSourceId The OCID for the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(@Nullable String softwareSourceId) {
            $.softwareSourceId = softwareSourceId;
            return this;
        }

        /**
         * @param state A filter to return only resources their lifecycle state matches the given lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetManagedInstanceGroupsPlainArgs build() {
            return $;
        }
    }

}
