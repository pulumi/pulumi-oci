// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.GetManagedInstanceModulesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedInstanceModulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedInstanceModulesPlainArgs Empty = new GetManagedInstanceModulesPlainArgs();

    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable List<GetManagedInstanceModulesFilter> filters;

    public Optional<List<GetManagedInstanceModulesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     * 
     */
    @Import(name="managedInstanceId", required=true)
    private String managedInstanceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     * 
     */
    public String managedInstanceId() {
        return this.managedInstanceId;
    }

    /**
     * The resource name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The resource name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return resources that may partially match the name given.
     * 
     */
    @Import(name="nameContains")
    private @Nullable String nameContains;

    /**
     * @return A filter to return resources that may partially match the name given.
     * 
     */
    public Optional<String> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }

    private GetManagedInstanceModulesPlainArgs() {}

    private GetManagedInstanceModulesPlainArgs(GetManagedInstanceModulesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.managedInstanceId = $.managedInstanceId;
        this.name = $.name;
        this.nameContains = $.nameContains;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedInstanceModulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedInstanceModulesPlainArgs $;

        public Builder() {
            $ = new GetManagedInstanceModulesPlainArgs();
        }

        public Builder(GetManagedInstanceModulesPlainArgs defaults) {
            $ = new GetManagedInstanceModulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetManagedInstanceModulesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagedInstanceModulesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedInstanceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param name The resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param nameContains A filter to return resources that may partially match the name given.
         * 
         * @return builder
         * 
         */
        public Builder nameContains(@Nullable String nameContains) {
            $.nameContains = nameContains;
            return this;
        }

        public GetManagedInstanceModulesPlainArgs build() {
            if ($.managedInstanceId == null) {
                throw new MissingRequiredPropertyException("GetManagedInstanceModulesPlainArgs", "managedInstanceId");
            }
            return $;
        }
    }

}
