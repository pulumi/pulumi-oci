// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.GetProfilesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProfilesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProfilesPlainArgs Empty = new GetProfilesPlainArgs();

    /**
     * A filter to return only profiles that match the given archType.
     * 
     */
    @Import(name="archType")
    private @Nullable String archType;

    /**
     * @return A filter to return only profiles that match the given archType.
     * 
     */
    public Optional<String> archType() {
        return Optional.ofNullable(this.archType);
    }

    /**
     * (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return resources that may partially match the given display name.
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable String displayNameContains;

    /**
     * @return A filter to return resources that may partially match the given display name.
     * 
     */
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    /**
     * A filter to return resources that match the given display names.
     * 
     */
    @Import(name="displayNames")
    private @Nullable List<String> displayNames;

    /**
     * @return A filter to return resources that match the given display names.
     * 
     */
    public Optional<List<String>> displayNames() {
        return Optional.ofNullable(this.displayNames);
    }

    @Import(name="filters")
    private @Nullable List<GetProfilesFilter> filters;

    public Optional<List<GetProfilesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A boolean variable that is used to list only the default profile resources.
     * 
     */
    @Import(name="isDefaultProfile")
    private @Nullable Boolean isDefaultProfile;

    /**
     * @return A boolean variable that is used to list only the default profile resources.
     * 
     */
    public Optional<Boolean> isDefaultProfile() {
        return Optional.ofNullable(this.isDefaultProfile);
    }

    /**
     * A filter to return only service-provided profiles.
     * 
     */
    @Import(name="isServiceProvidedProfile")
    private @Nullable Boolean isServiceProvidedProfile;

    /**
     * @return A filter to return only service-provided profiles.
     * 
     */
    public Optional<Boolean> isServiceProvidedProfile() {
        return Optional.ofNullable(this.isServiceProvidedProfile);
    }

    /**
     * A filter to return only resources that match the given operating system family.
     * 
     */
    @Import(name="osFamily")
    private @Nullable String osFamily;

    /**
     * @return A filter to return only resources that match the given operating system family.
     * 
     */
    public Optional<String> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile. A filter used to return the specified profile.
     * 
     */
    @Import(name="profileId")
    private @Nullable String profileId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile. A filter used to return the specified profile.
     * 
     */
    public Optional<String> profileId() {
        return Optional.ofNullable(this.profileId);
    }

    /**
     * A filter to return registration profiles that match the given profile type.
     * 
     */
    @Import(name="profileTypes")
    private @Nullable List<String> profileTypes;

    /**
     * @return A filter to return registration profiles that match the given profile type.
     * 
     */
    public Optional<List<String>> profileTypes() {
        return Optional.ofNullable(this.profileTypes);
    }

    /**
     * A filter to return profiles that match the given instance type.
     * 
     */
    @Import(name="registrationTypes")
    private @Nullable List<String> registrationTypes;

    /**
     * @return A filter to return profiles that match the given instance type.
     * 
     */
    public Optional<List<String>> registrationTypes() {
        return Optional.ofNullable(this.registrationTypes);
    }

    /**
     * A filter to return only registration profiles in the given state.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only registration profiles in the given state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return only resources that match the given vendor name.
     * 
     */
    @Import(name="vendorName")
    private @Nullable String vendorName;

    /**
     * @return A filter to return only resources that match the given vendor name.
     * 
     */
    public Optional<String> vendorName() {
        return Optional.ofNullable(this.vendorName);
    }

    private GetProfilesPlainArgs() {}

    private GetProfilesPlainArgs(GetProfilesPlainArgs $) {
        this.archType = $.archType;
        this.compartmentId = $.compartmentId;
        this.displayNameContains = $.displayNameContains;
        this.displayNames = $.displayNames;
        this.filters = $.filters;
        this.isDefaultProfile = $.isDefaultProfile;
        this.isServiceProvidedProfile = $.isServiceProvidedProfile;
        this.osFamily = $.osFamily;
        this.profileId = $.profileId;
        this.profileTypes = $.profileTypes;
        this.registrationTypes = $.registrationTypes;
        this.state = $.state;
        this.vendorName = $.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProfilesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProfilesPlainArgs $;

        public Builder() {
            $ = new GetProfilesPlainArgs();
        }

        public Builder(GetProfilesPlainArgs defaults) {
            $ = new GetProfilesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param archType A filter to return only profiles that match the given archType.
         * 
         * @return builder
         * 
         */
        public Builder archType(@Nullable String archType) {
            $.archType = archType;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable String displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(@Nullable List<String> displayNames) {
            $.displayNames = displayNames;
            return this;
        }

        /**
         * @param displayNames A filter to return resources that match the given display names.
         * 
         * @return builder
         * 
         */
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }

        public Builder filters(@Nullable List<GetProfilesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetProfilesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isDefaultProfile A boolean variable that is used to list only the default profile resources.
         * 
         * @return builder
         * 
         */
        public Builder isDefaultProfile(@Nullable Boolean isDefaultProfile) {
            $.isDefaultProfile = isDefaultProfile;
            return this;
        }

        /**
         * @param isServiceProvidedProfile A filter to return only service-provided profiles.
         * 
         * @return builder
         * 
         */
        public Builder isServiceProvidedProfile(@Nullable Boolean isServiceProvidedProfile) {
            $.isServiceProvidedProfile = isServiceProvidedProfile;
            return this;
        }

        /**
         * @param osFamily A filter to return only resources that match the given operating system family.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(@Nullable String osFamily) {
            $.osFamily = osFamily;
            return this;
        }

        /**
         * @param profileId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile. A filter used to return the specified profile.
         * 
         * @return builder
         * 
         */
        public Builder profileId(@Nullable String profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileTypes A filter to return registration profiles that match the given profile type.
         * 
         * @return builder
         * 
         */
        public Builder profileTypes(@Nullable List<String> profileTypes) {
            $.profileTypes = profileTypes;
            return this;
        }

        /**
         * @param profileTypes A filter to return registration profiles that match the given profile type.
         * 
         * @return builder
         * 
         */
        public Builder profileTypes(String... profileTypes) {
            return profileTypes(List.of(profileTypes));
        }

        /**
         * @param registrationTypes A filter to return profiles that match the given instance type.
         * 
         * @return builder
         * 
         */
        public Builder registrationTypes(@Nullable List<String> registrationTypes) {
            $.registrationTypes = registrationTypes;
            return this;
        }

        /**
         * @param registrationTypes A filter to return profiles that match the given instance type.
         * 
         * @return builder
         * 
         */
        public Builder registrationTypes(String... registrationTypes) {
            return registrationTypes(List.of(registrationTypes));
        }

        /**
         * @param state A filter to return only registration profiles in the given state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param vendorName A filter to return only resources that match the given vendor name.
         * 
         * @return builder
         * 
         */
        public Builder vendorName(@Nullable String vendorName) {
            $.vendorName = vendorName;
            return this;
        }

        public GetProfilesPlainArgs build() {
            return $;
        }
    }

}
