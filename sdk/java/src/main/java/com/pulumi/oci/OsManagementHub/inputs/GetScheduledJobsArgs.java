// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.GetScheduledJobsFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetScheduledJobsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetScheduledJobsArgs Empty = new GetScheduledJobsArgs();

    /**
     * (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Indicates whether to include subcompartments in the returned results. Default is false.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Output<Boolean> compartmentIdInSubtree;

    /**
     * @return Indicates whether to include subcompartments in the returned results. Default is false.
     * 
     */
    public Optional<Output<Boolean>> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    /**
     * A filter to return resources that match the given user-friendly name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return resources that match the given user-friendly name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * A filter to return resources that may partially match the given display name.
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable Output<String> displayNameContains;

    /**
     * @return A filter to return resources that may partially match the given display name.
     * 
     */
    public Optional<Output<String>> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetScheduledJobsFilterArgs>> filters;

    public Optional<Output<List<GetScheduledJobsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job. A filter to return the specified job.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job. A filter to return the specified job.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Indicates whether to list only resources managed by the Autonomous Linux service.
     * 
     */
    @Import(name="isManagedByAutonomousLinux")
    private @Nullable Output<Boolean> isManagedByAutonomousLinux;

    /**
     * @return Indicates whether to list only resources managed by the Autonomous Linux service.
     * 
     */
    public Optional<Output<Boolean>> isManagedByAutonomousLinux() {
        return Optional.ofNullable(this.isManagedByAutonomousLinux);
    }

    /**
     * A filter to return only restricted scheduled jobs.
     * 
     */
    @Import(name="isRestricted")
    private @Nullable Output<Boolean> isRestricted;

    /**
     * @return A filter to return only restricted scheduled jobs.
     * 
     */
    public Optional<Output<Boolean>> isRestricted() {
        return Optional.ofNullable(this.isRestricted);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage. This resource returns resources associated with this lifecycle stage.
     * 
     */
    @Import(name="lifecycleStageId")
    private @Nullable Output<String> lifecycleStageId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage. This resource returns resources associated with this lifecycle stage.
     * 
     */
    public Optional<Output<String>> lifecycleStageId() {
        return Optional.ofNullable(this.lifecycleStageId);
    }

    /**
     * A filter to return only resources whose location does not match the given value.
     * 
     */
    @Import(name="locationNotEqualTos")
    private @Nullable Output<List<String>> locationNotEqualTos;

    /**
     * @return A filter to return only resources whose location does not match the given value.
     * 
     */
    public Optional<Output<List<String>>> locationNotEqualTos() {
        return Optional.ofNullable(this.locationNotEqualTos);
    }

    /**
     * A filter to return only resources whose location matches the given value.
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<String>> locations;

    /**
     * @return A filter to return only resources whose location matches the given value.
     * 
     */
    public Optional<Output<List<String>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed compartment. This filter returns resources associated with this compartment.
     * 
     */
    @Import(name="managedCompartmentId")
    private @Nullable Output<String> managedCompartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed compartment. This filter returns resources associated with this compartment.
     * 
     */
    public Optional<Output<String>> managedCompartmentId() {
        return Optional.ofNullable(this.managedCompartmentId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group. This filter returns resources associated with this group.
     * 
     */
    @Import(name="managedInstanceGroupId")
    private @Nullable Output<String> managedInstanceGroupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group. This filter returns resources associated with this group.
     * 
     */
    public Optional<Output<String>> managedInstanceGroupId() {
        return Optional.ofNullable(this.managedInstanceGroupId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
     * 
     */
    @Import(name="managedInstanceId")
    private @Nullable Output<String> managedInstanceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
     * 
     */
    public Optional<Output<String>> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }

    /**
     * A filter to return only scheduled jobs with the given operation type.
     * 
     */
    @Import(name="operationType")
    private @Nullable Output<String> operationType;

    /**
     * @return A filter to return only scheduled jobs with the given operation type.
     * 
     */
    public Optional<Output<String>> operationType() {
        return Optional.ofNullable(this.operationType);
    }

    /**
     * A filter to return only scheduled jobs of the given scheduling type (one-time or recurring).
     * 
     */
    @Import(name="scheduleType")
    private @Nullable Output<String> scheduleType;

    /**
     * @return A filter to return only scheduled jobs of the given scheduling type (one-time or recurring).
     * 
     */
    public Optional<Output<String>> scheduleType() {
        return Optional.ofNullable(this.scheduleType);
    }

    /**
     * A filter to return only scheduled jobs currently in the given state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return only scheduled jobs currently in the given state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return only resources with a date on or before the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
     * 
     */
    @Import(name="timeEnd")
    private @Nullable Output<String> timeEnd;

    /**
     * @return A filter to return only resources with a date on or before the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
     * 
     */
    public Optional<Output<String>> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }

    /**
     * A filter to return only resources with a date on or after the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
     * 
     */
    @Import(name="timeStart")
    private @Nullable Output<String> timeStart;

    /**
     * @return A filter to return only resources with a date on or after the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
     * 
     */
    public Optional<Output<String>> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }

    private GetScheduledJobsArgs() {}

    private GetScheduledJobsArgs(GetScheduledJobsArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.displayName = $.displayName;
        this.displayNameContains = $.displayNameContains;
        this.filters = $.filters;
        this.id = $.id;
        this.isManagedByAutonomousLinux = $.isManagedByAutonomousLinux;
        this.isRestricted = $.isRestricted;
        this.lifecycleStageId = $.lifecycleStageId;
        this.locationNotEqualTos = $.locationNotEqualTos;
        this.locations = $.locations;
        this.managedCompartmentId = $.managedCompartmentId;
        this.managedInstanceGroupId = $.managedInstanceGroupId;
        this.managedInstanceId = $.managedInstanceId;
        this.operationType = $.operationType;
        this.scheduleType = $.scheduleType;
        this.state = $.state;
        this.timeEnd = $.timeEnd;
        this.timeStart = $.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetScheduledJobsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetScheduledJobsArgs $;

        public Builder() {
            $ = new GetScheduledJobsArgs();
        }

        public Builder(GetScheduledJobsArgs defaults) {
            $ = new GetScheduledJobsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentIdInSubtree Indicates whether to include subcompartments in the returned results. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Output<Boolean> compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Indicates whether to include subcompartments in the returned results. Default is false.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            return compartmentIdInSubtree(Output.of(compartmentIdInSubtree));
        }

        /**
         * @param displayName A filter to return resources that match the given user-friendly name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return resources that match the given user-friendly name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable Output<String> displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(String displayNameContains) {
            return displayNameContains(Output.of(displayNameContains));
        }

        public Builder filters(@Nullable Output<List<GetScheduledJobsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetScheduledJobsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetScheduledJobsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job. A filter to return the specified job.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job. A filter to return the specified job.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param isManagedByAutonomousLinux Indicates whether to list only resources managed by the Autonomous Linux service.
         * 
         * @return builder
         * 
         */
        public Builder isManagedByAutonomousLinux(@Nullable Output<Boolean> isManagedByAutonomousLinux) {
            $.isManagedByAutonomousLinux = isManagedByAutonomousLinux;
            return this;
        }

        /**
         * @param isManagedByAutonomousLinux Indicates whether to list only resources managed by the Autonomous Linux service.
         * 
         * @return builder
         * 
         */
        public Builder isManagedByAutonomousLinux(Boolean isManagedByAutonomousLinux) {
            return isManagedByAutonomousLinux(Output.of(isManagedByAutonomousLinux));
        }

        /**
         * @param isRestricted A filter to return only restricted scheduled jobs.
         * 
         * @return builder
         * 
         */
        public Builder isRestricted(@Nullable Output<Boolean> isRestricted) {
            $.isRestricted = isRestricted;
            return this;
        }

        /**
         * @param isRestricted A filter to return only restricted scheduled jobs.
         * 
         * @return builder
         * 
         */
        public Builder isRestricted(Boolean isRestricted) {
            return isRestricted(Output.of(isRestricted));
        }

        /**
         * @param lifecycleStageId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage. This resource returns resources associated with this lifecycle stage.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStageId(@Nullable Output<String> lifecycleStageId) {
            $.lifecycleStageId = lifecycleStageId;
            return this;
        }

        /**
         * @param lifecycleStageId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage. This resource returns resources associated with this lifecycle stage.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStageId(String lifecycleStageId) {
            return lifecycleStageId(Output.of(lifecycleStageId));
        }

        /**
         * @param locationNotEqualTos A filter to return only resources whose location does not match the given value.
         * 
         * @return builder
         * 
         */
        public Builder locationNotEqualTos(@Nullable Output<List<String>> locationNotEqualTos) {
            $.locationNotEqualTos = locationNotEqualTos;
            return this;
        }

        /**
         * @param locationNotEqualTos A filter to return only resources whose location does not match the given value.
         * 
         * @return builder
         * 
         */
        public Builder locationNotEqualTos(List<String> locationNotEqualTos) {
            return locationNotEqualTos(Output.of(locationNotEqualTos));
        }

        /**
         * @param locationNotEqualTos A filter to return only resources whose location does not match the given value.
         * 
         * @return builder
         * 
         */
        public Builder locationNotEqualTos(String... locationNotEqualTos) {
            return locationNotEqualTos(List.of(locationNotEqualTos));
        }

        /**
         * @param locations A filter to return only resources whose location matches the given value.
         * 
         * @return builder
         * 
         */
        public Builder locations(@Nullable Output<List<String>> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations A filter to return only resources whose location matches the given value.
         * 
         * @return builder
         * 
         */
        public Builder locations(List<String> locations) {
            return locations(Output.of(locations));
        }

        /**
         * @param locations A filter to return only resources whose location matches the given value.
         * 
         * @return builder
         * 
         */
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        /**
         * @param managedCompartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed compartment. This filter returns resources associated with this compartment.
         * 
         * @return builder
         * 
         */
        public Builder managedCompartmentId(@Nullable Output<String> managedCompartmentId) {
            $.managedCompartmentId = managedCompartmentId;
            return this;
        }

        /**
         * @param managedCompartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed compartment. This filter returns resources associated with this compartment.
         * 
         * @return builder
         * 
         */
        public Builder managedCompartmentId(String managedCompartmentId) {
            return managedCompartmentId(Output.of(managedCompartmentId));
        }

        /**
         * @param managedInstanceGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group. This filter returns resources associated with this group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(@Nullable Output<String> managedInstanceGroupId) {
            $.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }

        /**
         * @param managedInstanceGroupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group. This filter returns resources associated with this group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            return managedInstanceGroupId(Output.of(managedInstanceGroupId));
        }

        /**
         * @param managedInstanceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(@Nullable Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param operationType A filter to return only scheduled jobs with the given operation type.
         * 
         * @return builder
         * 
         */
        public Builder operationType(@Nullable Output<String> operationType) {
            $.operationType = operationType;
            return this;
        }

        /**
         * @param operationType A filter to return only scheduled jobs with the given operation type.
         * 
         * @return builder
         * 
         */
        public Builder operationType(String operationType) {
            return operationType(Output.of(operationType));
        }

        /**
         * @param scheduleType A filter to return only scheduled jobs of the given scheduling type (one-time or recurring).
         * 
         * @return builder
         * 
         */
        public Builder scheduleType(@Nullable Output<String> scheduleType) {
            $.scheduleType = scheduleType;
            return this;
        }

        /**
         * @param scheduleType A filter to return only scheduled jobs of the given scheduling type (one-time or recurring).
         * 
         * @return builder
         * 
         */
        public Builder scheduleType(String scheduleType) {
            return scheduleType(Output.of(scheduleType));
        }

        /**
         * @param state A filter to return only scheduled jobs currently in the given state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only scheduled jobs currently in the given state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeEnd A filter to return only resources with a date on or before the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
         * 
         * @return builder
         * 
         */
        public Builder timeEnd(@Nullable Output<String> timeEnd) {
            $.timeEnd = timeEnd;
            return this;
        }

        /**
         * @param timeEnd A filter to return only resources with a date on or before the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
         * 
         * @return builder
         * 
         */
        public Builder timeEnd(String timeEnd) {
            return timeEnd(Output.of(timeEnd));
        }

        /**
         * @param timeStart A filter to return only resources with a date on or after the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
         * 
         * @return builder
         * 
         */
        public Builder timeStart(@Nullable Output<String> timeStart) {
            $.timeStart = timeStart;
            return this;
        }

        /**
         * @param timeStart A filter to return only resources with a date on or after the given value, in ISO 8601 format.  Example: 2017-07-14T02:40:00.000Z
         * 
         * @return builder
         * 
         */
        public Builder timeStart(String timeStart) {
            return timeStart(Output.of(timeStart));
        }

        public GetScheduledJobsArgs build() {
            return $;
        }
    }

}
