// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetSoftwareSourceModuleStreamPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSoftwareSourceModuleStreamPlainArgs Empty = new GetSoftwareSourceModuleStreamPlainArgs();

    /**
     * The name of the module.
     * 
     */
    @Import(name="moduleName", required=true)
    private String moduleName;

    /**
     * @return The name of the module.
     * 
     */
    public String moduleName() {
        return this.moduleName;
    }

    /**
     * The software source OCID.
     * 
     */
    @Import(name="softwareSourceId", required=true)
    private String softwareSourceId;

    /**
     * @return The software source OCID.
     * 
     */
    public String softwareSourceId() {
        return this.softwareSourceId;
    }

    /**
     * The name of the stream of the containing module.
     * 
     */
    @Import(name="streamName", required=true)
    private String streamName;

    /**
     * @return The name of the stream of the containing module.
     * 
     */
    public String streamName() {
        return this.streamName;
    }

    private GetSoftwareSourceModuleStreamPlainArgs() {}

    private GetSoftwareSourceModuleStreamPlainArgs(GetSoftwareSourceModuleStreamPlainArgs $) {
        this.moduleName = $.moduleName;
        this.softwareSourceId = $.softwareSourceId;
        this.streamName = $.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSoftwareSourceModuleStreamPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSoftwareSourceModuleStreamPlainArgs $;

        public Builder() {
            $ = new GetSoftwareSourceModuleStreamPlainArgs();
        }

        public Builder(GetSoftwareSourceModuleStreamPlainArgs defaults) {
            $ = new GetSoftwareSourceModuleStreamPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param moduleName The name of the module.
         * 
         * @return builder
         * 
         */
        public Builder moduleName(String moduleName) {
            $.moduleName = moduleName;
            return this;
        }

        /**
         * @param softwareSourceId The software source OCID.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(String softwareSourceId) {
            $.softwareSourceId = softwareSourceId;
            return this;
        }

        /**
         * @param streamName The name of the stream of the containing module.
         * 
         * @return builder
         * 
         */
        public Builder streamName(String streamName) {
            $.streamName = streamName;
            return this;
        }

        public GetSoftwareSourceModuleStreamPlainArgs build() {
            if ($.moduleName == null) {
                throw new MissingRequiredPropertyException("GetSoftwareSourceModuleStreamPlainArgs", "moduleName");
            }
            if ($.softwareSourceId == null) {
                throw new MissingRequiredPropertyException("GetSoftwareSourceModuleStreamPlainArgs", "softwareSourceId");
            }
            if ($.streamName == null) {
                throw new MissingRequiredPropertyException("GetSoftwareSourceModuleStreamPlainArgs", "streamName");
            }
            return $;
        }
    }

}
