// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetSoftwareSourceSoftwarePackageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSoftwareSourceSoftwarePackageArgs Empty = new GetSoftwareSourceSoftwarePackageArgs();

    /**
     * The name of the software package.
     * 
     */
    @Import(name="softwarePackageName", required=true)
    private Output<String> softwarePackageName;

    /**
     * @return The name of the software package.
     * 
     */
    public Output<String> softwarePackageName() {
        return this.softwarePackageName;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    @Import(name="softwareSourceId", required=true)
    private Output<String> softwareSourceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    public Output<String> softwareSourceId() {
        return this.softwareSourceId;
    }

    private GetSoftwareSourceSoftwarePackageArgs() {}

    private GetSoftwareSourceSoftwarePackageArgs(GetSoftwareSourceSoftwarePackageArgs $) {
        this.softwarePackageName = $.softwarePackageName;
        this.softwareSourceId = $.softwareSourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSoftwareSourceSoftwarePackageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSoftwareSourceSoftwarePackageArgs $;

        public Builder() {
            $ = new GetSoftwareSourceSoftwarePackageArgs();
        }

        public Builder(GetSoftwareSourceSoftwarePackageArgs defaults) {
            $ = new GetSoftwareSourceSoftwarePackageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param softwarePackageName The name of the software package.
         * 
         * @return builder
         * 
         */
        public Builder softwarePackageName(Output<String> softwarePackageName) {
            $.softwarePackageName = softwarePackageName;
            return this;
        }

        /**
         * @param softwarePackageName The name of the software package.
         * 
         * @return builder
         * 
         */
        public Builder softwarePackageName(String softwarePackageName) {
            return softwarePackageName(Output.of(softwarePackageName));
        }

        /**
         * @param softwareSourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(Output<String> softwareSourceId) {
            $.softwareSourceId = softwareSourceId;
            return this;
        }

        /**
         * @param softwareSourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(String softwareSourceId) {
            return softwareSourceId(Output.of(softwareSourceId));
        }

        public GetSoftwareSourceSoftwarePackageArgs build() {
            if ($.softwarePackageName == null) {
                throw new MissingRequiredPropertyException("GetSoftwareSourceSoftwarePackageArgs", "softwarePackageName");
            }
            if ($.softwareSourceId == null) {
                throw new MissingRequiredPropertyException("GetSoftwareSourceSoftwarePackageArgs", "softwareSourceId");
            }
            return $;
        }
    }

}
