// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.GetSoftwareSourceSoftwarePackagesFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSoftwareSourceSoftwarePackagesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSoftwareSourceSoftwarePackagesArgs Empty = new GetSoftwareSourceSoftwarePackagesArgs();

    /**
     * A filter to return resources that match the given user-friendly name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return resources that match the given user-friendly name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * A filter to return resources that may partially match the given display name.
     * 
     */
    @Import(name="displayNameContains")
    private @Nullable Output<String> displayNameContains;

    /**
     * @return A filter to return resources that may partially match the given display name.
     * 
     */
    public Optional<Output<String>> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetSoftwareSourceSoftwarePackagesFilterArgs>> filters;

    public Optional<Output<List<GetSoftwareSourceSoftwarePackagesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Indicates whether to list only the latest versions of packages, module streams, and stream profiles.
     * 
     */
    @Import(name="isLatest")
    private @Nullable Output<Boolean> isLatest;

    /**
     * @return Indicates whether to list only the latest versions of packages, module streams, and stream profiles.
     * 
     */
    public Optional<Output<Boolean>> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    @Import(name="softwareSourceId", required=true)
    private Output<String> softwareSourceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    public Output<String> softwareSourceId() {
        return this.softwareSourceId;
    }

    private GetSoftwareSourceSoftwarePackagesArgs() {}

    private GetSoftwareSourceSoftwarePackagesArgs(GetSoftwareSourceSoftwarePackagesArgs $) {
        this.displayName = $.displayName;
        this.displayNameContains = $.displayNameContains;
        this.filters = $.filters;
        this.isLatest = $.isLatest;
        this.softwareSourceId = $.softwareSourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSoftwareSourceSoftwarePackagesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSoftwareSourceSoftwarePackagesArgs $;

        public Builder() {
            $ = new GetSoftwareSourceSoftwarePackagesArgs();
        }

        public Builder(GetSoftwareSourceSoftwarePackagesArgs defaults) {
            $ = new GetSoftwareSourceSoftwarePackagesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return resources that match the given user-friendly name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return resources that match the given user-friendly name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable Output<String> displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param displayNameContains A filter to return resources that may partially match the given display name.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(String displayNameContains) {
            return displayNameContains(Output.of(displayNameContains));
        }

        public Builder filters(@Nullable Output<List<GetSoftwareSourceSoftwarePackagesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSoftwareSourceSoftwarePackagesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSoftwareSourceSoftwarePackagesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isLatest Indicates whether to list only the latest versions of packages, module streams, and stream profiles.
         * 
         * @return builder
         * 
         */
        public Builder isLatest(@Nullable Output<Boolean> isLatest) {
            $.isLatest = isLatest;
            return this;
        }

        /**
         * @param isLatest Indicates whether to list only the latest versions of packages, module streams, and stream profiles.
         * 
         * @return builder
         * 
         */
        public Builder isLatest(Boolean isLatest) {
            return isLatest(Output.of(isLatest));
        }

        /**
         * @param softwareSourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(Output<String> softwareSourceId) {
            $.softwareSourceId = softwareSourceId;
            return this;
        }

        /**
         * @param softwareSourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(String softwareSourceId) {
            return softwareSourceId(Output.of(softwareSourceId));
        }

        public GetSoftwareSourceSoftwarePackagesArgs build() {
            if ($.softwareSourceId == null) {
                throw new MissingRequiredPropertyException("GetSoftwareSourceSoftwarePackagesArgs", "softwareSourceId");
            }
            return $;
        }
    }

}
