// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceGroupManageModuleStreamsManagementEnableArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceGroupManageModuleStreamsManagementEnableArgs Empty = new ManagedInstanceGroupManageModuleStreamsManagementEnableArgs();

    /**
     * The name of a module.
     * 
     */
    @Import(name="moduleName", required=true)
    private Output<String> moduleName;

    /**
     * @return The name of a module.
     * 
     */
    public Output<String> moduleName() {
        return this.moduleName;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source that contains the module stream.
     * 
     */
    @Import(name="softwareSourceId")
    private @Nullable Output<String> softwareSourceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source that contains the module stream.
     * 
     */
    public Optional<Output<String>> softwareSourceId() {
        return Optional.ofNullable(this.softwareSourceId);
    }

    /**
     * The name of a stream of the specified module.
     * 
     */
    @Import(name="streamName", required=true)
    private Output<String> streamName;

    /**
     * @return The name of a stream of the specified module.
     * 
     */
    public Output<String> streamName() {
        return this.streamName;
    }

    private ManagedInstanceGroupManageModuleStreamsManagementEnableArgs() {}

    private ManagedInstanceGroupManageModuleStreamsManagementEnableArgs(ManagedInstanceGroupManageModuleStreamsManagementEnableArgs $) {
        this.moduleName = $.moduleName;
        this.softwareSourceId = $.softwareSourceId;
        this.streamName = $.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceGroupManageModuleStreamsManagementEnableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceGroupManageModuleStreamsManagementEnableArgs $;

        public Builder() {
            $ = new ManagedInstanceGroupManageModuleStreamsManagementEnableArgs();
        }

        public Builder(ManagedInstanceGroupManageModuleStreamsManagementEnableArgs defaults) {
            $ = new ManagedInstanceGroupManageModuleStreamsManagementEnableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param moduleName The name of a module.
         * 
         * @return builder
         * 
         */
        public Builder moduleName(Output<String> moduleName) {
            $.moduleName = moduleName;
            return this;
        }

        /**
         * @param moduleName The name of a module.
         * 
         * @return builder
         * 
         */
        public Builder moduleName(String moduleName) {
            return moduleName(Output.of(moduleName));
        }

        /**
         * @param softwareSourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source that contains the module stream.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(@Nullable Output<String> softwareSourceId) {
            $.softwareSourceId = softwareSourceId;
            return this;
        }

        /**
         * @param softwareSourceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source that contains the module stream.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceId(String softwareSourceId) {
            return softwareSourceId(Output.of(softwareSourceId));
        }

        /**
         * @param streamName The name of a stream of the specified module.
         * 
         * @return builder
         * 
         */
        public Builder streamName(Output<String> streamName) {
            $.streamName = streamName;
            return this;
        }

        /**
         * @param streamName The name of a stream of the specified module.
         * 
         * @return builder
         * 
         */
        public Builder streamName(String streamName) {
            return streamName(Output.of(streamName));
        }

        public ManagedInstanceGroupManageModuleStreamsManagementEnableArgs build() {
            if ($.moduleName == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceGroupManageModuleStreamsManagementEnableArgs", "moduleName");
            }
            if ($.streamName == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceGroupManageModuleStreamsManagementEnableArgs", "streamName");
            }
            return $;
        }
    }

}
