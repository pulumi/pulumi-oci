// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceGroupSoftwareSourceArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceGroupState Empty = new ManagedInstanceGroupState();

    /**
     * The CPU architecture type of the managed instance(s) that this managed instance group will contain.
     * 
     */
    @Import(name="archType")
    private @Nullable Output<String> archType;

    /**
     * @return The CPU architecture type of the managed instance(s) that this managed instance group will contain.
     * 
     */
    public Optional<Output<String>> archType() {
        return Optional.ofNullable(this.archType);
    }

    /**
     * The OCID of the tenancy containing the managed instance group.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the tenancy containing the managed instance group.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Details about the managed instance group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Details about the managed instance group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A user-friendly name for the managed instance group. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the managed instance group. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The number of Managed Instances in the managed instance group.
     * 
     */
    @Import(name="managedInstanceCount")
    private @Nullable Output<Integer> managedInstanceCount;

    /**
     * @return The number of Managed Instances in the managed instance group.
     * 
     */
    public Optional<Output<Integer>> managedInstanceCount() {
        return Optional.ofNullable(this.managedInstanceCount);
    }

    /**
     * The list of managed instance OCIDs to be added to the managed instance group.
     * 
     */
    @Import(name="managedInstanceIds")
    private @Nullable Output<List<String>> managedInstanceIds;

    /**
     * @return The list of managed instance OCIDs to be added to the managed instance group.
     * 
     */
    public Optional<Output<List<String>>> managedInstanceIds() {
        return Optional.ofNullable(this.managedInstanceIds);
    }

    /**
     * The operating system type of the managed instance(s) that this managed instance group will contain.
     * 
     */
    @Import(name="osFamily")
    private @Nullable Output<String> osFamily;

    /**
     * @return The operating system type of the managed instance(s) that this managed instance group will contain.
     * 
     */
    public Optional<Output<String>> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }

    /**
     * The number of scheduled jobs pending against the managed instance group.
     * 
     */
    @Import(name="pendingJobCount")
    private @Nullable Output<Integer> pendingJobCount;

    /**
     * @return The number of scheduled jobs pending against the managed instance group.
     * 
     */
    public Optional<Output<Integer>> pendingJobCount() {
        return Optional.ofNullable(this.pendingJobCount);
    }

    /**
     * The list of software source OCIDs available to the managed instances in the managed instance group.
     * 
     */
    @Import(name="softwareSourceIds")
    private @Nullable Output<List<String>> softwareSourceIds;

    /**
     * @return The list of software source OCIDs available to the managed instances in the managed instance group.
     * 
     */
    public Optional<Output<List<String>>> softwareSourceIds() {
        return Optional.ofNullable(this.softwareSourceIds);
    }

    /**
     * The list of software sources that the managed instance group will use.
     * 
     */
    @Import(name="softwareSources")
    private @Nullable Output<List<ManagedInstanceGroupSoftwareSourceArgs>> softwareSources;

    /**
     * @return The list of software sources that the managed instance group will use.
     * 
     */
    public Optional<Output<List<ManagedInstanceGroupSoftwareSourceArgs>>> softwareSources() {
        return Optional.ofNullable(this.softwareSources);
    }

    /**
     * The current state of the managed instance group.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the managed instance group.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time the managed instance group was created. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the managed instance group was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the managed instance group was last modified. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeModified")
    private @Nullable Output<String> timeModified;

    /**
     * @return The time the managed instance group was last modified. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeModified() {
        return Optional.ofNullable(this.timeModified);
    }

    /**
     * The software source vendor name.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="vendorName")
    private @Nullable Output<String> vendorName;

    /**
     * @return The software source vendor name.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> vendorName() {
        return Optional.ofNullable(this.vendorName);
    }

    private ManagedInstanceGroupState() {}

    private ManagedInstanceGroupState(ManagedInstanceGroupState $) {
        this.archType = $.archType;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.managedInstanceCount = $.managedInstanceCount;
        this.managedInstanceIds = $.managedInstanceIds;
        this.osFamily = $.osFamily;
        this.pendingJobCount = $.pendingJobCount;
        this.softwareSourceIds = $.softwareSourceIds;
        this.softwareSources = $.softwareSources;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeModified = $.timeModified;
        this.vendorName = $.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceGroupState $;

        public Builder() {
            $ = new ManagedInstanceGroupState();
        }

        public Builder(ManagedInstanceGroupState defaults) {
            $ = new ManagedInstanceGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param archType The CPU architecture type of the managed instance(s) that this managed instance group will contain.
         * 
         * @return builder
         * 
         */
        public Builder archType(@Nullable Output<String> archType) {
            $.archType = archType;
            return this;
        }

        /**
         * @param archType The CPU architecture type of the managed instance(s) that this managed instance group will contain.
         * 
         * @return builder
         * 
         */
        public Builder archType(String archType) {
            return archType(Output.of(archType));
        }

        /**
         * @param compartmentId The OCID of the tenancy containing the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the tenancy containing the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Details about the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Details about the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) A user-friendly name for the managed instance group. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name for the managed instance group. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param managedInstanceCount The number of Managed Instances in the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceCount(@Nullable Output<Integer> managedInstanceCount) {
            $.managedInstanceCount = managedInstanceCount;
            return this;
        }

        /**
         * @param managedInstanceCount The number of Managed Instances in the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceCount(Integer managedInstanceCount) {
            return managedInstanceCount(Output.of(managedInstanceCount));
        }

        /**
         * @param managedInstanceIds The list of managed instance OCIDs to be added to the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceIds(@Nullable Output<List<String>> managedInstanceIds) {
            $.managedInstanceIds = managedInstanceIds;
            return this;
        }

        /**
         * @param managedInstanceIds The list of managed instance OCIDs to be added to the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceIds(List<String> managedInstanceIds) {
            return managedInstanceIds(Output.of(managedInstanceIds));
        }

        /**
         * @param managedInstanceIds The list of managed instance OCIDs to be added to the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceIds(String... managedInstanceIds) {
            return managedInstanceIds(List.of(managedInstanceIds));
        }

        /**
         * @param osFamily The operating system type of the managed instance(s) that this managed instance group will contain.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(@Nullable Output<String> osFamily) {
            $.osFamily = osFamily;
            return this;
        }

        /**
         * @param osFamily The operating system type of the managed instance(s) that this managed instance group will contain.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(String osFamily) {
            return osFamily(Output.of(osFamily));
        }

        /**
         * @param pendingJobCount The number of scheduled jobs pending against the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder pendingJobCount(@Nullable Output<Integer> pendingJobCount) {
            $.pendingJobCount = pendingJobCount;
            return this;
        }

        /**
         * @param pendingJobCount The number of scheduled jobs pending against the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder pendingJobCount(Integer pendingJobCount) {
            return pendingJobCount(Output.of(pendingJobCount));
        }

        /**
         * @param softwareSourceIds The list of software source OCIDs available to the managed instances in the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(@Nullable Output<List<String>> softwareSourceIds) {
            $.softwareSourceIds = softwareSourceIds;
            return this;
        }

        /**
         * @param softwareSourceIds The list of software source OCIDs available to the managed instances in the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(List<String> softwareSourceIds) {
            return softwareSourceIds(Output.of(softwareSourceIds));
        }

        /**
         * @param softwareSourceIds The list of software source OCIDs available to the managed instances in the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(String... softwareSourceIds) {
            return softwareSourceIds(List.of(softwareSourceIds));
        }

        /**
         * @param softwareSources The list of software sources that the managed instance group will use.
         * 
         * @return builder
         * 
         */
        public Builder softwareSources(@Nullable Output<List<ManagedInstanceGroupSoftwareSourceArgs>> softwareSources) {
            $.softwareSources = softwareSources;
            return this;
        }

        /**
         * @param softwareSources The list of software sources that the managed instance group will use.
         * 
         * @return builder
         * 
         */
        public Builder softwareSources(List<ManagedInstanceGroupSoftwareSourceArgs> softwareSources) {
            return softwareSources(Output.of(softwareSources));
        }

        /**
         * @param softwareSources The list of software sources that the managed instance group will use.
         * 
         * @return builder
         * 
         */
        public Builder softwareSources(ManagedInstanceGroupSoftwareSourceArgs... softwareSources) {
            return softwareSources(List.of(softwareSources));
        }

        /**
         * @param state The current state of the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the managed instance group.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time the managed instance group was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the managed instance group was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeModified The time the managed instance group was last modified. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeModified(@Nullable Output<String> timeModified) {
            $.timeModified = timeModified;
            return this;
        }

        /**
         * @param timeModified The time the managed instance group was last modified. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeModified(String timeModified) {
            return timeModified(Output.of(timeModified));
        }

        /**
         * @param vendorName The software source vendor name.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vendorName(@Nullable Output<String> vendorName) {
            $.vendorName = vendorName;
            return this;
        }

        /**
         * @param vendorName The software source vendor name.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vendorName(String vendorName) {
            return vendorName(Output.of(vendorName));
        }

        public ManagedInstanceGroupState build() {
            return $;
        }
    }

}
