// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceAutonomousSettingsArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceLifecycleEnvironmentArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceLifecycleStageArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceManagedInstanceGroupArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagedInstanceSoftwareSourceArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceState Empty = new ManagedInstanceState();

    /**
     * The CPU architecture type of the managed instance.
     * 
     */
    @Import(name="architecture")
    private @Nullable Output<String> architecture;

    /**
     * @return The CPU architecture type of the managed instance.
     * 
     */
    public Optional<Output<String>> architecture() {
        return Optional.ofNullable(this.architecture);
    }

    /**
     * (Updatable) Updatable settings for the Autonomous Linux service.
     * 
     */
    @Import(name="autonomousSettings")
    private @Nullable Output<ManagedInstanceAutonomousSettingsArgs> autonomousSettings;

    /**
     * @return (Updatable) Updatable settings for the Autonomous Linux service.
     * 
     */
    public Optional<Output<ManagedInstanceAutonomousSettingsArgs>> autonomousSettings() {
        return Optional.ofNullable(this.autonomousSettings);
    }

    /**
     * Number of bug fix type updates available for installation.
     * 
     */
    @Import(name="bugUpdatesAvailable")
    private @Nullable Output<Integer> bugUpdatesAvailable;

    /**
     * @return Number of bug fix type updates available for installation.
     * 
     */
    public Optional<Output<Integer>> bugUpdatesAvailable() {
        return Optional.ofNullable(this.bugUpdatesAvailable);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) User-specified description of the managed instance. Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) User-specified description of the managed instance. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Software source name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Software source name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Number of enhancement type updates available for installation.
     * 
     */
    @Import(name="enhancementUpdatesAvailable")
    private @Nullable Output<Integer> enhancementUpdatesAvailable;

    /**
     * @return Number of enhancement type updates available for installation.
     * 
     */
    public Optional<Output<Integer>> enhancementUpdatesAvailable() {
        return Optional.ofNullable(this.enhancementUpdatesAvailable);
    }

    /**
     * Number of packages installed on the instance.
     * 
     */
    @Import(name="installedPackages")
    private @Nullable Output<Integer> installedPackages;

    /**
     * @return Number of packages installed on the instance.
     * 
     */
    public Optional<Output<Integer>> installedPackages() {
        return Optional.ofNullable(this.installedPackages);
    }

    /**
     * Number of Windows updates installed on the instance.
     * 
     */
    @Import(name="installedWindowsUpdates")
    private @Nullable Output<Integer> installedWindowsUpdates;

    /**
     * @return Number of Windows updates installed on the instance.
     * 
     */
    public Optional<Output<Integer>> installedWindowsUpdates() {
        return Optional.ofNullable(this.installedWindowsUpdates);
    }

    /**
     * Indicates whether the Autonomous Linux service manages the instance.
     * 
     */
    @Import(name="isManagedByAutonomousLinux")
    private @Nullable Output<Boolean> isManagedByAutonomousLinux;

    /**
     * @return Indicates whether the Autonomous Linux service manages the instance.
     * 
     */
    public Optional<Output<Boolean>> isManagedByAutonomousLinux() {
        return Optional.ofNullable(this.isManagedByAutonomousLinux);
    }

    /**
     * Indicates whether this managed instance is acting as an on-premises management station.
     * 
     */
    @Import(name="isManagementStation")
    private @Nullable Output<Boolean> isManagementStation;

    /**
     * @return Indicates whether this managed instance is acting as an on-premises management station.
     * 
     */
    public Optional<Output<Boolean>> isManagementStation() {
        return Optional.ofNullable(this.isManagementStation);
    }

    /**
     * Indicates whether a reboot is required to complete installation of updates.
     * 
     */
    @Import(name="isRebootRequired")
    private @Nullable Output<Boolean> isRebootRequired;

    /**
     * @return Indicates whether a reboot is required to complete installation of updates.
     * 
     */
    public Optional<Output<Boolean>> isRebootRequired() {
        return Optional.ofNullable(this.isRebootRequired);
    }

    /**
     * The ksplice effective kernel version.
     * 
     */
    @Import(name="kspliceEffectiveKernelVersion")
    private @Nullable Output<String> kspliceEffectiveKernelVersion;

    /**
     * @return The ksplice effective kernel version.
     * 
     */
    public Optional<Output<String>> kspliceEffectiveKernelVersion() {
        return Optional.ofNullable(this.kspliceEffectiveKernelVersion);
    }

    /**
     * Id and name of a resource to simplify the display for the user.
     * 
     */
    @Import(name="lifecycleEnvironments")
    private @Nullable Output<List<ManagedInstanceLifecycleEnvironmentArgs>> lifecycleEnvironments;

    /**
     * @return Id and name of a resource to simplify the display for the user.
     * 
     */
    public Optional<Output<List<ManagedInstanceLifecycleEnvironmentArgs>>> lifecycleEnvironments() {
        return Optional.ofNullable(this.lifecycleEnvironments);
    }

    /**
     * Id and name of a resource to simplify the display for the user.
     * 
     */
    @Import(name="lifecycleStages")
    private @Nullable Output<List<ManagedInstanceLifecycleStageArgs>> lifecycleStages;

    /**
     * @return Id and name of a resource to simplify the display for the user.
     * 
     */
    public Optional<Output<List<ManagedInstanceLifecycleStageArgs>>> lifecycleStages() {
        return Optional.ofNullable(this.lifecycleStages);
    }

    /**
     * The location of the managed instance.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the managed instance.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Id and name of a resource to simplify the display for the user.
     * 
     */
    @Import(name="managedInstanceGroups")
    private @Nullable Output<List<ManagedInstanceManagedInstanceGroupArgs>> managedInstanceGroups;

    /**
     * @return Id and name of a resource to simplify the display for the user.
     * 
     */
    public Optional<Output<List<ManagedInstanceManagedInstanceGroupArgs>>> managedInstanceGroups() {
        return Optional.ofNullable(this.managedInstanceGroups);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     * 
     */
    @Import(name="managedInstanceId")
    private @Nullable Output<String> managedInstanceId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     * 
     */
    public Optional<Output<String>> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Oracle Notifications service (ONS) topic. ONS is the channel used to send notifications to the customer.
     * 
     */
    @Import(name="notificationTopicId")
    private @Nullable Output<String> notificationTopicId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Oracle Notifications service (ONS) topic. ONS is the channel used to send notifications to the customer.
     * 
     */
    public Optional<Output<String>> notificationTopicId() {
        return Optional.ofNullable(this.notificationTopicId);
    }

    /**
     * The operating system type of the managed instance.
     * 
     */
    @Import(name="osFamily")
    private @Nullable Output<String> osFamily;

    /**
     * @return The operating system type of the managed instance.
     * 
     */
    public Optional<Output<String>> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }

    /**
     * Operating system kernel version.
     * 
     */
    @Import(name="osKernelVersion")
    private @Nullable Output<String> osKernelVersion;

    /**
     * @return Operating system kernel version.
     * 
     */
    public Optional<Output<String>> osKernelVersion() {
        return Optional.ofNullable(this.osKernelVersion);
    }

    /**
     * Operating system name.
     * 
     */
    @Import(name="osName")
    private @Nullable Output<String> osName;

    /**
     * @return Operating system name.
     * 
     */
    public Optional<Output<String>> osName() {
        return Optional.ofNullable(this.osName);
    }

    /**
     * Operating system version.
     * 
     */
    @Import(name="osVersion")
    private @Nullable Output<String> osVersion;

    /**
     * @return Operating system version.
     * 
     */
    public Optional<Output<String>> osVersion() {
        return Optional.ofNullable(this.osVersion);
    }

    /**
     * Number of non-classified (other) updates available for installation.
     * 
     */
    @Import(name="otherUpdatesAvailable")
    private @Nullable Output<Integer> otherUpdatesAvailable;

    /**
     * @return Number of non-classified (other) updates available for installation.
     * 
     */
    public Optional<Output<Integer>> otherUpdatesAvailable() {
        return Optional.ofNullable(this.otherUpdatesAvailable);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station for the instance to use as primary management station.
     * 
     */
    @Import(name="primaryManagementStationId")
    private @Nullable Output<String> primaryManagementStationId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station for the instance to use as primary management station.
     * 
     */
    public Optional<Output<String>> primaryManagementStationId() {
        return Optional.ofNullable(this.primaryManagementStationId);
    }

    /**
     * The profile that was used to register this instance with the service.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<String> profile;

    /**
     * @return The profile that was used to register this instance with the service.
     * 
     */
    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    /**
     * Number of scheduled jobs associated with this instance.
     * 
     */
    @Import(name="scheduledJobCount")
    private @Nullable Output<Integer> scheduledJobCount;

    /**
     * @return Number of scheduled jobs associated with this instance.
     * 
     */
    public Optional<Output<Integer>> scheduledJobCount() {
        return Optional.ofNullable(this.scheduledJobCount);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station for the instance to use as secondary management station.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="secondaryManagementStationId")
    private @Nullable Output<String> secondaryManagementStationId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station for the instance to use as secondary management station.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> secondaryManagementStationId() {
        return Optional.ofNullable(this.secondaryManagementStationId);
    }

    /**
     * Number of security type updates available for installation.
     * 
     */
    @Import(name="securityUpdatesAvailable")
    private @Nullable Output<Integer> securityUpdatesAvailable;

    /**
     * @return Number of security type updates available for installation.
     * 
     */
    public Optional<Output<Integer>> securityUpdatesAvailable() {
        return Optional.ofNullable(this.securityUpdatesAvailable);
    }

    /**
     * The list of software sources currently attached to the managed instance.
     * 
     */
    @Import(name="softwareSources")
    private @Nullable Output<List<ManagedInstanceSoftwareSourceArgs>> softwareSources;

    /**
     * @return The list of software sources currently attached to the managed instance.
     * 
     */
    public Optional<Output<List<ManagedInstanceSoftwareSourceArgs>>> softwareSources() {
        return Optional.ofNullable(this.softwareSources);
    }

    /**
     * Current status of the managed instance.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Current status of the managed instance.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy that the managed instance resides in.
     * 
     */
    @Import(name="tenancyId")
    private @Nullable Output<String> tenancyId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy that the managed instance resides in.
     * 
     */
    public Optional<Output<String>> tenancyId() {
        return Optional.ofNullable(this.tenancyId);
    }

    /**
     * The date and time the instance was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the instance was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Time that the instance last booted (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    @Import(name="timeLastBoot")
    private @Nullable Output<String> timeLastBoot;

    /**
     * @return Time that the instance last booted (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public Optional<Output<String>> timeLastBoot() {
        return Optional.ofNullable(this.timeLastBoot);
    }

    /**
     * Time that the instance last checked in with the service (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    @Import(name="timeLastCheckin")
    private @Nullable Output<String> timeLastCheckin;

    /**
     * @return Time that the instance last checked in with the service (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public Optional<Output<String>> timeLastCheckin() {
        return Optional.ofNullable(this.timeLastCheckin);
    }

    /**
     * The date and time the instance was last updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the instance was last updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * Number of updates available for installation.
     * 
     */
    @Import(name="updatesAvailable")
    private @Nullable Output<Integer> updatesAvailable;

    /**
     * @return Number of updates available for installation.
     * 
     */
    public Optional<Output<Integer>> updatesAvailable() {
        return Optional.ofNullable(this.updatesAvailable);
    }

    /**
     * Number of work requests associated with this instance.
     * 
     */
    @Import(name="workRequestCount")
    private @Nullable Output<Integer> workRequestCount;

    /**
     * @return Number of work requests associated with this instance.
     * 
     */
    public Optional<Output<Integer>> workRequestCount() {
        return Optional.ofNullable(this.workRequestCount);
    }

    private ManagedInstanceState() {}

    private ManagedInstanceState(ManagedInstanceState $) {
        this.architecture = $.architecture;
        this.autonomousSettings = $.autonomousSettings;
        this.bugUpdatesAvailable = $.bugUpdatesAvailable;
        this.compartmentId = $.compartmentId;
        this.description = $.description;
        this.displayName = $.displayName;
        this.enhancementUpdatesAvailable = $.enhancementUpdatesAvailable;
        this.installedPackages = $.installedPackages;
        this.installedWindowsUpdates = $.installedWindowsUpdates;
        this.isManagedByAutonomousLinux = $.isManagedByAutonomousLinux;
        this.isManagementStation = $.isManagementStation;
        this.isRebootRequired = $.isRebootRequired;
        this.kspliceEffectiveKernelVersion = $.kspliceEffectiveKernelVersion;
        this.lifecycleEnvironments = $.lifecycleEnvironments;
        this.lifecycleStages = $.lifecycleStages;
        this.location = $.location;
        this.managedInstanceGroups = $.managedInstanceGroups;
        this.managedInstanceId = $.managedInstanceId;
        this.notificationTopicId = $.notificationTopicId;
        this.osFamily = $.osFamily;
        this.osKernelVersion = $.osKernelVersion;
        this.osName = $.osName;
        this.osVersion = $.osVersion;
        this.otherUpdatesAvailable = $.otherUpdatesAvailable;
        this.primaryManagementStationId = $.primaryManagementStationId;
        this.profile = $.profile;
        this.scheduledJobCount = $.scheduledJobCount;
        this.secondaryManagementStationId = $.secondaryManagementStationId;
        this.securityUpdatesAvailable = $.securityUpdatesAvailable;
        this.softwareSources = $.softwareSources;
        this.status = $.status;
        this.tenancyId = $.tenancyId;
        this.timeCreated = $.timeCreated;
        this.timeLastBoot = $.timeLastBoot;
        this.timeLastCheckin = $.timeLastCheckin;
        this.timeUpdated = $.timeUpdated;
        this.updatesAvailable = $.updatesAvailable;
        this.workRequestCount = $.workRequestCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceState $;

        public Builder() {
            $ = new ManagedInstanceState();
        }

        public Builder(ManagedInstanceState defaults) {
            $ = new ManagedInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param architecture The CPU architecture type of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder architecture(@Nullable Output<String> architecture) {
            $.architecture = architecture;
            return this;
        }

        /**
         * @param architecture The CPU architecture type of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder architecture(String architecture) {
            return architecture(Output.of(architecture));
        }

        /**
         * @param autonomousSettings (Updatable) Updatable settings for the Autonomous Linux service.
         * 
         * @return builder
         * 
         */
        public Builder autonomousSettings(@Nullable Output<ManagedInstanceAutonomousSettingsArgs> autonomousSettings) {
            $.autonomousSettings = autonomousSettings;
            return this;
        }

        /**
         * @param autonomousSettings (Updatable) Updatable settings for the Autonomous Linux service.
         * 
         * @return builder
         * 
         */
        public Builder autonomousSettings(ManagedInstanceAutonomousSettingsArgs autonomousSettings) {
            return autonomousSettings(Output.of(autonomousSettings));
        }

        /**
         * @param bugUpdatesAvailable Number of bug fix type updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder bugUpdatesAvailable(@Nullable Output<Integer> bugUpdatesAvailable) {
            $.bugUpdatesAvailable = bugUpdatesAvailable;
            return this;
        }

        /**
         * @param bugUpdatesAvailable Number of bug fix type updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder bugUpdatesAvailable(Integer bugUpdatesAvailable) {
            return bugUpdatesAvailable(Output.of(bugUpdatesAvailable));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param description (Updatable) User-specified description of the managed instance. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) User-specified description of the managed instance. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Software source name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Software source name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enhancementUpdatesAvailable Number of enhancement type updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder enhancementUpdatesAvailable(@Nullable Output<Integer> enhancementUpdatesAvailable) {
            $.enhancementUpdatesAvailable = enhancementUpdatesAvailable;
            return this;
        }

        /**
         * @param enhancementUpdatesAvailable Number of enhancement type updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder enhancementUpdatesAvailable(Integer enhancementUpdatesAvailable) {
            return enhancementUpdatesAvailable(Output.of(enhancementUpdatesAvailable));
        }

        /**
         * @param installedPackages Number of packages installed on the instance.
         * 
         * @return builder
         * 
         */
        public Builder installedPackages(@Nullable Output<Integer> installedPackages) {
            $.installedPackages = installedPackages;
            return this;
        }

        /**
         * @param installedPackages Number of packages installed on the instance.
         * 
         * @return builder
         * 
         */
        public Builder installedPackages(Integer installedPackages) {
            return installedPackages(Output.of(installedPackages));
        }

        /**
         * @param installedWindowsUpdates Number of Windows updates installed on the instance.
         * 
         * @return builder
         * 
         */
        public Builder installedWindowsUpdates(@Nullable Output<Integer> installedWindowsUpdates) {
            $.installedWindowsUpdates = installedWindowsUpdates;
            return this;
        }

        /**
         * @param installedWindowsUpdates Number of Windows updates installed on the instance.
         * 
         * @return builder
         * 
         */
        public Builder installedWindowsUpdates(Integer installedWindowsUpdates) {
            return installedWindowsUpdates(Output.of(installedWindowsUpdates));
        }

        /**
         * @param isManagedByAutonomousLinux Indicates whether the Autonomous Linux service manages the instance.
         * 
         * @return builder
         * 
         */
        public Builder isManagedByAutonomousLinux(@Nullable Output<Boolean> isManagedByAutonomousLinux) {
            $.isManagedByAutonomousLinux = isManagedByAutonomousLinux;
            return this;
        }

        /**
         * @param isManagedByAutonomousLinux Indicates whether the Autonomous Linux service manages the instance.
         * 
         * @return builder
         * 
         */
        public Builder isManagedByAutonomousLinux(Boolean isManagedByAutonomousLinux) {
            return isManagedByAutonomousLinux(Output.of(isManagedByAutonomousLinux));
        }

        /**
         * @param isManagementStation Indicates whether this managed instance is acting as an on-premises management station.
         * 
         * @return builder
         * 
         */
        public Builder isManagementStation(@Nullable Output<Boolean> isManagementStation) {
            $.isManagementStation = isManagementStation;
            return this;
        }

        /**
         * @param isManagementStation Indicates whether this managed instance is acting as an on-premises management station.
         * 
         * @return builder
         * 
         */
        public Builder isManagementStation(Boolean isManagementStation) {
            return isManagementStation(Output.of(isManagementStation));
        }

        /**
         * @param isRebootRequired Indicates whether a reboot is required to complete installation of updates.
         * 
         * @return builder
         * 
         */
        public Builder isRebootRequired(@Nullable Output<Boolean> isRebootRequired) {
            $.isRebootRequired = isRebootRequired;
            return this;
        }

        /**
         * @param isRebootRequired Indicates whether a reboot is required to complete installation of updates.
         * 
         * @return builder
         * 
         */
        public Builder isRebootRequired(Boolean isRebootRequired) {
            return isRebootRequired(Output.of(isRebootRequired));
        }

        /**
         * @param kspliceEffectiveKernelVersion The ksplice effective kernel version.
         * 
         * @return builder
         * 
         */
        public Builder kspliceEffectiveKernelVersion(@Nullable Output<String> kspliceEffectiveKernelVersion) {
            $.kspliceEffectiveKernelVersion = kspliceEffectiveKernelVersion;
            return this;
        }

        /**
         * @param kspliceEffectiveKernelVersion The ksplice effective kernel version.
         * 
         * @return builder
         * 
         */
        public Builder kspliceEffectiveKernelVersion(String kspliceEffectiveKernelVersion) {
            return kspliceEffectiveKernelVersion(Output.of(kspliceEffectiveKernelVersion));
        }

        /**
         * @param lifecycleEnvironments Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleEnvironments(@Nullable Output<List<ManagedInstanceLifecycleEnvironmentArgs>> lifecycleEnvironments) {
            $.lifecycleEnvironments = lifecycleEnvironments;
            return this;
        }

        /**
         * @param lifecycleEnvironments Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleEnvironments(List<ManagedInstanceLifecycleEnvironmentArgs> lifecycleEnvironments) {
            return lifecycleEnvironments(Output.of(lifecycleEnvironments));
        }

        /**
         * @param lifecycleEnvironments Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleEnvironments(ManagedInstanceLifecycleEnvironmentArgs... lifecycleEnvironments) {
            return lifecycleEnvironments(List.of(lifecycleEnvironments));
        }

        /**
         * @param lifecycleStages Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStages(@Nullable Output<List<ManagedInstanceLifecycleStageArgs>> lifecycleStages) {
            $.lifecycleStages = lifecycleStages;
            return this;
        }

        /**
         * @param lifecycleStages Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStages(List<ManagedInstanceLifecycleStageArgs> lifecycleStages) {
            return lifecycleStages(Output.of(lifecycleStages));
        }

        /**
         * @param lifecycleStages Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStages(ManagedInstanceLifecycleStageArgs... lifecycleStages) {
            return lifecycleStages(List.of(lifecycleStages));
        }

        /**
         * @param location The location of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedInstanceGroups Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroups(@Nullable Output<List<ManagedInstanceManagedInstanceGroupArgs>> managedInstanceGroups) {
            $.managedInstanceGroups = managedInstanceGroups;
            return this;
        }

        /**
         * @param managedInstanceGroups Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroups(List<ManagedInstanceManagedInstanceGroupArgs> managedInstanceGroups) {
            return managedInstanceGroups(Output.of(managedInstanceGroups));
        }

        /**
         * @param managedInstanceGroups Id and name of a resource to simplify the display for the user.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceGroups(ManagedInstanceManagedInstanceGroupArgs... managedInstanceGroups) {
            return managedInstanceGroups(List.of(managedInstanceGroups));
        }

        /**
         * @param managedInstanceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(@Nullable Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param notificationTopicId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Oracle Notifications service (ONS) topic. ONS is the channel used to send notifications to the customer.
         * 
         * @return builder
         * 
         */
        public Builder notificationTopicId(@Nullable Output<String> notificationTopicId) {
            $.notificationTopicId = notificationTopicId;
            return this;
        }

        /**
         * @param notificationTopicId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Oracle Notifications service (ONS) topic. ONS is the channel used to send notifications to the customer.
         * 
         * @return builder
         * 
         */
        public Builder notificationTopicId(String notificationTopicId) {
            return notificationTopicId(Output.of(notificationTopicId));
        }

        /**
         * @param osFamily The operating system type of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(@Nullable Output<String> osFamily) {
            $.osFamily = osFamily;
            return this;
        }

        /**
         * @param osFamily The operating system type of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(String osFamily) {
            return osFamily(Output.of(osFamily));
        }

        /**
         * @param osKernelVersion Operating system kernel version.
         * 
         * @return builder
         * 
         */
        public Builder osKernelVersion(@Nullable Output<String> osKernelVersion) {
            $.osKernelVersion = osKernelVersion;
            return this;
        }

        /**
         * @param osKernelVersion Operating system kernel version.
         * 
         * @return builder
         * 
         */
        public Builder osKernelVersion(String osKernelVersion) {
            return osKernelVersion(Output.of(osKernelVersion));
        }

        /**
         * @param osName Operating system name.
         * 
         * @return builder
         * 
         */
        public Builder osName(@Nullable Output<String> osName) {
            $.osName = osName;
            return this;
        }

        /**
         * @param osName Operating system name.
         * 
         * @return builder
         * 
         */
        public Builder osName(String osName) {
            return osName(Output.of(osName));
        }

        /**
         * @param osVersion Operating system version.
         * 
         * @return builder
         * 
         */
        public Builder osVersion(@Nullable Output<String> osVersion) {
            $.osVersion = osVersion;
            return this;
        }

        /**
         * @param osVersion Operating system version.
         * 
         * @return builder
         * 
         */
        public Builder osVersion(String osVersion) {
            return osVersion(Output.of(osVersion));
        }

        /**
         * @param otherUpdatesAvailable Number of non-classified (other) updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder otherUpdatesAvailable(@Nullable Output<Integer> otherUpdatesAvailable) {
            $.otherUpdatesAvailable = otherUpdatesAvailable;
            return this;
        }

        /**
         * @param otherUpdatesAvailable Number of non-classified (other) updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder otherUpdatesAvailable(Integer otherUpdatesAvailable) {
            return otherUpdatesAvailable(Output.of(otherUpdatesAvailable));
        }

        /**
         * @param primaryManagementStationId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station for the instance to use as primary management station.
         * 
         * @return builder
         * 
         */
        public Builder primaryManagementStationId(@Nullable Output<String> primaryManagementStationId) {
            $.primaryManagementStationId = primaryManagementStationId;
            return this;
        }

        /**
         * @param primaryManagementStationId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station for the instance to use as primary management station.
         * 
         * @return builder
         * 
         */
        public Builder primaryManagementStationId(String primaryManagementStationId) {
            return primaryManagementStationId(Output.of(primaryManagementStationId));
        }

        /**
         * @param profile The profile that was used to register this instance with the service.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile The profile that was used to register this instance with the service.
         * 
         * @return builder
         * 
         */
        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        /**
         * @param scheduledJobCount Number of scheduled jobs associated with this instance.
         * 
         * @return builder
         * 
         */
        public Builder scheduledJobCount(@Nullable Output<Integer> scheduledJobCount) {
            $.scheduledJobCount = scheduledJobCount;
            return this;
        }

        /**
         * @param scheduledJobCount Number of scheduled jobs associated with this instance.
         * 
         * @return builder
         * 
         */
        public Builder scheduledJobCount(Integer scheduledJobCount) {
            return scheduledJobCount(Output.of(scheduledJobCount));
        }

        /**
         * @param secondaryManagementStationId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station for the instance to use as secondary management station.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder secondaryManagementStationId(@Nullable Output<String> secondaryManagementStationId) {
            $.secondaryManagementStationId = secondaryManagementStationId;
            return this;
        }

        /**
         * @param secondaryManagementStationId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station for the instance to use as secondary management station.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder secondaryManagementStationId(String secondaryManagementStationId) {
            return secondaryManagementStationId(Output.of(secondaryManagementStationId));
        }

        /**
         * @param securityUpdatesAvailable Number of security type updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder securityUpdatesAvailable(@Nullable Output<Integer> securityUpdatesAvailable) {
            $.securityUpdatesAvailable = securityUpdatesAvailable;
            return this;
        }

        /**
         * @param securityUpdatesAvailable Number of security type updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder securityUpdatesAvailable(Integer securityUpdatesAvailable) {
            return securityUpdatesAvailable(Output.of(securityUpdatesAvailable));
        }

        /**
         * @param softwareSources The list of software sources currently attached to the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder softwareSources(@Nullable Output<List<ManagedInstanceSoftwareSourceArgs>> softwareSources) {
            $.softwareSources = softwareSources;
            return this;
        }

        /**
         * @param softwareSources The list of software sources currently attached to the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder softwareSources(List<ManagedInstanceSoftwareSourceArgs> softwareSources) {
            return softwareSources(Output.of(softwareSources));
        }

        /**
         * @param softwareSources The list of software sources currently attached to the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder softwareSources(ManagedInstanceSoftwareSourceArgs... softwareSources) {
            return softwareSources(List.of(softwareSources));
        }

        /**
         * @param status Current status of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Current status of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tenancyId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy that the managed instance resides in.
         * 
         * @return builder
         * 
         */
        public Builder tenancyId(@Nullable Output<String> tenancyId) {
            $.tenancyId = tenancyId;
            return this;
        }

        /**
         * @param tenancyId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy that the managed instance resides in.
         * 
         * @return builder
         * 
         */
        public Builder tenancyId(String tenancyId) {
            return tenancyId(Output.of(tenancyId));
        }

        /**
         * @param timeCreated The date and time the instance was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the instance was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeLastBoot Time that the instance last booted (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * @return builder
         * 
         */
        public Builder timeLastBoot(@Nullable Output<String> timeLastBoot) {
            $.timeLastBoot = timeLastBoot;
            return this;
        }

        /**
         * @param timeLastBoot Time that the instance last booted (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * @return builder
         * 
         */
        public Builder timeLastBoot(String timeLastBoot) {
            return timeLastBoot(Output.of(timeLastBoot));
        }

        /**
         * @param timeLastCheckin Time that the instance last checked in with the service (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * @return builder
         * 
         */
        public Builder timeLastCheckin(@Nullable Output<String> timeLastCheckin) {
            $.timeLastCheckin = timeLastCheckin;
            return this;
        }

        /**
         * @param timeLastCheckin Time that the instance last checked in with the service (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * @return builder
         * 
         */
        public Builder timeLastCheckin(String timeLastCheckin) {
            return timeLastCheckin(Output.of(timeLastCheckin));
        }

        /**
         * @param timeUpdated The date and time the instance was last updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the instance was last updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param updatesAvailable Number of updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder updatesAvailable(@Nullable Output<Integer> updatesAvailable) {
            $.updatesAvailable = updatesAvailable;
            return this;
        }

        /**
         * @param updatesAvailable Number of updates available for installation.
         * 
         * @return builder
         * 
         */
        public Builder updatesAvailable(Integer updatesAvailable) {
            return updatesAvailable(Output.of(updatesAvailable));
        }

        /**
         * @param workRequestCount Number of work requests associated with this instance.
         * 
         * @return builder
         * 
         */
        public Builder workRequestCount(@Nullable Output<Integer> workRequestCount) {
            $.workRequestCount = workRequestCount;
            return this;
        }

        /**
         * @param workRequestCount Number of work requests associated with this instance.
         * 
         * @return builder
         * 
         */
        public Builder workRequestCount(Integer workRequestCount) {
            return workRequestCount(Output.of(workRequestCount));
        }

        public ManagedInstanceState build() {
            return $;
        }
    }

}
