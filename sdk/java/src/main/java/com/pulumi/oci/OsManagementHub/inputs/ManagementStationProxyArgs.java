// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementStationProxyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementStationProxyArgs Empty = new ManagementStationProxyArgs();

    /**
     * (Updatable) URL that the proxy will forward to
     * 
     */
    @Import(name="forward")
    private @Nullable Output<String> forward;

    /**
     * @return (Updatable) URL that the proxy will forward to
     * 
     */
    public Optional<Output<String>> forward() {
        return Optional.ofNullable(this.forward);
    }

    /**
     * (Updatable) List of hosts
     * 
     */
    @Import(name="hosts")
    private @Nullable Output<List<String>> hosts;

    /**
     * @return (Updatable) List of hosts
     * 
     */
    public Optional<Output<List<String>>> hosts() {
        return Optional.ofNullable(this.hosts);
    }

    /**
     * (Updatable) To enable or disable the proxy (default true)
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) To enable or disable the proxy (default true)
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * (Updatable) Port that the proxy will use
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="port")
    private @Nullable Output<String> port;

    /**
     * @return (Updatable) Port that the proxy will use
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    private ManagementStationProxyArgs() {}

    private ManagementStationProxyArgs(ManagementStationProxyArgs $) {
        this.forward = $.forward;
        this.hosts = $.hosts;
        this.isEnabled = $.isEnabled;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementStationProxyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementStationProxyArgs $;

        public Builder() {
            $ = new ManagementStationProxyArgs();
        }

        public Builder(ManagementStationProxyArgs defaults) {
            $ = new ManagementStationProxyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param forward (Updatable) URL that the proxy will forward to
         * 
         * @return builder
         * 
         */
        public Builder forward(@Nullable Output<String> forward) {
            $.forward = forward;
            return this;
        }

        /**
         * @param forward (Updatable) URL that the proxy will forward to
         * 
         * @return builder
         * 
         */
        public Builder forward(String forward) {
            return forward(Output.of(forward));
        }

        /**
         * @param hosts (Updatable) List of hosts
         * 
         * @return builder
         * 
         */
        public Builder hosts(@Nullable Output<List<String>> hosts) {
            $.hosts = hosts;
            return this;
        }

        /**
         * @param hosts (Updatable) List of hosts
         * 
         * @return builder
         * 
         */
        public Builder hosts(List<String> hosts) {
            return hosts(Output.of(hosts));
        }

        /**
         * @param hosts (Updatable) List of hosts
         * 
         * @return builder
         * 
         */
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }

        /**
         * @param isEnabled (Updatable) To enable or disable the proxy (default true)
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled (Updatable) To enable or disable the proxy (default true)
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param port (Updatable) Port that the proxy will use
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port (Updatable) Port that the proxy will use
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder port(String port) {
            return port(Output.of(port));
        }

        public ManagementStationProxyArgs build() {
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            return $;
        }
    }

}
