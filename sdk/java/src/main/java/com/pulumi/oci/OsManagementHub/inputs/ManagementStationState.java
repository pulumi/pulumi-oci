// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.ManagementStationMirrorArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagementStationMirrorSyncStatusArgs;
import com.pulumi.oci.OsManagementHub.inputs.ManagementStationProxyArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementStationState extends com.pulumi.resources.ResourceArgs {

    public static final ManagementStationState Empty = new ManagementStationState();

    /**
     * The OCID of the tenancy containing the Management Station.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the tenancy containing the Management Station.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Details describing the Management Station config.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Details describing the Management Station config.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Management Station name
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Management Station name
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Name of the host
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return (Updatable) Name of the host
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * OCID for the Instance associated with the Management Station.
     * 
     */
    @Import(name="managedInstanceId")
    private @Nullable Output<String> managedInstanceId;

    /**
     * @return OCID for the Instance associated with the Management Station.
     * 
     */
    public Optional<Output<String>> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }

    /**
     * (Updatable) Information for creating a mirror configuration
     * 
     */
    @Import(name="mirror")
    private @Nullable Output<ManagementStationMirrorArgs> mirror;

    /**
     * @return (Updatable) Information for creating a mirror configuration
     * 
     */
    public Optional<Output<ManagementStationMirrorArgs>> mirror() {
        return Optional.ofNullable(this.mirror);
    }

    /**
     * A decimal number representing the mirror capacity
     * 
     */
    @Import(name="mirrorCapacity")
    private @Nullable Output<Integer> mirrorCapacity;

    /**
     * @return A decimal number representing the mirror capacity
     * 
     */
    public Optional<Output<Integer>> mirrorCapacity() {
        return Optional.ofNullable(this.mirrorCapacity);
    }

    /**
     * Status summary of all repos
     * 
     */
    @Import(name="mirrorSyncStatuses")
    private @Nullable Output<List<ManagementStationMirrorSyncStatusArgs>> mirrorSyncStatuses;

    /**
     * @return Status summary of all repos
     * 
     */
    public Optional<Output<List<ManagementStationMirrorSyncStatusArgs>>> mirrorSyncStatuses() {
        return Optional.ofNullable(this.mirrorSyncStatuses);
    }

    /**
     * A decimal number representing the completeness percentage
     * 
     */
    @Import(name="overallPercentage")
    private @Nullable Output<Integer> overallPercentage;

    /**
     * @return A decimal number representing the completeness percentage
     * 
     */
    public Optional<Output<Integer>> overallPercentage() {
        return Optional.ofNullable(this.overallPercentage);
    }

    /**
     * Current state of the mirroring
     * 
     */
    @Import(name="overallState")
    private @Nullable Output<String> overallState;

    /**
     * @return Current state of the mirroring
     * 
     */
    public Optional<Output<String>> overallState() {
        return Optional.ofNullable(this.overallState);
    }

    /**
     * OCID of the Profile associated with the Station
     * 
     */
    @Import(name="profileId")
    private @Nullable Output<String> profileId;

    /**
     * @return OCID of the Profile associated with the Station
     * 
     */
    public Optional<Output<String>> profileId() {
        return Optional.ofNullable(this.profileId);
    }

    /**
     * (Updatable) Information for creating a proxy configuration
     * 
     */
    @Import(name="proxy")
    private @Nullable Output<ManagementStationProxyArgs> proxy;

    /**
     * @return (Updatable) Information for creating a proxy configuration
     * 
     */
    public Optional<Output<ManagementStationProxyArgs>> proxy() {
        return Optional.ofNullable(this.proxy);
    }

    /**
     * OCID of the Scheduled Job for mirror sync
     * 
     */
    @Import(name="scheduledJobId")
    private @Nullable Output<String> scheduledJobId;

    /**
     * @return OCID of the Scheduled Job for mirror sync
     * 
     */
    public Optional<Output<String>> scheduledJobId() {
        return Optional.ofNullable(this.scheduledJobId);
    }

    /**
     * The current state of the Management Station config.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the Management Station config.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * A decimal number representing the total of repos
     * 
     */
    @Import(name="totalMirrors")
    private @Nullable Output<Integer> totalMirrors;

    /**
     * @return A decimal number representing the total of repos
     * 
     */
    public Optional<Output<Integer>> totalMirrors() {
        return Optional.ofNullable(this.totalMirrors);
    }

    private ManagementStationState() {}

    private ManagementStationState(ManagementStationState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.hostname = $.hostname;
        this.managedInstanceId = $.managedInstanceId;
        this.mirror = $.mirror;
        this.mirrorCapacity = $.mirrorCapacity;
        this.mirrorSyncStatuses = $.mirrorSyncStatuses;
        this.overallPercentage = $.overallPercentage;
        this.overallState = $.overallState;
        this.profileId = $.profileId;
        this.proxy = $.proxy;
        this.scheduledJobId = $.scheduledJobId;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.totalMirrors = $.totalMirrors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementStationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementStationState $;

        public Builder() {
            $ = new ManagementStationState();
        }

        public Builder(ManagementStationState defaults) {
            $ = new ManagementStationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the tenancy containing the Management Station.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the tenancy containing the Management Station.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Details describing the Management Station config.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Details describing the Management Station config.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) Management Station name
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Management Station name
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param hostname (Updatable) Name of the host
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname (Updatable) Name of the host
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param managedInstanceId OCID for the Instance associated with the Management Station.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(@Nullable Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId OCID for the Instance associated with the Management Station.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param mirror (Updatable) Information for creating a mirror configuration
         * 
         * @return builder
         * 
         */
        public Builder mirror(@Nullable Output<ManagementStationMirrorArgs> mirror) {
            $.mirror = mirror;
            return this;
        }

        /**
         * @param mirror (Updatable) Information for creating a mirror configuration
         * 
         * @return builder
         * 
         */
        public Builder mirror(ManagementStationMirrorArgs mirror) {
            return mirror(Output.of(mirror));
        }

        /**
         * @param mirrorCapacity A decimal number representing the mirror capacity
         * 
         * @return builder
         * 
         */
        public Builder mirrorCapacity(@Nullable Output<Integer> mirrorCapacity) {
            $.mirrorCapacity = mirrorCapacity;
            return this;
        }

        /**
         * @param mirrorCapacity A decimal number representing the mirror capacity
         * 
         * @return builder
         * 
         */
        public Builder mirrorCapacity(Integer mirrorCapacity) {
            return mirrorCapacity(Output.of(mirrorCapacity));
        }

        /**
         * @param mirrorSyncStatuses Status summary of all repos
         * 
         * @return builder
         * 
         */
        public Builder mirrorSyncStatuses(@Nullable Output<List<ManagementStationMirrorSyncStatusArgs>> mirrorSyncStatuses) {
            $.mirrorSyncStatuses = mirrorSyncStatuses;
            return this;
        }

        /**
         * @param mirrorSyncStatuses Status summary of all repos
         * 
         * @return builder
         * 
         */
        public Builder mirrorSyncStatuses(List<ManagementStationMirrorSyncStatusArgs> mirrorSyncStatuses) {
            return mirrorSyncStatuses(Output.of(mirrorSyncStatuses));
        }

        /**
         * @param mirrorSyncStatuses Status summary of all repos
         * 
         * @return builder
         * 
         */
        public Builder mirrorSyncStatuses(ManagementStationMirrorSyncStatusArgs... mirrorSyncStatuses) {
            return mirrorSyncStatuses(List.of(mirrorSyncStatuses));
        }

        /**
         * @param overallPercentage A decimal number representing the completeness percentage
         * 
         * @return builder
         * 
         */
        public Builder overallPercentage(@Nullable Output<Integer> overallPercentage) {
            $.overallPercentage = overallPercentage;
            return this;
        }

        /**
         * @param overallPercentage A decimal number representing the completeness percentage
         * 
         * @return builder
         * 
         */
        public Builder overallPercentage(Integer overallPercentage) {
            return overallPercentage(Output.of(overallPercentage));
        }

        /**
         * @param overallState Current state of the mirroring
         * 
         * @return builder
         * 
         */
        public Builder overallState(@Nullable Output<String> overallState) {
            $.overallState = overallState;
            return this;
        }

        /**
         * @param overallState Current state of the mirroring
         * 
         * @return builder
         * 
         */
        public Builder overallState(String overallState) {
            return overallState(Output.of(overallState));
        }

        /**
         * @param profileId OCID of the Profile associated with the Station
         * 
         * @return builder
         * 
         */
        public Builder profileId(@Nullable Output<String> profileId) {
            $.profileId = profileId;
            return this;
        }

        /**
         * @param profileId OCID of the Profile associated with the Station
         * 
         * @return builder
         * 
         */
        public Builder profileId(String profileId) {
            return profileId(Output.of(profileId));
        }

        /**
         * @param proxy (Updatable) Information for creating a proxy configuration
         * 
         * @return builder
         * 
         */
        public Builder proxy(@Nullable Output<ManagementStationProxyArgs> proxy) {
            $.proxy = proxy;
            return this;
        }

        /**
         * @param proxy (Updatable) Information for creating a proxy configuration
         * 
         * @return builder
         * 
         */
        public Builder proxy(ManagementStationProxyArgs proxy) {
            return proxy(Output.of(proxy));
        }

        /**
         * @param scheduledJobId OCID of the Scheduled Job for mirror sync
         * 
         * @return builder
         * 
         */
        public Builder scheduledJobId(@Nullable Output<String> scheduledJobId) {
            $.scheduledJobId = scheduledJobId;
            return this;
        }

        /**
         * @param scheduledJobId OCID of the Scheduled Job for mirror sync
         * 
         * @return builder
         * 
         */
        public Builder scheduledJobId(String scheduledJobId) {
            return scheduledJobId(Output.of(scheduledJobId));
        }

        /**
         * @param state The current state of the Management Station config.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the Management Station config.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param totalMirrors A decimal number representing the total of repos
         * 
         * @return builder
         * 
         */
        public Builder totalMirrors(@Nullable Output<Integer> totalMirrors) {
            $.totalMirrors = totalMirrors;
            return this;
        }

        /**
         * @param totalMirrors A decimal number representing the total of repos
         * 
         * @return builder
         * 
         */
        public Builder totalMirrors(Integer totalMirrors) {
            return totalMirrors(Output.of(totalMirrors));
        }

        public ManagementStationState build() {
            return $;
        }
    }

}
