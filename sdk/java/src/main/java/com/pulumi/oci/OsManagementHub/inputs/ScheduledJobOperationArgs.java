// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.inputs.ScheduledJobOperationManageModuleStreamsDetailsArgs;
import com.pulumi.oci.OsManagementHub.inputs.ScheduledJobOperationSwitchModuleStreamsDetailsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledJobOperationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledJobOperationArgs Empty = new ScheduledJobOperationArgs();

    /**
     * (Updatable) The set of changes to make to the state of the modules, streams, and profiles on the managed target.
     * 
     */
    @Import(name="manageModuleStreamsDetails")
    private @Nullable Output<ScheduledJobOperationManageModuleStreamsDetailsArgs> manageModuleStreamsDetails;

    /**
     * @return (Updatable) The set of changes to make to the state of the modules, streams, and profiles on the managed target.
     * 
     */
    public Optional<Output<ScheduledJobOperationManageModuleStreamsDetailsArgs>> manageModuleStreamsDetails() {
        return Optional.ofNullable(this.manageModuleStreamsDetails);
    }

    /**
     * (Updatable) The type of operation this scheduled job performs.
     * 
     */
    @Import(name="operationType", required=true)
    private Output<String> operationType;

    /**
     * @return (Updatable) The type of operation this scheduled job performs.
     * 
     */
    public Output<String> operationType() {
        return this.operationType;
    }

    /**
     * (Updatable) The names of the target packages. This parameter only applies when the scheduled job is for installing, updating, or removing packages.
     * 
     */
    @Import(name="packageNames")
    private @Nullable Output<List<String>> packageNames;

    /**
     * @return (Updatable) The names of the target packages. This parameter only applies when the scheduled job is for installing, updating, or removing packages.
     * 
     */
    public Optional<Output<List<String>>> packageNames() {
        return Optional.ofNullable(this.packageNames);
    }

    /**
     * (Updatable) The number of minutes the service waits for the reboot to complete. If the instance doesn&#39;t reboot within the  timeout, the service marks the reboot job as failed.
     * 
     */
    @Import(name="rebootTimeoutInMins")
    private @Nullable Output<Integer> rebootTimeoutInMins;

    /**
     * @return (Updatable) The number of minutes the service waits for the reboot to complete. If the instance doesn&#39;t reboot within the  timeout, the service marks the reboot job as failed.
     * 
     */
    public Optional<Output<Integer>> rebootTimeoutInMins() {
        return Optional.ofNullable(this.rebootTimeoutInMins);
    }

    /**
     * (Updatable) The software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).  This parameter only applies when the scheduled job is for attaching or detaching software sources.
     * 
     */
    @Import(name="softwareSourceIds")
    private @Nullable Output<List<String>> softwareSourceIds;

    /**
     * @return (Updatable) The software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).  This parameter only applies when the scheduled job is for attaching or detaching software sources.
     * 
     */
    public Optional<Output<List<String>>> softwareSourceIds() {
        return Optional.ofNullable(this.softwareSourceIds);
    }

    /**
     * (Updatable) Provides the information used to update a module stream.
     * 
     */
    @Import(name="switchModuleStreamsDetails")
    private @Nullable Output<ScheduledJobOperationSwitchModuleStreamsDetailsArgs> switchModuleStreamsDetails;

    /**
     * @return (Updatable) Provides the information used to update a module stream.
     * 
     */
    public Optional<Output<ScheduledJobOperationSwitchModuleStreamsDetailsArgs>> switchModuleStreamsDetails() {
        return Optional.ofNullable(this.switchModuleStreamsDetails);
    }

    /**
     * (Updatable) Unique identifier for the Windows update. This parameter only applies if the scheduled job is for installing Windows updates. Note that this is not an OCID, but is a unique identifier assigned by Microsoft. For example: &#39;6981d463-cd91-4a26-b7c4-ea4ded9183ed&#39;.
     * 
     */
    @Import(name="windowsUpdateNames")
    private @Nullable Output<List<String>> windowsUpdateNames;

    /**
     * @return (Updatable) Unique identifier for the Windows update. This parameter only applies if the scheduled job is for installing Windows updates. Note that this is not an OCID, but is a unique identifier assigned by Microsoft. For example: &#39;6981d463-cd91-4a26-b7c4-ea4ded9183ed&#39;.
     * 
     */
    public Optional<Output<List<String>>> windowsUpdateNames() {
        return Optional.ofNullable(this.windowsUpdateNames);
    }

    private ScheduledJobOperationArgs() {}

    private ScheduledJobOperationArgs(ScheduledJobOperationArgs $) {
        this.manageModuleStreamsDetails = $.manageModuleStreamsDetails;
        this.operationType = $.operationType;
        this.packageNames = $.packageNames;
        this.rebootTimeoutInMins = $.rebootTimeoutInMins;
        this.softwareSourceIds = $.softwareSourceIds;
        this.switchModuleStreamsDetails = $.switchModuleStreamsDetails;
        this.windowsUpdateNames = $.windowsUpdateNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledJobOperationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledJobOperationArgs $;

        public Builder() {
            $ = new ScheduledJobOperationArgs();
        }

        public Builder(ScheduledJobOperationArgs defaults) {
            $ = new ScheduledJobOperationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param manageModuleStreamsDetails (Updatable) The set of changes to make to the state of the modules, streams, and profiles on the managed target.
         * 
         * @return builder
         * 
         */
        public Builder manageModuleStreamsDetails(@Nullable Output<ScheduledJobOperationManageModuleStreamsDetailsArgs> manageModuleStreamsDetails) {
            $.manageModuleStreamsDetails = manageModuleStreamsDetails;
            return this;
        }

        /**
         * @param manageModuleStreamsDetails (Updatable) The set of changes to make to the state of the modules, streams, and profiles on the managed target.
         * 
         * @return builder
         * 
         */
        public Builder manageModuleStreamsDetails(ScheduledJobOperationManageModuleStreamsDetailsArgs manageModuleStreamsDetails) {
            return manageModuleStreamsDetails(Output.of(manageModuleStreamsDetails));
        }

        /**
         * @param operationType (Updatable) The type of operation this scheduled job performs.
         * 
         * @return builder
         * 
         */
        public Builder operationType(Output<String> operationType) {
            $.operationType = operationType;
            return this;
        }

        /**
         * @param operationType (Updatable) The type of operation this scheduled job performs.
         * 
         * @return builder
         * 
         */
        public Builder operationType(String operationType) {
            return operationType(Output.of(operationType));
        }

        /**
         * @param packageNames (Updatable) The names of the target packages. This parameter only applies when the scheduled job is for installing, updating, or removing packages.
         * 
         * @return builder
         * 
         */
        public Builder packageNames(@Nullable Output<List<String>> packageNames) {
            $.packageNames = packageNames;
            return this;
        }

        /**
         * @param packageNames (Updatable) The names of the target packages. This parameter only applies when the scheduled job is for installing, updating, or removing packages.
         * 
         * @return builder
         * 
         */
        public Builder packageNames(List<String> packageNames) {
            return packageNames(Output.of(packageNames));
        }

        /**
         * @param packageNames (Updatable) The names of the target packages. This parameter only applies when the scheduled job is for installing, updating, or removing packages.
         * 
         * @return builder
         * 
         */
        public Builder packageNames(String... packageNames) {
            return packageNames(List.of(packageNames));
        }

        /**
         * @param rebootTimeoutInMins (Updatable) The number of minutes the service waits for the reboot to complete. If the instance doesn&#39;t reboot within the  timeout, the service marks the reboot job as failed.
         * 
         * @return builder
         * 
         */
        public Builder rebootTimeoutInMins(@Nullable Output<Integer> rebootTimeoutInMins) {
            $.rebootTimeoutInMins = rebootTimeoutInMins;
            return this;
        }

        /**
         * @param rebootTimeoutInMins (Updatable) The number of minutes the service waits for the reboot to complete. If the instance doesn&#39;t reboot within the  timeout, the service marks the reboot job as failed.
         * 
         * @return builder
         * 
         */
        public Builder rebootTimeoutInMins(Integer rebootTimeoutInMins) {
            return rebootTimeoutInMins(Output.of(rebootTimeoutInMins));
        }

        /**
         * @param softwareSourceIds (Updatable) The software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).  This parameter only applies when the scheduled job is for attaching or detaching software sources.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(@Nullable Output<List<String>> softwareSourceIds) {
            $.softwareSourceIds = softwareSourceIds;
            return this;
        }

        /**
         * @param softwareSourceIds (Updatable) The software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).  This parameter only applies when the scheduled job is for attaching or detaching software sources.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(List<String> softwareSourceIds) {
            return softwareSourceIds(Output.of(softwareSourceIds));
        }

        /**
         * @param softwareSourceIds (Updatable) The software source [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).  This parameter only applies when the scheduled job is for attaching or detaching software sources.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceIds(String... softwareSourceIds) {
            return softwareSourceIds(List.of(softwareSourceIds));
        }

        /**
         * @param switchModuleStreamsDetails (Updatable) Provides the information used to update a module stream.
         * 
         * @return builder
         * 
         */
        public Builder switchModuleStreamsDetails(@Nullable Output<ScheduledJobOperationSwitchModuleStreamsDetailsArgs> switchModuleStreamsDetails) {
            $.switchModuleStreamsDetails = switchModuleStreamsDetails;
            return this;
        }

        /**
         * @param switchModuleStreamsDetails (Updatable) Provides the information used to update a module stream.
         * 
         * @return builder
         * 
         */
        public Builder switchModuleStreamsDetails(ScheduledJobOperationSwitchModuleStreamsDetailsArgs switchModuleStreamsDetails) {
            return switchModuleStreamsDetails(Output.of(switchModuleStreamsDetails));
        }

        /**
         * @param windowsUpdateNames (Updatable) Unique identifier for the Windows update. This parameter only applies if the scheduled job is for installing Windows updates. Note that this is not an OCID, but is a unique identifier assigned by Microsoft. For example: &#39;6981d463-cd91-4a26-b7c4-ea4ded9183ed&#39;.
         * 
         * @return builder
         * 
         */
        public Builder windowsUpdateNames(@Nullable Output<List<String>> windowsUpdateNames) {
            $.windowsUpdateNames = windowsUpdateNames;
            return this;
        }

        /**
         * @param windowsUpdateNames (Updatable) Unique identifier for the Windows update. This parameter only applies if the scheduled job is for installing Windows updates. Note that this is not an OCID, but is a unique identifier assigned by Microsoft. For example: &#39;6981d463-cd91-4a26-b7c4-ea4ded9183ed&#39;.
         * 
         * @return builder
         * 
         */
        public Builder windowsUpdateNames(List<String> windowsUpdateNames) {
            return windowsUpdateNames(Output.of(windowsUpdateNames));
        }

        /**
         * @param windowsUpdateNames (Updatable) Unique identifier for the Windows update. This parameter only applies if the scheduled job is for installing Windows updates. Note that this is not an OCID, but is a unique identifier assigned by Microsoft. For example: &#39;6981d463-cd91-4a26-b7c4-ea4ded9183ed&#39;.
         * 
         * @return builder
         * 
         */
        public Builder windowsUpdateNames(String... windowsUpdateNames) {
            return windowsUpdateNames(List.of(windowsUpdateNames));
        }

        public ScheduledJobOperationArgs build() {
            if ($.operationType == null) {
                throw new MissingRequiredPropertyException("ScheduledJobOperationArgs", "operationType");
            }
            return $;
        }
    }

}
