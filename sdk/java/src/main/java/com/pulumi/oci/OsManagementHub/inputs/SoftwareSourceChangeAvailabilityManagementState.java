// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareSourceChangeAvailabilityManagementState extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareSourceChangeAvailabilityManagementState Empty = new SoftwareSourceChangeAvailabilityManagementState();

    /**
     * List of vendor software sources and their availability statuses.
     * 
     */
    @Import(name="softwareSourceAvailabilities")
    private @Nullable Output<List<SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs>> softwareSourceAvailabilities;

    /**
     * @return List of vendor software sources and their availability statuses.
     * 
     */
    public Optional<Output<List<SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs>>> softwareSourceAvailabilities() {
        return Optional.ofNullable(this.softwareSourceAvailabilities);
    }

    private SoftwareSourceChangeAvailabilityManagementState() {}

    private SoftwareSourceChangeAvailabilityManagementState(SoftwareSourceChangeAvailabilityManagementState $) {
        this.softwareSourceAvailabilities = $.softwareSourceAvailabilities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareSourceChangeAvailabilityManagementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareSourceChangeAvailabilityManagementState $;

        public Builder() {
            $ = new SoftwareSourceChangeAvailabilityManagementState();
        }

        public Builder(SoftwareSourceChangeAvailabilityManagementState defaults) {
            $ = new SoftwareSourceChangeAvailabilityManagementState(Objects.requireNonNull(defaults));
        }

        /**
         * @param softwareSourceAvailabilities List of vendor software sources and their availability statuses.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceAvailabilities(@Nullable Output<List<SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs>> softwareSourceAvailabilities) {
            $.softwareSourceAvailabilities = softwareSourceAvailabilities;
            return this;
        }

        /**
         * @param softwareSourceAvailabilities List of vendor software sources and their availability statuses.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceAvailabilities(List<SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs> softwareSourceAvailabilities) {
            return softwareSourceAvailabilities(Output.of(softwareSourceAvailabilities));
        }

        /**
         * @param softwareSourceAvailabilities List of vendor software sources and their availability statuses.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceAvailabilities(SoftwareSourceChangeAvailabilityManagementSoftwareSourceAvailabilityArgs... softwareSourceAvailabilities) {
            return softwareSourceAvailabilities(List.of(softwareSourceAvailabilities));
        }

        public SoftwareSourceChangeAvailabilityManagementState build() {
            return $;
        }
    }

}
