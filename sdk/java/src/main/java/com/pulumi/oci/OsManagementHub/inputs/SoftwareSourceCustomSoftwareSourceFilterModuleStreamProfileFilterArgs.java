// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs Empty = new SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs();

    /**
     * (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
     * 
     */
    @Import(name="filterType", required=true)
    private Output<String> filterType;

    /**
     * @return (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
     * 
     */
    public Output<String> filterType() {
        return this.filterType;
    }

    /**
     * (Updatable) Module name.
     * 
     */
    @Import(name="moduleName", required=true)
    private Output<String> moduleName;

    /**
     * @return (Updatable) Module name.
     * 
     */
    public Output<String> moduleName() {
        return this.moduleName;
    }

    /**
     * (Updatable) Profile name.
     * 
     */
    @Import(name="profileName")
    private @Nullable Output<String> profileName;

    /**
     * @return (Updatable) Profile name.
     * 
     */
    public Optional<Output<String>> profileName() {
        return Optional.ofNullable(this.profileName);
    }

    /**
     * (Updatable) Stream name.
     * 
     */
    @Import(name="streamName")
    private @Nullable Output<String> streamName;

    /**
     * @return (Updatable) Stream name.
     * 
     */
    public Optional<Output<String>> streamName() {
        return Optional.ofNullable(this.streamName);
    }

    private SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs() {}

    private SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs $) {
        this.filterType = $.filterType;
        this.moduleName = $.moduleName;
        this.profileName = $.profileName;
        this.streamName = $.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs $;

        public Builder() {
            $ = new SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs();
        }

        public Builder(SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs defaults) {
            $ = new SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterType (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
         * 
         * @return builder
         * 
         */
        public Builder filterType(Output<String> filterType) {
            $.filterType = filterType;
            return this;
        }

        /**
         * @param filterType (Updatable) The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
         * 
         * @return builder
         * 
         */
        public Builder filterType(String filterType) {
            return filterType(Output.of(filterType));
        }

        /**
         * @param moduleName (Updatable) Module name.
         * 
         * @return builder
         * 
         */
        public Builder moduleName(Output<String> moduleName) {
            $.moduleName = moduleName;
            return this;
        }

        /**
         * @param moduleName (Updatable) Module name.
         * 
         * @return builder
         * 
         */
        public Builder moduleName(String moduleName) {
            return moduleName(Output.of(moduleName));
        }

        /**
         * @param profileName (Updatable) Profile name.
         * 
         * @return builder
         * 
         */
        public Builder profileName(@Nullable Output<String> profileName) {
            $.profileName = profileName;
            return this;
        }

        /**
         * @param profileName (Updatable) Profile name.
         * 
         * @return builder
         * 
         */
        public Builder profileName(String profileName) {
            return profileName(Output.of(profileName));
        }

        /**
         * @param streamName (Updatable) Stream name.
         * 
         * @return builder
         * 
         */
        public Builder streamName(@Nullable Output<String> streamName) {
            $.streamName = streamName;
            return this;
        }

        /**
         * @param streamName (Updatable) Stream name.
         * 
         * @return builder
         * 
         */
        public Builder streamName(String streamName) {
            return streamName(Output.of(streamName));
        }

        public SoftwareSourceCustomSoftwareSourceFilterModuleStreamProfileFilterArgs build() {
            $.filterType = Objects.requireNonNull($.filterType, "expected parameter 'filterType' to be non-null");
            $.moduleName = Objects.requireNonNull($.moduleName, "expected parameter 'moduleName' to be non-null");
            return $;
        }
    }

}
