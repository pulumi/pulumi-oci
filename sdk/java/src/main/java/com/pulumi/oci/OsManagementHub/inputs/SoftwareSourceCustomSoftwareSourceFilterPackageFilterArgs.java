// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs Empty = new SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs();

    /**
     * (Updatable) The type of the filter.
     * 
     */
    @Import(name="filterType")
    private @Nullable Output<String> filterType;

    /**
     * @return (Updatable) The type of the filter.
     * 
     */
    public Optional<Output<String>> filterType() {
        return Optional.ofNullable(this.filterType);
    }

    /**
     * (Updatable) The package name.
     * 
     */
    @Import(name="packageName")
    private @Nullable Output<String> packageName;

    /**
     * @return (Updatable) The package name.
     * 
     */
    public Optional<Output<String>> packageName() {
        return Optional.ofNullable(this.packageName);
    }

    /**
     * (Updatable) The package name pattern.
     * 
     */
    @Import(name="packageNamePattern")
    private @Nullable Output<String> packageNamePattern;

    /**
     * @return (Updatable) The package name pattern.
     * 
     */
    public Optional<Output<String>> packageNamePattern() {
        return Optional.ofNullable(this.packageNamePattern);
    }

    /**
     * (Updatable) The package version, which is denoted by &#39;version-release&#39;, or &#39;epoch:version-release&#39;.
     * 
     */
    @Import(name="packageVersion")
    private @Nullable Output<String> packageVersion;

    /**
     * @return (Updatable) The package version, which is denoted by &#39;version-release&#39;, or &#39;epoch:version-release&#39;.
     * 
     */
    public Optional<Output<String>> packageVersion() {
        return Optional.ofNullable(this.packageVersion);
    }

    private SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs() {}

    private SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs(SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs $) {
        this.filterType = $.filterType;
        this.packageName = $.packageName;
        this.packageNamePattern = $.packageNamePattern;
        this.packageVersion = $.packageVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs $;

        public Builder() {
            $ = new SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs();
        }

        public Builder(SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs defaults) {
            $ = new SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterType (Updatable) The type of the filter.
         * 
         * @return builder
         * 
         */
        public Builder filterType(@Nullable Output<String> filterType) {
            $.filterType = filterType;
            return this;
        }

        /**
         * @param filterType (Updatable) The type of the filter.
         * 
         * @return builder
         * 
         */
        public Builder filterType(String filterType) {
            return filterType(Output.of(filterType));
        }

        /**
         * @param packageName (Updatable) The package name.
         * 
         * @return builder
         * 
         */
        public Builder packageName(@Nullable Output<String> packageName) {
            $.packageName = packageName;
            return this;
        }

        /**
         * @param packageName (Updatable) The package name.
         * 
         * @return builder
         * 
         */
        public Builder packageName(String packageName) {
            return packageName(Output.of(packageName));
        }

        /**
         * @param packageNamePattern (Updatable) The package name pattern.
         * 
         * @return builder
         * 
         */
        public Builder packageNamePattern(@Nullable Output<String> packageNamePattern) {
            $.packageNamePattern = packageNamePattern;
            return this;
        }

        /**
         * @param packageNamePattern (Updatable) The package name pattern.
         * 
         * @return builder
         * 
         */
        public Builder packageNamePattern(String packageNamePattern) {
            return packageNamePattern(Output.of(packageNamePattern));
        }

        /**
         * @param packageVersion (Updatable) The package version, which is denoted by &#39;version-release&#39;, or &#39;epoch:version-release&#39;.
         * 
         * @return builder
         * 
         */
        public Builder packageVersion(@Nullable Output<String> packageVersion) {
            $.packageVersion = packageVersion;
            return this;
        }

        /**
         * @param packageVersion (Updatable) The package version, which is denoted by &#39;version-release&#39;, or &#39;epoch:version-release&#39;.
         * 
         * @return builder
         * 
         */
        public Builder packageVersion(String packageVersion) {
            return packageVersion(Output.of(packageVersion));
        }

        public SoftwareSourceCustomSoftwareSourceFilterPackageFilterArgs build() {
            return $;
        }
    }

}
