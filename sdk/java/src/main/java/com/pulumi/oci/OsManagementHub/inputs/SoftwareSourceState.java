// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagementHub.inputs.SoftwareSourceCustomSoftwareSourceFilterArgs;
import com.pulumi.oci.OsManagementHub.inputs.SoftwareSourceVendorSoftwareSourceArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareSourceState extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareSourceState Empty = new SoftwareSourceState();

    /**
     * The architecture type supported by the software source.
     * 
     */
    @Import(name="archType")
    private @Nullable Output<String> archType;

    /**
     * @return The architecture type supported by the software source.
     * 
     */
    public Optional<Output<String>> archType() {
        return Optional.ofNullable(this.archType);
    }

    /**
     * Possible availabilities of a software source.
     * 
     */
    @Import(name="availability")
    private @Nullable Output<String> availability;

    /**
     * @return Possible availabilities of a software source.
     * 
     */
    public Optional<Output<String>> availability() {
        return Optional.ofNullable(this.availability);
    }

    /**
     * The yum repository checksum type used by this software source.
     * 
     */
    @Import(name="checksumType")
    private @Nullable Output<String> checksumType;

    /**
     * @return The yum repository checksum type used by this software source.
     * 
     */
    public Optional<Output<String>> checksumType() {
        return Optional.ofNullable(this.checksumType);
    }

    /**
     * (Updatable) The OCID of the tenancy containing the software source.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the tenancy containing the software source.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     * 
     */
    @Import(name="customSoftwareSourceFilter")
    private @Nullable Output<SoftwareSourceCustomSoftwareSourceFilterArgs> customSoftwareSourceFilter;

    /**
     * @return (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     * 
     */
    public Optional<Output<SoftwareSourceCustomSoftwareSourceFilterArgs>> customSoftwareSourceFilter() {
        return Optional.ofNullable(this.customSoftwareSourceFilter);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Information specified by the user about the software source.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Information specified by the user about the software source.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) User friendly name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) User friendly name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Fingerprint of the GPG key for this software source.
     * 
     */
    @Import(name="gpgKeyFingerprint")
    private @Nullable Output<String> gpgKeyFingerprint;

    /**
     * @return Fingerprint of the GPG key for this software source.
     * 
     */
    public Optional<Output<String>> gpgKeyFingerprint() {
        return Optional.ofNullable(this.gpgKeyFingerprint);
    }

    /**
     * ID of the GPG key for this software source.
     * 
     */
    @Import(name="gpgKeyId")
    private @Nullable Output<String> gpgKeyId;

    /**
     * @return ID of the GPG key for this software source.
     * 
     */
    public Optional<Output<String>> gpgKeyId() {
        return Optional.ofNullable(this.gpgKeyId);
    }

    /**
     * URL of the GPG key for this software source.
     * 
     */
    @Import(name="gpgKeyUrl")
    private @Nullable Output<String> gpgKeyUrl;

    /**
     * @return URL of the GPG key for this software source.
     * 
     */
    public Optional<Output<String>> gpgKeyUrl() {
        return Optional.ofNullable(this.gpgKeyUrl);
    }

    /**
     * (Updatable) Indicates whether service should automatically update the custom software source for the user.
     * 
     */
    @Import(name="isAutomaticallyUpdated")
    private @Nullable Output<Boolean> isAutomaticallyUpdated;

    /**
     * @return (Updatable) Indicates whether service should automatically update the custom software source for the user.
     * 
     */
    public Optional<Output<Boolean>> isAutomaticallyUpdated() {
        return Optional.ofNullable(this.isAutomaticallyUpdated);
    }

    /**
     * The OS family the software source belongs to.
     * 
     */
    @Import(name="osFamily")
    private @Nullable Output<String> osFamily;

    /**
     * @return The OS family the software source belongs to.
     * 
     */
    public Optional<Output<String>> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }

    /**
     * Number of packages.
     * 
     */
    @Import(name="packageCount")
    private @Nullable Output<String> packageCount;

    /**
     * @return Number of packages.
     * 
     */
    public Optional<Output<String>> packageCount() {
        return Optional.ofNullable(this.packageCount);
    }

    /**
     * The Repo ID for the software source.
     * 
     */
    @Import(name="repoId")
    private @Nullable Output<String> repoId;

    /**
     * @return The Repo ID for the software source.
     * 
     */
    public Optional<Output<String>> repoId() {
        return Optional.ofNullable(this.repoId);
    }

    /**
     * (Updatable) Type of the software source.
     * 
     */
    @Import(name="softwareSourceType")
    private @Nullable Output<String> softwareSourceType;

    /**
     * @return (Updatable) Type of the software source.
     * 
     */
    public Optional<Output<String>> softwareSourceType() {
        return Optional.ofNullable(this.softwareSourceType);
    }

    /**
     * The version to assign to this custom software source.
     * 
     */
    @Import(name="softwareSourceVersion")
    private @Nullable Output<String> softwareSourceVersion;

    /**
     * @return The version to assign to this custom software source.
     * 
     */
    public Optional<Output<String>> softwareSourceVersion() {
        return Optional.ofNullable(this.softwareSourceVersion);
    }

    /**
     * The current state of the software source.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the software source.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * URL for the repository.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return URL for the repository.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    /**
     * Name of the vendor providing the software source.
     * 
     */
    @Import(name="vendorName")
    private @Nullable Output<String> vendorName;

    /**
     * @return Name of the vendor providing the software source.
     * 
     */
    public Optional<Output<String>> vendorName() {
        return Optional.ofNullable(this.vendorName);
    }

    /**
     * (Updatable) List of vendor software sources.
     * 
     */
    @Import(name="vendorSoftwareSources")
    private @Nullable Output<List<SoftwareSourceVendorSoftwareSourceArgs>> vendorSoftwareSources;

    /**
     * @return (Updatable) List of vendor software sources.
     * 
     */
    public Optional<Output<List<SoftwareSourceVendorSoftwareSourceArgs>>> vendorSoftwareSources() {
        return Optional.ofNullable(this.vendorSoftwareSources);
    }

    private SoftwareSourceState() {}

    private SoftwareSourceState(SoftwareSourceState $) {
        this.archType = $.archType;
        this.availability = $.availability;
        this.checksumType = $.checksumType;
        this.compartmentId = $.compartmentId;
        this.customSoftwareSourceFilter = $.customSoftwareSourceFilter;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.gpgKeyFingerprint = $.gpgKeyFingerprint;
        this.gpgKeyId = $.gpgKeyId;
        this.gpgKeyUrl = $.gpgKeyUrl;
        this.isAutomaticallyUpdated = $.isAutomaticallyUpdated;
        this.osFamily = $.osFamily;
        this.packageCount = $.packageCount;
        this.repoId = $.repoId;
        this.softwareSourceType = $.softwareSourceType;
        this.softwareSourceVersion = $.softwareSourceVersion;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.url = $.url;
        this.vendorName = $.vendorName;
        this.vendorSoftwareSources = $.vendorSoftwareSources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareSourceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareSourceState $;

        public Builder() {
            $ = new SoftwareSourceState();
        }

        public Builder(SoftwareSourceState defaults) {
            $ = new SoftwareSourceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param archType The architecture type supported by the software source.
         * 
         * @return builder
         * 
         */
        public Builder archType(@Nullable Output<String> archType) {
            $.archType = archType;
            return this;
        }

        /**
         * @param archType The architecture type supported by the software source.
         * 
         * @return builder
         * 
         */
        public Builder archType(String archType) {
            return archType(Output.of(archType));
        }

        /**
         * @param availability Possible availabilities of a software source.
         * 
         * @return builder
         * 
         */
        public Builder availability(@Nullable Output<String> availability) {
            $.availability = availability;
            return this;
        }

        /**
         * @param availability Possible availabilities of a software source.
         * 
         * @return builder
         * 
         */
        public Builder availability(String availability) {
            return availability(Output.of(availability));
        }

        /**
         * @param checksumType The yum repository checksum type used by this software source.
         * 
         * @return builder
         * 
         */
        public Builder checksumType(@Nullable Output<String> checksumType) {
            $.checksumType = checksumType;
            return this;
        }

        /**
         * @param checksumType The yum repository checksum type used by this software source.
         * 
         * @return builder
         * 
         */
        public Builder checksumType(String checksumType) {
            return checksumType(Output.of(checksumType));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the tenancy containing the software source.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the tenancy containing the software source.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param customSoftwareSourceFilter (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
         * 
         * @return builder
         * 
         */
        public Builder customSoftwareSourceFilter(@Nullable Output<SoftwareSourceCustomSoftwareSourceFilterArgs> customSoftwareSourceFilter) {
            $.customSoftwareSourceFilter = customSoftwareSourceFilter;
            return this;
        }

        /**
         * @param customSoftwareSourceFilter (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
         * 
         * @return builder
         * 
         */
        public Builder customSoftwareSourceFilter(SoftwareSourceCustomSoftwareSourceFilterArgs customSoftwareSourceFilter) {
            return customSoftwareSourceFilter(Output.of(customSoftwareSourceFilter));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Information specified by the user about the software source.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Information specified by the user about the software source.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) User friendly name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) User friendly name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param gpgKeyFingerprint Fingerprint of the GPG key for this software source.
         * 
         * @return builder
         * 
         */
        public Builder gpgKeyFingerprint(@Nullable Output<String> gpgKeyFingerprint) {
            $.gpgKeyFingerprint = gpgKeyFingerprint;
            return this;
        }

        /**
         * @param gpgKeyFingerprint Fingerprint of the GPG key for this software source.
         * 
         * @return builder
         * 
         */
        public Builder gpgKeyFingerprint(String gpgKeyFingerprint) {
            return gpgKeyFingerprint(Output.of(gpgKeyFingerprint));
        }

        /**
         * @param gpgKeyId ID of the GPG key for this software source.
         * 
         * @return builder
         * 
         */
        public Builder gpgKeyId(@Nullable Output<String> gpgKeyId) {
            $.gpgKeyId = gpgKeyId;
            return this;
        }

        /**
         * @param gpgKeyId ID of the GPG key for this software source.
         * 
         * @return builder
         * 
         */
        public Builder gpgKeyId(String gpgKeyId) {
            return gpgKeyId(Output.of(gpgKeyId));
        }

        /**
         * @param gpgKeyUrl URL of the GPG key for this software source.
         * 
         * @return builder
         * 
         */
        public Builder gpgKeyUrl(@Nullable Output<String> gpgKeyUrl) {
            $.gpgKeyUrl = gpgKeyUrl;
            return this;
        }

        /**
         * @param gpgKeyUrl URL of the GPG key for this software source.
         * 
         * @return builder
         * 
         */
        public Builder gpgKeyUrl(String gpgKeyUrl) {
            return gpgKeyUrl(Output.of(gpgKeyUrl));
        }

        /**
         * @param isAutomaticallyUpdated (Updatable) Indicates whether service should automatically update the custom software source for the user.
         * 
         * @return builder
         * 
         */
        public Builder isAutomaticallyUpdated(@Nullable Output<Boolean> isAutomaticallyUpdated) {
            $.isAutomaticallyUpdated = isAutomaticallyUpdated;
            return this;
        }

        /**
         * @param isAutomaticallyUpdated (Updatable) Indicates whether service should automatically update the custom software source for the user.
         * 
         * @return builder
         * 
         */
        public Builder isAutomaticallyUpdated(Boolean isAutomaticallyUpdated) {
            return isAutomaticallyUpdated(Output.of(isAutomaticallyUpdated));
        }

        /**
         * @param osFamily The OS family the software source belongs to.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(@Nullable Output<String> osFamily) {
            $.osFamily = osFamily;
            return this;
        }

        /**
         * @param osFamily The OS family the software source belongs to.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(String osFamily) {
            return osFamily(Output.of(osFamily));
        }

        /**
         * @param packageCount Number of packages.
         * 
         * @return builder
         * 
         */
        public Builder packageCount(@Nullable Output<String> packageCount) {
            $.packageCount = packageCount;
            return this;
        }

        /**
         * @param packageCount Number of packages.
         * 
         * @return builder
         * 
         */
        public Builder packageCount(String packageCount) {
            return packageCount(Output.of(packageCount));
        }

        /**
         * @param repoId The Repo ID for the software source.
         * 
         * @return builder
         * 
         */
        public Builder repoId(@Nullable Output<String> repoId) {
            $.repoId = repoId;
            return this;
        }

        /**
         * @param repoId The Repo ID for the software source.
         * 
         * @return builder
         * 
         */
        public Builder repoId(String repoId) {
            return repoId(Output.of(repoId));
        }

        /**
         * @param softwareSourceType (Updatable) Type of the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceType(@Nullable Output<String> softwareSourceType) {
            $.softwareSourceType = softwareSourceType;
            return this;
        }

        /**
         * @param softwareSourceType (Updatable) Type of the software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceType(String softwareSourceType) {
            return softwareSourceType(Output.of(softwareSourceType));
        }

        /**
         * @param softwareSourceVersion The version to assign to this custom software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceVersion(@Nullable Output<String> softwareSourceVersion) {
            $.softwareSourceVersion = softwareSourceVersion;
            return this;
        }

        /**
         * @param softwareSourceVersion The version to assign to this custom software source.
         * 
         * @return builder
         * 
         */
        public Builder softwareSourceVersion(String softwareSourceVersion) {
            return softwareSourceVersion(Output.of(softwareSourceVersion));
        }

        /**
         * @param state The current state of the software source.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the software source.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param url URL for the repository.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url URL for the repository.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param vendorName Name of the vendor providing the software source.
         * 
         * @return builder
         * 
         */
        public Builder vendorName(@Nullable Output<String> vendorName) {
            $.vendorName = vendorName;
            return this;
        }

        /**
         * @param vendorName Name of the vendor providing the software source.
         * 
         * @return builder
         * 
         */
        public Builder vendorName(String vendorName) {
            return vendorName(Output.of(vendorName));
        }

        /**
         * @param vendorSoftwareSources (Updatable) List of vendor software sources.
         * 
         * @return builder
         * 
         */
        public Builder vendorSoftwareSources(@Nullable Output<List<SoftwareSourceVendorSoftwareSourceArgs>> vendorSoftwareSources) {
            $.vendorSoftwareSources = vendorSoftwareSources;
            return this;
        }

        /**
         * @param vendorSoftwareSources (Updatable) List of vendor software sources.
         * 
         * @return builder
         * 
         */
        public Builder vendorSoftwareSources(List<SoftwareSourceVendorSoftwareSourceArgs> vendorSoftwareSources) {
            return vendorSoftwareSources(Output.of(vendorSoftwareSources));
        }

        /**
         * @param vendorSoftwareSources (Updatable) List of vendor software sources.
         * 
         * @return builder
         * 
         */
        public Builder vendorSoftwareSources(SoftwareSourceVendorSoftwareSourceArgs... vendorSoftwareSources) {
            return vendorSoftwareSources(List.of(vendorSoftwareSources));
        }

        public SoftwareSourceState build() {
            return $;
        }
    }

}
