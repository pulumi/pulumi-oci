// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.outputs.GetEventsEventCollection;
import com.pulumi.oci.OsManagementHub.outputs.GetEventsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEventsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The list of event_collection.
     * 
     */
    private List<GetEventsEventCollection> eventCollections;
    /**
     * @return Fingerprint of the event.
     * 
     */
    private @Nullable String eventFingerprint;
    /**
     * @return Summary of the event.
     * 
     */
    private @Nullable String eventSummary;
    private @Nullable String eventSummaryContains;
    private @Nullable List<GetEventsFilter> filters;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates whether the event occurred on a resource that is managed by the Autonomous Linux service.
     * 
     */
    private @Nullable Boolean isManagedByAutonomousLinux;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance or resource where the event occurred.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return The current state of the event.
     * 
     */
    private @Nullable String state;
    private @Nullable String timeCreatedGreaterThanOrEqualTo;
    private @Nullable String timeCreatedLessThan;
    /**
     * @return Event type:
     * * `KERNEL_OOPS` - Used to identify a kernel panic condition event
     * * `KERNEL_CRASH` - Used to identify an internal fatal kernel error that cannot be safely recovered from
     * * `EXPLOIT_ATTEMPT` - Used to identify a known exploit detection as identified by Ksplice
     * * `SOFTWARE_UPDATE` - Software updates - Packages
     * * `KSPLICE_UPDATE` - Ksplice updates
     * * `SOFTWARE_SOURCE` - Software source
     * * `AGENT` - Agent
     * * `MANAGEMENT_STATION` - Management Station
     * 
     */
    private @Nullable List<String> types;

    private GetEventsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The list of event_collection.
     * 
     */
    public List<GetEventsEventCollection> eventCollections() {
        return this.eventCollections;
    }
    /**
     * @return Fingerprint of the event.
     * 
     */
    public Optional<String> eventFingerprint() {
        return Optional.ofNullable(this.eventFingerprint);
    }
    /**
     * @return Summary of the event.
     * 
     */
    public Optional<String> eventSummary() {
        return Optional.ofNullable(this.eventSummary);
    }
    public Optional<String> eventSummaryContains() {
        return Optional.ofNullable(this.eventSummaryContains);
    }
    public List<GetEventsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the event.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether the event occurred on a resource that is managed by the Autonomous Linux service.
     * 
     */
    public Optional<Boolean> isManagedByAutonomousLinux() {
        return Optional.ofNullable(this.isManagedByAutonomousLinux);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance or resource where the event occurred.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return The current state of the event.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }
    /**
     * @return Event type:
     * * `KERNEL_OOPS` - Used to identify a kernel panic condition event
     * * `KERNEL_CRASH` - Used to identify an internal fatal kernel error that cannot be safely recovered from
     * * `EXPLOIT_ATTEMPT` - Used to identify a known exploit detection as identified by Ksplice
     * * `SOFTWARE_UPDATE` - Software updates - Packages
     * * `KSPLICE_UPDATE` - Ksplice updates
     * * `SOFTWARE_SOURCE` - Software source
     * * `AGENT` - Agent
     * * `MANAGEMENT_STATION` - Management Station
     * 
     */
    public List<String> types() {
        return this.types == null ? List.of() : this.types;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private List<GetEventsEventCollection> eventCollections;
        private @Nullable String eventFingerprint;
        private @Nullable String eventSummary;
        private @Nullable String eventSummaryContains;
        private @Nullable List<GetEventsFilter> filters;
        private @Nullable String id;
        private @Nullable Boolean isManagedByAutonomousLinux;
        private @Nullable String resourceId;
        private @Nullable String state;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        private @Nullable List<String> types;
        public Builder() {}
        public Builder(GetEventsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.eventCollections = defaults.eventCollections;
    	      this.eventFingerprint = defaults.eventFingerprint;
    	      this.eventSummary = defaults.eventSummary;
    	      this.eventSummaryContains = defaults.eventSummaryContains;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isManagedByAutonomousLinux = defaults.isManagedByAutonomousLinux;
    	      this.resourceId = defaults.resourceId;
    	      this.state = defaults.state;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
    	      this.types = defaults.types;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder eventCollections(List<GetEventsEventCollection> eventCollections) {
            if (eventCollections == null) {
              throw new MissingRequiredPropertyException("GetEventsResult", "eventCollections");
            }
            this.eventCollections = eventCollections;
            return this;
        }
        public Builder eventCollections(GetEventsEventCollection... eventCollections) {
            return eventCollections(List.of(eventCollections));
        }
        @CustomType.Setter
        public Builder eventFingerprint(@Nullable String eventFingerprint) {

            this.eventFingerprint = eventFingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder eventSummary(@Nullable String eventSummary) {

            this.eventSummary = eventSummary;
            return this;
        }
        @CustomType.Setter
        public Builder eventSummaryContains(@Nullable String eventSummaryContains) {

            this.eventSummaryContains = eventSummaryContains;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetEventsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetEventsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isManagedByAutonomousLinux(@Nullable Boolean isManagedByAutonomousLinux) {

            this.isManagedByAutonomousLinux = isManagedByAutonomousLinux;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {

            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {

            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        @CustomType.Setter
        public Builder types(@Nullable List<String> types) {

            this.types = types;
            return this;
        }
        public Builder types(String... types) {
            return types(List.of(types));
        }
        public GetEventsResult build() {
            final var _resultValue = new GetEventsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.eventCollections = eventCollections;
            _resultValue.eventFingerprint = eventFingerprint;
            _resultValue.eventSummary = eventSummary;
            _resultValue.eventSummaryContains = eventSummaryContains;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isManagedByAutonomousLinux = isManagedByAutonomousLinux;
            _resultValue.resourceId = resourceId;
            _resultValue.state = state;
            _resultValue.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            _resultValue.timeCreatedLessThan = timeCreatedLessThan;
            _resultValue.types = types;
            return _resultValue;
        }
    }
}
