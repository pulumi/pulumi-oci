// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollection;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceAvailableWindowsUpdatesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceAvailableWindowsUpdatesResult {
    /**
     * @return The list of available_windows_update_collection.
     * 
     */
    private List<GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollection> availableWindowsUpdateCollections;
    private @Nullable List<String> classificationTypes;
    private @Nullable String compartmentId;
    private @Nullable String displayName;
    private @Nullable String displayNameContains;
    private @Nullable List<GetManagedInstanceAvailableWindowsUpdatesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String isInstallable;
    private String managedInstanceId;
    /**
     * @return Name of the Windows update.
     * 
     */
    private @Nullable List<String> names;

    private GetManagedInstanceAvailableWindowsUpdatesResult() {}
    /**
     * @return The list of available_windows_update_collection.
     * 
     */
    public List<GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollection> availableWindowsUpdateCollections() {
        return this.availableWindowsUpdateCollections;
    }
    public List<String> classificationTypes() {
        return this.classificationTypes == null ? List.of() : this.classificationTypes;
    }
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }
    public List<GetManagedInstanceAvailableWindowsUpdatesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> isInstallable() {
        return Optional.ofNullable(this.isInstallable);
    }
    public String managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * @return Name of the Windows update.
     * 
     */
    public List<String> names() {
        return this.names == null ? List.of() : this.names;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceAvailableWindowsUpdatesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollection> availableWindowsUpdateCollections;
        private @Nullable List<String> classificationTypes;
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable String displayNameContains;
        private @Nullable List<GetManagedInstanceAvailableWindowsUpdatesFilter> filters;
        private String id;
        private @Nullable String isInstallable;
        private String managedInstanceId;
        private @Nullable List<String> names;
        public Builder() {}
        public Builder(GetManagedInstanceAvailableWindowsUpdatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableWindowsUpdateCollections = defaults.availableWindowsUpdateCollections;
    	      this.classificationTypes = defaults.classificationTypes;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.displayNameContains = defaults.displayNameContains;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isInstallable = defaults.isInstallable;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.names = defaults.names;
        }

        @CustomType.Setter
        public Builder availableWindowsUpdateCollections(List<GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollection> availableWindowsUpdateCollections) {
            if (availableWindowsUpdateCollections == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceAvailableWindowsUpdatesResult", "availableWindowsUpdateCollections");
            }
            this.availableWindowsUpdateCollections = availableWindowsUpdateCollections;
            return this;
        }
        public Builder availableWindowsUpdateCollections(GetManagedInstanceAvailableWindowsUpdatesAvailableWindowsUpdateCollection... availableWindowsUpdateCollections) {
            return availableWindowsUpdateCollections(List.of(availableWindowsUpdateCollections));
        }
        @CustomType.Setter
        public Builder classificationTypes(@Nullable List<String> classificationTypes) {

            this.classificationTypes = classificationTypes;
            return this;
        }
        public Builder classificationTypes(String... classificationTypes) {
            return classificationTypes(List.of(classificationTypes));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder displayNameContains(@Nullable String displayNameContains) {

            this.displayNameContains = displayNameContains;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedInstanceAvailableWindowsUpdatesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedInstanceAvailableWindowsUpdatesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceAvailableWindowsUpdatesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isInstallable(@Nullable String isInstallable) {

            this.isInstallable = isInstallable;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            if (managedInstanceId == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceAvailableWindowsUpdatesResult", "managedInstanceId");
            }
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder names(@Nullable List<String> names) {

            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public GetManagedInstanceAvailableWindowsUpdatesResult build() {
            final var _resultValue = new GetManagedInstanceAvailableWindowsUpdatesResult();
            _resultValue.availableWindowsUpdateCollections = availableWindowsUpdateCollections;
            _resultValue.classificationTypes = classificationTypes;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.displayNameContains = displayNameContains;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isInstallable = isInstallable;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.names = names;
            return _resultValue;
        }
    }
}
