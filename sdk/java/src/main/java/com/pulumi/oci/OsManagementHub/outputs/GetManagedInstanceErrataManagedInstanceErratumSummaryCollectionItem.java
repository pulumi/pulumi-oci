// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItemPackage;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem {
    /**
     * @return The advisory type of the erratum.
     * 
     */
    private String advisoryType;
    /**
     * @return The assigned erratum name. It&#39;s unique and not changeable.  Example: `ELSA-2020-5804`
     * 
     */
    private String name;
    /**
     * @return The list of packages affected by this erratum.
     * 
     */
    private List<GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItemPackage> packages;
    /**
     * @return The list of CVEs applicable to this erratum.
     * 
     */
    private List<String> relatedCves;
    /**
     * @return A summary description of the erratum.
     * 
     */
    private String synopsis;
    /**
     * @return The date and time the package was issued by a providing erratum (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    private String timeIssued;

    private GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem() {}
    /**
     * @return The advisory type of the erratum.
     * 
     */
    public String advisoryType() {
        return this.advisoryType;
    }
    /**
     * @return The assigned erratum name. It&#39;s unique and not changeable.  Example: `ELSA-2020-5804`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The list of packages affected by this erratum.
     * 
     */
    public List<GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItemPackage> packages() {
        return this.packages;
    }
    /**
     * @return The list of CVEs applicable to this erratum.
     * 
     */
    public List<String> relatedCves() {
        return this.relatedCves;
    }
    /**
     * @return A summary description of the erratum.
     * 
     */
    public String synopsis() {
        return this.synopsis;
    }
    /**
     * @return The date and time the package was issued by a providing erratum (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public String timeIssued() {
        return this.timeIssued;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String advisoryType;
        private String name;
        private List<GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItemPackage> packages;
        private List<String> relatedCves;
        private String synopsis;
        private String timeIssued;
        public Builder() {}
        public Builder(GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advisoryType = defaults.advisoryType;
    	      this.name = defaults.name;
    	      this.packages = defaults.packages;
    	      this.relatedCves = defaults.relatedCves;
    	      this.synopsis = defaults.synopsis;
    	      this.timeIssued = defaults.timeIssued;
        }

        @CustomType.Setter
        public Builder advisoryType(String advisoryType) {
            if (advisoryType == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem", "advisoryType");
            }
            this.advisoryType = advisoryType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder packages(List<GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItemPackage> packages) {
            if (packages == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem", "packages");
            }
            this.packages = packages;
            return this;
        }
        public Builder packages(GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItemPackage... packages) {
            return packages(List.of(packages));
        }
        @CustomType.Setter
        public Builder relatedCves(List<String> relatedCves) {
            if (relatedCves == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem", "relatedCves");
            }
            this.relatedCves = relatedCves;
            return this;
        }
        public Builder relatedCves(String... relatedCves) {
            return relatedCves(List.of(relatedCves));
        }
        @CustomType.Setter
        public Builder synopsis(String synopsis) {
            if (synopsis == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem", "synopsis");
            }
            this.synopsis = synopsis;
            return this;
        }
        @CustomType.Setter
        public Builder timeIssued(String timeIssued) {
            if (timeIssued == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem", "timeIssued");
            }
            this.timeIssued = timeIssued;
            return this;
        }
        public GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem build() {
            final var _resultValue = new GetManagedInstanceErrataManagedInstanceErratumSummaryCollectionItem();
            _resultValue.advisoryType = advisoryType;
            _resultValue.name = name;
            _resultValue.packages = packages;
            _resultValue.relatedCves = relatedCves;
            _resultValue.synopsis = synopsis;
            _resultValue.timeIssued = timeIssued;
            return _resultValue;
        }
    }
}
