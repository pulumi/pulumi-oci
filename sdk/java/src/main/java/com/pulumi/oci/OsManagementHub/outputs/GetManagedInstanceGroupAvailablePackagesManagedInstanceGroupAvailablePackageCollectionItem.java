// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem {
    /**
     * @return The architecture for which this package was built.
     * 
     */
    private @Nullable String architecture;
    /**
     * @return A filter to return resources that match the given display names.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
     * 
     */
    private @Nullable Boolean isLatest;
    /**
     * @return Unique identifier for the package. NOTE - This is not an OCID.
     * 
     */
    private @Nullable String name;
    /**
     * @return List of software sources that provide the software package.
     * 
     */
    private @Nullable List<GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource> softwareSources;
    /**
     * @return Type of the package.
     * 
     */
    private @Nullable String type;
    /**
     * @return Version of the installed package.
     * 
     */
    private @Nullable String version;

    private GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem() {}
    /**
     * @return The architecture for which this package was built.
     * 
     */
    public Optional<String> architecture() {
        return Optional.ofNullable(this.architecture);
    }
    /**
     * @return A filter to return resources that match the given display names.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
     * 
     */
    public Optional<Boolean> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }
    /**
     * @return Unique identifier for the package. NOTE - This is not an OCID.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return List of software sources that provide the software package.
     * 
     */
    public List<GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource> softwareSources() {
        return this.softwareSources == null ? List.of() : this.softwareSources;
    }
    /**
     * @return Type of the package.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return Version of the installed package.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String architecture;
        private @Nullable String displayName;
        private @Nullable Boolean isLatest;
        private @Nullable String name;
        private @Nullable List<GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource> softwareSources;
        private @Nullable String type;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.displayName = defaults.displayName;
    	      this.isLatest = defaults.isLatest;
    	      this.name = defaults.name;
    	      this.softwareSources = defaults.softwareSources;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder architecture(@Nullable String architecture) {
            this.architecture = architecture;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder isLatest(@Nullable Boolean isLatest) {
            this.isLatest = isLatest;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder softwareSources(@Nullable List<GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource> softwareSources) {
            this.softwareSources = softwareSources;
            return this;
        }
        public Builder softwareSources(GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItemSoftwareSource... softwareSources) {
            return softwareSources(List.of(softwareSources));
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem build() {
            final var o = new GetManagedInstanceGroupAvailablePackagesManagedInstanceGroupAvailablePackageCollectionItem();
            o.architecture = architecture;
            o.displayName = displayName;
            o.isLatest = isLatest;
            o.name = name;
            o.softwareSources = softwareSources;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
