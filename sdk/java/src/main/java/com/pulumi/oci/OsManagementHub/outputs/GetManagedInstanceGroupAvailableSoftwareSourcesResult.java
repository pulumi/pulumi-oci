// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceGroupAvailableSoftwareSourcesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceGroupAvailableSoftwareSourcesResult {
    /**
     * @return The list of available_software_source_collection.
     * 
     */
    private List<GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection> availableSoftwareSourceCollections;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable String displayNameContains;
    /**
     * @return User-friendly name for the software source.
     * 
     */
    private @Nullable List<String> displayNames;
    private @Nullable List<GetManagedInstanceGroupAvailableSoftwareSourcesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String managedInstanceGroupId;

    private GetManagedInstanceGroupAvailableSoftwareSourcesResult() {}
    /**
     * @return The list of available_software_source_collection.
     * 
     */
    public List<GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection> availableSoftwareSourceCollections() {
        return this.availableSoftwareSourceCollections;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }
    /**
     * @return User-friendly name for the software source.
     * 
     */
    public List<String> displayNames() {
        return this.displayNames == null ? List.of() : this.displayNames;
    }
    public List<GetManagedInstanceGroupAvailableSoftwareSourcesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceGroupAvailableSoftwareSourcesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection> availableSoftwareSourceCollections;
        private @Nullable String compartmentId;
        private @Nullable String displayNameContains;
        private @Nullable List<String> displayNames;
        private @Nullable List<GetManagedInstanceGroupAvailableSoftwareSourcesFilter> filters;
        private String id;
        private String managedInstanceGroupId;
        public Builder() {}
        public Builder(GetManagedInstanceGroupAvailableSoftwareSourcesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableSoftwareSourceCollections = defaults.availableSoftwareSourceCollections;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayNameContains = defaults.displayNameContains;
    	      this.displayNames = defaults.displayNames;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedInstanceGroupId = defaults.managedInstanceGroupId;
        }

        @CustomType.Setter
        public Builder availableSoftwareSourceCollections(List<GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection> availableSoftwareSourceCollections) {
            if (availableSoftwareSourceCollections == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceGroupAvailableSoftwareSourcesResult", "availableSoftwareSourceCollections");
            }
            this.availableSoftwareSourceCollections = availableSoftwareSourceCollections;
            return this;
        }
        public Builder availableSoftwareSourceCollections(GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection... availableSoftwareSourceCollections) {
            return availableSoftwareSourceCollections(List.of(availableSoftwareSourceCollections));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayNameContains(@Nullable String displayNameContains) {

            this.displayNameContains = displayNameContains;
            return this;
        }
        @CustomType.Setter
        public Builder displayNames(@Nullable List<String> displayNames) {

            this.displayNames = displayNames;
            return this;
        }
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedInstanceGroupAvailableSoftwareSourcesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedInstanceGroupAvailableSoftwareSourcesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceGroupAvailableSoftwareSourcesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            if (managedInstanceGroupId == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceGroupAvailableSoftwareSourcesResult", "managedInstanceGroupId");
            }
            this.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }
        public GetManagedInstanceGroupAvailableSoftwareSourcesResult build() {
            final var _resultValue = new GetManagedInstanceGroupAvailableSoftwareSourcesResult();
            _resultValue.availableSoftwareSourceCollections = availableSoftwareSourceCollections;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayNameContains = displayNameContains;
            _resultValue.displayNames = displayNames;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.managedInstanceGroupId = managedInstanceGroupId;
            return _resultValue;
        }
    }
}
