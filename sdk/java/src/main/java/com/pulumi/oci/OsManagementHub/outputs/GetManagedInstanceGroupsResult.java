// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceGroupsFilter;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceGroupsManagedInstanceGroupCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceGroupsResult {
    /**
     * @return The CPU architecture of the instances in the managed instance group.
     * 
     */
    private @Nullable String archType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance group.
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable String displayNameContains;
    /**
     * @return Software source name.
     * 
     */
    private @Nullable List<String> displayNames;
    private @Nullable List<GetManagedInstanceGroupsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Indicates whether the Autonomous Linux service manages the group.
     * 
     */
    private @Nullable Boolean isManagedByAutonomousLinux;
    private @Nullable List<String> locationNotEqualTos;
    /**
     * @return The location of managed instances attached to the group.
     * 
     */
    private @Nullable List<String> locations;
    /**
     * @return The list of managed_instance_group_collection.
     * 
     */
    private List<GetManagedInstanceGroupsManagedInstanceGroupCollection> managedInstanceGroupCollections;
    private @Nullable String managedInstanceGroupId;
    /**
     * @return The operating system type of the instances in the managed instance group.
     * 
     */
    private @Nullable String osFamily;
    private @Nullable String softwareSourceId;
    /**
     * @return The current state of the managed instance group.
     * 
     */
    private @Nullable String state;

    private GetManagedInstanceGroupsResult() {}
    /**
     * @return The CPU architecture of the instances in the managed instance group.
     * 
     */
    public Optional<String> archType() {
        return Optional.ofNullable(this.archType);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance group.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }
    /**
     * @return Software source name.
     * 
     */
    public List<String> displayNames() {
        return this.displayNames == null ? List.of() : this.displayNames;
    }
    public List<GetManagedInstanceGroupsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the Autonomous Linux service manages the group.
     * 
     */
    public Optional<Boolean> isManagedByAutonomousLinux() {
        return Optional.ofNullable(this.isManagedByAutonomousLinux);
    }
    public List<String> locationNotEqualTos() {
        return this.locationNotEqualTos == null ? List.of() : this.locationNotEqualTos;
    }
    /**
     * @return The location of managed instances attached to the group.
     * 
     */
    public List<String> locations() {
        return this.locations == null ? List.of() : this.locations;
    }
    /**
     * @return The list of managed_instance_group_collection.
     * 
     */
    public List<GetManagedInstanceGroupsManagedInstanceGroupCollection> managedInstanceGroupCollections() {
        return this.managedInstanceGroupCollections;
    }
    public Optional<String> managedInstanceGroupId() {
        return Optional.ofNullable(this.managedInstanceGroupId);
    }
    /**
     * @return The operating system type of the instances in the managed instance group.
     * 
     */
    public Optional<String> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }
    public Optional<String> softwareSourceId() {
        return Optional.ofNullable(this.softwareSourceId);
    }
    /**
     * @return The current state of the managed instance group.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceGroupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String archType;
        private @Nullable String compartmentId;
        private @Nullable String displayNameContains;
        private @Nullable List<String> displayNames;
        private @Nullable List<GetManagedInstanceGroupsFilter> filters;
        private String id;
        private @Nullable Boolean isManagedByAutonomousLinux;
        private @Nullable List<String> locationNotEqualTos;
        private @Nullable List<String> locations;
        private List<GetManagedInstanceGroupsManagedInstanceGroupCollection> managedInstanceGroupCollections;
        private @Nullable String managedInstanceGroupId;
        private @Nullable String osFamily;
        private @Nullable String softwareSourceId;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetManagedInstanceGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archType = defaults.archType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayNameContains = defaults.displayNameContains;
    	      this.displayNames = defaults.displayNames;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isManagedByAutonomousLinux = defaults.isManagedByAutonomousLinux;
    	      this.locationNotEqualTos = defaults.locationNotEqualTos;
    	      this.locations = defaults.locations;
    	      this.managedInstanceGroupCollections = defaults.managedInstanceGroupCollections;
    	      this.managedInstanceGroupId = defaults.managedInstanceGroupId;
    	      this.osFamily = defaults.osFamily;
    	      this.softwareSourceId = defaults.softwareSourceId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder archType(@Nullable String archType) {

            this.archType = archType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayNameContains(@Nullable String displayNameContains) {

            this.displayNameContains = displayNameContains;
            return this;
        }
        @CustomType.Setter
        public Builder displayNames(@Nullable List<String> displayNames) {

            this.displayNames = displayNames;
            return this;
        }
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedInstanceGroupsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedInstanceGroupsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceGroupsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isManagedByAutonomousLinux(@Nullable Boolean isManagedByAutonomousLinux) {

            this.isManagedByAutonomousLinux = isManagedByAutonomousLinux;
            return this;
        }
        @CustomType.Setter
        public Builder locationNotEqualTos(@Nullable List<String> locationNotEqualTos) {

            this.locationNotEqualTos = locationNotEqualTos;
            return this;
        }
        public Builder locationNotEqualTos(String... locationNotEqualTos) {
            return locationNotEqualTos(List.of(locationNotEqualTos));
        }
        @CustomType.Setter
        public Builder locations(@Nullable List<String> locations) {

            this.locations = locations;
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder managedInstanceGroupCollections(List<GetManagedInstanceGroupsManagedInstanceGroupCollection> managedInstanceGroupCollections) {
            if (managedInstanceGroupCollections == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceGroupsResult", "managedInstanceGroupCollections");
            }
            this.managedInstanceGroupCollections = managedInstanceGroupCollections;
            return this;
        }
        public Builder managedInstanceGroupCollections(GetManagedInstanceGroupsManagedInstanceGroupCollection... managedInstanceGroupCollections) {
            return managedInstanceGroupCollections(List.of(managedInstanceGroupCollections));
        }
        @CustomType.Setter
        public Builder managedInstanceGroupId(@Nullable String managedInstanceGroupId) {

            this.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(@Nullable String osFamily) {

            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder softwareSourceId(@Nullable String softwareSourceId) {

            this.softwareSourceId = softwareSourceId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetManagedInstanceGroupsResult build() {
            final var _resultValue = new GetManagedInstanceGroupsResult();
            _resultValue.archType = archType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayNameContains = displayNameContains;
            _resultValue.displayNames = displayNames;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isManagedByAutonomousLinux = isManagedByAutonomousLinux;
            _resultValue.locationNotEqualTos = locationNotEqualTos;
            _resultValue.locations = locations;
            _resultValue.managedInstanceGroupCollections = managedInstanceGroupCollections;
            _resultValue.managedInstanceGroupId = managedInstanceGroupId;
            _resultValue.osFamily = osFamily;
            _resultValue.softwareSourceId = softwareSourceId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
