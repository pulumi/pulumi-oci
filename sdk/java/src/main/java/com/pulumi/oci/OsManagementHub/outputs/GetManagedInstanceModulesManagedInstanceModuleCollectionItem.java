// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedInstanceModulesManagedInstanceModuleCollectionItem {
    /**
     * @return List of streams that are active in the module.
     * 
     */
    private List<String> activeStreams;
    /**
     * @return List of streams that are disabled in the module.
     * 
     */
    private List<String> disabledStreams;
    /**
     * @return The stream that is enabled in the module.
     * 
     */
    private String enabledStream;
    /**
     * @return List of installed profiles in the enabled stream of the module.
     * 
     */
    private List<String> installedProfiles;
    /**
     * @return The resource name.
     * 
     */
    private String name;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source that provides this module and the associated streams.
     * 
     */
    private String softwareSourceId;

    private GetManagedInstanceModulesManagedInstanceModuleCollectionItem() {}
    /**
     * @return List of streams that are active in the module.
     * 
     */
    public List<String> activeStreams() {
        return this.activeStreams;
    }
    /**
     * @return List of streams that are disabled in the module.
     * 
     */
    public List<String> disabledStreams() {
        return this.disabledStreams;
    }
    /**
     * @return The stream that is enabled in the module.
     * 
     */
    public String enabledStream() {
        return this.enabledStream;
    }
    /**
     * @return List of installed profiles in the enabled stream of the module.
     * 
     */
    public List<String> installedProfiles() {
        return this.installedProfiles;
    }
    /**
     * @return The resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source that provides this module and the associated streams.
     * 
     */
    public String softwareSourceId() {
        return this.softwareSourceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceModulesManagedInstanceModuleCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> activeStreams;
        private List<String> disabledStreams;
        private String enabledStream;
        private List<String> installedProfiles;
        private String name;
        private String softwareSourceId;
        public Builder() {}
        public Builder(GetManagedInstanceModulesManagedInstanceModuleCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeStreams = defaults.activeStreams;
    	      this.disabledStreams = defaults.disabledStreams;
    	      this.enabledStream = defaults.enabledStream;
    	      this.installedProfiles = defaults.installedProfiles;
    	      this.name = defaults.name;
    	      this.softwareSourceId = defaults.softwareSourceId;
        }

        @CustomType.Setter
        public Builder activeStreams(List<String> activeStreams) {
            if (activeStreams == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceModulesManagedInstanceModuleCollectionItem", "activeStreams");
            }
            this.activeStreams = activeStreams;
            return this;
        }
        public Builder activeStreams(String... activeStreams) {
            return activeStreams(List.of(activeStreams));
        }
        @CustomType.Setter
        public Builder disabledStreams(List<String> disabledStreams) {
            if (disabledStreams == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceModulesManagedInstanceModuleCollectionItem", "disabledStreams");
            }
            this.disabledStreams = disabledStreams;
            return this;
        }
        public Builder disabledStreams(String... disabledStreams) {
            return disabledStreams(List.of(disabledStreams));
        }
        @CustomType.Setter
        public Builder enabledStream(String enabledStream) {
            if (enabledStream == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceModulesManagedInstanceModuleCollectionItem", "enabledStream");
            }
            this.enabledStream = enabledStream;
            return this;
        }
        @CustomType.Setter
        public Builder installedProfiles(List<String> installedProfiles) {
            if (installedProfiles == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceModulesManagedInstanceModuleCollectionItem", "installedProfiles");
            }
            this.installedProfiles = installedProfiles;
            return this;
        }
        public Builder installedProfiles(String... installedProfiles) {
            return installedProfiles(List.of(installedProfiles));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceModulesManagedInstanceModuleCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder softwareSourceId(String softwareSourceId) {
            if (softwareSourceId == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceModulesManagedInstanceModuleCollectionItem", "softwareSourceId");
            }
            this.softwareSourceId = softwareSourceId;
            return this;
        }
        public GetManagedInstanceModulesManagedInstanceModuleCollectionItem build() {
            final var _resultValue = new GetManagedInstanceModulesManagedInstanceModuleCollectionItem();
            _resultValue.activeStreams = activeStreams;
            _resultValue.disabledStreams = disabledStreams;
            _resultValue.enabledStream = enabledStream;
            _resultValue.installedProfiles = installedProfiles;
            _resultValue.name = name;
            _resultValue.softwareSourceId = softwareSourceId;
            return _resultValue;
        }
    }
}
