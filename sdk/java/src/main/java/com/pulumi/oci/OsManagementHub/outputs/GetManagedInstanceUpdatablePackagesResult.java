// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceUpdatablePackagesFilter;
import com.pulumi.oci.OsManagementHub.outputs.GetManagedInstanceUpdatablePackagesUpdatablePackageCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceUpdatablePackagesResult {
    private @Nullable List<String> advisoryNames;
    private @Nullable List<String> classificationTypes;
    private @Nullable String compartmentId;
    private @Nullable String displayNameContains;
    /**
     * @return Software source name.
     * 
     */
    private @Nullable List<String> displayNames;
    private @Nullable List<GetManagedInstanceUpdatablePackagesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String managedInstanceId;
    /**
     * @return The list of updatable_package_collection.
     * 
     */
    private List<GetManagedInstanceUpdatablePackagesUpdatablePackageCollection> updatablePackageCollections;

    private GetManagedInstanceUpdatablePackagesResult() {}
    public List<String> advisoryNames() {
        return this.advisoryNames == null ? List.of() : this.advisoryNames;
    }
    public List<String> classificationTypes() {
        return this.classificationTypes == null ? List.of() : this.classificationTypes;
    }
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }
    /**
     * @return Software source name.
     * 
     */
    public List<String> displayNames() {
        return this.displayNames == null ? List.of() : this.displayNames;
    }
    public List<GetManagedInstanceUpdatablePackagesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * @return The list of updatable_package_collection.
     * 
     */
    public List<GetManagedInstanceUpdatablePackagesUpdatablePackageCollection> updatablePackageCollections() {
        return this.updatablePackageCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceUpdatablePackagesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> advisoryNames;
        private @Nullable List<String> classificationTypes;
        private @Nullable String compartmentId;
        private @Nullable String displayNameContains;
        private @Nullable List<String> displayNames;
        private @Nullable List<GetManagedInstanceUpdatablePackagesFilter> filters;
        private String id;
        private String managedInstanceId;
        private List<GetManagedInstanceUpdatablePackagesUpdatablePackageCollection> updatablePackageCollections;
        public Builder() {}
        public Builder(GetManagedInstanceUpdatablePackagesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advisoryNames = defaults.advisoryNames;
    	      this.classificationTypes = defaults.classificationTypes;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayNameContains = defaults.displayNameContains;
    	      this.displayNames = defaults.displayNames;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.updatablePackageCollections = defaults.updatablePackageCollections;
        }

        @CustomType.Setter
        public Builder advisoryNames(@Nullable List<String> advisoryNames) {

            this.advisoryNames = advisoryNames;
            return this;
        }
        public Builder advisoryNames(String... advisoryNames) {
            return advisoryNames(List.of(advisoryNames));
        }
        @CustomType.Setter
        public Builder classificationTypes(@Nullable List<String> classificationTypes) {

            this.classificationTypes = classificationTypes;
            return this;
        }
        public Builder classificationTypes(String... classificationTypes) {
            return classificationTypes(List.of(classificationTypes));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayNameContains(@Nullable String displayNameContains) {

            this.displayNameContains = displayNameContains;
            return this;
        }
        @CustomType.Setter
        public Builder displayNames(@Nullable List<String> displayNames) {

            this.displayNames = displayNames;
            return this;
        }
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedInstanceUpdatablePackagesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedInstanceUpdatablePackagesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceUpdatablePackagesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            if (managedInstanceId == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceUpdatablePackagesResult", "managedInstanceId");
            }
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder updatablePackageCollections(List<GetManagedInstanceUpdatablePackagesUpdatablePackageCollection> updatablePackageCollections) {
            if (updatablePackageCollections == null) {
              throw new MissingRequiredPropertyException("GetManagedInstanceUpdatablePackagesResult", "updatablePackageCollections");
            }
            this.updatablePackageCollections = updatablePackageCollections;
            return this;
        }
        public Builder updatablePackageCollections(GetManagedInstanceUpdatablePackagesUpdatablePackageCollection... updatablePackageCollections) {
            return updatablePackageCollections(List.of(updatablePackageCollections));
        }
        public GetManagedInstanceUpdatablePackagesResult build() {
            final var _resultValue = new GetManagedInstanceUpdatablePackagesResult();
            _resultValue.advisoryNames = advisoryNames;
            _resultValue.classificationTypes = classificationTypes;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayNameContains = displayNameContains;
            _resultValue.displayNames = displayNames;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.updatablePackageCollections = updatablePackageCollections;
            return _resultValue;
        }
    }
}
