// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetManagementStationMirrorSyncStatus {
    /**
     * @return Total of mirrors in &#39;failed&#39; state
     * 
     */
    private Integer failed;
    /**
     * @return Total of mirrors in &#39;queued&#39; state
     * 
     */
    private Integer queued;
    /**
     * @return Total of mirrors in &#39;synced&#39; state
     * 
     */
    private Integer synced;
    /**
     * @return Total of mirrors in &#39;syncing&#39; state
     * 
     */
    private Integer syncing;
    /**
     * @return Total of mirrors in &#39;failed&#39; state
     * 
     */
    private Integer unsynced;

    private GetManagementStationMirrorSyncStatus() {}
    /**
     * @return Total of mirrors in &#39;failed&#39; state
     * 
     */
    public Integer failed() {
        return this.failed;
    }
    /**
     * @return Total of mirrors in &#39;queued&#39; state
     * 
     */
    public Integer queued() {
        return this.queued;
    }
    /**
     * @return Total of mirrors in &#39;synced&#39; state
     * 
     */
    public Integer synced() {
        return this.synced;
    }
    /**
     * @return Total of mirrors in &#39;syncing&#39; state
     * 
     */
    public Integer syncing() {
        return this.syncing;
    }
    /**
     * @return Total of mirrors in &#39;failed&#39; state
     * 
     */
    public Integer unsynced() {
        return this.unsynced;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementStationMirrorSyncStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer failed;
        private Integer queued;
        private Integer synced;
        private Integer syncing;
        private Integer unsynced;
        public Builder() {}
        public Builder(GetManagementStationMirrorSyncStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failed = defaults.failed;
    	      this.queued = defaults.queued;
    	      this.synced = defaults.synced;
    	      this.syncing = defaults.syncing;
    	      this.unsynced = defaults.unsynced;
        }

        @CustomType.Setter
        public Builder failed(Integer failed) {
            if (failed == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorSyncStatus", "failed");
            }
            this.failed = failed;
            return this;
        }
        @CustomType.Setter
        public Builder queued(Integer queued) {
            if (queued == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorSyncStatus", "queued");
            }
            this.queued = queued;
            return this;
        }
        @CustomType.Setter
        public Builder synced(Integer synced) {
            if (synced == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorSyncStatus", "synced");
            }
            this.synced = synced;
            return this;
        }
        @CustomType.Setter
        public Builder syncing(Integer syncing) {
            if (syncing == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorSyncStatus", "syncing");
            }
            this.syncing = syncing;
            return this;
        }
        @CustomType.Setter
        public Builder unsynced(Integer unsynced) {
            if (unsynced == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorSyncStatus", "unsynced");
            }
            this.unsynced = unsynced;
            return this;
        }
        public GetManagementStationMirrorSyncStatus build() {
            final var _resultValue = new GetManagementStationMirrorSyncStatus();
            _resultValue.failed = failed;
            _resultValue.queued = queued;
            _resultValue.synced = synced;
            _resultValue.syncing = syncing;
            _resultValue.unsynced = unsynced;
            return _resultValue;
        }
    }
}
