// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagementStationMirrorsMirrorsCollectionItem {
    /**
     * @return The architecture type supported by the software source.
     * 
     */
    private String archType;
    /**
     * @return A filter to return resources that match the given user-friendly name.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    private String id;
    /**
     * @return The current log from the management station plugin.
     * 
     */
    private String log;
    /**
     * @return The OS family of the software source.
     * 
     */
    private String osFamily;
    /**
     * @return The number of packages within the mirrored software source.
     * 
     */
    private Integer packageCount;
    /**
     * @return A decimal number representing the percentage of the software source that has been synced.
     * 
     */
    private Integer percentage;
    /**
     * @return The size the mirrored software source in bytes.
     * 
     */
    private String size;
    /**
     * @return Current state of the software source mirror.
     * 
     */
    private String state;
    /**
     * @return Time that the software source was last synced (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    private String timeLastSynced;
    /**
     * @return Type of software source.
     * 
     */
    private String type;

    private GetManagementStationMirrorsMirrorsCollectionItem() {}
    /**
     * @return The architecture type supported by the software source.
     * 
     */
    public String archType() {
        return this.archType;
    }
    /**
     * @return A filter to return resources that match the given user-friendly name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current log from the management station plugin.
     * 
     */
    public String log() {
        return this.log;
    }
    /**
     * @return The OS family of the software source.
     * 
     */
    public String osFamily() {
        return this.osFamily;
    }
    /**
     * @return The number of packages within the mirrored software source.
     * 
     */
    public Integer packageCount() {
        return this.packageCount;
    }
    /**
     * @return A decimal number representing the percentage of the software source that has been synced.
     * 
     */
    public Integer percentage() {
        return this.percentage;
    }
    /**
     * @return The size the mirrored software source in bytes.
     * 
     */
    public String size() {
        return this.size;
    }
    /**
     * @return Current state of the software source mirror.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Time that the software source was last synced (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public String timeLastSynced() {
        return this.timeLastSynced;
    }
    /**
     * @return Type of software source.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementStationMirrorsMirrorsCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String archType;
        private String displayName;
        private String id;
        private String log;
        private String osFamily;
        private Integer packageCount;
        private Integer percentage;
        private String size;
        private String state;
        private String timeLastSynced;
        private String type;
        public Builder() {}
        public Builder(GetManagementStationMirrorsMirrorsCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archType = defaults.archType;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.log = defaults.log;
    	      this.osFamily = defaults.osFamily;
    	      this.packageCount = defaults.packageCount;
    	      this.percentage = defaults.percentage;
    	      this.size = defaults.size;
    	      this.state = defaults.state;
    	      this.timeLastSynced = defaults.timeLastSynced;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder archType(String archType) {
            if (archType == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "archType");
            }
            this.archType = archType;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder log(String log) {
            if (log == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "log");
            }
            this.log = log;
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(String osFamily) {
            if (osFamily == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "osFamily");
            }
            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder packageCount(Integer packageCount) {
            if (packageCount == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "packageCount");
            }
            this.packageCount = packageCount;
            return this;
        }
        @CustomType.Setter
        public Builder percentage(Integer percentage) {
            if (percentage == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "percentage");
            }
            this.percentage = percentage;
            return this;
        }
        @CustomType.Setter
        public Builder size(String size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSynced(String timeLastSynced) {
            if (timeLastSynced == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "timeLastSynced");
            }
            this.timeLastSynced = timeLastSynced;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetManagementStationMirrorsMirrorsCollectionItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetManagementStationMirrorsMirrorsCollectionItem build() {
            final var _resultValue = new GetManagementStationMirrorsMirrorsCollectionItem();
            _resultValue.archType = archType;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.log = log;
            _resultValue.osFamily = osFamily;
            _resultValue.packageCount = packageCount;
            _resultValue.percentage = percentage;
            _resultValue.size = size;
            _resultValue.state = state;
            _resultValue.timeLastSynced = timeLastSynced;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
