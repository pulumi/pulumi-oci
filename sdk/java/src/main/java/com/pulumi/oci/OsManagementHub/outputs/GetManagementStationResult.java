// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagementHub.outputs.GetManagementStationMirror;
import com.pulumi.oci.OsManagementHub.outputs.GetManagementStationMirrorSyncStatus;
import com.pulumi.oci.OsManagementHub.outputs.GetManagementStationProxy;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagementStationResult {
    /**
     * @return The OCID of the tenancy containing the Management Station.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Details describing the ManagementStation config.
     * 
     */
    private @Nullable String description;
    /**
     * @return ManagementStation name
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Name of the host
     * 
     */
    private @Nullable String hostname;
    /**
     * @return OCID for the ManagementStation config
     * 
     */
    private @Nullable String id;
    /**
     * @return OCID for the Instance associated with the Management Station.
     * 
     */
    private @Nullable String managedInstanceId;
    private String managementStationId;
    /**
     * @return A decimal number representing the mirror capacity
     * 
     */
    private @Nullable Integer mirrorCapacity;
    /**
     * @return Status summary of all repos
     * 
     */
    private @Nullable List<GetManagementStationMirrorSyncStatus> mirrorSyncStatuses;
    /**
     * @return Information for a mirror configuration
     * 
     */
    private @Nullable List<GetManagementStationMirror> mirrors;
    /**
     * @return A decimal number representing the completeness percentage
     * 
     */
    private @Nullable Integer overallPercentage;
    /**
     * @return Current state of the mirroring
     * 
     */
    private @Nullable String overallState;
    /**
     * @return OCID of the Profile associated with the Station
     * 
     */
    private @Nullable String profileId;
    /**
     * @return Information for a proxy configuration
     * 
     */
    private @Nullable List<GetManagementStationProxy> proxies;
    /**
     * @return OCID of the Scheduled Job for mirror sync
     * 
     */
    private @Nullable String scheduledJobId;
    /**
     * @return The current state of the Management Station config.
     * 
     */
    private @Nullable String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return A decimal number representing the total of repos
     * 
     */
    private @Nullable Integer totalMirrors;

    private GetManagementStationResult() {}
    /**
     * @return The OCID of the tenancy containing the Management Station.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Details describing the ManagementStation config.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return ManagementStation name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Name of the host
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return OCID for the ManagementStation config
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return OCID for the Instance associated with the Management Station.
     * 
     */
    public Optional<String> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }
    public String managementStationId() {
        return this.managementStationId;
    }
    /**
     * @return A decimal number representing the mirror capacity
     * 
     */
    public Optional<Integer> mirrorCapacity() {
        return Optional.ofNullable(this.mirrorCapacity);
    }
    /**
     * @return Status summary of all repos
     * 
     */
    public List<GetManagementStationMirrorSyncStatus> mirrorSyncStatuses() {
        return this.mirrorSyncStatuses == null ? List.of() : this.mirrorSyncStatuses;
    }
    /**
     * @return Information for a mirror configuration
     * 
     */
    public List<GetManagementStationMirror> mirrors() {
        return this.mirrors == null ? List.of() : this.mirrors;
    }
    /**
     * @return A decimal number representing the completeness percentage
     * 
     */
    public Optional<Integer> overallPercentage() {
        return Optional.ofNullable(this.overallPercentage);
    }
    /**
     * @return Current state of the mirroring
     * 
     */
    public Optional<String> overallState() {
        return Optional.ofNullable(this.overallState);
    }
    /**
     * @return OCID of the Profile associated with the Station
     * 
     */
    public Optional<String> profileId() {
        return Optional.ofNullable(this.profileId);
    }
    /**
     * @return Information for a proxy configuration
     * 
     */
    public List<GetManagementStationProxy> proxies() {
        return this.proxies == null ? List.of() : this.proxies;
    }
    /**
     * @return OCID of the Scheduled Job for mirror sync
     * 
     */
    public Optional<String> scheduledJobId() {
        return Optional.ofNullable(this.scheduledJobId);
    }
    /**
     * @return The current state of the Management Station config.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return A decimal number representing the total of repos
     * 
     */
    public Optional<Integer> totalMirrors() {
        return Optional.ofNullable(this.totalMirrors);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementStationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String hostname;
        private @Nullable String id;
        private @Nullable String managedInstanceId;
        private String managementStationId;
        private @Nullable Integer mirrorCapacity;
        private @Nullable List<GetManagementStationMirrorSyncStatus> mirrorSyncStatuses;
        private @Nullable List<GetManagementStationMirror> mirrors;
        private @Nullable Integer overallPercentage;
        private @Nullable String overallState;
        private @Nullable String profileId;
        private @Nullable List<GetManagementStationProxy> proxies;
        private @Nullable String scheduledJobId;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable Integer totalMirrors;
        public Builder() {}
        public Builder(GetManagementStationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.managementStationId = defaults.managementStationId;
    	      this.mirrorCapacity = defaults.mirrorCapacity;
    	      this.mirrorSyncStatuses = defaults.mirrorSyncStatuses;
    	      this.mirrors = defaults.mirrors;
    	      this.overallPercentage = defaults.overallPercentage;
    	      this.overallState = defaults.overallState;
    	      this.profileId = defaults.profileId;
    	      this.proxies = defaults.proxies;
    	      this.scheduledJobId = defaults.scheduledJobId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.totalMirrors = defaults.totalMirrors;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(@Nullable String managedInstanceId) {
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder managementStationId(String managementStationId) {
            this.managementStationId = Objects.requireNonNull(managementStationId);
            return this;
        }
        @CustomType.Setter
        public Builder mirrorCapacity(@Nullable Integer mirrorCapacity) {
            this.mirrorCapacity = mirrorCapacity;
            return this;
        }
        @CustomType.Setter
        public Builder mirrorSyncStatuses(@Nullable List<GetManagementStationMirrorSyncStatus> mirrorSyncStatuses) {
            this.mirrorSyncStatuses = mirrorSyncStatuses;
            return this;
        }
        public Builder mirrorSyncStatuses(GetManagementStationMirrorSyncStatus... mirrorSyncStatuses) {
            return mirrorSyncStatuses(List.of(mirrorSyncStatuses));
        }
        @CustomType.Setter
        public Builder mirrors(@Nullable List<GetManagementStationMirror> mirrors) {
            this.mirrors = mirrors;
            return this;
        }
        public Builder mirrors(GetManagementStationMirror... mirrors) {
            return mirrors(List.of(mirrors));
        }
        @CustomType.Setter
        public Builder overallPercentage(@Nullable Integer overallPercentage) {
            this.overallPercentage = overallPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder overallState(@Nullable String overallState) {
            this.overallState = overallState;
            return this;
        }
        @CustomType.Setter
        public Builder profileId(@Nullable String profileId) {
            this.profileId = profileId;
            return this;
        }
        @CustomType.Setter
        public Builder proxies(@Nullable List<GetManagementStationProxy> proxies) {
            this.proxies = proxies;
            return this;
        }
        public Builder proxies(GetManagementStationProxy... proxies) {
            return proxies(List.of(proxies));
        }
        @CustomType.Setter
        public Builder scheduledJobId(@Nullable String scheduledJobId) {
            this.scheduledJobId = scheduledJobId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder totalMirrors(@Nullable Integer totalMirrors) {
            this.totalMirrors = totalMirrors;
            return this;
        }
        public GetManagementStationResult build() {
            final var o = new GetManagementStationResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.hostname = hostname;
            o.id = id;
            o.managedInstanceId = managedInstanceId;
            o.managementStationId = managementStationId;
            o.mirrorCapacity = mirrorCapacity;
            o.mirrorSyncStatuses = mirrorSyncStatuses;
            o.mirrors = mirrors;
            o.overallPercentage = overallPercentage;
            o.overallState = overallState;
            o.profileId = profileId;
            o.proxies = proxies;
            o.scheduledJobId = scheduledJobId;
            o.state = state;
            o.systemTags = systemTags;
            o.totalMirrors = totalMirrors;
            return o;
        }
    }
}
