// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagementHub.outputs.GetManagementStationsManagementStationCollectionItemMirror;
import com.pulumi.oci.OsManagementHub.outputs.GetManagementStationsManagementStationCollectionItemMirrorSyncStatus;
import com.pulumi.oci.OsManagementHub.outputs.GetManagementStationsManagementStationCollectionItemProxy;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetManagementStationsManagementStationCollectionItem {
    /**
     * @return The OCID of the compartment that contains the resources to list.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Details describing the ManagementStation config.
     * 
     */
    private String description;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Example: `My new resource`
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Name of the host
     * 
     */
    private String hostname;
    /**
     * @return The OCID of the management station.
     * 
     */
    private String id;
    /**
     * @return The OCID of the managed instance for which to list resources.
     * 
     */
    private String managedInstanceId;
    /**
     * @return A decimal number representing the mirror capacity
     * 
     */
    private Integer mirrorCapacity;
    /**
     * @return Status summary of all repos
     * 
     */
    private List<GetManagementStationsManagementStationCollectionItemMirrorSyncStatus> mirrorSyncStatuses;
    /**
     * @return Information for a mirror configuration
     * 
     */
    private List<GetManagementStationsManagementStationCollectionItemMirror> mirrors;
    /**
     * @return A decimal number representing the completeness percentage
     * 
     */
    private Integer overallPercentage;
    /**
     * @return Current state of the mirroring
     * 
     */
    private String overallState;
    /**
     * @return OCID of the Profile associated with the Station
     * 
     */
    private String profileId;
    /**
     * @return Information for a proxy configuration
     * 
     */
    private List<GetManagementStationsManagementStationCollectionItemProxy> proxies;
    /**
     * @return OCID of the Scheduled Job for mirror sync
     * 
     */
    private String scheduledJobId;
    /**
     * @return The current lifecycle state for the object.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return A decimal number representing the total of repos
     * 
     */
    private Integer totalMirrors;

    private GetManagementStationsManagementStationCollectionItem() {}
    /**
     * @return The OCID of the compartment that contains the resources to list.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Details describing the ManagementStation config.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Example: `My new resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Name of the host
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The OCID of the management station.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the managed instance for which to list resources.
     * 
     */
    public String managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * @return A decimal number representing the mirror capacity
     * 
     */
    public Integer mirrorCapacity() {
        return this.mirrorCapacity;
    }
    /**
     * @return Status summary of all repos
     * 
     */
    public List<GetManagementStationsManagementStationCollectionItemMirrorSyncStatus> mirrorSyncStatuses() {
        return this.mirrorSyncStatuses;
    }
    /**
     * @return Information for a mirror configuration
     * 
     */
    public List<GetManagementStationsManagementStationCollectionItemMirror> mirrors() {
        return this.mirrors;
    }
    /**
     * @return A decimal number representing the completeness percentage
     * 
     */
    public Integer overallPercentage() {
        return this.overallPercentage;
    }
    /**
     * @return Current state of the mirroring
     * 
     */
    public String overallState() {
        return this.overallState;
    }
    /**
     * @return OCID of the Profile associated with the Station
     * 
     */
    public String profileId() {
        return this.profileId;
    }
    /**
     * @return Information for a proxy configuration
     * 
     */
    public List<GetManagementStationsManagementStationCollectionItemProxy> proxies() {
        return this.proxies;
    }
    /**
     * @return OCID of the Scheduled Job for mirror sync
     * 
     */
    public String scheduledJobId() {
        return this.scheduledJobId;
    }
    /**
     * @return The current lifecycle state for the object.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return A decimal number representing the total of repos
     * 
     */
    public Integer totalMirrors() {
        return this.totalMirrors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementStationsManagementStationCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String hostname;
        private String id;
        private String managedInstanceId;
        private Integer mirrorCapacity;
        private List<GetManagementStationsManagementStationCollectionItemMirrorSyncStatus> mirrorSyncStatuses;
        private List<GetManagementStationsManagementStationCollectionItemMirror> mirrors;
        private Integer overallPercentage;
        private String overallState;
        private String profileId;
        private List<GetManagementStationsManagementStationCollectionItemProxy> proxies;
        private String scheduledJobId;
        private String state;
        private Map<String,Object> systemTags;
        private Integer totalMirrors;
        public Builder() {}
        public Builder(GetManagementStationsManagementStationCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.mirrorCapacity = defaults.mirrorCapacity;
    	      this.mirrorSyncStatuses = defaults.mirrorSyncStatuses;
    	      this.mirrors = defaults.mirrors;
    	      this.overallPercentage = defaults.overallPercentage;
    	      this.overallState = defaults.overallState;
    	      this.profileId = defaults.profileId;
    	      this.proxies = defaults.proxies;
    	      this.scheduledJobId = defaults.scheduledJobId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.totalMirrors = defaults.totalMirrors;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            this.managedInstanceId = Objects.requireNonNull(managedInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder mirrorCapacity(Integer mirrorCapacity) {
            this.mirrorCapacity = Objects.requireNonNull(mirrorCapacity);
            return this;
        }
        @CustomType.Setter
        public Builder mirrorSyncStatuses(List<GetManagementStationsManagementStationCollectionItemMirrorSyncStatus> mirrorSyncStatuses) {
            this.mirrorSyncStatuses = Objects.requireNonNull(mirrorSyncStatuses);
            return this;
        }
        public Builder mirrorSyncStatuses(GetManagementStationsManagementStationCollectionItemMirrorSyncStatus... mirrorSyncStatuses) {
            return mirrorSyncStatuses(List.of(mirrorSyncStatuses));
        }
        @CustomType.Setter
        public Builder mirrors(List<GetManagementStationsManagementStationCollectionItemMirror> mirrors) {
            this.mirrors = Objects.requireNonNull(mirrors);
            return this;
        }
        public Builder mirrors(GetManagementStationsManagementStationCollectionItemMirror... mirrors) {
            return mirrors(List.of(mirrors));
        }
        @CustomType.Setter
        public Builder overallPercentage(Integer overallPercentage) {
            this.overallPercentage = Objects.requireNonNull(overallPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder overallState(String overallState) {
            this.overallState = Objects.requireNonNull(overallState);
            return this;
        }
        @CustomType.Setter
        public Builder profileId(String profileId) {
            this.profileId = Objects.requireNonNull(profileId);
            return this;
        }
        @CustomType.Setter
        public Builder proxies(List<GetManagementStationsManagementStationCollectionItemProxy> proxies) {
            this.proxies = Objects.requireNonNull(proxies);
            return this;
        }
        public Builder proxies(GetManagementStationsManagementStationCollectionItemProxy... proxies) {
            return proxies(List.of(proxies));
        }
        @CustomType.Setter
        public Builder scheduledJobId(String scheduledJobId) {
            this.scheduledJobId = Objects.requireNonNull(scheduledJobId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder totalMirrors(Integer totalMirrors) {
            this.totalMirrors = Objects.requireNonNull(totalMirrors);
            return this;
        }
        public GetManagementStationsManagementStationCollectionItem build() {
            final var o = new GetManagementStationsManagementStationCollectionItem();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.hostname = hostname;
            o.id = id;
            o.managedInstanceId = managedInstanceId;
            o.mirrorCapacity = mirrorCapacity;
            o.mirrorSyncStatuses = mirrorSyncStatuses;
            o.mirrors = mirrors;
            o.overallPercentage = overallPercentage;
            o.overallState = overallState;
            o.profileId = profileId;
            o.proxies = proxies;
            o.scheduledJobId = scheduledJobId;
            o.state = state;
            o.systemTags = systemTags;
            o.totalMirrors = totalMirrors;
            return o;
        }
    }
}
