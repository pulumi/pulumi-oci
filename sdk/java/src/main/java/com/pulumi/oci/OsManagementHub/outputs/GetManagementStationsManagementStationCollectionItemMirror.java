// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagementStationsManagementStationCollectionItemMirror {
    /**
     * @return Directory for the mirroring
     * 
     */
    private String directory;
    /**
     * @return Port that the proxy will use
     * 
     */
    private String port;
    /**
     * @return Local path for the sslcert
     * 
     */
    private String sslcert;
    /**
     * @return Default sslport for the mirror
     * 
     */
    private String sslport;

    private GetManagementStationsManagementStationCollectionItemMirror() {}
    /**
     * @return Directory for the mirroring
     * 
     */
    public String directory() {
        return this.directory;
    }
    /**
     * @return Port that the proxy will use
     * 
     */
    public String port() {
        return this.port;
    }
    /**
     * @return Local path for the sslcert
     * 
     */
    public String sslcert() {
        return this.sslcert;
    }
    /**
     * @return Default sslport for the mirror
     * 
     */
    public String sslport() {
        return this.sslport;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementStationsManagementStationCollectionItemMirror defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String directory;
        private String port;
        private String sslcert;
        private String sslport;
        public Builder() {}
        public Builder(GetManagementStationsManagementStationCollectionItemMirror defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.directory = defaults.directory;
    	      this.port = defaults.port;
    	      this.sslcert = defaults.sslcert;
    	      this.sslport = defaults.sslport;
        }

        @CustomType.Setter
        public Builder directory(String directory) {
            if (directory == null) {
              throw new MissingRequiredPropertyException("GetManagementStationsManagementStationCollectionItemMirror", "directory");
            }
            this.directory = directory;
            return this;
        }
        @CustomType.Setter
        public Builder port(String port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetManagementStationsManagementStationCollectionItemMirror", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder sslcert(String sslcert) {
            if (sslcert == null) {
              throw new MissingRequiredPropertyException("GetManagementStationsManagementStationCollectionItemMirror", "sslcert");
            }
            this.sslcert = sslcert;
            return this;
        }
        @CustomType.Setter
        public Builder sslport(String sslport) {
            if (sslport == null) {
              throw new MissingRequiredPropertyException("GetManagementStationsManagementStationCollectionItemMirror", "sslport");
            }
            this.sslport = sslport;
            return this;
        }
        public GetManagementStationsManagementStationCollectionItemMirror build() {
            final var _resultValue = new GetManagementStationsManagementStationCollectionItemMirror();
            _resultValue.directory = directory;
            _resultValue.port = port;
            _resultValue.sslcert = sslcert;
            _resultValue.sslport = sslport;
            return _resultValue;
        }
    }
}
