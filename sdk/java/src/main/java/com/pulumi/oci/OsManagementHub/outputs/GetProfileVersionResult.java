// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.outputs.GetProfileVersionLifecycleEnvironment;
import com.pulumi.oci.OsManagementHub.outputs.GetProfileVersionLifecycleStage;
import com.pulumi.oci.OsManagementHub.outputs.GetProfileVersionManagedInstanceGroup;
import com.pulumi.oci.OsManagementHub.outputs.GetProfileVersionSoftwareSource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProfileVersionResult {
    /**
     * @return The architecture type.
     * 
     */
    private String archType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the registration profile.
     * 
     */
    private String compartmentId;
    /**
     * @return Software source description.
     * 
     */
    private String description;
    /**
     * @return Software source name.
     * 
     */
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Indicates if the profile is set as the default. There is exactly one default profile for a specified architecture, OS family, registration type, and vendor. When registering an instance with the corresonding characteristics, the default profile is used, unless another profile is specified.
     * 
     */
    private Boolean isDefaultProfile;
    /**
     * @return Indicates if the profile was created by the service. OS Management Hub provides a limited set of standardized profiles that can be used to register Autonomous Linux or Windows instances.
     * 
     */
    private Boolean isServiceProvidedProfile;
    /**
     * @return Provides identifying information for the specified lifecycle environment.
     * 
     */
    private List<GetProfileVersionLifecycleEnvironment> lifecycleEnvironments;
    /**
     * @return Provides identifying information for the specified lifecycle stage.
     * 
     */
    private List<GetProfileVersionLifecycleStage> lifecycleStages;
    /**
     * @return Provides identifying information for the specified managed instance group.
     * 
     */
    private List<GetProfileVersionManagedInstanceGroup> managedInstanceGroups;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station to associate with an  instance once registered. Management stations are only used with non-OCI instances.
     * 
     */
    private String managementStationId;
    /**
     * @return The operating system family.
     * 
     */
    private String osFamily;
    private String profileId;
    /**
     * @return The type of profile.
     * 
     */
    private String profileType;
    /**
     * @return The version of the profile.
     * 
     */
    private String profileVersion;
    /**
     * @return The type of instance to register.
     * 
     */
    private String registrationType;
    /**
     * @return The list of software sources that the registration profile will use.
     * 
     */
    private List<GetProfileVersionSoftwareSource> softwareSources;
    /**
     * @return The current state of the registration profile.
     * 
     */
    private String state;
    /**
     * @return The time the registration profile was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    private String timeCreated;
    /**
     * @return The time the registration profile was last modified (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    private String timeModified;
    /**
     * @return The vendor of the operating system for the instance.
     * 
     */
    private String vendorName;

    private GetProfileVersionResult() {}
    /**
     * @return The architecture type.
     * 
     */
    public String archType() {
        return this.archType;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the registration profile.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Software source description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Software source name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if the profile is set as the default. There is exactly one default profile for a specified architecture, OS family, registration type, and vendor. When registering an instance with the corresonding characteristics, the default profile is used, unless another profile is specified.
     * 
     */
    public Boolean isDefaultProfile() {
        return this.isDefaultProfile;
    }
    /**
     * @return Indicates if the profile was created by the service. OS Management Hub provides a limited set of standardized profiles that can be used to register Autonomous Linux or Windows instances.
     * 
     */
    public Boolean isServiceProvidedProfile() {
        return this.isServiceProvidedProfile;
    }
    /**
     * @return Provides identifying information for the specified lifecycle environment.
     * 
     */
    public List<GetProfileVersionLifecycleEnvironment> lifecycleEnvironments() {
        return this.lifecycleEnvironments;
    }
    /**
     * @return Provides identifying information for the specified lifecycle stage.
     * 
     */
    public List<GetProfileVersionLifecycleStage> lifecycleStages() {
        return this.lifecycleStages;
    }
    /**
     * @return Provides identifying information for the specified managed instance group.
     * 
     */
    public List<GetProfileVersionManagedInstanceGroup> managedInstanceGroups() {
        return this.managedInstanceGroups;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station to associate with an  instance once registered. Management stations are only used with non-OCI instances.
     * 
     */
    public String managementStationId() {
        return this.managementStationId;
    }
    /**
     * @return The operating system family.
     * 
     */
    public String osFamily() {
        return this.osFamily;
    }
    public String profileId() {
        return this.profileId;
    }
    /**
     * @return The type of profile.
     * 
     */
    public String profileType() {
        return this.profileType;
    }
    /**
     * @return The version of the profile.
     * 
     */
    public String profileVersion() {
        return this.profileVersion;
    }
    /**
     * @return The type of instance to register.
     * 
     */
    public String registrationType() {
        return this.registrationType;
    }
    /**
     * @return The list of software sources that the registration profile will use.
     * 
     */
    public List<GetProfileVersionSoftwareSource> softwareSources() {
        return this.softwareSources;
    }
    /**
     * @return The current state of the registration profile.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time the registration profile was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the registration profile was last modified (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public String timeModified() {
        return this.timeModified;
    }
    /**
     * @return The vendor of the operating system for the instance.
     * 
     */
    public String vendorName() {
        return this.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfileVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String archType;
        private String compartmentId;
        private String description;
        private String displayName;
        private String id;
        private Boolean isDefaultProfile;
        private Boolean isServiceProvidedProfile;
        private List<GetProfileVersionLifecycleEnvironment> lifecycleEnvironments;
        private List<GetProfileVersionLifecycleStage> lifecycleStages;
        private List<GetProfileVersionManagedInstanceGroup> managedInstanceGroups;
        private String managementStationId;
        private String osFamily;
        private String profileId;
        private String profileType;
        private String profileVersion;
        private String registrationType;
        private List<GetProfileVersionSoftwareSource> softwareSources;
        private String state;
        private String timeCreated;
        private String timeModified;
        private String vendorName;
        public Builder() {}
        public Builder(GetProfileVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archType = defaults.archType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.isDefaultProfile = defaults.isDefaultProfile;
    	      this.isServiceProvidedProfile = defaults.isServiceProvidedProfile;
    	      this.lifecycleEnvironments = defaults.lifecycleEnvironments;
    	      this.lifecycleStages = defaults.lifecycleStages;
    	      this.managedInstanceGroups = defaults.managedInstanceGroups;
    	      this.managementStationId = defaults.managementStationId;
    	      this.osFamily = defaults.osFamily;
    	      this.profileId = defaults.profileId;
    	      this.profileType = defaults.profileType;
    	      this.profileVersion = defaults.profileVersion;
    	      this.registrationType = defaults.registrationType;
    	      this.softwareSources = defaults.softwareSources;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeModified = defaults.timeModified;
    	      this.vendorName = defaults.vendorName;
        }

        @CustomType.Setter
        public Builder archType(String archType) {
            if (archType == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "archType");
            }
            this.archType = archType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDefaultProfile(Boolean isDefaultProfile) {
            if (isDefaultProfile == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "isDefaultProfile");
            }
            this.isDefaultProfile = isDefaultProfile;
            return this;
        }
        @CustomType.Setter
        public Builder isServiceProvidedProfile(Boolean isServiceProvidedProfile) {
            if (isServiceProvidedProfile == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "isServiceProvidedProfile");
            }
            this.isServiceProvidedProfile = isServiceProvidedProfile;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleEnvironments(List<GetProfileVersionLifecycleEnvironment> lifecycleEnvironments) {
            if (lifecycleEnvironments == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "lifecycleEnvironments");
            }
            this.lifecycleEnvironments = lifecycleEnvironments;
            return this;
        }
        public Builder lifecycleEnvironments(GetProfileVersionLifecycleEnvironment... lifecycleEnvironments) {
            return lifecycleEnvironments(List.of(lifecycleEnvironments));
        }
        @CustomType.Setter
        public Builder lifecycleStages(List<GetProfileVersionLifecycleStage> lifecycleStages) {
            if (lifecycleStages == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "lifecycleStages");
            }
            this.lifecycleStages = lifecycleStages;
            return this;
        }
        public Builder lifecycleStages(GetProfileVersionLifecycleStage... lifecycleStages) {
            return lifecycleStages(List.of(lifecycleStages));
        }
        @CustomType.Setter
        public Builder managedInstanceGroups(List<GetProfileVersionManagedInstanceGroup> managedInstanceGroups) {
            if (managedInstanceGroups == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "managedInstanceGroups");
            }
            this.managedInstanceGroups = managedInstanceGroups;
            return this;
        }
        public Builder managedInstanceGroups(GetProfileVersionManagedInstanceGroup... managedInstanceGroups) {
            return managedInstanceGroups(List.of(managedInstanceGroups));
        }
        @CustomType.Setter
        public Builder managementStationId(String managementStationId) {
            if (managementStationId == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "managementStationId");
            }
            this.managementStationId = managementStationId;
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(String osFamily) {
            if (osFamily == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "osFamily");
            }
            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder profileId(String profileId) {
            if (profileId == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "profileId");
            }
            this.profileId = profileId;
            return this;
        }
        @CustomType.Setter
        public Builder profileType(String profileType) {
            if (profileType == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "profileType");
            }
            this.profileType = profileType;
            return this;
        }
        @CustomType.Setter
        public Builder profileVersion(String profileVersion) {
            if (profileVersion == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "profileVersion");
            }
            this.profileVersion = profileVersion;
            return this;
        }
        @CustomType.Setter
        public Builder registrationType(String registrationType) {
            if (registrationType == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "registrationType");
            }
            this.registrationType = registrationType;
            return this;
        }
        @CustomType.Setter
        public Builder softwareSources(List<GetProfileVersionSoftwareSource> softwareSources) {
            if (softwareSources == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "softwareSources");
            }
            this.softwareSources = softwareSources;
            return this;
        }
        public Builder softwareSources(GetProfileVersionSoftwareSource... softwareSources) {
            return softwareSources(List.of(softwareSources));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeModified(String timeModified) {
            if (timeModified == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "timeModified");
            }
            this.timeModified = timeModified;
            return this;
        }
        @CustomType.Setter
        public Builder vendorName(String vendorName) {
            if (vendorName == null) {
              throw new MissingRequiredPropertyException("GetProfileVersionResult", "vendorName");
            }
            this.vendorName = vendorName;
            return this;
        }
        public GetProfileVersionResult build() {
            final var _resultValue = new GetProfileVersionResult();
            _resultValue.archType = archType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.isDefaultProfile = isDefaultProfile;
            _resultValue.isServiceProvidedProfile = isServiceProvidedProfile;
            _resultValue.lifecycleEnvironments = lifecycleEnvironments;
            _resultValue.lifecycleStages = lifecycleStages;
            _resultValue.managedInstanceGroups = managedInstanceGroups;
            _resultValue.managementStationId = managementStationId;
            _resultValue.osFamily = osFamily;
            _resultValue.profileId = profileId;
            _resultValue.profileType = profileType;
            _resultValue.profileVersion = profileVersion;
            _resultValue.registrationType = registrationType;
            _resultValue.softwareSources = softwareSources;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeModified = timeModified;
            _resultValue.vendorName = vendorName;
            return _resultValue;
        }
    }
}
