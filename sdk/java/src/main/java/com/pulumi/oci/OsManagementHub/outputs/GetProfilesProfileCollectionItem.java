// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsManagementHub.outputs.GetProfilesProfileCollectionItemLifecycleEnvironment;
import com.pulumi.oci.OsManagementHub.outputs.GetProfilesProfileCollectionItemLifecycleStage;
import com.pulumi.oci.OsManagementHub.outputs.GetProfilesProfileCollectionItemManagedInstanceGroup;
import com.pulumi.oci.OsManagementHub.outputs.GetProfilesProfileCollectionItemSoftwareSource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetProfilesProfileCollectionItem {
    /**
     * @return A filter to return only profiles that match the given archType.
     * 
     */
    private String archType;
    /**
     * @return (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Software source description.
     * 
     */
    private String description;
    /**
     * @return A filter to return resources that match the given display names.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    private String id;
    /**
     * @return A boolean variable that is used to list only the default profile resources.
     * 
     */
    private Boolean isDefaultProfile;
    /**
     * @return A filter to return only service-provided profiles.
     * 
     */
    private Boolean isServiceProvidedProfile;
    /**
     * @return Provides identifying information for the specified lifecycle environment.
     * 
     */
    private List<GetProfilesProfileCollectionItemLifecycleEnvironment> lifecycleEnvironments;
    private String lifecycleStageId;
    /**
     * @return Provides identifying information for the specified lifecycle stage.
     * 
     */
    private List<GetProfilesProfileCollectionItemLifecycleStage> lifecycleStages;
    private String managedInstanceGroupId;
    /**
     * @return Provides identifying information for the specified managed instance group.
     * 
     */
    private List<GetProfilesProfileCollectionItemManagedInstanceGroup> managedInstanceGroups;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station to associate with an instance once registered. Associating with a management station applies only to non-OCI instances.
     * 
     */
    private String managementStationId;
    /**
     * @return A filter to return only resources that match the given operating system family.
     * 
     */
    private String osFamily;
    /**
     * @return A filter to return registration profiles that match the given profile type.
     * 
     */
    private String profileType;
    /**
     * @return A filter to return profiles that match the given instance type.
     * 
     */
    private String registrationType;
    private List<String> softwareSourceIds;
    /**
     * @return The list of software sources that the registration profile will use.
     * 
     */
    private List<GetProfilesProfileCollectionItemSoftwareSource> softwareSources;
    /**
     * @return A filter to return only registration profiles in the given state.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the registration profile was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    private String timeCreated;
    /**
     * @return A filter to return only resources that match the given vendor name.
     * 
     */
    private String vendorName;

    private GetProfilesProfileCollectionItem() {}
    /**
     * @return A filter to return only profiles that match the given archType.
     * 
     */
    public String archType() {
        return this.archType;
    }
    /**
     * @return (Updatable) The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Software source description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return resources that match the given display names.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A boolean variable that is used to list only the default profile resources.
     * 
     */
    public Boolean isDefaultProfile() {
        return this.isDefaultProfile;
    }
    /**
     * @return A filter to return only service-provided profiles.
     * 
     */
    public Boolean isServiceProvidedProfile() {
        return this.isServiceProvidedProfile;
    }
    /**
     * @return Provides identifying information for the specified lifecycle environment.
     * 
     */
    public List<GetProfilesProfileCollectionItemLifecycleEnvironment> lifecycleEnvironments() {
        return this.lifecycleEnvironments;
    }
    public String lifecycleStageId() {
        return this.lifecycleStageId;
    }
    /**
     * @return Provides identifying information for the specified lifecycle stage.
     * 
     */
    public List<GetProfilesProfileCollectionItemLifecycleStage> lifecycleStages() {
        return this.lifecycleStages;
    }
    public String managedInstanceGroupId() {
        return this.managedInstanceGroupId;
    }
    /**
     * @return Provides identifying information for the specified managed instance group.
     * 
     */
    public List<GetProfilesProfileCollectionItemManagedInstanceGroup> managedInstanceGroups() {
        return this.managedInstanceGroups;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station to associate with an instance once registered. Associating with a management station applies only to non-OCI instances.
     * 
     */
    public String managementStationId() {
        return this.managementStationId;
    }
    /**
     * @return A filter to return only resources that match the given operating system family.
     * 
     */
    public String osFamily() {
        return this.osFamily;
    }
    /**
     * @return A filter to return registration profiles that match the given profile type.
     * 
     */
    public String profileType() {
        return this.profileType;
    }
    /**
     * @return A filter to return profiles that match the given instance type.
     * 
     */
    public String registrationType() {
        return this.registrationType;
    }
    public List<String> softwareSourceIds() {
        return this.softwareSourceIds;
    }
    /**
     * @return The list of software sources that the registration profile will use.
     * 
     */
    public List<GetProfilesProfileCollectionItemSoftwareSource> softwareSources() {
        return this.softwareSources;
    }
    /**
     * @return A filter to return only registration profiles in the given state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the registration profile was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return A filter to return only resources that match the given vendor name.
     * 
     */
    public String vendorName() {
        return this.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfilesProfileCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String archType;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isDefaultProfile;
        private Boolean isServiceProvidedProfile;
        private List<GetProfilesProfileCollectionItemLifecycleEnvironment> lifecycleEnvironments;
        private String lifecycleStageId;
        private List<GetProfilesProfileCollectionItemLifecycleStage> lifecycleStages;
        private String managedInstanceGroupId;
        private List<GetProfilesProfileCollectionItemManagedInstanceGroup> managedInstanceGroups;
        private String managementStationId;
        private String osFamily;
        private String profileType;
        private String registrationType;
        private List<String> softwareSourceIds;
        private List<GetProfilesProfileCollectionItemSoftwareSource> softwareSources;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String vendorName;
        public Builder() {}
        public Builder(GetProfilesProfileCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archType = defaults.archType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isDefaultProfile = defaults.isDefaultProfile;
    	      this.isServiceProvidedProfile = defaults.isServiceProvidedProfile;
    	      this.lifecycleEnvironments = defaults.lifecycleEnvironments;
    	      this.lifecycleStageId = defaults.lifecycleStageId;
    	      this.lifecycleStages = defaults.lifecycleStages;
    	      this.managedInstanceGroupId = defaults.managedInstanceGroupId;
    	      this.managedInstanceGroups = defaults.managedInstanceGroups;
    	      this.managementStationId = defaults.managementStationId;
    	      this.osFamily = defaults.osFamily;
    	      this.profileType = defaults.profileType;
    	      this.registrationType = defaults.registrationType;
    	      this.softwareSourceIds = defaults.softwareSourceIds;
    	      this.softwareSources = defaults.softwareSources;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.vendorName = defaults.vendorName;
        }

        @CustomType.Setter
        public Builder archType(String archType) {
            if (archType == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "archType");
            }
            this.archType = archType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDefaultProfile(Boolean isDefaultProfile) {
            if (isDefaultProfile == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "isDefaultProfile");
            }
            this.isDefaultProfile = isDefaultProfile;
            return this;
        }
        @CustomType.Setter
        public Builder isServiceProvidedProfile(Boolean isServiceProvidedProfile) {
            if (isServiceProvidedProfile == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "isServiceProvidedProfile");
            }
            this.isServiceProvidedProfile = isServiceProvidedProfile;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleEnvironments(List<GetProfilesProfileCollectionItemLifecycleEnvironment> lifecycleEnvironments) {
            if (lifecycleEnvironments == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "lifecycleEnvironments");
            }
            this.lifecycleEnvironments = lifecycleEnvironments;
            return this;
        }
        public Builder lifecycleEnvironments(GetProfilesProfileCollectionItemLifecycleEnvironment... lifecycleEnvironments) {
            return lifecycleEnvironments(List.of(lifecycleEnvironments));
        }
        @CustomType.Setter
        public Builder lifecycleStageId(String lifecycleStageId) {
            if (lifecycleStageId == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "lifecycleStageId");
            }
            this.lifecycleStageId = lifecycleStageId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleStages(List<GetProfilesProfileCollectionItemLifecycleStage> lifecycleStages) {
            if (lifecycleStages == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "lifecycleStages");
            }
            this.lifecycleStages = lifecycleStages;
            return this;
        }
        public Builder lifecycleStages(GetProfilesProfileCollectionItemLifecycleStage... lifecycleStages) {
            return lifecycleStages(List.of(lifecycleStages));
        }
        @CustomType.Setter
        public Builder managedInstanceGroupId(String managedInstanceGroupId) {
            if (managedInstanceGroupId == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "managedInstanceGroupId");
            }
            this.managedInstanceGroupId = managedInstanceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceGroups(List<GetProfilesProfileCollectionItemManagedInstanceGroup> managedInstanceGroups) {
            if (managedInstanceGroups == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "managedInstanceGroups");
            }
            this.managedInstanceGroups = managedInstanceGroups;
            return this;
        }
        public Builder managedInstanceGroups(GetProfilesProfileCollectionItemManagedInstanceGroup... managedInstanceGroups) {
            return managedInstanceGroups(List.of(managedInstanceGroups));
        }
        @CustomType.Setter
        public Builder managementStationId(String managementStationId) {
            if (managementStationId == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "managementStationId");
            }
            this.managementStationId = managementStationId;
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(String osFamily) {
            if (osFamily == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "osFamily");
            }
            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder profileType(String profileType) {
            if (profileType == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "profileType");
            }
            this.profileType = profileType;
            return this;
        }
        @CustomType.Setter
        public Builder registrationType(String registrationType) {
            if (registrationType == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "registrationType");
            }
            this.registrationType = registrationType;
            return this;
        }
        @CustomType.Setter
        public Builder softwareSourceIds(List<String> softwareSourceIds) {
            if (softwareSourceIds == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "softwareSourceIds");
            }
            this.softwareSourceIds = softwareSourceIds;
            return this;
        }
        public Builder softwareSourceIds(String... softwareSourceIds) {
            return softwareSourceIds(List.of(softwareSourceIds));
        }
        @CustomType.Setter
        public Builder softwareSources(List<GetProfilesProfileCollectionItemSoftwareSource> softwareSources) {
            if (softwareSources == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "softwareSources");
            }
            this.softwareSources = softwareSources;
            return this;
        }
        public Builder softwareSources(GetProfilesProfileCollectionItemSoftwareSource... softwareSources) {
            return softwareSources(List.of(softwareSources));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder vendorName(String vendorName) {
            if (vendorName == null) {
              throw new MissingRequiredPropertyException("GetProfilesProfileCollectionItem", "vendorName");
            }
            this.vendorName = vendorName;
            return this;
        }
        public GetProfilesProfileCollectionItem build() {
            final var _resultValue = new GetProfilesProfileCollectionItem();
            _resultValue.archType = archType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isDefaultProfile = isDefaultProfile;
            _resultValue.isServiceProvidedProfile = isServiceProvidedProfile;
            _resultValue.lifecycleEnvironments = lifecycleEnvironments;
            _resultValue.lifecycleStageId = lifecycleStageId;
            _resultValue.lifecycleStages = lifecycleStages;
            _resultValue.managedInstanceGroupId = managedInstanceGroupId;
            _resultValue.managedInstanceGroups = managedInstanceGroups;
            _resultValue.managementStationId = managementStationId;
            _resultValue.osFamily = osFamily;
            _resultValue.profileType = profileType;
            _resultValue.registrationType = registrationType;
            _resultValue.softwareSourceIds = softwareSourceIds;
            _resultValue.softwareSources = softwareSources;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.vendorName = vendorName;
            return _resultValue;
        }
    }
}
