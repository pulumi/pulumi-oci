// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagementHub.outputs.GetProfilesFilter;
import com.pulumi.oci.OsManagementHub.outputs.GetProfilesProfileCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProfilesResult {
    /**
     * @return The architecture type.
     * 
     */
    private @Nullable String archType;
    /**
     * @return The OCID of the tenancy containing the registration profile.
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable String displayNameContains;
    /**
     * @return Software source name.
     * 
     */
    private @Nullable List<String> displayNames;
    private @Nullable List<GetProfilesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The operating system family.
     * 
     */
    private @Nullable String osFamily;
    /**
     * @return The list of profile_collection.
     * 
     */
    private List<GetProfilesProfileCollection> profileCollections;
    private @Nullable String profileId;
    /**
     * @return The type of Profile. One of SOFTWARESOURCE, GROUP or LIFECYCLE.
     * 
     */
    private @Nullable List<String> profileTypes;
    /**
     * @return The current state of the registration profile.
     * 
     */
    private @Nullable String state;
    /**
     * @return The software source vendor name.
     * 
     */
    private @Nullable String vendorName;

    private GetProfilesResult() {}
    /**
     * @return The architecture type.
     * 
     */
    public Optional<String> archType() {
        return Optional.ofNullable(this.archType);
    }
    /**
     * @return The OCID of the tenancy containing the registration profile.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }
    /**
     * @return Software source name.
     * 
     */
    public List<String> displayNames() {
        return this.displayNames == null ? List.of() : this.displayNames;
    }
    public List<GetProfilesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The operating system family.
     * 
     */
    public Optional<String> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }
    /**
     * @return The list of profile_collection.
     * 
     */
    public List<GetProfilesProfileCollection> profileCollections() {
        return this.profileCollections;
    }
    public Optional<String> profileId() {
        return Optional.ofNullable(this.profileId);
    }
    /**
     * @return The type of Profile. One of SOFTWARESOURCE, GROUP or LIFECYCLE.
     * 
     */
    public List<String> profileTypes() {
        return this.profileTypes == null ? List.of() : this.profileTypes;
    }
    /**
     * @return The current state of the registration profile.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The software source vendor name.
     * 
     */
    public Optional<String> vendorName() {
        return Optional.ofNullable(this.vendorName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfilesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String archType;
        private @Nullable String compartmentId;
        private @Nullable String displayNameContains;
        private @Nullable List<String> displayNames;
        private @Nullable List<GetProfilesFilter> filters;
        private String id;
        private @Nullable String osFamily;
        private List<GetProfilesProfileCollection> profileCollections;
        private @Nullable String profileId;
        private @Nullable List<String> profileTypes;
        private @Nullable String state;
        private @Nullable String vendorName;
        public Builder() {}
        public Builder(GetProfilesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archType = defaults.archType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayNameContains = defaults.displayNameContains;
    	      this.displayNames = defaults.displayNames;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.osFamily = defaults.osFamily;
    	      this.profileCollections = defaults.profileCollections;
    	      this.profileId = defaults.profileId;
    	      this.profileTypes = defaults.profileTypes;
    	      this.state = defaults.state;
    	      this.vendorName = defaults.vendorName;
        }

        @CustomType.Setter
        public Builder archType(@Nullable String archType) {
            this.archType = archType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayNameContains(@Nullable String displayNameContains) {
            this.displayNameContains = displayNameContains;
            return this;
        }
        @CustomType.Setter
        public Builder displayNames(@Nullable List<String> displayNames) {
            this.displayNames = displayNames;
            return this;
        }
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetProfilesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetProfilesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(@Nullable String osFamily) {
            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder profileCollections(List<GetProfilesProfileCollection> profileCollections) {
            this.profileCollections = Objects.requireNonNull(profileCollections);
            return this;
        }
        public Builder profileCollections(GetProfilesProfileCollection... profileCollections) {
            return profileCollections(List.of(profileCollections));
        }
        @CustomType.Setter
        public Builder profileId(@Nullable String profileId) {
            this.profileId = profileId;
            return this;
        }
        @CustomType.Setter
        public Builder profileTypes(@Nullable List<String> profileTypes) {
            this.profileTypes = profileTypes;
            return this;
        }
        public Builder profileTypes(String... profileTypes) {
            return profileTypes(List.of(profileTypes));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vendorName(@Nullable String vendorName) {
            this.vendorName = vendorName;
            return this;
        }
        public GetProfilesResult build() {
            final var _resultValue = new GetProfilesResult();
            _resultValue.archType = archType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayNameContains = displayNameContains;
            _resultValue.displayNames = displayNames;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.osFamily = osFamily;
            _resultValue.profileCollections = profileCollections;
            _resultValue.profileId = profileId;
            _resultValue.profileTypes = profileTypes;
            _resultValue.state = state;
            _resultValue.vendorName = vendorName;
            return _resultValue;
        }
    }
}
