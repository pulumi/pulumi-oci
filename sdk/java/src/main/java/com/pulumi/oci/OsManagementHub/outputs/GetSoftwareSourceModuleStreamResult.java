// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSoftwareSourceModuleStreamResult {
    /**
     * @return The architecture for which the packages in this module stream were built.
     * 
     */
    private @Nullable String archType;
    /**
     * @return A description of the contents of the module stream.
     * 
     */
    private @Nullable String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates if this stream is the default for its module.
     * 
     */
    private @Nullable Boolean isDefault;
    /**
     * @return Indicates whether this module stream is the latest.
     * 
     */
    private @Nullable Boolean isLatest;
    /**
     * @return The name of the module that contains the stream.
     * 
     */
    private String moduleName;
    /**
     * @return The name of the stream.
     * 
     */
    private @Nullable String name;
    /**
     * @return A list of packages that are contained by the stream.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
     * 
     */
    private @Nullable List<String> packages;
    /**
     * @return A list of profiles that are part of the stream.  Each element in the list is the name of a profile.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with module stream profiles.  However, it is not URL encoded.
     * 
     */
    private @Nullable List<String> profiles;
    /**
     * @return The OCID of the software source that provides this module stream.
     * 
     */
    private String softwareSourceId;
    private String streamName;

    private GetSoftwareSourceModuleStreamResult() {}
    /**
     * @return The architecture for which the packages in this module stream were built.
     * 
     */
    public Optional<String> archType() {
        return Optional.ofNullable(this.archType);
    }
    /**
     * @return A description of the contents of the module stream.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates if this stream is the default for its module.
     * 
     */
    public Optional<Boolean> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    /**
     * @return Indicates whether this module stream is the latest.
     * 
     */
    public Optional<Boolean> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }
    /**
     * @return The name of the module that contains the stream.
     * 
     */
    public String moduleName() {
        return this.moduleName;
    }
    /**
     * @return The name of the stream.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return A list of packages that are contained by the stream.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
     * 
     */
    public List<String> packages() {
        return this.packages == null ? List.of() : this.packages;
    }
    /**
     * @return A list of profiles that are part of the stream.  Each element in the list is the name of a profile.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with module stream profiles.  However, it is not URL encoded.
     * 
     */
    public List<String> profiles() {
        return this.profiles == null ? List.of() : this.profiles;
    }
    /**
     * @return The OCID of the software source that provides this module stream.
     * 
     */
    public String softwareSourceId() {
        return this.softwareSourceId;
    }
    public String streamName() {
        return this.streamName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoftwareSourceModuleStreamResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String archType;
        private @Nullable String description;
        private @Nullable String id;
        private @Nullable Boolean isDefault;
        private @Nullable Boolean isLatest;
        private String moduleName;
        private @Nullable String name;
        private @Nullable List<String> packages;
        private @Nullable List<String> profiles;
        private String softwareSourceId;
        private String streamName;
        public Builder() {}
        public Builder(GetSoftwareSourceModuleStreamResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archType = defaults.archType;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.isDefault = defaults.isDefault;
    	      this.isLatest = defaults.isLatest;
    	      this.moduleName = defaults.moduleName;
    	      this.name = defaults.name;
    	      this.packages = defaults.packages;
    	      this.profiles = defaults.profiles;
    	      this.softwareSourceId = defaults.softwareSourceId;
    	      this.streamName = defaults.streamName;
        }

        @CustomType.Setter
        public Builder archType(@Nullable String archType) {
            this.archType = archType;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(@Nullable Boolean isDefault) {
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder isLatest(@Nullable Boolean isLatest) {
            this.isLatest = isLatest;
            return this;
        }
        @CustomType.Setter
        public Builder moduleName(String moduleName) {
            this.moduleName = Objects.requireNonNull(moduleName);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder packages(@Nullable List<String> packages) {
            this.packages = packages;
            return this;
        }
        public Builder packages(String... packages) {
            return packages(List.of(packages));
        }
        @CustomType.Setter
        public Builder profiles(@Nullable List<String> profiles) {
            this.profiles = profiles;
            return this;
        }
        public Builder profiles(String... profiles) {
            return profiles(List.of(profiles));
        }
        @CustomType.Setter
        public Builder softwareSourceId(String softwareSourceId) {
            this.softwareSourceId = Objects.requireNonNull(softwareSourceId);
            return this;
        }
        @CustomType.Setter
        public Builder streamName(String streamName) {
            this.streamName = Objects.requireNonNull(streamName);
            return this;
        }
        public GetSoftwareSourceModuleStreamResult build() {
            final var o = new GetSoftwareSourceModuleStreamResult();
            o.archType = archType;
            o.description = description;
            o.id = id;
            o.isDefault = isDefault;
            o.isLatest = isLatest;
            o.moduleName = moduleName;
            o.name = name;
            o.packages = packages;
            o.profiles = profiles;
            o.softwareSourceId = softwareSourceId;
            o.streamName = streamName;
            return o;
        }
    }
}
