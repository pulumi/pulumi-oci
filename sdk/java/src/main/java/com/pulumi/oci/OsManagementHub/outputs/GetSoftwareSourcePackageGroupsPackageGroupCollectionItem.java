// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSoftwareSourcePackageGroupsPackageGroupCollectionItem {
    /**
     * @return description of the package group.
     * 
     */
    private @Nullable String description;
    /**
     * @return Indicates the order to display category or environment.
     * 
     */
    private @Nullable Integer displayOrder;
    /**
     * @return A filter to return only package groups of the specified type.
     * 
     */
    private @Nullable String groupType;
    /**
     * @return Package group identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates if this package group is the default.
     * 
     */
    private @Nullable Boolean isDefault;
    /**
     * @return Indicates if this package group is visible by users.
     * 
     */
    private @Nullable Boolean isUserVisible;
    /**
     * @return The name of the entity to be queried.
     * 
     */
    private @Nullable String name;
    /**
     * @return The list of packages in the package group.
     * 
     */
    private @Nullable List<String> packages;
    /**
     * @return the IDs of the package group&#39;s repositories.
     * 
     */
    private @Nullable List<String> repositories;

    private GetSoftwareSourcePackageGroupsPackageGroupCollectionItem() {}
    /**
     * @return description of the package group.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Indicates the order to display category or environment.
     * 
     */
    public Optional<Integer> displayOrder() {
        return Optional.ofNullable(this.displayOrder);
    }
    /**
     * @return A filter to return only package groups of the specified type.
     * 
     */
    public Optional<String> groupType() {
        return Optional.ofNullable(this.groupType);
    }
    /**
     * @return Package group identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates if this package group is the default.
     * 
     */
    public Optional<Boolean> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    /**
     * @return Indicates if this package group is visible by users.
     * 
     */
    public Optional<Boolean> isUserVisible() {
        return Optional.ofNullable(this.isUserVisible);
    }
    /**
     * @return The name of the entity to be queried.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of packages in the package group.
     * 
     */
    public List<String> packages() {
        return this.packages == null ? List.of() : this.packages;
    }
    /**
     * @return the IDs of the package group&#39;s repositories.
     * 
     */
    public List<String> repositories() {
        return this.repositories == null ? List.of() : this.repositories;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoftwareSourcePackageGroupsPackageGroupCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable Integer displayOrder;
        private @Nullable String groupType;
        private @Nullable String id;
        private @Nullable Boolean isDefault;
        private @Nullable Boolean isUserVisible;
        private @Nullable String name;
        private @Nullable List<String> packages;
        private @Nullable List<String> repositories;
        public Builder() {}
        public Builder(GetSoftwareSourcePackageGroupsPackageGroupCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayOrder = defaults.displayOrder;
    	      this.groupType = defaults.groupType;
    	      this.id = defaults.id;
    	      this.isDefault = defaults.isDefault;
    	      this.isUserVisible = defaults.isUserVisible;
    	      this.name = defaults.name;
    	      this.packages = defaults.packages;
    	      this.repositories = defaults.repositories;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayOrder(@Nullable Integer displayOrder) {
            this.displayOrder = displayOrder;
            return this;
        }
        @CustomType.Setter
        public Builder groupType(@Nullable String groupType) {
            this.groupType = groupType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(@Nullable Boolean isDefault) {
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder isUserVisible(@Nullable Boolean isUserVisible) {
            this.isUserVisible = isUserVisible;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder packages(@Nullable List<String> packages) {
            this.packages = packages;
            return this;
        }
        public Builder packages(String... packages) {
            return packages(List.of(packages));
        }
        @CustomType.Setter
        public Builder repositories(@Nullable List<String> repositories) {
            this.repositories = repositories;
            return this;
        }
        public Builder repositories(String... repositories) {
            return repositories(List.of(repositories));
        }
        public GetSoftwareSourcePackageGroupsPackageGroupCollectionItem build() {
            final var o = new GetSoftwareSourcePackageGroupsPackageGroupCollectionItem();
            o.description = description;
            o.displayOrder = displayOrder;
            o.groupType = groupType;
            o.id = id;
            o.isDefault = isDefault;
            o.isUserVisible = isUserVisible;
            o.name = name;
            o.packages = packages;
            o.repositories = repositories;
            return o;
        }
    }
}
