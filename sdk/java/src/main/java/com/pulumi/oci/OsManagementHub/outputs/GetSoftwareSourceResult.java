// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagementHub.outputs.GetSoftwareSourceCustomSoftwareSourceFilter;
import com.pulumi.oci.OsManagementHub.outputs.GetSoftwareSourceVendorSoftwareSource;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSoftwareSourceResult {
    /**
     * @return The architecture type supported by the software source.
     * 
     */
    private String archType;
    /**
     * @return Possible availabilities of a software source.
     * 
     */
    private String availability;
    /**
     * @return The yum repository checksum type used by this software source.
     * 
     */
    private String checksumType;
    /**
     * @return The OCID of the tenancy containing the software source.
     * 
     */
    private String compartmentId;
    /**
     * @return Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     * 
     */
    private List<GetSoftwareSourceCustomSoftwareSourceFilter> customSoftwareSourceFilters;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Information specified by the user about the software source.
     * 
     */
    private String description;
    /**
     * @return User friendly name.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Fingerprint of the GPG key for this software source.
     * 
     */
    private String gpgKeyFingerprint;
    /**
     * @return ID of the GPG key for this software source.
     * 
     */
    private String gpgKeyId;
    /**
     * @return URL of the GPG key for this software source.
     * 
     */
    private String gpgKeyUrl;
    /**
     * @return The OCID of the resource that is immutable on creation.
     * 
     */
    private String id;
    /**
     * @return Indicates whether service should automatically update the custom software source for the user.
     * 
     */
    private Boolean isAutomaticallyUpdated;
    /**
     * @return The OS family the software source belongs to.
     * 
     */
    private String osFamily;
    /**
     * @return Number of packages.
     * 
     */
    private String packageCount;
    /**
     * @return The Repo ID for the software source.
     * 
     */
    private String repoId;
    private String softwareSourceId;
    /**
     * @return Type of the software source.
     * 
     */
    private String softwareSourceType;
    /**
     * @return The version to assign to this custom software source.
     * 
     */
    private String softwareSourceVersion;
    /**
     * @return The current state of the software source.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    private String timeCreated;
    /**
     * @return URL for the repository.
     * 
     */
    private String url;
    /**
     * @return Name of the vendor providing the software source.
     * 
     */
    private String vendorName;
    /**
     * @return List of vendor software sources.
     * 
     */
    private List<GetSoftwareSourceVendorSoftwareSource> vendorSoftwareSources;

    private GetSoftwareSourceResult() {}
    /**
     * @return The architecture type supported by the software source.
     * 
     */
    public String archType() {
        return this.archType;
    }
    /**
     * @return Possible availabilities of a software source.
     * 
     */
    public String availability() {
        return this.availability;
    }
    /**
     * @return The yum repository checksum type used by this software source.
     * 
     */
    public String checksumType() {
        return this.checksumType;
    }
    /**
     * @return The OCID of the tenancy containing the software source.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     * 
     */
    public List<GetSoftwareSourceCustomSoftwareSourceFilter> customSoftwareSourceFilters() {
        return this.customSoftwareSourceFilters;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Information specified by the user about the software source.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return User friendly name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Fingerprint of the GPG key for this software source.
     * 
     */
    public String gpgKeyFingerprint() {
        return this.gpgKeyFingerprint;
    }
    /**
     * @return ID of the GPG key for this software source.
     * 
     */
    public String gpgKeyId() {
        return this.gpgKeyId;
    }
    /**
     * @return URL of the GPG key for this software source.
     * 
     */
    public String gpgKeyUrl() {
        return this.gpgKeyUrl;
    }
    /**
     * @return The OCID of the resource that is immutable on creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether service should automatically update the custom software source for the user.
     * 
     */
    public Boolean isAutomaticallyUpdated() {
        return this.isAutomaticallyUpdated;
    }
    /**
     * @return The OS family the software source belongs to.
     * 
     */
    public String osFamily() {
        return this.osFamily;
    }
    /**
     * @return Number of packages.
     * 
     */
    public String packageCount() {
        return this.packageCount;
    }
    /**
     * @return The Repo ID for the software source.
     * 
     */
    public String repoId() {
        return this.repoId;
    }
    public String softwareSourceId() {
        return this.softwareSourceId;
    }
    /**
     * @return Type of the software source.
     * 
     */
    public String softwareSourceType() {
        return this.softwareSourceType;
    }
    /**
     * @return The version to assign to this custom software source.
     * 
     */
    public String softwareSourceVersion() {
        return this.softwareSourceVersion;
    }
    /**
     * @return The current state of the software source.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return URL for the repository.
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return Name of the vendor providing the software source.
     * 
     */
    public String vendorName() {
        return this.vendorName;
    }
    /**
     * @return List of vendor software sources.
     * 
     */
    public List<GetSoftwareSourceVendorSoftwareSource> vendorSoftwareSources() {
        return this.vendorSoftwareSources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoftwareSourceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String archType;
        private String availability;
        private String checksumType;
        private String compartmentId;
        private List<GetSoftwareSourceCustomSoftwareSourceFilter> customSoftwareSourceFilters;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String gpgKeyFingerprint;
        private String gpgKeyId;
        private String gpgKeyUrl;
        private String id;
        private Boolean isAutomaticallyUpdated;
        private String osFamily;
        private String packageCount;
        private String repoId;
        private String softwareSourceId;
        private String softwareSourceType;
        private String softwareSourceVersion;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String url;
        private String vendorName;
        private List<GetSoftwareSourceVendorSoftwareSource> vendorSoftwareSources;
        public Builder() {}
        public Builder(GetSoftwareSourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archType = defaults.archType;
    	      this.availability = defaults.availability;
    	      this.checksumType = defaults.checksumType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.customSoftwareSourceFilters = defaults.customSoftwareSourceFilters;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.gpgKeyFingerprint = defaults.gpgKeyFingerprint;
    	      this.gpgKeyId = defaults.gpgKeyId;
    	      this.gpgKeyUrl = defaults.gpgKeyUrl;
    	      this.id = defaults.id;
    	      this.isAutomaticallyUpdated = defaults.isAutomaticallyUpdated;
    	      this.osFamily = defaults.osFamily;
    	      this.packageCount = defaults.packageCount;
    	      this.repoId = defaults.repoId;
    	      this.softwareSourceId = defaults.softwareSourceId;
    	      this.softwareSourceType = defaults.softwareSourceType;
    	      this.softwareSourceVersion = defaults.softwareSourceVersion;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.url = defaults.url;
    	      this.vendorName = defaults.vendorName;
    	      this.vendorSoftwareSources = defaults.vendorSoftwareSources;
        }

        @CustomType.Setter
        public Builder archType(String archType) {
            this.archType = Objects.requireNonNull(archType);
            return this;
        }
        @CustomType.Setter
        public Builder availability(String availability) {
            this.availability = Objects.requireNonNull(availability);
            return this;
        }
        @CustomType.Setter
        public Builder checksumType(String checksumType) {
            this.checksumType = Objects.requireNonNull(checksumType);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder customSoftwareSourceFilters(List<GetSoftwareSourceCustomSoftwareSourceFilter> customSoftwareSourceFilters) {
            this.customSoftwareSourceFilters = Objects.requireNonNull(customSoftwareSourceFilters);
            return this;
        }
        public Builder customSoftwareSourceFilters(GetSoftwareSourceCustomSoftwareSourceFilter... customSoftwareSourceFilters) {
            return customSoftwareSourceFilters(List.of(customSoftwareSourceFilters));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder gpgKeyFingerprint(String gpgKeyFingerprint) {
            this.gpgKeyFingerprint = Objects.requireNonNull(gpgKeyFingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder gpgKeyId(String gpgKeyId) {
            this.gpgKeyId = Objects.requireNonNull(gpgKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder gpgKeyUrl(String gpgKeyUrl) {
            this.gpgKeyUrl = Objects.requireNonNull(gpgKeyUrl);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isAutomaticallyUpdated(Boolean isAutomaticallyUpdated) {
            this.isAutomaticallyUpdated = Objects.requireNonNull(isAutomaticallyUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(String osFamily) {
            this.osFamily = Objects.requireNonNull(osFamily);
            return this;
        }
        @CustomType.Setter
        public Builder packageCount(String packageCount) {
            this.packageCount = Objects.requireNonNull(packageCount);
            return this;
        }
        @CustomType.Setter
        public Builder repoId(String repoId) {
            this.repoId = Objects.requireNonNull(repoId);
            return this;
        }
        @CustomType.Setter
        public Builder softwareSourceId(String softwareSourceId) {
            this.softwareSourceId = Objects.requireNonNull(softwareSourceId);
            return this;
        }
        @CustomType.Setter
        public Builder softwareSourceType(String softwareSourceType) {
            this.softwareSourceType = Objects.requireNonNull(softwareSourceType);
            return this;
        }
        @CustomType.Setter
        public Builder softwareSourceVersion(String softwareSourceVersion) {
            this.softwareSourceVersion = Objects.requireNonNull(softwareSourceVersion);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        @CustomType.Setter
        public Builder vendorName(String vendorName) {
            this.vendorName = Objects.requireNonNull(vendorName);
            return this;
        }
        @CustomType.Setter
        public Builder vendorSoftwareSources(List<GetSoftwareSourceVendorSoftwareSource> vendorSoftwareSources) {
            this.vendorSoftwareSources = Objects.requireNonNull(vendorSoftwareSources);
            return this;
        }
        public Builder vendorSoftwareSources(GetSoftwareSourceVendorSoftwareSource... vendorSoftwareSources) {
            return vendorSoftwareSources(List.of(vendorSoftwareSources));
        }
        public GetSoftwareSourceResult build() {
            final var o = new GetSoftwareSourceResult();
            o.archType = archType;
            o.availability = availability;
            o.checksumType = checksumType;
            o.compartmentId = compartmentId;
            o.customSoftwareSourceFilters = customSoftwareSourceFilters;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.gpgKeyFingerprint = gpgKeyFingerprint;
            o.gpgKeyId = gpgKeyId;
            o.gpgKeyUrl = gpgKeyUrl;
            o.id = id;
            o.isAutomaticallyUpdated = isAutomaticallyUpdated;
            o.osFamily = osFamily;
            o.packageCount = packageCount;
            o.repoId = repoId;
            o.softwareSourceId = softwareSourceId;
            o.softwareSourceType = softwareSourceType;
            o.softwareSourceVersion = softwareSourceVersion;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.url = url;
            o.vendorName = vendorName;
            o.vendorSoftwareSources = vendorSoftwareSources;
            return o;
        }
    }
}
