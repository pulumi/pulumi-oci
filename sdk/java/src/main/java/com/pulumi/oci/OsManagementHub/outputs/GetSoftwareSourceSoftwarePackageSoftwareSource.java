// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSoftwareSourceSoftwarePackageSoftwareSource {
    /**
     * @return Software source description.
     * 
     */
    private String description;
    /**
     * @return Software source name.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    private String id;
    /**
     * @return Indicates whether this is a required software source for Autonomous Linux instances. If true, the user can&#39;t unselect it.
     * 
     */
    private Boolean isMandatoryForAutonomousLinux;
    /**
     * @return Type of the software source.
     * 
     */
    private String softwareSourceType;

    private GetSoftwareSourceSoftwarePackageSoftwareSource() {}
    /**
     * @return Software source description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Software source name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether this is a required software source for Autonomous Linux instances. If true, the user can&#39;t unselect it.
     * 
     */
    public Boolean isMandatoryForAutonomousLinux() {
        return this.isMandatoryForAutonomousLinux;
    }
    /**
     * @return Type of the software source.
     * 
     */
    public String softwareSourceType() {
        return this.softwareSourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoftwareSourceSoftwarePackageSoftwareSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private String id;
        private Boolean isMandatoryForAutonomousLinux;
        private String softwareSourceType;
        public Builder() {}
        public Builder(GetSoftwareSourceSoftwarePackageSoftwareSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.isMandatoryForAutonomousLinux = defaults.isMandatoryForAutonomousLinux;
    	      this.softwareSourceType = defaults.softwareSourceType;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSoftwareSourceSoftwarePackageSoftwareSource", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSoftwareSourceSoftwarePackageSoftwareSource", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSoftwareSourceSoftwarePackageSoftwareSource", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isMandatoryForAutonomousLinux(Boolean isMandatoryForAutonomousLinux) {
            if (isMandatoryForAutonomousLinux == null) {
              throw new MissingRequiredPropertyException("GetSoftwareSourceSoftwarePackageSoftwareSource", "isMandatoryForAutonomousLinux");
            }
            this.isMandatoryForAutonomousLinux = isMandatoryForAutonomousLinux;
            return this;
        }
        @CustomType.Setter
        public Builder softwareSourceType(String softwareSourceType) {
            if (softwareSourceType == null) {
              throw new MissingRequiredPropertyException("GetSoftwareSourceSoftwarePackageSoftwareSource", "softwareSourceType");
            }
            this.softwareSourceType = softwareSourceType;
            return this;
        }
        public GetSoftwareSourceSoftwarePackageSoftwareSource build() {
            final var _resultValue = new GetSoftwareSourceSoftwarePackageSoftwareSource();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.isMandatoryForAutonomousLinux = isMandatoryForAutonomousLinux;
            _resultValue.softwareSourceType = softwareSourceType;
            return _resultValue;
        }
    }
}
