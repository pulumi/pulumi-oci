// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagementHub.outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency;
import com.pulumi.oci.OsManagementHub.outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile;
import com.pulumi.oci.OsManagementHub.outputs.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem {
    /**
     * @return The architecture for which this software was built
     * 
     */
    private String architecture;
    /**
     * @return Checksum of the file.
     * 
     */
    private String checksum;
    /**
     * @return Type of the checksum.
     * 
     */
    private String checksumType;
    /**
     * @return List of dependencies for the software package.
     * 
     */
    private List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency> dependencies;
    /**
     * @return Software source description.
     * 
     */
    private String description;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Example: `My new resource`
     * 
     */
    private String displayName;
    /**
     * @return List of files for the software package.
     * 
     */
    private List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile> files;
    /**
     * @return A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
     * 
     */
    private Boolean isLatest;
    /**
     * @return Date of the last update to the package.
     * 
     */
    private String lastModifiedDate;
    /**
     * @return Unique identifier for the package. NOTE - This is not an OCID.
     * 
     */
    private String name;
    /**
     * @return Size of the package in bytes.
     * 
     */
    private String sizeInBytes;
    /**
     * @return List of software sources that provide the software package.
     * 
     */
    private List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource> softwareSources;
    /**
     * @return Type of the package.
     * 
     */
    private String type;
    /**
     * @return Version of the package.
     * 
     */
    private String version;

    private GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem() {}
    /**
     * @return The architecture for which this software was built
     * 
     */
    public String architecture() {
        return this.architecture;
    }
    /**
     * @return Checksum of the file.
     * 
     */
    public String checksum() {
        return this.checksum;
    }
    /**
     * @return Type of the checksum.
     * 
     */
    public String checksumType() {
        return this.checksumType;
    }
    /**
     * @return List of dependencies for the software package.
     * 
     */
    public List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency> dependencies() {
        return this.dependencies;
    }
    /**
     * @return Software source description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Example: `My new resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return List of files for the software package.
     * 
     */
    public List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile> files() {
        return this.files;
    }
    /**
     * @return A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
     * 
     */
    public Boolean isLatest() {
        return this.isLatest;
    }
    /**
     * @return Date of the last update to the package.
     * 
     */
    public String lastModifiedDate() {
        return this.lastModifiedDate;
    }
    /**
     * @return Unique identifier for the package. NOTE - This is not an OCID.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Size of the package in bytes.
     * 
     */
    public String sizeInBytes() {
        return this.sizeInBytes;
    }
    /**
     * @return List of software sources that provide the software package.
     * 
     */
    public List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource> softwareSources() {
        return this.softwareSources;
    }
    /**
     * @return Type of the package.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Version of the package.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String architecture;
        private String checksum;
        private String checksumType;
        private List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency> dependencies;
        private String description;
        private String displayName;
        private List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile> files;
        private Boolean isLatest;
        private String lastModifiedDate;
        private String name;
        private String sizeInBytes;
        private List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource> softwareSources;
        private String type;
        private String version;
        public Builder() {}
        public Builder(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.checksum = defaults.checksum;
    	      this.checksumType = defaults.checksumType;
    	      this.dependencies = defaults.dependencies;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.files = defaults.files;
    	      this.isLatest = defaults.isLatest;
    	      this.lastModifiedDate = defaults.lastModifiedDate;
    	      this.name = defaults.name;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.softwareSources = defaults.softwareSources;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder architecture(String architecture) {
            this.architecture = Objects.requireNonNull(architecture);
            return this;
        }
        @CustomType.Setter
        public Builder checksum(String checksum) {
            this.checksum = Objects.requireNonNull(checksum);
            return this;
        }
        @CustomType.Setter
        public Builder checksumType(String checksumType) {
            this.checksumType = Objects.requireNonNull(checksumType);
            return this;
        }
        @CustomType.Setter
        public Builder dependencies(List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency> dependencies) {
            this.dependencies = Objects.requireNonNull(dependencies);
            return this;
        }
        public Builder dependencies(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemDependency... dependencies) {
            return dependencies(List.of(dependencies));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder files(List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile> files) {
            this.files = Objects.requireNonNull(files);
            return this;
        }
        public Builder files(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemFile... files) {
            return files(List.of(files));
        }
        @CustomType.Setter
        public Builder isLatest(Boolean isLatest) {
            this.isLatest = Objects.requireNonNull(isLatest);
            return this;
        }
        @CustomType.Setter
        public Builder lastModifiedDate(String lastModifiedDate) {
            this.lastModifiedDate = Objects.requireNonNull(lastModifiedDate);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(String sizeInBytes) {
            this.sizeInBytes = Objects.requireNonNull(sizeInBytes);
            return this;
        }
        @CustomType.Setter
        public Builder softwareSources(List<GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource> softwareSources) {
            this.softwareSources = Objects.requireNonNull(softwareSources);
            return this;
        }
        public Builder softwareSources(GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItemSoftwareSource... softwareSources) {
            return softwareSources(List.of(softwareSources));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem build() {
            final var o = new GetSoftwareSourceSoftwarePackagesSoftwarePackageCollectionItem();
            o.architecture = architecture;
            o.checksum = checksum;
            o.checksumType = checksumType;
            o.dependencies = dependencies;
            o.description = description;
            o.displayName = displayName;
            o.files = files;
            o.isLatest = isLatest;
            o.lastModifiedDate = lastModifiedDate;
            o.name = name;
            o.sizeInBytes = sizeInBytes;
            o.softwareSources = softwareSources;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
