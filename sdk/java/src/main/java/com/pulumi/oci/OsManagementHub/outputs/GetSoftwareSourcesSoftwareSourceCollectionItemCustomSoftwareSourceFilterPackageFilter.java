// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagementHub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter {
    /**
     * @return The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
     * 
     */
    private @Nullable String filterType;
    /**
     * @return The package name.
     * 
     */
    private @Nullable String packageName;
    /**
     * @return The package name pattern.
     * 
     */
    private @Nullable String packageNamePattern;
    /**
     * @return The package version, which is denoted by &#39;version-release&#39;, or &#39;epoch:version-release&#39;.
     * 
     */
    private @Nullable String packageVersion;

    private GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter() {}
    /**
     * @return The type of the filter, which can be of two types - INCLUDE or EXCLUDE.
     * 
     */
    public Optional<String> filterType() {
        return Optional.ofNullable(this.filterType);
    }
    /**
     * @return The package name.
     * 
     */
    public Optional<String> packageName() {
        return Optional.ofNullable(this.packageName);
    }
    /**
     * @return The package name pattern.
     * 
     */
    public Optional<String> packageNamePattern() {
        return Optional.ofNullable(this.packageNamePattern);
    }
    /**
     * @return The package version, which is denoted by &#39;version-release&#39;, or &#39;epoch:version-release&#39;.
     * 
     */
    public Optional<String> packageVersion() {
        return Optional.ofNullable(this.packageVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String filterType;
        private @Nullable String packageName;
        private @Nullable String packageNamePattern;
        private @Nullable String packageVersion;
        public Builder() {}
        public Builder(GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterType = defaults.filterType;
    	      this.packageName = defaults.packageName;
    	      this.packageNamePattern = defaults.packageNamePattern;
    	      this.packageVersion = defaults.packageVersion;
        }

        @CustomType.Setter
        public Builder filterType(@Nullable String filterType) {
            this.filterType = filterType;
            return this;
        }
        @CustomType.Setter
        public Builder packageName(@Nullable String packageName) {
            this.packageName = packageName;
            return this;
        }
        @CustomType.Setter
        public Builder packageNamePattern(@Nullable String packageNamePattern) {
            this.packageNamePattern = packageNamePattern;
            return this;
        }
        @CustomType.Setter
        public Builder packageVersion(@Nullable String packageVersion) {
            this.packageVersion = packageVersion;
            return this;
        }
        public GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter build() {
            final var o = new GetSoftwareSourcesSoftwareSourceCollectionItemCustomSoftwareSourceFilterPackageFilter();
            o.filterType = filterType;
            o.packageName = packageName;
            o.packageNamePattern = packageNamePattern;
            o.packageVersion = packageVersion;
            return o;
        }
    }
}
