// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OspGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OspGateway.outputs.GetInvoicesInvoiceCollectionItemBillToAddress;
import com.pulumi.oci.OspGateway.outputs.GetInvoicesInvoiceCollectionItemCurrency;
import com.pulumi.oci.OspGateway.outputs.GetInvoicesInvoiceCollectionItemLastPaymentDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInvoicesInvoiceCollectionItem {
    /**
     * @return Address details model
     * 
     */
    private @Nullable List<GetInvoicesInvoiceCollectionItemBillToAddress> billToAddresses;
    /**
     * @return Currency details model
     * 
     */
    private @Nullable List<GetInvoicesInvoiceCollectionItemCurrency> currencies;
    /**
     * @return Transaction identifier
     * 
     */
    private @Nullable String internalInvoiceId;
    /**
     * @return Total amount of invoice
     * 
     */
    private @Nullable Double invoiceAmount;
    /**
     * @return Invoice amount adjust
     * 
     */
    private @Nullable Double invoiceAmountAdjusted;
    /**
     * @return Invoice amount applied
     * 
     */
    private @Nullable Double invoiceAmountApplied;
    /**
     * @return Invoice amount credit
     * 
     */
    private @Nullable Double invoiceAmountCredited;
    /**
     * @return Balance of invoice
     * 
     */
    private @Nullable Double invoiceAmountDue;
    private @Nullable Double invoiceAmountInDispute;
    /**
     * @return The invoice query param (not unique).
     * 
     */
    private @Nullable String invoiceId;
    /**
     * @return Invoice external reference
     * 
     */
    private @Nullable String invoiceNumber;
    /**
     * @return Invoice PO number
     * 
     */
    private @Nullable String invoicePoNumber;
    /**
     * @return Invoice reference number
     * 
     */
    private @Nullable String invoiceRefNumber;
    /**
     * @return Invoice status
     * 
     */
    private @Nullable String invoiceStatus;
    /**
     * @return Type of invoice
     * 
     */
    private @Nullable String invoiceType;
    /**
     * @return Is credit card payment eligible
     * 
     */
    private @Nullable Boolean isCreditCardPayable;
    /**
     * @return Is pdf download access allowed
     * 
     */
    private @Nullable Boolean isDisplayDownloadPdf;
    private @Nullable Boolean isDisplayViewPdf;
    private @Nullable Boolean isPaid;
    /**
     * @return Whether invoice can be payed
     * 
     */
    private @Nullable Boolean isPayable;
    private @Nullable Boolean isPaymentFailed;
    /**
     * @return Is emailing pdf allowed
     * 
     */
    private @Nullable Boolean isPdfEmailAvailable;
    /**
     * @return Payment related details
     * 
     */
    private @Nullable List<GetInvoicesInvoiceCollectionItemLastPaymentDetail> lastPaymentDetails;
    private @Nullable String partyName;
    /**
     * @return Payment terms
     * 
     */
    private @Nullable String paymentTerms;
    /**
     * @return Preferred Email on the invoice
     * 
     */
    private @Nullable String preferredEmail;
    /**
     * @return List of subscription identifiers
     * 
     */
    private @Nullable List<String> subscriptionIds;
    /**
     * @return Tax of invoice amount
     * 
     */
    private @Nullable Double tax;
    /**
     * @return Date of invoice
     * 
     */
    private @Nullable String timeInvoice;
    /**
     * @return Due date of invoice
     * 
     */
    private @Nullable String timeInvoiceDue;

    private GetInvoicesInvoiceCollectionItem() {}
    /**
     * @return Address details model
     * 
     */
    public List<GetInvoicesInvoiceCollectionItemBillToAddress> billToAddresses() {
        return this.billToAddresses == null ? List.of() : this.billToAddresses;
    }
    /**
     * @return Currency details model
     * 
     */
    public List<GetInvoicesInvoiceCollectionItemCurrency> currencies() {
        return this.currencies == null ? List.of() : this.currencies;
    }
    /**
     * @return Transaction identifier
     * 
     */
    public Optional<String> internalInvoiceId() {
        return Optional.ofNullable(this.internalInvoiceId);
    }
    /**
     * @return Total amount of invoice
     * 
     */
    public Optional<Double> invoiceAmount() {
        return Optional.ofNullable(this.invoiceAmount);
    }
    /**
     * @return Invoice amount adjust
     * 
     */
    public Optional<Double> invoiceAmountAdjusted() {
        return Optional.ofNullable(this.invoiceAmountAdjusted);
    }
    /**
     * @return Invoice amount applied
     * 
     */
    public Optional<Double> invoiceAmountApplied() {
        return Optional.ofNullable(this.invoiceAmountApplied);
    }
    /**
     * @return Invoice amount credit
     * 
     */
    public Optional<Double> invoiceAmountCredited() {
        return Optional.ofNullable(this.invoiceAmountCredited);
    }
    /**
     * @return Balance of invoice
     * 
     */
    public Optional<Double> invoiceAmountDue() {
        return Optional.ofNullable(this.invoiceAmountDue);
    }
    public Optional<Double> invoiceAmountInDispute() {
        return Optional.ofNullable(this.invoiceAmountInDispute);
    }
    /**
     * @return The invoice query param (not unique).
     * 
     */
    public Optional<String> invoiceId() {
        return Optional.ofNullable(this.invoiceId);
    }
    /**
     * @return Invoice external reference
     * 
     */
    public Optional<String> invoiceNumber() {
        return Optional.ofNullable(this.invoiceNumber);
    }
    /**
     * @return Invoice PO number
     * 
     */
    public Optional<String> invoicePoNumber() {
        return Optional.ofNullable(this.invoicePoNumber);
    }
    /**
     * @return Invoice reference number
     * 
     */
    public Optional<String> invoiceRefNumber() {
        return Optional.ofNullable(this.invoiceRefNumber);
    }
    /**
     * @return Invoice status
     * 
     */
    public Optional<String> invoiceStatus() {
        return Optional.ofNullable(this.invoiceStatus);
    }
    /**
     * @return Type of invoice
     * 
     */
    public Optional<String> invoiceType() {
        return Optional.ofNullable(this.invoiceType);
    }
    /**
     * @return Is credit card payment eligible
     * 
     */
    public Optional<Boolean> isCreditCardPayable() {
        return Optional.ofNullable(this.isCreditCardPayable);
    }
    /**
     * @return Is pdf download access allowed
     * 
     */
    public Optional<Boolean> isDisplayDownloadPdf() {
        return Optional.ofNullable(this.isDisplayDownloadPdf);
    }
    public Optional<Boolean> isDisplayViewPdf() {
        return Optional.ofNullable(this.isDisplayViewPdf);
    }
    public Optional<Boolean> isPaid() {
        return Optional.ofNullable(this.isPaid);
    }
    /**
     * @return Whether invoice can be payed
     * 
     */
    public Optional<Boolean> isPayable() {
        return Optional.ofNullable(this.isPayable);
    }
    public Optional<Boolean> isPaymentFailed() {
        return Optional.ofNullable(this.isPaymentFailed);
    }
    /**
     * @return Is emailing pdf allowed
     * 
     */
    public Optional<Boolean> isPdfEmailAvailable() {
        return Optional.ofNullable(this.isPdfEmailAvailable);
    }
    /**
     * @return Payment related details
     * 
     */
    public List<GetInvoicesInvoiceCollectionItemLastPaymentDetail> lastPaymentDetails() {
        return this.lastPaymentDetails == null ? List.of() : this.lastPaymentDetails;
    }
    public Optional<String> partyName() {
        return Optional.ofNullable(this.partyName);
    }
    /**
     * @return Payment terms
     * 
     */
    public Optional<String> paymentTerms() {
        return Optional.ofNullable(this.paymentTerms);
    }
    /**
     * @return Preferred Email on the invoice
     * 
     */
    public Optional<String> preferredEmail() {
        return Optional.ofNullable(this.preferredEmail);
    }
    /**
     * @return List of subscription identifiers
     * 
     */
    public List<String> subscriptionIds() {
        return this.subscriptionIds == null ? List.of() : this.subscriptionIds;
    }
    /**
     * @return Tax of invoice amount
     * 
     */
    public Optional<Double> tax() {
        return Optional.ofNullable(this.tax);
    }
    /**
     * @return Date of invoice
     * 
     */
    public Optional<String> timeInvoice() {
        return Optional.ofNullable(this.timeInvoice);
    }
    /**
     * @return Due date of invoice
     * 
     */
    public Optional<String> timeInvoiceDue() {
        return Optional.ofNullable(this.timeInvoiceDue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoicesInvoiceCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetInvoicesInvoiceCollectionItemBillToAddress> billToAddresses;
        private @Nullable List<GetInvoicesInvoiceCollectionItemCurrency> currencies;
        private @Nullable String internalInvoiceId;
        private @Nullable Double invoiceAmount;
        private @Nullable Double invoiceAmountAdjusted;
        private @Nullable Double invoiceAmountApplied;
        private @Nullable Double invoiceAmountCredited;
        private @Nullable Double invoiceAmountDue;
        private @Nullable Double invoiceAmountInDispute;
        private @Nullable String invoiceId;
        private @Nullable String invoiceNumber;
        private @Nullable String invoicePoNumber;
        private @Nullable String invoiceRefNumber;
        private @Nullable String invoiceStatus;
        private @Nullable String invoiceType;
        private @Nullable Boolean isCreditCardPayable;
        private @Nullable Boolean isDisplayDownloadPdf;
        private @Nullable Boolean isDisplayViewPdf;
        private @Nullable Boolean isPaid;
        private @Nullable Boolean isPayable;
        private @Nullable Boolean isPaymentFailed;
        private @Nullable Boolean isPdfEmailAvailable;
        private @Nullable List<GetInvoicesInvoiceCollectionItemLastPaymentDetail> lastPaymentDetails;
        private @Nullable String partyName;
        private @Nullable String paymentTerms;
        private @Nullable String preferredEmail;
        private @Nullable List<String> subscriptionIds;
        private @Nullable Double tax;
        private @Nullable String timeInvoice;
        private @Nullable String timeInvoiceDue;
        public Builder() {}
        public Builder(GetInvoicesInvoiceCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billToAddresses = defaults.billToAddresses;
    	      this.currencies = defaults.currencies;
    	      this.internalInvoiceId = defaults.internalInvoiceId;
    	      this.invoiceAmount = defaults.invoiceAmount;
    	      this.invoiceAmountAdjusted = defaults.invoiceAmountAdjusted;
    	      this.invoiceAmountApplied = defaults.invoiceAmountApplied;
    	      this.invoiceAmountCredited = defaults.invoiceAmountCredited;
    	      this.invoiceAmountDue = defaults.invoiceAmountDue;
    	      this.invoiceAmountInDispute = defaults.invoiceAmountInDispute;
    	      this.invoiceId = defaults.invoiceId;
    	      this.invoiceNumber = defaults.invoiceNumber;
    	      this.invoicePoNumber = defaults.invoicePoNumber;
    	      this.invoiceRefNumber = defaults.invoiceRefNumber;
    	      this.invoiceStatus = defaults.invoiceStatus;
    	      this.invoiceType = defaults.invoiceType;
    	      this.isCreditCardPayable = defaults.isCreditCardPayable;
    	      this.isDisplayDownloadPdf = defaults.isDisplayDownloadPdf;
    	      this.isDisplayViewPdf = defaults.isDisplayViewPdf;
    	      this.isPaid = defaults.isPaid;
    	      this.isPayable = defaults.isPayable;
    	      this.isPaymentFailed = defaults.isPaymentFailed;
    	      this.isPdfEmailAvailable = defaults.isPdfEmailAvailable;
    	      this.lastPaymentDetails = defaults.lastPaymentDetails;
    	      this.partyName = defaults.partyName;
    	      this.paymentTerms = defaults.paymentTerms;
    	      this.preferredEmail = defaults.preferredEmail;
    	      this.subscriptionIds = defaults.subscriptionIds;
    	      this.tax = defaults.tax;
    	      this.timeInvoice = defaults.timeInvoice;
    	      this.timeInvoiceDue = defaults.timeInvoiceDue;
        }

        @CustomType.Setter
        public Builder billToAddresses(@Nullable List<GetInvoicesInvoiceCollectionItemBillToAddress> billToAddresses) {
            this.billToAddresses = billToAddresses;
            return this;
        }
        public Builder billToAddresses(GetInvoicesInvoiceCollectionItemBillToAddress... billToAddresses) {
            return billToAddresses(List.of(billToAddresses));
        }
        @CustomType.Setter
        public Builder currencies(@Nullable List<GetInvoicesInvoiceCollectionItemCurrency> currencies) {
            this.currencies = currencies;
            return this;
        }
        public Builder currencies(GetInvoicesInvoiceCollectionItemCurrency... currencies) {
            return currencies(List.of(currencies));
        }
        @CustomType.Setter
        public Builder internalInvoiceId(@Nullable String internalInvoiceId) {
            this.internalInvoiceId = internalInvoiceId;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceAmount(@Nullable Double invoiceAmount) {
            this.invoiceAmount = invoiceAmount;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceAmountAdjusted(@Nullable Double invoiceAmountAdjusted) {
            this.invoiceAmountAdjusted = invoiceAmountAdjusted;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceAmountApplied(@Nullable Double invoiceAmountApplied) {
            this.invoiceAmountApplied = invoiceAmountApplied;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceAmountCredited(@Nullable Double invoiceAmountCredited) {
            this.invoiceAmountCredited = invoiceAmountCredited;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceAmountDue(@Nullable Double invoiceAmountDue) {
            this.invoiceAmountDue = invoiceAmountDue;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceAmountInDispute(@Nullable Double invoiceAmountInDispute) {
            this.invoiceAmountInDispute = invoiceAmountInDispute;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceId(@Nullable String invoiceId) {
            this.invoiceId = invoiceId;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceNumber(@Nullable String invoiceNumber) {
            this.invoiceNumber = invoiceNumber;
            return this;
        }
        @CustomType.Setter
        public Builder invoicePoNumber(@Nullable String invoicePoNumber) {
            this.invoicePoNumber = invoicePoNumber;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceRefNumber(@Nullable String invoiceRefNumber) {
            this.invoiceRefNumber = invoiceRefNumber;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceStatus(@Nullable String invoiceStatus) {
            this.invoiceStatus = invoiceStatus;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceType(@Nullable String invoiceType) {
            this.invoiceType = invoiceType;
            return this;
        }
        @CustomType.Setter
        public Builder isCreditCardPayable(@Nullable Boolean isCreditCardPayable) {
            this.isCreditCardPayable = isCreditCardPayable;
            return this;
        }
        @CustomType.Setter
        public Builder isDisplayDownloadPdf(@Nullable Boolean isDisplayDownloadPdf) {
            this.isDisplayDownloadPdf = isDisplayDownloadPdf;
            return this;
        }
        @CustomType.Setter
        public Builder isDisplayViewPdf(@Nullable Boolean isDisplayViewPdf) {
            this.isDisplayViewPdf = isDisplayViewPdf;
            return this;
        }
        @CustomType.Setter
        public Builder isPaid(@Nullable Boolean isPaid) {
            this.isPaid = isPaid;
            return this;
        }
        @CustomType.Setter
        public Builder isPayable(@Nullable Boolean isPayable) {
            this.isPayable = isPayable;
            return this;
        }
        @CustomType.Setter
        public Builder isPaymentFailed(@Nullable Boolean isPaymentFailed) {
            this.isPaymentFailed = isPaymentFailed;
            return this;
        }
        @CustomType.Setter
        public Builder isPdfEmailAvailable(@Nullable Boolean isPdfEmailAvailable) {
            this.isPdfEmailAvailable = isPdfEmailAvailable;
            return this;
        }
        @CustomType.Setter
        public Builder lastPaymentDetails(@Nullable List<GetInvoicesInvoiceCollectionItemLastPaymentDetail> lastPaymentDetails) {
            this.lastPaymentDetails = lastPaymentDetails;
            return this;
        }
        public Builder lastPaymentDetails(GetInvoicesInvoiceCollectionItemLastPaymentDetail... lastPaymentDetails) {
            return lastPaymentDetails(List.of(lastPaymentDetails));
        }
        @CustomType.Setter
        public Builder partyName(@Nullable String partyName) {
            this.partyName = partyName;
            return this;
        }
        @CustomType.Setter
        public Builder paymentTerms(@Nullable String paymentTerms) {
            this.paymentTerms = paymentTerms;
            return this;
        }
        @CustomType.Setter
        public Builder preferredEmail(@Nullable String preferredEmail) {
            this.preferredEmail = preferredEmail;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionIds(@Nullable List<String> subscriptionIds) {
            this.subscriptionIds = subscriptionIds;
            return this;
        }
        public Builder subscriptionIds(String... subscriptionIds) {
            return subscriptionIds(List.of(subscriptionIds));
        }
        @CustomType.Setter
        public Builder tax(@Nullable Double tax) {
            this.tax = tax;
            return this;
        }
        @CustomType.Setter
        public Builder timeInvoice(@Nullable String timeInvoice) {
            this.timeInvoice = timeInvoice;
            return this;
        }
        @CustomType.Setter
        public Builder timeInvoiceDue(@Nullable String timeInvoiceDue) {
            this.timeInvoiceDue = timeInvoiceDue;
            return this;
        }
        public GetInvoicesInvoiceCollectionItem build() {
            final var o = new GetInvoicesInvoiceCollectionItem();
            o.billToAddresses = billToAddresses;
            o.currencies = currencies;
            o.internalInvoiceId = internalInvoiceId;
            o.invoiceAmount = invoiceAmount;
            o.invoiceAmountAdjusted = invoiceAmountAdjusted;
            o.invoiceAmountApplied = invoiceAmountApplied;
            o.invoiceAmountCredited = invoiceAmountCredited;
            o.invoiceAmountDue = invoiceAmountDue;
            o.invoiceAmountInDispute = invoiceAmountInDispute;
            o.invoiceId = invoiceId;
            o.invoiceNumber = invoiceNumber;
            o.invoicePoNumber = invoicePoNumber;
            o.invoiceRefNumber = invoiceRefNumber;
            o.invoiceStatus = invoiceStatus;
            o.invoiceType = invoiceType;
            o.isCreditCardPayable = isCreditCardPayable;
            o.isDisplayDownloadPdf = isDisplayDownloadPdf;
            o.isDisplayViewPdf = isDisplayViewPdf;
            o.isPaid = isPaid;
            o.isPayable = isPayable;
            o.isPaymentFailed = isPaymentFailed;
            o.isPdfEmailAvailable = isPdfEmailAvailable;
            o.lastPaymentDetails = lastPaymentDetails;
            o.partyName = partyName;
            o.paymentTerms = paymentTerms;
            o.preferredEmail = preferredEmail;
            o.subscriptionIds = subscriptionIds;
            o.tax = tax;
            o.timeInvoice = timeInvoice;
            o.timeInvoiceDue = timeInvoiceDue;
            return o;
        }
    }
}
