// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OspGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInvoicesInvoiceCollectionItemLastPaymentDetail {
    /**
     * @return Account number of the card owner
     * 
     */
    private @Nullable String accountNumber;
    /**
     * @return Amount that paid
     * 
     */
    private @Nullable Double amountPaid;
    /**
     * @return Echeck card type
     * 
     */
    private @Nullable String cardType;
    /**
     * @return Credit card type
     * 
     */
    private @Nullable String creditCardType;
    /**
     * @return Last four routing digits of the card
     * 
     */
    private @Nullable String echeckRouting;
    /**
     * @return Last four digits of the card
     * 
     */
    private @Nullable String lastDigits;
    /**
     * @return Name on the credit card
     * 
     */
    private @Nullable String nameOnCard;
    /**
     * @return example
     * 
     */
    private @Nullable String paidBy;
    /**
     * @return Payment method
     * 
     */
    private @Nullable String paymentMethod;
    /**
     * @return The id (email address) of the paypal payment
     * 
     */
    private @Nullable String paypalId;
    /**
     * @return paypal payment reference
     * 
     */
    private @Nullable String paypalReference;
    /**
     * @return Routing number of the echeck card
     * 
     */
    private @Nullable String routingNumber;
    /**
     * @return Expired date of the credit card
     * 
     */
    private @Nullable String timeExpiration;
    /**
     * @return Paid the invoice on this day
     * 
     */
    private @Nullable String timePaidOn;

    private GetInvoicesInvoiceCollectionItemLastPaymentDetail() {}
    /**
     * @return Account number of the card owner
     * 
     */
    public Optional<String> accountNumber() {
        return Optional.ofNullable(this.accountNumber);
    }
    /**
     * @return Amount that paid
     * 
     */
    public Optional<Double> amountPaid() {
        return Optional.ofNullable(this.amountPaid);
    }
    /**
     * @return Echeck card type
     * 
     */
    public Optional<String> cardType() {
        return Optional.ofNullable(this.cardType);
    }
    /**
     * @return Credit card type
     * 
     */
    public Optional<String> creditCardType() {
        return Optional.ofNullable(this.creditCardType);
    }
    /**
     * @return Last four routing digits of the card
     * 
     */
    public Optional<String> echeckRouting() {
        return Optional.ofNullable(this.echeckRouting);
    }
    /**
     * @return Last four digits of the card
     * 
     */
    public Optional<String> lastDigits() {
        return Optional.ofNullable(this.lastDigits);
    }
    /**
     * @return Name on the credit card
     * 
     */
    public Optional<String> nameOnCard() {
        return Optional.ofNullable(this.nameOnCard);
    }
    /**
     * @return example
     * 
     */
    public Optional<String> paidBy() {
        return Optional.ofNullable(this.paidBy);
    }
    /**
     * @return Payment method
     * 
     */
    public Optional<String> paymentMethod() {
        return Optional.ofNullable(this.paymentMethod);
    }
    /**
     * @return The id (email address) of the paypal payment
     * 
     */
    public Optional<String> paypalId() {
        return Optional.ofNullable(this.paypalId);
    }
    /**
     * @return paypal payment reference
     * 
     */
    public Optional<String> paypalReference() {
        return Optional.ofNullable(this.paypalReference);
    }
    /**
     * @return Routing number of the echeck card
     * 
     */
    public Optional<String> routingNumber() {
        return Optional.ofNullable(this.routingNumber);
    }
    /**
     * @return Expired date of the credit card
     * 
     */
    public Optional<String> timeExpiration() {
        return Optional.ofNullable(this.timeExpiration);
    }
    /**
     * @return Paid the invoice on this day
     * 
     */
    public Optional<String> timePaidOn() {
        return Optional.ofNullable(this.timePaidOn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoicesInvoiceCollectionItemLastPaymentDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountNumber;
        private @Nullable Double amountPaid;
        private @Nullable String cardType;
        private @Nullable String creditCardType;
        private @Nullable String echeckRouting;
        private @Nullable String lastDigits;
        private @Nullable String nameOnCard;
        private @Nullable String paidBy;
        private @Nullable String paymentMethod;
        private @Nullable String paypalId;
        private @Nullable String paypalReference;
        private @Nullable String routingNumber;
        private @Nullable String timeExpiration;
        private @Nullable String timePaidOn;
        public Builder() {}
        public Builder(GetInvoicesInvoiceCollectionItemLastPaymentDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountNumber = defaults.accountNumber;
    	      this.amountPaid = defaults.amountPaid;
    	      this.cardType = defaults.cardType;
    	      this.creditCardType = defaults.creditCardType;
    	      this.echeckRouting = defaults.echeckRouting;
    	      this.lastDigits = defaults.lastDigits;
    	      this.nameOnCard = defaults.nameOnCard;
    	      this.paidBy = defaults.paidBy;
    	      this.paymentMethod = defaults.paymentMethod;
    	      this.paypalId = defaults.paypalId;
    	      this.paypalReference = defaults.paypalReference;
    	      this.routingNumber = defaults.routingNumber;
    	      this.timeExpiration = defaults.timeExpiration;
    	      this.timePaidOn = defaults.timePaidOn;
        }

        @CustomType.Setter
        public Builder accountNumber(@Nullable String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }
        @CustomType.Setter
        public Builder amountPaid(@Nullable Double amountPaid) {
            this.amountPaid = amountPaid;
            return this;
        }
        @CustomType.Setter
        public Builder cardType(@Nullable String cardType) {
            this.cardType = cardType;
            return this;
        }
        @CustomType.Setter
        public Builder creditCardType(@Nullable String creditCardType) {
            this.creditCardType = creditCardType;
            return this;
        }
        @CustomType.Setter
        public Builder echeckRouting(@Nullable String echeckRouting) {
            this.echeckRouting = echeckRouting;
            return this;
        }
        @CustomType.Setter
        public Builder lastDigits(@Nullable String lastDigits) {
            this.lastDigits = lastDigits;
            return this;
        }
        @CustomType.Setter
        public Builder nameOnCard(@Nullable String nameOnCard) {
            this.nameOnCard = nameOnCard;
            return this;
        }
        @CustomType.Setter
        public Builder paidBy(@Nullable String paidBy) {
            this.paidBy = paidBy;
            return this;
        }
        @CustomType.Setter
        public Builder paymentMethod(@Nullable String paymentMethod) {
            this.paymentMethod = paymentMethod;
            return this;
        }
        @CustomType.Setter
        public Builder paypalId(@Nullable String paypalId) {
            this.paypalId = paypalId;
            return this;
        }
        @CustomType.Setter
        public Builder paypalReference(@Nullable String paypalReference) {
            this.paypalReference = paypalReference;
            return this;
        }
        @CustomType.Setter
        public Builder routingNumber(@Nullable String routingNumber) {
            this.routingNumber = routingNumber;
            return this;
        }
        @CustomType.Setter
        public Builder timeExpiration(@Nullable String timeExpiration) {
            this.timeExpiration = timeExpiration;
            return this;
        }
        @CustomType.Setter
        public Builder timePaidOn(@Nullable String timePaidOn) {
            this.timePaidOn = timePaidOn;
            return this;
        }
        public GetInvoicesInvoiceCollectionItemLastPaymentDetail build() {
            final var o = new GetInvoicesInvoiceCollectionItemLastPaymentDetail();
            o.accountNumber = accountNumber;
            o.amountPaid = amountPaid;
            o.cardType = cardType;
            o.creditCardType = creditCardType;
            o.echeckRouting = echeckRouting;
            o.lastDigits = lastDigits;
            o.nameOnCard = nameOnCard;
            o.paidBy = paidBy;
            o.paymentMethod = paymentMethod;
            o.paypalId = paypalId;
            o.paypalReference = paypalReference;
            o.routingNumber = routingNumber;
            o.timeExpiration = timeExpiration;
            o.timePaidOn = timePaidOn;
            return o;
        }
    }
}
