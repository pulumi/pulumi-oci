// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OspGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInvoicesInvoiceCollectionItemLastPaymentDetail {
    /**
     * @return Amount that paid
     * 
     */
    private Double amountPaid;
    /**
     * @return Credit card type
     * 
     */
    private String creditCardType;
    /**
     * @return Last four routing digits of the card
     * 
     */
    private String echeckRouting;
    /**
     * @return Last four digits of the card
     * 
     */
    private String lastDigits;
    /**
     * @return Name on the credit card
     * 
     */
    private String nameOnCard;
    /**
     * @return example
     * 
     */
    private String paidBy;
    /**
     * @return Payment method
     * 
     */
    private String paymentMethod;
    /**
     * @return The id (email address) of the paypal payment
     * 
     */
    private String paypalId;
    /**
     * @return paypal payment reference
     * 
     */
    private String paypalReference;
    /**
     * @return Expired date of the credit card
     * 
     */
    private String timeExpiration;
    /**
     * @return Paid the invoice on this day
     * 
     */
    private String timePaidOn;

    private GetInvoicesInvoiceCollectionItemLastPaymentDetail() {}
    /**
     * @return Amount that paid
     * 
     */
    public Double amountPaid() {
        return this.amountPaid;
    }
    /**
     * @return Credit card type
     * 
     */
    public String creditCardType() {
        return this.creditCardType;
    }
    /**
     * @return Last four routing digits of the card
     * 
     */
    public String echeckRouting() {
        return this.echeckRouting;
    }
    /**
     * @return Last four digits of the card
     * 
     */
    public String lastDigits() {
        return this.lastDigits;
    }
    /**
     * @return Name on the credit card
     * 
     */
    public String nameOnCard() {
        return this.nameOnCard;
    }
    /**
     * @return example
     * 
     */
    public String paidBy() {
        return this.paidBy;
    }
    /**
     * @return Payment method
     * 
     */
    public String paymentMethod() {
        return this.paymentMethod;
    }
    /**
     * @return The id (email address) of the paypal payment
     * 
     */
    public String paypalId() {
        return this.paypalId;
    }
    /**
     * @return paypal payment reference
     * 
     */
    public String paypalReference() {
        return this.paypalReference;
    }
    /**
     * @return Expired date of the credit card
     * 
     */
    public String timeExpiration() {
        return this.timeExpiration;
    }
    /**
     * @return Paid the invoice on this day
     * 
     */
    public String timePaidOn() {
        return this.timePaidOn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoicesInvoiceCollectionItemLastPaymentDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double amountPaid;
        private String creditCardType;
        private String echeckRouting;
        private String lastDigits;
        private String nameOnCard;
        private String paidBy;
        private String paymentMethod;
        private String paypalId;
        private String paypalReference;
        private String timeExpiration;
        private String timePaidOn;
        public Builder() {}
        public Builder(GetInvoicesInvoiceCollectionItemLastPaymentDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amountPaid = defaults.amountPaid;
    	      this.creditCardType = defaults.creditCardType;
    	      this.echeckRouting = defaults.echeckRouting;
    	      this.lastDigits = defaults.lastDigits;
    	      this.nameOnCard = defaults.nameOnCard;
    	      this.paidBy = defaults.paidBy;
    	      this.paymentMethod = defaults.paymentMethod;
    	      this.paypalId = defaults.paypalId;
    	      this.paypalReference = defaults.paypalReference;
    	      this.timeExpiration = defaults.timeExpiration;
    	      this.timePaidOn = defaults.timePaidOn;
        }

        @CustomType.Setter
        public Builder amountPaid(Double amountPaid) {
            this.amountPaid = Objects.requireNonNull(amountPaid);
            return this;
        }
        @CustomType.Setter
        public Builder creditCardType(String creditCardType) {
            this.creditCardType = Objects.requireNonNull(creditCardType);
            return this;
        }
        @CustomType.Setter
        public Builder echeckRouting(String echeckRouting) {
            this.echeckRouting = Objects.requireNonNull(echeckRouting);
            return this;
        }
        @CustomType.Setter
        public Builder lastDigits(String lastDigits) {
            this.lastDigits = Objects.requireNonNull(lastDigits);
            return this;
        }
        @CustomType.Setter
        public Builder nameOnCard(String nameOnCard) {
            this.nameOnCard = Objects.requireNonNull(nameOnCard);
            return this;
        }
        @CustomType.Setter
        public Builder paidBy(String paidBy) {
            this.paidBy = Objects.requireNonNull(paidBy);
            return this;
        }
        @CustomType.Setter
        public Builder paymentMethod(String paymentMethod) {
            this.paymentMethod = Objects.requireNonNull(paymentMethod);
            return this;
        }
        @CustomType.Setter
        public Builder paypalId(String paypalId) {
            this.paypalId = Objects.requireNonNull(paypalId);
            return this;
        }
        @CustomType.Setter
        public Builder paypalReference(String paypalReference) {
            this.paypalReference = Objects.requireNonNull(paypalReference);
            return this;
        }
        @CustomType.Setter
        public Builder timeExpiration(String timeExpiration) {
            this.timeExpiration = Objects.requireNonNull(timeExpiration);
            return this;
        }
        @CustomType.Setter
        public Builder timePaidOn(String timePaidOn) {
            this.timePaidOn = Objects.requireNonNull(timePaidOn);
            return this;
        }
        public GetInvoicesInvoiceCollectionItemLastPaymentDetail build() {
            final var o = new GetInvoicesInvoiceCollectionItemLastPaymentDetail();
            o.amountPaid = amountPaid;
            o.creditCardType = creditCardType;
            o.echeckRouting = echeckRouting;
            o.lastDigits = lastDigits;
            o.nameOnCard = nameOnCard;
            o.paidBy = paidBy;
            o.paymentMethod = paymentMethod;
            o.paypalId = paypalId;
            o.paypalReference = paypalReference;
            o.timeExpiration = timeExpiration;
            o.timePaidOn = timePaidOn;
            return o;
        }
    }
}
