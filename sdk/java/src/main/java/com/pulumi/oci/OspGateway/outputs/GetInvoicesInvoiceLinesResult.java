// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OspGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OspGateway.outputs.GetInvoicesInvoiceLinesFilter;
import com.pulumi.oci.OspGateway.outputs.GetInvoicesInvoiceLinesInvoiceLineCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetInvoicesInvoiceLinesResult {
    private String compartmentId;
    private @Nullable List<GetInvoicesInvoiceLinesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String internalInvoiceId;
    /**
     * @return The list of invoice_line_collection.
     * 
     */
    private List<GetInvoicesInvoiceLinesInvoiceLineCollection> invoiceLineCollections;
    private String ospHomeRegion;

    private GetInvoicesInvoiceLinesResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetInvoicesInvoiceLinesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String internalInvoiceId() {
        return this.internalInvoiceId;
    }
    /**
     * @return The list of invoice_line_collection.
     * 
     */
    public List<GetInvoicesInvoiceLinesInvoiceLineCollection> invoiceLineCollections() {
        return this.invoiceLineCollections;
    }
    public String ospHomeRegion() {
        return this.ospHomeRegion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInvoicesInvoiceLinesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetInvoicesInvoiceLinesFilter> filters;
        private String id;
        private String internalInvoiceId;
        private List<GetInvoicesInvoiceLinesInvoiceLineCollection> invoiceLineCollections;
        private String ospHomeRegion;
        public Builder() {}
        public Builder(GetInvoicesInvoiceLinesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.internalInvoiceId = defaults.internalInvoiceId;
    	      this.invoiceLineCollections = defaults.invoiceLineCollections;
    	      this.ospHomeRegion = defaults.ospHomeRegion;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetInvoicesInvoiceLinesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetInvoicesInvoiceLinesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetInvoicesInvoiceLinesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInvoicesInvoiceLinesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internalInvoiceId(String internalInvoiceId) {
            if (internalInvoiceId == null) {
              throw new MissingRequiredPropertyException("GetInvoicesInvoiceLinesResult", "internalInvoiceId");
            }
            this.internalInvoiceId = internalInvoiceId;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceLineCollections(List<GetInvoicesInvoiceLinesInvoiceLineCollection> invoiceLineCollections) {
            if (invoiceLineCollections == null) {
              throw new MissingRequiredPropertyException("GetInvoicesInvoiceLinesResult", "invoiceLineCollections");
            }
            this.invoiceLineCollections = invoiceLineCollections;
            return this;
        }
        public Builder invoiceLineCollections(GetInvoicesInvoiceLinesInvoiceLineCollection... invoiceLineCollections) {
            return invoiceLineCollections(List.of(invoiceLineCollections));
        }
        @CustomType.Setter
        public Builder ospHomeRegion(String ospHomeRegion) {
            if (ospHomeRegion == null) {
              throw new MissingRequiredPropertyException("GetInvoicesInvoiceLinesResult", "ospHomeRegion");
            }
            this.ospHomeRegion = ospHomeRegion;
            return this;
        }
        public GetInvoicesInvoiceLinesResult build() {
            final var _resultValue = new GetInvoicesInvoiceLinesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.internalInvoiceId = internalInvoiceId;
            _resultValue.invoiceLineCollections = invoiceLineCollections;
            _resultValue.ospHomeRegion = ospHomeRegion;
            return _resultValue;
        }
    }
}
