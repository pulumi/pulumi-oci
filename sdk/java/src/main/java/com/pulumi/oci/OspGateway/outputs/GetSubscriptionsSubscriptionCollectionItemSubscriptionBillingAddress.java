// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OspGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionsSubscriptionCollectionItemSubscriptionBillingAddress {
    /**
     * @return Address identifier.
     * 
     */
    private String addressKey;
    /**
     * @return Name of the city.
     * 
     */
    private String city;
    /**
     * @return Name of the customer company.
     * 
     */
    private String companyName;
    /**
     * @return Contributor class of the customer company.
     * 
     */
    private String contributorClass;
    /**
     * @return Country of the address.
     * 
     */
    private String country;
    /**
     * @return County of the address.
     * 
     */
    private String county;
    /**
     * @return Department name of the customer company.
     * 
     */
    private String departmentName;
    /**
     * @return The email address of the paypal user.
     * 
     */
    private String emailAddress;
    /**
     * @return First name of the paypal user.
     * 
     */
    private String firstName;
    /**
     * @return Internal number of the customer company.
     * 
     */
    private String internalNumber;
    /**
     * @return Job title of the contact person.
     * 
     */
    private String jobTitle;
    /**
     * @return Last name of the paypal user.
     * 
     */
    private String lastName;
    /**
     * @return Address line 1.
     * 
     */
    private String line1;
    /**
     * @return Address line 2.
     * 
     */
    private String line2;
    /**
     * @return Address line 3.
     * 
     */
    private String line3;
    /**
     * @return Address line 4.
     * 
     */
    private String line4;
    /**
     * @return Middle name of the contact person.
     * 
     */
    private String middleName;
    /**
     * @return Municipal Inscription.
     * 
     */
    private String municipalInscription;
    /**
     * @return Phone country code of the contact person.
     * 
     */
    private String phoneCountryCode;
    /**
     * @return Phone number of the contact person.
     * 
     */
    private String phoneNumber;
    /**
     * @return Post code of the address.
     * 
     */
    private String postalCode;
    /**
     * @return Province of the address.
     * 
     */
    private String province;
    /**
     * @return State of the address.
     * 
     */
    private String state;
    /**
     * @return State Inscription.
     * 
     */
    private String stateInscription;
    /**
     * @return Street name of the address.
     * 
     */
    private String streetName;
    /**
     * @return Street number of the address.
     * 
     */
    private String streetNumber;

    private GetSubscriptionsSubscriptionCollectionItemSubscriptionBillingAddress() {}
    /**
     * @return Address identifier.
     * 
     */
    public String addressKey() {
        return this.addressKey;
    }
    /**
     * @return Name of the city.
     * 
     */
    public String city() {
        return this.city;
    }
    /**
     * @return Name of the customer company.
     * 
     */
    public String companyName() {
        return this.companyName;
    }
    /**
     * @return Contributor class of the customer company.
     * 
     */
    public String contributorClass() {
        return this.contributorClass;
    }
    /**
     * @return Country of the address.
     * 
     */
    public String country() {
        return this.country;
    }
    /**
     * @return County of the address.
     * 
     */
    public String county() {
        return this.county;
    }
    /**
     * @return Department name of the customer company.
     * 
     */
    public String departmentName() {
        return this.departmentName;
    }
    /**
     * @return The email address of the paypal user.
     * 
     */
    public String emailAddress() {
        return this.emailAddress;
    }
    /**
     * @return First name of the paypal user.
     * 
     */
    public String firstName() {
        return this.firstName;
    }
    /**
     * @return Internal number of the customer company.
     * 
     */
    public String internalNumber() {
        return this.internalNumber;
    }
    /**
     * @return Job title of the contact person.
     * 
     */
    public String jobTitle() {
        return this.jobTitle;
    }
    /**
     * @return Last name of the paypal user.
     * 
     */
    public String lastName() {
        return this.lastName;
    }
    /**
     * @return Address line 1.
     * 
     */
    public String line1() {
        return this.line1;
    }
    /**
     * @return Address line 2.
     * 
     */
    public String line2() {
        return this.line2;
    }
    /**
     * @return Address line 3.
     * 
     */
    public String line3() {
        return this.line3;
    }
    /**
     * @return Address line 4.
     * 
     */
    public String line4() {
        return this.line4;
    }
    /**
     * @return Middle name of the contact person.
     * 
     */
    public String middleName() {
        return this.middleName;
    }
    /**
     * @return Municipal Inscription.
     * 
     */
    public String municipalInscription() {
        return this.municipalInscription;
    }
    /**
     * @return Phone country code of the contact person.
     * 
     */
    public String phoneCountryCode() {
        return this.phoneCountryCode;
    }
    /**
     * @return Phone number of the contact person.
     * 
     */
    public String phoneNumber() {
        return this.phoneNumber;
    }
    /**
     * @return Post code of the address.
     * 
     */
    public String postalCode() {
        return this.postalCode;
    }
    /**
     * @return Province of the address.
     * 
     */
    public String province() {
        return this.province;
    }
    /**
     * @return State of the address.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return State Inscription.
     * 
     */
    public String stateInscription() {
        return this.stateInscription;
    }
    /**
     * @return Street name of the address.
     * 
     */
    public String streetName() {
        return this.streetName;
    }
    /**
     * @return Street number of the address.
     * 
     */
    public String streetNumber() {
        return this.streetNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsSubscriptionCollectionItemSubscriptionBillingAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressKey;
        private String city;
        private String companyName;
        private String contributorClass;
        private String country;
        private String county;
        private String departmentName;
        private String emailAddress;
        private String firstName;
        private String internalNumber;
        private String jobTitle;
        private String lastName;
        private String line1;
        private String line2;
        private String line3;
        private String line4;
        private String middleName;
        private String municipalInscription;
        private String phoneCountryCode;
        private String phoneNumber;
        private String postalCode;
        private String province;
        private String state;
        private String stateInscription;
        private String streetName;
        private String streetNumber;
        public Builder() {}
        public Builder(GetSubscriptionsSubscriptionCollectionItemSubscriptionBillingAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressKey = defaults.addressKey;
    	      this.city = defaults.city;
    	      this.companyName = defaults.companyName;
    	      this.contributorClass = defaults.contributorClass;
    	      this.country = defaults.country;
    	      this.county = defaults.county;
    	      this.departmentName = defaults.departmentName;
    	      this.emailAddress = defaults.emailAddress;
    	      this.firstName = defaults.firstName;
    	      this.internalNumber = defaults.internalNumber;
    	      this.jobTitle = defaults.jobTitle;
    	      this.lastName = defaults.lastName;
    	      this.line1 = defaults.line1;
    	      this.line2 = defaults.line2;
    	      this.line3 = defaults.line3;
    	      this.line4 = defaults.line4;
    	      this.middleName = defaults.middleName;
    	      this.municipalInscription = defaults.municipalInscription;
    	      this.phoneCountryCode = defaults.phoneCountryCode;
    	      this.phoneNumber = defaults.phoneNumber;
    	      this.postalCode = defaults.postalCode;
    	      this.province = defaults.province;
    	      this.state = defaults.state;
    	      this.stateInscription = defaults.stateInscription;
    	      this.streetName = defaults.streetName;
    	      this.streetNumber = defaults.streetNumber;
        }

        @CustomType.Setter
        public Builder addressKey(String addressKey) {
            this.addressKey = Objects.requireNonNull(addressKey);
            return this;
        }
        @CustomType.Setter
        public Builder city(String city) {
            this.city = Objects.requireNonNull(city);
            return this;
        }
        @CustomType.Setter
        public Builder companyName(String companyName) {
            this.companyName = Objects.requireNonNull(companyName);
            return this;
        }
        @CustomType.Setter
        public Builder contributorClass(String contributorClass) {
            this.contributorClass = Objects.requireNonNull(contributorClass);
            return this;
        }
        @CustomType.Setter
        public Builder country(String country) {
            this.country = Objects.requireNonNull(country);
            return this;
        }
        @CustomType.Setter
        public Builder county(String county) {
            this.county = Objects.requireNonNull(county);
            return this;
        }
        @CustomType.Setter
        public Builder departmentName(String departmentName) {
            this.departmentName = Objects.requireNonNull(departmentName);
            return this;
        }
        @CustomType.Setter
        public Builder emailAddress(String emailAddress) {
            this.emailAddress = Objects.requireNonNull(emailAddress);
            return this;
        }
        @CustomType.Setter
        public Builder firstName(String firstName) {
            this.firstName = Objects.requireNonNull(firstName);
            return this;
        }
        @CustomType.Setter
        public Builder internalNumber(String internalNumber) {
            this.internalNumber = Objects.requireNonNull(internalNumber);
            return this;
        }
        @CustomType.Setter
        public Builder jobTitle(String jobTitle) {
            this.jobTitle = Objects.requireNonNull(jobTitle);
            return this;
        }
        @CustomType.Setter
        public Builder lastName(String lastName) {
            this.lastName = Objects.requireNonNull(lastName);
            return this;
        }
        @CustomType.Setter
        public Builder line1(String line1) {
            this.line1 = Objects.requireNonNull(line1);
            return this;
        }
        @CustomType.Setter
        public Builder line2(String line2) {
            this.line2 = Objects.requireNonNull(line2);
            return this;
        }
        @CustomType.Setter
        public Builder line3(String line3) {
            this.line3 = Objects.requireNonNull(line3);
            return this;
        }
        @CustomType.Setter
        public Builder line4(String line4) {
            this.line4 = Objects.requireNonNull(line4);
            return this;
        }
        @CustomType.Setter
        public Builder middleName(String middleName) {
            this.middleName = Objects.requireNonNull(middleName);
            return this;
        }
        @CustomType.Setter
        public Builder municipalInscription(String municipalInscription) {
            this.municipalInscription = Objects.requireNonNull(municipalInscription);
            return this;
        }
        @CustomType.Setter
        public Builder phoneCountryCode(String phoneCountryCode) {
            this.phoneCountryCode = Objects.requireNonNull(phoneCountryCode);
            return this;
        }
        @CustomType.Setter
        public Builder phoneNumber(String phoneNumber) {
            this.phoneNumber = Objects.requireNonNull(phoneNumber);
            return this;
        }
        @CustomType.Setter
        public Builder postalCode(String postalCode) {
            this.postalCode = Objects.requireNonNull(postalCode);
            return this;
        }
        @CustomType.Setter
        public Builder province(String province) {
            this.province = Objects.requireNonNull(province);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder stateInscription(String stateInscription) {
            this.stateInscription = Objects.requireNonNull(stateInscription);
            return this;
        }
        @CustomType.Setter
        public Builder streetName(String streetName) {
            this.streetName = Objects.requireNonNull(streetName);
            return this;
        }
        @CustomType.Setter
        public Builder streetNumber(String streetNumber) {
            this.streetNumber = Objects.requireNonNull(streetNumber);
            return this;
        }
        public GetSubscriptionsSubscriptionCollectionItemSubscriptionBillingAddress build() {
            final var _resultValue = new GetSubscriptionsSubscriptionCollectionItemSubscriptionBillingAddress();
            _resultValue.addressKey = addressKey;
            _resultValue.city = city;
            _resultValue.companyName = companyName;
            _resultValue.contributorClass = contributorClass;
            _resultValue.country = country;
            _resultValue.county = county;
            _resultValue.departmentName = departmentName;
            _resultValue.emailAddress = emailAddress;
            _resultValue.firstName = firstName;
            _resultValue.internalNumber = internalNumber;
            _resultValue.jobTitle = jobTitle;
            _resultValue.lastName = lastName;
            _resultValue.line1 = line1;
            _resultValue.line2 = line2;
            _resultValue.line3 = line3;
            _resultValue.line4 = line4;
            _resultValue.middleName = middleName;
            _resultValue.municipalInscription = municipalInscription;
            _resultValue.phoneCountryCode = phoneCountryCode;
            _resultValue.phoneNumber = phoneNumber;
            _resultValue.postalCode = postalCode;
            _resultValue.province = province;
            _resultValue.state = state;
            _resultValue.stateInscription = stateInscription;
            _resultValue.streetName = streetName;
            _resultValue.streetNumber = streetNumber;
            return _resultValue;
        }
    }
}
