// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OspGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SubscriptionSubscriptionPaymentOption {
    /**
     * @return (Updatable) Credit card type.
     * 
     */
    private @Nullable String creditCardType;
    /**
     * @return (Updatable) The email address of the paypal user.
     * 
     */
    private @Nullable String emailAddress;
    /**
     * @return (Updatable) Agreement id for the paypal account.
     * 
     */
    private @Nullable String extBillingAgreementId;
    /**
     * @return (Updatable) First name of the paypal user.
     * 
     */
    private @Nullable String firstName;
    /**
     * @return (Updatable) Last four digits of the card.
     * 
     */
    private @Nullable String lastDigits;
    /**
     * @return (Updatable) Last name of the paypal user.
     * 
     */
    private @Nullable String lastName;
    /**
     * @return (Updatable) Name on the credit card.
     * 
     */
    private @Nullable String nameOnCard;
    /**
     * @return (Updatable) Payment method
     * 
     */
    private String paymentMethod;
    /**
     * @return (Updatable) Expired date of the credit card.
     * 
     */
    private @Nullable String timeExpiration;
    /**
     * @return (Updatable) Wallet instrument internal id.
     * 
     */
    private @Nullable String walletInstrumentId;
    /**
     * @return (Updatable) Wallet transaction id.
     * 
     */
    private @Nullable String walletTransactionId;

    private SubscriptionSubscriptionPaymentOption() {}
    /**
     * @return (Updatable) Credit card type.
     * 
     */
    public Optional<String> creditCardType() {
        return Optional.ofNullable(this.creditCardType);
    }
    /**
     * @return (Updatable) The email address of the paypal user.
     * 
     */
    public Optional<String> emailAddress() {
        return Optional.ofNullable(this.emailAddress);
    }
    /**
     * @return (Updatable) Agreement id for the paypal account.
     * 
     */
    public Optional<String> extBillingAgreementId() {
        return Optional.ofNullable(this.extBillingAgreementId);
    }
    /**
     * @return (Updatable) First name of the paypal user.
     * 
     */
    public Optional<String> firstName() {
        return Optional.ofNullable(this.firstName);
    }
    /**
     * @return (Updatable) Last four digits of the card.
     * 
     */
    public Optional<String> lastDigits() {
        return Optional.ofNullable(this.lastDigits);
    }
    /**
     * @return (Updatable) Last name of the paypal user.
     * 
     */
    public Optional<String> lastName() {
        return Optional.ofNullable(this.lastName);
    }
    /**
     * @return (Updatable) Name on the credit card.
     * 
     */
    public Optional<String> nameOnCard() {
        return Optional.ofNullable(this.nameOnCard);
    }
    /**
     * @return (Updatable) Payment method
     * 
     */
    public String paymentMethod() {
        return this.paymentMethod;
    }
    /**
     * @return (Updatable) Expired date of the credit card.
     * 
     */
    public Optional<String> timeExpiration() {
        return Optional.ofNullable(this.timeExpiration);
    }
    /**
     * @return (Updatable) Wallet instrument internal id.
     * 
     */
    public Optional<String> walletInstrumentId() {
        return Optional.ofNullable(this.walletInstrumentId);
    }
    /**
     * @return (Updatable) Wallet transaction id.
     * 
     */
    public Optional<String> walletTransactionId() {
        return Optional.ofNullable(this.walletTransactionId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionSubscriptionPaymentOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String creditCardType;
        private @Nullable String emailAddress;
        private @Nullable String extBillingAgreementId;
        private @Nullable String firstName;
        private @Nullable String lastDigits;
        private @Nullable String lastName;
        private @Nullable String nameOnCard;
        private String paymentMethod;
        private @Nullable String timeExpiration;
        private @Nullable String walletInstrumentId;
        private @Nullable String walletTransactionId;
        public Builder() {}
        public Builder(SubscriptionSubscriptionPaymentOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creditCardType = defaults.creditCardType;
    	      this.emailAddress = defaults.emailAddress;
    	      this.extBillingAgreementId = defaults.extBillingAgreementId;
    	      this.firstName = defaults.firstName;
    	      this.lastDigits = defaults.lastDigits;
    	      this.lastName = defaults.lastName;
    	      this.nameOnCard = defaults.nameOnCard;
    	      this.paymentMethod = defaults.paymentMethod;
    	      this.timeExpiration = defaults.timeExpiration;
    	      this.walletInstrumentId = defaults.walletInstrumentId;
    	      this.walletTransactionId = defaults.walletTransactionId;
        }

        @CustomType.Setter
        public Builder creditCardType(@Nullable String creditCardType) {
            this.creditCardType = creditCardType;
            return this;
        }
        @CustomType.Setter
        public Builder emailAddress(@Nullable String emailAddress) {
            this.emailAddress = emailAddress;
            return this;
        }
        @CustomType.Setter
        public Builder extBillingAgreementId(@Nullable String extBillingAgreementId) {
            this.extBillingAgreementId = extBillingAgreementId;
            return this;
        }
        @CustomType.Setter
        public Builder firstName(@Nullable String firstName) {
            this.firstName = firstName;
            return this;
        }
        @CustomType.Setter
        public Builder lastDigits(@Nullable String lastDigits) {
            this.lastDigits = lastDigits;
            return this;
        }
        @CustomType.Setter
        public Builder lastName(@Nullable String lastName) {
            this.lastName = lastName;
            return this;
        }
        @CustomType.Setter
        public Builder nameOnCard(@Nullable String nameOnCard) {
            this.nameOnCard = nameOnCard;
            return this;
        }
        @CustomType.Setter
        public Builder paymentMethod(String paymentMethod) {
            this.paymentMethod = Objects.requireNonNull(paymentMethod);
            return this;
        }
        @CustomType.Setter
        public Builder timeExpiration(@Nullable String timeExpiration) {
            this.timeExpiration = timeExpiration;
            return this;
        }
        @CustomType.Setter
        public Builder walletInstrumentId(@Nullable String walletInstrumentId) {
            this.walletInstrumentId = walletInstrumentId;
            return this;
        }
        @CustomType.Setter
        public Builder walletTransactionId(@Nullable String walletTransactionId) {
            this.walletTransactionId = walletTransactionId;
            return this;
        }
        public SubscriptionSubscriptionPaymentOption build() {
            final var o = new SubscriptionSubscriptionPaymentOption();
            o.creditCardType = creditCardType;
            o.emailAddress = emailAddress;
            o.extBillingAgreementId = extBillingAgreementId;
            o.firstName = firstName;
            o.lastDigits = lastDigits;
            o.lastName = lastName;
            o.nameOnCard = nameOnCard;
            o.paymentMethod = paymentMethod;
            o.timeExpiration = timeExpiration;
            o.walletInstrumentId = walletInstrumentId;
            o.walletTransactionId = walletTransactionId;
            return o;
        }
    }
}
