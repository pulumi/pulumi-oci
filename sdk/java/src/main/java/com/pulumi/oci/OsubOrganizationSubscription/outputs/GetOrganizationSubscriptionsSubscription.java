// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubOrganizationSubscription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsubOrganizationSubscription.outputs.GetOrganizationSubscriptionsSubscriptionCurrency;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOrganizationSubscriptionsSubscription {
    /**
     * @return Currency details
     * 
     */
    private @Nullable List<GetOrganizationSubscriptionsSubscriptionCurrency> currencies;
    /**
     * @return SPM internal Subscription ID
     * 
     */
    private @Nullable String id;
    /**
     * @return Customer friendly service name provided by PRG
     * 
     */
    private @Nullable String serviceName;
    /**
     * @return Status of the plan
     * 
     */
    private @Nullable String status;
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    private @Nullable String timeEnd;
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    private @Nullable String timeStart;
    /**
     * @return Total aggregate TCLV of all lines for the subscription including expired, active, and signed
     * 
     */
    private @Nullable String totalValue;
    /**
     * @return Subscription Type i.e. IAAS,SAAS,PAAS
     * 
     */
    private @Nullable String type;

    private GetOrganizationSubscriptionsSubscription() {}
    /**
     * @return Currency details
     * 
     */
    public List<GetOrganizationSubscriptionsSubscriptionCurrency> currencies() {
        return this.currencies == null ? List.of() : this.currencies;
    }
    /**
     * @return SPM internal Subscription ID
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Customer friendly service name provided by PRG
     * 
     */
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }
    /**
     * @return Status of the plan
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    public Optional<String> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }
    /**
     * @return Total aggregate TCLV of all lines for the subscription including expired, active, and signed
     * 
     */
    public Optional<String> totalValue() {
        return Optional.ofNullable(this.totalValue);
    }
    /**
     * @return Subscription Type i.e. IAAS,SAAS,PAAS
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationSubscriptionsSubscription defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetOrganizationSubscriptionsSubscriptionCurrency> currencies;
        private @Nullable String id;
        private @Nullable String serviceName;
        private @Nullable String status;
        private @Nullable String timeEnd;
        private @Nullable String timeStart;
        private @Nullable String totalValue;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetOrganizationSubscriptionsSubscription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currencies = defaults.currencies;
    	      this.id = defaults.id;
    	      this.serviceName = defaults.serviceName;
    	      this.status = defaults.status;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
    	      this.totalValue = defaults.totalValue;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder currencies(@Nullable List<GetOrganizationSubscriptionsSubscriptionCurrency> currencies) {
            this.currencies = currencies;
            return this;
        }
        public Builder currencies(GetOrganizationSubscriptionsSubscriptionCurrency... currencies) {
            return currencies(List.of(currencies));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(@Nullable String timeEnd) {
            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(@Nullable String timeStart) {
            this.timeStart = timeStart;
            return this;
        }
        @CustomType.Setter
        public Builder totalValue(@Nullable String totalValue) {
            this.totalValue = totalValue;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetOrganizationSubscriptionsSubscription build() {
            final var o = new GetOrganizationSubscriptionsSubscription();
            o.currencies = currencies;
            o.id = id;
            o.serviceName = serviceName;
            o.status = status;
            o.timeEnd = timeEnd;
            o.timeStart = timeStart;
            o.totalValue = totalValue;
            o.type = type;
            return o;
        }
    }
}
