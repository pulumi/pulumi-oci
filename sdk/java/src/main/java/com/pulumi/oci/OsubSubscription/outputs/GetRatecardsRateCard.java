// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsubSubscription.outputs.GetRatecardsRateCardCurrency;
import com.pulumi.oci.OsubSubscription.outputs.GetRatecardsRateCardProduct;
import com.pulumi.oci.OsubSubscription.outputs.GetRatecardsRateCardRateCardTier;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRatecardsRateCard {
    /**
     * @return Currency details
     * 
     */
    private List<GetRatecardsRateCardCurrency> currencies;
    /**
     * @return Rate card discretionary discount percentage
     * 
     */
    private String discretionaryDiscountPercentage;
    /**
     * @return Rate card price tier flag
     * 
     */
    private Boolean isTier;
    /**
     * @return Rate card tier net unit price
     * 
     */
    private String netUnitPrice;
    /**
     * @return Rate card tier overage price
     * 
     */
    private String overagePrice;
    /**
     * @return Product description
     * 
     */
    private List<GetRatecardsRateCardProduct> products;
    /**
     * @return List of tiered rate card prices
     * 
     */
    private List<GetRatecardsRateCardRateCardTier> rateCardTiers;
    /**
     * @return Rate card end date
     * 
     */
    private String timeEnd;
    /**
     * @return Rate card start date
     * 
     */
    private String timeStart;

    private GetRatecardsRateCard() {}
    /**
     * @return Currency details
     * 
     */
    public List<GetRatecardsRateCardCurrency> currencies() {
        return this.currencies;
    }
    /**
     * @return Rate card discretionary discount percentage
     * 
     */
    public String discretionaryDiscountPercentage() {
        return this.discretionaryDiscountPercentage;
    }
    /**
     * @return Rate card price tier flag
     * 
     */
    public Boolean isTier() {
        return this.isTier;
    }
    /**
     * @return Rate card tier net unit price
     * 
     */
    public String netUnitPrice() {
        return this.netUnitPrice;
    }
    /**
     * @return Rate card tier overage price
     * 
     */
    public String overagePrice() {
        return this.overagePrice;
    }
    /**
     * @return Product description
     * 
     */
    public List<GetRatecardsRateCardProduct> products() {
        return this.products;
    }
    /**
     * @return List of tiered rate card prices
     * 
     */
    public List<GetRatecardsRateCardRateCardTier> rateCardTiers() {
        return this.rateCardTiers;
    }
    /**
     * @return Rate card end date
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Rate card start date
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRatecardsRateCard defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRatecardsRateCardCurrency> currencies;
        private String discretionaryDiscountPercentage;
        private Boolean isTier;
        private String netUnitPrice;
        private String overagePrice;
        private List<GetRatecardsRateCardProduct> products;
        private List<GetRatecardsRateCardRateCardTier> rateCardTiers;
        private String timeEnd;
        private String timeStart;
        public Builder() {}
        public Builder(GetRatecardsRateCard defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currencies = defaults.currencies;
    	      this.discretionaryDiscountPercentage = defaults.discretionaryDiscountPercentage;
    	      this.isTier = defaults.isTier;
    	      this.netUnitPrice = defaults.netUnitPrice;
    	      this.overagePrice = defaults.overagePrice;
    	      this.products = defaults.products;
    	      this.rateCardTiers = defaults.rateCardTiers;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder currencies(List<GetRatecardsRateCardCurrency> currencies) {
            this.currencies = Objects.requireNonNull(currencies);
            return this;
        }
        public Builder currencies(GetRatecardsRateCardCurrency... currencies) {
            return currencies(List.of(currencies));
        }
        @CustomType.Setter
        public Builder discretionaryDiscountPercentage(String discretionaryDiscountPercentage) {
            this.discretionaryDiscountPercentage = Objects.requireNonNull(discretionaryDiscountPercentage);
            return this;
        }
        @CustomType.Setter
        public Builder isTier(Boolean isTier) {
            this.isTier = Objects.requireNonNull(isTier);
            return this;
        }
        @CustomType.Setter
        public Builder netUnitPrice(String netUnitPrice) {
            this.netUnitPrice = Objects.requireNonNull(netUnitPrice);
            return this;
        }
        @CustomType.Setter
        public Builder overagePrice(String overagePrice) {
            this.overagePrice = Objects.requireNonNull(overagePrice);
            return this;
        }
        @CustomType.Setter
        public Builder products(List<GetRatecardsRateCardProduct> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(GetRatecardsRateCardProduct... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder rateCardTiers(List<GetRatecardsRateCardRateCardTier> rateCardTiers) {
            this.rateCardTiers = Objects.requireNonNull(rateCardTiers);
            return this;
        }
        public Builder rateCardTiers(GetRatecardsRateCardRateCardTier... rateCardTiers) {
            return rateCardTiers(List.of(rateCardTiers));
        }
        @CustomType.Setter
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        public GetRatecardsRateCard build() {
            final var _resultValue = new GetRatecardsRateCard();
            _resultValue.currencies = currencies;
            _resultValue.discretionaryDiscountPercentage = discretionaryDiscountPercentage;
            _resultValue.isTier = isTier;
            _resultValue.netUnitPrice = netUnitPrice;
            _resultValue.overagePrice = overagePrice;
            _resultValue.products = products;
            _resultValue.rateCardTiers = rateCardTiers;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeStart = timeStart;
            return _resultValue;
        }
    }
}
