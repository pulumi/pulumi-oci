// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OsubSubscription.outputs.GetRatecardsFilter;
import com.pulumi.oci.OsubSubscription.outputs.GetRatecardsRateCard;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRatecardsResult {
    private String compartmentId;
    private @Nullable List<GetRatecardsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Product part numner
     * 
     */
    private @Nullable String partNumber;
    /**
     * @return The list of rate_cards.
     * 
     */
    private List<GetRatecardsRateCard> rateCards;
    private String subscriptionId;
    private @Nullable String timeFrom;
    private @Nullable String timeTo;
    private @Nullable String xOneOriginRegion;

    private GetRatecardsResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetRatecardsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Product part numner
     * 
     */
    public Optional<String> partNumber() {
        return Optional.ofNullable(this.partNumber);
    }
    /**
     * @return The list of rate_cards.
     * 
     */
    public List<GetRatecardsRateCard> rateCards() {
        return this.rateCards;
    }
    public String subscriptionId() {
        return this.subscriptionId;
    }
    public Optional<String> timeFrom() {
        return Optional.ofNullable(this.timeFrom);
    }
    public Optional<String> timeTo() {
        return Optional.ofNullable(this.timeTo);
    }
    public Optional<String> xOneOriginRegion() {
        return Optional.ofNullable(this.xOneOriginRegion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRatecardsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetRatecardsFilter> filters;
        private String id;
        private @Nullable String partNumber;
        private List<GetRatecardsRateCard> rateCards;
        private String subscriptionId;
        private @Nullable String timeFrom;
        private @Nullable String timeTo;
        private @Nullable String xOneOriginRegion;
        public Builder() {}
        public Builder(GetRatecardsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.partNumber = defaults.partNumber;
    	      this.rateCards = defaults.rateCards;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.timeFrom = defaults.timeFrom;
    	      this.timeTo = defaults.timeTo;
    	      this.xOneOriginRegion = defaults.xOneOriginRegion;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetRatecardsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetRatecardsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetRatecardsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRatecardsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder partNumber(@Nullable String partNumber) {

            this.partNumber = partNumber;
            return this;
        }
        @CustomType.Setter
        public Builder rateCards(List<GetRatecardsRateCard> rateCards) {
            if (rateCards == null) {
              throw new MissingRequiredPropertyException("GetRatecardsResult", "rateCards");
            }
            this.rateCards = rateCards;
            return this;
        }
        public Builder rateCards(GetRatecardsRateCard... rateCards) {
            return rateCards(List.of(rateCards));
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetRatecardsResult", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder timeFrom(@Nullable String timeFrom) {

            this.timeFrom = timeFrom;
            return this;
        }
        @CustomType.Setter
        public Builder timeTo(@Nullable String timeTo) {

            this.timeTo = timeTo;
            return this;
        }
        @CustomType.Setter
        public Builder xOneOriginRegion(@Nullable String xOneOriginRegion) {

            this.xOneOriginRegion = xOneOriginRegion;
            return this;
        }
        public GetRatecardsResult build() {
            final var _resultValue = new GetRatecardsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.partNumber = partNumber;
            _resultValue.rateCards = rateCards;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.timeFrom = timeFrom;
            _resultValue.timeTo = timeTo;
            _resultValue.xOneOriginRegion = xOneOriginRegion;
            return _resultValue;
        }
    }
}
