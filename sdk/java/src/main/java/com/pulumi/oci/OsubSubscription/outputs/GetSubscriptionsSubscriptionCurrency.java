// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionsSubscriptionCurrency {
    /**
     * @return Currency Code
     * 
     */
    private String isoCode;
    /**
     * @return Product name
     * 
     */
    private String name;
    /**
     * @return Standard Precision of the Currency
     * 
     */
    private String stdPrecision;

    private GetSubscriptionsSubscriptionCurrency() {}
    /**
     * @return Currency Code
     * 
     */
    public String isoCode() {
        return this.isoCode;
    }
    /**
     * @return Product name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Standard Precision of the Currency
     * 
     */
    public String stdPrecision() {
        return this.stdPrecision;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsSubscriptionCurrency defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String isoCode;
        private String name;
        private String stdPrecision;
        public Builder() {}
        public Builder(GetSubscriptionsSubscriptionCurrency defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isoCode = defaults.isoCode;
    	      this.name = defaults.name;
    	      this.stdPrecision = defaults.stdPrecision;
        }

        @CustomType.Setter
        public Builder isoCode(String isoCode) {
            if (isoCode == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscriptionCurrency", "isoCode");
            }
            this.isoCode = isoCode;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscriptionCurrency", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder stdPrecision(String stdPrecision) {
            if (stdPrecision == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscriptionCurrency", "stdPrecision");
            }
            this.stdPrecision = stdPrecision;
            return this;
        }
        public GetSubscriptionsSubscriptionCurrency build() {
            final var _resultValue = new GetSubscriptionsSubscriptionCurrency();
            _resultValue.isoCode = isoCode;
            _resultValue.name = name;
            _resultValue.stdPrecision = stdPrecision;
            return _resultValue;
        }
    }
}
