// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionsSubscriptionSubscribedServiceProduct {
    /**
     * @return Product name
     * 
     */
    private String name;
    /**
     * @return Product part numner
     * 
     */
    private String partNumber;
    /**
     * @return Product provisioning group
     * 
     */
    private String provisioningGroup;
    /**
     * @return Unit of measure
     * 
     */
    private String unitOfMeasure;

    private GetSubscriptionsSubscriptionSubscribedServiceProduct() {}
    /**
     * @return Product name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Product part numner
     * 
     */
    public String partNumber() {
        return this.partNumber;
    }
    /**
     * @return Product provisioning group
     * 
     */
    public String provisioningGroup() {
        return this.provisioningGroup;
    }
    /**
     * @return Unit of measure
     * 
     */
    public String unitOfMeasure() {
        return this.unitOfMeasure;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsSubscriptionSubscribedServiceProduct defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String partNumber;
        private String provisioningGroup;
        private String unitOfMeasure;
        public Builder() {}
        public Builder(GetSubscriptionsSubscriptionSubscribedServiceProduct defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.partNumber = defaults.partNumber;
    	      this.provisioningGroup = defaults.provisioningGroup;
    	      this.unitOfMeasure = defaults.unitOfMeasure;
        }

        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder partNumber(String partNumber) {
            this.partNumber = Objects.requireNonNull(partNumber);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningGroup(String provisioningGroup) {
            this.provisioningGroup = Objects.requireNonNull(provisioningGroup);
            return this;
        }
        @CustomType.Setter
        public Builder unitOfMeasure(String unitOfMeasure) {
            this.unitOfMeasure = Objects.requireNonNull(unitOfMeasure);
            return this;
        }
        public GetSubscriptionsSubscriptionSubscribedServiceProduct build() {
            final var o = new GetSubscriptionsSubscriptionSubscribedServiceProduct();
            o.name = name;
            o.partNumber = partNumber;
            o.provisioningGroup = provisioningGroup;
            o.unitOfMeasure = unitOfMeasure;
            return o;
        }
    }
}
