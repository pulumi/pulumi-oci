// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubUsage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsubUsage.outputs.GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage;
import com.pulumi.oci.OsubUsage.outputs.GetCommitmentAggregatedsComputedUsageAggregatedParentProduct;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCommitmentAggregatedsComputedUsageAggregated {
    /**
     * @return Aggregation of computed usages for the subscribed service.
     * 
     */
    private List<GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage> aggregatedComputedUsages;
    /**
     * @return Currency code
     * 
     */
    private String currencyCode;
    /**
     * @return Product part number for subscribed service line, called parent product.
     * 
     */
    private List<GetCommitmentAggregatedsComputedUsageAggregatedParentProduct> parentProducts;
    /**
     * @return Subscribed service line parent id
     * 
     */
    private String parentSubscribedServiceId;
    /**
     * @return Subscribed service asociated subscription plan number.
     * 
     */
    private String planNumber;
    /**
     * @return Subscribed services pricing model
     * 
     */
    private String pricingModel;
    /**
     * @return Inernal SPM Ratecard Id at line level
     * 
     */
    private String rateCardId;
    /**
     * @return Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
     * 
     */
    private String subscriptionId;
    /**
     * @return Subscribed services contract line end date, expressed in RFC 3339 timestamp format.
     * 
     */
    private String timeEnd;
    /**
     * @return Subscribed services contract line start date, expressed in RFC 3339 timestamp format.
     * 
     */
    private String timeStart;

    private GetCommitmentAggregatedsComputedUsageAggregated() {}
    /**
     * @return Aggregation of computed usages for the subscribed service.
     * 
     */
    public List<GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage> aggregatedComputedUsages() {
        return this.aggregatedComputedUsages;
    }
    /**
     * @return Currency code
     * 
     */
    public String currencyCode() {
        return this.currencyCode;
    }
    /**
     * @return Product part number for subscribed service line, called parent product.
     * 
     */
    public List<GetCommitmentAggregatedsComputedUsageAggregatedParentProduct> parentProducts() {
        return this.parentProducts;
    }
    /**
     * @return Subscribed service line parent id
     * 
     */
    public String parentSubscribedServiceId() {
        return this.parentSubscribedServiceId;
    }
    /**
     * @return Subscribed service asociated subscription plan number.
     * 
     */
    public String planNumber() {
        return this.planNumber;
    }
    /**
     * @return Subscribed services pricing model
     * 
     */
    public String pricingModel() {
        return this.pricingModel;
    }
    /**
     * @return Inernal SPM Ratecard Id at line level
     * 
     */
    public String rateCardId() {
        return this.rateCardId;
    }
    /**
     * @return Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM.
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return Subscribed services contract line end date, expressed in RFC 3339 timestamp format.
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Subscribed services contract line start date, expressed in RFC 3339 timestamp format.
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCommitmentAggregatedsComputedUsageAggregated defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage> aggregatedComputedUsages;
        private String currencyCode;
        private List<GetCommitmentAggregatedsComputedUsageAggregatedParentProduct> parentProducts;
        private String parentSubscribedServiceId;
        private String planNumber;
        private String pricingModel;
        private String rateCardId;
        private String subscriptionId;
        private String timeEnd;
        private String timeStart;
        public Builder() {}
        public Builder(GetCommitmentAggregatedsComputedUsageAggregated defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregatedComputedUsages = defaults.aggregatedComputedUsages;
    	      this.currencyCode = defaults.currencyCode;
    	      this.parentProducts = defaults.parentProducts;
    	      this.parentSubscribedServiceId = defaults.parentSubscribedServiceId;
    	      this.planNumber = defaults.planNumber;
    	      this.pricingModel = defaults.pricingModel;
    	      this.rateCardId = defaults.rateCardId;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder aggregatedComputedUsages(List<GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage> aggregatedComputedUsages) {
            this.aggregatedComputedUsages = Objects.requireNonNull(aggregatedComputedUsages);
            return this;
        }
        public Builder aggregatedComputedUsages(GetCommitmentAggregatedsComputedUsageAggregatedAggregatedComputedUsage... aggregatedComputedUsages) {
            return aggregatedComputedUsages(List.of(aggregatedComputedUsages));
        }
        @CustomType.Setter
        public Builder currencyCode(String currencyCode) {
            this.currencyCode = Objects.requireNonNull(currencyCode);
            return this;
        }
        @CustomType.Setter
        public Builder parentProducts(List<GetCommitmentAggregatedsComputedUsageAggregatedParentProduct> parentProducts) {
            this.parentProducts = Objects.requireNonNull(parentProducts);
            return this;
        }
        public Builder parentProducts(GetCommitmentAggregatedsComputedUsageAggregatedParentProduct... parentProducts) {
            return parentProducts(List.of(parentProducts));
        }
        @CustomType.Setter
        public Builder parentSubscribedServiceId(String parentSubscribedServiceId) {
            this.parentSubscribedServiceId = Objects.requireNonNull(parentSubscribedServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder planNumber(String planNumber) {
            this.planNumber = Objects.requireNonNull(planNumber);
            return this;
        }
        @CustomType.Setter
        public Builder pricingModel(String pricingModel) {
            this.pricingModel = Objects.requireNonNull(pricingModel);
            return this;
        }
        @CustomType.Setter
        public Builder rateCardId(String rateCardId) {
            this.rateCardId = Objects.requireNonNull(rateCardId);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        public GetCommitmentAggregatedsComputedUsageAggregated build() {
            final var _resultValue = new GetCommitmentAggregatedsComputedUsageAggregated();
            _resultValue.aggregatedComputedUsages = aggregatedComputedUsages;
            _resultValue.currencyCode = currencyCode;
            _resultValue.parentProducts = parentProducts;
            _resultValue.parentSubscribedServiceId = parentSubscribedServiceId;
            _resultValue.planNumber = planNumber;
            _resultValue.pricingModel = pricingModel;
            _resultValue.rateCardId = rateCardId;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeStart = timeStart;
            return _resultValue;
        }
    }
}
