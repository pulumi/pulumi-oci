// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Psql.inputs.DbSystemCredentialsPasswordDetailsArgs;
import java.lang.String;
import java.util.Objects;


public final class DbSystemCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbSystemCredentialsArgs Empty = new DbSystemCredentialsArgs();

    /**
     * Details for the DbSystem password. Password can be passed as `VaultSecretPasswordDetails`(Vault) or `PlainTextPasswordDetails`.
     * 
     */
    @Import(name="passwordDetails", required=true)
    private Output<DbSystemCredentialsPasswordDetailsArgs> passwordDetails;

    /**
     * @return Details for the DbSystem password. Password can be passed as `VaultSecretPasswordDetails`(Vault) or `PlainTextPasswordDetails`.
     * 
     */
    public Output<DbSystemCredentialsPasswordDetailsArgs> passwordDetails() {
        return this.passwordDetails;
    }

    /**
     * The DB system username.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return The DB system username.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private DbSystemCredentialsArgs() {}

    private DbSystemCredentialsArgs(DbSystemCredentialsArgs $) {
        this.passwordDetails = $.passwordDetails;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbSystemCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbSystemCredentialsArgs $;

        public Builder() {
            $ = new DbSystemCredentialsArgs();
        }

        public Builder(DbSystemCredentialsArgs defaults) {
            $ = new DbSystemCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param passwordDetails Details for the DbSystem password. Password can be passed as `VaultSecretPasswordDetails`(Vault) or `PlainTextPasswordDetails`.
         * 
         * @return builder
         * 
         */
        public Builder passwordDetails(Output<DbSystemCredentialsPasswordDetailsArgs> passwordDetails) {
            $.passwordDetails = passwordDetails;
            return this;
        }

        /**
         * @param passwordDetails Details for the DbSystem password. Password can be passed as `VaultSecretPasswordDetails`(Vault) or `PlainTextPasswordDetails`.
         * 
         * @return builder
         * 
         */
        public Builder passwordDetails(DbSystemCredentialsPasswordDetailsArgs passwordDetails) {
            return passwordDetails(Output.of(passwordDetails));
        }

        /**
         * @param username The DB system username.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The DB system username.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public DbSystemCredentialsArgs build() {
            if ($.passwordDetails == null) {
                throw new MissingRequiredPropertyException("DbSystemCredentialsArgs", "passwordDetails");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("DbSystemCredentialsArgs", "username");
            }
            return $;
        }
    }

}
