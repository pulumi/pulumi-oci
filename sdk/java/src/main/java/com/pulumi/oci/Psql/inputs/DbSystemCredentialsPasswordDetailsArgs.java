// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbSystemCredentialsPasswordDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbSystemCredentialsPasswordDetailsArgs Empty = new DbSystemCredentialsPasswordDetailsArgs();

    /**
     * The database system password.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The database system password.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The password type.
     * 
     */
    @Import(name="passwordType", required=true)
    private Output<String> passwordType;

    /**
     * @return The password type.
     * 
     */
    public Output<String> passwordType() {
        return this.passwordType;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret where the password is stored.
     * 
     */
    @Import(name="secretId")
    private @Nullable Output<String> secretId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret where the password is stored.
     * 
     */
    public Optional<Output<String>> secretId() {
        return Optional.ofNullable(this.secretId);
    }

    /**
     * The secret version of the stored password.
     * 
     */
    @Import(name="secretVersion")
    private @Nullable Output<String> secretVersion;

    /**
     * @return The secret version of the stored password.
     * 
     */
    public Optional<Output<String>> secretVersion() {
        return Optional.ofNullable(this.secretVersion);
    }

    private DbSystemCredentialsPasswordDetailsArgs() {}

    private DbSystemCredentialsPasswordDetailsArgs(DbSystemCredentialsPasswordDetailsArgs $) {
        this.password = $.password;
        this.passwordType = $.passwordType;
        this.secretId = $.secretId;
        this.secretVersion = $.secretVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbSystemCredentialsPasswordDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbSystemCredentialsPasswordDetailsArgs $;

        public Builder() {
            $ = new DbSystemCredentialsPasswordDetailsArgs();
        }

        public Builder(DbSystemCredentialsPasswordDetailsArgs defaults) {
            $ = new DbSystemCredentialsPasswordDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password The database system password.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The database system password.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param passwordType The password type.
         * 
         * @return builder
         * 
         */
        public Builder passwordType(Output<String> passwordType) {
            $.passwordType = passwordType;
            return this;
        }

        /**
         * @param passwordType The password type.
         * 
         * @return builder
         * 
         */
        public Builder passwordType(String passwordType) {
            return passwordType(Output.of(passwordType));
        }

        /**
         * @param secretId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret where the password is stored.
         * 
         * @return builder
         * 
         */
        public Builder secretId(@Nullable Output<String> secretId) {
            $.secretId = secretId;
            return this;
        }

        /**
         * @param secretId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret where the password is stored.
         * 
         * @return builder
         * 
         */
        public Builder secretId(String secretId) {
            return secretId(Output.of(secretId));
        }

        /**
         * @param secretVersion The secret version of the stored password.
         * 
         * @return builder
         * 
         */
        public Builder secretVersion(@Nullable Output<String> secretVersion) {
            $.secretVersion = secretVersion;
            return this;
        }

        /**
         * @param secretVersion The secret version of the stored password.
         * 
         * @return builder
         * 
         */
        public Builder secretVersion(String secretVersion) {
            return secretVersion(Output.of(secretVersion));
        }

        public DbSystemCredentialsPasswordDetailsArgs build() {
            if ($.passwordType == null) {
                throw new MissingRequiredPropertyException("DbSystemCredentialsPasswordDetailsArgs", "passwordType");
            }
            return $;
        }
    }

}
