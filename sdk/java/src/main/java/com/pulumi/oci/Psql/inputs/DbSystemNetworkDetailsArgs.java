// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbSystemNetworkDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbSystemNetworkDetailsArgs Empty = new DbSystemNetworkDetailsArgs();

    /**
     * (Updatable) List of customer Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the database system.
     * 
     */
    @Import(name="nsgIds")
    private @Nullable Output<List<String>> nsgIds;

    /**
     * @return (Updatable) List of customer Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the database system.
     * 
     */
    public Optional<Output<List<String>>> nsgIds() {
        return Optional.ofNullable(this.nsgIds);
    }

    /**
     * Private IP in customer subnet. The value is optional. If the IP is not provided, the IP will be chosen from the available IP addresses from the specified subnet.
     * 
     */
    @Import(name="primaryDbEndpointPrivateIp")
    private @Nullable Output<String> primaryDbEndpointPrivateIp;

    /**
     * @return Private IP in customer subnet. The value is optional. If the IP is not provided, the IP will be chosen from the available IP addresses from the specified subnet.
     * 
     */
    public Optional<Output<String>> primaryDbEndpointPrivateIp() {
        return Optional.ofNullable(this.primaryDbEndpointPrivateIp);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer subnet associated with the database system.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer subnet associated with the database system.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private DbSystemNetworkDetailsArgs() {}

    private DbSystemNetworkDetailsArgs(DbSystemNetworkDetailsArgs $) {
        this.nsgIds = $.nsgIds;
        this.primaryDbEndpointPrivateIp = $.primaryDbEndpointPrivateIp;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbSystemNetworkDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbSystemNetworkDetailsArgs $;

        public Builder() {
            $ = new DbSystemNetworkDetailsArgs();
        }

        public Builder(DbSystemNetworkDetailsArgs defaults) {
            $ = new DbSystemNetworkDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nsgIds (Updatable) List of customer Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the database system.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(@Nullable Output<List<String>> nsgIds) {
            $.nsgIds = nsgIds;
            return this;
        }

        /**
         * @param nsgIds (Updatable) List of customer Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the database system.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(List<String> nsgIds) {
            return nsgIds(Output.of(nsgIds));
        }

        /**
         * @param nsgIds (Updatable) List of customer Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the database system.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }

        /**
         * @param primaryDbEndpointPrivateIp Private IP in customer subnet. The value is optional. If the IP is not provided, the IP will be chosen from the available IP addresses from the specified subnet.
         * 
         * @return builder
         * 
         */
        public Builder primaryDbEndpointPrivateIp(@Nullable Output<String> primaryDbEndpointPrivateIp) {
            $.primaryDbEndpointPrivateIp = primaryDbEndpointPrivateIp;
            return this;
        }

        /**
         * @param primaryDbEndpointPrivateIp Private IP in customer subnet. The value is optional. If the IP is not provided, the IP will be chosen from the available IP addresses from the specified subnet.
         * 
         * @return builder
         * 
         */
        public Builder primaryDbEndpointPrivateIp(String primaryDbEndpointPrivateIp) {
            return primaryDbEndpointPrivateIp(Output.of(primaryDbEndpointPrivateIp));
        }

        /**
         * @param subnetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer subnet associated with the database system.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer subnet associated with the database system.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public DbSystemNetworkDetailsArgs build() {
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("DbSystemNetworkDetailsArgs", "subnetId");
            }
            return $;
        }
    }

}
