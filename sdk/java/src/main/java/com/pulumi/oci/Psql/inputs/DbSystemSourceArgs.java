// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbSystemSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbSystemSourceArgs Empty = new DbSystemSourceArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system backup.
     * 
     */
    @Import(name="backupId")
    private @Nullable Output<String> backupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system backup.
     * 
     */
    public Optional<Output<String>> backupId() {
        return Optional.ofNullable(this.backupId);
    }

    /**
     * Deprecated. Don&#39;t use.
     * 
     */
    @Import(name="isHavingRestoreConfigOverrides")
    private @Nullable Output<Boolean> isHavingRestoreConfigOverrides;

    /**
     * @return Deprecated. Don&#39;t use.
     * 
     */
    public Optional<Output<Boolean>> isHavingRestoreConfigOverrides() {
        return Optional.ofNullable(this.isHavingRestoreConfigOverrides);
    }

    /**
     * The source descriminator.
     * 
     */
    @Import(name="sourceType", required=true)
    private Output<String> sourceType;

    /**
     * @return The source descriminator.
     * 
     */
    public Output<String> sourceType() {
        return this.sourceType;
    }

    private DbSystemSourceArgs() {}

    private DbSystemSourceArgs(DbSystemSourceArgs $) {
        this.backupId = $.backupId;
        this.isHavingRestoreConfigOverrides = $.isHavingRestoreConfigOverrides;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbSystemSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbSystemSourceArgs $;

        public Builder() {
            $ = new DbSystemSourceArgs();
        }

        public Builder(DbSystemSourceArgs defaults) {
            $ = new DbSystemSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system backup.
         * 
         * @return builder
         * 
         */
        public Builder backupId(@Nullable Output<String> backupId) {
            $.backupId = backupId;
            return this;
        }

        /**
         * @param backupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system backup.
         * 
         * @return builder
         * 
         */
        public Builder backupId(String backupId) {
            return backupId(Output.of(backupId));
        }

        /**
         * @param isHavingRestoreConfigOverrides Deprecated. Don&#39;t use.
         * 
         * @return builder
         * 
         */
        public Builder isHavingRestoreConfigOverrides(@Nullable Output<Boolean> isHavingRestoreConfigOverrides) {
            $.isHavingRestoreConfigOverrides = isHavingRestoreConfigOverrides;
            return this;
        }

        /**
         * @param isHavingRestoreConfigOverrides Deprecated. Don&#39;t use.
         * 
         * @return builder
         * 
         */
        public Builder isHavingRestoreConfigOverrides(Boolean isHavingRestoreConfigOverrides) {
            return isHavingRestoreConfigOverrides(Output.of(isHavingRestoreConfigOverrides));
        }

        /**
         * @param sourceType The source descriminator.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType The source descriminator.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public DbSystemSourceArgs build() {
            if ($.sourceType == null) {
                throw new MissingRequiredPropertyException("DbSystemSourceArgs", "sourceType");
            }
            return $;
        }
    }

}
