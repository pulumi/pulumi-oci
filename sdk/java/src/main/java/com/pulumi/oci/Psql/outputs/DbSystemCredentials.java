// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Psql.outputs.DbSystemCredentialsPasswordDetails;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DbSystemCredentials {
    /**
     * @return Details for the DbSystem password. Password can be passed as `VaultSecretPasswordDetails`(Vault) or `PlainTextPasswordDetails`.
     * 
     */
    private DbSystemCredentialsPasswordDetails passwordDetails;
    /**
     * @return The DB system username.
     * 
     */
    private String username;

    private DbSystemCredentials() {}
    /**
     * @return Details for the DbSystem password. Password can be passed as `VaultSecretPasswordDetails`(Vault) or `PlainTextPasswordDetails`.
     * 
     */
    public DbSystemCredentialsPasswordDetails passwordDetails() {
        return this.passwordDetails;
    }
    /**
     * @return The DB system username.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DbSystemCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private DbSystemCredentialsPasswordDetails passwordDetails;
        private String username;
        public Builder() {}
        public Builder(DbSystemCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passwordDetails = defaults.passwordDetails;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder passwordDetails(DbSystemCredentialsPasswordDetails passwordDetails) {
            this.passwordDetails = Objects.requireNonNull(passwordDetails);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        public DbSystemCredentials build() {
            final var o = new DbSystemCredentials();
            o.passwordDetails = passwordDetails;
            o.username = username;
            return o;
        }
    }
}
