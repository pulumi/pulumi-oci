// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DbSystemManagementPolicyBackupPolicy {
    /**
     * @return (Updatable) Hour of the day when backup starts.
     * 
     */
    private @Nullable String backupStart;
    /**
     * @return (Updatable) Days of the month when backup should start. If the day is greater last day of the current month, then it will be triggered on the last day of the current month
     * 
     */
    private @Nullable List<Integer> daysOfTheMonths;
    /**
     * @return (Updatable) Weekly days
     * 
     */
    private @Nullable List<String> daysOfTheWeeks;
    /**
     * @return (Updatable) Backup policy kind
     * 
     */
    private @Nullable String kind;
    /**
     * @return (Updatable) How many days the customers data should be stored after the db system deletion.
     * 
     */
    private @Nullable Integer retentionDays;

    private DbSystemManagementPolicyBackupPolicy() {}
    /**
     * @return (Updatable) Hour of the day when backup starts.
     * 
     */
    public Optional<String> backupStart() {
        return Optional.ofNullable(this.backupStart);
    }
    /**
     * @return (Updatable) Days of the month when backup should start. If the day is greater last day of the current month, then it will be triggered on the last day of the current month
     * 
     */
    public List<Integer> daysOfTheMonths() {
        return this.daysOfTheMonths == null ? List.of() : this.daysOfTheMonths;
    }
    /**
     * @return (Updatable) Weekly days
     * 
     */
    public List<String> daysOfTheWeeks() {
        return this.daysOfTheWeeks == null ? List.of() : this.daysOfTheWeeks;
    }
    /**
     * @return (Updatable) Backup policy kind
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return (Updatable) How many days the customers data should be stored after the db system deletion.
     * 
     */
    public Optional<Integer> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DbSystemManagementPolicyBackupPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupStart;
        private @Nullable List<Integer> daysOfTheMonths;
        private @Nullable List<String> daysOfTheWeeks;
        private @Nullable String kind;
        private @Nullable Integer retentionDays;
        public Builder() {}
        public Builder(DbSystemManagementPolicyBackupPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupStart = defaults.backupStart;
    	      this.daysOfTheMonths = defaults.daysOfTheMonths;
    	      this.daysOfTheWeeks = defaults.daysOfTheWeeks;
    	      this.kind = defaults.kind;
    	      this.retentionDays = defaults.retentionDays;
        }

        @CustomType.Setter
        public Builder backupStart(@Nullable String backupStart) {

            this.backupStart = backupStart;
            return this;
        }
        @CustomType.Setter
        public Builder daysOfTheMonths(@Nullable List<Integer> daysOfTheMonths) {

            this.daysOfTheMonths = daysOfTheMonths;
            return this;
        }
        public Builder daysOfTheMonths(Integer... daysOfTheMonths) {
            return daysOfTheMonths(List.of(daysOfTheMonths));
        }
        @CustomType.Setter
        public Builder daysOfTheWeeks(@Nullable List<String> daysOfTheWeeks) {

            this.daysOfTheWeeks = daysOfTheWeeks;
            return this;
        }
        public Builder daysOfTheWeeks(String... daysOfTheWeeks) {
            return daysOfTheWeeks(List.of(daysOfTheWeeks));
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {

            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder retentionDays(@Nullable Integer retentionDays) {

            this.retentionDays = retentionDays;
            return this;
        }
        public DbSystemManagementPolicyBackupPolicy build() {
            final var _resultValue = new DbSystemManagementPolicyBackupPolicy();
            _resultValue.backupStart = backupStart;
            _resultValue.daysOfTheMonths = daysOfTheMonths;
            _resultValue.daysOfTheWeeks = daysOfTheWeeks;
            _resultValue.kind = kind;
            _resultValue.retentionDays = retentionDays;
            return _resultValue;
        }
    }
}
