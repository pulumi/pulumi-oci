// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Psql.outputs.GetBackupDbSystemDetail;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBackupResult {
    private String backupId;
    /**
     * @return The size of the backup, in gigabytes.
     * 
     */
    private Integer backupSize;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the backup.
     * 
     */
    private String compartmentId;
    /**
     * @return Information about the database system associated with a backup.
     * 
     */
    private List<GetBackupDbSystemDetail> dbSystemDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup&#39;s source database system.
     * 
     */
    private String dbSystemId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A description for the backup.
     * 
     */
    private String description;
    /**
     * @return A user-friendly display name for the backup. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup.
     * 
     */
    private String id;
    /**
     * @return lastAcceptedRequestToken from MP.
     * 
     */
    private String lastAcceptedRequestToken;
    /**
     * @return lastCompletedRequestToken from MP.
     * 
     */
    private String lastCompletedRequestToken;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Backup retention period in days.
     * 
     */
    private Integer retentionPeriod;
    /**
     * @return Specifies whether the backup was created manually, or by a management policy.
     * 
     */
    private String sourceType;
    /**
     * @return The current state of the backup.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The date and time the backup was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the backup was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeUpdated;

    private GetBackupResult() {}
    public String backupId() {
        return this.backupId;
    }
    /**
     * @return The size of the backup, in gigabytes.
     * 
     */
    public Integer backupSize() {
        return this.backupSize;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the backup.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Information about the database system associated with a backup.
     * 
     */
    public List<GetBackupDbSystemDetail> dbSystemDetails() {
        return this.dbSystemDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup&#39;s source database system.
     * 
     */
    public String dbSystemId() {
        return this.dbSystemId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A description for the backup.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly display name for the backup. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return lastAcceptedRequestToken from MP.
     * 
     */
    public String lastAcceptedRequestToken() {
        return this.lastAcceptedRequestToken;
    }
    /**
     * @return lastCompletedRequestToken from MP.
     * 
     */
    public String lastCompletedRequestToken() {
        return this.lastCompletedRequestToken;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Backup retention period in days.
     * 
     */
    public Integer retentionPeriod() {
        return this.retentionPeriod;
    }
    /**
     * @return Specifies whether the backup was created manually, or by a management policy.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return The current state of the backup.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the backup was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the backup was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupId;
        private Integer backupSize;
        private String compartmentId;
        private List<GetBackupDbSystemDetail> dbSystemDetails;
        private String dbSystemId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lastAcceptedRequestToken;
        private String lastCompletedRequestToken;
        private String lifecycleDetails;
        private Integer retentionPeriod;
        private String sourceType;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetBackupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupId = defaults.backupId;
    	      this.backupSize = defaults.backupSize;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbSystemDetails = defaults.dbSystemDetails;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lastAcceptedRequestToken = defaults.lastAcceptedRequestToken;
    	      this.lastCompletedRequestToken = defaults.lastCompletedRequestToken;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.retentionPeriod = defaults.retentionPeriod;
    	      this.sourceType = defaults.sourceType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder backupId(String backupId) {
            if (backupId == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "backupId");
            }
            this.backupId = backupId;
            return this;
        }
        @CustomType.Setter
        public Builder backupSize(Integer backupSize) {
            if (backupSize == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "backupSize");
            }
            this.backupSize = backupSize;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemDetails(List<GetBackupDbSystemDetail> dbSystemDetails) {
            if (dbSystemDetails == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "dbSystemDetails");
            }
            this.dbSystemDetails = dbSystemDetails;
            return this;
        }
        public Builder dbSystemDetails(GetBackupDbSystemDetail... dbSystemDetails) {
            return dbSystemDetails(List.of(dbSystemDetails));
        }
        @CustomType.Setter
        public Builder dbSystemId(String dbSystemId) {
            if (dbSystemId == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "dbSystemId");
            }
            this.dbSystemId = dbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastAcceptedRequestToken(String lastAcceptedRequestToken) {
            if (lastAcceptedRequestToken == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "lastAcceptedRequestToken");
            }
            this.lastAcceptedRequestToken = lastAcceptedRequestToken;
            return this;
        }
        @CustomType.Setter
        public Builder lastCompletedRequestToken(String lastCompletedRequestToken) {
            if (lastCompletedRequestToken == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "lastCompletedRequestToken");
            }
            this.lastCompletedRequestToken = lastCompletedRequestToken;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriod(Integer retentionPeriod) {
            if (retentionPeriod == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "retentionPeriod");
            }
            this.retentionPeriod = retentionPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetBackupResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetBackupResult build() {
            final var _resultValue = new GetBackupResult();
            _resultValue.backupId = backupId;
            _resultValue.backupSize = backupSize;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbSystemDetails = dbSystemDetails;
            _resultValue.dbSystemId = dbSystemId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lastAcceptedRequestToken = lastAcceptedRequestToken;
            _resultValue.lastCompletedRequestToken = lastCompletedRequestToken;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.retentionPeriod = retentionPeriod;
            _resultValue.sourceType = sourceType;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
