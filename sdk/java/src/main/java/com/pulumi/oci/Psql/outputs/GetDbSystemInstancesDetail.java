// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDbSystemInstancesDetail {
    /**
     * @return Description of the database instance node.
     * 
     */
    private String description;
    /**
     * @return A user-friendly display name for the database instance node. Avoid entering confidential information.
     * 
     */
    private String displayName;
    private String privateIp;

    private GetDbSystemInstancesDetail() {}
    /**
     * @return Description of the database instance node.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly display name for the database instance node. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public String privateIp() {
        return this.privateIp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemInstancesDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private String privateIp;
        public Builder() {}
        public Builder(GetDbSystemInstancesDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.privateIp = defaults.privateIp;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDbSystemInstancesDetail", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDbSystemInstancesDetail", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder privateIp(String privateIp) {
            if (privateIp == null) {
              throw new MissingRequiredPropertyException("GetDbSystemInstancesDetail", "privateIp");
            }
            this.privateIp = privateIp;
            return this;
        }
        public GetDbSystemInstancesDetail build() {
            final var _resultValue = new GetDbSystemInstancesDetail();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.privateIp = privateIp;
            return _resultValue;
        }
    }
}
