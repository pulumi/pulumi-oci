// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDbSystemPrimaryDbInstanceResult {
    /**
     * @return Unique identifier of the DbInstance.
     * 
     */
    private String dbInstanceId;
    private String dbSystemId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetDbSystemPrimaryDbInstanceResult() {}
    /**
     * @return Unique identifier of the DbInstance.
     * 
     */
    public String dbInstanceId() {
        return this.dbInstanceId;
    }
    public String dbSystemId() {
        return this.dbSystemId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemPrimaryDbInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dbInstanceId;
        private String dbSystemId;
        private String id;
        public Builder() {}
        public Builder(GetDbSystemPrimaryDbInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbInstanceId = defaults.dbInstanceId;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder dbInstanceId(String dbInstanceId) {
            if (dbInstanceId == null) {
              throw new MissingRequiredPropertyException("GetDbSystemPrimaryDbInstanceResult", "dbInstanceId");
            }
            this.dbInstanceId = dbInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemId(String dbSystemId) {
            if (dbSystemId == null) {
              throw new MissingRequiredPropertyException("GetDbSystemPrimaryDbInstanceResult", "dbSystemId");
            }
            this.dbSystemId = dbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbSystemPrimaryDbInstanceResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetDbSystemPrimaryDbInstanceResult build() {
            final var _resultValue = new GetDbSystemPrimaryDbInstanceResult();
            _resultValue.dbInstanceId = dbInstanceId;
            _resultValue.dbSystemId = dbSystemId;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
