// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Psql.outputs.GetDefaultConfigurationsDefaultConfigurationCollectionItemConfigurationDetail;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDefaultConfigurationsDefaultConfigurationCollectionItem {
    /**
     * @return List of DB default Configuration Values.
     * 
     */
    private List<GetDefaultConfigurationsDefaultConfigurationCollectionItemConfigurationDetail> configurationDetails;
    /**
     * @return Verison of the Postgresql DB like 14.5
     * 
     */
    private String dbVersion;
    /**
     * @return Config description
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private String id;
    /**
     * @return Memory Size in GB with 1GB increment. Min value matches the cpuCoreCount. Max value depends on the shape.
     * 
     */
    private Integer instanceMemorySizeInGbs;
    /**
     * @return CPU cpuCoreCount. Min value is 1. Max value depends on the shape.
     * 
     */
    private Integer instanceOcpuCount;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Shape name of the compute like VM.Standard.E4.Flex or VM.Standard3.Flex
     * 
     */
    private String shape;
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return The time Configuration was created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;

    private GetDefaultConfigurationsDefaultConfigurationCollectionItem() {}
    /**
     * @return List of DB default Configuration Values.
     * 
     */
    public List<GetDefaultConfigurationsDefaultConfigurationCollectionItemConfigurationDetail> configurationDetails() {
        return this.configurationDetails;
    }
    /**
     * @return Verison of the Postgresql DB like 14.5
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return Config description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Memory Size in GB with 1GB increment. Min value matches the cpuCoreCount. Max value depends on the shape.
     * 
     */
    public Integer instanceMemorySizeInGbs() {
        return this.instanceMemorySizeInGbs;
    }
    /**
     * @return CPU cpuCoreCount. Min value is 1. Max value depends on the shape.
     * 
     */
    public Integer instanceOcpuCount() {
        return this.instanceOcpuCount;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Shape name of the compute like VM.Standard.E4.Flex or VM.Standard3.Flex
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time Configuration was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefaultConfigurationsDefaultConfigurationCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDefaultConfigurationsDefaultConfigurationCollectionItemConfigurationDetail> configurationDetails;
        private String dbVersion;
        private String description;
        private String displayName;
        private String id;
        private Integer instanceMemorySizeInGbs;
        private Integer instanceOcpuCount;
        private String lifecycleDetails;
        private String shape;
        private String state;
        private String timeCreated;
        public Builder() {}
        public Builder(GetDefaultConfigurationsDefaultConfigurationCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationDetails = defaults.configurationDetails;
    	      this.dbVersion = defaults.dbVersion;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.instanceMemorySizeInGbs = defaults.instanceMemorySizeInGbs;
    	      this.instanceOcpuCount = defaults.instanceOcpuCount;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.shape = defaults.shape;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder configurationDetails(List<GetDefaultConfigurationsDefaultConfigurationCollectionItemConfigurationDetail> configurationDetails) {
            this.configurationDetails = Objects.requireNonNull(configurationDetails);
            return this;
        }
        public Builder configurationDetails(GetDefaultConfigurationsDefaultConfigurationCollectionItemConfigurationDetail... configurationDetails) {
            return configurationDetails(List.of(configurationDetails));
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            this.dbVersion = Objects.requireNonNull(dbVersion);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceMemorySizeInGbs(Integer instanceMemorySizeInGbs) {
            this.instanceMemorySizeInGbs = Objects.requireNonNull(instanceMemorySizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder instanceOcpuCount(Integer instanceOcpuCount) {
            this.instanceOcpuCount = Objects.requireNonNull(instanceOcpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public GetDefaultConfigurationsDefaultConfigurationCollectionItem build() {
            final var o = new GetDefaultConfigurationsDefaultConfigurationCollectionItem();
            o.configurationDetails = configurationDetails;
            o.dbVersion = dbVersion;
            o.description = description;
            o.displayName = displayName;
            o.id = id;
            o.instanceMemorySizeInGbs = instanceMemorySizeInGbs;
            o.instanceOcpuCount = instanceOcpuCount;
            o.lifecycleDetails = lifecycleDetails;
            o.shape = shape;
            o.state = state;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
