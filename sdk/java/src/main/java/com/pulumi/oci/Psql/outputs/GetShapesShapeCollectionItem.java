// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Psql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetShapesShapeCollectionItem {
    /**
     * @return A filter to return the feature by the shape name.
     * 
     */
    private String id;
    /**
     * @return The amount of memory in gigabytes.
     * 
     */
    private Integer memorySizeInGbs;
    /**
     * @return The number of OCPUs.
     * 
     */
    private Integer ocpuCount;
    /**
     * @return The name of the Compute VM shape. Example: `VM.Standard.E4.Flex`
     * 
     */
    private String shape;

    private GetShapesShapeCollectionItem() {}
    /**
     * @return A filter to return the feature by the shape name.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The amount of memory in gigabytes.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * @return The number of OCPUs.
     * 
     */
    public Integer ocpuCount() {
        return this.ocpuCount;
    }
    /**
     * @return The name of the Compute VM shape. Example: `VM.Standard.E4.Flex`
     * 
     */
    public String shape() {
        return this.shape;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShapesShapeCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Integer memorySizeInGbs;
        private Integer ocpuCount;
        private String shape;
        public Builder() {}
        public Builder(GetShapesShapeCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.ocpuCount = defaults.ocpuCount;
    	      this.shape = defaults.shape;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetShapesShapeCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            if (memorySizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetShapesShapeCollectionItem", "memorySizeInGbs");
            }
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuCount(Integer ocpuCount) {
            if (ocpuCount == null) {
              throw new MissingRequiredPropertyException("GetShapesShapeCollectionItem", "ocpuCount");
            }
            this.ocpuCount = ocpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetShapesShapeCollectionItem", "shape");
            }
            this.shape = shape;
            return this;
        }
        public GetShapesShapeCollectionItem build() {
            final var _resultValue = new GetShapesShapeCollectionItem();
            _resultValue.id = id;
            _resultValue.memorySizeInGbs = memorySizeInGbs;
            _resultValue.ocpuCount = ocpuCount;
            _resultValue.shape = shape;
            return _resultValue;
        }
    }
}
