// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Queue.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetQueuesQueueCollectionItem {
    /**
     * @return The percentage of allocated queue resources that can be consumed by a single channel. For example, if a queue has a storage limit of 2Gb, and a single channel consumption limit is 0.1 (10%), that means data size of a single channel  can&#39;t exceed 200Mb. Consumption limit of 100% (default) means that a single channel can consume up-to all allocated queue&#39;s resources.
     * 
     */
    private @Nullable Integer channelConsumptionLimit;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom encryption key to be used to encrypt messages content.
     * 
     */
    private @Nullable String customEncryptionKeyId;
    /**
     * @return The number of times a message can be delivered to a consumer before being moved to the dead letter queue. A value of 0 indicates that the DLQ is not used.
     * 
     */
    private @Nullable Integer deadLetterQueueDeliveryCount;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The unique queue identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return Any additional details about the current state of the queue.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The endpoint to use to consume or publish messages in the queue.
     * 
     */
    private @Nullable String messagesEndpoint;
    private @Nullable Boolean purgeQueue;
    private @Nullable String purgeType;
    /**
     * @return The retention period of the messages in the queue, in seconds.
     * 
     */
    private @Nullable Integer retentionInSeconds;
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time that the queue was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time that the queue was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The default polling timeout of the messages in the queue, in seconds.
     * 
     */
    private @Nullable Integer timeoutInSeconds;
    /**
     * @return The default visibility timeout of the messages consumed from the queue, in seconds.
     * 
     */
    private @Nullable Integer visibilityInSeconds;

    private GetQueuesQueueCollectionItem() {}
    /**
     * @return The percentage of allocated queue resources that can be consumed by a single channel. For example, if a queue has a storage limit of 2Gb, and a single channel consumption limit is 0.1 (10%), that means data size of a single channel  can&#39;t exceed 200Mb. Consumption limit of 100% (default) means that a single channel can consume up-to all allocated queue&#39;s resources.
     * 
     */
    public Optional<Integer> channelConsumptionLimit() {
        return Optional.ofNullable(this.channelConsumptionLimit);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom encryption key to be used to encrypt messages content.
     * 
     */
    public Optional<String> customEncryptionKeyId() {
        return Optional.ofNullable(this.customEncryptionKeyId);
    }
    /**
     * @return The number of times a message can be delivered to a consumer before being moved to the dead letter queue. A value of 0 indicates that the DLQ is not used.
     * 
     */
    public Optional<Integer> deadLetterQueueDeliveryCount() {
        return Optional.ofNullable(this.deadLetterQueueDeliveryCount);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The unique queue identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Any additional details about the current state of the queue.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The endpoint to use to consume or publish messages in the queue.
     * 
     */
    public Optional<String> messagesEndpoint() {
        return Optional.ofNullable(this.messagesEndpoint);
    }
    public Optional<Boolean> purgeQueue() {
        return Optional.ofNullable(this.purgeQueue);
    }
    public Optional<String> purgeType() {
        return Optional.ofNullable(this.purgeType);
    }
    /**
     * @return The retention period of the messages in the queue, in seconds.
     * 
     */
    public Optional<Integer> retentionInSeconds() {
        return Optional.ofNullable(this.retentionInSeconds);
    }
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time that the queue was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time that the queue was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The default polling timeout of the messages in the queue, in seconds.
     * 
     */
    public Optional<Integer> timeoutInSeconds() {
        return Optional.ofNullable(this.timeoutInSeconds);
    }
    /**
     * @return The default visibility timeout of the messages consumed from the queue, in seconds.
     * 
     */
    public Optional<Integer> visibilityInSeconds() {
        return Optional.ofNullable(this.visibilityInSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueuesQueueCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer channelConsumptionLimit;
        private @Nullable String compartmentId;
        private @Nullable String customEncryptionKeyId;
        private @Nullable Integer deadLetterQueueDeliveryCount;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String messagesEndpoint;
        private @Nullable Boolean purgeQueue;
        private @Nullable String purgeType;
        private @Nullable Integer retentionInSeconds;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable Integer timeoutInSeconds;
        private @Nullable Integer visibilityInSeconds;
        public Builder() {}
        public Builder(GetQueuesQueueCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelConsumptionLimit = defaults.channelConsumptionLimit;
    	      this.compartmentId = defaults.compartmentId;
    	      this.customEncryptionKeyId = defaults.customEncryptionKeyId;
    	      this.deadLetterQueueDeliveryCount = defaults.deadLetterQueueDeliveryCount;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.messagesEndpoint = defaults.messagesEndpoint;
    	      this.purgeQueue = defaults.purgeQueue;
    	      this.purgeType = defaults.purgeType;
    	      this.retentionInSeconds = defaults.retentionInSeconds;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timeoutInSeconds = defaults.timeoutInSeconds;
    	      this.visibilityInSeconds = defaults.visibilityInSeconds;
        }

        @CustomType.Setter
        public Builder channelConsumptionLimit(@Nullable Integer channelConsumptionLimit) {
            this.channelConsumptionLimit = channelConsumptionLimit;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder customEncryptionKeyId(@Nullable String customEncryptionKeyId) {
            this.customEncryptionKeyId = customEncryptionKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder deadLetterQueueDeliveryCount(@Nullable Integer deadLetterQueueDeliveryCount) {
            this.deadLetterQueueDeliveryCount = deadLetterQueueDeliveryCount;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder messagesEndpoint(@Nullable String messagesEndpoint) {
            this.messagesEndpoint = messagesEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder purgeQueue(@Nullable Boolean purgeQueue) {
            this.purgeQueue = purgeQueue;
            return this;
        }
        @CustomType.Setter
        public Builder purgeType(@Nullable String purgeType) {
            this.purgeType = purgeType;
            return this;
        }
        @CustomType.Setter
        public Builder retentionInSeconds(@Nullable Integer retentionInSeconds) {
            this.retentionInSeconds = retentionInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutInSeconds(@Nullable Integer timeoutInSeconds) {
            this.timeoutInSeconds = timeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder visibilityInSeconds(@Nullable Integer visibilityInSeconds) {
            this.visibilityInSeconds = visibilityInSeconds;
            return this;
        }
        public GetQueuesQueueCollectionItem build() {
            final var o = new GetQueuesQueueCollectionItem();
            o.channelConsumptionLimit = channelConsumptionLimit;
            o.compartmentId = compartmentId;
            o.customEncryptionKeyId = customEncryptionKeyId;
            o.deadLetterQueueDeliveryCount = deadLetterQueueDeliveryCount;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.messagesEndpoint = messagesEndpoint;
            o.purgeQueue = purgeQueue;
            o.purgeType = purgeType;
            o.retentionInSeconds = retentionInSeconds;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.timeoutInSeconds = timeoutInSeconds;
            o.visibilityInSeconds = visibilityInSeconds;
            return o;
        }
    }
}
