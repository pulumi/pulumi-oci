// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.RecoveryMod;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.RecoveryMod.inputs.ProtectedDatabaseRecoveryServiceSubnetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProtectedDatabaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProtectedDatabaseArgs Empty = new ProtectedDatabaseArgs();

    /**
     * (Updatable) The OCID of the compartment that contains the protected database.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains the protected database.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The OCID of the protected database.
     * 
     */
    @Import(name="databaseId")
    private @Nullable Output<String> databaseId;

    /**
     * @return The OCID of the protected database.
     * 
     */
    public Optional<Output<String>> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }

    /**
     * (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
     * 
     */
    @Import(name="databaseSize")
    private @Nullable Output<String> databaseSize;

    /**
     * @return (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
     * 
     */
    public Optional<Output<String>> databaseSize() {
        return Optional.ofNullable(this.databaseSize);
    }

    /**
     * The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
     * 
     */
    @Import(name="dbUniqueName", required=true)
    private Output<String> dbUniqueName;

    /**
     * @return The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
     * 
     */
    public Output<String> dbUniqueName() {
        return this.dbUniqueName;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
     * * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
     * * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
     * 
     */
    @Import(name="deletionSchedule")
    private @Nullable Output<String> deletionSchedule;

    /**
     * @return (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
     * * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
     * * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
     * 
     */
    public Optional<Output<String>> deletionSchedule() {
        return Optional.ofNullable(this.deletionSchedule);
    }

    /**
     * (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
     * 
     */
    @Import(name="isRedoLogsShipped")
    private @Nullable Output<Boolean> isRedoLogsShipped;

    /**
     * @return (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
     * 
     */
    public Optional<Output<Boolean>> isRedoLogsShipped() {
        return Optional.ofNullable(this.isRedoLogsShipped);
    }

    /**
     * (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username &#34;admin&#34;, regardless of casing.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username &#34;admin&#34;, regardless of casing.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * (Updatable) The OCID of the protection policy associated with the protected database.
     * 
     */
    @Import(name="protectionPolicyId", required=true)
    private Output<String> protectionPolicyId;

    /**
     * @return (Updatable) The OCID of the protection policy associated with the protected database.
     * 
     */
    public Output<String> protectionPolicyId() {
        return this.protectionPolicyId;
    }

    /**
     * (Updatable) List of recovery service subnet resources associated with the protected database.
     * 
     */
    @Import(name="recoveryServiceSubnets", required=true)
    private Output<List<ProtectedDatabaseRecoveryServiceSubnetArgs>> recoveryServiceSubnets;

    /**
     * @return (Updatable) List of recovery service subnet resources associated with the protected database.
     * 
     */
    public Output<List<ProtectedDatabaseRecoveryServiceSubnetArgs>> recoveryServiceSubnets() {
        return this.recoveryServiceSubnets;
    }

    /**
     * (Updatable) The OCID of the cloud service subscription to which you want to link the protected database.  For example, specify the Microsoft Azure subscription ID if you want to provision the protected database in Azure.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return (Updatable) The OCID of the cloud service subscription to which you want to link the protected database.  For example, specify the Microsoft Azure subscription ID if you want to provision the protected database in Azure.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    private ProtectedDatabaseArgs() {}

    private ProtectedDatabaseArgs(ProtectedDatabaseArgs $) {
        this.compartmentId = $.compartmentId;
        this.databaseId = $.databaseId;
        this.databaseSize = $.databaseSize;
        this.dbUniqueName = $.dbUniqueName;
        this.definedTags = $.definedTags;
        this.deletionSchedule = $.deletionSchedule;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isRedoLogsShipped = $.isRedoLogsShipped;
        this.password = $.password;
        this.protectionPolicyId = $.protectionPolicyId;
        this.recoveryServiceSubnets = $.recoveryServiceSubnets;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectedDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectedDatabaseArgs $;

        public Builder() {
            $ = new ProtectedDatabaseArgs();
        }

        public Builder(ProtectedDatabaseArgs defaults) {
            $ = new ProtectedDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the protected database.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the protected database.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param databaseId The OCID of the protected database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The OCID of the protected database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param databaseSize (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
         * 
         * @return builder
         * 
         */
        public Builder databaseSize(@Nullable Output<String> databaseSize) {
            $.databaseSize = databaseSize;
            return this;
        }

        /**
         * @param databaseSize (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
         * 
         * @return builder
         * 
         */
        public Builder databaseSize(String databaseSize) {
            return databaseSize(Output.of(databaseSize));
        }

        /**
         * @param dbUniqueName The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
         * 
         * @return builder
         * 
         */
        public Builder dbUniqueName(Output<String> dbUniqueName) {
            $.dbUniqueName = dbUniqueName;
            return this;
        }

        /**
         * @param dbUniqueName The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
         * 
         * @return builder
         * 
         */
        public Builder dbUniqueName(String dbUniqueName) {
            return dbUniqueName(Output.of(dbUniqueName));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deletionSchedule (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
         * * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
         * * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
         * 
         * @return builder
         * 
         */
        public Builder deletionSchedule(@Nullable Output<String> deletionSchedule) {
            $.deletionSchedule = deletionSchedule;
            return this;
        }

        /**
         * @param deletionSchedule (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
         * * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
         * * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
         * 
         * @return builder
         * 
         */
        public Builder deletionSchedule(String deletionSchedule) {
            return deletionSchedule(Output.of(deletionSchedule));
        }

        /**
         * @param displayName (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isRedoLogsShipped (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
         * 
         * @return builder
         * 
         */
        public Builder isRedoLogsShipped(@Nullable Output<Boolean> isRedoLogsShipped) {
            $.isRedoLogsShipped = isRedoLogsShipped;
            return this;
        }

        /**
         * @param isRedoLogsShipped (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
         * 
         * @return builder
         * 
         */
        public Builder isRedoLogsShipped(Boolean isRedoLogsShipped) {
            return isRedoLogsShipped(Output.of(isRedoLogsShipped));
        }

        /**
         * @param password (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username &#34;admin&#34;, regardless of casing.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username &#34;admin&#34;, regardless of casing.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param protectionPolicyId (Updatable) The OCID of the protection policy associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder protectionPolicyId(Output<String> protectionPolicyId) {
            $.protectionPolicyId = protectionPolicyId;
            return this;
        }

        /**
         * @param protectionPolicyId (Updatable) The OCID of the protection policy associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder protectionPolicyId(String protectionPolicyId) {
            return protectionPolicyId(Output.of(protectionPolicyId));
        }

        /**
         * @param recoveryServiceSubnets (Updatable) List of recovery service subnet resources associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder recoveryServiceSubnets(Output<List<ProtectedDatabaseRecoveryServiceSubnetArgs>> recoveryServiceSubnets) {
            $.recoveryServiceSubnets = recoveryServiceSubnets;
            return this;
        }

        /**
         * @param recoveryServiceSubnets (Updatable) List of recovery service subnet resources associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder recoveryServiceSubnets(List<ProtectedDatabaseRecoveryServiceSubnetArgs> recoveryServiceSubnets) {
            return recoveryServiceSubnets(Output.of(recoveryServiceSubnets));
        }

        /**
         * @param recoveryServiceSubnets (Updatable) List of recovery service subnet resources associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder recoveryServiceSubnets(ProtectedDatabaseRecoveryServiceSubnetArgs... recoveryServiceSubnets) {
            return recoveryServiceSubnets(List.of(recoveryServiceSubnets));
        }

        /**
         * @param subscriptionId (Updatable) The OCID of the cloud service subscription to which you want to link the protected database.  For example, specify the Microsoft Azure subscription ID if you want to provision the protected database in Azure.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId (Updatable) The OCID of the cloud service subscription to which you want to link the protected database.  For example, specify the Microsoft Azure subscription ID if you want to provision the protected database in Azure.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public ProtectedDatabaseArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ProtectedDatabaseArgs", "compartmentId");
            }
            if ($.dbUniqueName == null) {
                throw new MissingRequiredPropertyException("ProtectedDatabaseArgs", "dbUniqueName");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ProtectedDatabaseArgs", "displayName");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("ProtectedDatabaseArgs", "password");
            }
            if ($.protectionPolicyId == null) {
                throw new MissingRequiredPropertyException("ProtectedDatabaseArgs", "protectionPolicyId");
            }
            if ($.recoveryServiceSubnets == null) {
                throw new MissingRequiredPropertyException("ProtectedDatabaseArgs", "recoveryServiceSubnets");
            }
            return $;
        }
    }

}
