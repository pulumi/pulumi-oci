// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.RecoveryMod.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.RecoveryMod.inputs.ProtectedDatabaseMetricArgs;
import com.pulumi.oci.RecoveryMod.inputs.ProtectedDatabaseRecoveryServiceSubnetArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProtectedDatabaseState extends com.pulumi.resources.ResourceArgs {

    public static final ProtectedDatabaseState Empty = new ProtectedDatabaseState();

    /**
     * (Updatable) The OCID of the compartment that contains the protected database.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains the protected database.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The OCID of the protected database.
     * 
     */
    @Import(name="databaseId")
    private @Nullable Output<String> databaseId;

    /**
     * @return The OCID of the protected database.
     * 
     */
    public Optional<Output<String>> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }

    /**
     * (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
     * 
     */
    @Import(name="databaseSize")
    private @Nullable Output<String> databaseSize;

    /**
     * @return (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
     * 
     */
    public Optional<Output<String>> databaseSize() {
        return Optional.ofNullable(this.databaseSize);
    }

    /**
     * The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
     * 
     */
    @Import(name="dbUniqueName")
    private @Nullable Output<String> dbUniqueName;

    /**
     * @return The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
     * 
     */
    public Optional<Output<String>> dbUniqueName() {
        return Optional.ofNullable(this.dbUniqueName);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
     * * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
     * * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
     * 
     */
    @Import(name="deletionSchedule")
    private @Nullable Output<String> deletionSchedule;

    /**
     * @return (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
     * * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
     * * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
     * 
     */
    public Optional<Output<String>> deletionSchedule() {
        return Optional.ofNullable(this.deletionSchedule);
    }

    /**
     * (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Indicates the protection status of the database.
     * 
     */
    @Import(name="health")
    private @Nullable Output<String> health;

    /**
     * @return Indicates the protection status of the database.
     * 
     */
    public Optional<Output<String>> health() {
        return Optional.ofNullable(this.health);
    }

    /**
     * A message describing the current health of the protected database.
     * 
     */
    @Import(name="healthDetails")
    private @Nullable Output<String> healthDetails;

    /**
     * @return A message describing the current health of the protected database.
     * 
     */
    public Optional<Output<String>> healthDetails() {
        return Optional.ofNullable(this.healthDetails);
    }

    /**
     * Indicates whether the protected database is created by Recovery Service or created manually. Set to &lt;b&gt;TRUE&lt;/b&gt; for a service-defined protected database. When you enable the OCI-managed automatic backups option for a database and set Recovery Service as the backup destination, then Recovery Service creates the associated protected database resource. Set to &lt;b&gt;FALSE&lt;/b&gt; for a user-defined protected database.
     * 
     */
    @Import(name="isReadOnlyResource")
    private @Nullable Output<Boolean> isReadOnlyResource;

    /**
     * @return Indicates whether the protected database is created by Recovery Service or created manually. Set to &lt;b&gt;TRUE&lt;/b&gt; for a service-defined protected database. When you enable the OCI-managed automatic backups option for a database and set Recovery Service as the backup destination, then Recovery Service creates the associated protected database resource. Set to &lt;b&gt;FALSE&lt;/b&gt; for a user-defined protected database.
     * 
     */
    public Optional<Output<Boolean>> isReadOnlyResource() {
        return Optional.ofNullable(this.isReadOnlyResource);
    }

    /**
     * (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
     * 
     */
    @Import(name="isRedoLogsShipped")
    private @Nullable Output<Boolean> isRedoLogsShipped;

    /**
     * @return (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
     * 
     */
    public Optional<Output<Boolean>> isRedoLogsShipped() {
        return Optional.ofNullable(this.isRedoLogsShipped);
    }

    /**
     * Detailed description about the current lifecycle state of the protected database. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Detailed description about the current lifecycle state of the protected database. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Backup performance and storage utilization metrics for the protected database.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<List<ProtectedDatabaseMetricArgs>> metrics;

    /**
     * @return Backup performance and storage utilization metrics for the protected database.
     * 
     */
    public Optional<Output<List<ProtectedDatabaseMetricArgs>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username &#34;admin&#34;, regardless of casing.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username &#34;admin&#34;, regardless of casing.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
     * 
     */
    @Import(name="policyLockedDateTime")
    private @Nullable Output<String> policyLockedDateTime;

    /**
     * @return An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
     * 
     */
    public Optional<Output<String>> policyLockedDateTime() {
        return Optional.ofNullable(this.policyLockedDateTime);
    }

    /**
     * (Updatable) The OCID of the protection policy associated with the protected database.
     * 
     */
    @Import(name="protectionPolicyId")
    private @Nullable Output<String> protectionPolicyId;

    /**
     * @return (Updatable) The OCID of the protection policy associated with the protected database.
     * 
     */
    public Optional<Output<String>> protectionPolicyId() {
        return Optional.ofNullable(this.protectionPolicyId);
    }

    /**
     * (Updatable) List of recovery service subnet resources associated with the protected database.
     * 
     */
    @Import(name="recoveryServiceSubnets")
    private @Nullable Output<List<ProtectedDatabaseRecoveryServiceSubnetArgs>> recoveryServiceSubnets;

    /**
     * @return (Updatable) List of recovery service subnet resources associated with the protected database.
     * 
     */
    public Optional<Output<List<ProtectedDatabaseRecoveryServiceSubnetArgs>>> recoveryServiceSubnets() {
        return Optional.ofNullable(this.recoveryServiceSubnets);
    }

    /**
     * The current state of the Protected Database.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the Protected Database.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * An RFC3339 formatted datetime string that indicates the created time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return An RFC3339 formatted datetime string that indicates the created time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * An RFC3339 formatted datetime string that indicates the last updated time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return An RFC3339 formatted datetime string that indicates the last updated time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The virtual private catalog (VPC) user credentials that authenticates the protected database to access Recovery Service.
     * 
     */
    @Import(name="vpcUserName")
    private @Nullable Output<String> vpcUserName;

    /**
     * @return The virtual private catalog (VPC) user credentials that authenticates the protected database to access Recovery Service.
     * 
     */
    public Optional<Output<String>> vpcUserName() {
        return Optional.ofNullable(this.vpcUserName);
    }

    private ProtectedDatabaseState() {}

    private ProtectedDatabaseState(ProtectedDatabaseState $) {
        this.compartmentId = $.compartmentId;
        this.databaseId = $.databaseId;
        this.databaseSize = $.databaseSize;
        this.dbUniqueName = $.dbUniqueName;
        this.definedTags = $.definedTags;
        this.deletionSchedule = $.deletionSchedule;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.health = $.health;
        this.healthDetails = $.healthDetails;
        this.isReadOnlyResource = $.isReadOnlyResource;
        this.isRedoLogsShipped = $.isRedoLogsShipped;
        this.lifecycleDetails = $.lifecycleDetails;
        this.metrics = $.metrics;
        this.password = $.password;
        this.policyLockedDateTime = $.policyLockedDateTime;
        this.protectionPolicyId = $.protectionPolicyId;
        this.recoveryServiceSubnets = $.recoveryServiceSubnets;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.vpcUserName = $.vpcUserName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectedDatabaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectedDatabaseState $;

        public Builder() {
            $ = new ProtectedDatabaseState();
        }

        public Builder(ProtectedDatabaseState defaults) {
            $ = new ProtectedDatabaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the protected database.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the protected database.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param databaseId The OCID of the protected database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The OCID of the protected database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param databaseSize (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
         * 
         * @return builder
         * 
         */
        public Builder databaseSize(@Nullable Output<String> databaseSize) {
            $.databaseSize = databaseSize;
            return this;
        }

        /**
         * @param databaseSize (Updatable) The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
         * 
         * @return builder
         * 
         */
        public Builder databaseSize(String databaseSize) {
            return databaseSize(Output.of(databaseSize));
        }

        /**
         * @param dbUniqueName The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
         * 
         * @return builder
         * 
         */
        public Builder dbUniqueName(@Nullable Output<String> dbUniqueName) {
            $.dbUniqueName = dbUniqueName;
            return this;
        }

        /**
         * @param dbUniqueName The dbUniqueName of the protected database in Recovery Service. You cannot change the unique name.
         * 
         * @return builder
         * 
         */
        public Builder dbUniqueName(String dbUniqueName) {
            return dbUniqueName(Output.of(dbUniqueName));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deletionSchedule (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
         * * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
         * * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
         * 
         * @return builder
         * 
         */
        public Builder deletionSchedule(@Nullable Output<String> deletionSchedule) {
            $.deletionSchedule = deletionSchedule;
            return this;
        }

        /**
         * @param deletionSchedule (Updatable) Defines a preferred schedule to delete a protected database after you terminate the source database.
         * * The default schedule is DELETE_AFTER_72_HOURS, so that the delete operation can occur 72 hours (3 days) after the source database is terminated.
         * * The alternate schedule is DELETE_AFTER_RETENTION_PERIOD. Specify this option if you want to delete a protected database only after the policy-defined backup retention period expires.
         * 
         * @return builder
         * 
         */
        public Builder deletionSchedule(String deletionSchedule) {
            return deletionSchedule(Output.of(deletionSchedule));
        }

        /**
         * @param displayName (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The protected database name. You can change the displayName. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param health Indicates the protection status of the database.
         * 
         * @return builder
         * 
         */
        public Builder health(@Nullable Output<String> health) {
            $.health = health;
            return this;
        }

        /**
         * @param health Indicates the protection status of the database.
         * 
         * @return builder
         * 
         */
        public Builder health(String health) {
            return health(Output.of(health));
        }

        /**
         * @param healthDetails A message describing the current health of the protected database.
         * 
         * @return builder
         * 
         */
        public Builder healthDetails(@Nullable Output<String> healthDetails) {
            $.healthDetails = healthDetails;
            return this;
        }

        /**
         * @param healthDetails A message describing the current health of the protected database.
         * 
         * @return builder
         * 
         */
        public Builder healthDetails(String healthDetails) {
            return healthDetails(Output.of(healthDetails));
        }

        /**
         * @param isReadOnlyResource Indicates whether the protected database is created by Recovery Service or created manually. Set to &lt;b&gt;TRUE&lt;/b&gt; for a service-defined protected database. When you enable the OCI-managed automatic backups option for a database and set Recovery Service as the backup destination, then Recovery Service creates the associated protected database resource. Set to &lt;b&gt;FALSE&lt;/b&gt; for a user-defined protected database.
         * 
         * @return builder
         * 
         */
        public Builder isReadOnlyResource(@Nullable Output<Boolean> isReadOnlyResource) {
            $.isReadOnlyResource = isReadOnlyResource;
            return this;
        }

        /**
         * @param isReadOnlyResource Indicates whether the protected database is created by Recovery Service or created manually. Set to &lt;b&gt;TRUE&lt;/b&gt; for a service-defined protected database. When you enable the OCI-managed automatic backups option for a database and set Recovery Service as the backup destination, then Recovery Service creates the associated protected database resource. Set to &lt;b&gt;FALSE&lt;/b&gt; for a user-defined protected database.
         * 
         * @return builder
         * 
         */
        public Builder isReadOnlyResource(Boolean isReadOnlyResource) {
            return isReadOnlyResource(Output.of(isReadOnlyResource));
        }

        /**
         * @param isRedoLogsShipped (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
         * 
         * @return builder
         * 
         */
        public Builder isRedoLogsShipped(@Nullable Output<Boolean> isRedoLogsShipped) {
            $.isRedoLogsShipped = isRedoLogsShipped;
            return this;
        }

        /**
         * @param isRedoLogsShipped (Updatable) The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups.
         * 
         * @return builder
         * 
         */
        public Builder isRedoLogsShipped(Boolean isRedoLogsShipped) {
            return isRedoLogsShipped(Output.of(isRedoLogsShipped));
        }

        /**
         * @param lifecycleDetails Detailed description about the current lifecycle state of the protected database. For example, it can be used to provide actionable information for a resource in a Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Detailed description about the current lifecycle state of the protected database. For example, it can be used to provide actionable information for a resource in a Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param metrics Backup performance and storage utilization metrics for the protected database.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<List<ProtectedDatabaseMetricArgs>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics Backup performance and storage utilization metrics for the protected database.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<ProtectedDatabaseMetricArgs> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param metrics Backup performance and storage utilization metrics for the protected database.
         * 
         * @return builder
         * 
         */
        public Builder metrics(ProtectedDatabaseMetricArgs... metrics) {
            return metrics(List.of(metrics));
        }

        /**
         * @param password (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username &#34;admin&#34;, regardless of casing.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password (Updatable) Password credential which can be used to connect to Protected Database. It must contain at least 2 uppercase, 2 lowercase, 2 numeric and 2 special characters. The special characters must be underscore (_), number sign (https://docs.cloud.oracle.com/iaas/api/#) or hyphen (-). The password must not contain the username &#34;admin&#34;, regardless of casing.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param policyLockedDateTime An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
         * 
         * @return builder
         * 
         */
        public Builder policyLockedDateTime(@Nullable Output<String> policyLockedDateTime) {
            $.policyLockedDateTime = policyLockedDateTime;
            return this;
        }

        /**
         * @param policyLockedDateTime An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
         * 
         * @return builder
         * 
         */
        public Builder policyLockedDateTime(String policyLockedDateTime) {
            return policyLockedDateTime(Output.of(policyLockedDateTime));
        }

        /**
         * @param protectionPolicyId (Updatable) The OCID of the protection policy associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder protectionPolicyId(@Nullable Output<String> protectionPolicyId) {
            $.protectionPolicyId = protectionPolicyId;
            return this;
        }

        /**
         * @param protectionPolicyId (Updatable) The OCID of the protection policy associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder protectionPolicyId(String protectionPolicyId) {
            return protectionPolicyId(Output.of(protectionPolicyId));
        }

        /**
         * @param recoveryServiceSubnets (Updatable) List of recovery service subnet resources associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder recoveryServiceSubnets(@Nullable Output<List<ProtectedDatabaseRecoveryServiceSubnetArgs>> recoveryServiceSubnets) {
            $.recoveryServiceSubnets = recoveryServiceSubnets;
            return this;
        }

        /**
         * @param recoveryServiceSubnets (Updatable) List of recovery service subnet resources associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder recoveryServiceSubnets(List<ProtectedDatabaseRecoveryServiceSubnetArgs> recoveryServiceSubnets) {
            return recoveryServiceSubnets(Output.of(recoveryServiceSubnets));
        }

        /**
         * @param recoveryServiceSubnets (Updatable) List of recovery service subnet resources associated with the protected database.
         * 
         * @return builder
         * 
         */
        public Builder recoveryServiceSubnets(ProtectedDatabaseRecoveryServiceSubnetArgs... recoveryServiceSubnets) {
            return recoveryServiceSubnets(List.of(recoveryServiceSubnets));
        }

        /**
         * @param state The current state of the Protected Database.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the Protected Database.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated An RFC3339 formatted datetime string that indicates the created time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated An RFC3339 formatted datetime string that indicates the created time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated An RFC3339 formatted datetime string that indicates the last updated time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated An RFC3339 formatted datetime string that indicates the last updated time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param vpcUserName The virtual private catalog (VPC) user credentials that authenticates the protected database to access Recovery Service.
         * 
         * @return builder
         * 
         */
        public Builder vpcUserName(@Nullable Output<String> vpcUserName) {
            $.vpcUserName = vpcUserName;
            return this;
        }

        /**
         * @param vpcUserName The virtual private catalog (VPC) user credentials that authenticates the protected database to access Recovery Service.
         * 
         * @return builder
         * 
         */
        public Builder vpcUserName(String vpcUserName) {
            return vpcUserName(Output.of(vpcUserName));
        }

        public ProtectedDatabaseState build() {
            return $;
        }
    }

}
