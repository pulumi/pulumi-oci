// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.RecoveryMod.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProtectionPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final ProtectionPolicyState Empty = new ProtectionPolicyState();

    /**
     * (Updatable) The maximum number of days to retain backups for a protected database.
     * 
     */
    @Import(name="backupRetentionPeriodInDays")
    private @Nullable Output<Integer> backupRetentionPeriodInDays;

    /**
     * @return (Updatable) The maximum number of days to retain backups for a protected database.
     * 
     */
    public Optional<Output<Integer>> backupRetentionPeriodInDays() {
        return Optional.ofNullable(this.backupRetentionPeriodInDays);
    }

    /**
     * (Updatable) Compartment Identifier
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user provided name for the protection policy. The &#39;displayName&#39; does not have to be unique, and it can be modified. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user provided name for the protection policy. The &#39;displayName&#39; does not have to be unique, and it can be modified. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Set to TRUE if the policy is Oracle-defined, and FALSE for a user-defined custom policy. You can modify only the custom policies.
     * 
     */
    @Import(name="isPredefinedPolicy")
    private @Nullable Output<Boolean> isPredefinedPolicy;

    /**
     * @return Set to TRUE if the policy is Oracle-defined, and FALSE for a user-defined custom policy. You can modify only the custom policies.
     * 
     */
    public Optional<Output<Boolean>> isPredefinedPolicy() {
        return Optional.ofNullable(this.isPredefinedPolicy);
    }

    /**
     * Detailed description about the current lifecycle state of the protection policy. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Detailed description about the current lifecycle state of the protection policy. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Indicates whether the protection policy enforces Recovery Service to retain backups in the same cloud service environment where your Oracle Database is provisioned. This parameter is applicable if your Oracle Database runs in a different cloud service environment, such as Microsoft Azure. If you set the mustEnforceCloudLocality parameter to TRUE, then Recovery Service stores the database backups locally in the same cloud service environment where the database resides. For example, if your Oracle Database is provisioned on Microsoft Azure, then Recovery Service stores the database backups in Azure. Note: You cannot change the mustEnforceCloudLocality setting for a protection policy after you create it.
     * 
     */
    @Import(name="mustEnforceCloudLocality")
    private @Nullable Output<Boolean> mustEnforceCloudLocality;

    /**
     * @return Indicates whether the protection policy enforces Recovery Service to retain backups in the same cloud service environment where your Oracle Database is provisioned. This parameter is applicable if your Oracle Database runs in a different cloud service environment, such as Microsoft Azure. If you set the mustEnforceCloudLocality parameter to TRUE, then Recovery Service stores the database backups locally in the same cloud service environment where the database resides. For example, if your Oracle Database is provisioned on Microsoft Azure, then Recovery Service stores the database backups in Azure. Note: You cannot change the mustEnforceCloudLocality setting for a protection policy after you create it.
     * 
     */
    public Optional<Output<Boolean>> mustEnforceCloudLocality() {
        return Optional.ofNullable(this.mustEnforceCloudLocality);
    }

    /**
     * (Updatable) An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
     * * The retention lock feature controls whether Recovery Service strictly preserves backups for the duration defined in a policy. Retention lock is useful to enforce recovery window compliance and to prevent unintentional modifications to protected database backups.
     * * Recovery Service enforces a 14-day delay before the retention lock set for a policy can take effect. Therefore, you must set policyLockedDateTime  to a date that occurs 14 days after the current date.
     * * For example, assuming that the current date is Aug 1, 2023 9 pm, you can set policyLockedDateTime  to &#39;2023-08-15T21:00:00.600Z&#39; (Aug 15, 2023, 9:00 pm), or greater.
     * * During the 14-day delay period, you can either increase or decrease the retention period in the policy.
     * * However, you are only allowed to increase the retention period on or after the retention lock date.
     * * You cannot change the value of policyLockedDateTime if the retention lock is already in effect.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="policyLockedDateTime")
    private @Nullable Output<String> policyLockedDateTime;

    /**
     * @return (Updatable) An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
     * * The retention lock feature controls whether Recovery Service strictly preserves backups for the duration defined in a policy. Retention lock is useful to enforce recovery window compliance and to prevent unintentional modifications to protected database backups.
     * * Recovery Service enforces a 14-day delay before the retention lock set for a policy can take effect. Therefore, you must set policyLockedDateTime  to a date that occurs 14 days after the current date.
     * * For example, assuming that the current date is Aug 1, 2023 9 pm, you can set policyLockedDateTime  to &#39;2023-08-15T21:00:00.600Z&#39; (Aug 15, 2023, 9:00 pm), or greater.
     * * During the 14-day delay period, you can either increase or decrease the retention period in the policy.
     * * However, you are only allowed to increase the retention period on or after the retention lock date.
     * * You cannot change the value of policyLockedDateTime if the retention lock is already in effect.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> policyLockedDateTime() {
        return Optional.ofNullable(this.policyLockedDateTime);
    }

    /**
     * The current state of the protection policy.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the protection policy.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * An RFC3339 formatted datetime string that indicates the created time for the protection policy. For example: &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return An RFC3339 formatted datetime string that indicates the created time for the protection policy. For example: &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * An RFC3339 formatted datetime string that indicates the updated time for the protection policy. For example: &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return An RFC3339 formatted datetime string that indicates the updated time for the protection policy. For example: &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private ProtectionPolicyState() {}

    private ProtectionPolicyState(ProtectionPolicyState $) {
        this.backupRetentionPeriodInDays = $.backupRetentionPeriodInDays;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isPredefinedPolicy = $.isPredefinedPolicy;
        this.lifecycleDetails = $.lifecycleDetails;
        this.mustEnforceCloudLocality = $.mustEnforceCloudLocality;
        this.policyLockedDateTime = $.policyLockedDateTime;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectionPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectionPolicyState $;

        public Builder() {
            $ = new ProtectionPolicyState();
        }

        public Builder(ProtectionPolicyState defaults) {
            $ = new ProtectionPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupRetentionPeriodInDays (Updatable) The maximum number of days to retain backups for a protected database.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPeriodInDays(@Nullable Output<Integer> backupRetentionPeriodInDays) {
            $.backupRetentionPeriodInDays = backupRetentionPeriodInDays;
            return this;
        }

        /**
         * @param backupRetentionPeriodInDays (Updatable) The maximum number of days to retain backups for a protected database.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPeriodInDays(Integer backupRetentionPeriodInDays) {
            return backupRetentionPeriodInDays(Output.of(backupRetentionPeriodInDays));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) A user provided name for the protection policy. The &#39;displayName&#39; does not have to be unique, and it can be modified. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user provided name for the protection policy. The &#39;displayName&#39; does not have to be unique, and it can be modified. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isPredefinedPolicy Set to TRUE if the policy is Oracle-defined, and FALSE for a user-defined custom policy. You can modify only the custom policies.
         * 
         * @return builder
         * 
         */
        public Builder isPredefinedPolicy(@Nullable Output<Boolean> isPredefinedPolicy) {
            $.isPredefinedPolicy = isPredefinedPolicy;
            return this;
        }

        /**
         * @param isPredefinedPolicy Set to TRUE if the policy is Oracle-defined, and FALSE for a user-defined custom policy. You can modify only the custom policies.
         * 
         * @return builder
         * 
         */
        public Builder isPredefinedPolicy(Boolean isPredefinedPolicy) {
            return isPredefinedPolicy(Output.of(isPredefinedPolicy));
        }

        /**
         * @param lifecycleDetails Detailed description about the current lifecycle state of the protection policy. For example, it can be used to provide actionable information for a resource in a Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Detailed description about the current lifecycle state of the protection policy. For example, it can be used to provide actionable information for a resource in a Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param mustEnforceCloudLocality Indicates whether the protection policy enforces Recovery Service to retain backups in the same cloud service environment where your Oracle Database is provisioned. This parameter is applicable if your Oracle Database runs in a different cloud service environment, such as Microsoft Azure. If you set the mustEnforceCloudLocality parameter to TRUE, then Recovery Service stores the database backups locally in the same cloud service environment where the database resides. For example, if your Oracle Database is provisioned on Microsoft Azure, then Recovery Service stores the database backups in Azure. Note: You cannot change the mustEnforceCloudLocality setting for a protection policy after you create it.
         * 
         * @return builder
         * 
         */
        public Builder mustEnforceCloudLocality(@Nullable Output<Boolean> mustEnforceCloudLocality) {
            $.mustEnforceCloudLocality = mustEnforceCloudLocality;
            return this;
        }

        /**
         * @param mustEnforceCloudLocality Indicates whether the protection policy enforces Recovery Service to retain backups in the same cloud service environment where your Oracle Database is provisioned. This parameter is applicable if your Oracle Database runs in a different cloud service environment, such as Microsoft Azure. If you set the mustEnforceCloudLocality parameter to TRUE, then Recovery Service stores the database backups locally in the same cloud service environment where the database resides. For example, if your Oracle Database is provisioned on Microsoft Azure, then Recovery Service stores the database backups in Azure. Note: You cannot change the mustEnforceCloudLocality setting for a protection policy after you create it.
         * 
         * @return builder
         * 
         */
        public Builder mustEnforceCloudLocality(Boolean mustEnforceCloudLocality) {
            return mustEnforceCloudLocality(Output.of(mustEnforceCloudLocality));
        }

        /**
         * @param policyLockedDateTime (Updatable) An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
         * * The retention lock feature controls whether Recovery Service strictly preserves backups for the duration defined in a policy. Retention lock is useful to enforce recovery window compliance and to prevent unintentional modifications to protected database backups.
         * * Recovery Service enforces a 14-day delay before the retention lock set for a policy can take effect. Therefore, you must set policyLockedDateTime  to a date that occurs 14 days after the current date.
         * * For example, assuming that the current date is Aug 1, 2023 9 pm, you can set policyLockedDateTime  to &#39;2023-08-15T21:00:00.600Z&#39; (Aug 15, 2023, 9:00 pm), or greater.
         * * During the 14-day delay period, you can either increase or decrease the retention period in the policy.
         * * However, you are only allowed to increase the retention period on or after the retention lock date.
         * * You cannot change the value of policyLockedDateTime if the retention lock is already in effect.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder policyLockedDateTime(@Nullable Output<String> policyLockedDateTime) {
            $.policyLockedDateTime = policyLockedDateTime;
            return this;
        }

        /**
         * @param policyLockedDateTime (Updatable) An RFC3339 formatted datetime string that specifies the exact date and time for the retention lock to take effect and permanently lock the retention period defined in the policy.
         * * The retention lock feature controls whether Recovery Service strictly preserves backups for the duration defined in a policy. Retention lock is useful to enforce recovery window compliance and to prevent unintentional modifications to protected database backups.
         * * Recovery Service enforces a 14-day delay before the retention lock set for a policy can take effect. Therefore, you must set policyLockedDateTime  to a date that occurs 14 days after the current date.
         * * For example, assuming that the current date is Aug 1, 2023 9 pm, you can set policyLockedDateTime  to &#39;2023-08-15T21:00:00.600Z&#39; (Aug 15, 2023, 9:00 pm), or greater.
         * * During the 14-day delay period, you can either increase or decrease the retention period in the policy.
         * * However, you are only allowed to increase the retention period on or after the retention lock date.
         * * You cannot change the value of policyLockedDateTime if the retention lock is already in effect.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder policyLockedDateTime(String policyLockedDateTime) {
            return policyLockedDateTime(Output.of(policyLockedDateTime));
        }

        /**
         * @param state The current state of the protection policy.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the protection policy.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated An RFC3339 formatted datetime string that indicates the created time for the protection policy. For example: &#39;2020-05-22T21:10:29.600Z&#39;.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated An RFC3339 formatted datetime string that indicates the created time for the protection policy. For example: &#39;2020-05-22T21:10:29.600Z&#39;.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated An RFC3339 formatted datetime string that indicates the updated time for the protection policy. For example: &#39;2020-05-22T21:10:29.600Z&#39;.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated An RFC3339 formatted datetime string that indicates the updated time for the protection policy. For example: &#39;2020-05-22T21:10:29.600Z&#39;.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public ProtectionPolicyState build() {
            return $;
        }
    }

}
