// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.RecoveryMod.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.RecoveryMod.outputs.GetProtectedDatabaseMetric;
import com.pulumi.oci.RecoveryMod.outputs.GetProtectedDatabaseRecoveryServiceSubnet;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProtectedDatabaseResult {
    /**
     * @return The OCID of the compartment that contains the protected database.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The OCID of the protected database.
     * 
     */
    private @Nullable String databaseId;
    /**
     * @return The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
     * 
     */
    private @Nullable String databaseSize;
    /**
     * @return The dbUniqueName for the protected database in Recovery Service. You cannot change the unique name.
     * 
     */
    private @Nullable String dbUniqueName;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The protected database name. You can change the displayName. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Indicates the protection status of the database. Allowed values are:
     * * HEALTHY
     * * WARNING
     * * ALERT
     * 
     */
    private @Nullable String health;
    /**
     * @return A message describing the current health of the protected database.
     * 
     */
    private @Nullable String healthDetails;
    /**
     * @return The OCID of the protected database.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates whether the protected database is created by Recovery Service or created manually. Set to &lt;b&gt;TRUE&lt;/b&gt; for a service-defined protected database. When you enable the OCI-managed automatic backups option for a database and set Recovery Service as the backup destination, then Recovery Service creates the associated protected database resource. Set to &lt;b&gt;FALSE&lt;/b&gt; for a user-defined protected database.
     * 
     */
    private @Nullable Boolean isReadOnlyResource;
    /**
     * @return The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups. For this to be effective, additional configuration is needed on client side.
     * 
     */
    private @Nullable Boolean isRedoLogsShipped;
    /**
     * @return Detailed description about the current lifecycle state of the protected database. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Backup performance and storage utilization metrics for the protected database.
     * 
     */
    private @Nullable List<GetProtectedDatabaseMetric> metrics;
    private @Nullable String password;
    private String protectedDatabaseId;
    /**
     * @return The OCID of the protection policy associated with the protected database.
     * 
     */
    private @Nullable String protectionPolicyId;
    /**
     * @return List of recovery service subnet resources associated with the protected database.
     * 
     */
    private @Nullable List<GetProtectedDatabaseRecoveryServiceSubnet> recoveryServiceSubnets;
    /**
     * @return The current state of the Protected Database.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return An RFC3339 formatted datetime string that indicates the created time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return An RFC3339 formatted datetime string that indicates the last updated time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The virtual private catalog (VPC) user credentials that authenticates the protected database to access Recovery Service.
     * 
     */
    private @Nullable String vpcUserName;

    private GetProtectedDatabaseResult() {}
    /**
     * @return The OCID of the compartment that contains the protected database.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The OCID of the protected database.
     * 
     */
    public Optional<String> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }
    /**
     * @return The size of the protected database. XS - Less than 5GB, S - 5GB to 50GB, M - 50GB to 500GB, L - 500GB to 1TB, XL - 1TB to 5TB, XXL - Greater than 5TB.
     * 
     */
    public Optional<String> databaseSize() {
        return Optional.ofNullable(this.databaseSize);
    }
    /**
     * @return The dbUniqueName for the protected database in Recovery Service. You cannot change the unique name.
     * 
     */
    public Optional<String> dbUniqueName() {
        return Optional.ofNullable(this.dbUniqueName);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The protected database name. You can change the displayName. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Indicates the protection status of the database. Allowed values are:
     * * HEALTHY
     * * WARNING
     * * ALERT
     * 
     */
    public Optional<String> health() {
        return Optional.ofNullable(this.health);
    }
    /**
     * @return A message describing the current health of the protected database.
     * 
     */
    public Optional<String> healthDetails() {
        return Optional.ofNullable(this.healthDetails);
    }
    /**
     * @return The OCID of the protected database.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether the protected database is created by Recovery Service or created manually. Set to &lt;b&gt;TRUE&lt;/b&gt; for a service-defined protected database. When you enable the OCI-managed automatic backups option for a database and set Recovery Service as the backup destination, then Recovery Service creates the associated protected database resource. Set to &lt;b&gt;FALSE&lt;/b&gt; for a user-defined protected database.
     * 
     */
    public Optional<Boolean> isReadOnlyResource() {
        return Optional.ofNullable(this.isReadOnlyResource);
    }
    /**
     * @return The value TRUE indicates that the protected database is configured to use Real-time data protection, and redo-data is sent from the protected database to Recovery Service. Real-time data protection substantially reduces the window of potential data loss that exists between successive archived redo log backups. For this to be effective, additional configuration is needed on client side.
     * 
     */
    public Optional<Boolean> isRedoLogsShipped() {
        return Optional.ofNullable(this.isRedoLogsShipped);
    }
    /**
     * @return Detailed description about the current lifecycle state of the protected database. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Backup performance and storage utilization metrics for the protected database.
     * 
     */
    public List<GetProtectedDatabaseMetric> metrics() {
        return this.metrics == null ? List.of() : this.metrics;
    }
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    public String protectedDatabaseId() {
        return this.protectedDatabaseId;
    }
    /**
     * @return The OCID of the protection policy associated with the protected database.
     * 
     */
    public Optional<String> protectionPolicyId() {
        return Optional.ofNullable(this.protectionPolicyId);
    }
    /**
     * @return List of recovery service subnet resources associated with the protected database.
     * 
     */
    public List<GetProtectedDatabaseRecoveryServiceSubnet> recoveryServiceSubnets() {
        return this.recoveryServiceSubnets == null ? List.of() : this.recoveryServiceSubnets;
    }
    /**
     * @return The current state of the Protected Database.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`. For more information, see [Resource Tags](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/resourcetags.htm)
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return An RFC3339 formatted datetime string that indicates the created time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return An RFC3339 formatted datetime string that indicates the last updated time for a protected database. For example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The virtual private catalog (VPC) user credentials that authenticates the protected database to access Recovery Service.
     * 
     */
    public Optional<String> vpcUserName() {
        return Optional.ofNullable(this.vpcUserName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProtectedDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String databaseId;
        private @Nullable String databaseSize;
        private @Nullable String dbUniqueName;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String health;
        private @Nullable String healthDetails;
        private @Nullable String id;
        private @Nullable Boolean isReadOnlyResource;
        private @Nullable Boolean isRedoLogsShipped;
        private @Nullable String lifecycleDetails;
        private @Nullable List<GetProtectedDatabaseMetric> metrics;
        private @Nullable String password;
        private String protectedDatabaseId;
        private @Nullable String protectionPolicyId;
        private @Nullable List<GetProtectedDatabaseRecoveryServiceSubnet> recoveryServiceSubnets;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String vpcUserName;
        public Builder() {}
        public Builder(GetProtectedDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseId = defaults.databaseId;
    	      this.databaseSize = defaults.databaseSize;
    	      this.dbUniqueName = defaults.dbUniqueName;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.health = defaults.health;
    	      this.healthDetails = defaults.healthDetails;
    	      this.id = defaults.id;
    	      this.isReadOnlyResource = defaults.isReadOnlyResource;
    	      this.isRedoLogsShipped = defaults.isRedoLogsShipped;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.metrics = defaults.metrics;
    	      this.password = defaults.password;
    	      this.protectedDatabaseId = defaults.protectedDatabaseId;
    	      this.protectionPolicyId = defaults.protectionPolicyId;
    	      this.recoveryServiceSubnets = defaults.recoveryServiceSubnets;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vpcUserName = defaults.vpcUserName;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseId(@Nullable String databaseId) {
            this.databaseId = databaseId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseSize(@Nullable String databaseSize) {
            this.databaseSize = databaseSize;
            return this;
        }
        @CustomType.Setter
        public Builder dbUniqueName(@Nullable String dbUniqueName) {
            this.dbUniqueName = dbUniqueName;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder health(@Nullable String health) {
            this.health = health;
            return this;
        }
        @CustomType.Setter
        public Builder healthDetails(@Nullable String healthDetails) {
            this.healthDetails = healthDetails;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isReadOnlyResource(@Nullable Boolean isReadOnlyResource) {
            this.isReadOnlyResource = isReadOnlyResource;
            return this;
        }
        @CustomType.Setter
        public Builder isRedoLogsShipped(@Nullable Boolean isRedoLogsShipped) {
            this.isRedoLogsShipped = isRedoLogsShipped;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder metrics(@Nullable List<GetProtectedDatabaseMetric> metrics) {
            this.metrics = metrics;
            return this;
        }
        public Builder metrics(GetProtectedDatabaseMetric... metrics) {
            return metrics(List.of(metrics));
        }
        @CustomType.Setter
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder protectedDatabaseId(String protectedDatabaseId) {
            this.protectedDatabaseId = Objects.requireNonNull(protectedDatabaseId);
            return this;
        }
        @CustomType.Setter
        public Builder protectionPolicyId(@Nullable String protectionPolicyId) {
            this.protectionPolicyId = protectionPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryServiceSubnets(@Nullable List<GetProtectedDatabaseRecoveryServiceSubnet> recoveryServiceSubnets) {
            this.recoveryServiceSubnets = recoveryServiceSubnets;
            return this;
        }
        public Builder recoveryServiceSubnets(GetProtectedDatabaseRecoveryServiceSubnet... recoveryServiceSubnets) {
            return recoveryServiceSubnets(List.of(recoveryServiceSubnets));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder vpcUserName(@Nullable String vpcUserName) {
            this.vpcUserName = vpcUserName;
            return this;
        }
        public GetProtectedDatabaseResult build() {
            final var o = new GetProtectedDatabaseResult();
            o.compartmentId = compartmentId;
            o.databaseId = databaseId;
            o.databaseSize = databaseSize;
            o.dbUniqueName = dbUniqueName;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.health = health;
            o.healthDetails = healthDetails;
            o.id = id;
            o.isReadOnlyResource = isReadOnlyResource;
            o.isRedoLogsShipped = isRedoLogsShipped;
            o.lifecycleDetails = lifecycleDetails;
            o.metrics = metrics;
            o.password = password;
            o.protectedDatabaseId = protectedDatabaseId;
            o.protectionPolicyId = protectionPolicyId;
            o.recoveryServiceSubnets = recoveryServiceSubnets;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.vpcUserName = vpcUserName;
            return o;
        }
    }
}
