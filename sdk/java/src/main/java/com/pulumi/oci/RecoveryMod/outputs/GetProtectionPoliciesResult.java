// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.RecoveryMod.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.RecoveryMod.outputs.GetProtectionPoliciesFilter;
import com.pulumi.oci.RecoveryMod.outputs.GetProtectionPoliciesProtectionPolicyCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProtectionPoliciesResult {
    /**
     * @return The OCID of the compartment that contains the protection policy.
     * 
     */
    private String compartmentId;
    /**
     * @return A user provided name for the protection policy.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetProtectionPoliciesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String owner;
    /**
     * @return The list of protection_policy_collection.
     * 
     */
    private @Nullable List<GetProtectionPoliciesProtectionPolicyCollection> protectionPolicyCollections;
    private @Nullable String protectionPolicyId;
    /**
     * @return The current state of the protection policy. Allowed values are:
     * * CREATING
     * * UPDATING
     * * ACTIVE
     * * DELETING
     * * DELETED
     * * FAILED
     * 
     */
    private @Nullable String state;

    private GetProtectionPoliciesResult() {}
    /**
     * @return The OCID of the compartment that contains the protection policy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user provided name for the protection policy.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetProtectionPoliciesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return The list of protection_policy_collection.
     * 
     */
    public List<GetProtectionPoliciesProtectionPolicyCollection> protectionPolicyCollections() {
        return this.protectionPolicyCollections == null ? List.of() : this.protectionPolicyCollections;
    }
    public Optional<String> protectionPolicyId() {
        return Optional.ofNullable(this.protectionPolicyId);
    }
    /**
     * @return The current state of the protection policy. Allowed values are:
     * * CREATING
     * * UPDATING
     * * ACTIVE
     * * DELETING
     * * DELETED
     * * FAILED
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProtectionPoliciesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetProtectionPoliciesFilter> filters;
        private @Nullable String id;
        private @Nullable String owner;
        private @Nullable List<GetProtectionPoliciesProtectionPolicyCollection> protectionPolicyCollections;
        private @Nullable String protectionPolicyId;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetProtectionPoliciesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.owner = defaults.owner;
    	      this.protectionPolicyCollections = defaults.protectionPolicyCollections;
    	      this.protectionPolicyId = defaults.protectionPolicyId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetProtectionPoliciesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetProtectionPoliciesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder owner(@Nullable String owner) {
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder protectionPolicyCollections(@Nullable List<GetProtectionPoliciesProtectionPolicyCollection> protectionPolicyCollections) {
            this.protectionPolicyCollections = protectionPolicyCollections;
            return this;
        }
        public Builder protectionPolicyCollections(GetProtectionPoliciesProtectionPolicyCollection... protectionPolicyCollections) {
            return protectionPolicyCollections(List.of(protectionPolicyCollections));
        }
        @CustomType.Setter
        public Builder protectionPolicyId(@Nullable String protectionPolicyId) {
            this.protectionPolicyId = protectionPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetProtectionPoliciesResult build() {
            final var o = new GetProtectionPoliciesResult();
            o.compartmentId = compartmentId;
            o.displayName = displayName;
            o.filters = filters;
            o.id = id;
            o.owner = owner;
            o.protectionPolicyCollections = protectionPolicyCollections;
            o.protectionPolicyId = protectionPolicyId;
            o.state = state;
            return o;
        }
    }
}
