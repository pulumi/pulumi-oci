// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.RecoveryMod.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.RecoveryMod.outputs.GetRecoveryServiceSubnetsFilter;
import com.pulumi.oci.RecoveryMod.outputs.GetRecoveryServiceSubnetsRecoveryServiceSubnetCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRecoveryServiceSubnetsResult {
    /**
     * @return The compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return A user-provided name for the recovery service subnet.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetRecoveryServiceSubnetsFilter> filters;
    /**
     * @return The recovery service subnet OCID.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of recovery_service_subnet_collection.
     * 
     */
    private List<GetRecoveryServiceSubnetsRecoveryServiceSubnetCollection> recoveryServiceSubnetCollections;
    /**
     * @return The current state of the recovery service subnet. Allowed values are:
     * * CREATING
     * * UPDATING
     * * ACTIVE
     * * DELETING
     * * DELETED
     * * FAILED
     * 
     */
    private @Nullable String state;
    /**
     * @return VCN Identifier.
     * 
     */
    private @Nullable String vcnId;

    private GetRecoveryServiceSubnetsResult() {}
    /**
     * @return The compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-provided name for the recovery service subnet.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetRecoveryServiceSubnetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The recovery service subnet OCID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of recovery_service_subnet_collection.
     * 
     */
    public List<GetRecoveryServiceSubnetsRecoveryServiceSubnetCollection> recoveryServiceSubnetCollections() {
        return this.recoveryServiceSubnetCollections;
    }
    /**
     * @return The current state of the recovery service subnet. Allowed values are:
     * * CREATING
     * * UPDATING
     * * ACTIVE
     * * DELETING
     * * DELETED
     * * FAILED
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return VCN Identifier.
     * 
     */
    public Optional<String> vcnId() {
        return Optional.ofNullable(this.vcnId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecoveryServiceSubnetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetRecoveryServiceSubnetsFilter> filters;
        private @Nullable String id;
        private List<GetRecoveryServiceSubnetsRecoveryServiceSubnetCollection> recoveryServiceSubnetCollections;
        private @Nullable String state;
        private @Nullable String vcnId;
        public Builder() {}
        public Builder(GetRecoveryServiceSubnetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.recoveryServiceSubnetCollections = defaults.recoveryServiceSubnetCollections;
    	      this.state = defaults.state;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetRecoveryServiceSubnetsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetRecoveryServiceSubnetsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetRecoveryServiceSubnetsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryServiceSubnetCollections(List<GetRecoveryServiceSubnetsRecoveryServiceSubnetCollection> recoveryServiceSubnetCollections) {
            if (recoveryServiceSubnetCollections == null) {
              throw new MissingRequiredPropertyException("GetRecoveryServiceSubnetsResult", "recoveryServiceSubnetCollections");
            }
            this.recoveryServiceSubnetCollections = recoveryServiceSubnetCollections;
            return this;
        }
        public Builder recoveryServiceSubnetCollections(GetRecoveryServiceSubnetsRecoveryServiceSubnetCollection... recoveryServiceSubnetCollections) {
            return recoveryServiceSubnetCollections(List.of(recoveryServiceSubnetCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(@Nullable String vcnId) {

            this.vcnId = vcnId;
            return this;
        }
        public GetRecoveryServiceSubnetsResult build() {
            final var _resultValue = new GetRecoveryServiceSubnetsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.recoveryServiceSubnetCollections = recoveryServiceSubnetCollections;
            _resultValue.state = state;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
