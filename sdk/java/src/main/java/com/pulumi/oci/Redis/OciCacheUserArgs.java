// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Redis;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Redis.inputs.OciCacheUserAuthenticationModeArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OciCacheUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final OciCacheUserArgs Empty = new OciCacheUserArgs();

    /**
     * (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
     * 
     */
    @Import(name="aclString", required=true)
    private Output<String> aclString;

    /**
     * @return (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
     * 
     */
    public Output<String> aclString() {
        return this.aclString;
    }

    /**
     * (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
     * 
     */
    @Import(name="authenticationMode", required=true)
    private Output<OciCacheUserAuthenticationModeArgs> authenticationMode;

    /**
     * @return (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
     * 
     */
    public Output<OciCacheUserAuthenticationModeArgs> authenticationMode() {
        return this.authenticationMode;
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Description of Oracle Cloud Infrastructure cache user.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return (Updatable) Description of Oracle Cloud Infrastructure cache user.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private OciCacheUserArgs() {}

    private OciCacheUserArgs(OciCacheUserArgs $) {
        this.aclString = $.aclString;
        this.authenticationMode = $.authenticationMode;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.freeformTags = $.freeformTags;
        this.name = $.name;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OciCacheUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OciCacheUserArgs $;

        public Builder() {
            $ = new OciCacheUserArgs();
        }

        public Builder(OciCacheUserArgs defaults) {
            $ = new OciCacheUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aclString (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
         * 
         * @return builder
         * 
         */
        public Builder aclString(Output<String> aclString) {
            $.aclString = aclString;
            return this;
        }

        /**
         * @param aclString (Updatable) ACL string of Oracle Cloud Infrastructure cache user.
         * 
         * @return builder
         * 
         */
        public Builder aclString(String aclString) {
            return aclString(Output.of(aclString));
        }

        /**
         * @param authenticationMode (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMode(Output<OciCacheUserAuthenticationModeArgs> authenticationMode) {
            $.authenticationMode = authenticationMode;
            return this;
        }

        /**
         * @param authenticationMode (Updatable) These are the Authentication details of an Oracle Cloud Infrastructure cache user.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMode(OciCacheUserAuthenticationModeArgs authenticationMode) {
            return authenticationMode(Output.of(authenticationMode));
        }

        /**
         * @param compartmentId (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Oracle Cloud Infrastructure cache user compartment ID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Description of Oracle Cloud Infrastructure cache user.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of Oracle Cloud Infrastructure cache user.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param name Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Oracle Cloud Infrastructure cache user name is required to connect to an Oracle Cloud Infrastructure cache cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param status (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) Oracle Cloud Infrastructure cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the associated clusters. Default value is ON.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public OciCacheUserArgs build() {
            if ($.aclString == null) {
                throw new MissingRequiredPropertyException("OciCacheUserArgs", "aclString");
            }
            if ($.authenticationMode == null) {
                throw new MissingRequiredPropertyException("OciCacheUserArgs", "authenticationMode");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("OciCacheUserArgs", "compartmentId");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("OciCacheUserArgs", "description");
            }
            return $;
        }
    }

}
