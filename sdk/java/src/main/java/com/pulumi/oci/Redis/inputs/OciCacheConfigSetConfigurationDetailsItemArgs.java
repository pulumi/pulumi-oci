// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Redis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OciCacheConfigSetConfigurationDetailsItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final OciCacheConfigSetConfigurationDetailsItemArgs Empty = new OciCacheConfigSetConfigurationDetailsItemArgs();

    /**
     * Key is the configuration key.
     * 
     */
    @Import(name="configKey", required=true)
    private Output<String> configKey;

    /**
     * @return Key is the configuration key.
     * 
     */
    public Output<String> configKey() {
        return this.configKey;
    }

    /**
     * Value of the configuration as a string. Can represent a string, boolean, or number. Example: &#34;true&#34;, &#34;42&#34;, or &#34;someString&#34;.
     * 
     */
    @Import(name="configValue", required=true)
    private Output<String> configValue;

    /**
     * @return Value of the configuration as a string. Can represent a string, boolean, or number. Example: &#34;true&#34;, &#34;42&#34;, or &#34;someString&#34;.
     * 
     */
    public Output<String> configValue() {
        return this.configValue;
    }

    private OciCacheConfigSetConfigurationDetailsItemArgs() {}

    private OciCacheConfigSetConfigurationDetailsItemArgs(OciCacheConfigSetConfigurationDetailsItemArgs $) {
        this.configKey = $.configKey;
        this.configValue = $.configValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OciCacheConfigSetConfigurationDetailsItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OciCacheConfigSetConfigurationDetailsItemArgs $;

        public Builder() {
            $ = new OciCacheConfigSetConfigurationDetailsItemArgs();
        }

        public Builder(OciCacheConfigSetConfigurationDetailsItemArgs defaults) {
            $ = new OciCacheConfigSetConfigurationDetailsItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configKey Key is the configuration key.
         * 
         * @return builder
         * 
         */
        public Builder configKey(Output<String> configKey) {
            $.configKey = configKey;
            return this;
        }

        /**
         * @param configKey Key is the configuration key.
         * 
         * @return builder
         * 
         */
        public Builder configKey(String configKey) {
            return configKey(Output.of(configKey));
        }

        /**
         * @param configValue Value of the configuration as a string. Can represent a string, boolean, or number. Example: &#34;true&#34;, &#34;42&#34;, or &#34;someString&#34;.
         * 
         * @return builder
         * 
         */
        public Builder configValue(Output<String> configValue) {
            $.configValue = configValue;
            return this;
        }

        /**
         * @param configValue Value of the configuration as a string. Can represent a string, boolean, or number. Example: &#34;true&#34;, &#34;42&#34;, or &#34;someString&#34;.
         * 
         * @return builder
         * 
         */
        public Builder configValue(String configValue) {
            return configValue(Output.of(configValue));
        }

        public OciCacheConfigSetConfigurationDetailsItemArgs build() {
            if ($.configKey == null) {
                throw new MissingRequiredPropertyException("OciCacheConfigSetConfigurationDetailsItemArgs", "configKey");
            }
            if ($.configValue == null) {
                throw new MissingRequiredPropertyException("OciCacheConfigSetConfigurationDetailsItemArgs", "configValue");
            }
            return $;
        }
    }

}
