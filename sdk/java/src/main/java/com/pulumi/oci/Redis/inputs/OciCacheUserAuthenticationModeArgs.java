// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Redis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OciCacheUserAuthenticationModeArgs extends com.pulumi.resources.ResourceArgs {

    public static final OciCacheUserAuthenticationModeArgs Empty = new OciCacheUserAuthenticationModeArgs();

    /**
     * (Updatable) This is Authentication Type of Oracle Cloud Infrastructure cache user
     * 
     */
    @Import(name="authenticationType", required=true)
    private Output<String> authenticationType;

    /**
     * @return (Updatable) This is Authentication Type of Oracle Cloud Infrastructure cache user
     * 
     */
    public Output<String> authenticationType() {
        return this.authenticationType;
    }

    /**
     * (Updatable) SHA-256 hashed passwords for Oracle Cloud Infrastructure Cache user,required if authenticationType is set to PASSWORD.
     * 
     */
    @Import(name="hashedPasswords")
    private @Nullable Output<List<String>> hashedPasswords;

    /**
     * @return (Updatable) SHA-256 hashed passwords for Oracle Cloud Infrastructure Cache user,required if authenticationType is set to PASSWORD.
     * 
     */
    public Optional<Output<List<String>>> hashedPasswords() {
        return Optional.ofNullable(this.hashedPasswords);
    }

    private OciCacheUserAuthenticationModeArgs() {}

    private OciCacheUserAuthenticationModeArgs(OciCacheUserAuthenticationModeArgs $) {
        this.authenticationType = $.authenticationType;
        this.hashedPasswords = $.hashedPasswords;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OciCacheUserAuthenticationModeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OciCacheUserAuthenticationModeArgs $;

        public Builder() {
            $ = new OciCacheUserAuthenticationModeArgs();
        }

        public Builder(OciCacheUserAuthenticationModeArgs defaults) {
            $ = new OciCacheUserAuthenticationModeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationType (Updatable) This is Authentication Type of Oracle Cloud Infrastructure cache user
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType (Updatable) This is Authentication Type of Oracle Cloud Infrastructure cache user
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param hashedPasswords (Updatable) SHA-256 hashed passwords for Oracle Cloud Infrastructure Cache user,required if authenticationType is set to PASSWORD.
         * 
         * @return builder
         * 
         */
        public Builder hashedPasswords(@Nullable Output<List<String>> hashedPasswords) {
            $.hashedPasswords = hashedPasswords;
            return this;
        }

        /**
         * @param hashedPasswords (Updatable) SHA-256 hashed passwords for Oracle Cloud Infrastructure Cache user,required if authenticationType is set to PASSWORD.
         * 
         * @return builder
         * 
         */
        public Builder hashedPasswords(List<String> hashedPasswords) {
            return hashedPasswords(Output.of(hashedPasswords));
        }

        /**
         * @param hashedPasswords (Updatable) SHA-256 hashed passwords for Oracle Cloud Infrastructure Cache user,required if authenticationType is set to PASSWORD.
         * 
         * @return builder
         * 
         */
        public Builder hashedPasswords(String... hashedPasswords) {
            return hashedPasswords(List.of(hashedPasswords));
        }

        public OciCacheUserAuthenticationModeArgs build() {
            if ($.authenticationType == null) {
                throw new MissingRequiredPropertyException("OciCacheUserAuthenticationModeArgs", "authenticationType");
            }
            return $;
        }
    }

}
