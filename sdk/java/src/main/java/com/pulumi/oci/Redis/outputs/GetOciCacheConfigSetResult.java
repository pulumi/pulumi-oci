// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Redis.outputs.GetOciCacheConfigSetConfigurationDetail;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOciCacheConfigSetResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Oracle Cloud Infrastructure Cache Config Set.
     * 
     */
    private String compartmentId;
    /**
     * @return List of Oracle Cloud Infrastructure Cache Config Set Values.
     * 
     */
    private List<GetOciCacheConfigSetConfigurationDetail> configurationDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the default Oracle Cloud Infrastructure Cache Config Set which the custom Oracle Cloud Infrastructure Cache Config Set is based upon.
     * 
     */
    private String defaultConfigSetId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A description of the Oracle Cloud Infrastructure Cache Config Set.
     * 
     */
    private String description;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Oracle Cloud Infrastructure Cache Config Set.
     * 
     */
    private String id;
    private String ociCacheConfigSetId;
    /**
     * @return The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
     * 
     */
    private String softwareVersion;
    /**
     * @return The current state of the Oracle Cloud Infrastructure Cache Config Set.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the Oracle Cloud Infrastructure Cache Config Set was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the Oracle Cloud Infrastructure Cache Config Set was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetOciCacheConfigSetResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the Oracle Cloud Infrastructure Cache Config Set.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return List of Oracle Cloud Infrastructure Cache Config Set Values.
     * 
     */
    public List<GetOciCacheConfigSetConfigurationDetail> configurationDetails() {
        return this.configurationDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the default Oracle Cloud Infrastructure Cache Config Set which the custom Oracle Cloud Infrastructure Cache Config Set is based upon.
     * 
     */
    public String defaultConfigSetId() {
        return this.defaultConfigSetId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A description of the Oracle Cloud Infrastructure Cache Config Set.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Oracle Cloud Infrastructure Cache Config Set.
     * 
     */
    public String id() {
        return this.id;
    }
    public String ociCacheConfigSetId() {
        return this.ociCacheConfigSetId;
    }
    /**
     * @return The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
     * 
     */
    public String softwareVersion() {
        return this.softwareVersion;
    }
    /**
     * @return The current state of the Oracle Cloud Infrastructure Cache Config Set.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the Oracle Cloud Infrastructure Cache Config Set was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the Oracle Cloud Infrastructure Cache Config Set was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOciCacheConfigSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetOciCacheConfigSetConfigurationDetail> configurationDetails;
        private String defaultConfigSetId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String ociCacheConfigSetId;
        private String softwareVersion;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetOciCacheConfigSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.configurationDetails = defaults.configurationDetails;
    	      this.defaultConfigSetId = defaults.defaultConfigSetId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.ociCacheConfigSetId = defaults.ociCacheConfigSetId;
    	      this.softwareVersion = defaults.softwareVersion;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder configurationDetails(List<GetOciCacheConfigSetConfigurationDetail> configurationDetails) {
            if (configurationDetails == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "configurationDetails");
            }
            this.configurationDetails = configurationDetails;
            return this;
        }
        public Builder configurationDetails(GetOciCacheConfigSetConfigurationDetail... configurationDetails) {
            return configurationDetails(List.of(configurationDetails));
        }
        @CustomType.Setter
        public Builder defaultConfigSetId(String defaultConfigSetId) {
            if (defaultConfigSetId == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "defaultConfigSetId");
            }
            this.defaultConfigSetId = defaultConfigSetId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ociCacheConfigSetId(String ociCacheConfigSetId) {
            if (ociCacheConfigSetId == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "ociCacheConfigSetId");
            }
            this.ociCacheConfigSetId = ociCacheConfigSetId;
            return this;
        }
        @CustomType.Setter
        public Builder softwareVersion(String softwareVersion) {
            if (softwareVersion == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "softwareVersion");
            }
            this.softwareVersion = softwareVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetOciCacheConfigSetResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetOciCacheConfigSetResult build() {
            final var _resultValue = new GetOciCacheConfigSetResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.configurationDetails = configurationDetails;
            _resultValue.defaultConfigSetId = defaultConfigSetId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.ociCacheConfigSetId = ociCacheConfigSetId;
            _resultValue.softwareVersion = softwareVersion;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
