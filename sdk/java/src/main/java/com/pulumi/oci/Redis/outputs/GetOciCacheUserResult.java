// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Redis.outputs.GetOciCacheUserAuthenticationMode;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOciCacheUserResult {
    /**
     * @return ACL string of Oracle Cloud Infrastructure cache user.
     * 
     */
    private String aclString;
    /**
     * @return These are the Authentication details of an Oracle Cloud Infrastructure cache user.
     * 
     */
    private List<GetOciCacheUserAuthenticationMode> authenticationModes;
    /**
     * @return Oracle Cloud Infrastructure Cache user compartment ID.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Description of Oracle Cloud Infrastructure cache user.
     * 
     */
    private String description;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Oracle Cloud Infrastructure Cache user unique ID.
     * 
     */
    private String id;
    /**
     * @return Oracle Cloud Infrastructure Cache user name.
     * 
     */
    private String name;
    private String ociCacheUserId;
    /**
     * @return Oracle Cloud Infrastructure Cache user lifecycle state.
     * 
     */
    private String state;
    /**
     * @return Oracle Cloud Infrastructure Cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the cluster.
     * 
     */
    private String status;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time, when the Oracle Cloud Infrastructure cache user was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time, when the Oracle Cloud Infrastructure cache user was updated.
     * 
     */
    private String timeUpdated;

    private GetOciCacheUserResult() {}
    /**
     * @return ACL string of Oracle Cloud Infrastructure cache user.
     * 
     */
    public String aclString() {
        return this.aclString;
    }
    /**
     * @return These are the Authentication details of an Oracle Cloud Infrastructure cache user.
     * 
     */
    public List<GetOciCacheUserAuthenticationMode> authenticationModes() {
        return this.authenticationModes;
    }
    /**
     * @return Oracle Cloud Infrastructure Cache user compartment ID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of Oracle Cloud Infrastructure cache user.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Oracle Cloud Infrastructure Cache user unique ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Oracle Cloud Infrastructure Cache user name.
     * 
     */
    public String name() {
        return this.name;
    }
    public String ociCacheUserId() {
        return this.ociCacheUserId;
    }
    /**
     * @return Oracle Cloud Infrastructure Cache user lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Oracle Cloud Infrastructure Cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the cluster.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time, when the Oracle Cloud Infrastructure cache user was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time, when the Oracle Cloud Infrastructure cache user was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOciCacheUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aclString;
        private List<GetOciCacheUserAuthenticationMode> authenticationModes;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private Map<String,String> freeformTags;
        private String id;
        private String name;
        private String ociCacheUserId;
        private String state;
        private String status;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetOciCacheUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aclString = defaults.aclString;
    	      this.authenticationModes = defaults.authenticationModes;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ociCacheUserId = defaults.ociCacheUserId;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder aclString(String aclString) {
            if (aclString == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "aclString");
            }
            this.aclString = aclString;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationModes(List<GetOciCacheUserAuthenticationMode> authenticationModes) {
            if (authenticationModes == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "authenticationModes");
            }
            this.authenticationModes = authenticationModes;
            return this;
        }
        public Builder authenticationModes(GetOciCacheUserAuthenticationMode... authenticationModes) {
            return authenticationModes(List.of(authenticationModes));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ociCacheUserId(String ociCacheUserId) {
            if (ociCacheUserId == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "ociCacheUserId");
            }
            this.ociCacheUserId = ociCacheUserId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetOciCacheUserResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetOciCacheUserResult build() {
            final var _resultValue = new GetOciCacheUserResult();
            _resultValue.aclString = aclString;
            _resultValue.authenticationModes = authenticationModes;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.ociCacheUserId = ociCacheUserId;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
