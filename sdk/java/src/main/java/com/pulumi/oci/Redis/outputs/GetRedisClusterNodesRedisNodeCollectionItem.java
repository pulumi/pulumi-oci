// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRedisClusterNodesRedisNodeCollectionItem {
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
     * 
     */
    private String privateEndpointFqdn;
    /**
     * @return The private IP address of the API endpoint to access a specific node.
     * 
     */
    private String privateEndpointIpAddress;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
     * 
     */
    private String redisClusterId;
    /**
     * @return The shard number to which the node belongs to.
     * 
     */
    private Integer shardNumber;

    private GetRedisClusterNodesRedisNodeCollectionItem() {}
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The fully qualified domain name (FQDN) of the API endpoint to access a specific node.
     * 
     */
    public String privateEndpointFqdn() {
        return this.privateEndpointFqdn;
    }
    /**
     * @return The private IP address of the API endpoint to access a specific node.
     * 
     */
    public String privateEndpointIpAddress() {
        return this.privateEndpointIpAddress;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
     * 
     */
    public String redisClusterId() {
        return this.redisClusterId;
    }
    /**
     * @return The shard number to which the node belongs to.
     * 
     */
    public Integer shardNumber() {
        return this.shardNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRedisClusterNodesRedisNodeCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String privateEndpointFqdn;
        private String privateEndpointIpAddress;
        private String redisClusterId;
        private Integer shardNumber;
        public Builder() {}
        public Builder(GetRedisClusterNodesRedisNodeCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.privateEndpointFqdn = defaults.privateEndpointFqdn;
    	      this.privateEndpointIpAddress = defaults.privateEndpointIpAddress;
    	      this.redisClusterId = defaults.redisClusterId;
    	      this.shardNumber = defaults.shardNumber;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetRedisClusterNodesRedisNodeCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointFqdn(String privateEndpointFqdn) {
            if (privateEndpointFqdn == null) {
              throw new MissingRequiredPropertyException("GetRedisClusterNodesRedisNodeCollectionItem", "privateEndpointFqdn");
            }
            this.privateEndpointFqdn = privateEndpointFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointIpAddress(String privateEndpointIpAddress) {
            if (privateEndpointIpAddress == null) {
              throw new MissingRequiredPropertyException("GetRedisClusterNodesRedisNodeCollectionItem", "privateEndpointIpAddress");
            }
            this.privateEndpointIpAddress = privateEndpointIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder redisClusterId(String redisClusterId) {
            if (redisClusterId == null) {
              throw new MissingRequiredPropertyException("GetRedisClusterNodesRedisNodeCollectionItem", "redisClusterId");
            }
            this.redisClusterId = redisClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder shardNumber(Integer shardNumber) {
            if (shardNumber == null) {
              throw new MissingRequiredPropertyException("GetRedisClusterNodesRedisNodeCollectionItem", "shardNumber");
            }
            this.shardNumber = shardNumber;
            return this;
        }
        public GetRedisClusterNodesRedisNodeCollectionItem build() {
            final var _resultValue = new GetRedisClusterNodesRedisNodeCollectionItem();
            _resultValue.displayName = displayName;
            _resultValue.privateEndpointFqdn = privateEndpointFqdn;
            _resultValue.privateEndpointIpAddress = privateEndpointIpAddress;
            _resultValue.redisClusterId = redisClusterId;
            _resultValue.shardNumber = shardNumber;
            return _resultValue;
        }
    }
}
