// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Redis.outputs.GetRedisClusterNodesFilter;
import com.pulumi.oci.Redis.outputs.GetRedisClusterNodesRedisNodeCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRedisClusterNodesResult {
    /**
     * @return A user-friendly name of a cluster node.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetRedisClusterNodesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The OCID of the cluster
     * 
     */
    private String redisClusterId;
    /**
     * @return The list of redis_node_collection.
     * 
     */
    private List<GetRedisClusterNodesRedisNodeCollection> redisNodeCollections;

    private GetRedisClusterNodesResult() {}
    /**
     * @return A user-friendly name of a cluster node.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetRedisClusterNodesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the cluster
     * 
     */
    public String redisClusterId() {
        return this.redisClusterId;
    }
    /**
     * @return The list of redis_node_collection.
     * 
     */
    public List<GetRedisClusterNodesRedisNodeCollection> redisNodeCollections() {
        return this.redisNodeCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRedisClusterNodesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable List<GetRedisClusterNodesFilter> filters;
        private String id;
        private String redisClusterId;
        private List<GetRedisClusterNodesRedisNodeCollection> redisNodeCollections;
        public Builder() {}
        public Builder(GetRedisClusterNodesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.redisClusterId = defaults.redisClusterId;
    	      this.redisNodeCollections = defaults.redisNodeCollections;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetRedisClusterNodesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetRedisClusterNodesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRedisClusterNodesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder redisClusterId(String redisClusterId) {
            if (redisClusterId == null) {
              throw new MissingRequiredPropertyException("GetRedisClusterNodesResult", "redisClusterId");
            }
            this.redisClusterId = redisClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder redisNodeCollections(List<GetRedisClusterNodesRedisNodeCollection> redisNodeCollections) {
            if (redisNodeCollections == null) {
              throw new MissingRequiredPropertyException("GetRedisClusterNodesResult", "redisNodeCollections");
            }
            this.redisNodeCollections = redisNodeCollections;
            return this;
        }
        public Builder redisNodeCollections(GetRedisClusterNodesRedisNodeCollection... redisNodeCollections) {
            return redisNodeCollections(List.of(redisNodeCollections));
        }
        public GetRedisClusterNodesResult build() {
            final var _resultValue = new GetRedisClusterNodesResult();
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.redisClusterId = redisClusterId;
            _resultValue.redisNodeCollections = redisNodeCollections;
            return _resultValue;
        }
    }
}
