// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Redis.outputs.GetRedisClustersRedisClusterCollectionItemNodeCollection;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRedisClustersRedisClusterCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The collection of Redis cluster nodes.
     * 
     */
    private List<GetRedisClustersRedisClusterCollectionItemNodeCollection> nodeCollections;
    /**
     * @return The number of nodes in the Redis cluster.
     * 
     */
    private Integer nodeCount;
    /**
     * @return The amount of memory allocated to the Redis cluster&#39;s nodes, in gigabytes.
     * 
     */
    private Double nodeMemoryInGbs;
    /**
     * @return OCIDs of the NSGs to control access in the customer network
     * 
     */
    private List<String> nsgIds;
    /**
     * @return The private IP address of the API endpoint for the Redis cluster&#39;s primary node.
     * 
     */
    private String primaryEndpointIpAddress;
    /**
     * @return The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster&#39;s primary node.
     * 
     */
    private String primaryFqdn;
    /**
     * @return The private IP address of the API endpoint for the Redis cluster&#39;s replica nodes.
     * 
     */
    private String replicasEndpointIpAddress;
    /**
     * @return The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster&#39;s replica nodes.
     * 
     */
    private String replicasFqdn;
    /**
     * @return The Redis version that the cluster is running.
     * 
     */
    private String softwareVersion;
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster&#39;s subnet.
     * 
     */
    private String subnetId;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The date and time the Redis cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the Redis cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetRedisClustersRedisClusterCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The collection of Redis cluster nodes.
     * 
     */
    public List<GetRedisClustersRedisClusterCollectionItemNodeCollection> nodeCollections() {
        return this.nodeCollections;
    }
    /**
     * @return The number of nodes in the Redis cluster.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return The amount of memory allocated to the Redis cluster&#39;s nodes, in gigabytes.
     * 
     */
    public Double nodeMemoryInGbs() {
        return this.nodeMemoryInGbs;
    }
    /**
     * @return OCIDs of the NSGs to control access in the customer network
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The private IP address of the API endpoint for the Redis cluster&#39;s primary node.
     * 
     */
    public String primaryEndpointIpAddress() {
        return this.primaryEndpointIpAddress;
    }
    /**
     * @return The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster&#39;s primary node.
     * 
     */
    public String primaryFqdn() {
        return this.primaryFqdn;
    }
    /**
     * @return The private IP address of the API endpoint for the Redis cluster&#39;s replica nodes.
     * 
     */
    public String replicasEndpointIpAddress() {
        return this.replicasEndpointIpAddress;
    }
    /**
     * @return The fully qualified domain name (FQDN) of the API endpoint for the Redis cluster&#39;s replica nodes.
     * 
     */
    public String replicasFqdn() {
        return this.replicasFqdn;
    }
    /**
     * @return The Redis version that the cluster is running.
     * 
     */
    public String softwareVersion() {
        return this.softwareVersion;
    }
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the Redis cluster&#39;s subnet.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the Redis cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the Redis cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRedisClustersRedisClusterCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private List<GetRedisClustersRedisClusterCollectionItemNodeCollection> nodeCollections;
        private Integer nodeCount;
        private Double nodeMemoryInGbs;
        private List<String> nsgIds;
        private String primaryEndpointIpAddress;
        private String primaryFqdn;
        private String replicasEndpointIpAddress;
        private String replicasFqdn;
        private String softwareVersion;
        private String state;
        private String subnetId;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetRedisClustersRedisClusterCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.nodeCollections = defaults.nodeCollections;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodeMemoryInGbs = defaults.nodeMemoryInGbs;
    	      this.nsgIds = defaults.nsgIds;
    	      this.primaryEndpointIpAddress = defaults.primaryEndpointIpAddress;
    	      this.primaryFqdn = defaults.primaryFqdn;
    	      this.replicasEndpointIpAddress = defaults.replicasEndpointIpAddress;
    	      this.replicasFqdn = defaults.replicasFqdn;
    	      this.softwareVersion = defaults.softwareVersion;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCollections(List<GetRedisClustersRedisClusterCollectionItemNodeCollection> nodeCollections) {
            if (nodeCollections == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "nodeCollections");
            }
            this.nodeCollections = nodeCollections;
            return this;
        }
        public Builder nodeCollections(GetRedisClustersRedisClusterCollectionItemNodeCollection... nodeCollections) {
            return nodeCollections(List.of(nodeCollections));
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            if (nodeCount == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "nodeCount");
            }
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nodeMemoryInGbs(Double nodeMemoryInGbs) {
            if (nodeMemoryInGbs == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "nodeMemoryInGbs");
            }
            this.nodeMemoryInGbs = nodeMemoryInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder primaryEndpointIpAddress(String primaryEndpointIpAddress) {
            if (primaryEndpointIpAddress == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "primaryEndpointIpAddress");
            }
            this.primaryEndpointIpAddress = primaryEndpointIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder primaryFqdn(String primaryFqdn) {
            if (primaryFqdn == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "primaryFqdn");
            }
            this.primaryFqdn = primaryFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder replicasEndpointIpAddress(String replicasEndpointIpAddress) {
            if (replicasEndpointIpAddress == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "replicasEndpointIpAddress");
            }
            this.replicasEndpointIpAddress = replicasEndpointIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder replicasFqdn(String replicasFqdn) {
            if (replicasFqdn == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "replicasFqdn");
            }
            this.replicasFqdn = replicasFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder softwareVersion(String softwareVersion) {
            if (softwareVersion == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "softwareVersion");
            }
            this.softwareVersion = softwareVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetRedisClustersRedisClusterCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetRedisClustersRedisClusterCollectionItem build() {
            final var _resultValue = new GetRedisClustersRedisClusterCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.nodeCollections = nodeCollections;
            _resultValue.nodeCount = nodeCount;
            _resultValue.nodeMemoryInGbs = nodeMemoryInGbs;
            _resultValue.nsgIds = nsgIds;
            _resultValue.primaryEndpointIpAddress = primaryEndpointIpAddress;
            _resultValue.primaryFqdn = primaryFqdn;
            _resultValue.replicasEndpointIpAddress = replicasEndpointIpAddress;
            _resultValue.replicasFqdn = replicasFqdn;
            _resultValue.softwareVersion = softwareVersion;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
