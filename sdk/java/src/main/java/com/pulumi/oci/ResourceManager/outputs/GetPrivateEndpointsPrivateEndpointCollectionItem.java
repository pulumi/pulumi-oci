// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ResourceManager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPrivateEndpointsPrivateEndpointCollectionItem {
    /**
     * @return A filter to return only resources that exist in the compartment, identified by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Description of the private endpoint. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the given display name exactly. Use this filter to list a resource by name. Requires `sortBy` set to `DISPLAYNAME`. Alternatively, when you know the resource OCID, use the related Get operation.
     * 
     */
    private String displayName;
    /**
     * @return DNS Proxy forwards any DNS FQDN queries over into the consumer DNS resolver if the DNS FQDN is included in the dns zones list otherwise it goes to service provider VCN resolver.
     * 
     */
    private List<String> dnsZones;
    /**
     * @return Free-form tags associated with the resource. Each tag is a key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Unique identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the private endpoint details.
     * 
     */
    private String id;
    /**
     * @return When `true`, allows the private endpoint to be used with a configuration source provider.
     * 
     */
    private Boolean isUsedWithConfigurationSourceProvider;
    /**
     * @return An array of network security groups (NSG) that the customer can optionally provide.
     * 
     */
    private List<String> nsgIdLists;
    /**
     * @return The source IPs which resource manager service will use to connect to customer&#39;s network. Automatically assigned by Resource Manager Service.
     * 
     */
    private List<String> sourceIps;
    /**
     * @return The current lifecycle state of the private endpoint.
     * 
     */
    private String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet within the VCN for the private endpoint.
     * 
     */
    private String subnetId;
    /**
     * @return The date and time at which the private endpoint was created. Format is defined by RFC3339. Example: `2020-11-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    private String vcnId;

    private GetPrivateEndpointsPrivateEndpointCollectionItem() {}
    /**
     * @return A filter to return only resources that exist in the compartment, identified by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the private endpoint. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly. Use this filter to list a resource by name. Requires `sortBy` set to `DISPLAYNAME`. Alternatively, when you know the resource OCID, use the related Get operation.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return DNS Proxy forwards any DNS FQDN queries over into the consumer DNS resolver if the DNS FQDN is included in the dns zones list otherwise it goes to service provider VCN resolver.
     * 
     */
    public List<String> dnsZones() {
        return this.dnsZones;
    }
    /**
     * @return Free-form tags associated with the resource. Each tag is a key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the private endpoint details.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return When `true`, allows the private endpoint to be used with a configuration source provider.
     * 
     */
    public Boolean isUsedWithConfigurationSourceProvider() {
        return this.isUsedWithConfigurationSourceProvider;
    }
    /**
     * @return An array of network security groups (NSG) that the customer can optionally provide.
     * 
     */
    public List<String> nsgIdLists() {
        return this.nsgIdLists;
    }
    /**
     * @return The source IPs which resource manager service will use to connect to customer&#39;s network. Automatically assigned by Resource Manager Service.
     * 
     */
    public List<String> sourceIps() {
        return this.sourceIps;
    }
    /**
     * @return The current lifecycle state of the private endpoint.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet within the VCN for the private endpoint.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The date and time at which the private endpoint was created. Format is defined by RFC3339. Example: `2020-11-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateEndpointsPrivateEndpointCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private List<String> dnsZones;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isUsedWithConfigurationSourceProvider;
        private List<String> nsgIdLists;
        private List<String> sourceIps;
        private String state;
        private String subnetId;
        private String timeCreated;
        private String vcnId;
        public Builder() {}
        public Builder(GetPrivateEndpointsPrivateEndpointCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.dnsZones = defaults.dnsZones;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isUsedWithConfigurationSourceProvider = defaults.isUsedWithConfigurationSourceProvider;
    	      this.nsgIdLists = defaults.nsgIdLists;
    	      this.sourceIps = defaults.sourceIps;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder dnsZones(List<String> dnsZones) {
            if (dnsZones == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "dnsZones");
            }
            this.dnsZones = dnsZones;
            return this;
        }
        public Builder dnsZones(String... dnsZones) {
            return dnsZones(List.of(dnsZones));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isUsedWithConfigurationSourceProvider(Boolean isUsedWithConfigurationSourceProvider) {
            if (isUsedWithConfigurationSourceProvider == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "isUsedWithConfigurationSourceProvider");
            }
            this.isUsedWithConfigurationSourceProvider = isUsedWithConfigurationSourceProvider;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIdLists(List<String> nsgIdLists) {
            if (nsgIdLists == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "nsgIdLists");
            }
            this.nsgIdLists = nsgIdLists;
            return this;
        }
        public Builder nsgIdLists(String... nsgIdLists) {
            return nsgIdLists(List.of(nsgIdLists));
        }
        @CustomType.Setter
        public Builder sourceIps(List<String> sourceIps) {
            if (sourceIps == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "sourceIps");
            }
            this.sourceIps = sourceIps;
            return this;
        }
        public Builder sourceIps(String... sourceIps) {
            return sourceIps(List.of(sourceIps));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(String vcnId) {
            if (vcnId == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointsPrivateEndpointCollectionItem", "vcnId");
            }
            this.vcnId = vcnId;
            return this;
        }
        public GetPrivateEndpointsPrivateEndpointCollectionItem build() {
            final var _resultValue = new GetPrivateEndpointsPrivateEndpointCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.dnsZones = dnsZones;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isUsedWithConfigurationSourceProvider = isUsedWithConfigurationSourceProvider;
            _resultValue.nsgIdLists = nsgIdLists;
            _resultValue.sourceIps = sourceIps;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
