// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ResourceScheduler.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ResourceScheduler.inputs.ScheduleResourceFilterValueArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduleResourceFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleResourceFilterArgs Empty = new ScheduleResourceFilterArgs();

    /**
     * (Updatable) This is the resource attribute on which the threshold is defined.
     * 
     */
    @Import(name="attribute", required=true)
    private Output<String> attribute;

    /**
     * @return (Updatable) This is the resource attribute on which the threshold is defined.
     * 
     */
    public Output<String> attribute() {
        return this.attribute;
    }

    /**
     * (Updatable) This is the condition for the filter in comparison to its creation time.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<String> condition;

    /**
     * @return (Updatable) This is the condition for the filter in comparison to its creation time.
     * 
     */
    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * (Updatable) This sets whether to include child compartments.
     * 
     */
    @Import(name="shouldIncludeChildCompartments")
    private @Nullable Output<Boolean> shouldIncludeChildCompartments;

    /**
     * @return (Updatable) This sets whether to include child compartments.
     * 
     */
    public Optional<Output<Boolean>> shouldIncludeChildCompartments() {
        return Optional.ofNullable(this.shouldIncludeChildCompartments);
    }

    /**
     * (Updatable) This is a collection of resource lifecycle state values.
     * 
     */
    @Import(name="values")
    private @Nullable Output<List<ScheduleResourceFilterValueArgs>> values;

    /**
     * @return (Updatable) This is a collection of resource lifecycle state values.
     * 
     */
    public Optional<Output<List<ScheduleResourceFilterValueArgs>>> values() {
        return Optional.ofNullable(this.values);
    }

    private ScheduleResourceFilterArgs() {}

    private ScheduleResourceFilterArgs(ScheduleResourceFilterArgs $) {
        this.attribute = $.attribute;
        this.condition = $.condition;
        this.shouldIncludeChildCompartments = $.shouldIncludeChildCompartments;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleResourceFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleResourceFilterArgs $;

        public Builder() {
            $ = new ScheduleResourceFilterArgs();
        }

        public Builder(ScheduleResourceFilterArgs defaults) {
            $ = new ScheduleResourceFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attribute (Updatable) This is the resource attribute on which the threshold is defined.
         * 
         * @return builder
         * 
         */
        public Builder attribute(Output<String> attribute) {
            $.attribute = attribute;
            return this;
        }

        /**
         * @param attribute (Updatable) This is the resource attribute on which the threshold is defined.
         * 
         * @return builder
         * 
         */
        public Builder attribute(String attribute) {
            return attribute(Output.of(attribute));
        }

        /**
         * @param condition (Updatable) This is the condition for the filter in comparison to its creation time.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition (Updatable) This is the condition for the filter in comparison to its creation time.
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param shouldIncludeChildCompartments (Updatable) This sets whether to include child compartments.
         * 
         * @return builder
         * 
         */
        public Builder shouldIncludeChildCompartments(@Nullable Output<Boolean> shouldIncludeChildCompartments) {
            $.shouldIncludeChildCompartments = shouldIncludeChildCompartments;
            return this;
        }

        /**
         * @param shouldIncludeChildCompartments (Updatable) This sets whether to include child compartments.
         * 
         * @return builder
         * 
         */
        public Builder shouldIncludeChildCompartments(Boolean shouldIncludeChildCompartments) {
            return shouldIncludeChildCompartments(Output.of(shouldIncludeChildCompartments));
        }

        /**
         * @param values (Updatable) This is a collection of resource lifecycle state values.
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<List<ScheduleResourceFilterValueArgs>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values (Updatable) This is a collection of resource lifecycle state values.
         * 
         * @return builder
         * 
         */
        public Builder values(List<ScheduleResourceFilterValueArgs> values) {
            return values(Output.of(values));
        }

        /**
         * @param values (Updatable) This is a collection of resource lifecycle state values.
         * 
         * @return builder
         * 
         */
        public Builder values(ScheduleResourceFilterValueArgs... values) {
            return values(List.of(values));
        }

        public ScheduleResourceFilterArgs build() {
            if ($.attribute == null) {
                throw new MissingRequiredPropertyException("ScheduleResourceFilterArgs", "attribute");
            }
            return $;
        }
    }

}
