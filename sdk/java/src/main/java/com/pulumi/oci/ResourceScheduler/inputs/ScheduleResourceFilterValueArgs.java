// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ResourceScheduler.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduleResourceFilterValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleResourceFilterValueArgs Empty = new ScheduleResourceFilterValueArgs();

    /**
     * (Updatable) This is the namespace of the defined tag.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return (Updatable) This is the namespace of the defined tag.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * (Updatable) This is the key of the defined tag.
     * 
     */
    @Import(name="tagKey")
    private @Nullable Output<String> tagKey;

    /**
     * @return (Updatable) This is the key of the defined tag.
     * 
     */
    public Optional<Output<String>> tagKey() {
        return Optional.ofNullable(this.tagKey);
    }

    /**
     * (Updatable) This is the value of the defined tag.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return (Updatable) This is the value of the defined tag.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private ScheduleResourceFilterValueArgs() {}

    private ScheduleResourceFilterValueArgs(ScheduleResourceFilterValueArgs $) {
        this.namespace = $.namespace;
        this.tagKey = $.tagKey;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleResourceFilterValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleResourceFilterValueArgs $;

        public Builder() {
            $ = new ScheduleResourceFilterValueArgs();
        }

        public Builder(ScheduleResourceFilterValueArgs defaults) {
            $ = new ScheduleResourceFilterValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param namespace (Updatable) This is the namespace of the defined tag.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace (Updatable) This is the namespace of the defined tag.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param tagKey (Updatable) This is the key of the defined tag.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(@Nullable Output<String> tagKey) {
            $.tagKey = tagKey;
            return this;
        }

        /**
         * @param tagKey (Updatable) This is the key of the defined tag.
         * 
         * @return builder
         * 
         */
        public Builder tagKey(String tagKey) {
            return tagKey(Output.of(tagKey));
        }

        /**
         * @param value (Updatable) This is the value of the defined tag.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) This is the value of the defined tag.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ScheduleResourceFilterValueArgs build() {
            return $;
        }
    }

}
