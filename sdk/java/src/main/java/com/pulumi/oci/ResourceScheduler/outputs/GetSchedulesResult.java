// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ResourceScheduler.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ResourceScheduler.outputs.GetSchedulesFilter;
import com.pulumi.oci.ResourceScheduler.outputs.GetSchedulesScheduleCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSchedulesResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the schedule is created
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return This is a user-friendly name for the schedule. It does not have to be unique, and it&#39;s changeable.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetSchedulesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String resourceId;
    /**
     * @return The list of schedule_collection.
     * 
     */
    private List<GetSchedulesScheduleCollection> scheduleCollections;
    private @Nullable String scheduleId;
    /**
     * @return This is the current state of a schedule.
     * 
     */
    private @Nullable String state;

    private GetSchedulesResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the schedule is created
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return This is a user-friendly name for the schedule. It does not have to be unique, and it&#39;s changeable.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetSchedulesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return The list of schedule_collection.
     * 
     */
    public List<GetSchedulesScheduleCollection> scheduleCollections() {
        return this.scheduleCollections;
    }
    public Optional<String> scheduleId() {
        return Optional.ofNullable(this.scheduleId);
    }
    /**
     * @return This is the current state of a schedule.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetSchedulesFilter> filters;
        private String id;
        private @Nullable String resourceId;
        private List<GetSchedulesScheduleCollection> scheduleCollections;
        private @Nullable String scheduleId;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetSchedulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.resourceId = defaults.resourceId;
    	      this.scheduleCollections = defaults.scheduleCollections;
    	      this.scheduleId = defaults.scheduleId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSchedulesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSchedulesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSchedulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleCollections(List<GetSchedulesScheduleCollection> scheduleCollections) {
            if (scheduleCollections == null) {
              throw new MissingRequiredPropertyException("GetSchedulesResult", "scheduleCollections");
            }
            this.scheduleCollections = scheduleCollections;
            return this;
        }
        public Builder scheduleCollections(GetSchedulesScheduleCollection... scheduleCollections) {
            return scheduleCollections(List.of(scheduleCollections));
        }
        @CustomType.Setter
        public Builder scheduleId(@Nullable String scheduleId) {

            this.scheduleId = scheduleId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetSchedulesResult build() {
            final var _resultValue = new GetSchedulesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.resourceId = resourceId;
            _resultValue.scheduleCollections = scheduleCollections;
            _resultValue.scheduleId = scheduleId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
