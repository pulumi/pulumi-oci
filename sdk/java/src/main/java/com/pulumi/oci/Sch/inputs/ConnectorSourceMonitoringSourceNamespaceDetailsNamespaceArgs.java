// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Sch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Sch.inputs.ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs;
import java.lang.String;
import java.util.Objects;


public final class ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs Empty = new ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs();

    /**
     * (Updatable) The metrics to query for the specified metric namespace.
     * 
     */
    @Import(name="metrics", required=true)
    private Output<ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs> metrics;

    /**
     * @return (Updatable) The metrics to query for the specified metric namespace.
     * 
     */
    public Output<ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs> metrics() {
        return this.metrics;
    }

    /**
     * (Updatable) The source service or application to use when querying for metric data points. Must begin with `oci_`.  Example: `ociComputeagent`
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return (Updatable) The source service or application to use when querying for metric data points. Must begin with `oci_`.  Example: `ociComputeagent`
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    private ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs() {}

    private ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs $) {
        this.metrics = $.metrics;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs $;

        public Builder() {
            $ = new ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs();
        }

        public Builder(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs defaults) {
            $ = new ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metrics (Updatable) The metrics to query for the specified metric namespace.
         * 
         * @return builder
         * 
         */
        public Builder metrics(Output<ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics (Updatable) The metrics to query for the specified metric namespace.
         * 
         * @return builder
         * 
         */
        public Builder metrics(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetricsArgs metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param namespace (Updatable) The source service or application to use when querying for metric data points. Must begin with `oci_`.  Example: `ociComputeagent`
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace (Updatable) The source service or application to use when querying for metric data points. Must begin with `oci_`.  Example: `ociComputeagent`
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs build() {
            if ($.metrics == null) {
                throw new MissingRequiredPropertyException("ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs", "metrics");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceArgs", "namespace");
            }
            return $;
        }
    }

}
