// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Sch.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetConnectorPluginPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectorPluginPlainArgs Empty = new GetConnectorPluginPlainArgs();

    /**
     * The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
     * 
     */
    @Import(name="connectorPluginName", required=true)
    private String connectorPluginName;

    /**
     * @return The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
     * 
     */
    public String connectorPluginName() {
        return this.connectorPluginName;
    }

    private GetConnectorPluginPlainArgs() {}

    private GetConnectorPluginPlainArgs(GetConnectorPluginPlainArgs $) {
        this.connectorPluginName = $.connectorPluginName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectorPluginPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectorPluginPlainArgs $;

        public Builder() {
            $ = new GetConnectorPluginPlainArgs();
        }

        public Builder(GetConnectorPluginPlainArgs defaults) {
            $ = new GetConnectorPluginPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorPluginName The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
         * 
         * @return builder
         * 
         */
        public Builder connectorPluginName(String connectorPluginName) {
            $.connectorPluginName = connectorPluginName;
            return this;
        }

        public GetConnectorPluginPlainArgs build() {
            if ($.connectorPluginName == null) {
                throw new MissingRequiredPropertyException("GetConnectorPluginPlainArgs", "connectorPluginName");
            }
            return $;
        }
    }

}
