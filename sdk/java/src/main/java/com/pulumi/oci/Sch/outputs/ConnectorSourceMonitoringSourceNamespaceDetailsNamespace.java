// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Sch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Sch.outputs.ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ConnectorSourceMonitoringSourceNamespaceDetailsNamespace {
    /**
     * @return (Updatable) The metrics to query for the specified metric namespace.
     * 
     */
    private ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics metrics;
    /**
     * @return (Updatable) The source service or application to use when querying for metric data points. Must begin with `oci_`.  Example: `oci_computeagent`
     * 
     */
    private String namespace;

    private ConnectorSourceMonitoringSourceNamespaceDetailsNamespace() {}
    /**
     * @return (Updatable) The metrics to query for the specified metric namespace.
     * 
     */
    public ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics metrics() {
        return this.metrics;
    }
    /**
     * @return (Updatable) The source service or application to use when querying for metric data points. Must begin with `oci_`.  Example: `oci_computeagent`
     * 
     */
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorSourceMonitoringSourceNamespaceDetailsNamespace defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics metrics;
        private String namespace;
        public Builder() {}
        public Builder(ConnectorSourceMonitoringSourceNamespaceDetailsNamespace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metrics = defaults.metrics;
    	      this.namespace = defaults.namespace;
        }

        @CustomType.Setter
        public Builder metrics(ConnectorSourceMonitoringSourceNamespaceDetailsNamespaceMetrics metrics) {
            if (metrics == null) {
              throw new MissingRequiredPropertyException("ConnectorSourceMonitoringSourceNamespaceDetailsNamespace", "metrics");
            }
            this.metrics = metrics;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("ConnectorSourceMonitoringSourceNamespaceDetailsNamespace", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        public ConnectorSourceMonitoringSourceNamespaceDetailsNamespace build() {
            final var _resultValue = new ConnectorSourceMonitoringSourceNamespaceDetailsNamespace();
            _resultValue.metrics = metrics;
            _resultValue.namespace = namespace;
            return _resultValue;
        }
    }
}
