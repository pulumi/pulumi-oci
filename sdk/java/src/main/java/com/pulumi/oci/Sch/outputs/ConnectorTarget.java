// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Sch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Sch.outputs.ConnectorTargetDimension;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorTarget {
    /**
     * @return (Updatable) The batch rollover size in megabytes.
     * 
     */
    private @Nullable Integer batchRolloverSizeInMbs;
    /**
     * @return (Updatable) The batch rollover time in milliseconds.
     * 
     */
    private @Nullable Integer batchRolloverTimeInMs;
    /**
     * @return (Updatable) The name of the bucket. Avoid entering confidential information.
     * 
     */
    private @Nullable String bucket;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return (Updatable) List of dimension names and values.
     * 
     */
    private @Nullable List<ConnectorTargetDimension> dimensions;
    /**
     * @return (Updatable) Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
     * 
     */
    private @Nullable Boolean enableFormattedMessaging;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
     * 
     */
    private @Nullable String functionId;
    /**
     * @return (Updatable) The type descriminator.
     * 
     */
    private String kind;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
     * 
     */
    private @Nullable String logGroupId;
    /**
     * @return (Updatable) Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
     * 
     */
    private @Nullable String logSourceIdentifier;
    /**
     * @return (Updatable) The name of the metric.  Example: `CpuUtilization`
     * 
     */
    private @Nullable String metric;
    /**
     * @return (Updatable) The namespace of the metric.  Example: `oci_computeagent`
     * 
     */
    private @Nullable String metricNamespace;
    /**
     * @return (Updatable) The namespace.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return (Updatable) The prefix of the objects. Avoid entering confidential information.
     * 
     */
    private @Nullable String objectNamePrefix;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     * 
     */
    private @Nullable String streamId;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
     * 
     */
    private @Nullable String topicId;

    private ConnectorTarget() {}
    /**
     * @return (Updatable) The batch rollover size in megabytes.
     * 
     */
    public Optional<Integer> batchRolloverSizeInMbs() {
        return Optional.ofNullable(this.batchRolloverSizeInMbs);
    }
    /**
     * @return (Updatable) The batch rollover time in milliseconds.
     * 
     */
    public Optional<Integer> batchRolloverTimeInMs() {
        return Optional.ofNullable(this.batchRolloverTimeInMs);
    }
    /**
     * @return (Updatable) The name of the bucket. Avoid entering confidential information.
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return (Updatable) List of dimension names and values.
     * 
     */
    public List<ConnectorTargetDimension> dimensions() {
        return this.dimensions == null ? List.of() : this.dimensions;
    }
    /**
     * @return (Updatable) Whether to apply a simplified, user-friendly format to the message. Applies only when friendly formatting is supported by the service connector source and the subscription protocol.  Example: `true`
     * 
     */
    public Optional<Boolean> enableFormattedMessaging() {
        return Optional.ofNullable(this.enableFormattedMessaging);
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function to be used as a task.
     * 
     */
    public Optional<String> functionId() {
        return Optional.ofNullable(this.functionId);
    }
    /**
     * @return (Updatable) The type descriminator.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Logging Analytics log group.
     * 
     */
    public Optional<String> logGroupId() {
        return Optional.ofNullable(this.logGroupId);
    }
    /**
     * @return (Updatable) Identifier of the log source that you want to use for processing data received from the service connector source. Applies to `StreamingSource` only. Equivalent to `name` at [LogAnalyticsSource](https://docs.cloud.oracle.com/iaas/api/#/en/logan-api-spec/latest/LogAnalyticsSource/).
     * 
     */
    public Optional<String> logSourceIdentifier() {
        return Optional.ofNullable(this.logSourceIdentifier);
    }
    /**
     * @return (Updatable) The name of the metric.  Example: `CpuUtilization`
     * 
     */
    public Optional<String> metric() {
        return Optional.ofNullable(this.metric);
    }
    /**
     * @return (Updatable) The namespace of the metric.  Example: `oci_computeagent`
     * 
     */
    public Optional<String> metricNamespace() {
        return Optional.ofNullable(this.metricNamespace);
    }
    /**
     * @return (Updatable) The namespace.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return (Updatable) The prefix of the objects. Avoid entering confidential information.
     * 
     */
    public Optional<String> objectNamePrefix() {
        return Optional.ofNullable(this.objectNamePrefix);
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     * 
     */
    public Optional<String> streamId() {
        return Optional.ofNullable(this.streamId);
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the topic.
     * 
     */
    public Optional<String> topicId() {
        return Optional.ofNullable(this.topicId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer batchRolloverSizeInMbs;
        private @Nullable Integer batchRolloverTimeInMs;
        private @Nullable String bucket;
        private @Nullable String compartmentId;
        private @Nullable List<ConnectorTargetDimension> dimensions;
        private @Nullable Boolean enableFormattedMessaging;
        private @Nullable String functionId;
        private String kind;
        private @Nullable String logGroupId;
        private @Nullable String logSourceIdentifier;
        private @Nullable String metric;
        private @Nullable String metricNamespace;
        private @Nullable String namespace;
        private @Nullable String objectNamePrefix;
        private @Nullable String streamId;
        private @Nullable String topicId;
        public Builder() {}
        public Builder(ConnectorTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.batchRolloverSizeInMbs = defaults.batchRolloverSizeInMbs;
    	      this.batchRolloverTimeInMs = defaults.batchRolloverTimeInMs;
    	      this.bucket = defaults.bucket;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dimensions = defaults.dimensions;
    	      this.enableFormattedMessaging = defaults.enableFormattedMessaging;
    	      this.functionId = defaults.functionId;
    	      this.kind = defaults.kind;
    	      this.logGroupId = defaults.logGroupId;
    	      this.logSourceIdentifier = defaults.logSourceIdentifier;
    	      this.metric = defaults.metric;
    	      this.metricNamespace = defaults.metricNamespace;
    	      this.namespace = defaults.namespace;
    	      this.objectNamePrefix = defaults.objectNamePrefix;
    	      this.streamId = defaults.streamId;
    	      this.topicId = defaults.topicId;
        }

        @CustomType.Setter
        public Builder batchRolloverSizeInMbs(@Nullable Integer batchRolloverSizeInMbs) {

            this.batchRolloverSizeInMbs = batchRolloverSizeInMbs;
            return this;
        }
        @CustomType.Setter
        public Builder batchRolloverTimeInMs(@Nullable Integer batchRolloverTimeInMs) {

            this.batchRolloverTimeInMs = batchRolloverTimeInMs;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {

            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dimensions(@Nullable List<ConnectorTargetDimension> dimensions) {

            this.dimensions = dimensions;
            return this;
        }
        public Builder dimensions(ConnectorTargetDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }
        @CustomType.Setter
        public Builder enableFormattedMessaging(@Nullable Boolean enableFormattedMessaging) {

            this.enableFormattedMessaging = enableFormattedMessaging;
            return this;
        }
        @CustomType.Setter
        public Builder functionId(@Nullable String functionId) {

            this.functionId = functionId;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("ConnectorTarget", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder logGroupId(@Nullable String logGroupId) {

            this.logGroupId = logGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder logSourceIdentifier(@Nullable String logSourceIdentifier) {

            this.logSourceIdentifier = logSourceIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder metric(@Nullable String metric) {

            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder metricNamespace(@Nullable String metricNamespace) {

            this.metricNamespace = metricNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder objectNamePrefix(@Nullable String objectNamePrefix) {

            this.objectNamePrefix = objectNamePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder streamId(@Nullable String streamId) {

            this.streamId = streamId;
            return this;
        }
        @CustomType.Setter
        public Builder topicId(@Nullable String topicId) {

            this.topicId = topicId;
            return this;
        }
        public ConnectorTarget build() {
            final var _resultValue = new ConnectorTarget();
            _resultValue.batchRolloverSizeInMbs = batchRolloverSizeInMbs;
            _resultValue.batchRolloverTimeInMs = batchRolloverTimeInMs;
            _resultValue.bucket = bucket;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dimensions = dimensions;
            _resultValue.enableFormattedMessaging = enableFormattedMessaging;
            _resultValue.functionId = functionId;
            _resultValue.kind = kind;
            _resultValue.logGroupId = logGroupId;
            _resultValue.logSourceIdentifier = logSourceIdentifier;
            _resultValue.metric = metric;
            _resultValue.metricNamespace = metricNamespace;
            _resultValue.namespace = namespace;
            _resultValue.objectNamePrefix = objectNamePrefix;
            _resultValue.streamId = streamId;
            _resultValue.topicId = topicId;
            return _resultValue;
        }
    }
}
