// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Sch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Sch.outputs.GetServiceConnectorSourceCursor;
import com.pulumi.oci.Sch.outputs.GetServiceConnectorSourceLogSource;
import com.pulumi.oci.Sch.outputs.GetServiceConnectorSourceMonitoringSource;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceConnectorSource {
    /**
     * @return The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
     * 
     */
    private @Nullable List<GetServiceConnectorSourceCursor> cursors;
    /**
     * @return The type descriminator.
     * 
     */
    private @Nullable String kind;
    /**
     * @return The logs for this Logging source.
     * 
     */
    private @Nullable List<GetServiceConnectorSourceLogSource> logSources;
    /**
     * @return The list of metric namespaces to retrieve data from.
     * 
     */
    private @Nullable List<GetServiceConnectorSourceMonitoringSource> monitoringSources;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     * 
     */
    private @Nullable String streamId;

    private GetServiceConnectorSource() {}
    /**
     * @return The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
     * 
     */
    public List<GetServiceConnectorSourceCursor> cursors() {
        return this.cursors == null ? List.of() : this.cursors;
    }
    /**
     * @return The type descriminator.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return The logs for this Logging source.
     * 
     */
    public List<GetServiceConnectorSourceLogSource> logSources() {
        return this.logSources == null ? List.of() : this.logSources;
    }
    /**
     * @return The list of metric namespaces to retrieve data from.
     * 
     */
    public List<GetServiceConnectorSourceMonitoringSource> monitoringSources() {
        return this.monitoringSources == null ? List.of() : this.monitoringSources;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     * 
     */
    public Optional<String> streamId() {
        return Optional.ofNullable(this.streamId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceConnectorSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetServiceConnectorSourceCursor> cursors;
        private @Nullable String kind;
        private @Nullable List<GetServiceConnectorSourceLogSource> logSources;
        private @Nullable List<GetServiceConnectorSourceMonitoringSource> monitoringSources;
        private @Nullable String streamId;
        public Builder() {}
        public Builder(GetServiceConnectorSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cursors = defaults.cursors;
    	      this.kind = defaults.kind;
    	      this.logSources = defaults.logSources;
    	      this.monitoringSources = defaults.monitoringSources;
    	      this.streamId = defaults.streamId;
        }

        @CustomType.Setter
        public Builder cursors(@Nullable List<GetServiceConnectorSourceCursor> cursors) {
            this.cursors = cursors;
            return this;
        }
        public Builder cursors(GetServiceConnectorSourceCursor... cursors) {
            return cursors(List.of(cursors));
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder logSources(@Nullable List<GetServiceConnectorSourceLogSource> logSources) {
            this.logSources = logSources;
            return this;
        }
        public Builder logSources(GetServiceConnectorSourceLogSource... logSources) {
            return logSources(List.of(logSources));
        }
        @CustomType.Setter
        public Builder monitoringSources(@Nullable List<GetServiceConnectorSourceMonitoringSource> monitoringSources) {
            this.monitoringSources = monitoringSources;
            return this;
        }
        public Builder monitoringSources(GetServiceConnectorSourceMonitoringSource... monitoringSources) {
            return monitoringSources(List.of(monitoringSources));
        }
        @CustomType.Setter
        public Builder streamId(@Nullable String streamId) {
            this.streamId = streamId;
            return this;
        }
        public GetServiceConnectorSource build() {
            final var o = new GetServiceConnectorSource();
            o.cursors = cursors;
            o.kind = kind;
            o.logSources = logSources;
            o.monitoringSources = monitoringSources;
            o.streamId = streamId;
            return o;
        }
    }
}
