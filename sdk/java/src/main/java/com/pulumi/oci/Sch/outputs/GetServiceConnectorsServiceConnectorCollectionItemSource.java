// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Sch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Sch.outputs.GetServiceConnectorsServiceConnectorCollectionItemSourceCursor;
import com.pulumi.oci.Sch.outputs.GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource;
import com.pulumi.oci.Sch.outputs.GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceConnectorsServiceConnectorCollectionItemSource {
    /**
     * @return The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
     * 
     */
    private List<GetServiceConnectorsServiceConnectorCollectionItemSourceCursor> cursors;
    /**
     * @return The type descriminator.
     * 
     */
    private String kind;
    /**
     * @return The logs for this Logging source.
     * 
     */
    private List<GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource> logSources;
    /**
     * @return The list of metric namespaces to retrieve data from.
     * 
     */
    private List<GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource> monitoringSources;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     * 
     */
    private String streamId;

    private GetServiceConnectorsServiceConnectorCollectionItemSource() {}
    /**
     * @return The type of [cursor](https://docs.cloud.oracle.com/iaas/Content/Streaming/Tasks/using_a_single_consumer.htm#usingcursors), which determines the starting point from which the stream will be consumed.
     * 
     */
    public List<GetServiceConnectorsServiceConnectorCollectionItemSourceCursor> cursors() {
        return this.cursors;
    }
    /**
     * @return The type descriminator.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The logs for this Logging source.
     * 
     */
    public List<GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource> logSources() {
        return this.logSources;
    }
    /**
     * @return The list of metric namespaces to retrieve data from.
     * 
     */
    public List<GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource> monitoringSources() {
        return this.monitoringSources;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream.
     * 
     */
    public String streamId() {
        return this.streamId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceConnectorsServiceConnectorCollectionItemSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceConnectorsServiceConnectorCollectionItemSourceCursor> cursors;
        private String kind;
        private List<GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource> logSources;
        private List<GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource> monitoringSources;
        private String streamId;
        public Builder() {}
        public Builder(GetServiceConnectorsServiceConnectorCollectionItemSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cursors = defaults.cursors;
    	      this.kind = defaults.kind;
    	      this.logSources = defaults.logSources;
    	      this.monitoringSources = defaults.monitoringSources;
    	      this.streamId = defaults.streamId;
        }

        @CustomType.Setter
        public Builder cursors(List<GetServiceConnectorsServiceConnectorCollectionItemSourceCursor> cursors) {
            if (cursors == null) {
              throw new MissingRequiredPropertyException("GetServiceConnectorsServiceConnectorCollectionItemSource", "cursors");
            }
            this.cursors = cursors;
            return this;
        }
        public Builder cursors(GetServiceConnectorsServiceConnectorCollectionItemSourceCursor... cursors) {
            return cursors(List.of(cursors));
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetServiceConnectorsServiceConnectorCollectionItemSource", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder logSources(List<GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource> logSources) {
            if (logSources == null) {
              throw new MissingRequiredPropertyException("GetServiceConnectorsServiceConnectorCollectionItemSource", "logSources");
            }
            this.logSources = logSources;
            return this;
        }
        public Builder logSources(GetServiceConnectorsServiceConnectorCollectionItemSourceLogSource... logSources) {
            return logSources(List.of(logSources));
        }
        @CustomType.Setter
        public Builder monitoringSources(List<GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource> monitoringSources) {
            if (monitoringSources == null) {
              throw new MissingRequiredPropertyException("GetServiceConnectorsServiceConnectorCollectionItemSource", "monitoringSources");
            }
            this.monitoringSources = monitoringSources;
            return this;
        }
        public Builder monitoringSources(GetServiceConnectorsServiceConnectorCollectionItemSourceMonitoringSource... monitoringSources) {
            return monitoringSources(List.of(monitoringSources));
        }
        @CustomType.Setter
        public Builder streamId(String streamId) {
            if (streamId == null) {
              throw new MissingRequiredPropertyException("GetServiceConnectorsServiceConnectorCollectionItemSource", "streamId");
            }
            this.streamId = streamId;
            return this;
        }
        public GetServiceConnectorsServiceConnectorCollectionItemSource build() {
            final var _resultValue = new GetServiceConnectorsServiceConnectorCollectionItemSource();
            _resultValue.cursors = cursors;
            _resultValue.kind = kind;
            _resultValue.logSources = logSources;
            _resultValue.monitoringSources = monitoringSources;
            _resultValue.streamId = streamId;
            return _resultValue;
        }
    }
}
