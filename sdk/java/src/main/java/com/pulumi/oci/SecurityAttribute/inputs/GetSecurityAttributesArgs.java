// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.SecurityAttribute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.SecurityAttribute.inputs.GetSecurityAttributesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityAttributesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityAttributesArgs Empty = new GetSecurityAttributesArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetSecurityAttributesFilterArgs>> filters;

    public Optional<Output<List<GetSecurityAttributesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the security attribute namespace.
     * 
     */
    @Import(name="securityAttributeNamespaceId", required=true)
    private Output<String> securityAttributeNamespaceId;

    /**
     * @return The OCID of the security attribute namespace.
     * 
     */
    public Output<String> securityAttributeNamespaceId() {
        return this.securityAttributeNamespaceId;
    }

    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetSecurityAttributesArgs() {}

    private GetSecurityAttributesArgs(GetSecurityAttributesArgs $) {
        this.filters = $.filters;
        this.securityAttributeNamespaceId = $.securityAttributeNamespaceId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityAttributesArgs $;

        public Builder() {
            $ = new GetSecurityAttributesArgs();
        }

        public Builder(GetSecurityAttributesArgs defaults) {
            $ = new GetSecurityAttributesArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetSecurityAttributesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSecurityAttributesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSecurityAttributesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param securityAttributeNamespaceId The OCID of the security attribute namespace.
         * 
         * @return builder
         * 
         */
        public Builder securityAttributeNamespaceId(Output<String> securityAttributeNamespaceId) {
            $.securityAttributeNamespaceId = securityAttributeNamespaceId;
            return this;
        }

        /**
         * @param securityAttributeNamespaceId The OCID of the security attribute namespace.
         * 
         * @return builder
         * 
         */
        public Builder securityAttributeNamespaceId(String securityAttributeNamespaceId) {
            return securityAttributeNamespaceId(Output.of(securityAttributeNamespaceId));
        }

        /**
         * @param state A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetSecurityAttributesArgs build() {
            if ($.securityAttributeNamespaceId == null) {
                throw new MissingRequiredPropertyException("GetSecurityAttributesArgs", "securityAttributeNamespaceId");
            }
            return $;
        }
    }

}
