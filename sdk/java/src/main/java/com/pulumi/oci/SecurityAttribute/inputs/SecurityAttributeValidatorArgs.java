// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.SecurityAttribute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityAttributeValidatorArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityAttributeValidatorArgs Empty = new SecurityAttributeValidatorArgs();

    /**
     * (Updatable) Specifies the type of validation: a static value (no validation) or a list.
     * 
     */
    @Import(name="validatorType", required=true)
    private Output<String> validatorType;

    /**
     * @return (Updatable) Specifies the type of validation: a static value (no validation) or a list.
     * 
     */
    public Output<String> validatorType() {
        return this.validatorType;
    }

    /**
     * (Updatable) The list of allowed values for a security attribute value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="values")
    private @Nullable Output<List<String>> values;

    /**
     * @return (Updatable) The list of allowed values for a security attribute value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<List<String>>> values() {
        return Optional.ofNullable(this.values);
    }

    private SecurityAttributeValidatorArgs() {}

    private SecurityAttributeValidatorArgs(SecurityAttributeValidatorArgs $) {
        this.validatorType = $.validatorType;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityAttributeValidatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityAttributeValidatorArgs $;

        public Builder() {
            $ = new SecurityAttributeValidatorArgs();
        }

        public Builder(SecurityAttributeValidatorArgs defaults) {
            $ = new SecurityAttributeValidatorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param validatorType (Updatable) Specifies the type of validation: a static value (no validation) or a list.
         * 
         * @return builder
         * 
         */
        public Builder validatorType(Output<String> validatorType) {
            $.validatorType = validatorType;
            return this;
        }

        /**
         * @param validatorType (Updatable) Specifies the type of validation: a static value (no validation) or a list.
         * 
         * @return builder
         * 
         */
        public Builder validatorType(String validatorType) {
            return validatorType(Output.of(validatorType));
        }

        /**
         * @param values (Updatable) The list of allowed values for a security attribute value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<List<String>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values (Updatable) The list of allowed values for a security attribute value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        /**
         * @param values (Updatable) The list of allowed values for a security attribute value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public SecurityAttributeValidatorArgs build() {
            if ($.validatorType == null) {
                throw new MissingRequiredPropertyException("SecurityAttributeValidatorArgs", "validatorType");
            }
            return $;
        }
    }

}
