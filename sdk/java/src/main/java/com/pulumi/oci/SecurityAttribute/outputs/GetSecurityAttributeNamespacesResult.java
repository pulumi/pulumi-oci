// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.SecurityAttribute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.SecurityAttribute.outputs.GetSecurityAttributeNamespacesFilter;
import com.pulumi.oci.SecurityAttribute.outputs.GetSecurityAttributeNamespacesSecurityAttributeNamespace;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityAttributeNamespacesResult {
    /**
     * @return The OCID of the compartment that contains the security attribute namespace.
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    private @Nullable List<GetSecurityAttributeNamespacesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the security attribute namespace. It must be unique across all security attribute namespaces in the tenancy and cannot be changed.
     * 
     */
    private @Nullable String name;
    /**
     * @return The list of security_attribute_namespaces.
     * 
     */
    private List<GetSecurityAttributeNamespacesSecurityAttributeNamespace> securityAttributeNamespaces;
    /**
     * @return The security attribute namespace&#39;s current state. After creating a security attribute namespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a security attribute namespace, make sure its `lifecycleState` is INACTIVE.
     * 
     */
    private @Nullable String state;

    private GetSecurityAttributeNamespacesResult() {}
    /**
     * @return The OCID of the compartment that contains the security attribute namespace.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    public List<GetSecurityAttributeNamespacesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the security attribute namespace. It must be unique across all security attribute namespaces in the tenancy and cannot be changed.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of security_attribute_namespaces.
     * 
     */
    public List<GetSecurityAttributeNamespacesSecurityAttributeNamespace> securityAttributeNamespaces() {
        return this.securityAttributeNamespaces;
    }
    /**
     * @return The security attribute namespace&#39;s current state. After creating a security attribute namespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a security attribute namespace, make sure its `lifecycleState` is INACTIVE.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityAttributeNamespacesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable List<GetSecurityAttributeNamespacesFilter> filters;
        private String id;
        private @Nullable String name;
        private List<GetSecurityAttributeNamespacesSecurityAttributeNamespace> securityAttributeNamespaces;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetSecurityAttributeNamespacesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.securityAttributeNamespaces = defaults.securityAttributeNamespaces;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSecurityAttributeNamespacesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSecurityAttributeNamespacesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecurityAttributeNamespacesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder securityAttributeNamespaces(List<GetSecurityAttributeNamespacesSecurityAttributeNamespace> securityAttributeNamespaces) {
            if (securityAttributeNamespaces == null) {
              throw new MissingRequiredPropertyException("GetSecurityAttributeNamespacesResult", "securityAttributeNamespaces");
            }
            this.securityAttributeNamespaces = securityAttributeNamespaces;
            return this;
        }
        public Builder securityAttributeNamespaces(GetSecurityAttributeNamespacesSecurityAttributeNamespace... securityAttributeNamespaces) {
            return securityAttributeNamespaces(List.of(securityAttributeNamespaces));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetSecurityAttributeNamespacesResult build() {
            final var _resultValue = new GetSecurityAttributeNamespacesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.securityAttributeNamespaces = securityAttributeNamespaces;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
