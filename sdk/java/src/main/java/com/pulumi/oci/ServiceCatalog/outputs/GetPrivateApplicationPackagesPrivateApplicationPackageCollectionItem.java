// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPrivateApplicationPackagesPrivateApplicationPackageCollectionItem {
    private @Nullable String contentUrl;
    /**
     * @return Exact match name filter.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private application package.
     * 
     */
    private @Nullable String id;
    private @Nullable String mimeType;
    /**
     * @return Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
     * 
     */
    private @Nullable String packageType;
    /**
     * @return The unique identifier for the private application.
     * 
     */
    private @Nullable String privateApplicationId;
    /**
     * @return The date and time the private application package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-27T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The package version.
     * 
     */
    private @Nullable String version;

    private GetPrivateApplicationPackagesPrivateApplicationPackageCollectionItem() {}
    public Optional<String> contentUrl() {
        return Optional.ofNullable(this.contentUrl);
    }
    /**
     * @return Exact match name filter.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private application package.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> mimeType() {
        return Optional.ofNullable(this.mimeType);
    }
    /**
     * @return Name of the package type. If multiple package types are provided, then any resource with one or more matching package types will be returned.
     * 
     */
    public Optional<String> packageType() {
        return Optional.ofNullable(this.packageType);
    }
    /**
     * @return The unique identifier for the private application.
     * 
     */
    public Optional<String> privateApplicationId() {
        return Optional.ofNullable(this.privateApplicationId);
    }
    /**
     * @return The date and time the private application package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2021-05-27T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The package version.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateApplicationPackagesPrivateApplicationPackageCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String contentUrl;
        private @Nullable String displayName;
        private @Nullable String id;
        private @Nullable String mimeType;
        private @Nullable String packageType;
        private @Nullable String privateApplicationId;
        private @Nullable String timeCreated;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetPrivateApplicationPackagesPrivateApplicationPackageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentUrl = defaults.contentUrl;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.mimeType = defaults.mimeType;
    	      this.packageType = defaults.packageType;
    	      this.privateApplicationId = defaults.privateApplicationId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder contentUrl(@Nullable String contentUrl) {
            this.contentUrl = contentUrl;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mimeType(@Nullable String mimeType) {
            this.mimeType = mimeType;
            return this;
        }
        @CustomType.Setter
        public Builder packageType(@Nullable String packageType) {
            this.packageType = packageType;
            return this;
        }
        @CustomType.Setter
        public Builder privateApplicationId(@Nullable String privateApplicationId) {
            this.privateApplicationId = privateApplicationId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetPrivateApplicationPackagesPrivateApplicationPackageCollectionItem build() {
            final var o = new GetPrivateApplicationPackagesPrivateApplicationPackageCollectionItem();
            o.contentUrl = contentUrl;
            o.displayName = displayName;
            o.id = id;
            o.mimeType = mimeType;
            o.packageType = packageType;
            o.privateApplicationId = privateApplicationId;
            o.timeCreated = timeCreated;
            o.version = version;
            return o;
        }
    }
}
