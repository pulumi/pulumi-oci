// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ServiceMesh.inputs.MeshCertificateAuthorityArgs;
import com.pulumi.oci.ServiceMesh.inputs.MeshMtlsArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MeshArgs extends com.pulumi.resources.ResourceArgs {

    public static final MeshArgs Empty = new MeshArgs();

    /**
     * The OCID of the certificate authority resource OCID to use for creating leaf certificates.
     * 
     */
    @Import(name="certificateAuthorities", required=true)
    private Output<List<MeshCertificateAuthorityArgs>> certificateAuthorities;

    /**
     * @return The OCID of the certificate authority resource OCID to use for creating leaf certificates.
     * 
     */
    public Output<List<MeshCertificateAuthorityArgs>> certificateAuthorities() {
        return this.certificateAuthorities;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A user-friendly name. The name does not have to be unique and can be changed after creation. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. The name does not have to be unique and can be changed after creation. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Sets a minimum level of mTLS authentication for all virtual services within the mesh.
     * 
     */
    @Import(name="mtls")
    private @Nullable Output<MeshMtlsArgs> mtls;

    /**
     * @return (Updatable) Sets a minimum level of mTLS authentication for all virtual services within the mesh.
     * 
     */
    public Optional<Output<MeshMtlsArgs>> mtls() {
        return Optional.ofNullable(this.mtls);
    }

    private MeshArgs() {}

    private MeshArgs(MeshArgs $) {
        this.certificateAuthorities = $.certificateAuthorities;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.mtls = $.mtls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MeshArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MeshArgs $;

        public Builder() {
            $ = new MeshArgs();
        }

        public Builder(MeshArgs defaults) {
            $ = new MeshArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateAuthorities The OCID of the certificate authority resource OCID to use for creating leaf certificates.
         * 
         * @return builder
         * 
         */
        public Builder certificateAuthorities(Output<List<MeshCertificateAuthorityArgs>> certificateAuthorities) {
            $.certificateAuthorities = certificateAuthorities;
            return this;
        }

        /**
         * @param certificateAuthorities The OCID of the certificate authority resource OCID to use for creating leaf certificates.
         * 
         * @return builder
         * 
         */
        public Builder certificateAuthorities(List<MeshCertificateAuthorityArgs> certificateAuthorities) {
            return certificateAuthorities(Output.of(certificateAuthorities));
        }

        /**
         * @param certificateAuthorities The OCID of the certificate authority resource OCID to use for creating leaf certificates.
         * 
         * @return builder
         * 
         */
        public Builder certificateAuthorities(MeshCertificateAuthorityArgs... certificateAuthorities) {
            return certificateAuthorities(List.of(certificateAuthorities));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. The name does not have to be unique and can be changed after creation. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. The name does not have to be unique and can be changed after creation. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param mtls (Updatable) Sets a minimum level of mTLS authentication for all virtual services within the mesh.
         * 
         * @return builder
         * 
         */
        public Builder mtls(@Nullable Output<MeshMtlsArgs> mtls) {
            $.mtls = mtls;
            return this;
        }

        /**
         * @param mtls (Updatable) Sets a minimum level of mTLS authentication for all virtual services within the mesh.
         * 
         * @return builder
         * 
         */
        public Builder mtls(MeshMtlsArgs mtls) {
            return mtls(Output.of(mtls));
        }

        public MeshArgs build() {
            if ($.certificateAuthorities == null) {
                throw new MissingRequiredPropertyException("MeshArgs", "certificateAuthorities");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("MeshArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("MeshArgs", "displayName");
            }
            return $;
        }
    }

}
