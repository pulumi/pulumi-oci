// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetVirtualDeploymentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVirtualDeploymentArgs Empty = new GetVirtualDeploymentArgs();

    /**
     * Unique VirtualDeployment identifier.
     * 
     */
    @Import(name="virtualDeploymentId", required=true)
    private Output<String> virtualDeploymentId;

    /**
     * @return Unique VirtualDeployment identifier.
     * 
     */
    public Output<String> virtualDeploymentId() {
        return this.virtualDeploymentId;
    }

    private GetVirtualDeploymentArgs() {}

    private GetVirtualDeploymentArgs(GetVirtualDeploymentArgs $) {
        this.virtualDeploymentId = $.virtualDeploymentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVirtualDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVirtualDeploymentArgs $;

        public Builder() {
            $ = new GetVirtualDeploymentArgs();
        }

        public Builder(GetVirtualDeploymentArgs defaults) {
            $ = new GetVirtualDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param virtualDeploymentId Unique VirtualDeployment identifier.
         * 
         * @return builder
         * 
         */
        public Builder virtualDeploymentId(Output<String> virtualDeploymentId) {
            $.virtualDeploymentId = virtualDeploymentId;
            return this;
        }

        /**
         * @param virtualDeploymentId Unique VirtualDeployment identifier.
         * 
         * @return builder
         * 
         */
        public Builder virtualDeploymentId(String virtualDeploymentId) {
            return virtualDeploymentId(Output.of(virtualDeploymentId));
        }

        public GetVirtualDeploymentArgs build() {
            $.virtualDeploymentId = Objects.requireNonNull($.virtualDeploymentId, "expected parameter 'virtualDeploymentId' to be non-null");
            return $;
        }
    }

}
