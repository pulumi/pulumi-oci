// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ServiceMesh.inputs.IngressGatewayHostListenerArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IngressGatewayHostArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngressGatewayHostArgs Empty = new IngressGatewayHostArgs();

    /**
     * (Updatable) Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;.
     * 
     */
    @Import(name="hostnames")
    private @Nullable Output<List<String>> hostnames;

    /**
     * @return (Updatable) Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;.
     * 
     */
    public Optional<Output<List<String>>> hostnames() {
        return Optional.ofNullable(this.hostnames);
    }

    /**
     * (Updatable) The listeners for the ingress gateway.
     * 
     */
    @Import(name="listeners", required=true)
    private Output<List<IngressGatewayHostListenerArgs>> listeners;

    /**
     * @return (Updatable) The listeners for the ingress gateway.
     * 
     */
    public Output<List<IngressGatewayHostListenerArgs>> listeners() {
        return this.listeners;
    }

    /**
     * A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private IngressGatewayHostArgs() {}

    private IngressGatewayHostArgs(IngressGatewayHostArgs $) {
        this.hostnames = $.hostnames;
        this.listeners = $.listeners;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngressGatewayHostArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngressGatewayHostArgs $;

        public Builder() {
            $ = new IngressGatewayHostArgs();
        }

        public Builder(IngressGatewayHostArgs defaults) {
            $ = new IngressGatewayHostArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostnames (Updatable) Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;.
         * 
         * @return builder
         * 
         */
        public Builder hostnames(@Nullable Output<List<String>> hostnames) {
            $.hostnames = hostnames;
            return this;
        }

        /**
         * @param hostnames (Updatable) Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;.
         * 
         * @return builder
         * 
         */
        public Builder hostnames(List<String> hostnames) {
            return hostnames(Output.of(hostnames));
        }

        /**
         * @param hostnames (Updatable) Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;.
         * 
         * @return builder
         * 
         */
        public Builder hostnames(String... hostnames) {
            return hostnames(List.of(hostnames));
        }

        /**
         * @param listeners (Updatable) The listeners for the ingress gateway.
         * 
         * @return builder
         * 
         */
        public Builder listeners(Output<List<IngressGatewayHostListenerArgs>> listeners) {
            $.listeners = listeners;
            return this;
        }

        /**
         * @param listeners (Updatable) The listeners for the ingress gateway.
         * 
         * @return builder
         * 
         */
        public Builder listeners(List<IngressGatewayHostListenerArgs> listeners) {
            return listeners(Output.of(listeners));
        }

        /**
         * @param listeners (Updatable) The listeners for the ingress gateway.
         * 
         * @return builder
         * 
         */
        public Builder listeners(IngressGatewayHostListenerArgs... listeners) {
            return listeners(List.of(listeners));
        }

        /**
         * @param name A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public IngressGatewayHostArgs build() {
            $.listeners = Objects.requireNonNull($.listeners, "expected parameter 'listeners' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
