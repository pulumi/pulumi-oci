// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ServiceMesh.inputs.IngressGatewayHostListenerTlsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IngressGatewayHostListenerArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngressGatewayHostListenerArgs Empty = new IngressGatewayHostListenerArgs();

    /**
     * (Updatable) Port on which ingress gateway is listening.
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return (Updatable) Port on which ingress gateway is listening.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    /**
     * (Updatable) Type of protocol used.
     * 
     */
    @Import(name="protocol", required=true)
    private Output<String> protocol;

    /**
     * @return (Updatable) Type of protocol used.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }

    /**
     * (Updatable) TLS enforcement config for the ingress listener.
     * 
     */
    @Import(name="tls")
    private @Nullable Output<IngressGatewayHostListenerTlsArgs> tls;

    /**
     * @return (Updatable) TLS enforcement config for the ingress listener.
     * 
     */
    public Optional<Output<IngressGatewayHostListenerTlsArgs>> tls() {
        return Optional.ofNullable(this.tls);
    }

    private IngressGatewayHostListenerArgs() {}

    private IngressGatewayHostListenerArgs(IngressGatewayHostListenerArgs $) {
        this.port = $.port;
        this.protocol = $.protocol;
        this.tls = $.tls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngressGatewayHostListenerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngressGatewayHostListenerArgs $;

        public Builder() {
            $ = new IngressGatewayHostListenerArgs();
        }

        public Builder(IngressGatewayHostListenerArgs defaults) {
            $ = new IngressGatewayHostListenerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param port (Updatable) Port on which ingress gateway is listening.
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port (Updatable) Port on which ingress gateway is listening.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param protocol (Updatable) Type of protocol used.
         * 
         * @return builder
         * 
         */
        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol (Updatable) Type of protocol used.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param tls (Updatable) TLS enforcement config for the ingress listener.
         * 
         * @return builder
         * 
         */
        public Builder tls(@Nullable Output<IngressGatewayHostListenerTlsArgs> tls) {
            $.tls = tls;
            return this;
        }

        /**
         * @param tls (Updatable) TLS enforcement config for the ingress listener.
         * 
         * @return builder
         * 
         */
        public Builder tls(IngressGatewayHostListenerTlsArgs tls) {
            return tls(Output.of(tls));
        }

        public IngressGatewayHostListenerArgs build() {
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            $.protocol = Objects.requireNonNull($.protocol, "expected parameter 'protocol' to be non-null");
            return $;
        }
    }

}
