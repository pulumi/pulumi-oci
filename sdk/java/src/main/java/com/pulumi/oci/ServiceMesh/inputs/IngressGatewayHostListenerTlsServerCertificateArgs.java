// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IngressGatewayHostListenerTlsServerCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngressGatewayHostListenerTlsServerCertificateArgs Empty = new IngressGatewayHostListenerTlsServerCertificateArgs();

    /**
     * (Updatable) The OCID of the leaf certificate resource.
     * 
     */
    @Import(name="certificateId")
    private @Nullable Output<String> certificateId;

    /**
     * @return (Updatable) The OCID of the leaf certificate resource.
     * 
     */
    public Optional<Output<String>> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    /**
     * (Updatable) Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
     * 
     */
    @Import(name="secretName")
    private @Nullable Output<String> secretName;

    /**
     * @return (Updatable) Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
     * 
     */
    public Optional<Output<String>> secretName() {
        return Optional.ofNullable(this.secretName);
    }

    /**
     * (Updatable) Type of certificate.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Type of certificate.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private IngressGatewayHostListenerTlsServerCertificateArgs() {}

    private IngressGatewayHostListenerTlsServerCertificateArgs(IngressGatewayHostListenerTlsServerCertificateArgs $) {
        this.certificateId = $.certificateId;
        this.secretName = $.secretName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngressGatewayHostListenerTlsServerCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngressGatewayHostListenerTlsServerCertificateArgs $;

        public Builder() {
            $ = new IngressGatewayHostListenerTlsServerCertificateArgs();
        }

        public Builder(IngressGatewayHostListenerTlsServerCertificateArgs defaults) {
            $ = new IngressGatewayHostListenerTlsServerCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateId (Updatable) The OCID of the leaf certificate resource.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(@Nullable Output<String> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param certificateId (Updatable) The OCID of the leaf certificate resource.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(String certificateId) {
            return certificateId(Output.of(certificateId));
        }

        /**
         * @param secretName (Updatable) Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
         * 
         * @return builder
         * 
         */
        public Builder secretName(@Nullable Output<String> secretName) {
            $.secretName = secretName;
            return this;
        }

        /**
         * @param secretName (Updatable) Name of the secret. For Kubernetes this is the name of the Kubernetes secret of type tls. For other platforms the secrets must be mounted at: /etc/oci/secrets/${secretName}/tls.{key,crt}
         * 
         * @return builder
         * 
         */
        public Builder secretName(String secretName) {
            return secretName(Output.of(secretName));
        }

        /**
         * @param type (Updatable) Type of certificate.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of certificate.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public IngressGatewayHostListenerTlsServerCertificateArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("IngressGatewayHostListenerTlsServerCertificateArgs", "type");
            }
            return $;
        }
    }

}
