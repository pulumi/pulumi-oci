// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IngressGatewayRouteTableRouteRuleDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngressGatewayRouteTableRouteRuleDestinationArgs Empty = new IngressGatewayRouteTableRouteRuleDestinationArgs();

    /**
     * (Updatable) The port on the virtual service to target. Mandatory if the virtual deployments are listening on multiple ports.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return (Updatable) The port on the virtual service to target. Mandatory if the virtual deployments are listening on multiple ports.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * (Updatable) The OCID of the virtual service where the request will be routed.
     * 
     */
    @Import(name="virtualServiceId", required=true)
    private Output<String> virtualServiceId;

    /**
     * @return (Updatable) The OCID of the virtual service where the request will be routed.
     * 
     */
    public Output<String> virtualServiceId() {
        return this.virtualServiceId;
    }

    /**
     * (Updatable) Weight of traffic target.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return (Updatable) Weight of traffic target.
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private IngressGatewayRouteTableRouteRuleDestinationArgs() {}

    private IngressGatewayRouteTableRouteRuleDestinationArgs(IngressGatewayRouteTableRouteRuleDestinationArgs $) {
        this.port = $.port;
        this.virtualServiceId = $.virtualServiceId;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngressGatewayRouteTableRouteRuleDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngressGatewayRouteTableRouteRuleDestinationArgs $;

        public Builder() {
            $ = new IngressGatewayRouteTableRouteRuleDestinationArgs();
        }

        public Builder(IngressGatewayRouteTableRouteRuleDestinationArgs defaults) {
            $ = new IngressGatewayRouteTableRouteRuleDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param port (Updatable) The port on the virtual service to target. Mandatory if the virtual deployments are listening on multiple ports.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port (Updatable) The port on the virtual service to target. Mandatory if the virtual deployments are listening on multiple ports.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param virtualServiceId (Updatable) The OCID of the virtual service where the request will be routed.
         * 
         * @return builder
         * 
         */
        public Builder virtualServiceId(Output<String> virtualServiceId) {
            $.virtualServiceId = virtualServiceId;
            return this;
        }

        /**
         * @param virtualServiceId (Updatable) The OCID of the virtual service where the request will be routed.
         * 
         * @return builder
         * 
         */
        public Builder virtualServiceId(String virtualServiceId) {
            return virtualServiceId(Output.of(virtualServiceId));
        }

        /**
         * @param weight (Updatable) Weight of traffic target.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight (Updatable) Weight of traffic target.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public IngressGatewayRouteTableRouteRuleDestinationArgs build() {
            if ($.virtualServiceId == null) {
                throw new MissingRequiredPropertyException("IngressGatewayRouteTableRouteRuleDestinationArgs", "virtualServiceId");
            }
            return $;
        }
    }

}
