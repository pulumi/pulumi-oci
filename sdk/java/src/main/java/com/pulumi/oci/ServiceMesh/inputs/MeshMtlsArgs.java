// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MeshMtlsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MeshMtlsArgs Empty = new MeshMtlsArgs();

    /**
     * (Updatable) DISABLED: No minimum virtual services within this mesh can use any mTLS authentication mode. PERMISSIVE: Virtual services within this mesh can use either PERMISSIVE or STRICT modes. STRICT: All virtual services within this mesh must use STRICT mode.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="minimum", required=true)
    private Output<String> minimum;

    /**
     * @return (Updatable) DISABLED: No minimum virtual services within this mesh can use any mTLS authentication mode. PERMISSIVE: Virtual services within this mesh can use either PERMISSIVE or STRICT modes. STRICT: All virtual services within this mesh must use STRICT mode.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> minimum() {
        return this.minimum;
    }

    private MeshMtlsArgs() {}

    private MeshMtlsArgs(MeshMtlsArgs $) {
        this.minimum = $.minimum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MeshMtlsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MeshMtlsArgs $;

        public Builder() {
            $ = new MeshMtlsArgs();
        }

        public Builder(MeshMtlsArgs defaults) {
            $ = new MeshMtlsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param minimum (Updatable) DISABLED: No minimum virtual services within this mesh can use any mTLS authentication mode. PERMISSIVE: Virtual services within this mesh can use either PERMISSIVE or STRICT modes. STRICT: All virtual services within this mesh must use STRICT mode.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder minimum(Output<String> minimum) {
            $.minimum = minimum;
            return this;
        }

        /**
         * @param minimum (Updatable) DISABLED: No minimum virtual services within this mesh can use any mTLS authentication mode. PERMISSIVE: Virtual services within this mesh can use either PERMISSIVE or STRICT modes. STRICT: All virtual services within this mesh must use STRICT mode.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder minimum(String minimum) {
            return minimum(Output.of(minimum));
        }

        public MeshMtlsArgs build() {
            if ($.minimum == null) {
                throw new MissingRequiredPropertyException("MeshMtlsArgs", "minimum");
            }
            return $;
        }
    }

}
