// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualDeploymentListenerArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualDeploymentListenerArgs Empty = new VirtualDeploymentListenerArgs();

    /**
     * (Updatable) The maximum duration in milliseconds for which the request&#39;s stream may be idle. The value 0 (zero) indicates that the timeout is disabled.
     * 
     */
    @Import(name="idleTimeoutInMs")
    private @Nullable Output<String> idleTimeoutInMs;

    /**
     * @return (Updatable) The maximum duration in milliseconds for which the request&#39;s stream may be idle. The value 0 (zero) indicates that the timeout is disabled.
     * 
     */
    public Optional<Output<String>> idleTimeoutInMs() {
        return Optional.ofNullable(this.idleTimeoutInMs);
    }

    /**
     * (Updatable) Port in which virtual deployment is running.
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return (Updatable) Port in which virtual deployment is running.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    /**
     * (Updatable) Type of protocol used in virtual deployment.
     * 
     */
    @Import(name="protocol", required=true)
    private Output<String> protocol;

    /**
     * @return (Updatable) Type of protocol used in virtual deployment.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }

    /**
     * (Updatable) The maximum duration in milliseconds for the deployed service to respond to an incoming request through the listener.  If provided, the timeout value overrides the default timeout of 15 seconds for the HTTP/HTTP2 listeners, and disabled (no timeout) for the GRPC listeners. The value 0 (zero) indicates that the timeout is disabled.  The timeout cannot be configured for the TCP and TLS_PASSTHROUGH listeners.  For streaming responses from the deployed service, consider either keeping the timeout disabled or set a sufficiently high value.
     * 
     */
    @Import(name="requestTimeoutInMs")
    private @Nullable Output<String> requestTimeoutInMs;

    /**
     * @return (Updatable) The maximum duration in milliseconds for the deployed service to respond to an incoming request through the listener.  If provided, the timeout value overrides the default timeout of 15 seconds for the HTTP/HTTP2 listeners, and disabled (no timeout) for the GRPC listeners. The value 0 (zero) indicates that the timeout is disabled.  The timeout cannot be configured for the TCP and TLS_PASSTHROUGH listeners.  For streaming responses from the deployed service, consider either keeping the timeout disabled or set a sufficiently high value.
     * 
     */
    public Optional<Output<String>> requestTimeoutInMs() {
        return Optional.ofNullable(this.requestTimeoutInMs);
    }

    private VirtualDeploymentListenerArgs() {}

    private VirtualDeploymentListenerArgs(VirtualDeploymentListenerArgs $) {
        this.idleTimeoutInMs = $.idleTimeoutInMs;
        this.port = $.port;
        this.protocol = $.protocol;
        this.requestTimeoutInMs = $.requestTimeoutInMs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualDeploymentListenerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualDeploymentListenerArgs $;

        public Builder() {
            $ = new VirtualDeploymentListenerArgs();
        }

        public Builder(VirtualDeploymentListenerArgs defaults) {
            $ = new VirtualDeploymentListenerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param idleTimeoutInMs (Updatable) The maximum duration in milliseconds for which the request&#39;s stream may be idle. The value 0 (zero) indicates that the timeout is disabled.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutInMs(@Nullable Output<String> idleTimeoutInMs) {
            $.idleTimeoutInMs = idleTimeoutInMs;
            return this;
        }

        /**
         * @param idleTimeoutInMs (Updatable) The maximum duration in milliseconds for which the request&#39;s stream may be idle. The value 0 (zero) indicates that the timeout is disabled.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutInMs(String idleTimeoutInMs) {
            return idleTimeoutInMs(Output.of(idleTimeoutInMs));
        }

        /**
         * @param port (Updatable) Port in which virtual deployment is running.
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port (Updatable) Port in which virtual deployment is running.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param protocol (Updatable) Type of protocol used in virtual deployment.
         * 
         * @return builder
         * 
         */
        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol (Updatable) Type of protocol used in virtual deployment.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param requestTimeoutInMs (Updatable) The maximum duration in milliseconds for the deployed service to respond to an incoming request through the listener.  If provided, the timeout value overrides the default timeout of 15 seconds for the HTTP/HTTP2 listeners, and disabled (no timeout) for the GRPC listeners. The value 0 (zero) indicates that the timeout is disabled.  The timeout cannot be configured for the TCP and TLS_PASSTHROUGH listeners.  For streaming responses from the deployed service, consider either keeping the timeout disabled or set a sufficiently high value.
         * 
         * @return builder
         * 
         */
        public Builder requestTimeoutInMs(@Nullable Output<String> requestTimeoutInMs) {
            $.requestTimeoutInMs = requestTimeoutInMs;
            return this;
        }

        /**
         * @param requestTimeoutInMs (Updatable) The maximum duration in milliseconds for the deployed service to respond to an incoming request through the listener.  If provided, the timeout value overrides the default timeout of 15 seconds for the HTTP/HTTP2 listeners, and disabled (no timeout) for the GRPC listeners. The value 0 (zero) indicates that the timeout is disabled.  The timeout cannot be configured for the TCP and TLS_PASSTHROUGH listeners.  For streaming responses from the deployed service, consider either keeping the timeout disabled or set a sufficiently high value.
         * 
         * @return builder
         * 
         */
        public Builder requestTimeoutInMs(String requestTimeoutInMs) {
            return requestTimeoutInMs(Output.of(requestTimeoutInMs));
        }

        public VirtualDeploymentListenerArgs build() {
            if ($.port == null) {
                throw new MissingRequiredPropertyException("VirtualDeploymentListenerArgs", "port");
            }
            if ($.protocol == null) {
                throw new MissingRequiredPropertyException("VirtualDeploymentListenerArgs", "protocol");
            }
            return $;
        }
    }

}
