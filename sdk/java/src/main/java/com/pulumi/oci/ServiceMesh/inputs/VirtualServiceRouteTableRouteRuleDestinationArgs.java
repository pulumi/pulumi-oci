// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualServiceRouteTableRouteRuleDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualServiceRouteTableRouteRuleDestinationArgs Empty = new VirtualServiceRouteTableRouteRuleDestinationArgs();

    /**
     * (Updatable) Port on virtual deployment to target. If port is missing, the rule will target all ports on the virtual deployment.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return (Updatable) Port on virtual deployment to target. If port is missing, the rule will target all ports on the virtual deployment.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * (Updatable) The OCID of the virtual deployment where the request will be routed.
     * 
     */
    @Import(name="virtualDeploymentId", required=true)
    private Output<String> virtualDeploymentId;

    /**
     * @return (Updatable) The OCID of the virtual deployment where the request will be routed.
     * 
     */
    public Output<String> virtualDeploymentId() {
        return this.virtualDeploymentId;
    }

    /**
     * (Updatable) Weight of traffic target.
     * 
     */
    @Import(name="weight", required=true)
    private Output<Integer> weight;

    /**
     * @return (Updatable) Weight of traffic target.
     * 
     */
    public Output<Integer> weight() {
        return this.weight;
    }

    private VirtualServiceRouteTableRouteRuleDestinationArgs() {}

    private VirtualServiceRouteTableRouteRuleDestinationArgs(VirtualServiceRouteTableRouteRuleDestinationArgs $) {
        this.port = $.port;
        this.virtualDeploymentId = $.virtualDeploymentId;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualServiceRouteTableRouteRuleDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualServiceRouteTableRouteRuleDestinationArgs $;

        public Builder() {
            $ = new VirtualServiceRouteTableRouteRuleDestinationArgs();
        }

        public Builder(VirtualServiceRouteTableRouteRuleDestinationArgs defaults) {
            $ = new VirtualServiceRouteTableRouteRuleDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param port (Updatable) Port on virtual deployment to target. If port is missing, the rule will target all ports on the virtual deployment.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port (Updatable) Port on virtual deployment to target. If port is missing, the rule will target all ports on the virtual deployment.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param virtualDeploymentId (Updatable) The OCID of the virtual deployment where the request will be routed.
         * 
         * @return builder
         * 
         */
        public Builder virtualDeploymentId(Output<String> virtualDeploymentId) {
            $.virtualDeploymentId = virtualDeploymentId;
            return this;
        }

        /**
         * @param virtualDeploymentId (Updatable) The OCID of the virtual deployment where the request will be routed.
         * 
         * @return builder
         * 
         */
        public Builder virtualDeploymentId(String virtualDeploymentId) {
            return virtualDeploymentId(Output.of(virtualDeploymentId));
        }

        /**
         * @param weight (Updatable) Weight of traffic target.
         * 
         * @return builder
         * 
         */
        public Builder weight(Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight (Updatable) Weight of traffic target.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public VirtualServiceRouteTableRouteRuleDestinationArgs build() {
            $.virtualDeploymentId = Objects.requireNonNull($.virtualDeploymentId, "expected parameter 'virtualDeploymentId' to be non-null");
            $.weight = Objects.requireNonNull($.weight, "expected parameter 'weight' to be non-null");
            return $;
        }
    }

}
