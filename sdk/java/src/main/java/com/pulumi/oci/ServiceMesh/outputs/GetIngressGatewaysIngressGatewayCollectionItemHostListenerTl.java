// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ServiceMesh.outputs.GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation;
import com.pulumi.oci.ServiceMesh.outputs.GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIngressGatewaysIngressGatewayCollectionItemHostListenerTl {
    /**
     * @return Resource representing the TLS configuration used for validating client certificates.
     * 
     */
    private final List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation> clientValidations;
    /**
     * @return DISABLED: Connection can only be plaintext. PERMISSIVE: Connection can be either plaintext or TLS/mTLS. If the clientValidation.trustedCaBundle property is configured for the listener, mTLS is performed and the client&#39;s certificates are validated by the gateway. TLS: Connection can only be TLS.  MUTUAL_TLS: Connection can only be MTLS.
     * 
     */
    private final String mode;
    /**
     * @return Resource representing the location of the TLS certificate.
     * 
     */
    private final List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate> serverCertificates;

    @CustomType.Constructor
    private GetIngressGatewaysIngressGatewayCollectionItemHostListenerTl(
        @CustomType.Parameter("clientValidations") List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation> clientValidations,
        @CustomType.Parameter("mode") String mode,
        @CustomType.Parameter("serverCertificates") List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate> serverCertificates) {
        this.clientValidations = clientValidations;
        this.mode = mode;
        this.serverCertificates = serverCertificates;
    }

    /**
     * @return Resource representing the TLS configuration used for validating client certificates.
     * 
     */
    public List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation> clientValidations() {
        return this.clientValidations;
    }
    /**
     * @return DISABLED: Connection can only be plaintext. PERMISSIVE: Connection can be either plaintext or TLS/mTLS. If the clientValidation.trustedCaBundle property is configured for the listener, mTLS is performed and the client&#39;s certificates are validated by the gateway. TLS: Connection can only be TLS.  MUTUAL_TLS: Connection can only be MTLS.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return Resource representing the location of the TLS certificate.
     * 
     */
    public List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate> serverCertificates() {
        return this.serverCertificates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIngressGatewaysIngressGatewayCollectionItemHostListenerTl defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation> clientValidations;
        private String mode;
        private List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate> serverCertificates;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIngressGatewaysIngressGatewayCollectionItemHostListenerTl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientValidations = defaults.clientValidations;
    	      this.mode = defaults.mode;
    	      this.serverCertificates = defaults.serverCertificates;
        }

        public Builder clientValidations(List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation> clientValidations) {
            this.clientValidations = Objects.requireNonNull(clientValidations);
            return this;
        }
        public Builder clientValidations(GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlClientValidation... clientValidations) {
            return clientValidations(List.of(clientValidations));
        }
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder serverCertificates(List<GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate> serverCertificates) {
            this.serverCertificates = Objects.requireNonNull(serverCertificates);
            return this;
        }
        public Builder serverCertificates(GetIngressGatewaysIngressGatewayCollectionItemHostListenerTlServerCertificate... serverCertificates) {
            return serverCertificates(List.of(serverCertificates));
        }        public GetIngressGatewaysIngressGatewayCollectionItemHostListenerTl build() {
            return new GetIngressGatewaysIngressGatewayCollectionItemHostListenerTl(clientValidations, mode, serverCertificates);
        }
    }
}
