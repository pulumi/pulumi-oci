// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ServiceMesh.outputs.GetIngressGatewaysFilter;
import com.pulumi.oci.ServiceMesh.outputs.GetIngressGatewaysIngressGatewayCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIngressGatewaysResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetIngressGatewaysFilter> filters;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of ingress_gateway_collection.
     * 
     */
    private @Nullable List<GetIngressGatewaysIngressGatewayCollection> ingressGatewayCollections;
    /**
     * @return The OCID of the service mesh in which this ingress gateway is created.
     * 
     */
    private @Nullable String meshId;
    /**
     * @return A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    private @Nullable String name;
    /**
     * @return The current state of the Resource.
     * 
     */
    private @Nullable String state;

    private GetIngressGatewaysResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetIngressGatewaysFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of ingress_gateway_collection.
     * 
     */
    public List<GetIngressGatewaysIngressGatewayCollection> ingressGatewayCollections() {
        return this.ingressGatewayCollections == null ? List.of() : this.ingressGatewayCollections;
    }
    /**
     * @return The OCID of the service mesh in which this ingress gateway is created.
     * 
     */
    public Optional<String> meshId() {
        return Optional.ofNullable(this.meshId);
    }
    /**
     * @return A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The current state of the Resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIngressGatewaysResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetIngressGatewaysFilter> filters;
        private @Nullable String id;
        private @Nullable List<GetIngressGatewaysIngressGatewayCollection> ingressGatewayCollections;
        private @Nullable String meshId;
        private @Nullable String name;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetIngressGatewaysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ingressGatewayCollections = defaults.ingressGatewayCollections;
    	      this.meshId = defaults.meshId;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetIngressGatewaysFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetIngressGatewaysFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ingressGatewayCollections(@Nullable List<GetIngressGatewaysIngressGatewayCollection> ingressGatewayCollections) {
            this.ingressGatewayCollections = ingressGatewayCollections;
            return this;
        }
        public Builder ingressGatewayCollections(GetIngressGatewaysIngressGatewayCollection... ingressGatewayCollections) {
            return ingressGatewayCollections(List.of(ingressGatewayCollections));
        }
        @CustomType.Setter
        public Builder meshId(@Nullable String meshId) {
            this.meshId = meshId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetIngressGatewaysResult build() {
            final var o = new GetIngressGatewaysResult();
            o.compartmentId = compartmentId;
            o.filters = filters;
            o.id = id;
            o.ingressGatewayCollections = ingressGatewayCollections;
            o.meshId = meshId;
            o.name = name;
            o.state = state;
            return o;
        }
    }
}
