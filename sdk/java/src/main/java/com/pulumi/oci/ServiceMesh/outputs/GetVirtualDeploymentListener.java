// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVirtualDeploymentListener {
    /**
     * @return The maximum duration in milliseconds for which the request&#39;s stream may be idle. The value 0 (zero) indicates that the timeout is disabled.
     * 
     */
    private String idleTimeoutInMs;
    /**
     * @return Port in which virtual deployment is running.
     * 
     */
    private Integer port;
    /**
     * @return Type of protocol used in virtual deployment.
     * 
     */
    private String protocol;
    /**
     * @return The maximum duration in milliseconds for the deployed service to respond to an incoming request through the listener.  If provided, the timeout value overrides the default timeout of 15 seconds for the HTTP/HTTP2 listeners, and disabled (no timeout) for the GRPC listeners. The value 0 (zero) indicates that the timeout is disabled.  The timeout cannot be configured for the TCP and TLS_PASSTHROUGH listeners.  For streaming responses from the deployed service, consider either keeping the timeout disabled or set a sufficiently high value.
     * 
     */
    private String requestTimeoutInMs;

    private GetVirtualDeploymentListener() {}
    /**
     * @return The maximum duration in milliseconds for which the request&#39;s stream may be idle. The value 0 (zero) indicates that the timeout is disabled.
     * 
     */
    public String idleTimeoutInMs() {
        return this.idleTimeoutInMs;
    }
    /**
     * @return Port in which virtual deployment is running.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return Type of protocol used in virtual deployment.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The maximum duration in milliseconds for the deployed service to respond to an incoming request through the listener.  If provided, the timeout value overrides the default timeout of 15 seconds for the HTTP/HTTP2 listeners, and disabled (no timeout) for the GRPC listeners. The value 0 (zero) indicates that the timeout is disabled.  The timeout cannot be configured for the TCP and TLS_PASSTHROUGH listeners.  For streaming responses from the deployed service, consider either keeping the timeout disabled or set a sufficiently high value.
     * 
     */
    public String requestTimeoutInMs() {
        return this.requestTimeoutInMs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualDeploymentListener defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String idleTimeoutInMs;
        private Integer port;
        private String protocol;
        private String requestTimeoutInMs;
        public Builder() {}
        public Builder(GetVirtualDeploymentListener defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.idleTimeoutInMs = defaults.idleTimeoutInMs;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.requestTimeoutInMs = defaults.requestTimeoutInMs;
        }

        @CustomType.Setter
        public Builder idleTimeoutInMs(String idleTimeoutInMs) {
            this.idleTimeoutInMs = Objects.requireNonNull(idleTimeoutInMs);
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        @CustomType.Setter
        public Builder requestTimeoutInMs(String requestTimeoutInMs) {
            this.requestTimeoutInMs = Objects.requireNonNull(requestTimeoutInMs);
            return this;
        }
        public GetVirtualDeploymentListener build() {
            final var _resultValue = new GetVirtualDeploymentListener();
            _resultValue.idleTimeoutInMs = idleTimeoutInMs;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            _resultValue.requestTimeoutInMs = requestTimeoutInMs;
            return _resultValue;
        }
    }
}
