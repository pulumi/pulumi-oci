// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ServiceMesh.outputs.GetVirtualDeploymentAccessLogging;
import com.pulumi.oci.ServiceMesh.outputs.GetVirtualDeploymentListener;
import com.pulumi.oci.ServiceMesh.outputs.GetVirtualDeploymentServiceDiscovery;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVirtualDeploymentResult {
    /**
     * @return This configuration determines if logging is enabled and where the logs will be output.
     * 
     */
    private List<GetVirtualDeploymentAccessLogging> accessLoggings;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     * 
     */
    private String description;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The listeners for the virtual deployment
     * 
     */
    private List<GetVirtualDeploymentListener> listeners;
    /**
     * @return A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    private String name;
    /**
     * @return Service Discovery configuration for virtual deployments.
     * 
     */
    private List<GetVirtualDeploymentServiceDiscovery> serviceDiscoveries;
    /**
     * @return The current state of the Resource.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time when this resource was created in an RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time when this resource was updated in an RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;
    private String virtualDeploymentId;
    /**
     * @return The OCID of the virtual service in which this virtual deployment is created.
     * 
     */
    private String virtualServiceId;

    private GetVirtualDeploymentResult() {}
    /**
     * @return This configuration determines if logging is enabled and where the logs will be output.
     * 
     */
    public List<GetVirtualDeploymentAccessLogging> accessLoggings() {
        return this.accessLoggings;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The listeners for the virtual deployment
     * 
     */
    public List<GetVirtualDeploymentListener> listeners() {
        return this.listeners;
    }
    /**
     * @return A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Service Discovery configuration for virtual deployments.
     * 
     */
    public List<GetVirtualDeploymentServiceDiscovery> serviceDiscoveries() {
        return this.serviceDiscoveries;
    }
    /**
     * @return The current state of the Resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time when this resource was created in an RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time when this resource was updated in an RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    public String virtualDeploymentId() {
        return this.virtualDeploymentId;
    }
    /**
     * @return The OCID of the virtual service in which this virtual deployment is created.
     * 
     */
    public String virtualServiceId() {
        return this.virtualServiceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualDeploymentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVirtualDeploymentAccessLogging> accessLoggings;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private List<GetVirtualDeploymentListener> listeners;
        private String name;
        private List<GetVirtualDeploymentServiceDiscovery> serviceDiscoveries;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String virtualDeploymentId;
        private String virtualServiceId;
        public Builder() {}
        public Builder(GetVirtualDeploymentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLoggings = defaults.accessLoggings;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.listeners = defaults.listeners;
    	      this.name = defaults.name;
    	      this.serviceDiscoveries = defaults.serviceDiscoveries;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.virtualDeploymentId = defaults.virtualDeploymentId;
    	      this.virtualServiceId = defaults.virtualServiceId;
        }

        @CustomType.Setter
        public Builder accessLoggings(List<GetVirtualDeploymentAccessLogging> accessLoggings) {
            this.accessLoggings = Objects.requireNonNull(accessLoggings);
            return this;
        }
        public Builder accessLoggings(GetVirtualDeploymentAccessLogging... accessLoggings) {
            return accessLoggings(List.of(accessLoggings));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder listeners(List<GetVirtualDeploymentListener> listeners) {
            this.listeners = Objects.requireNonNull(listeners);
            return this;
        }
        public Builder listeners(GetVirtualDeploymentListener... listeners) {
            return listeners(List.of(listeners));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder serviceDiscoveries(List<GetVirtualDeploymentServiceDiscovery> serviceDiscoveries) {
            this.serviceDiscoveries = Objects.requireNonNull(serviceDiscoveries);
            return this;
        }
        public Builder serviceDiscoveries(GetVirtualDeploymentServiceDiscovery... serviceDiscoveries) {
            return serviceDiscoveries(List.of(serviceDiscoveries));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder virtualDeploymentId(String virtualDeploymentId) {
            this.virtualDeploymentId = Objects.requireNonNull(virtualDeploymentId);
            return this;
        }
        @CustomType.Setter
        public Builder virtualServiceId(String virtualServiceId) {
            this.virtualServiceId = Objects.requireNonNull(virtualServiceId);
            return this;
        }
        public GetVirtualDeploymentResult build() {
            final var o = new GetVirtualDeploymentResult();
            o.accessLoggings = accessLoggings;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.listeners = listeners;
            o.name = name;
            o.serviceDiscoveries = serviceDiscoveries;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.virtualDeploymentId = virtualDeploymentId;
            o.virtualServiceId = virtualServiceId;
            return o;
        }
    }
}
