// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ServiceMesh.outputs.GetVirtualServiceDefaultRoutingPolicy;
import com.pulumi.oci.ServiceMesh.outputs.GetVirtualServiceMtl;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVirtualServiceResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return Routing policy for the virtual service.
     * 
     */
    private final List<GetVirtualServiceDefaultRoutingPolicy> defaultRoutingPolicies;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     * 
     */
    private final String description;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The DNS hostnames of the virtual service that is used by its callers. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;. Can be omitted if the virtual service will only have TCP virtual deployments.
     * 
     */
    private final List<String> hosts;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private final String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return The OCID of the service mesh in which this virtual service is created.
     * 
     */
    private final String meshId;
    /**
     * @return Mutual TLS settings used when communicating with other virtual services or ingress gateways within the mesh.
     * 
     */
    private final List<GetVirtualServiceMtl> mtls;
    /**
     * @return A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    private final String name;
    /**
     * @return The current state of the Resource.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time when this resource was created in an RFC3339 formatted datetime string.
     * 
     */
    private final String timeCreated;
    /**
     * @return The time when this resource was updated in an RFC3339 formatted datetime string.
     * 
     */
    private final String timeUpdated;
    private final String virtualServiceId;

    @CustomType.Constructor
    private GetVirtualServiceResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("defaultRoutingPolicies") List<GetVirtualServiceDefaultRoutingPolicy> defaultRoutingPolicies,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("hosts") List<String> hosts,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("meshId") String meshId,
        @CustomType.Parameter("mtls") List<GetVirtualServiceMtl> mtls,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("virtualServiceId") String virtualServiceId) {
        this.compartmentId = compartmentId;
        this.defaultRoutingPolicies = defaultRoutingPolicies;
        this.definedTags = definedTags;
        this.description = description;
        this.freeformTags = freeformTags;
        this.hosts = hosts;
        this.id = id;
        this.lifecycleDetails = lifecycleDetails;
        this.meshId = meshId;
        this.mtls = mtls;
        this.name = name;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.virtualServiceId = virtualServiceId;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Routing policy for the virtual service.
     * 
     */
    public List<GetVirtualServiceDefaultRoutingPolicy> defaultRoutingPolicies() {
        return this.defaultRoutingPolicies;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The DNS hostnames of the virtual service that is used by its callers. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;. Can be omitted if the virtual service will only have TCP virtual deployments.
     * 
     */
    public List<String> hosts() {
        return this.hosts;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the service mesh in which this virtual service is created.
     * 
     */
    public String meshId() {
        return this.meshId;
    }
    /**
     * @return Mutual TLS settings used when communicating with other virtual services or ingress gateways within the mesh.
     * 
     */
    public List<GetVirtualServiceMtl> mtls() {
        return this.mtls;
    }
    /**
     * @return A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The current state of the Resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time when this resource was created in an RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time when this resource was updated in an RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    public String virtualServiceId() {
        return this.virtualServiceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private List<GetVirtualServiceDefaultRoutingPolicy> defaultRoutingPolicies;
        private Map<String,Object> definedTags;
        private String description;
        private Map<String,Object> freeformTags;
        private List<String> hosts;
        private String id;
        private String lifecycleDetails;
        private String meshId;
        private List<GetVirtualServiceMtl> mtls;
        private String name;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String virtualServiceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.defaultRoutingPolicies = defaults.defaultRoutingPolicies;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hosts = defaults.hosts;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.meshId = defaults.meshId;
    	      this.mtls = defaults.mtls;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.virtualServiceId = defaults.virtualServiceId;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder defaultRoutingPolicies(List<GetVirtualServiceDefaultRoutingPolicy> defaultRoutingPolicies) {
            this.defaultRoutingPolicies = Objects.requireNonNull(defaultRoutingPolicies);
            return this;
        }
        public Builder defaultRoutingPolicies(GetVirtualServiceDefaultRoutingPolicy... defaultRoutingPolicies) {
            return defaultRoutingPolicies(List.of(defaultRoutingPolicies));
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder hosts(List<String> hosts) {
            this.hosts = Objects.requireNonNull(hosts);
            return this;
        }
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder meshId(String meshId) {
            this.meshId = Objects.requireNonNull(meshId);
            return this;
        }
        public Builder mtls(List<GetVirtualServiceMtl> mtls) {
            this.mtls = Objects.requireNonNull(mtls);
            return this;
        }
        public Builder mtls(GetVirtualServiceMtl... mtls) {
            return mtls(List.of(mtls));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder virtualServiceId(String virtualServiceId) {
            this.virtualServiceId = Objects.requireNonNull(virtualServiceId);
            return this;
        }        public GetVirtualServiceResult build() {
            return new GetVirtualServiceResult(compartmentId, defaultRoutingPolicies, definedTags, description, freeformTags, hosts, id, lifecycleDetails, meshId, mtls, name, state, systemTags, timeCreated, timeUpdated, virtualServiceId);
        }
    }
}
