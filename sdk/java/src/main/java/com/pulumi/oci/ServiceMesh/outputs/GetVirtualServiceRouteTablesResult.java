// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ServiceMesh.outputs.GetVirtualServiceRouteTablesFilter;
import com.pulumi.oci.ServiceMesh.outputs.GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVirtualServiceRouteTablesResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetVirtualServiceRouteTablesFilter> filters;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    private @Nullable String name;
    /**
     * @return The current state of the Resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The OCID of the virtual service in which this virtual service route table is created.
     * 
     */
    private @Nullable String virtualServiceId;
    /**
     * @return The list of virtual_service_route_table_collection.
     * 
     */
    private List<GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection> virtualServiceRouteTableCollections;

    private GetVirtualServiceRouteTablesResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetVirtualServiceRouteTablesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The current state of the Resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCID of the virtual service in which this virtual service route table is created.
     * 
     */
    public Optional<String> virtualServiceId() {
        return Optional.ofNullable(this.virtualServiceId);
    }
    /**
     * @return The list of virtual_service_route_table_collection.
     * 
     */
    public List<GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection> virtualServiceRouteTableCollections() {
        return this.virtualServiceRouteTableCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualServiceRouteTablesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetVirtualServiceRouteTablesFilter> filters;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String state;
        private @Nullable String virtualServiceId;
        private List<GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection> virtualServiceRouteTableCollections;
        public Builder() {}
        public Builder(GetVirtualServiceRouteTablesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.virtualServiceId = defaults.virtualServiceId;
    	      this.virtualServiceRouteTableCollections = defaults.virtualServiceRouteTableCollections;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVirtualServiceRouteTablesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVirtualServiceRouteTablesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder virtualServiceId(@Nullable String virtualServiceId) {
            this.virtualServiceId = virtualServiceId;
            return this;
        }
        @CustomType.Setter
        public Builder virtualServiceRouteTableCollections(List<GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection> virtualServiceRouteTableCollections) {
            this.virtualServiceRouteTableCollections = Objects.requireNonNull(virtualServiceRouteTableCollections);
            return this;
        }
        public Builder virtualServiceRouteTableCollections(GetVirtualServiceRouteTablesVirtualServiceRouteTableCollection... virtualServiceRouteTableCollections) {
            return virtualServiceRouteTableCollections(List.of(virtualServiceRouteTableCollections));
        }
        public GetVirtualServiceRouteTablesResult build() {
            final var _resultValue = new GetVirtualServiceRouteTablesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.state = state;
            _resultValue.virtualServiceId = virtualServiceId;
            _resultValue.virtualServiceRouteTableCollections = virtualServiceRouteTableCollections;
            return _resultValue;
        }
    }
}
