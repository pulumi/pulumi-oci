// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ServiceMesh.outputs.IngressGatewayHostListener;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class IngressGatewayHost {
    /**
     * @return (Updatable) Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;.
     * 
     */
    private @Nullable List<String> hostnames;
    /**
     * @return (Updatable) The listeners for the ingress gateway.
     * 
     */
    private List<IngressGatewayHostListener> listeners;
    /**
     * @return A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private String name;

    private IngressGatewayHost() {}
    /**
     * @return (Updatable) Hostnames of the host. Applicable only for HTTP and TLS_PASSTHROUGH listeners. Wildcard hostnames are supported in the prefix form. Examples of valid hostnames are &#34;www.example.com&#34;, &#34;*.example.com&#34;, &#34;*.com&#34;.
     * 
     */
    public List<String> hostnames() {
        return this.hostnames == null ? List.of() : this.hostnames;
    }
    /**
     * @return (Updatable) The listeners for the ingress gateway.
     * 
     */
    public List<IngressGatewayHostListener> listeners() {
        return this.listeners;
    }
    /**
     * @return A user-friendly name. The name has to be unique within the same service mesh and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IngressGatewayHost defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> hostnames;
        private List<IngressGatewayHostListener> listeners;
        private String name;
        public Builder() {}
        public Builder(IngressGatewayHost defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostnames = defaults.hostnames;
    	      this.listeners = defaults.listeners;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder hostnames(@Nullable List<String> hostnames) {

            this.hostnames = hostnames;
            return this;
        }
        public Builder hostnames(String... hostnames) {
            return hostnames(List.of(hostnames));
        }
        @CustomType.Setter
        public Builder listeners(List<IngressGatewayHostListener> listeners) {
            if (listeners == null) {
              throw new MissingRequiredPropertyException("IngressGatewayHost", "listeners");
            }
            this.listeners = listeners;
            return this;
        }
        public Builder listeners(IngressGatewayHostListener... listeners) {
            return listeners(List.of(listeners));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("IngressGatewayHost", "name");
            }
            this.name = name;
            return this;
        }
        public IngressGatewayHost build() {
            final var _resultValue = new IngressGatewayHost();
            _resultValue.hostnames = hostnames;
            _resultValue.listeners = listeners;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
