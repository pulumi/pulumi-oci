// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceMesh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ServiceMesh.outputs.IngressGatewayHostListenerTlsClientValidation;
import com.pulumi.oci.ServiceMesh.outputs.IngressGatewayHostListenerTlsServerCertificate;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IngressGatewayHostListenerTls {
    /**
     * @return (Updatable) Resource representing the TLS configuration used for validating client certificates.
     * 
     */
    private final @Nullable IngressGatewayHostListenerTlsClientValidation clientValidation;
    /**
     * @return (Updatable) DISABLED: Connection can only be plaintext. PERMISSIVE: Connection can be either plaintext or TLS/mTLS. If the clientValidation.trustedCaBundle property is configured for the listener, mTLS is performed and the client&#39;s certificates are validated by the gateway. TLS: Connection can only be TLS.  MUTUAL_TLS: Connection can only be MTLS.
     * 
     */
    private final String mode;
    /**
     * @return (Updatable) Resource representing the location of the TLS certificate.
     * 
     */
    private final @Nullable IngressGatewayHostListenerTlsServerCertificate serverCertificate;

    @CustomType.Constructor
    private IngressGatewayHostListenerTls(
        @CustomType.Parameter("clientValidation") @Nullable IngressGatewayHostListenerTlsClientValidation clientValidation,
        @CustomType.Parameter("mode") String mode,
        @CustomType.Parameter("serverCertificate") @Nullable IngressGatewayHostListenerTlsServerCertificate serverCertificate) {
        this.clientValidation = clientValidation;
        this.mode = mode;
        this.serverCertificate = serverCertificate;
    }

    /**
     * @return (Updatable) Resource representing the TLS configuration used for validating client certificates.
     * 
     */
    public Optional<IngressGatewayHostListenerTlsClientValidation> clientValidation() {
        return Optional.ofNullable(this.clientValidation);
    }
    /**
     * @return (Updatable) DISABLED: Connection can only be plaintext. PERMISSIVE: Connection can be either plaintext or TLS/mTLS. If the clientValidation.trustedCaBundle property is configured for the listener, mTLS is performed and the client&#39;s certificates are validated by the gateway. TLS: Connection can only be TLS.  MUTUAL_TLS: Connection can only be MTLS.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return (Updatable) Resource representing the location of the TLS certificate.
     * 
     */
    public Optional<IngressGatewayHostListenerTlsServerCertificate> serverCertificate() {
        return Optional.ofNullable(this.serverCertificate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IngressGatewayHostListenerTls defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable IngressGatewayHostListenerTlsClientValidation clientValidation;
        private String mode;
        private @Nullable IngressGatewayHostListenerTlsServerCertificate serverCertificate;

        public Builder() {
    	      // Empty
        }

        public Builder(IngressGatewayHostListenerTls defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientValidation = defaults.clientValidation;
    	      this.mode = defaults.mode;
    	      this.serverCertificate = defaults.serverCertificate;
        }

        public Builder clientValidation(@Nullable IngressGatewayHostListenerTlsClientValidation clientValidation) {
            this.clientValidation = clientValidation;
            return this;
        }
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder serverCertificate(@Nullable IngressGatewayHostListenerTlsServerCertificate serverCertificate) {
            this.serverCertificate = serverCertificate;
            return this;
        }        public IngressGatewayHostListenerTls build() {
            return new IngressGatewayHostListenerTls(clientValidation, mode, serverCertificate);
        }
    }
}
