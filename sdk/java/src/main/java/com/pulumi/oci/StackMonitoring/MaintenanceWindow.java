// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.StackMonitoring.MaintenanceWindowArgs;
import com.pulumi.oci.StackMonitoring.inputs.MaintenanceWindowState;
import com.pulumi.oci.StackMonitoring.outputs.MaintenanceWindowResource;
import com.pulumi.oci.StackMonitoring.outputs.MaintenanceWindowResourcesDetail;
import com.pulumi.oci.StackMonitoring.outputs.MaintenanceWindowSchedule;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Maintenance Window resource in Oracle Cloud Infrastructure Stack Monitoring service.
 * 
 * Creates a new Maintenance Window for the given resources. It will create also the
 * Alarms Suppression for each alarm that the resource migth trigger.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.StackMonitoring.MaintenanceWindow;
 * import com.pulumi.oci.StackMonitoring.MaintenanceWindowArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MaintenanceWindowResourceArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MaintenanceWindowScheduleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMaintenanceWindow = new MaintenanceWindow("testMaintenanceWindow", MaintenanceWindowArgs.builder()
 *             .compartmentId(compartmentId)
 *             .name(maintenanceWindowName)
 *             .resources(MaintenanceWindowResourceArgs.builder()
 *                 .resourceId(testResource.id())
 *                 .areMembersIncluded(maintenanceWindowResourcesAreMembersIncluded)
 *                 .build())
 *             .schedule(MaintenanceWindowScheduleArgs.builder()
 *                 .scheduleType(maintenanceWindowScheduleScheduleType)
 *                 .maintenanceWindowDuration(maintenanceWindowScheduleMaintenanceWindowDuration)
 *                 .maintenanceWindowRecurrences(maintenanceWindowScheduleMaintenanceWindowRecurrences)
 *                 .timeMaintenanceWindowEnd(maintenanceWindowScheduleTimeMaintenanceWindowEnd)
 *                 .timeMaintenanceWindowStart(maintenanceWindowScheduleTimeMaintenanceWindowStart)
 *                 .build())
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .description(maintenanceWindowDescription)
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * MaintenanceWindows can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:StackMonitoring/maintenanceWindow:MaintenanceWindow test_maintenance_window &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:StackMonitoring/maintenanceWindow:MaintenanceWindow")
public class MaintenanceWindow extends com.pulumi.resources.CustomResource {
    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Maintenance Window description.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) Maintenance Window description.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * Lifecycle Details of the Maintenance Window.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Lifecycle Details of the Maintenance Window.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * Maintenance Window name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Maintenance Window name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Updatable) List of resource Ids which are part of the Maintenance Window
     * 
     */
    @Export(name="resources", refs={List.class,MaintenanceWindowResource.class}, tree="[0,1]")
    private Output<List<MaintenanceWindowResource>> resources;

    /**
     * @return (Updatable) List of resource Ids which are part of the Maintenance Window
     * 
     */
    public Output<List<MaintenanceWindowResource>> resources() {
        return this.resources;
    }
    /**
     * List of resource details that are part of the Maintenance Window.
     * 
     */
    @Export(name="resourcesDetails", refs={List.class,MaintenanceWindowResourcesDetail.class}, tree="[0,1]")
    private Output<List<MaintenanceWindowResourcesDetail>> resourcesDetails;

    /**
     * @return List of resource details that are part of the Maintenance Window.
     * 
     */
    public Output<List<MaintenanceWindowResourcesDetail>> resourcesDetails() {
        return this.resourcesDetails;
    }
    /**
     * (Updatable) Schedule information of the Maintenance Window
     * 
     */
    @Export(name="schedule", refs={MaintenanceWindowSchedule.class}, tree="[0]")
    private Output<MaintenanceWindowSchedule> schedule;

    /**
     * @return (Updatable) Schedule information of the Maintenance Window
     * 
     */
    public Output<MaintenanceWindowSchedule> schedule() {
        return this.schedule;
    }
    /**
     * Lifecycle state of the monitored resource.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,String>> systemTags() {
        return this.systemTags;
    }
    /**
     * The time the the maintenance window was created. An RFC3339 formatted datetime string
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time the the maintenance window was created. An RFC3339 formatted datetime string
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time the the mainteance window was updated. An RFC3339 formatted datetime string
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time the the mainteance window was updated. An RFC3339 formatted datetime string
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MaintenanceWindow(java.lang.String name) {
        this(name, MaintenanceWindowArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MaintenanceWindow(java.lang.String name, MaintenanceWindowArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MaintenanceWindow(java.lang.String name, MaintenanceWindowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:StackMonitoring/maintenanceWindow:MaintenanceWindow", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MaintenanceWindow(java.lang.String name, Output<java.lang.String> id, @Nullable MaintenanceWindowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:StackMonitoring/maintenanceWindow:MaintenanceWindow", name, state, makeResourceOptions(options, id), false);
    }

    private static MaintenanceWindowArgs makeArgs(MaintenanceWindowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MaintenanceWindowArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MaintenanceWindow get(java.lang.String name, Output<java.lang.String> id, @Nullable MaintenanceWindowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MaintenanceWindow(name, id, state, options);
    }
}
