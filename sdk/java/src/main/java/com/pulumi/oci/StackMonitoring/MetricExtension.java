// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.StackMonitoring.MetricExtensionArgs;
import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionState;
import com.pulumi.oci.StackMonitoring.outputs.MetricExtensionEnabledOnResource;
import com.pulumi.oci.StackMonitoring.outputs.MetricExtensionMetricList;
import com.pulumi.oci.StackMonitoring.outputs.MetricExtensionQueryProperties;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Metric Extension resource in Oracle Cloud Infrastructure Stack Monitoring service.
 * 
 * Creates a new metric extension resource for a given compartment
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.StackMonitoring.MetricExtension;
 * import com.pulumi.oci.StackMonitoring.MetricExtensionArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionMetricListArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionQueryPropertiesArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionQueryPropertiesOutParamDetailsArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionQueryPropertiesScriptDetailsArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionQueryPropertiesSqlDetailsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMetricExtension = new MetricExtension("testMetricExtension", MetricExtensionArgs.builder()
 *             .collectionRecurrences(metricExtensionCollectionRecurrences)
 *             .compartmentId(compartmentId)
 *             .displayName(metricExtensionDisplayName)
 *             .metricLists(MetricExtensionMetricListArgs.builder()
 *                 .dataType(metricExtensionMetricListDataType)
 *                 .name(metricExtensionMetricListName)
 *                 .computeExpression(metricExtensionMetricListComputeExpression)
 *                 .displayName(metricExtensionMetricListDisplayName)
 *                 .isDimension(metricExtensionMetricListIsDimension)
 *                 .isHidden(metricExtensionMetricListIsHidden)
 *                 .metricCategory(metricExtensionMetricListMetricCategory)
 *                 .unit(metricExtensionMetricListUnit)
 *                 .build())
 *             .name(metricExtensionName)
 *             .queryProperties(MetricExtensionQueryPropertiesArgs.builder()
 *                 .collectionMethod(metricExtensionQueryPropertiesCollectionMethod)
 *                 .arguments(metricExtensionQueryPropertiesArguments)
 *                 .autoRowPrefix(metricExtensionQueryPropertiesAutoRowPrefix)
 *                 .command(metricExtensionQueryPropertiesCommand)
 *                 .delimiter(metricExtensionQueryPropertiesDelimiter)
 *                 .identityMetric(metricExtensionQueryPropertiesIdentityMetric)
 *                 .inParamDetails(MetricExtensionQueryPropertiesInParamDetailArgs.builder()
 *                     .inParamPosition(metricExtensionQueryPropertiesInParamDetailsInParamPosition)
 *                     .inParamValue(metricExtensionQueryPropertiesInParamDetailsInParamValue)
 *                     .build())
 *                 .isMetricServiceEnabled(metricExtensionQueryPropertiesIsMetricServiceEnabled)
 *                 .jmxAttributes(metricExtensionQueryPropertiesJmxAttributes)
 *                 .managedBeanQuery(metricExtensionQueryPropertiesManagedBeanQuery)
 *                 .outParamDetails(MetricExtensionQueryPropertiesOutParamDetailsArgs.builder()
 *                     .outParamName(metricExtensionQueryPropertiesOutParamDetailsOutParamName)
 *                     .outParamPosition(metricExtensionQueryPropertiesOutParamDetailsOutParamPosition)
 *                     .outParamType(metricExtensionQueryPropertiesOutParamDetailsOutParamType)
 *                     .build())
 *                 .protocolType(metricExtensionQueryPropertiesProtocolType)
 *                 .responseContentType(metricExtensionQueryPropertiesResponseContentType)
 *                 .scriptDetails(MetricExtensionQueryPropertiesScriptDetailsArgs.builder()
 *                     .content(metricExtensionQueryPropertiesScriptDetailsContent)
 *                     .name(metricExtensionQueryPropertiesScriptDetailsName)
 *                     .build())
 *                 .sqlDetails(MetricExtensionQueryPropertiesSqlDetailsArgs.builder()
 *                     .content(metricExtensionQueryPropertiesSqlDetailsContent)
 *                     .scriptFileName(metricExtensionQueryPropertiesSqlDetailsScriptFileName)
 *                     .build())
 *                 .sqlType(metricExtensionQueryPropertiesSqlType)
 *                 .startsWith(metricExtensionQueryPropertiesStartsWith)
 *                 .url(metricExtensionQueryPropertiesUrl)
 *                 .build())
 *             .resourceType(metricExtensionResourceType)
 *             .description(metricExtensionDescription)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * MetricExtensions can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:StackMonitoring/metricExtension:MetricExtension test_metric_extension &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:StackMonitoring/metricExtension:MetricExtension")
public class MetricExtension extends com.pulumi.resources.CustomResource {
    /**
     * Type of possible collection methods.
     * 
     */
    @Export(name="collectionMethod", refs={String.class}, tree="[0]")
    private Output<String> collectionMethod;

    /**
     * @return Type of possible collection methods.
     * 
     */
    public Output<String> collectionMethod() {
        return this.collectionMethod;
    }
    /**
     * (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = &#34;FREQ&#34;;INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are &#34;MINUTELY&#34;,&#34;HOURLY&#34;,&#34;DAILY&#34; to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
     * 
     */
    @Export(name="collectionRecurrences", refs={String.class}, tree="[0]")
    private Output<String> collectionRecurrences;

    /**
     * @return (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = &#34;FREQ&#34;;INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are &#34;MINUTELY&#34;,&#34;HOURLY&#34;,&#34;DAILY&#34; to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
     * 
     */
    public Output<String> collectionRecurrences() {
        return this.collectionRecurrences;
    }
    /**
     * (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * Created by user
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return Created by user
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * (Updatable) Description of the metric extension.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) Description of the metric extension.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) Metric Extension display name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) Metric Extension display name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * List of resource details objects having resourceIds on which this metric extension is enabled.
     * 
     */
    @Export(name="enabledOnResources", refs={List.class,MetricExtensionEnabledOnResource.class}, tree="[0,1]")
    private Output<List<MetricExtensionEnabledOnResource>> enabledOnResources;

    /**
     * @return List of resource details objects having resourceIds on which this metric extension is enabled.
     * 
     */
    public Output<List<MetricExtensionEnabledOnResource>> enabledOnResources() {
        return this.enabledOnResources;
    }
    /**
     * Count of resources on which this metric extension is enabled.
     * 
     */
    @Export(name="enabledOnResourcesCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> enabledOnResourcesCount;

    /**
     * @return Count of resources on which this metric extension is enabled.
     * 
     */
    public Output<Integer> enabledOnResourcesCount() {
        return this.enabledOnResourcesCount;
    }
    /**
     * Last updated by user
     * 
     */
    @Export(name="lastUpdatedBy", refs={String.class}, tree="[0]")
    private Output<String> lastUpdatedBy;

    /**
     * @return Last updated by user
     * 
     */
    public Output<String> lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    /**
     * (Updatable) List of metrics which are part of this metric extension
     * 
     */
    @Export(name="metricLists", refs={List.class,MetricExtensionMetricList.class}, tree="[0,1]")
    private Output<List<MetricExtensionMetricList>> metricLists;

    /**
     * @return (Updatable) List of metrics which are part of this metric extension
     * 
     */
    public Output<List<MetricExtensionMetricList>> metricLists() {
        return this.metricLists;
    }
    /**
     * Metric Extension Resource name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Metric Extension Resource name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publishTrigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publishTrigger is updated to `true`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="publishTrigger", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publishTrigger;

    /**
     * @return (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publishTrigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publishTrigger is updated to `true`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Optional<Boolean>> publishTrigger() {
        return Codegen.optional(this.publishTrigger);
    }
    /**
     * (Updatable) Collection method and query properties details of metric extension
     * 
     */
    @Export(name="queryProperties", refs={MetricExtensionQueryProperties.class}, tree="[0]")
    private Output<MetricExtensionQueryProperties> queryProperties;

    /**
     * @return (Updatable) Collection method and query properties details of metric extension
     * 
     */
    public Output<MetricExtensionQueryProperties> queryProperties() {
        return this.queryProperties;
    }
    /**
     * Resource type to which Metric Extension applies
     * 
     */
    @Export(name="resourceType", refs={String.class}, tree="[0]")
    private Output<String> resourceType;

    /**
     * @return Resource type to which Metric Extension applies
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }
    /**
     * The URI path that the user can do a GET on to access the metric extension metadata
     * 
     */
    @Export(name="resourceUri", refs={String.class}, tree="[0]")
    private Output<String> resourceUri;

    /**
     * @return The URI path that the user can do a GET on to access the metric extension metadata
     * 
     */
    public Output<String> resourceUri() {
        return this.resourceUri;
    }
    /**
     * The current lifecycle state of the metric extension
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current lifecycle state of the metric extension
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The current status of the metric extension i.e. whether it is Draft or Published
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The current status of the metric extension i.e. whether it is Draft or Published
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }
    /**
     * Metric Extension creation time. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return Metric Extension creation time. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * Metric Extension update time. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return Metric Extension update time. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MetricExtension(java.lang.String name) {
        this(name, MetricExtensionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MetricExtension(java.lang.String name, MetricExtensionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MetricExtension(java.lang.String name, MetricExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:StackMonitoring/metricExtension:MetricExtension", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MetricExtension(java.lang.String name, Output<java.lang.String> id, @Nullable MetricExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:StackMonitoring/metricExtension:MetricExtension", name, state, makeResourceOptions(options, id), false);
    }

    private static MetricExtensionArgs makeArgs(MetricExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MetricExtensionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MetricExtension get(java.lang.String name, Output<java.lang.String> id, @Nullable MetricExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MetricExtension(name, id, state, options);
    }
}
