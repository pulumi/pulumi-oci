// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.StackMonitoring.MonitoredResourceArgs;
import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceState;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceAdditionalAlias;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceAdditionalCredential;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceAliases;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceCredentials;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceDatabaseConnectionDetails;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceProperty;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Monitored Resource resource in Oracle Cloud Infrastructure Stack Monitoring service.
 * 
 * Creates a new monitored resource for the given resource type with the details and submits
 * a work request for promoting the resource to agent. Once the resource is successfully
 * added to agent, resource state will be marked active.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.StackMonitoring.MonitoredResource;
 * import com.pulumi.oci.StackMonitoring.MonitoredResourceArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceAdditionalAliasArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceAdditionalAliasCredentialArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceAdditionalCredentialArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceAliasesArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceAliasesCredentialArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceCredentialsArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceDatabaseConnectionDetailsArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourcePropertyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMonitoredResource = new MonitoredResource("testMonitoredResource", MonitoredResourceArgs.builder()
 *             .compartmentId(compartmentId)
 *             .name(monitoredResourceName)
 *             .type(monitoredResourceType)
 *             .additionalAliases(MonitoredResourceAdditionalAliasArgs.builder()
 *                 .credential(MonitoredResourceAdditionalAliasCredentialArgs.builder()
 *                     .name(monitoredResourceAdditionalAliasesCredentialName)
 *                     .service(monitoredResourceAdditionalAliasesCredentialService)
 *                     .source(monitoredResourceAdditionalAliasesCredentialSource)
 *                     .build())
 *                 .name(monitoredResourceAdditionalAliasesName)
 *                 .source(monitoredResourceAdditionalAliasesSource)
 *                 .build())
 *             .additionalCredentials(MonitoredResourceAdditionalCredentialArgs.builder()
 *                 .credentialType(monitoredResourceAdditionalCredentialsCredentialType)
 *                 .description(monitoredResourceAdditionalCredentialsDescription)
 *                 .keyId(testKey.id())
 *                 .name(monitoredResourceAdditionalCredentialsName)
 *                 .properties(MonitoredResourceAdditionalCredentialPropertyArgs.builder()
 *                     .name(monitoredResourceAdditionalCredentialsPropertiesName)
 *                     .value(monitoredResourceAdditionalCredentialsPropertiesValue)
 *                     .build())
 *                 .source(monitoredResourceAdditionalCredentialsSource)
 *                 .type(monitoredResourceAdditionalCredentialsType)
 *                 .build())
 *             .aliases(MonitoredResourceAliasesArgs.builder()
 *                 .credential(MonitoredResourceAliasesCredentialArgs.builder()
 *                     .name(monitoredResourceAliasesCredentialName)
 *                     .service(monitoredResourceAliasesCredentialService)
 *                     .source(monitoredResourceAliasesCredentialSource)
 *                     .build())
 *                 .name(monitoredResourceAliasesName)
 *                 .source(monitoredResourceAliasesSource)
 *                 .build())
 *             .credentials(MonitoredResourceCredentialsArgs.builder()
 *                 .credentialType(monitoredResourceCredentialsCredentialType)
 *                 .description(monitoredResourceCredentialsDescription)
 *                 .keyId(monitoredResourceCredentialsKeyId)
 *                 .name(monitoredResourceCredentialsName)
 *                 .properties(MonitoredResourceCredentialsPropertyArgs.builder()
 *                     .name(monitoredResourceCredentialsPropertiesName)
 *                     .value(monitoredResourceCredentialsPropertiesValue)
 *                     .build())
 *                 .source(monitoredResourceCredentialsSource)
 *                 .type(monitoredResourceCredentialsType)
 *                 .build())
 *             .databaseConnectionDetails(MonitoredResourceDatabaseConnectionDetailsArgs.builder()
 *                 .port(monitoredResourceDatabaseConnectionDetailsPort)
 *                 .protocol(monitoredResourceDatabaseConnectionDetailsProtocol)
 *                 .serviceName(monitoredResourceDatabaseServiceName)
 *                 .connectorId(monitoredResourceDatabaseConnectorId)
 *                 .dbId(monitoredResourceDatabaseId)
 *                 .dbUniqueName(monitoredResourceDatabaseConnectionDetailsDbUniqueName)
 *                 .sslSecretId(testSecret.id())
 *                 .build())
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .displayName(monitoredResourceDisplayName)
 *             .externalResourceId(monitoredResourceExternalResourceId)
 *             .externalId(testExternal.id())
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .hostName(monitoredResourceHostName)
 *             .license(monitoredResourceLicense)
 *             .managementAgentId(testManagementAgent.id())
 *             .properties(MonitoredResourcePropertyArgs.builder()
 *                 .name(monitoredResourcePropertiesName)
 *                 .value(monitoredResourcePropertiesValue)
 *                 .build())
 *             .resourceTimeZone(monitoredResourceResourceTimeZone)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * MonitoredResources can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:StackMonitoring/monitoredResource:MonitoredResource test_monitored_resource &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:StackMonitoring/monitoredResource:MonitoredResource")
public class MonitoredResource extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  &#34;aliases&#34; property by allowing user to specify more than one credential alias.  If both &#34;aliases&#34; and &#34;additionalAliases&#34; are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of &#34;alias&#34; and &#34;additionalAliases&#34;,  an error will be thrown.
     * 
     */
    @Export(name="additionalAliases", refs={List.class,MonitoredResourceAdditionalAlias.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MonitoredResourceAdditionalAlias>> additionalAliases;

    /**
     * @return (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  &#34;aliases&#34; property by allowing user to specify more than one credential alias.  If both &#34;aliases&#34; and &#34;additionalAliases&#34; are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of &#34;alias&#34; and &#34;additionalAliases&#34;,  an error will be thrown.
     * 
     */
    public Output<Optional<List<MonitoredResourceAdditionalAlias>>> additionalAliases() {
        return Codegen.optional(this.additionalAliases);
    }
    /**
     * (Updatable) List of MonitoredResourceCredentials. This property complements the existing  &#34;credentials&#34; property by allowing user to specify more than one credential.  If both &#34;credential&#34; and &#34;additionalCredentials&#34; are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of &#34;credentials&#34; and &#34;additionalCredentials&#34;,  an error will be thrown.
     * 
     */
    @Export(name="additionalCredentials", refs={List.class,MonitoredResourceAdditionalCredential.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MonitoredResourceAdditionalCredential>> additionalCredentials;

    /**
     * @return (Updatable) List of MonitoredResourceCredentials. This property complements the existing  &#34;credentials&#34; property by allowing user to specify more than one credential.  If both &#34;credential&#34; and &#34;additionalCredentials&#34; are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of &#34;credentials&#34; and &#34;additionalCredentials&#34;,  an error will be thrown.
     * 
     */
    public Output<Optional<List<MonitoredResourceAdditionalCredential>>> additionalCredentials() {
        return Codegen.optional(this.additionalCredentials);
    }
    /**
     * (Updatable) Monitored Resource Alias Credential Details
     * 
     */
    @Export(name="aliases", refs={MonitoredResourceAliases.class}, tree="[0]")
    private Output</* @Nullable */ MonitoredResourceAliases> aliases;

    /**
     * @return (Updatable) Monitored Resource Alias Credential Details
     * 
     */
    public Output<Optional<MonitoredResourceAliases>> aliases() {
        return Codegen.optional(this.aliases);
    }
    /**
     * (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Monitored Resource Credential Details.
     * 
     */
    @Export(name="credentials", refs={MonitoredResourceCredentials.class}, tree="[0]")
    private Output</* @Nullable */ MonitoredResourceCredentials> credentials;

    /**
     * @return (Updatable) Monitored Resource Credential Details.
     * 
     */
    public Output<Optional<MonitoredResourceCredentials>> credentials() {
        return Codegen.optional(this.credentials);
    }
    /**
     * (Updatable) Connection details for the database.
     * 
     */
    @Export(name="databaseConnectionDetails", refs={MonitoredResourceDatabaseConnectionDetails.class}, tree="[0]")
    private Output</* @Nullable */ MonitoredResourceDatabaseConnectionDetails> databaseConnectionDetails;

    /**
     * @return (Updatable) Connection details for the database.
     * 
     */
    public Output<Optional<MonitoredResourceDatabaseConnectionDetails>> databaseConnectionDetails() {
        return Codegen.optional(this.databaseConnectionDetails);
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Monitored resource display name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return (Updatable) Monitored resource display name.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
     * 
     */
    @Export(name="externalId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalId;

    /**
     * @return External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
     * 
     */
    public Output<Optional<String>> externalId() {
        return Codegen.optional(this.externalId);
    }
    /**
     * Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
     * 
     */
    @Export(name="externalResourceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> externalResourceId;

    /**
     * @return Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
     * 
     */
    public Output<Optional<String>> externalResourceId() {
        return Codegen.optional(this.externalResourceId);
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) Host name of the monitored resource.
     * 
     */
    @Export(name="hostName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> hostName;

    /**
     * @return (Updatable) Host name of the monitored resource.
     * 
     */
    public Output<Optional<String>> hostName() {
        return Codegen.optional(this.hostName);
    }
    /**
     * (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
     * 
     */
    @Export(name="license", refs={String.class}, tree="[0]")
    private Output<String> license;

    /**
     * @return (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
     * 
     */
    public Output<String> license() {
        return this.license;
    }
    /**
     * Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Export(name="managementAgentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> managementAgentId;

    /**
     * @return Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<Optional<String>> managementAgentId() {
        return Codegen.optional(this.managementAgentId);
    }
    /**
     * Monitored Resource Name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Monitored Resource Name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Updatable) List of monitored resource properties.
     * 
     */
    @Export(name="properties", refs={List.class,MonitoredResourceProperty.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MonitoredResourceProperty>> properties;

    /**
     * @return (Updatable) List of monitored resource properties.
     * 
     */
    public Output<Optional<List<MonitoredResourceProperty>>> properties() {
        return Codegen.optional(this.properties);
    }
    /**
     * Resource Category to indicate the kind of resource type.
     * 
     */
    @Export(name="resourceCategory", refs={String.class}, tree="[0]")
    private Output<String> resourceCategory;

    /**
     * @return Resource Category to indicate the kind of resource type.
     * 
     */
    public Output<String> resourceCategory() {
        return this.resourceCategory;
    }
    /**
     * (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     * 
     */
    @Export(name="resourceTimeZone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourceTimeZone;

    /**
     * @return (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     * 
     */
    public Output<Optional<String>> resourceTimeZone() {
        return Codegen.optional(this.resourceTimeZone);
    }
    /**
     * Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     * 
     */
    @Export(name="sourceType", refs={String.class}, tree="[0]")
    private Output<String> sourceType;

    /**
     * @return Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     * 
     */
    public Output<String> sourceType() {
        return this.sourceType;
    }
    /**
     * Lifecycle state of the monitored resource.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,String>> systemTags() {
        return this.systemTags;
    }
    /**
     * Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }
    /**
     * The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * Monitored Resource Type.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Monitored Resource Type.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MonitoredResource(java.lang.String name) {
        this(name, MonitoredResourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MonitoredResource(java.lang.String name, MonitoredResourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MonitoredResource(java.lang.String name, MonitoredResourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:StackMonitoring/monitoredResource:MonitoredResource", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MonitoredResource(java.lang.String name, Output<java.lang.String> id, @Nullable MonitoredResourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:StackMonitoring/monitoredResource:MonitoredResource", name, state, makeResourceOptions(options, id), false);
    }

    private static MonitoredResourceArgs makeArgs(MonitoredResourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MonitoredResourceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MonitoredResource get(java.lang.String name, Output<java.lang.String> id, @Nullable MonitoredResourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MonitoredResource(name, id, state, options);
    }
}
