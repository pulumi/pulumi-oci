// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.StackMonitoring.MonitoringTemplateArgs;
import com.pulumi.oci.StackMonitoring.inputs.MonitoringTemplateState;
import com.pulumi.oci.StackMonitoring.outputs.MonitoringTemplateMember;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Monitoring Template resource in Oracle Cloud Infrastructure Stack Monitoring service.
 * 
 * Creates a new monitoring template for a given compartment.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.StackMonitoring.MonitoringTemplate;
 * import com.pulumi.oci.StackMonitoring.MonitoringTemplateArgs;
 * import com.pulumi.oci.StackMonitoring.inputs.MonitoringTemplateMemberArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMonitoringTemplate = new MonitoringTemplate("testMonitoringTemplate", MonitoringTemplateArgs.builder()
 *             .compartmentId(compartmentId)
 *             .destinations(monitoringTemplateDestinations)
 *             .displayName(monitoringTemplateDisplayName)
 *             .members(MonitoringTemplateMemberArgs.builder()
 *                 .id(monitoringTemplateMembersId)
 *                 .type(monitoringTemplateMembersType)
 *                 .compositeType(monitoringTemplateMembersCompositeType)
 *                 .build())
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .description(monitoringTemplateDescription)
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .isAlarmsEnabled(monitoringTemplateIsAlarmsEnabled)
 *             .isSplitNotificationEnabled(monitoringTemplateIsSplitNotificationEnabled)
 *             .messageFormat(monitoringTemplateMessageFormat)
 *             .repeatNotificationDuration(monitoringTemplateRepeatNotificationDuration)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * MonitoringTemplates can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:StackMonitoring/monitoringTemplate:MonitoringTemplate test_monitoring_template &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:StackMonitoring/monitoringTemplate:MonitoringTemplate")
public class MonitoringTemplate extends com.pulumi.resources.CustomResource {
    /**
     * The OCID of the compartment containing the monitoringTemplate.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment containing the monitoringTemplate.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
     * 
     */
    @Export(name="destinations", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> destinations;

    /**
     * @return (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
     * 
     */
    public Output<List<String>> destinations() {
        return this.destinations;
    }
    /**
     * (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
     * 
     */
    @Export(name="isAlarmsEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isAlarmsEnabled;

    /**
     * @return (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
     * 
     */
    public Output<Boolean> isAlarmsEnabled() {
        return this.isAlarmsEnabled;
    }
    /**
     * (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     * 
     */
    @Export(name="isSplitNotificationEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isSplitNotificationEnabled;

    /**
     * @return (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     * 
     */
    public Output<Boolean> isSplitNotificationEnabled() {
        return this.isSplitNotificationEnabled;
    }
    /**
     * (Updatable) List of members of this monitoring template
     * 
     */
    @Export(name="members", refs={List.class,MonitoringTemplateMember.class}, tree="[0,1]")
    private Output<List<MonitoringTemplateMember>> members;

    /**
     * @return (Updatable) List of members of this monitoring template
     * 
     */
    public Output<List<MonitoringTemplateMember>> members() {
        return this.members;
    }
    /**
     * (Updatable) The format to use for alarm notifications.
     * 
     */
    @Export(name="messageFormat", refs={String.class}, tree="[0]")
    private Output<String> messageFormat;

    /**
     * @return (Updatable) The format to use for alarm notifications.
     * 
     */
    public Output<String> messageFormat() {
        return this.messageFormat;
    }
    /**
     * (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="repeatNotificationDuration", refs={String.class}, tree="[0]")
    private Output<String> repeatNotificationDuration;

    /**
     * @return (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> repeatNotificationDuration() {
        return this.repeatNotificationDuration;
    }
    /**
     * The current lifecycle state of the monitoring template.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current lifecycle state of the monitoring template.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The current status of the monitoring template i.e. whether it is Applied or NotApplied.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The current status of the monitoring template i.e. whether it is Applied or NotApplied.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,String>> systemTags() {
        return this.systemTags;
    }
    /**
     * Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }
    /**
     * The date and time the monitoringTemplate was created. Format defined by RFC3339.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the monitoringTemplate was created. Format defined by RFC3339.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * Total Alarm Conditions
     * 
     */
    @Export(name="totalAlarmConditions", refs={Double.class}, tree="[0]")
    private Output<Double> totalAlarmConditions;

    /**
     * @return Total Alarm Conditions
     * 
     */
    public Output<Double> totalAlarmConditions() {
        return this.totalAlarmConditions;
    }
    /**
     * Total Applied Alarm Conditions
     * 
     */
    @Export(name="totalAppliedAlarmConditions", refs={Double.class}, tree="[0]")
    private Output<Double> totalAppliedAlarmConditions;

    /**
     * @return Total Applied Alarm Conditions
     * 
     */
    public Output<Double> totalAppliedAlarmConditions() {
        return this.totalAppliedAlarmConditions;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MonitoringTemplate(java.lang.String name) {
        this(name, MonitoringTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MonitoringTemplate(java.lang.String name, MonitoringTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MonitoringTemplate(java.lang.String name, MonitoringTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:StackMonitoring/monitoringTemplate:MonitoringTemplate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MonitoringTemplate(java.lang.String name, Output<java.lang.String> id, @Nullable MonitoringTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:StackMonitoring/monitoringTemplate:MonitoringTemplate", name, state, makeResourceOptions(options, id), false);
    }

    private static MonitoringTemplateArgs makeArgs(MonitoringTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MonitoringTemplateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MonitoringTemplate get(java.lang.String name, Output<java.lang.String> id, @Nullable MonitoringTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MonitoringTemplate(name, id, state, options);
    }
}
