// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.inputs.MonitoringTemplateAlarmConditionConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitoringTemplateAlarmConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoringTemplateAlarmConditionArgs Empty = new MonitoringTemplateAlarmConditionArgs();

    /**
     * (Updatable) The OCID of the composite resource type like EBS/PEOPLE_SOFT.
     * 
     */
    @Import(name="compositeType")
    private @Nullable Output<String> compositeType;

    /**
     * @return (Updatable) The OCID of the composite resource type like EBS/PEOPLE_SOFT.
     * 
     */
    public Optional<Output<String>> compositeType() {
        return Optional.ofNullable(this.compositeType);
    }

    /**
     * (Updatable) Type of defined monitoring template.
     * 
     */
    @Import(name="conditionType", required=true)
    private Output<String> conditionType;

    /**
     * @return (Updatable) Type of defined monitoring template.
     * 
     */
    public Output<String> conditionType() {
        return this.conditionType;
    }

    /**
     * (Updatable) Monitoring template conditions.
     * 
     */
    @Import(name="conditions", required=true)
    private Output<List<MonitoringTemplateAlarmConditionConditionArgs>> conditions;

    /**
     * @return (Updatable) Monitoring template conditions.
     * 
     */
    public Output<List<MonitoringTemplateAlarmConditionConditionArgs>> conditions() {
        return this.conditions;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The metric name.
     * 
     */
    @Import(name="metricName", required=true)
    private Output<String> metricName;

    /**
     * @return (Updatable) The metric name.
     * 
     */
    public Output<String> metricName() {
        return this.metricName;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     * 
     */
    @Import(name="monitoringTemplateId", required=true)
    private Output<String> monitoringTemplateId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     * 
     */
    public Output<String> monitoringTemplateId() {
        return this.monitoringTemplateId;
    }

    /**
     * (Updatable) The stack monitoring service or application emitting the metric that is evaluated by the alarm.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return (Updatable) The stack monitoring service or application emitting the metric that is evaluated by the alarm.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * (Updatable) The resource group OCID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return (Updatable) The resource group OCID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    private MonitoringTemplateAlarmConditionArgs() {}

    private MonitoringTemplateAlarmConditionArgs(MonitoringTemplateAlarmConditionArgs $) {
        this.compositeType = $.compositeType;
        this.conditionType = $.conditionType;
        this.conditions = $.conditions;
        this.definedTags = $.definedTags;
        this.freeformTags = $.freeformTags;
        this.metricName = $.metricName;
        this.monitoringTemplateId = $.monitoringTemplateId;
        this.namespace = $.namespace;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringTemplateAlarmConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringTemplateAlarmConditionArgs $;

        public Builder() {
            $ = new MonitoringTemplateAlarmConditionArgs();
        }

        public Builder(MonitoringTemplateAlarmConditionArgs defaults) {
            $ = new MonitoringTemplateAlarmConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compositeType (Updatable) The OCID of the composite resource type like EBS/PEOPLE_SOFT.
         * 
         * @return builder
         * 
         */
        public Builder compositeType(@Nullable Output<String> compositeType) {
            $.compositeType = compositeType;
            return this;
        }

        /**
         * @param compositeType (Updatable) The OCID of the composite resource type like EBS/PEOPLE_SOFT.
         * 
         * @return builder
         * 
         */
        public Builder compositeType(String compositeType) {
            return compositeType(Output.of(compositeType));
        }

        /**
         * @param conditionType (Updatable) Type of defined monitoring template.
         * 
         * @return builder
         * 
         */
        public Builder conditionType(Output<String> conditionType) {
            $.conditionType = conditionType;
            return this;
        }

        /**
         * @param conditionType (Updatable) Type of defined monitoring template.
         * 
         * @return builder
         * 
         */
        public Builder conditionType(String conditionType) {
            return conditionType(Output.of(conditionType));
        }

        /**
         * @param conditions (Updatable) Monitoring template conditions.
         * 
         * @return builder
         * 
         */
        public Builder conditions(Output<List<MonitoringTemplateAlarmConditionConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions (Updatable) Monitoring template conditions.
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<MonitoringTemplateAlarmConditionConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions (Updatable) Monitoring template conditions.
         * 
         * @return builder
         * 
         */
        public Builder conditions(MonitoringTemplateAlarmConditionConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param metricName (Updatable) The metric name.
         * 
         * @return builder
         * 
         */
        public Builder metricName(Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName (Updatable) The metric name.
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param monitoringTemplateId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
         * 
         * @return builder
         * 
         */
        public Builder monitoringTemplateId(Output<String> monitoringTemplateId) {
            $.monitoringTemplateId = monitoringTemplateId;
            return this;
        }

        /**
         * @param monitoringTemplateId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
         * 
         * @return builder
         * 
         */
        public Builder monitoringTemplateId(String monitoringTemplateId) {
            return monitoringTemplateId(Output.of(monitoringTemplateId));
        }

        /**
         * @param namespace (Updatable) The stack monitoring service or application emitting the metric that is evaluated by the alarm.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace (Updatable) The stack monitoring service or application emitting the metric that is evaluated by the alarm.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param resourceType (Updatable) The resource group OCID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType (Updatable) The resource group OCID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public MonitoringTemplateAlarmConditionArgs build() {
            if ($.conditionType == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateAlarmConditionArgs", "conditionType");
            }
            if ($.conditions == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateAlarmConditionArgs", "conditions");
            }
            if ($.metricName == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateAlarmConditionArgs", "metricName");
            }
            if ($.monitoringTemplateId == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateAlarmConditionArgs", "monitoringTemplateId");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateAlarmConditionArgs", "namespace");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateAlarmConditionArgs", "resourceType");
            }
            return $;
        }
    }

}
