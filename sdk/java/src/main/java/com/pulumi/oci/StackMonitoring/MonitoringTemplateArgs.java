// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.inputs.MonitoringTemplateMemberArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitoringTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoringTemplateArgs Empty = new MonitoringTemplateArgs();

    /**
     * The OCID of the compartment containing the monitoringTemplate.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment containing the monitoringTemplate.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
     * 
     */
    @Import(name="destinations", required=true)
    private Output<List<String>> destinations;

    /**
     * @return (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
     * 
     */
    public Output<List<String>> destinations() {
        return this.destinations;
    }

    /**
     * (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
     * 
     */
    @Import(name="isAlarmsEnabled")
    private @Nullable Output<Boolean> isAlarmsEnabled;

    /**
     * @return (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
     * 
     */
    public Optional<Output<Boolean>> isAlarmsEnabled() {
        return Optional.ofNullable(this.isAlarmsEnabled);
    }

    /**
     * (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     * 
     */
    @Import(name="isSplitNotificationEnabled")
    private @Nullable Output<Boolean> isSplitNotificationEnabled;

    /**
     * @return (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     * 
     */
    public Optional<Output<Boolean>> isSplitNotificationEnabled() {
        return Optional.ofNullable(this.isSplitNotificationEnabled);
    }

    /**
     * (Updatable) List of members of this monitoring template
     * 
     */
    @Import(name="members", required=true)
    private Output<List<MonitoringTemplateMemberArgs>> members;

    /**
     * @return (Updatable) List of members of this monitoring template
     * 
     */
    public Output<List<MonitoringTemplateMemberArgs>> members() {
        return this.members;
    }

    /**
     * (Updatable) The format to use for alarm notifications.
     * 
     */
    @Import(name="messageFormat")
    private @Nullable Output<String> messageFormat;

    /**
     * @return (Updatable) The format to use for alarm notifications.
     * 
     */
    public Optional<Output<String>> messageFormat() {
        return Optional.ofNullable(this.messageFormat);
    }

    /**
     * (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="repeatNotificationDuration")
    private @Nullable Output<String> repeatNotificationDuration;

    /**
     * @return (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> repeatNotificationDuration() {
        return Optional.ofNullable(this.repeatNotificationDuration);
    }

    private MonitoringTemplateArgs() {}

    private MonitoringTemplateArgs(MonitoringTemplateArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.destinations = $.destinations;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isAlarmsEnabled = $.isAlarmsEnabled;
        this.isSplitNotificationEnabled = $.isSplitNotificationEnabled;
        this.members = $.members;
        this.messageFormat = $.messageFormat;
        this.repeatNotificationDuration = $.repeatNotificationDuration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoringTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoringTemplateArgs $;

        public Builder() {
            $ = new MonitoringTemplateArgs();
        }

        public Builder(MonitoringTemplateArgs defaults) {
            $ = new MonitoringTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment containing the monitoringTemplate.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment containing the monitoringTemplate.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinations (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
         * 
         * @return builder
         * 
         */
        public Builder destinations(Output<List<String>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<String> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
         * 
         * @return builder
         * 
         */
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param displayName (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAlarmsEnabled (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
         * 
         * @return builder
         * 
         */
        public Builder isAlarmsEnabled(@Nullable Output<Boolean> isAlarmsEnabled) {
            $.isAlarmsEnabled = isAlarmsEnabled;
            return this;
        }

        /**
         * @param isAlarmsEnabled (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
         * 
         * @return builder
         * 
         */
        public Builder isAlarmsEnabled(Boolean isAlarmsEnabled) {
            return isAlarmsEnabled(Output.of(isAlarmsEnabled));
        }

        /**
         * @param isSplitNotificationEnabled (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
         * 
         * @return builder
         * 
         */
        public Builder isSplitNotificationEnabled(@Nullable Output<Boolean> isSplitNotificationEnabled) {
            $.isSplitNotificationEnabled = isSplitNotificationEnabled;
            return this;
        }

        /**
         * @param isSplitNotificationEnabled (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
         * 
         * @return builder
         * 
         */
        public Builder isSplitNotificationEnabled(Boolean isSplitNotificationEnabled) {
            return isSplitNotificationEnabled(Output.of(isSplitNotificationEnabled));
        }

        /**
         * @param members (Updatable) List of members of this monitoring template
         * 
         * @return builder
         * 
         */
        public Builder members(Output<List<MonitoringTemplateMemberArgs>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members (Updatable) List of members of this monitoring template
         * 
         * @return builder
         * 
         */
        public Builder members(List<MonitoringTemplateMemberArgs> members) {
            return members(Output.of(members));
        }

        /**
         * @param members (Updatable) List of members of this monitoring template
         * 
         * @return builder
         * 
         */
        public Builder members(MonitoringTemplateMemberArgs... members) {
            return members(List.of(members));
        }

        /**
         * @param messageFormat (Updatable) The format to use for alarm notifications.
         * 
         * @return builder
         * 
         */
        public Builder messageFormat(@Nullable Output<String> messageFormat) {
            $.messageFormat = messageFormat;
            return this;
        }

        /**
         * @param messageFormat (Updatable) The format to use for alarm notifications.
         * 
         * @return builder
         * 
         */
        public Builder messageFormat(String messageFormat) {
            return messageFormat(Output.of(messageFormat));
        }

        /**
         * @param repeatNotificationDuration (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder repeatNotificationDuration(@Nullable Output<String> repeatNotificationDuration) {
            $.repeatNotificationDuration = repeatNotificationDuration;
            return this;
        }

        /**
         * @param repeatNotificationDuration (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder repeatNotificationDuration(String repeatNotificationDuration) {
            return repeatNotificationDuration(Output.of(repeatNotificationDuration));
        }

        public MonitoringTemplateArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateArgs", "compartmentId");
            }
            if ($.destinations == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateArgs", "destinations");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateArgs", "displayName");
            }
            if ($.members == null) {
                throw new MissingRequiredPropertyException("MonitoringTemplateArgs", "members");
            }
            return $;
        }
    }

}
