// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.StackMonitoring.inputs.GetBaselineableMetricsEvaluateItemArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetBaselineableMetricsEvaluateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBaselineableMetricsEvaluateArgs Empty = new GetBaselineableMetricsEvaluateArgs();

    /**
     * Identifier for the metric
     * 
     */
    @Import(name="baselineableMetricId", required=true)
    private Output<String> baselineableMetricId;

    /**
     * @return Identifier for the metric
     * 
     */
    public Output<String> baselineableMetricId() {
        return this.baselineableMetricId;
    }

    /**
     * List of Metric data
     * 
     */
    @Import(name="items", required=true)
    private Output<List<GetBaselineableMetricsEvaluateItemArgs>> items;

    /**
     * @return List of Metric data
     * 
     */
    public Output<List<GetBaselineableMetricsEvaluateItemArgs>> items() {
        return this.items;
    }

    /**
     * OCID of the resource
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return OCID of the resource
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    private GetBaselineableMetricsEvaluateArgs() {}

    private GetBaselineableMetricsEvaluateArgs(GetBaselineableMetricsEvaluateArgs $) {
        this.baselineableMetricId = $.baselineableMetricId;
        this.items = $.items;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBaselineableMetricsEvaluateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBaselineableMetricsEvaluateArgs $;

        public Builder() {
            $ = new GetBaselineableMetricsEvaluateArgs();
        }

        public Builder(GetBaselineableMetricsEvaluateArgs defaults) {
            $ = new GetBaselineableMetricsEvaluateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baselineableMetricId Identifier for the metric
         * 
         * @return builder
         * 
         */
        public Builder baselineableMetricId(Output<String> baselineableMetricId) {
            $.baselineableMetricId = baselineableMetricId;
            return this;
        }

        /**
         * @param baselineableMetricId Identifier for the metric
         * 
         * @return builder
         * 
         */
        public Builder baselineableMetricId(String baselineableMetricId) {
            return baselineableMetricId(Output.of(baselineableMetricId));
        }

        /**
         * @param items List of Metric data
         * 
         * @return builder
         * 
         */
        public Builder items(Output<List<GetBaselineableMetricsEvaluateItemArgs>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items List of Metric data
         * 
         * @return builder
         * 
         */
        public Builder items(List<GetBaselineableMetricsEvaluateItemArgs> items) {
            return items(Output.of(items));
        }

        /**
         * @param items List of Metric data
         * 
         * @return builder
         * 
         */
        public Builder items(GetBaselineableMetricsEvaluateItemArgs... items) {
            return items(List.of(items));
        }

        /**
         * @param resourceId OCID of the resource
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId OCID of the resource
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public GetBaselineableMetricsEvaluateArgs build() {
            $.baselineableMetricId = Objects.requireNonNull($.baselineableMetricId, "expected parameter 'baselineableMetricId' to be non-null");
            $.items = Objects.requireNonNull($.items, "expected parameter 'items' to be non-null");
            $.resourceId = Objects.requireNonNull($.resourceId, "expected parameter 'resourceId' to be non-null");
            return $;
        }
    }

}
