// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.inputs.GetBaselineableMetricsEvaluateItemDataPointArgs;
import com.pulumi.oci.StackMonitoring.inputs.GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs;
import com.pulumi.oci.StackMonitoring.inputs.GetBaselineableMetricsEvaluateItemTrainingDataPointArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class GetBaselineableMetricsEvaluateItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetBaselineableMetricsEvaluateItemArgs Empty = new GetBaselineableMetricsEvaluateItemArgs();

    /**
     * list of anomaly data points for the metric
     * 
     */
    @Import(name="dataPoints", required=true)
    private Output<List<GetBaselineableMetricsEvaluateItemDataPointArgs>> dataPoints;

    /**
     * @return list of anomaly data points for the metric
     * 
     */
    public Output<List<GetBaselineableMetricsEvaluateItemDataPointArgs>> dataPoints() {
        return this.dataPoints;
    }

    /**
     * list of dimensions for the metric
     * 
     */
    @Import(name="dimensions", required=true)
    private Output<Map<String,String>> dimensions;

    /**
     * @return list of dimensions for the metric
     * 
     */
    public Output<Map<String,String>> dimensions() {
        return this.dimensions;
    }

    /**
     * list of data points for the metric for evaluation of anomalies
     * 
     */
    @Import(name="evaluationDataPoints", required=true)
    private Output<List<GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs>> evaluationDataPoints;

    /**
     * @return list of data points for the metric for evaluation of anomalies
     * 
     */
    public Output<List<GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs>> evaluationDataPoints() {
        return this.evaluationDataPoints;
    }

    /**
     * list of data points for the metric for training of baseline
     * 
     */
    @Import(name="trainingDataPoints", required=true)
    private Output<List<GetBaselineableMetricsEvaluateItemTrainingDataPointArgs>> trainingDataPoints;

    /**
     * @return list of data points for the metric for training of baseline
     * 
     */
    public Output<List<GetBaselineableMetricsEvaluateItemTrainingDataPointArgs>> trainingDataPoints() {
        return this.trainingDataPoints;
    }

    private GetBaselineableMetricsEvaluateItemArgs() {}

    private GetBaselineableMetricsEvaluateItemArgs(GetBaselineableMetricsEvaluateItemArgs $) {
        this.dataPoints = $.dataPoints;
        this.dimensions = $.dimensions;
        this.evaluationDataPoints = $.evaluationDataPoints;
        this.trainingDataPoints = $.trainingDataPoints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBaselineableMetricsEvaluateItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBaselineableMetricsEvaluateItemArgs $;

        public Builder() {
            $ = new GetBaselineableMetricsEvaluateItemArgs();
        }

        public Builder(GetBaselineableMetricsEvaluateItemArgs defaults) {
            $ = new GetBaselineableMetricsEvaluateItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataPoints list of anomaly data points for the metric
         * 
         * @return builder
         * 
         */
        public Builder dataPoints(Output<List<GetBaselineableMetricsEvaluateItemDataPointArgs>> dataPoints) {
            $.dataPoints = dataPoints;
            return this;
        }

        /**
         * @param dataPoints list of anomaly data points for the metric
         * 
         * @return builder
         * 
         */
        public Builder dataPoints(List<GetBaselineableMetricsEvaluateItemDataPointArgs> dataPoints) {
            return dataPoints(Output.of(dataPoints));
        }

        /**
         * @param dataPoints list of anomaly data points for the metric
         * 
         * @return builder
         * 
         */
        public Builder dataPoints(GetBaselineableMetricsEvaluateItemDataPointArgs... dataPoints) {
            return dataPoints(List.of(dataPoints));
        }

        /**
         * @param dimensions list of dimensions for the metric
         * 
         * @return builder
         * 
         */
        public Builder dimensions(Output<Map<String,String>> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        /**
         * @param dimensions list of dimensions for the metric
         * 
         * @return builder
         * 
         */
        public Builder dimensions(Map<String,String> dimensions) {
            return dimensions(Output.of(dimensions));
        }

        /**
         * @param evaluationDataPoints list of data points for the metric for evaluation of anomalies
         * 
         * @return builder
         * 
         */
        public Builder evaluationDataPoints(Output<List<GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs>> evaluationDataPoints) {
            $.evaluationDataPoints = evaluationDataPoints;
            return this;
        }

        /**
         * @param evaluationDataPoints list of data points for the metric for evaluation of anomalies
         * 
         * @return builder
         * 
         */
        public Builder evaluationDataPoints(List<GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs> evaluationDataPoints) {
            return evaluationDataPoints(Output.of(evaluationDataPoints));
        }

        /**
         * @param evaluationDataPoints list of data points for the metric for evaluation of anomalies
         * 
         * @return builder
         * 
         */
        public Builder evaluationDataPoints(GetBaselineableMetricsEvaluateItemEvaluationDataPointArgs... evaluationDataPoints) {
            return evaluationDataPoints(List.of(evaluationDataPoints));
        }

        /**
         * @param trainingDataPoints list of data points for the metric for training of baseline
         * 
         * @return builder
         * 
         */
        public Builder trainingDataPoints(Output<List<GetBaselineableMetricsEvaluateItemTrainingDataPointArgs>> trainingDataPoints) {
            $.trainingDataPoints = trainingDataPoints;
            return this;
        }

        /**
         * @param trainingDataPoints list of data points for the metric for training of baseline
         * 
         * @return builder
         * 
         */
        public Builder trainingDataPoints(List<GetBaselineableMetricsEvaluateItemTrainingDataPointArgs> trainingDataPoints) {
            return trainingDataPoints(Output.of(trainingDataPoints));
        }

        /**
         * @param trainingDataPoints list of data points for the metric for training of baseline
         * 
         * @return builder
         * 
         */
        public Builder trainingDataPoints(GetBaselineableMetricsEvaluateItemTrainingDataPointArgs... trainingDataPoints) {
            return trainingDataPoints(List.of(trainingDataPoints));
        }

        public GetBaselineableMetricsEvaluateItemArgs build() {
            if ($.dataPoints == null) {
                throw new MissingRequiredPropertyException("GetBaselineableMetricsEvaluateItemArgs", "dataPoints");
            }
            if ($.dimensions == null) {
                throw new MissingRequiredPropertyException("GetBaselineableMetricsEvaluateItemArgs", "dimensions");
            }
            if ($.evaluationDataPoints == null) {
                throw new MissingRequiredPropertyException("GetBaselineableMetricsEvaluateItemArgs", "evaluationDataPoints");
            }
            if ($.trainingDataPoints == null) {
                throw new MissingRequiredPropertyException("GetBaselineableMetricsEvaluateItemArgs", "trainingDataPoints");
            }
            return $;
        }
    }

}
