// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.StackMonitoring.inputs.GetBaselineableMetricsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBaselineableMetricsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBaselineableMetricsPlainArgs Empty = new GetBaselineableMetricsPlainArgs();

    /**
     * Identifier for the metric
     * 
     */
    @Import(name="baselineableMetricId")
    private @Nullable String baselineableMetricId;

    /**
     * @return Identifier for the metric
     * 
     */
    public Optional<String> baselineableMetricId() {
        return Optional.ofNullable(this.baselineableMetricId);
    }

    /**
     * The ID of the compartment in which data is listed.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The ID of the compartment in which data is listed.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable List<GetBaselineableMetricsFilter> filters;

    public Optional<List<GetBaselineableMetricsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Is the baseline enabled metric defined out of box by Oracle or by end-user
     * 
     */
    @Import(name="isOutOfBox")
    private @Nullable Boolean isOutOfBox;

    /**
     * @return Is the baseline enabled metric defined out of box by Oracle or by end-user
     * 
     */
    public Optional<Boolean> isOutOfBox() {
        return Optional.ofNullable(this.isOutOfBox);
    }

    /**
     * A filter to return monitored resource types that has the matching namespace.
     * 
     */
    @Import(name="metricNamespace")
    private @Nullable String metricNamespace;

    /**
     * @return A filter to return monitored resource types that has the matching namespace.
     * 
     */
    public Optional<String> metricNamespace() {
        return Optional.ofNullable(this.metricNamespace);
    }

    /**
     * Metric Name
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Metric Name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Resource Group
     * 
     */
    @Import(name="resourceGroup")
    private @Nullable String resourceGroup;

    /**
     * @return Resource Group
     * 
     */
    public Optional<String> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }

    /**
     * Resource Type
     * 
     */
    @Import(name="resourceType")
    private @Nullable String resourceType;

    /**
     * @return Resource Type
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    private GetBaselineableMetricsPlainArgs() {}

    private GetBaselineableMetricsPlainArgs(GetBaselineableMetricsPlainArgs $) {
        this.baselineableMetricId = $.baselineableMetricId;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.isOutOfBox = $.isOutOfBox;
        this.metricNamespace = $.metricNamespace;
        this.name = $.name;
        this.resourceGroup = $.resourceGroup;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBaselineableMetricsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBaselineableMetricsPlainArgs $;

        public Builder() {
            $ = new GetBaselineableMetricsPlainArgs();
        }

        public Builder(GetBaselineableMetricsPlainArgs defaults) {
            $ = new GetBaselineableMetricsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baselineableMetricId Identifier for the metric
         * 
         * @return builder
         * 
         */
        public Builder baselineableMetricId(@Nullable String baselineableMetricId) {
            $.baselineableMetricId = baselineableMetricId;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which data is listed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetBaselineableMetricsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetBaselineableMetricsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isOutOfBox Is the baseline enabled metric defined out of box by Oracle or by end-user
         * 
         * @return builder
         * 
         */
        public Builder isOutOfBox(@Nullable Boolean isOutOfBox) {
            $.isOutOfBox = isOutOfBox;
            return this;
        }

        /**
         * @param metricNamespace A filter to return monitored resource types that has the matching namespace.
         * 
         * @return builder
         * 
         */
        public Builder metricNamespace(@Nullable String metricNamespace) {
            $.metricNamespace = metricNamespace;
            return this;
        }

        /**
         * @param name Metric Name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param resourceGroup Resource Group
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(@Nullable String resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceType Resource Type
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public GetBaselineableMetricsPlainArgs build() {
            return $;
        }
    }

}
