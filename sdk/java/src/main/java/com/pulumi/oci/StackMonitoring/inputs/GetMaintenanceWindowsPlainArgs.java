// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.inputs.GetMaintenanceWindowsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMaintenanceWindowsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMaintenanceWindowsPlainArgs Empty = new GetMaintenanceWindowsPlainArgs();

    /**
     * The ID of the compartment in which data is listed.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which data is listed.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetMaintenanceWindowsFilter> filters;

    public Optional<List<GetMaintenanceWindowsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return maintenance windows with matching lifecycleDetails.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable String lifecycleDetails;

    /**
     * @return A filter to return maintenance windows with matching lifecycleDetails.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * A filter to return maintenance windows that match exact resource name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A filter to return maintenance windows that match exact resource name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return only maintenance windows with matching lifecycleState.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return A filter to return only maintenance windows with matching lifecycleState.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetMaintenanceWindowsPlainArgs() {}

    private GetMaintenanceWindowsPlainArgs(GetMaintenanceWindowsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.lifecycleDetails = $.lifecycleDetails;
        this.name = $.name;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMaintenanceWindowsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMaintenanceWindowsPlainArgs $;

        public Builder() {
            $ = new GetMaintenanceWindowsPlainArgs();
        }

        public Builder(GetMaintenanceWindowsPlainArgs defaults) {
            $ = new GetMaintenanceWindowsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which data is listed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetMaintenanceWindowsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetMaintenanceWindowsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param lifecycleDetails A filter to return maintenance windows with matching lifecycleDetails.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param name A filter to return maintenance windows that match exact resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param status A filter to return only maintenance windows with matching lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetMaintenanceWindowsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetMaintenanceWindowsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
