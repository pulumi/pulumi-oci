// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.StackMonitoring.inputs.GetMonitoredResourcesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMonitoredResourcesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMonitoredResourcesArgs Empty = new GetMonitoredResourcesArgs();

    /**
     * The ID of the compartment in which data is listed.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The ID of the compartment in which data is listed.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetMonitoredResourcesFilterArgs>> filters;

    public Optional<Output<List<GetMonitoredResourcesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return resources that match exact resource name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A filter to return resources that match exact resource name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return resources which were impacted as part of this work request identifier.
     * 
     */
    @Import(name="workRequestId")
    private @Nullable Output<String> workRequestId;

    /**
     * @return A filter to return resources which were impacted as part of this work request identifier.
     * 
     */
    public Optional<Output<String>> workRequestId() {
        return Optional.ofNullable(this.workRequestId);
    }

    private GetMonitoredResourcesArgs() {}

    private GetMonitoredResourcesArgs(GetMonitoredResourcesArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
        this.workRequestId = $.workRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMonitoredResourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMonitoredResourcesArgs $;

        public Builder() {
            $ = new GetMonitoredResourcesArgs();
        }

        public Builder(GetMonitoredResourcesArgs defaults) {
            $ = new GetMonitoredResourcesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which data is listed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which data is listed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetMonitoredResourcesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMonitoredResourcesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMonitoredResourcesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter to return resources that match exact resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter to return resources that match exact resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param workRequestId A filter to return resources which were impacted as part of this work request identifier.
         * 
         * @return builder
         * 
         */
        public Builder workRequestId(@Nullable Output<String> workRequestId) {
            $.workRequestId = workRequestId;
            return this;
        }

        /**
         * @param workRequestId A filter to return resources which were impacted as part of this work request identifier.
         * 
         * @return builder
         * 
         */
        public Builder workRequestId(String workRequestId) {
            return workRequestId(Output.of(workRequestId));
        }

        public GetMonitoredResourcesArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
