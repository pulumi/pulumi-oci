// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.inputs.GetMonitoredResourcesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMonitoredResourcesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMonitoredResourcesPlainArgs Empty = new GetMonitoredResourcesPlainArgs();

    /**
     * The ID of the compartment in which data is listed.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which data is listed.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetMonitoredResourcesFilter> filters;

    public Optional<List<GetMonitoredResourcesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return resources that match exact resource name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A filter to return resources that match exact resource name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return only resources with matching lifecycleState.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return A filter to return only resources with matching lifecycleState.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A filter to return resources which were impacted as part of this work request identifier.
     * 
     */
    @Import(name="workRequestId")
    private @Nullable String workRequestId;

    /**
     * @return A filter to return resources which were impacted as part of this work request identifier.
     * 
     */
    public Optional<String> workRequestId() {
        return Optional.ofNullable(this.workRequestId);
    }

    private GetMonitoredResourcesPlainArgs() {}

    private GetMonitoredResourcesPlainArgs(GetMonitoredResourcesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
        this.status = $.status;
        this.workRequestId = $.workRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMonitoredResourcesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMonitoredResourcesPlainArgs $;

        public Builder() {
            $ = new GetMonitoredResourcesPlainArgs();
        }

        public Builder(GetMonitoredResourcesPlainArgs defaults) {
            $ = new GetMonitoredResourcesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which data is listed.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetMonitoredResourcesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetMonitoredResourcesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter to return resources that match exact resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param status A filter to return only resources with matching lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        /**
         * @param workRequestId A filter to return resources which were impacted as part of this work request identifier.
         * 
         * @return builder
         * 
         */
        public Builder workRequestId(@Nullable String workRequestId) {
            $.workRequestId = workRequestId;
            return this;
        }

        public GetMonitoredResourcesPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetMonitoredResourcesPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
