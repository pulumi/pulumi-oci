// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.inputs.GetMonitoringTemplateAlarmConditionsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMonitoringTemplateAlarmConditionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMonitoringTemplateAlarmConditionsArgs Empty = new GetMonitoringTemplateAlarmConditionsArgs();

    @Import(name="alarmConditionId", required=true)
    private Output<String> alarmConditionId;

    public Output<String> alarmConditionId() {
        return this.alarmConditionId;
    }

    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetMonitoringTemplateAlarmConditionsFilterArgs>> filters;

    public Optional<Output<List<GetMonitoringTemplateAlarmConditionsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * metricName filter.
     * 
     */
    @Import(name="metricNames")
    private @Nullable Output<List<String>> metricNames;

    /**
     * @return metricName filter.
     * 
     */
    public Optional<Output<List<String>>> metricNames() {
        return Optional.ofNullable(this.metricNames);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     * 
     */
    @Import(name="monitoringTemplateId", required=true)
    private Output<String> monitoringTemplateId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     * 
     */
    public Output<String> monitoringTemplateId() {
        return this.monitoringTemplateId;
    }

    /**
     * Multiple resource types filter.
     * 
     */
    @Import(name="resourceTypes")
    private @Nullable Output<List<String>> resourceTypes;

    /**
     * @return Multiple resource types filter.
     * 
     */
    public Optional<Output<List<String>>> resourceTypes() {
        return Optional.ofNullable(this.resourceTypes);
    }

    /**
     * A filter to return alarm condition based on Lifecycle State.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return alarm condition based on Lifecycle State.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return alarm condition based on input status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return A filter to return alarm condition based on input status.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetMonitoringTemplateAlarmConditionsArgs() {}

    private GetMonitoringTemplateAlarmConditionsArgs(GetMonitoringTemplateAlarmConditionsArgs $) {
        this.alarmConditionId = $.alarmConditionId;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.metricNames = $.metricNames;
        this.monitoringTemplateId = $.monitoringTemplateId;
        this.resourceTypes = $.resourceTypes;
        this.state = $.state;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMonitoringTemplateAlarmConditionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMonitoringTemplateAlarmConditionsArgs $;

        public Builder() {
            $ = new GetMonitoringTemplateAlarmConditionsArgs();
        }

        public Builder(GetMonitoringTemplateAlarmConditionsArgs defaults) {
            $ = new GetMonitoringTemplateAlarmConditionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder alarmConditionId(Output<String> alarmConditionId) {
            $.alarmConditionId = alarmConditionId;
            return this;
        }

        public Builder alarmConditionId(String alarmConditionId) {
            return alarmConditionId(Output.of(alarmConditionId));
        }

        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetMonitoringTemplateAlarmConditionsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMonitoringTemplateAlarmConditionsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMonitoringTemplateAlarmConditionsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param metricNames metricName filter.
         * 
         * @return builder
         * 
         */
        public Builder metricNames(@Nullable Output<List<String>> metricNames) {
            $.metricNames = metricNames;
            return this;
        }

        /**
         * @param metricNames metricName filter.
         * 
         * @return builder
         * 
         */
        public Builder metricNames(List<String> metricNames) {
            return metricNames(Output.of(metricNames));
        }

        /**
         * @param metricNames metricName filter.
         * 
         * @return builder
         * 
         */
        public Builder metricNames(String... metricNames) {
            return metricNames(List.of(metricNames));
        }

        /**
         * @param monitoringTemplateId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
         * 
         * @return builder
         * 
         */
        public Builder monitoringTemplateId(Output<String> monitoringTemplateId) {
            $.monitoringTemplateId = monitoringTemplateId;
            return this;
        }

        /**
         * @param monitoringTemplateId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
         * 
         * @return builder
         * 
         */
        public Builder monitoringTemplateId(String monitoringTemplateId) {
            return monitoringTemplateId(Output.of(monitoringTemplateId));
        }

        /**
         * @param resourceTypes Multiple resource types filter.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(@Nullable Output<List<String>> resourceTypes) {
            $.resourceTypes = resourceTypes;
            return this;
        }

        /**
         * @param resourceTypes Multiple resource types filter.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(List<String> resourceTypes) {
            return resourceTypes(Output.of(resourceTypes));
        }

        /**
         * @param resourceTypes Multiple resource types filter.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }

        /**
         * @param state A filter to return alarm condition based on Lifecycle State.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return alarm condition based on Lifecycle State.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status A filter to return alarm condition based on input status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status A filter to return alarm condition based on input status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetMonitoringTemplateAlarmConditionsArgs build() {
            if ($.alarmConditionId == null) {
                throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsArgs", "alarmConditionId");
            }
            if ($.monitoringTemplateId == null) {
                throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsArgs", "monitoringTemplateId");
            }
            return $;
        }
    }

}
