// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.inputs.GetMonitoringTemplateAlarmConditionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMonitoringTemplateAlarmConditionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMonitoringTemplateAlarmConditionsPlainArgs Empty = new GetMonitoringTemplateAlarmConditionsPlainArgs();

    @Import(name="alarmConditionId", required=true)
    private String alarmConditionId;

    public String alarmConditionId() {
        return this.alarmConditionId;
    }

    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable List<GetMonitoringTemplateAlarmConditionsFilter> filters;

    public Optional<List<GetMonitoringTemplateAlarmConditionsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * metricName filter.
     * 
     */
    @Import(name="metricNames")
    private @Nullable List<String> metricNames;

    /**
     * @return metricName filter.
     * 
     */
    public Optional<List<String>> metricNames() {
        return Optional.ofNullable(this.metricNames);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     * 
     */
    @Import(name="monitoringTemplateId", required=true)
    private String monitoringTemplateId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     * 
     */
    public String monitoringTemplateId() {
        return this.monitoringTemplateId;
    }

    /**
     * Multiple resource types filter.
     * 
     */
    @Import(name="resourceTypes")
    private @Nullable List<String> resourceTypes;

    /**
     * @return Multiple resource types filter.
     * 
     */
    public Optional<List<String>> resourceTypes() {
        return Optional.ofNullable(this.resourceTypes);
    }

    /**
     * A filter to return alarm condition based on Lifecycle State.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return alarm condition based on Lifecycle State.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return alarm condition based on input status.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return A filter to return alarm condition based on input status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetMonitoringTemplateAlarmConditionsPlainArgs() {}

    private GetMonitoringTemplateAlarmConditionsPlainArgs(GetMonitoringTemplateAlarmConditionsPlainArgs $) {
        this.alarmConditionId = $.alarmConditionId;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.metricNames = $.metricNames;
        this.monitoringTemplateId = $.monitoringTemplateId;
        this.resourceTypes = $.resourceTypes;
        this.state = $.state;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMonitoringTemplateAlarmConditionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMonitoringTemplateAlarmConditionsPlainArgs $;

        public Builder() {
            $ = new GetMonitoringTemplateAlarmConditionsPlainArgs();
        }

        public Builder(GetMonitoringTemplateAlarmConditionsPlainArgs defaults) {
            $ = new GetMonitoringTemplateAlarmConditionsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder alarmConditionId(String alarmConditionId) {
            $.alarmConditionId = alarmConditionId;
            return this;
        }

        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetMonitoringTemplateAlarmConditionsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetMonitoringTemplateAlarmConditionsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param metricNames metricName filter.
         * 
         * @return builder
         * 
         */
        public Builder metricNames(@Nullable List<String> metricNames) {
            $.metricNames = metricNames;
            return this;
        }

        /**
         * @param metricNames metricName filter.
         * 
         * @return builder
         * 
         */
        public Builder metricNames(String... metricNames) {
            return metricNames(List.of(metricNames));
        }

        /**
         * @param monitoringTemplateId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
         * 
         * @return builder
         * 
         */
        public Builder monitoringTemplateId(String monitoringTemplateId) {
            $.monitoringTemplateId = monitoringTemplateId;
            return this;
        }

        /**
         * @param resourceTypes Multiple resource types filter.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(@Nullable List<String> resourceTypes) {
            $.resourceTypes = resourceTypes;
            return this;
        }

        /**
         * @param resourceTypes Multiple resource types filter.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }

        /**
         * @param state A filter to return alarm condition based on Lifecycle State.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param status A filter to return alarm condition based on input status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetMonitoringTemplateAlarmConditionsPlainArgs build() {
            if ($.alarmConditionId == null) {
                throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsPlainArgs", "alarmConditionId");
            }
            if ($.monitoringTemplateId == null) {
                throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsPlainArgs", "monitoringTemplateId");
            }
            return $;
        }
    }

}
