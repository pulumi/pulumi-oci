// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MaintenanceWindowScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final MaintenanceWindowScheduleArgs Empty = new MaintenanceWindowScheduleArgs();

    /**
     * (Updatable) Duration time of each recurrence of each Maintenance Window. It must be specified as a string in ISO 8601 extended format.
     * 
     */
    @Import(name="maintenanceWindowDuration")
    private @Nullable Output<String> maintenanceWindowDuration;

    /**
     * @return (Updatable) Duration time of each recurrence of each Maintenance Window. It must be specified as a string in ISO 8601 extended format.
     * 
     */
    public Optional<Output<String>> maintenanceWindowDuration() {
        return Optional.ofNullable(this.maintenanceWindowDuration);
    }

    /**
     * (Updatable) A RFC5545 formatted recurrence string which represents the Maintenance Window Recurrence. Please refer this for details:https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 FREQ: Frequency of the Maintenance Window. The supported values are: DAILY and WEEKLY. BYDAY: Comma separated days for Weekly Maintenance Window. BYHOUR: Specifies the start hour of each recurrence after `timeMaintenanceWindowStart` value. BYMINUTE: Specifies the start minute of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 BYSECOND: Specifies the start second of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 Other Rules are not supported.
     * 
     */
    @Import(name="maintenanceWindowRecurrences")
    private @Nullable Output<String> maintenanceWindowRecurrences;

    /**
     * @return (Updatable) A RFC5545 formatted recurrence string which represents the Maintenance Window Recurrence. Please refer this for details:https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 FREQ: Frequency of the Maintenance Window. The supported values are: DAILY and WEEKLY. BYDAY: Comma separated days for Weekly Maintenance Window. BYHOUR: Specifies the start hour of each recurrence after `timeMaintenanceWindowStart` value. BYMINUTE: Specifies the start minute of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 BYSECOND: Specifies the start second of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 Other Rules are not supported.
     * 
     */
    public Optional<Output<String>> maintenanceWindowRecurrences() {
        return Optional.ofNullable(this.maintenanceWindowRecurrences);
    }

    /**
     * (Updatable) Property to identify the type of the Maintenance Window.
     * 
     */
    @Import(name="scheduleType", required=true)
    private Output<String> scheduleType;

    /**
     * @return (Updatable) Property to identify the type of the Maintenance Window.
     * 
     */
    public Output<String> scheduleType() {
        return this.scheduleType;
    }

    /**
     * (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeMaintenanceWindowEnd")
    private @Nullable Output<String> timeMaintenanceWindowEnd;

    /**
     * @return (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeMaintenanceWindowEnd() {
        return Optional.ofNullable(this.timeMaintenanceWindowEnd);
    }

    /**
     * (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeMaintenanceWindowStart")
    private @Nullable Output<String> timeMaintenanceWindowStart;

    /**
     * @return (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> timeMaintenanceWindowStart() {
        return Optional.ofNullable(this.timeMaintenanceWindowStart);
    }

    private MaintenanceWindowScheduleArgs() {}

    private MaintenanceWindowScheduleArgs(MaintenanceWindowScheduleArgs $) {
        this.maintenanceWindowDuration = $.maintenanceWindowDuration;
        this.maintenanceWindowRecurrences = $.maintenanceWindowRecurrences;
        this.scheduleType = $.scheduleType;
        this.timeMaintenanceWindowEnd = $.timeMaintenanceWindowEnd;
        this.timeMaintenanceWindowStart = $.timeMaintenanceWindowStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceWindowScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceWindowScheduleArgs $;

        public Builder() {
            $ = new MaintenanceWindowScheduleArgs();
        }

        public Builder(MaintenanceWindowScheduleArgs defaults) {
            $ = new MaintenanceWindowScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maintenanceWindowDuration (Updatable) Duration time of each recurrence of each Maintenance Window. It must be specified as a string in ISO 8601 extended format.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowDuration(@Nullable Output<String> maintenanceWindowDuration) {
            $.maintenanceWindowDuration = maintenanceWindowDuration;
            return this;
        }

        /**
         * @param maintenanceWindowDuration (Updatable) Duration time of each recurrence of each Maintenance Window. It must be specified as a string in ISO 8601 extended format.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowDuration(String maintenanceWindowDuration) {
            return maintenanceWindowDuration(Output.of(maintenanceWindowDuration));
        }

        /**
         * @param maintenanceWindowRecurrences (Updatable) A RFC5545 formatted recurrence string which represents the Maintenance Window Recurrence. Please refer this for details:https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 FREQ: Frequency of the Maintenance Window. The supported values are: DAILY and WEEKLY. BYDAY: Comma separated days for Weekly Maintenance Window. BYHOUR: Specifies the start hour of each recurrence after `timeMaintenanceWindowStart` value. BYMINUTE: Specifies the start minute of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 BYSECOND: Specifies the start second of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 Other Rules are not supported.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowRecurrences(@Nullable Output<String> maintenanceWindowRecurrences) {
            $.maintenanceWindowRecurrences = maintenanceWindowRecurrences;
            return this;
        }

        /**
         * @param maintenanceWindowRecurrences (Updatable) A RFC5545 formatted recurrence string which represents the Maintenance Window Recurrence. Please refer this for details:https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 FREQ: Frequency of the Maintenance Window. The supported values are: DAILY and WEEKLY. BYDAY: Comma separated days for Weekly Maintenance Window. BYHOUR: Specifies the start hour of each recurrence after `timeMaintenanceWindowStart` value. BYMINUTE: Specifies the start minute of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 BYSECOND: Specifies the start second of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 Other Rules are not supported.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowRecurrences(String maintenanceWindowRecurrences) {
            return maintenanceWindowRecurrences(Output.of(maintenanceWindowRecurrences));
        }

        /**
         * @param scheduleType (Updatable) Property to identify the type of the Maintenance Window.
         * 
         * @return builder
         * 
         */
        public Builder scheduleType(Output<String> scheduleType) {
            $.scheduleType = scheduleType;
            return this;
        }

        /**
         * @param scheduleType (Updatable) Property to identify the type of the Maintenance Window.
         * 
         * @return builder
         * 
         */
        public Builder scheduleType(String scheduleType) {
            return scheduleType(Output.of(scheduleType));
        }

        /**
         * @param timeMaintenanceWindowEnd (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceWindowEnd(@Nullable Output<String> timeMaintenanceWindowEnd) {
            $.timeMaintenanceWindowEnd = timeMaintenanceWindowEnd;
            return this;
        }

        /**
         * @param timeMaintenanceWindowEnd (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceWindowEnd(String timeMaintenanceWindowEnd) {
            return timeMaintenanceWindowEnd(Output.of(timeMaintenanceWindowEnd));
        }

        /**
         * @param timeMaintenanceWindowStart (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceWindowStart(@Nullable Output<String> timeMaintenanceWindowStart) {
            $.timeMaintenanceWindowStart = timeMaintenanceWindowStart;
            return this;
        }

        /**
         * @param timeMaintenanceWindowStart (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeMaintenanceWindowStart(String timeMaintenanceWindowStart) {
            return timeMaintenanceWindowStart(Output.of(timeMaintenanceWindowStart));
        }

        public MaintenanceWindowScheduleArgs build() {
            if ($.scheduleType == null) {
                throw new MissingRequiredPropertyException("MaintenanceWindowScheduleArgs", "scheduleType");
            }
            return $;
        }
    }

}
