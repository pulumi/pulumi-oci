// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class MetricExtensionQueryPropertiesInParamDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricExtensionQueryPropertiesInParamDetailArgs Empty = new MetricExtensionQueryPropertiesInParamDetailArgs();

    /**
     * (Updatable) Position of IN parameter
     * 
     */
    @Import(name="inParamPosition", required=true)
    private Output<Integer> inParamPosition;

    /**
     * @return (Updatable) Position of IN parameter
     * 
     */
    public Output<Integer> inParamPosition() {
        return this.inParamPosition;
    }

    /**
     * (Updatable) Value of IN parameter
     * 
     */
    @Import(name="inParamValue", required=true)
    private Output<String> inParamValue;

    /**
     * @return (Updatable) Value of IN parameter
     * 
     */
    public Output<String> inParamValue() {
        return this.inParamValue;
    }

    private MetricExtensionQueryPropertiesInParamDetailArgs() {}

    private MetricExtensionQueryPropertiesInParamDetailArgs(MetricExtensionQueryPropertiesInParamDetailArgs $) {
        this.inParamPosition = $.inParamPosition;
        this.inParamValue = $.inParamValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricExtensionQueryPropertiesInParamDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricExtensionQueryPropertiesInParamDetailArgs $;

        public Builder() {
            $ = new MetricExtensionQueryPropertiesInParamDetailArgs();
        }

        public Builder(MetricExtensionQueryPropertiesInParamDetailArgs defaults) {
            $ = new MetricExtensionQueryPropertiesInParamDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inParamPosition (Updatable) Position of IN parameter
         * 
         * @return builder
         * 
         */
        public Builder inParamPosition(Output<Integer> inParamPosition) {
            $.inParamPosition = inParamPosition;
            return this;
        }

        /**
         * @param inParamPosition (Updatable) Position of IN parameter
         * 
         * @return builder
         * 
         */
        public Builder inParamPosition(Integer inParamPosition) {
            return inParamPosition(Output.of(inParamPosition));
        }

        /**
         * @param inParamValue (Updatable) Value of IN parameter
         * 
         * @return builder
         * 
         */
        public Builder inParamValue(Output<String> inParamValue) {
            $.inParamValue = inParamValue;
            return this;
        }

        /**
         * @param inParamValue (Updatable) Value of IN parameter
         * 
         * @return builder
         * 
         */
        public Builder inParamValue(String inParamValue) {
            return inParamValue(Output.of(inParamValue));
        }

        public MetricExtensionQueryPropertiesInParamDetailArgs build() {
            if ($.inParamPosition == null) {
                throw new MissingRequiredPropertyException("MetricExtensionQueryPropertiesInParamDetailArgs", "inParamPosition");
            }
            if ($.inParamValue == null) {
                throw new MissingRequiredPropertyException("MetricExtensionQueryPropertiesInParamDetailArgs", "inParamValue");
            }
            return $;
        }
    }

}
