// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionEnabledOnResourceArgs;
import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionMetricListArgs;
import com.pulumi.oci.StackMonitoring.inputs.MetricExtensionQueryPropertiesArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricExtensionState extends com.pulumi.resources.ResourceArgs {

    public static final MetricExtensionState Empty = new MetricExtensionState();

    /**
     * Type of possible collection methods.
     * 
     */
    @Import(name="collectionMethod")
    private @Nullable Output<String> collectionMethod;

    /**
     * @return Type of possible collection methods.
     * 
     */
    public Optional<Output<String>> collectionMethod() {
        return Optional.ofNullable(this.collectionMethod);
    }

    /**
     * (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = &#34;FREQ&#34;;INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are &#34;MINUTELY&#34;,&#34;HOURLY&#34;,&#34;DAILY&#34; to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
     * 
     */
    @Import(name="collectionRecurrences")
    private @Nullable Output<String> collectionRecurrences;

    /**
     * @return (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = &#34;FREQ&#34;;INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are &#34;MINUTELY&#34;,&#34;HOURLY&#34;,&#34;DAILY&#34; to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
     * 
     */
    public Optional<Output<String>> collectionRecurrences() {
        return Optional.ofNullable(this.collectionRecurrences);
    }

    /**
     * (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Created by user
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return Created by user
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * (Updatable) Description of the metric extension.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of the metric extension.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Metric Extension display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Metric Extension display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * List of resource details objects having resourceIds on which this metric extension is enabled.
     * 
     */
    @Import(name="enabledOnResources")
    private @Nullable Output<List<MetricExtensionEnabledOnResourceArgs>> enabledOnResources;

    /**
     * @return List of resource details objects having resourceIds on which this metric extension is enabled.
     * 
     */
    public Optional<Output<List<MetricExtensionEnabledOnResourceArgs>>> enabledOnResources() {
        return Optional.ofNullable(this.enabledOnResources);
    }

    /**
     * Count of resources on which this metric extension is enabled.
     * 
     */
    @Import(name="enabledOnResourcesCount")
    private @Nullable Output<Integer> enabledOnResourcesCount;

    /**
     * @return Count of resources on which this metric extension is enabled.
     * 
     */
    public Optional<Output<Integer>> enabledOnResourcesCount() {
        return Optional.ofNullable(this.enabledOnResourcesCount);
    }

    /**
     * Last updated by user
     * 
     */
    @Import(name="lastUpdatedBy")
    private @Nullable Output<String> lastUpdatedBy;

    /**
     * @return Last updated by user
     * 
     */
    public Optional<Output<String>> lastUpdatedBy() {
        return Optional.ofNullable(this.lastUpdatedBy);
    }

    /**
     * (Updatable) List of metrics which are part of this metric extension
     * 
     */
    @Import(name="metricLists")
    private @Nullable Output<List<MetricExtensionMetricListArgs>> metricLists;

    /**
     * @return (Updatable) List of metrics which are part of this metric extension
     * 
     */
    public Optional<Output<List<MetricExtensionMetricListArgs>>> metricLists() {
        return Optional.ofNullable(this.metricLists);
    }

    /**
     * Metric Extension Resource name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Metric Extension Resource name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publishTrigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publishTrigger is updated to `true`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="publishTrigger")
    private @Nullable Output<Boolean> publishTrigger;

    /**
     * @return (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publishTrigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publishTrigger is updated to `true`.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Boolean>> publishTrigger() {
        return Optional.ofNullable(this.publishTrigger);
    }

    /**
     * (Updatable) Collection method and query properties details of metric extension
     * 
     */
    @Import(name="queryProperties")
    private @Nullable Output<MetricExtensionQueryPropertiesArgs> queryProperties;

    /**
     * @return (Updatable) Collection method and query properties details of metric extension
     * 
     */
    public Optional<Output<MetricExtensionQueryPropertiesArgs>> queryProperties() {
        return Optional.ofNullable(this.queryProperties);
    }

    /**
     * Resource type to which Metric Extension applies
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return Resource type to which Metric Extension applies
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * The URI path that the user can do a GET on to access the metric extension metadata
     * 
     */
    @Import(name="resourceUri")
    private @Nullable Output<String> resourceUri;

    /**
     * @return The URI path that the user can do a GET on to access the metric extension metadata
     * 
     */
    public Optional<Output<String>> resourceUri() {
        return Optional.ofNullable(this.resourceUri);
    }

    /**
     * The current lifecycle state of the metric extension
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current lifecycle state of the metric extension
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The current status of the metric extension i.e. whether it is Draft or Published
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current status of the metric extension i.e. whether it is Draft or Published
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * Metric Extension creation time. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return Metric Extension creation time. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Metric Extension update time. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return Metric Extension update time. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private MetricExtensionState() {}

    private MetricExtensionState(MetricExtensionState $) {
        this.collectionMethod = $.collectionMethod;
        this.collectionRecurrences = $.collectionRecurrences;
        this.compartmentId = $.compartmentId;
        this.createdBy = $.createdBy;
        this.description = $.description;
        this.displayName = $.displayName;
        this.enabledOnResources = $.enabledOnResources;
        this.enabledOnResourcesCount = $.enabledOnResourcesCount;
        this.lastUpdatedBy = $.lastUpdatedBy;
        this.metricLists = $.metricLists;
        this.name = $.name;
        this.publishTrigger = $.publishTrigger;
        this.queryProperties = $.queryProperties;
        this.resourceType = $.resourceType;
        this.resourceUri = $.resourceUri;
        this.state = $.state;
        this.status = $.status;
        this.tenantId = $.tenantId;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricExtensionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricExtensionState $;

        public Builder() {
            $ = new MetricExtensionState();
        }

        public Builder(MetricExtensionState defaults) {
            $ = new MetricExtensionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param collectionMethod Type of possible collection methods.
         * 
         * @return builder
         * 
         */
        public Builder collectionMethod(@Nullable Output<String> collectionMethod) {
            $.collectionMethod = collectionMethod;
            return this;
        }

        /**
         * @param collectionMethod Type of possible collection methods.
         * 
         * @return builder
         * 
         */
        public Builder collectionMethod(String collectionMethod) {
            return collectionMethod(Output.of(collectionMethod));
        }

        /**
         * @param collectionRecurrences (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = &#34;FREQ&#34;;INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are &#34;MINUTELY&#34;,&#34;HOURLY&#34;,&#34;DAILY&#34; to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
         * 
         * @return builder
         * 
         */
        public Builder collectionRecurrences(@Nullable Output<String> collectionRecurrences) {
            $.collectionRecurrences = collectionRecurrences;
            return this;
        }

        /**
         * @param collectionRecurrences (Updatable) Schedule of metric extension should use RFC 5545 format i.e. recur-rule-part = &#34;FREQ&#34;;INTERVAL where FREQ rule part identifies the type of recurrence rule. Valid values are &#34;MINUTELY&#34;,&#34;HOURLY&#34;,&#34;DAILY&#34; to specify repeating events based on an interval of a minute, an hour and a day or more. Example- FREQ=DAILY;INTERVAL=1
         * 
         * @return builder
         * 
         */
        public Builder collectionRecurrences(String collectionRecurrences) {
            return collectionRecurrences(Output.of(collectionRecurrences));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param createdBy Created by user
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy Created by user
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param description (Updatable) Description of the metric extension.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of the metric extension.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) Metric Extension display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Metric Extension display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enabledOnResources List of resource details objects having resourceIds on which this metric extension is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabledOnResources(@Nullable Output<List<MetricExtensionEnabledOnResourceArgs>> enabledOnResources) {
            $.enabledOnResources = enabledOnResources;
            return this;
        }

        /**
         * @param enabledOnResources List of resource details objects having resourceIds on which this metric extension is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabledOnResources(List<MetricExtensionEnabledOnResourceArgs> enabledOnResources) {
            return enabledOnResources(Output.of(enabledOnResources));
        }

        /**
         * @param enabledOnResources List of resource details objects having resourceIds on which this metric extension is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabledOnResources(MetricExtensionEnabledOnResourceArgs... enabledOnResources) {
            return enabledOnResources(List.of(enabledOnResources));
        }

        /**
         * @param enabledOnResourcesCount Count of resources on which this metric extension is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabledOnResourcesCount(@Nullable Output<Integer> enabledOnResourcesCount) {
            $.enabledOnResourcesCount = enabledOnResourcesCount;
            return this;
        }

        /**
         * @param enabledOnResourcesCount Count of resources on which this metric extension is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabledOnResourcesCount(Integer enabledOnResourcesCount) {
            return enabledOnResourcesCount(Output.of(enabledOnResourcesCount));
        }

        /**
         * @param lastUpdatedBy Last updated by user
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedBy(@Nullable Output<String> lastUpdatedBy) {
            $.lastUpdatedBy = lastUpdatedBy;
            return this;
        }

        /**
         * @param lastUpdatedBy Last updated by user
         * 
         * @return builder
         * 
         */
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            return lastUpdatedBy(Output.of(lastUpdatedBy));
        }

        /**
         * @param metricLists (Updatable) List of metrics which are part of this metric extension
         * 
         * @return builder
         * 
         */
        public Builder metricLists(@Nullable Output<List<MetricExtensionMetricListArgs>> metricLists) {
            $.metricLists = metricLists;
            return this;
        }

        /**
         * @param metricLists (Updatable) List of metrics which are part of this metric extension
         * 
         * @return builder
         * 
         */
        public Builder metricLists(List<MetricExtensionMetricListArgs> metricLists) {
            return metricLists(Output.of(metricLists));
        }

        /**
         * @param metricLists (Updatable) List of metrics which are part of this metric extension
         * 
         * @return builder
         * 
         */
        public Builder metricLists(MetricExtensionMetricListArgs... metricLists) {
            return metricLists(List.of(metricLists));
        }

        /**
         * @param name Metric Extension Resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Metric Extension Resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publishTrigger (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publishTrigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publishTrigger is updated to `true`.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder publishTrigger(@Nullable Output<Boolean> publishTrigger) {
            $.publishTrigger = publishTrigger;
            return this;
        }

        /**
         * @param publishTrigger (Updatable) An optional property when set to `true` triggers Publish of a metric extension. Once set to `true`, it cannot be changed back to `false`. Update of publishTrigger cannot be combined with other updates in the same request. A metric extension cannot be tested and its definition cannot be updated once it is marked published or publishTrigger is updated to `true`.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder publishTrigger(Boolean publishTrigger) {
            return publishTrigger(Output.of(publishTrigger));
        }

        /**
         * @param queryProperties (Updatable) Collection method and query properties details of metric extension
         * 
         * @return builder
         * 
         */
        public Builder queryProperties(@Nullable Output<MetricExtensionQueryPropertiesArgs> queryProperties) {
            $.queryProperties = queryProperties;
            return this;
        }

        /**
         * @param queryProperties (Updatable) Collection method and query properties details of metric extension
         * 
         * @return builder
         * 
         */
        public Builder queryProperties(MetricExtensionQueryPropertiesArgs queryProperties) {
            return queryProperties(Output.of(queryProperties));
        }

        /**
         * @param resourceType Resource type to which Metric Extension applies
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Resource type to which Metric Extension applies
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param resourceUri The URI path that the user can do a GET on to access the metric extension metadata
         * 
         * @return builder
         * 
         */
        public Builder resourceUri(@Nullable Output<String> resourceUri) {
            $.resourceUri = resourceUri;
            return this;
        }

        /**
         * @param resourceUri The URI path that the user can do a GET on to access the metric extension metadata
         * 
         * @return builder
         * 
         */
        public Builder resourceUri(String resourceUri) {
            return resourceUri(Output.of(resourceUri));
        }

        /**
         * @param state The current lifecycle state of the metric extension
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current lifecycle state of the metric extension
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status The current status of the metric extension i.e. whether it is Draft or Published
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status of the metric extension i.e. whether it is Draft or Published
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tenantId Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        /**
         * @param timeCreated Metric Extension creation time. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated Metric Extension creation time. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated Metric Extension update time. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated Metric Extension update time. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public MetricExtensionState build() {
            return $;
        }
    }

}
