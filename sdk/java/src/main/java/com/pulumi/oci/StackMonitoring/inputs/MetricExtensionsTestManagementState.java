// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricExtensionsTestManagementState extends com.pulumi.resources.ResourceArgs {

    public static final MetricExtensionsTestManagementState Empty = new MetricExtensionsTestManagementState();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
     * 
     */
    @Import(name="metricExtensionId")
    private @Nullable Output<String> metricExtensionId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
     * 
     */
    public Optional<Output<String>> metricExtensionId() {
        return Optional.ofNullable(this.metricExtensionId);
    }

    /**
     * List of Resource IDs [OCID]. Currently, supports only one resource id per request.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="resourceIds")
    private @Nullable Output<String> resourceIds;

    /**
     * @return List of Resource IDs [OCID]. Currently, supports only one resource id per request.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> resourceIds() {
        return Optional.ofNullable(this.resourceIds);
    }

    /**
     * Test Run Id
     * 
     */
    @Import(name="testRunId")
    private @Nullable Output<String> testRunId;

    /**
     * @return Test Run Id
     * 
     */
    public Optional<Output<String>> testRunId() {
        return Optional.ofNullable(this.testRunId);
    }

    /**
     * Test Run Metric Suffix
     * 
     */
    @Import(name="testRunMetricSuffix")
    private @Nullable Output<String> testRunMetricSuffix;

    /**
     * @return Test Run Metric Suffix
     * 
     */
    public Optional<Output<String>> testRunMetricSuffix() {
        return Optional.ofNullable(this.testRunMetricSuffix);
    }

    /**
     * Test Run Namespace name
     * 
     */
    @Import(name="testRunNamespaceName")
    private @Nullable Output<String> testRunNamespaceName;

    /**
     * @return Test Run Namespace name
     * 
     */
    public Optional<Output<String>> testRunNamespaceName() {
        return Optional.ofNullable(this.testRunNamespaceName);
    }

    /**
     * Test Run Resource Group name
     * 
     */
    @Import(name="testRunResourceGroupName")
    private @Nullable Output<String> testRunResourceGroupName;

    /**
     * @return Test Run Resource Group name
     * 
     */
    public Optional<Output<String>> testRunResourceGroupName() {
        return Optional.ofNullable(this.testRunResourceGroupName);
    }

    private MetricExtensionsTestManagementState() {}

    private MetricExtensionsTestManagementState(MetricExtensionsTestManagementState $) {
        this.metricExtensionId = $.metricExtensionId;
        this.resourceIds = $.resourceIds;
        this.testRunId = $.testRunId;
        this.testRunMetricSuffix = $.testRunMetricSuffix;
        this.testRunNamespaceName = $.testRunNamespaceName;
        this.testRunResourceGroupName = $.testRunResourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricExtensionsTestManagementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricExtensionsTestManagementState $;

        public Builder() {
            $ = new MetricExtensionsTestManagementState();
        }

        public Builder(MetricExtensionsTestManagementState defaults) {
            $ = new MetricExtensionsTestManagementState(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricExtensionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
         * 
         * @return builder
         * 
         */
        public Builder metricExtensionId(@Nullable Output<String> metricExtensionId) {
            $.metricExtensionId = metricExtensionId;
            return this;
        }

        /**
         * @param metricExtensionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
         * 
         * @return builder
         * 
         */
        public Builder metricExtensionId(String metricExtensionId) {
            return metricExtensionId(Output.of(metricExtensionId));
        }

        /**
         * @param resourceIds List of Resource IDs [OCID]. Currently, supports only one resource id per request.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder resourceIds(@Nullable Output<String> resourceIds) {
            $.resourceIds = resourceIds;
            return this;
        }

        /**
         * @param resourceIds List of Resource IDs [OCID]. Currently, supports only one resource id per request.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder resourceIds(String resourceIds) {
            return resourceIds(Output.of(resourceIds));
        }

        /**
         * @param testRunId Test Run Id
         * 
         * @return builder
         * 
         */
        public Builder testRunId(@Nullable Output<String> testRunId) {
            $.testRunId = testRunId;
            return this;
        }

        /**
         * @param testRunId Test Run Id
         * 
         * @return builder
         * 
         */
        public Builder testRunId(String testRunId) {
            return testRunId(Output.of(testRunId));
        }

        /**
         * @param testRunMetricSuffix Test Run Metric Suffix
         * 
         * @return builder
         * 
         */
        public Builder testRunMetricSuffix(@Nullable Output<String> testRunMetricSuffix) {
            $.testRunMetricSuffix = testRunMetricSuffix;
            return this;
        }

        /**
         * @param testRunMetricSuffix Test Run Metric Suffix
         * 
         * @return builder
         * 
         */
        public Builder testRunMetricSuffix(String testRunMetricSuffix) {
            return testRunMetricSuffix(Output.of(testRunMetricSuffix));
        }

        /**
         * @param testRunNamespaceName Test Run Namespace name
         * 
         * @return builder
         * 
         */
        public Builder testRunNamespaceName(@Nullable Output<String> testRunNamespaceName) {
            $.testRunNamespaceName = testRunNamespaceName;
            return this;
        }

        /**
         * @param testRunNamespaceName Test Run Namespace name
         * 
         * @return builder
         * 
         */
        public Builder testRunNamespaceName(String testRunNamespaceName) {
            return testRunNamespaceName(Output.of(testRunNamespaceName));
        }

        /**
         * @param testRunResourceGroupName Test Run Resource Group name
         * 
         * @return builder
         * 
         */
        public Builder testRunResourceGroupName(@Nullable Output<String> testRunResourceGroupName) {
            $.testRunResourceGroupName = testRunResourceGroupName;
            return this;
        }

        /**
         * @param testRunResourceGroupName Test Run Resource Group name
         * 
         * @return builder
         * 
         */
        public Builder testRunResourceGroupName(String testRunResourceGroupName) {
            return testRunResourceGroupName(Output.of(testRunResourceGroupName));
        }

        public MetricExtensionsTestManagementState build() {
            return $;
        }
    }

}
