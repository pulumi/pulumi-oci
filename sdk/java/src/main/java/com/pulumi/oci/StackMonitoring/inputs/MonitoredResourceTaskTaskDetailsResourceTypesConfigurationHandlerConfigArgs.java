// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfigArgs;
import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerPropertyArgs;
import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMappingArgs;
import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfigArgs;
import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs Empty = new MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs();

    /**
     * Resource name generation overriding configurations for collectd resource types.
     * 
     */
    @Import(name="collectdResourceNameConfig")
    private @Nullable Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfigArgs> collectdResourceNameConfig;

    /**
     * @return Resource name generation overriding configurations for collectd resource types.
     * 
     */
    public Optional<Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfigArgs>> collectdResourceNameConfig() {
        return Optional.ofNullable(this.collectdResourceNameConfig);
    }

    /**
     * List of collector/plugin names.
     * 
     */
    @Import(name="collectorTypes")
    private @Nullable Output<List<String>> collectorTypes;

    /**
     * @return List of collector/plugin names.
     * 
     */
    public Optional<Output<List<String>>> collectorTypes() {
        return Optional.ofNullable(this.collectorTypes);
    }

    /**
     * List of handler configuration properties
     * 
     */
    @Import(name="handlerProperties")
    private @Nullable Output<List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerPropertyArgs>> handlerProperties;

    /**
     * @return List of handler configuration properties
     * 
     */
    public Optional<Output<List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerPropertyArgs>>> handlerProperties() {
        return Optional.ofNullable(this.handlerProperties);
    }

    /**
     * List of AgentExtensionHandlerMetricMappingDetails.
     * 
     */
    @Import(name="metricMappings")
    private @Nullable Output<List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMappingArgs>> metricMappings;

    /**
     * @return List of AgentExtensionHandlerMetricMappingDetails.
     * 
     */
    public Optional<Output<List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMappingArgs>>> metricMappings() {
        return Optional.ofNullable(this.metricMappings);
    }

    /**
     * Metric name generation overriding configurations.
     * 
     */
    @Import(name="metricNameConfig")
    private @Nullable Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfigArgs> metricNameConfig;

    /**
     * @return Metric name generation overriding configurations.
     * 
     */
    public Optional<Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfigArgs>> metricNameConfig() {
        return Optional.ofNullable(this.metricNameConfig);
    }

    /**
     * Metric upload interval in seconds. Any metric sent by telegraf/collectd before the  configured interval expires will be dropped.
     * 
     */
    @Import(name="metricUploadIntervalInSeconds")
    private @Nullable Output<Integer> metricUploadIntervalInSeconds;

    /**
     * @return Metric upload interval in seconds. Any metric sent by telegraf/collectd before the  configured interval expires will be dropped.
     * 
     */
    public Optional<Output<Integer>> metricUploadIntervalInSeconds() {
        return Optional.ofNullable(this.metricUploadIntervalInSeconds);
    }

    /**
     * Resource name generation overriding configurations for telegraf resource types.
     * 
     */
    @Import(name="telegrafResourceNameConfig")
    private @Nullable Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs> telegrafResourceNameConfig;

    /**
     * @return Resource name generation overriding configurations for telegraf resource types.
     * 
     */
    public Optional<Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs>> telegrafResourceNameConfig() {
        return Optional.ofNullable(this.telegrafResourceNameConfig);
    }

    /**
     * Resource group string; if not specified, the resource group string will be generated by the handler.
     * 
     */
    @Import(name="telemetryResourceGroup")
    private @Nullable Output<String> telemetryResourceGroup;

    /**
     * @return Resource group string; if not specified, the resource group string will be generated by the handler.
     * 
     */
    public Optional<Output<String>> telemetryResourceGroup() {
        return Optional.ofNullable(this.telemetryResourceGroup);
    }

    private MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs() {}

    private MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs $) {
        this.collectdResourceNameConfig = $.collectdResourceNameConfig;
        this.collectorTypes = $.collectorTypes;
        this.handlerProperties = $.handlerProperties;
        this.metricMappings = $.metricMappings;
        this.metricNameConfig = $.metricNameConfig;
        this.metricUploadIntervalInSeconds = $.metricUploadIntervalInSeconds;
        this.telegrafResourceNameConfig = $.telegrafResourceNameConfig;
        this.telemetryResourceGroup = $.telemetryResourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs $;

        public Builder() {
            $ = new MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs();
        }

        public Builder(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs defaults) {
            $ = new MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param collectdResourceNameConfig Resource name generation overriding configurations for collectd resource types.
         * 
         * @return builder
         * 
         */
        public Builder collectdResourceNameConfig(@Nullable Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfigArgs> collectdResourceNameConfig) {
            $.collectdResourceNameConfig = collectdResourceNameConfig;
            return this;
        }

        /**
         * @param collectdResourceNameConfig Resource name generation overriding configurations for collectd resource types.
         * 
         * @return builder
         * 
         */
        public Builder collectdResourceNameConfig(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfigArgs collectdResourceNameConfig) {
            return collectdResourceNameConfig(Output.of(collectdResourceNameConfig));
        }

        /**
         * @param collectorTypes List of collector/plugin names.
         * 
         * @return builder
         * 
         */
        public Builder collectorTypes(@Nullable Output<List<String>> collectorTypes) {
            $.collectorTypes = collectorTypes;
            return this;
        }

        /**
         * @param collectorTypes List of collector/plugin names.
         * 
         * @return builder
         * 
         */
        public Builder collectorTypes(List<String> collectorTypes) {
            return collectorTypes(Output.of(collectorTypes));
        }

        /**
         * @param collectorTypes List of collector/plugin names.
         * 
         * @return builder
         * 
         */
        public Builder collectorTypes(String... collectorTypes) {
            return collectorTypes(List.of(collectorTypes));
        }

        /**
         * @param handlerProperties List of handler configuration properties
         * 
         * @return builder
         * 
         */
        public Builder handlerProperties(@Nullable Output<List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerPropertyArgs>> handlerProperties) {
            $.handlerProperties = handlerProperties;
            return this;
        }

        /**
         * @param handlerProperties List of handler configuration properties
         * 
         * @return builder
         * 
         */
        public Builder handlerProperties(List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerPropertyArgs> handlerProperties) {
            return handlerProperties(Output.of(handlerProperties));
        }

        /**
         * @param handlerProperties List of handler configuration properties
         * 
         * @return builder
         * 
         */
        public Builder handlerProperties(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerPropertyArgs... handlerProperties) {
            return handlerProperties(List.of(handlerProperties));
        }

        /**
         * @param metricMappings List of AgentExtensionHandlerMetricMappingDetails.
         * 
         * @return builder
         * 
         */
        public Builder metricMappings(@Nullable Output<List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMappingArgs>> metricMappings) {
            $.metricMappings = metricMappings;
            return this;
        }

        /**
         * @param metricMappings List of AgentExtensionHandlerMetricMappingDetails.
         * 
         * @return builder
         * 
         */
        public Builder metricMappings(List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMappingArgs> metricMappings) {
            return metricMappings(Output.of(metricMappings));
        }

        /**
         * @param metricMappings List of AgentExtensionHandlerMetricMappingDetails.
         * 
         * @return builder
         * 
         */
        public Builder metricMappings(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMappingArgs... metricMappings) {
            return metricMappings(List.of(metricMappings));
        }

        /**
         * @param metricNameConfig Metric name generation overriding configurations.
         * 
         * @return builder
         * 
         */
        public Builder metricNameConfig(@Nullable Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfigArgs> metricNameConfig) {
            $.metricNameConfig = metricNameConfig;
            return this;
        }

        /**
         * @param metricNameConfig Metric name generation overriding configurations.
         * 
         * @return builder
         * 
         */
        public Builder metricNameConfig(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfigArgs metricNameConfig) {
            return metricNameConfig(Output.of(metricNameConfig));
        }

        /**
         * @param metricUploadIntervalInSeconds Metric upload interval in seconds. Any metric sent by telegraf/collectd before the  configured interval expires will be dropped.
         * 
         * @return builder
         * 
         */
        public Builder metricUploadIntervalInSeconds(@Nullable Output<Integer> metricUploadIntervalInSeconds) {
            $.metricUploadIntervalInSeconds = metricUploadIntervalInSeconds;
            return this;
        }

        /**
         * @param metricUploadIntervalInSeconds Metric upload interval in seconds. Any metric sent by telegraf/collectd before the  configured interval expires will be dropped.
         * 
         * @return builder
         * 
         */
        public Builder metricUploadIntervalInSeconds(Integer metricUploadIntervalInSeconds) {
            return metricUploadIntervalInSeconds(Output.of(metricUploadIntervalInSeconds));
        }

        /**
         * @param telegrafResourceNameConfig Resource name generation overriding configurations for telegraf resource types.
         * 
         * @return builder
         * 
         */
        public Builder telegrafResourceNameConfig(@Nullable Output<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs> telegrafResourceNameConfig) {
            $.telegrafResourceNameConfig = telegrafResourceNameConfig;
            return this;
        }

        /**
         * @param telegrafResourceNameConfig Resource name generation overriding configurations for telegraf resource types.
         * 
         * @return builder
         * 
         */
        public Builder telegrafResourceNameConfig(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs telegrafResourceNameConfig) {
            return telegrafResourceNameConfig(Output.of(telegrafResourceNameConfig));
        }

        /**
         * @param telemetryResourceGroup Resource group string; if not specified, the resource group string will be generated by the handler.
         * 
         * @return builder
         * 
         */
        public Builder telemetryResourceGroup(@Nullable Output<String> telemetryResourceGroup) {
            $.telemetryResourceGroup = telemetryResourceGroup;
            return this;
        }

        /**
         * @param telemetryResourceGroup Resource group string; if not specified, the resource group string will be generated by the handler.
         * 
         * @return builder
         * 
         */
        public Builder telemetryResourceGroup(String telemetryResourceGroup) {
            return telemetryResourceGroup(Output.of(telemetryResourceGroup));
        }

        public MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigArgs build() {
            return $;
        }
    }

}
