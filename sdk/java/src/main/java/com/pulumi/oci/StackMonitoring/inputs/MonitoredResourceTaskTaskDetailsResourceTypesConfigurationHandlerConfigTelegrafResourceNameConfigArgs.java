// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs Empty = new MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs();

    /**
     * List of tag names to be excluded.
     * 
     */
    @Import(name="excludeTags")
    private @Nullable Output<List<String>> excludeTags;

    /**
     * @return List of tag names to be excluded.
     * 
     */
    public Optional<Output<List<String>>> excludeTags() {
        return Optional.ofNullable(this.excludeTags);
    }

    /**
     * List of tag names to be included.
     * 
     */
    @Import(name="includeTags")
    private @Nullable Output<List<String>> includeTags;

    /**
     * @return List of tag names to be included.
     * 
     */
    public Optional<Output<List<String>>> includeTags() {
        return Optional.ofNullable(this.includeTags);
    }

    /**
     * Flag to indicate if only tags will be used for resource name generation.
     * 
     */
    @Import(name="isUseTagsOnly")
    private @Nullable Output<Boolean> isUseTagsOnly;

    /**
     * @return Flag to indicate if only tags will be used for resource name generation.
     * 
     */
    public Optional<Output<Boolean>> isUseTagsOnly() {
        return Optional.ofNullable(this.isUseTagsOnly);
    }

    private MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs() {}

    private MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs $) {
        this.excludeTags = $.excludeTags;
        this.includeTags = $.includeTags;
        this.isUseTagsOnly = $.isUseTagsOnly;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs $;

        public Builder() {
            $ = new MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs();
        }

        public Builder(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs defaults) {
            $ = new MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludeTags List of tag names to be excluded.
         * 
         * @return builder
         * 
         */
        public Builder excludeTags(@Nullable Output<List<String>> excludeTags) {
            $.excludeTags = excludeTags;
            return this;
        }

        /**
         * @param excludeTags List of tag names to be excluded.
         * 
         * @return builder
         * 
         */
        public Builder excludeTags(List<String> excludeTags) {
            return excludeTags(Output.of(excludeTags));
        }

        /**
         * @param excludeTags List of tag names to be excluded.
         * 
         * @return builder
         * 
         */
        public Builder excludeTags(String... excludeTags) {
            return excludeTags(List.of(excludeTags));
        }

        /**
         * @param includeTags List of tag names to be included.
         * 
         * @return builder
         * 
         */
        public Builder includeTags(@Nullable Output<List<String>> includeTags) {
            $.includeTags = includeTags;
            return this;
        }

        /**
         * @param includeTags List of tag names to be included.
         * 
         * @return builder
         * 
         */
        public Builder includeTags(List<String> includeTags) {
            return includeTags(Output.of(includeTags));
        }

        /**
         * @param includeTags List of tag names to be included.
         * 
         * @return builder
         * 
         */
        public Builder includeTags(String... includeTags) {
            return includeTags(List.of(includeTags));
        }

        /**
         * @param isUseTagsOnly Flag to indicate if only tags will be used for resource name generation.
         * 
         * @return builder
         * 
         */
        public Builder isUseTagsOnly(@Nullable Output<Boolean> isUseTagsOnly) {
            $.isUseTagsOnly = isUseTagsOnly;
            return this;
        }

        /**
         * @param isUseTagsOnly Flag to indicate if only tags will be used for resource name generation.
         * 
         * @return builder
         * 
         */
        public Builder isUseTagsOnly(Boolean isUseTagsOnly) {
            return isUseTagsOnly(Output.of(isUseTagsOnly));
        }

        public MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfigArgs build() {
            return $;
        }
    }

}
