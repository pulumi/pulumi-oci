// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitoredResourceTypeAvailabilityMetricsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoredResourceTypeAvailabilityMetricsConfigArgs Empty = new MonitoredResourceTypeAvailabilityMetricsConfigArgs();

    /**
     * Availability metric collection internal in seconds.
     * 
     */
    @Import(name="collectionIntervalInSeconds")
    private @Nullable Output<Integer> collectionIntervalInSeconds;

    /**
     * @return Availability metric collection internal in seconds.
     * 
     */
    public Optional<Output<Integer>> collectionIntervalInSeconds() {
        return Optional.ofNullable(this.collectionIntervalInSeconds);
    }

    /**
     * List of metrics used for availability calculation for the resource.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<List<String>> metrics;

    /**
     * @return List of metrics used for availability calculation for the resource.
     * 
     */
    public Optional<Output<List<String>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    private MonitoredResourceTypeAvailabilityMetricsConfigArgs() {}

    private MonitoredResourceTypeAvailabilityMetricsConfigArgs(MonitoredResourceTypeAvailabilityMetricsConfigArgs $) {
        this.collectionIntervalInSeconds = $.collectionIntervalInSeconds;
        this.metrics = $.metrics;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoredResourceTypeAvailabilityMetricsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoredResourceTypeAvailabilityMetricsConfigArgs $;

        public Builder() {
            $ = new MonitoredResourceTypeAvailabilityMetricsConfigArgs();
        }

        public Builder(MonitoredResourceTypeAvailabilityMetricsConfigArgs defaults) {
            $ = new MonitoredResourceTypeAvailabilityMetricsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param collectionIntervalInSeconds Availability metric collection internal in seconds.
         * 
         * @return builder
         * 
         */
        public Builder collectionIntervalInSeconds(@Nullable Output<Integer> collectionIntervalInSeconds) {
            $.collectionIntervalInSeconds = collectionIntervalInSeconds;
            return this;
        }

        /**
         * @param collectionIntervalInSeconds Availability metric collection internal in seconds.
         * 
         * @return builder
         * 
         */
        public Builder collectionIntervalInSeconds(Integer collectionIntervalInSeconds) {
            return collectionIntervalInSeconds(Output.of(collectionIntervalInSeconds));
        }

        /**
         * @param metrics List of metrics used for availability calculation for the resource.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<List<String>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics List of metrics used for availability calculation for the resource.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<String> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param metrics List of metrics used for availability calculation for the resource.
         * 
         * @return builder
         * 
         */
        public Builder metrics(String... metrics) {
            return metrics(List.of(metrics));
        }

        public MonitoredResourceTypeAvailabilityMetricsConfigArgs build() {
            return $;
        }
    }

}
