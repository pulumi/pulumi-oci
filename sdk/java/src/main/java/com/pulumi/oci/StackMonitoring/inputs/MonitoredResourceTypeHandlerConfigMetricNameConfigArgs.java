// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitoredResourceTypeHandlerConfigMetricNameConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoredResourceTypeHandlerConfigMetricNameConfigArgs Empty = new MonitoredResourceTypeHandlerConfigMetricNameConfigArgs();

    /**
     * String pattern to be removed from the prefix of the metric name.
     * 
     */
    @Import(name="excludePatternOnPrefix")
    private @Nullable Output<String> excludePatternOnPrefix;

    /**
     * @return String pattern to be removed from the prefix of the metric name.
     * 
     */
    public Optional<Output<String>> excludePatternOnPrefix() {
        return Optional.ofNullable(this.excludePatternOnPrefix);
    }

    /**
     * is prefixing the metric with collector type.
     * 
     */
    @Import(name="isPrefixWithCollectorType")
    private @Nullable Output<Boolean> isPrefixWithCollectorType;

    /**
     * @return is prefixing the metric with collector type.
     * 
     */
    public Optional<Output<Boolean>> isPrefixWithCollectorType() {
        return Optional.ofNullable(this.isPrefixWithCollectorType);
    }

    private MonitoredResourceTypeHandlerConfigMetricNameConfigArgs() {}

    private MonitoredResourceTypeHandlerConfigMetricNameConfigArgs(MonitoredResourceTypeHandlerConfigMetricNameConfigArgs $) {
        this.excludePatternOnPrefix = $.excludePatternOnPrefix;
        this.isPrefixWithCollectorType = $.isPrefixWithCollectorType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoredResourceTypeHandlerConfigMetricNameConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoredResourceTypeHandlerConfigMetricNameConfigArgs $;

        public Builder() {
            $ = new MonitoredResourceTypeHandlerConfigMetricNameConfigArgs();
        }

        public Builder(MonitoredResourceTypeHandlerConfigMetricNameConfigArgs defaults) {
            $ = new MonitoredResourceTypeHandlerConfigMetricNameConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludePatternOnPrefix String pattern to be removed from the prefix of the metric name.
         * 
         * @return builder
         * 
         */
        public Builder excludePatternOnPrefix(@Nullable Output<String> excludePatternOnPrefix) {
            $.excludePatternOnPrefix = excludePatternOnPrefix;
            return this;
        }

        /**
         * @param excludePatternOnPrefix String pattern to be removed from the prefix of the metric name.
         * 
         * @return builder
         * 
         */
        public Builder excludePatternOnPrefix(String excludePatternOnPrefix) {
            return excludePatternOnPrefix(Output.of(excludePatternOnPrefix));
        }

        /**
         * @param isPrefixWithCollectorType is prefixing the metric with collector type.
         * 
         * @return builder
         * 
         */
        public Builder isPrefixWithCollectorType(@Nullable Output<Boolean> isPrefixWithCollectorType) {
            $.isPrefixWithCollectorType = isPrefixWithCollectorType;
            return this;
        }

        /**
         * @param isPrefixWithCollectorType is prefixing the metric with collector type.
         * 
         * @return builder
         * 
         */
        public Builder isPrefixWithCollectorType(Boolean isPrefixWithCollectorType) {
            return isPrefixWithCollectorType(Output.of(isPrefixWithCollectorType));
        }

        public MonitoredResourceTypeHandlerConfigMetricNameConfigArgs build() {
            return $;
        }
    }

}
