// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.StackMonitoring.inputs.MonitoredResourcesSearchItemArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitoredResourcesSearchState extends com.pulumi.resources.ResourceArgs {

    public static final MonitoredResourcesSearchState Empty = new MonitoredResourcesSearchState();

    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Multiple compartment identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentIds")
    private @Nullable Output<List<String>> compartmentIds;

    /**
     * @return Multiple compartment identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<Output<List<String>>> compartmentIds() {
        return Optional.ofNullable(this.compartmentIds);
    }

    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called &#34;excludeFields&#34; of an array type, provide the values as enums, and use collectionFormat.
     * 
     */
    @Import(name="excludeFields")
    private @Nullable Output<List<String>> excludeFields;

    /**
     * @return Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called &#34;excludeFields&#34; of an array type, provide the values as enums, and use collectionFormat.
     * 
     */
    public Optional<Output<List<String>>> excludeFields() {
        return Optional.ofNullable(this.excludeFields);
    }

    /**
     * External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called &#34;fields&#34; of an array type, provide the values as enums, and use collectionFormat.
     * 
     */
    @Import(name="fields")
    private @Nullable Output<List<String>> fields;

    /**
     * @return Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called &#34;fields&#34; of an array type, provide the values as enums, and use collectionFormat.
     * 
     */
    public Optional<Output<List<String>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * A filter to return resources with host name match.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return A filter to return resources with host name match.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * A filter to return resources with host name pattern.
     * 
     */
    @Import(name="hostNameContains")
    private @Nullable Output<String> hostNameContains;

    /**
     * @return A filter to return resources with host name pattern.
     * 
     */
    public Optional<Output<String>> hostNameContains() {
        return Optional.ofNullable(this.hostNameContains);
    }

    /**
     * List of monitored resources.
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<MonitoredResourcesSearchItemArgs>> items;

    /**
     * @return List of monitored resources.
     * 
     */
    public Optional<Output<List<MonitoredResourcesSearchItemArgs>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * License edition of the monitored resource.
     * 
     */
    @Import(name="license")
    private @Nullable Output<String> license;

    /**
     * @return License edition of the monitored resource.
     * 
     */
    public Optional<Output<String>> license() {
        return Optional.ofNullable(this.license);
    }

    /**
     * Multiple lifecycle states filter.
     * 
     */
    @Import(name="lifecycleStates")
    private @Nullable Output<List<String>> lifecycleStates;

    /**
     * @return Multiple lifecycle states filter.
     * 
     */
    public Optional<Output<List<String>>> lifecycleStates() {
        return Optional.ofNullable(this.lifecycleStates);
    }

    /**
     * A filter to return resources with matching management agent id.
     * 
     */
    @Import(name="managementAgentId")
    private @Nullable Output<String> managementAgentId;

    /**
     * @return A filter to return resources with matching management agent id.
     * 
     */
    public Optional<Output<String>> managementAgentId() {
        return Optional.ofNullable(this.managementAgentId);
    }

    /**
     * A filter to return resources that match exact resource name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A filter to return resources that match exact resource name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return resources that match resource name pattern given. The match is not case sensitive.
     * 
     */
    @Import(name="nameContains")
    private @Nullable Output<String> nameContains;

    /**
     * @return A filter to return resources that match resource name pattern given. The match is not case sensitive.
     * 
     */
    public Optional<Output<String>> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }

    /**
     * Criteria based on resource property.
     * 
     */
    @Import(name="propertyEquals")
    private @Nullable Output<Map<String,String>> propertyEquals;

    /**
     * @return Criteria based on resource property.
     * 
     */
    public Optional<Output<Map<String,String>>> propertyEquals() {
        return Optional.ofNullable(this.propertyEquals);
    }

    /**
     * Resource category filter.
     * 
     */
    @Import(name="resourceCategory")
    private @Nullable Output<String> resourceCategory;

    /**
     * @return Resource category filter.
     * 
     */
    public Optional<Output<String>> resourceCategory() {
        return Optional.ofNullable(this.resourceCategory);
    }

    /**
     * Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     * 
     */
    @Import(name="resourceTimeZone")
    private @Nullable Output<String> resourceTimeZone;

    /**
     * @return Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     * 
     */
    public Optional<Output<String>> resourceTimeZone() {
        return Optional.ofNullable(this.resourceTimeZone);
    }

    /**
     * Source type filter.
     * 
     */
    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    /**
     * @return Source type filter.
     * 
     */
    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    /**
     * A filter to return resources with matching lifecycle state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return resources with matching lifecycle state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Search for resources that were created within a specific date range, using this parameter to specify the earliest creation date for the returned list (inclusive). Specifying this parameter without the corresponding `timeCreatedLessThan` parameter will retrieve resources created from the given `timeCreatedGreaterThanOrEqualTo` to the current time, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     * **Example:** 2016-12-19T16:39:57.600Z
     * 
     */
    @Import(name="timeCreatedGreaterThanOrEqualTo")
    private @Nullable Output<String> timeCreatedGreaterThanOrEqualTo;

    /**
     * @return Search for resources that were created within a specific date range, using this parameter to specify the earliest creation date for the returned list (inclusive). Specifying this parameter without the corresponding `timeCreatedLessThan` parameter will retrieve resources created from the given `timeCreatedGreaterThanOrEqualTo` to the current time, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     * **Example:** 2016-12-19T16:39:57.600Z
     * 
     */
    public Optional<Output<String>> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }

    /**
     * Search for resources that were created within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeCreatedGreaterThanOrEqualTo` parameter will retrieve all resources created before the specified end date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     * **Example:** 2016-12-19T16:39:57.600Z
     * 
     */
    @Import(name="timeCreatedLessThan")
    private @Nullable Output<String> timeCreatedLessThan;

    /**
     * @return Search for resources that were created within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeCreatedGreaterThanOrEqualTo` parameter will retrieve all resources created before the specified end date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     * **Example:** 2016-12-19T16:39:57.600Z
     * 
     */
    public Optional<Output<String>> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }

    /**
     * Search for resources that were updated within a specific date range, using this parameter to specify the earliest update date for the returned list (inclusive). Specifying this parameter without the corresponding `timeUpdatedLessThan` parameter will retrieve resources updated from the given `timeUpdatedGreaterThanOrEqualTo` to the current time, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     * **Example:** 2016-12-19T16:39:57.600Z
     * 
     */
    @Import(name="timeUpdatedGreaterThanOrEqualTo")
    private @Nullable Output<String> timeUpdatedGreaterThanOrEqualTo;

    /**
     * @return Search for resources that were updated within a specific date range, using this parameter to specify the earliest update date for the returned list (inclusive). Specifying this parameter without the corresponding `timeUpdatedLessThan` parameter will retrieve resources updated from the given `timeUpdatedGreaterThanOrEqualTo` to the current time, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     * **Example:** 2016-12-19T16:39:57.600Z
     * 
     */
    public Optional<Output<String>> timeUpdatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeUpdatedGreaterThanOrEqualTo);
    }

    /**
     * Search for resources that were updated within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated before the specified end date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     * **Example:** 2016-12-19T16:39:57.600Z
     * 
     */
    @Import(name="timeUpdatedLessThan")
    private @Nullable Output<String> timeUpdatedLessThan;

    /**
     * @return Search for resources that were updated within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated before the specified end date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     * **Example:** 2016-12-19T16:39:57.600Z
     * 
     */
    public Optional<Output<String>> timeUpdatedLessThan() {
        return Optional.ofNullable(this.timeUpdatedLessThan);
    }

    /**
     * A filter to return resources that match resource type.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return A filter to return resources that match resource type.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private MonitoredResourcesSearchState() {}

    private MonitoredResourcesSearchState(MonitoredResourcesSearchState $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIds = $.compartmentIds;
        this.excludeFields = $.excludeFields;
        this.externalId = $.externalId;
        this.fields = $.fields;
        this.hostName = $.hostName;
        this.hostNameContains = $.hostNameContains;
        this.items = $.items;
        this.license = $.license;
        this.lifecycleStates = $.lifecycleStates;
        this.managementAgentId = $.managementAgentId;
        this.name = $.name;
        this.nameContains = $.nameContains;
        this.propertyEquals = $.propertyEquals;
        this.resourceCategory = $.resourceCategory;
        this.resourceTimeZone = $.resourceTimeZone;
        this.sourceType = $.sourceType;
        this.state = $.state;
        this.timeCreatedGreaterThanOrEqualTo = $.timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = $.timeCreatedLessThan;
        this.timeUpdatedGreaterThanOrEqualTo = $.timeUpdatedGreaterThanOrEqualTo;
        this.timeUpdatedLessThan = $.timeUpdatedLessThan;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoredResourcesSearchState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoredResourcesSearchState $;

        public Builder() {
            $ = new MonitoredResourcesSearchState();
        }

        public Builder(MonitoredResourcesSearchState defaults) {
            $ = new MonitoredResourcesSearchState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentIds Multiple compartment identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentIds(@Nullable Output<List<String>> compartmentIds) {
            $.compartmentIds = compartmentIds;
            return this;
        }

        /**
         * @param compartmentIds Multiple compartment identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentIds(List<String> compartmentIds) {
            return compartmentIds(Output.of(compartmentIds));
        }

        /**
         * @param compartmentIds Multiple compartment identifiers [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentIds(String... compartmentIds) {
            return compartmentIds(List.of(compartmentIds));
        }

        /**
         * @param excludeFields Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called &#34;excludeFields&#34; of an array type, provide the values as enums, and use collectionFormat.
         * 
         * @return builder
         * 
         */
        public Builder excludeFields(@Nullable Output<List<String>> excludeFields) {
            $.excludeFields = excludeFields;
            return this;
        }

        /**
         * @param excludeFields Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called &#34;excludeFields&#34; of an array type, provide the values as enums, and use collectionFormat.
         * 
         * @return builder
         * 
         */
        public Builder excludeFields(List<String> excludeFields) {
            return excludeFields(Output.of(excludeFields));
        }

        /**
         * @param excludeFields Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called &#34;excludeFields&#34; of an array type, provide the values as enums, and use collectionFormat.
         * 
         * @return builder
         * 
         */
        public Builder excludeFields(String... excludeFields) {
            return excludeFields(List.of(excludeFields));
        }

        /**
         * @param externalId External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called &#34;fields&#34; of an array type, provide the values as enums, and use collectionFormat.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable Output<List<String>> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called &#34;fields&#34; of an array type, provide the values as enums, and use collectionFormat.
         * 
         * @return builder
         * 
         */
        public Builder fields(List<String> fields) {
            return fields(Output.of(fields));
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called &#34;fields&#34; of an array type, provide the values as enums, and use collectionFormat.
         * 
         * @return builder
         * 
         */
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        /**
         * @param hostName A filter to return resources with host name match.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName A filter to return resources with host name match.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param hostNameContains A filter to return resources with host name pattern.
         * 
         * @return builder
         * 
         */
        public Builder hostNameContains(@Nullable Output<String> hostNameContains) {
            $.hostNameContains = hostNameContains;
            return this;
        }

        /**
         * @param hostNameContains A filter to return resources with host name pattern.
         * 
         * @return builder
         * 
         */
        public Builder hostNameContains(String hostNameContains) {
            return hostNameContains(Output.of(hostNameContains));
        }

        /**
         * @param items List of monitored resources.
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<MonitoredResourcesSearchItemArgs>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items List of monitored resources.
         * 
         * @return builder
         * 
         */
        public Builder items(List<MonitoredResourcesSearchItemArgs> items) {
            return items(Output.of(items));
        }

        /**
         * @param items List of monitored resources.
         * 
         * @return builder
         * 
         */
        public Builder items(MonitoredResourcesSearchItemArgs... items) {
            return items(List.of(items));
        }

        /**
         * @param license License edition of the monitored resource.
         * 
         * @return builder
         * 
         */
        public Builder license(@Nullable Output<String> license) {
            $.license = license;
            return this;
        }

        /**
         * @param license License edition of the monitored resource.
         * 
         * @return builder
         * 
         */
        public Builder license(String license) {
            return license(Output.of(license));
        }

        /**
         * @param lifecycleStates Multiple lifecycle states filter.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStates(@Nullable Output<List<String>> lifecycleStates) {
            $.lifecycleStates = lifecycleStates;
            return this;
        }

        /**
         * @param lifecycleStates Multiple lifecycle states filter.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStates(List<String> lifecycleStates) {
            return lifecycleStates(Output.of(lifecycleStates));
        }

        /**
         * @param lifecycleStates Multiple lifecycle states filter.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStates(String... lifecycleStates) {
            return lifecycleStates(List.of(lifecycleStates));
        }

        /**
         * @param managementAgentId A filter to return resources with matching management agent id.
         * 
         * @return builder
         * 
         */
        public Builder managementAgentId(@Nullable Output<String> managementAgentId) {
            $.managementAgentId = managementAgentId;
            return this;
        }

        /**
         * @param managementAgentId A filter to return resources with matching management agent id.
         * 
         * @return builder
         * 
         */
        public Builder managementAgentId(String managementAgentId) {
            return managementAgentId(Output.of(managementAgentId));
        }

        /**
         * @param name A filter to return resources that match exact resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter to return resources that match exact resource name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameContains A filter to return resources that match resource name pattern given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder nameContains(@Nullable Output<String> nameContains) {
            $.nameContains = nameContains;
            return this;
        }

        /**
         * @param nameContains A filter to return resources that match resource name pattern given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder nameContains(String nameContains) {
            return nameContains(Output.of(nameContains));
        }

        /**
         * @param propertyEquals Criteria based on resource property.
         * 
         * @return builder
         * 
         */
        public Builder propertyEquals(@Nullable Output<Map<String,String>> propertyEquals) {
            $.propertyEquals = propertyEquals;
            return this;
        }

        /**
         * @param propertyEquals Criteria based on resource property.
         * 
         * @return builder
         * 
         */
        public Builder propertyEquals(Map<String,String> propertyEquals) {
            return propertyEquals(Output.of(propertyEquals));
        }

        /**
         * @param resourceCategory Resource category filter.
         * 
         * @return builder
         * 
         */
        public Builder resourceCategory(@Nullable Output<String> resourceCategory) {
            $.resourceCategory = resourceCategory;
            return this;
        }

        /**
         * @param resourceCategory Resource category filter.
         * 
         * @return builder
         * 
         */
        public Builder resourceCategory(String resourceCategory) {
            return resourceCategory(Output.of(resourceCategory));
        }

        /**
         * @param resourceTimeZone Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
         * 
         * @return builder
         * 
         */
        public Builder resourceTimeZone(@Nullable Output<String> resourceTimeZone) {
            $.resourceTimeZone = resourceTimeZone;
            return this;
        }

        /**
         * @param resourceTimeZone Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
         * 
         * @return builder
         * 
         */
        public Builder resourceTimeZone(String resourceTimeZone) {
            return resourceTimeZone(Output.of(resourceTimeZone));
        }

        /**
         * @param sourceType Source type filter.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType Source type filter.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        /**
         * @param state A filter to return resources with matching lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return resources with matching lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreatedGreaterThanOrEqualTo Search for resources that were created within a specific date range, using this parameter to specify the earliest creation date for the returned list (inclusive). Specifying this parameter without the corresponding `timeCreatedLessThan` parameter will retrieve resources created from the given `timeCreatedGreaterThanOrEqualTo` to the current time, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * **Example:** 2016-12-19T16:39:57.600Z
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable Output<String> timeCreatedGreaterThanOrEqualTo) {
            $.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeCreatedGreaterThanOrEqualTo Search for resources that were created within a specific date range, using this parameter to specify the earliest creation date for the returned list (inclusive). Specifying this parameter without the corresponding `timeCreatedLessThan` parameter will retrieve resources created from the given `timeCreatedGreaterThanOrEqualTo` to the current time, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * **Example:** 2016-12-19T16:39:57.600Z
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThanOrEqualTo(String timeCreatedGreaterThanOrEqualTo) {
            return timeCreatedGreaterThanOrEqualTo(Output.of(timeCreatedGreaterThanOrEqualTo));
        }

        /**
         * @param timeCreatedLessThan Search for resources that were created within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeCreatedGreaterThanOrEqualTo` parameter will retrieve all resources created before the specified end date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * **Example:** 2016-12-19T16:39:57.600Z
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedLessThan(@Nullable Output<String> timeCreatedLessThan) {
            $.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }

        /**
         * @param timeCreatedLessThan Search for resources that were created within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeCreatedGreaterThanOrEqualTo` parameter will retrieve all resources created before the specified end date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * **Example:** 2016-12-19T16:39:57.600Z
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedLessThan(String timeCreatedLessThan) {
            return timeCreatedLessThan(Output.of(timeCreatedLessThan));
        }

        /**
         * @param timeUpdatedGreaterThanOrEqualTo Search for resources that were updated within a specific date range, using this parameter to specify the earliest update date for the returned list (inclusive). Specifying this parameter without the corresponding `timeUpdatedLessThan` parameter will retrieve resources updated from the given `timeUpdatedGreaterThanOrEqualTo` to the current time, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * **Example:** 2016-12-19T16:39:57.600Z
         * 
         * @return builder
         * 
         */
        public Builder timeUpdatedGreaterThanOrEqualTo(@Nullable Output<String> timeUpdatedGreaterThanOrEqualTo) {
            $.timeUpdatedGreaterThanOrEqualTo = timeUpdatedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeUpdatedGreaterThanOrEqualTo Search for resources that were updated within a specific date range, using this parameter to specify the earliest update date for the returned list (inclusive). Specifying this parameter without the corresponding `timeUpdatedLessThan` parameter will retrieve resources updated from the given `timeUpdatedGreaterThanOrEqualTo` to the current time, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * **Example:** 2016-12-19T16:39:57.600Z
         * 
         * @return builder
         * 
         */
        public Builder timeUpdatedGreaterThanOrEqualTo(String timeUpdatedGreaterThanOrEqualTo) {
            return timeUpdatedGreaterThanOrEqualTo(Output.of(timeUpdatedGreaterThanOrEqualTo));
        }

        /**
         * @param timeUpdatedLessThan Search for resources that were updated within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated before the specified end date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * **Example:** 2016-12-19T16:39:57.600Z
         * 
         * @return builder
         * 
         */
        public Builder timeUpdatedLessThan(@Nullable Output<String> timeUpdatedLessThan) {
            $.timeUpdatedLessThan = timeUpdatedLessThan;
            return this;
        }

        /**
         * @param timeUpdatedLessThan Search for resources that were updated within a specific date range, using this parameter to specify the latest creation date for the returned list (exclusive). Specifying this parameter without the corresponding `timeUpdatedGreaterThanOrEqualTo` parameter will retrieve all resources updated before the specified end date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * **Example:** 2016-12-19T16:39:57.600Z
         * 
         * @return builder
         * 
         */
        public Builder timeUpdatedLessThan(String timeUpdatedLessThan) {
            return timeUpdatedLessThan(Output.of(timeUpdatedLessThan));
        }

        /**
         * @param type A filter to return resources that match resource type.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type A filter to return resources that match resource type.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public MonitoredResourcesSearchState build() {
            return $;
        }
    }

}
