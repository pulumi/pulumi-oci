// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigDynamicGroup {
    /**
     * @return (Updatable) Identity domain name
     * 
     */
    private @Nullable String domain;
    /**
     * @return (Updatable) Name of dynamic Group
     * 
     */
    private @Nullable String name;
    /**
     * @return (Updatable) Assignment of dynamic group in context of Stack Monitoring service. It describes the purpose of dynamic groups in Stack Monitoring.
     * 
     */
    private @Nullable String stackMonitoringAssignment;

    private ConfigDynamicGroup() {}
    /**
     * @return (Updatable) Identity domain name
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return (Updatable) Name of dynamic Group
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (Updatable) Assignment of dynamic group in context of Stack Monitoring service. It describes the purpose of dynamic groups in Stack Monitoring.
     * 
     */
    public Optional<String> stackMonitoringAssignment() {
        return Optional.ofNullable(this.stackMonitoringAssignment);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigDynamicGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String domain;
        private @Nullable String name;
        private @Nullable String stackMonitoringAssignment;
        public Builder() {}
        public Builder(ConfigDynamicGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.name = defaults.name;
    	      this.stackMonitoringAssignment = defaults.stackMonitoringAssignment;
        }

        @CustomType.Setter
        public Builder domain(@Nullable String domain) {

            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder stackMonitoringAssignment(@Nullable String stackMonitoringAssignment) {

            this.stackMonitoringAssignment = stackMonitoringAssignment;
            return this;
        }
        public ConfigDynamicGroup build() {
            final var _resultValue = new ConfigDynamicGroup();
            _resultValue.domain = domain;
            _resultValue.name = name;
            _resultValue.stackMonitoringAssignment = stackMonitoringAssignment;
            return _resultValue;
        }
    }
}
