// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBaselineableMetricResult {
    private String baselineableMetricId;
    /**
     * @return metric column name
     * 
     */
    private String column;
    /**
     * @return OCID of the compartment
     * 
     */
    private String compartmentId;
    /**
     * @return Created user id
     * 
     */
    private String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return OCID of the metric
     * 
     */
    private String id;
    /**
     * @return Is the metric created out of box, default false
     * 
     */
    private Boolean isOutOfBox;
    /**
     * @return last Updated user id
     * 
     */
    private String lastUpdatedBy;
    /**
     * @return name of the metric
     * 
     */
    private String name;
    /**
     * @return namespace of the metric
     * 
     */
    private String namespace;
    /**
     * @return Resource group of the metric
     * 
     */
    private String resourceGroup;
    /**
     * @return Resource type of the metric
     * 
     */
    private String resourceType;
    /**
     * @return The current lifecycle state of the metric extension
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return OCID of the tenancy
     * 
     */
    private String tenancyId;
    /**
     * @return creation date
     * 
     */
    private String timeCreated;
    /**
     * @return last updated time
     * 
     */
    private String timeLastUpdated;

    private GetBaselineableMetricResult() {}
    public String baselineableMetricId() {
        return this.baselineableMetricId;
    }
    /**
     * @return metric column name
     * 
     */
    public String column() {
        return this.column;
    }
    /**
     * @return OCID of the compartment
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Created user id
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return OCID of the metric
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Is the metric created out of box, default false
     * 
     */
    public Boolean isOutOfBox() {
        return this.isOutOfBox;
    }
    /**
     * @return last Updated user id
     * 
     */
    public String lastUpdatedBy() {
        return this.lastUpdatedBy;
    }
    /**
     * @return name of the metric
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return namespace of the metric
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Resource group of the metric
     * 
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }
    /**
     * @return Resource type of the metric
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The current lifecycle state of the metric extension
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return OCID of the tenancy
     * 
     */
    public String tenancyId() {
        return this.tenancyId;
    }
    /**
     * @return creation date
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return last updated time
     * 
     */
    public String timeLastUpdated() {
        return this.timeLastUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBaselineableMetricResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String baselineableMetricId;
        private String column;
        private String compartmentId;
        private String createdBy;
        private Map<String,Object> definedTags;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isOutOfBox;
        private String lastUpdatedBy;
        private String name;
        private String namespace;
        private String resourceGroup;
        private String resourceType;
        private String state;
        private Map<String,Object> systemTags;
        private String tenancyId;
        private String timeCreated;
        private String timeLastUpdated;
        public Builder() {}
        public Builder(GetBaselineableMetricResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineableMetricId = defaults.baselineableMetricId;
    	      this.column = defaults.column;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isOutOfBox = defaults.isOutOfBox;
    	      this.lastUpdatedBy = defaults.lastUpdatedBy;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.tenancyId = defaults.tenancyId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastUpdated = defaults.timeLastUpdated;
        }

        @CustomType.Setter
        public Builder baselineableMetricId(String baselineableMetricId) {
            if (baselineableMetricId == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "baselineableMetricId");
            }
            this.baselineableMetricId = baselineableMetricId;
            return this;
        }
        @CustomType.Setter
        public Builder column(String column) {
            if (column == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "column");
            }
            this.column = column;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isOutOfBox(Boolean isOutOfBox) {
            if (isOutOfBox == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "isOutOfBox");
            }
            this.isOutOfBox = isOutOfBox;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdatedBy(String lastUpdatedBy) {
            if (lastUpdatedBy == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "lastUpdatedBy");
            }
            this.lastUpdatedBy = lastUpdatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(String resourceGroup) {
            if (resourceGroup == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "resourceGroup");
            }
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder tenancyId(String tenancyId) {
            if (tenancyId == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "tenancyId");
            }
            this.tenancyId = tenancyId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastUpdated(String timeLastUpdated) {
            if (timeLastUpdated == null) {
              throw new MissingRequiredPropertyException("GetBaselineableMetricResult", "timeLastUpdated");
            }
            this.timeLastUpdated = timeLastUpdated;
            return this;
        }
        public GetBaselineableMetricResult build() {
            final var _resultValue = new GetBaselineableMetricResult();
            _resultValue.baselineableMetricId = baselineableMetricId;
            _resultValue.column = column;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createdBy = createdBy;
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isOutOfBox = isOutOfBox;
            _resultValue.lastUpdatedBy = lastUpdatedBy;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.resourceGroup = resourceGroup;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.tenancyId = tenancyId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastUpdated = timeLastUpdated;
            return _resultValue;
        }
    }
}
