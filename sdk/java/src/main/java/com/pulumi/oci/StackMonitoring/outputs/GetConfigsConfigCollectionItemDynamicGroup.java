// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConfigsConfigCollectionItemDynamicGroup {
    /**
     * @return Identity domain name
     * 
     */
    private String domain;
    /**
     * @return Name of user Group
     * 
     */
    private String name;
    /**
     * @return Assignment of dynamic group in context of Stack Monitoring service. It describes the purpose of dynamic groups in Stack Monitoring.
     * 
     */
    private String stackMonitoringAssignment;

    private GetConfigsConfigCollectionItemDynamicGroup() {}
    /**
     * @return Identity domain name
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return Name of user Group
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Assignment of dynamic group in context of Stack Monitoring service. It describes the purpose of dynamic groups in Stack Monitoring.
     * 
     */
    public String stackMonitoringAssignment() {
        return this.stackMonitoringAssignment;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigsConfigCollectionItemDynamicGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domain;
        private String name;
        private String stackMonitoringAssignment;
        public Builder() {}
        public Builder(GetConfigsConfigCollectionItemDynamicGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.name = defaults.name;
    	      this.stackMonitoringAssignment = defaults.stackMonitoringAssignment;
        }

        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetConfigsConfigCollectionItemDynamicGroup", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetConfigsConfigCollectionItemDynamicGroup", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder stackMonitoringAssignment(String stackMonitoringAssignment) {
            if (stackMonitoringAssignment == null) {
              throw new MissingRequiredPropertyException("GetConfigsConfigCollectionItemDynamicGroup", "stackMonitoringAssignment");
            }
            this.stackMonitoringAssignment = stackMonitoringAssignment;
            return this;
        }
        public GetConfigsConfigCollectionItemDynamicGroup build() {
            final var _resultValue = new GetConfigsConfigCollectionItemDynamicGroup();
            _resultValue.domain = domain;
            _resultValue.name = name;
            _resultValue.stackMonitoringAssignment = stackMonitoringAssignment;
            return _resultValue;
        }
    }
}
