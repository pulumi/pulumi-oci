// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.outputs.GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmConditionCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition {
    /**
     * @return Type of defined monitoring template.
     * 
     */
    private String conditionType;
    /**
     * @return Monitoring template conditions.
     * 
     */
    private List<GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmConditionCondition> conditions;
    /**
     * @return The metric name.
     * 
     */
    private String metricName;

    private GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition() {}
    /**
     * @return Type of defined monitoring template.
     * 
     */
    public String conditionType() {
        return this.conditionType;
    }
    /**
     * @return Monitoring template conditions.
     * 
     */
    public List<GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmConditionCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return The metric name.
     * 
     */
    public String metricName() {
        return this.metricName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String conditionType;
        private List<GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmConditionCondition> conditions;
        private String metricName;
        public Builder() {}
        public Builder(GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditionType = defaults.conditionType;
    	      this.conditions = defaults.conditions;
    	      this.metricName = defaults.metricName;
        }

        @CustomType.Setter
        public Builder conditionType(String conditionType) {
            if (conditionType == null) {
              throw new MissingRequiredPropertyException("GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition", "conditionType");
            }
            this.conditionType = conditionType;
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmConditionCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmConditionCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder metricName(String metricName) {
            if (metricName == null) {
              throw new MissingRequiredPropertyException("GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition", "metricName");
            }
            this.metricName = metricName;
            return this;
        }
        public GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition build() {
            final var _resultValue = new GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollectionItemDefinedAlarmCondition();
            _resultValue.conditionType = conditionType;
            _resultValue.conditions = conditions;
            _resultValue.metricName = metricName;
            return _resultValue;
        }
    }
}
