// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.outputs.GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollection;
import com.pulumi.oci.StackMonitoring.outputs.GetDefinedMonitoringTemplatesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDefinedMonitoringTemplatesResult {
    private String compartmentId;
    /**
     * @return The list of defined_monitoring_template_collection.
     * 
     */
    private List<GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollection> definedMonitoringTemplateCollections;
    /**
     * @return The name of the definedMonitoringTemplate.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetDefinedMonitoringTemplatesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable List<String> resourceTypes;

    private GetDefinedMonitoringTemplatesResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of defined_monitoring_template_collection.
     * 
     */
    public List<GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollection> definedMonitoringTemplateCollections() {
        return this.definedMonitoringTemplateCollections;
    }
    /**
     * @return The name of the definedMonitoringTemplate.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetDefinedMonitoringTemplatesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> resourceTypes() {
        return this.resourceTypes == null ? List.of() : this.resourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefinedMonitoringTemplatesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollection> definedMonitoringTemplateCollections;
        private @Nullable String displayName;
        private @Nullable List<GetDefinedMonitoringTemplatesFilter> filters;
        private String id;
        private @Nullable List<String> resourceTypes;
        public Builder() {}
        public Builder(GetDefinedMonitoringTemplatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedMonitoringTemplateCollections = defaults.definedMonitoringTemplateCollections;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.resourceTypes = defaults.resourceTypes;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDefinedMonitoringTemplatesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedMonitoringTemplateCollections(List<GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollection> definedMonitoringTemplateCollections) {
            if (definedMonitoringTemplateCollections == null) {
              throw new MissingRequiredPropertyException("GetDefinedMonitoringTemplatesResult", "definedMonitoringTemplateCollections");
            }
            this.definedMonitoringTemplateCollections = definedMonitoringTemplateCollections;
            return this;
        }
        public Builder definedMonitoringTemplateCollections(GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollection... definedMonitoringTemplateCollections) {
            return definedMonitoringTemplateCollections(List.of(definedMonitoringTemplateCollections));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDefinedMonitoringTemplatesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetDefinedMonitoringTemplatesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDefinedMonitoringTemplatesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypes(@Nullable List<String> resourceTypes) {

            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        public GetDefinedMonitoringTemplatesResult build() {
            final var _resultValue = new GetDefinedMonitoringTemplatesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedMonitoringTemplateCollections = definedMonitoringTemplateCollections;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.resourceTypes = resourceTypes;
            return _resultValue;
        }
    }
}
