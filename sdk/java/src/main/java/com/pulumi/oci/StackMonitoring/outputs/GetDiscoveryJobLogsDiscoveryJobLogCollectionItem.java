// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDiscoveryJobLogsDiscoveryJobLogCollectionItem {
    /**
     * @return The OCID of Discovery job
     * 
     */
    private String id;
    /**
     * @return Log message
     * 
     */
    private String logMessage;
    /**
     * @return The log type like INFO, WARNING, ERROR, SUCCESS
     * 
     */
    private String logType;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Time the Job log was created
     * 
     */
    private String timeCreated;

    private GetDiscoveryJobLogsDiscoveryJobLogCollectionItem() {}
    /**
     * @return The OCID of Discovery job
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Log message
     * 
     */
    public String logMessage() {
        return this.logMessage;
    }
    /**
     * @return The log type like INFO, WARNING, ERROR, SUCCESS
     * 
     */
    public String logType() {
        return this.logType;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Time the Job log was created
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiscoveryJobLogsDiscoveryJobLogCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String logMessage;
        private String logType;
        private Map<String,String> systemTags;
        private String timeCreated;
        public Builder() {}
        public Builder(GetDiscoveryJobLogsDiscoveryJobLogCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.logMessage = defaults.logMessage;
    	      this.logType = defaults.logType;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryJobLogsDiscoveryJobLogCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder logMessage(String logMessage) {
            if (logMessage == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryJobLogsDiscoveryJobLogCollectionItem", "logMessage");
            }
            this.logMessage = logMessage;
            return this;
        }
        @CustomType.Setter
        public Builder logType(String logType) {
            if (logType == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryJobLogsDiscoveryJobLogCollectionItem", "logType");
            }
            this.logType = logType;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryJobLogsDiscoveryJobLogCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDiscoveryJobLogsDiscoveryJobLogCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetDiscoveryJobLogsDiscoveryJobLogCollectionItem build() {
            final var _resultValue = new GetDiscoveryJobLogsDiscoveryJobLogCollectionItem();
            _resultValue.id = id;
            _resultValue.logMessage = logMessage;
            _resultValue.logType = logType;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
