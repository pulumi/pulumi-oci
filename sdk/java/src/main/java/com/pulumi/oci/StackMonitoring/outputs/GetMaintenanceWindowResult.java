// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.outputs.GetMaintenanceWindowResource;
import com.pulumi.oci.StackMonitoring.outputs.GetMaintenanceWindowResourcesDetail;
import com.pulumi.oci.StackMonitoring.outputs.GetMaintenanceWindowSchedule;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMaintenanceWindowResult {
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Maintenance Window description.
     * 
     */
    private String description;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of maintenance window.
     * 
     */
    private String id;
    /**
     * @return Lifecycle Details of the Maintenance Window.
     * 
     */
    private String lifecycleDetails;
    private String maintenanceWindowId;
    /**
     * @return Name of the monitored resource
     * 
     */
    private String name;
    /**
     * @return List of resource Ids which are part of the Maintenance Window
     * 
     */
    private List<GetMaintenanceWindowResource> resources;
    /**
     * @return List of resource details that are part of the Maintenance Window.
     * 
     */
    private List<GetMaintenanceWindowResourcesDetail> resourcesDetails;
    /**
     * @return Schedule information of the Maintenance Window
     * 
     */
    private List<GetMaintenanceWindowSchedule> schedules;
    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the the maintenance window was created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the the mainteance window was updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;

    private GetMaintenanceWindowResult() {}
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Maintenance Window description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of maintenance window.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Lifecycle Details of the Maintenance Window.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public String maintenanceWindowId() {
        return this.maintenanceWindowId;
    }
    /**
     * @return Name of the monitored resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of resource Ids which are part of the Maintenance Window
     * 
     */
    public List<GetMaintenanceWindowResource> resources() {
        return this.resources;
    }
    /**
     * @return List of resource details that are part of the Maintenance Window.
     * 
     */
    public List<GetMaintenanceWindowResourcesDetail> resourcesDetails() {
        return this.resourcesDetails;
    }
    /**
     * @return Schedule information of the Maintenance Window
     * 
     */
    public List<GetMaintenanceWindowSchedule> schedules() {
        return this.schedules;
    }
    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the maintenance window was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the the mainteance window was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaintenanceWindowResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String maintenanceWindowId;
        private String name;
        private List<GetMaintenanceWindowResource> resources;
        private List<GetMaintenanceWindowResourcesDetail> resourcesDetails;
        private List<GetMaintenanceWindowSchedule> schedules;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetMaintenanceWindowResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maintenanceWindowId = defaults.maintenanceWindowId;
    	      this.name = defaults.name;
    	      this.resources = defaults.resources;
    	      this.resourcesDetails = defaults.resourcesDetails;
    	      this.schedules = defaults.schedules;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindowId(String maintenanceWindowId) {
            if (maintenanceWindowId == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "maintenanceWindowId");
            }
            this.maintenanceWindowId = maintenanceWindowId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resources(List<GetMaintenanceWindowResource> resources) {
            if (resources == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "resources");
            }
            this.resources = resources;
            return this;
        }
        public Builder resources(GetMaintenanceWindowResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder resourcesDetails(List<GetMaintenanceWindowResourcesDetail> resourcesDetails) {
            if (resourcesDetails == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "resourcesDetails");
            }
            this.resourcesDetails = resourcesDetails;
            return this;
        }
        public Builder resourcesDetails(GetMaintenanceWindowResourcesDetail... resourcesDetails) {
            return resourcesDetails(List.of(resourcesDetails));
        }
        @CustomType.Setter
        public Builder schedules(List<GetMaintenanceWindowSchedule> schedules) {
            if (schedules == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "schedules");
            }
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetMaintenanceWindowSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetMaintenanceWindowResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetMaintenanceWindowResult build() {
            final var _resultValue = new GetMaintenanceWindowResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.maintenanceWindowId = maintenanceWindowId;
            _resultValue.name = name;
            _resultValue.resources = resources;
            _resultValue.resourcesDetails = resourcesDetails;
            _resultValue.schedules = schedules;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
