// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.outputs.GetMetricExtensionsFilter;
import com.pulumi.oci.StackMonitoring.outputs.GetMetricExtensionsMetricExtensionCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMetricExtensionsResult {
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable String enabledOnResourceId;
    private @Nullable List<GetMetricExtensionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of metric_extension_collection.
     * 
     */
    private List<GetMetricExtensionsMetricExtensionCollection> metricExtensionCollections;
    private @Nullable String metricExtensionId;
    /**
     * @return Name of the script file
     * 
     */
    private @Nullable String name;
    /**
     * @return Resource type to which Metric Extension applies
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The current lifecycle state of the metric extension
     * 
     */
    private @Nullable String state;
    /**
     * @return The current status of the metric extension i.e. whether it is Draft or Published
     * 
     */
    private @Nullable String status;

    private GetMetricExtensionsResult() {}
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<String> enabledOnResourceId() {
        return Optional.ofNullable(this.enabledOnResourceId);
    }
    public List<GetMetricExtensionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of metric_extension_collection.
     * 
     */
    public List<GetMetricExtensionsMetricExtensionCollection> metricExtensionCollections() {
        return this.metricExtensionCollections;
    }
    public Optional<String> metricExtensionId() {
        return Optional.ofNullable(this.metricExtensionId);
    }
    /**
     * @return Name of the script file
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Resource type to which Metric Extension applies
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The current lifecycle state of the metric extension
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The current status of the metric extension i.e. whether it is Draft or Published
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetricExtensionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String enabledOnResourceId;
        private @Nullable List<GetMetricExtensionsFilter> filters;
        private String id;
        private List<GetMetricExtensionsMetricExtensionCollection> metricExtensionCollections;
        private @Nullable String metricExtensionId;
        private @Nullable String name;
        private @Nullable String resourceType;
        private @Nullable String state;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetMetricExtensionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.enabledOnResourceId = defaults.enabledOnResourceId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.metricExtensionCollections = defaults.metricExtensionCollections;
    	      this.metricExtensionId = defaults.metricExtensionId;
    	      this.name = defaults.name;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder enabledOnResourceId(@Nullable String enabledOnResourceId) {

            this.enabledOnResourceId = enabledOnResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetMetricExtensionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetMetricExtensionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMetricExtensionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metricExtensionCollections(List<GetMetricExtensionsMetricExtensionCollection> metricExtensionCollections) {
            if (metricExtensionCollections == null) {
              throw new MissingRequiredPropertyException("GetMetricExtensionsResult", "metricExtensionCollections");
            }
            this.metricExtensionCollections = metricExtensionCollections;
            return this;
        }
        public Builder metricExtensionCollections(GetMetricExtensionsMetricExtensionCollection... metricExtensionCollections) {
            return metricExtensionCollections(List.of(metricExtensionCollections));
        }
        @CustomType.Setter
        public Builder metricExtensionId(@Nullable String metricExtensionId) {

            this.metricExtensionId = metricExtensionId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetMetricExtensionsResult build() {
            final var _resultValue = new GetMetricExtensionsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.enabledOnResourceId = enabledOnResourceId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.metricExtensionCollections = metricExtensionCollections;
            _resultValue.metricExtensionId = metricExtensionId;
            _resultValue.name = name;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
