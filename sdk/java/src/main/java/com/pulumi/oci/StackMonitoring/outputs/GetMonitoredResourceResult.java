// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceAdditionalAlias;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceAdditionalCredential;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceAlias;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceCredential;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceDatabaseConnectionDetail;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceProperty;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMonitoredResourceResult {
    private List<GetMonitoredResourceAdditionalAlias> additionalAliases;
    private List<GetMonitoredResourceAdditionalCredential> additionalCredentials;
    /**
     * @return Monitored Resource Alias Credential Details
     * 
     */
    private List<GetMonitoredResourceAlias> aliases;
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return Monitored Resource Credential Details.
     * 
     */
    private List<GetMonitoredResourceCredential> credentials;
    /**
     * @return Connection details for the database.
     * 
     */
    private List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Monitored resource display name.
     * 
     */
    private String displayName;
    /**
     * @return The external resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). External resource is any Oracle Cloud Infrastructure resource which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     * 
     */
    private String externalId;
    private String externalResourceId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Monitored resource host name.
     * 
     */
    private String hostName;
    /**
     * @return Monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String id;
    /**
     * @return License edition of the monitored resource.
     * 
     */
    private String license;
    /**
     * @return Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String managementAgentId;
    private String monitoredResourceId;
    /**
     * @return Property Name.
     * 
     */
    private String name;
    /**
     * @return List of monitored resource properties.
     * 
     */
    private List<GetMonitoredResourceProperty> properties;
    /**
     * @return Resource Category to indicate the kind of resource type.
     * 
     */
    private String resourceCategory;
    /**
     * @return Time zone in the form of tz database canonical zone ID.
     * 
     */
    private String resourceTimeZone;
    /**
     * @return Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     * 
     */
    private String sourceType;
    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String tenantId;
    /**
     * @return The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    private String timeUpdated;
    /**
     * @return Monitored Resource Type.
     * 
     */
    private String type;

    private GetMonitoredResourceResult() {}
    public List<GetMonitoredResourceAdditionalAlias> additionalAliases() {
        return this.additionalAliases;
    }
    public List<GetMonitoredResourceAdditionalCredential> additionalCredentials() {
        return this.additionalCredentials;
    }
    /**
     * @return Monitored Resource Alias Credential Details
     * 
     */
    public List<GetMonitoredResourceAlias> aliases() {
        return this.aliases;
    }
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Monitored Resource Credential Details.
     * 
     */
    public List<GetMonitoredResourceCredential> credentials() {
        return this.credentials;
    }
    /**
     * @return Connection details for the database.
     * 
     */
    public List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails() {
        return this.databaseConnectionDetails;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Monitored resource display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The external resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). External resource is any Oracle Cloud Infrastructure resource which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    public String externalResourceId() {
        return this.externalResourceId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Monitored resource host name.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return Monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return License edition of the monitored resource.
     * 
     */
    public String license() {
        return this.license;
    }
    /**
     * @return Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }
    public String monitoredResourceId() {
        return this.monitoredResourceId;
    }
    /**
     * @return Property Name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of monitored resource properties.
     * 
     */
    public List<GetMonitoredResourceProperty> properties() {
        return this.properties;
    }
    /**
     * @return Resource Category to indicate the kind of resource type.
     * 
     */
    public String resourceCategory() {
        return this.resourceCategory;
    }
    /**
     * @return Time zone in the form of tz database canonical zone ID.
     * 
     */
    public String resourceTimeZone() {
        return this.resourceTimeZone;
    }
    /**
     * @return Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * @return The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Monitored Resource Type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitoredResourceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMonitoredResourceAdditionalAlias> additionalAliases;
        private List<GetMonitoredResourceAdditionalCredential> additionalCredentials;
        private List<GetMonitoredResourceAlias> aliases;
        private String compartmentId;
        private List<GetMonitoredResourceCredential> credentials;
        private List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails;
        private Map<String,String> definedTags;
        private String displayName;
        private String externalId;
        private String externalResourceId;
        private Map<String,String> freeformTags;
        private String hostName;
        private String id;
        private String license;
        private String managementAgentId;
        private String monitoredResourceId;
        private String name;
        private List<GetMonitoredResourceProperty> properties;
        private String resourceCategory;
        private String resourceTimeZone;
        private String sourceType;
        private String state;
        private Map<String,String> systemTags;
        private String tenantId;
        private String timeCreated;
        private String timeUpdated;
        private String type;
        public Builder() {}
        public Builder(GetMonitoredResourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalAliases = defaults.additionalAliases;
    	      this.additionalCredentials = defaults.additionalCredentials;
    	      this.aliases = defaults.aliases;
    	      this.compartmentId = defaults.compartmentId;
    	      this.credentials = defaults.credentials;
    	      this.databaseConnectionDetails = defaults.databaseConnectionDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.externalId = defaults.externalId;
    	      this.externalResourceId = defaults.externalResourceId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.license = defaults.license;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.monitoredResourceId = defaults.monitoredResourceId;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.resourceCategory = defaults.resourceCategory;
    	      this.resourceTimeZone = defaults.resourceTimeZone;
    	      this.sourceType = defaults.sourceType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.tenantId = defaults.tenantId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder additionalAliases(List<GetMonitoredResourceAdditionalAlias> additionalAliases) {
            if (additionalAliases == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "additionalAliases");
            }
            this.additionalAliases = additionalAliases;
            return this;
        }
        public Builder additionalAliases(GetMonitoredResourceAdditionalAlias... additionalAliases) {
            return additionalAliases(List.of(additionalAliases));
        }
        @CustomType.Setter
        public Builder additionalCredentials(List<GetMonitoredResourceAdditionalCredential> additionalCredentials) {
            if (additionalCredentials == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "additionalCredentials");
            }
            this.additionalCredentials = additionalCredentials;
            return this;
        }
        public Builder additionalCredentials(GetMonitoredResourceAdditionalCredential... additionalCredentials) {
            return additionalCredentials(List.of(additionalCredentials));
        }
        @CustomType.Setter
        public Builder aliases(List<GetMonitoredResourceAlias> aliases) {
            if (aliases == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "aliases");
            }
            this.aliases = aliases;
            return this;
        }
        public Builder aliases(GetMonitoredResourceAlias... aliases) {
            return aliases(List.of(aliases));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder credentials(List<GetMonitoredResourceCredential> credentials) {
            if (credentials == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "credentials");
            }
            this.credentials = credentials;
            return this;
        }
        public Builder credentials(GetMonitoredResourceCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder databaseConnectionDetails(List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails) {
            if (databaseConnectionDetails == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "databaseConnectionDetails");
            }
            this.databaseConnectionDetails = databaseConnectionDetails;
            return this;
        }
        public Builder databaseConnectionDetails(GetMonitoredResourceDatabaseConnectionDetail... databaseConnectionDetails) {
            return databaseConnectionDetails(List.of(databaseConnectionDetails));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder externalResourceId(String externalResourceId) {
            if (externalResourceId == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "externalResourceId");
            }
            this.externalResourceId = externalResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder license(String license) {
            if (license == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "license");
            }
            this.license = license;
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            if (managementAgentId == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "managementAgentId");
            }
            this.managementAgentId = managementAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder monitoredResourceId(String monitoredResourceId) {
            if (monitoredResourceId == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "monitoredResourceId");
            }
            this.monitoredResourceId = monitoredResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder properties(List<GetMonitoredResourceProperty> properties) {
            if (properties == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "properties");
            }
            this.properties = properties;
            return this;
        }
        public Builder properties(GetMonitoredResourceProperty... properties) {
            return properties(List.of(properties));
        }
        @CustomType.Setter
        public Builder resourceCategory(String resourceCategory) {
            if (resourceCategory == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "resourceCategory");
            }
            this.resourceCategory = resourceCategory;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTimeZone(String resourceTimeZone) {
            if (resourceTimeZone == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "resourceTimeZone");
            }
            this.resourceTimeZone = resourceTimeZone;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            if (tenantId == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "tenantId");
            }
            this.tenantId = tenantId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetMonitoredResourceResult build() {
            final var _resultValue = new GetMonitoredResourceResult();
            _resultValue.additionalAliases = additionalAliases;
            _resultValue.additionalCredentials = additionalCredentials;
            _resultValue.aliases = aliases;
            _resultValue.compartmentId = compartmentId;
            _resultValue.credentials = credentials;
            _resultValue.databaseConnectionDetails = databaseConnectionDetails;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.externalId = externalId;
            _resultValue.externalResourceId = externalResourceId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostName = hostName;
            _resultValue.id = id;
            _resultValue.license = license;
            _resultValue.managementAgentId = managementAgentId;
            _resultValue.monitoredResourceId = monitoredResourceId;
            _resultValue.name = name;
            _resultValue.properties = properties;
            _resultValue.resourceCategory = resourceCategory;
            _resultValue.resourceTimeZone = resourceTimeZone;
            _resultValue.sourceType = sourceType;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.tenantId = tenantId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
