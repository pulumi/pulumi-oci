// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationAvailabilityMetricsConfig;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationHandlerConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration {
    /**
     * @return Availability metrics details.
     * 
     */
    private List<GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationAvailabilityMetricsConfig> availabilityMetricsConfigs;
    /**
     * @return Specific resource mapping configurations for Agent Extension Handlers.
     * 
     */
    private List<GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationHandlerConfig> handlerConfigs;
    /**
     * @return Resource type.
     * 
     */
    private String resourceType;

    private GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration() {}
    /**
     * @return Availability metrics details.
     * 
     */
    public List<GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationAvailabilityMetricsConfig> availabilityMetricsConfigs() {
        return this.availabilityMetricsConfigs;
    }
    /**
     * @return Specific resource mapping configurations for Agent Extension Handlers.
     * 
     */
    public List<GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationHandlerConfig> handlerConfigs() {
        return this.handlerConfigs;
    }
    /**
     * @return Resource type.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationAvailabilityMetricsConfig> availabilityMetricsConfigs;
        private List<GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationHandlerConfig> handlerConfigs;
        private String resourceType;
        public Builder() {}
        public Builder(GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityMetricsConfigs = defaults.availabilityMetricsConfigs;
    	      this.handlerConfigs = defaults.handlerConfigs;
    	      this.resourceType = defaults.resourceType;
        }

        @CustomType.Setter
        public Builder availabilityMetricsConfigs(List<GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationAvailabilityMetricsConfig> availabilityMetricsConfigs) {
            if (availabilityMetricsConfigs == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration", "availabilityMetricsConfigs");
            }
            this.availabilityMetricsConfigs = availabilityMetricsConfigs;
            return this;
        }
        public Builder availabilityMetricsConfigs(GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationAvailabilityMetricsConfig... availabilityMetricsConfigs) {
            return availabilityMetricsConfigs(List.of(availabilityMetricsConfigs));
        }
        @CustomType.Setter
        public Builder handlerConfigs(List<GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationHandlerConfig> handlerConfigs) {
            if (handlerConfigs == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration", "handlerConfigs");
            }
            this.handlerConfigs = handlerConfigs;
            return this;
        }
        public Builder handlerConfigs(GetMonitoredResourceTaskTaskDetailResourceTypesConfigurationHandlerConfig... handlerConfigs) {
            return handlerConfigs(List.of(handlerConfigs));
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        public GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration build() {
            final var _resultValue = new GetMonitoredResourceTaskTaskDetailResourceTypesConfiguration();
            _resultValue.availabilityMetricsConfigs = availabilityMetricsConfigs;
            _resultValue.handlerConfigs = handlerConfigs;
            _resultValue.resourceType = resourceType;
            return _resultValue;
        }
    }
}
