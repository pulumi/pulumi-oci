// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceTypesFilter;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceTypesMonitoredResourceTypesCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMonitoredResourceTypesResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
     * 
     */
    private String compartmentId;
    private @Nullable List<String> excludeFields;
    private @Nullable List<String> fields;
    private @Nullable List<GetMonitoredResourceTypesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean isExcludeSystemTypes;
    /**
     * @return Metric namespace for resource type.
     * 
     */
    private @Nullable String metricNamespace;
    /**
     * @return The list of monitored_resource_types_collection.
     * 
     */
    private List<GetMonitoredResourceTypesMonitoredResourceTypesCollection> monitoredResourceTypesCollections;
    /**
     * @return A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
     * 
     */
    private @Nullable String name;
    private @Nullable String status;

    private GetMonitoredResourceTypesResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<String> excludeFields() {
        return this.excludeFields == null ? List.of() : this.excludeFields;
    }
    public List<String> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    public List<GetMonitoredResourceTypesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> isExcludeSystemTypes() {
        return Optional.ofNullable(this.isExcludeSystemTypes);
    }
    /**
     * @return Metric namespace for resource type.
     * 
     */
    public Optional<String> metricNamespace() {
        return Optional.ofNullable(this.metricNamespace);
    }
    /**
     * @return The list of monitored_resource_types_collection.
     * 
     */
    public List<GetMonitoredResourceTypesMonitoredResourceTypesCollection> monitoredResourceTypesCollections() {
        return this.monitoredResourceTypesCollections;
    }
    /**
     * @return A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitoredResourceTypesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<String> excludeFields;
        private @Nullable List<String> fields;
        private @Nullable List<GetMonitoredResourceTypesFilter> filters;
        private String id;
        private @Nullable Boolean isExcludeSystemTypes;
        private @Nullable String metricNamespace;
        private List<GetMonitoredResourceTypesMonitoredResourceTypesCollection> monitoredResourceTypesCollections;
        private @Nullable String name;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetMonitoredResourceTypesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.excludeFields = defaults.excludeFields;
    	      this.fields = defaults.fields;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isExcludeSystemTypes = defaults.isExcludeSystemTypes;
    	      this.metricNamespace = defaults.metricNamespace;
    	      this.monitoredResourceTypesCollections = defaults.monitoredResourceTypesCollections;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder excludeFields(@Nullable List<String> excludeFields) {
            this.excludeFields = excludeFields;
            return this;
        }
        public Builder excludeFields(String... excludeFields) {
            return excludeFields(List.of(excludeFields));
        }
        @CustomType.Setter
        public Builder fields(@Nullable List<String> fields) {
            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetMonitoredResourceTypesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMonitoredResourceTypesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isExcludeSystemTypes(@Nullable Boolean isExcludeSystemTypes) {
            this.isExcludeSystemTypes = isExcludeSystemTypes;
            return this;
        }
        @CustomType.Setter
        public Builder metricNamespace(@Nullable String metricNamespace) {
            this.metricNamespace = metricNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder monitoredResourceTypesCollections(List<GetMonitoredResourceTypesMonitoredResourceTypesCollection> monitoredResourceTypesCollections) {
            this.monitoredResourceTypesCollections = Objects.requireNonNull(monitoredResourceTypesCollections);
            return this;
        }
        public Builder monitoredResourceTypesCollections(GetMonitoredResourceTypesMonitoredResourceTypesCollection... monitoredResourceTypesCollections) {
            return monitoredResourceTypesCollections(List.of(monitoredResourceTypesCollections));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public GetMonitoredResourceTypesResult build() {
            final var o = new GetMonitoredResourceTypesResult();
            o.compartmentId = compartmentId;
            o.excludeFields = excludeFields;
            o.fields = fields;
            o.filters = filters;
            o.id = id;
            o.isExcludeSystemTypes = isExcludeSystemTypes;
            o.metricNamespace = metricNamespace;
            o.monitoredResourceTypesCollections = monitoredResourceTypesCollections;
            o.name = name;
            o.status = status;
            return o;
        }
    }
}
