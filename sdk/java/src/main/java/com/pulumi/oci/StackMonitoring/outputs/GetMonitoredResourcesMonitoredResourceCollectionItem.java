// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalAlias;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalCredential;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourcesMonitoredResourceCollectionItemAlias;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourcesMonitoredResourceCollectionItemCredential;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourcesMonitoredResourceCollectionItemDatabaseConnectionDetail;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourcesMonitoredResourceCollectionItemProperty;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMonitoredResourcesMonitoredResourceCollectionItem {
    private List<GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalAlias> additionalAliases;
    private List<GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalCredential> additionalCredentials;
    /**
     * @return Monitored Resource Alias Credential Details
     * 
     */
    private List<GetMonitoredResourcesMonitoredResourceCollectionItemAlias> aliases;
    /**
     * @return The ID of the compartment in which data is listed.
     * 
     */
    private String compartmentId;
    /**
     * @return Monitored Resource Credential Details.
     * 
     */
    private List<GetMonitoredResourcesMonitoredResourceCollectionItemCredential> credentials;
    /**
     * @return Connection details for the database.
     * 
     */
    private List<GetMonitoredResourcesMonitoredResourceCollectionItemDatabaseConnectionDetail> databaseConnectionDetails;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Monitored resource display name.
     * 
     */
    private String displayName;
    /**
     * @return The external resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). External resource is any Oracle Cloud Infrastructure resource which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     * 
     */
    private String externalId;
    private String externalResourceId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Monitored resource host name.
     * 
     */
    private String hostName;
    /**
     * @return Monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String id;
    private String license;
    /**
     * @return Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String managementAgentId;
    /**
     * @return A filter to return resources that match exact resource name.
     * 
     */
    private String name;
    /**
     * @return List of monitored resource properties.
     * 
     */
    private List<GetMonitoredResourcesMonitoredResourceCollectionItemProperty> properties;
    /**
     * @return Time zone in the form of tz database canonical zone ID.
     * 
     */
    private String resourceTimeZone;
    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String tenantId;
    /**
     * @return The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    private String timeUpdated;
    /**
     * @return Monitored Resource Type.
     * 
     */
    private String type;

    private GetMonitoredResourcesMonitoredResourceCollectionItem() {}
    public List<GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalAlias> additionalAliases() {
        return this.additionalAliases;
    }
    public List<GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalCredential> additionalCredentials() {
        return this.additionalCredentials;
    }
    /**
     * @return Monitored Resource Alias Credential Details
     * 
     */
    public List<GetMonitoredResourcesMonitoredResourceCollectionItemAlias> aliases() {
        return this.aliases;
    }
    /**
     * @return The ID of the compartment in which data is listed.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Monitored Resource Credential Details.
     * 
     */
    public List<GetMonitoredResourcesMonitoredResourceCollectionItemCredential> credentials() {
        return this.credentials;
    }
    /**
     * @return Connection details for the database.
     * 
     */
    public List<GetMonitoredResourcesMonitoredResourceCollectionItemDatabaseConnectionDetail> databaseConnectionDetails() {
        return this.databaseConnectionDetails;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Monitored resource display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The external resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). External resource is any Oracle Cloud Infrastructure resource which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    public String externalResourceId() {
        return this.externalResourceId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Monitored resource host name.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return Monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String id() {
        return this.id;
    }
    public String license() {
        return this.license;
    }
    /**
     * @return Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * @return A filter to return resources that match exact resource name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of monitored resource properties.
     * 
     */
    public List<GetMonitoredResourcesMonitoredResourceCollectionItemProperty> properties() {
        return this.properties;
    }
    /**
     * @return Time zone in the form of tz database canonical zone ID.
     * 
     */
    public String resourceTimeZone() {
        return this.resourceTimeZone;
    }
    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * @return The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Monitored Resource Type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitoredResourcesMonitoredResourceCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalAlias> additionalAliases;
        private List<GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalCredential> additionalCredentials;
        private List<GetMonitoredResourcesMonitoredResourceCollectionItemAlias> aliases;
        private String compartmentId;
        private List<GetMonitoredResourcesMonitoredResourceCollectionItemCredential> credentials;
        private List<GetMonitoredResourcesMonitoredResourceCollectionItemDatabaseConnectionDetail> databaseConnectionDetails;
        private Map<String,Object> definedTags;
        private String displayName;
        private String externalId;
        private String externalResourceId;
        private Map<String,Object> freeformTags;
        private String hostName;
        private String id;
        private String license;
        private String managementAgentId;
        private String name;
        private List<GetMonitoredResourcesMonitoredResourceCollectionItemProperty> properties;
        private String resourceTimeZone;
        private String state;
        private Map<String,Object> systemTags;
        private String tenantId;
        private String timeCreated;
        private String timeUpdated;
        private String type;
        public Builder() {}
        public Builder(GetMonitoredResourcesMonitoredResourceCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalAliases = defaults.additionalAliases;
    	      this.additionalCredentials = defaults.additionalCredentials;
    	      this.aliases = defaults.aliases;
    	      this.compartmentId = defaults.compartmentId;
    	      this.credentials = defaults.credentials;
    	      this.databaseConnectionDetails = defaults.databaseConnectionDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.externalId = defaults.externalId;
    	      this.externalResourceId = defaults.externalResourceId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.license = defaults.license;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.resourceTimeZone = defaults.resourceTimeZone;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.tenantId = defaults.tenantId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder additionalAliases(List<GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalAlias> additionalAliases) {
            this.additionalAliases = Objects.requireNonNull(additionalAliases);
            return this;
        }
        public Builder additionalAliases(GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalAlias... additionalAliases) {
            return additionalAliases(List.of(additionalAliases));
        }
        @CustomType.Setter
        public Builder additionalCredentials(List<GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalCredential> additionalCredentials) {
            this.additionalCredentials = Objects.requireNonNull(additionalCredentials);
            return this;
        }
        public Builder additionalCredentials(GetMonitoredResourcesMonitoredResourceCollectionItemAdditionalCredential... additionalCredentials) {
            return additionalCredentials(List.of(additionalCredentials));
        }
        @CustomType.Setter
        public Builder aliases(List<GetMonitoredResourcesMonitoredResourceCollectionItemAlias> aliases) {
            this.aliases = Objects.requireNonNull(aliases);
            return this;
        }
        public Builder aliases(GetMonitoredResourcesMonitoredResourceCollectionItemAlias... aliases) {
            return aliases(List.of(aliases));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder credentials(List<GetMonitoredResourcesMonitoredResourceCollectionItemCredential> credentials) {
            this.credentials = Objects.requireNonNull(credentials);
            return this;
        }
        public Builder credentials(GetMonitoredResourcesMonitoredResourceCollectionItemCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder databaseConnectionDetails(List<GetMonitoredResourcesMonitoredResourceCollectionItemDatabaseConnectionDetail> databaseConnectionDetails) {
            this.databaseConnectionDetails = Objects.requireNonNull(databaseConnectionDetails);
            return this;
        }
        public Builder databaseConnectionDetails(GetMonitoredResourcesMonitoredResourceCollectionItemDatabaseConnectionDetail... databaseConnectionDetails) {
            return databaseConnectionDetails(List.of(databaseConnectionDetails));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }
        @CustomType.Setter
        public Builder externalResourceId(String externalResourceId) {
            this.externalResourceId = Objects.requireNonNull(externalResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder license(String license) {
            this.license = Objects.requireNonNull(license);
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            this.managementAgentId = Objects.requireNonNull(managementAgentId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder properties(List<GetMonitoredResourcesMonitoredResourceCollectionItemProperty> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        public Builder properties(GetMonitoredResourcesMonitoredResourceCollectionItemProperty... properties) {
            return properties(List.of(properties));
        }
        @CustomType.Setter
        public Builder resourceTimeZone(String resourceTimeZone) {
            this.resourceTimeZone = Objects.requireNonNull(resourceTimeZone);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetMonitoredResourcesMonitoredResourceCollectionItem build() {
            final var o = new GetMonitoredResourcesMonitoredResourceCollectionItem();
            o.additionalAliases = additionalAliases;
            o.additionalCredentials = additionalCredentials;
            o.aliases = aliases;
            o.compartmentId = compartmentId;
            o.credentials = credentials;
            o.databaseConnectionDetails = databaseConnectionDetails;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.externalId = externalId;
            o.externalResourceId = externalResourceId;
            o.freeformTags = freeformTags;
            o.hostName = hostName;
            o.id = id;
            o.license = license;
            o.managementAgentId = managementAgentId;
            o.name = name;
            o.properties = properties;
            o.resourceTimeZone = resourceTimeZone;
            o.state = state;
            o.systemTags = systemTags;
            o.tenantId = tenantId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.type = type;
            return o;
        }
    }
}
