// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItemCondition;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem {
    /**
     * @return The OCID of the composite resource type like EBS/PEOPLE_SOFT.
     * 
     */
    private String compositeType;
    /**
     * @return Type of defined monitoring template.
     * 
     */
    private String conditionType;
    /**
     * @return Monitoring template conditions
     * 
     */
    private List<GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItemCondition> conditions;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Alarm Condition.
     * 
     */
    private String id;
    /**
     * @return metricName filter.
     * 
     */
    private String metricName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     * 
     */
    private String monitoringTemplateId;
    /**
     * @return The stack monitoring service or application emitting the metric that is evaluated by the alarm.
     * 
     */
    private String namespace;
    /**
     * @return The resource type OCID.
     * 
     */
    private String resourceType;
    /**
     * @return A filter to return alarm condition based on Lifecycle State.
     * 
     */
    private String state;
    /**
     * @return A filter to return alarm condition based on input status.
     * 
     */
    private String status;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the alarm condition was created. Format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the alarm condition was updated. Format defined by RFC3339.
     * 
     */
    private String timeUpdated;

    private GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem() {}
    /**
     * @return The OCID of the composite resource type like EBS/PEOPLE_SOFT.
     * 
     */
    public String compositeType() {
        return this.compositeType;
    }
    /**
     * @return Type of defined monitoring template.
     * 
     */
    public String conditionType() {
        return this.conditionType;
    }
    /**
     * @return Monitoring template conditions
     * 
     */
    public List<GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItemCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Alarm Condition.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return metricName filter.
     * 
     */
    public String metricName() {
        return this.metricName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     * 
     */
    public String monitoringTemplateId() {
        return this.monitoringTemplateId;
    }
    /**
     * @return The stack monitoring service or application emitting the metric that is evaluated by the alarm.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The resource type OCID.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return A filter to return alarm condition based on Lifecycle State.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return A filter to return alarm condition based on input status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the alarm condition was created. Format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the alarm condition was updated. Format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compositeType;
        private String conditionType;
        private List<GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItemCondition> conditions;
        private Map<String,String> definedTags;
        private Map<String,String> freeformTags;
        private String id;
        private String metricName;
        private String monitoringTemplateId;
        private String namespace;
        private String resourceType;
        private String state;
        private String status;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compositeType = defaults.compositeType;
    	      this.conditionType = defaults.conditionType;
    	      this.conditions = defaults.conditions;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.metricName = defaults.metricName;
    	      this.monitoringTemplateId = defaults.monitoringTemplateId;
    	      this.namespace = defaults.namespace;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compositeType(String compositeType) {
            if (compositeType == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "compositeType");
            }
            this.compositeType = compositeType;
            return this;
        }
        @CustomType.Setter
        public Builder conditionType(String conditionType) {
            if (conditionType == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "conditionType");
            }
            this.conditionType = conditionType;
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItemCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItemCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metricName(String metricName) {
            if (metricName == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "metricName");
            }
            this.metricName = metricName;
            return this;
        }
        @CustomType.Setter
        public Builder monitoringTemplateId(String monitoringTemplateId) {
            if (monitoringTemplateId == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "monitoringTemplateId");
            }
            this.monitoringTemplateId = monitoringTemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem build() {
            final var _resultValue = new GetMonitoringTemplateAlarmConditionsAlarmConditionCollectionItem();
            _resultValue.compositeType = compositeType;
            _resultValue.conditionType = conditionType;
            _resultValue.conditions = conditions;
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.metricName = metricName;
            _resultValue.monitoringTemplateId = monitoringTemplateId;
            _resultValue.namespace = namespace;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
