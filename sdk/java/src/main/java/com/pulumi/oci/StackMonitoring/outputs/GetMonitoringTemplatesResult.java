// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoringTemplatesFilter;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoringTemplatesMonitoringTemplateCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMonitoringTemplatesResult {
    /**
     * @return The OCID of the compartment containing the monitoringTemplate.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return A user-friendly name for the monitoring template. It should be unique, and it&#39;s mutable in nature. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetMonitoringTemplatesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable List<String> metricNames;
    /**
     * @return The list of monitoring_template_collection.
     * 
     */
    private List<GetMonitoringTemplatesMonitoringTemplateCollection> monitoringTemplateCollections;
    private @Nullable String monitoringTemplateId;
    private @Nullable List<String> namespaces;
    private @Nullable List<String> resourceTypes;
    /**
     * @return The current lifecycle state of the monitoring template.
     * 
     */
    private @Nullable String state;
    /**
     * @return The current status of the monitoring template i.e. whether it is Applied or NotApplied.
     * 
     */
    private @Nullable String status;

    private GetMonitoringTemplatesResult() {}
    /**
     * @return The OCID of the compartment containing the monitoringTemplate.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A user-friendly name for the monitoring template. It should be unique, and it&#39;s mutable in nature. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetMonitoringTemplatesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> metricNames() {
        return this.metricNames == null ? List.of() : this.metricNames;
    }
    /**
     * @return The list of monitoring_template_collection.
     * 
     */
    public List<GetMonitoringTemplatesMonitoringTemplateCollection> monitoringTemplateCollections() {
        return this.monitoringTemplateCollections;
    }
    public Optional<String> monitoringTemplateId() {
        return Optional.ofNullable(this.monitoringTemplateId);
    }
    public List<String> namespaces() {
        return this.namespaces == null ? List.of() : this.namespaces;
    }
    public List<String> resourceTypes() {
        return this.resourceTypes == null ? List.of() : this.resourceTypes;
    }
    /**
     * @return The current lifecycle state of the monitoring template.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The current status of the monitoring template i.e. whether it is Applied or NotApplied.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitoringTemplatesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetMonitoringTemplatesFilter> filters;
        private String id;
        private @Nullable List<String> metricNames;
        private List<GetMonitoringTemplatesMonitoringTemplateCollection> monitoringTemplateCollections;
        private @Nullable String monitoringTemplateId;
        private @Nullable List<String> namespaces;
        private @Nullable List<String> resourceTypes;
        private @Nullable String state;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetMonitoringTemplatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.metricNames = defaults.metricNames;
    	      this.monitoringTemplateCollections = defaults.monitoringTemplateCollections;
    	      this.monitoringTemplateId = defaults.monitoringTemplateId;
    	      this.namespaces = defaults.namespaces;
    	      this.resourceTypes = defaults.resourceTypes;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetMonitoringTemplatesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetMonitoringTemplatesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplatesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metricNames(@Nullable List<String> metricNames) {

            this.metricNames = metricNames;
            return this;
        }
        public Builder metricNames(String... metricNames) {
            return metricNames(List.of(metricNames));
        }
        @CustomType.Setter
        public Builder monitoringTemplateCollections(List<GetMonitoringTemplatesMonitoringTemplateCollection> monitoringTemplateCollections) {
            if (monitoringTemplateCollections == null) {
              throw new MissingRequiredPropertyException("GetMonitoringTemplatesResult", "monitoringTemplateCollections");
            }
            this.monitoringTemplateCollections = monitoringTemplateCollections;
            return this;
        }
        public Builder monitoringTemplateCollections(GetMonitoringTemplatesMonitoringTemplateCollection... monitoringTemplateCollections) {
            return monitoringTemplateCollections(List.of(monitoringTemplateCollections));
        }
        @CustomType.Setter
        public Builder monitoringTemplateId(@Nullable String monitoringTemplateId) {

            this.monitoringTemplateId = monitoringTemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder namespaces(@Nullable List<String> namespaces) {

            this.namespaces = namespaces;
            return this;
        }
        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }
        @CustomType.Setter
        public Builder resourceTypes(@Nullable List<String> resourceTypes) {

            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public GetMonitoringTemplatesResult build() {
            final var _resultValue = new GetMonitoringTemplatesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.metricNames = metricNames;
            _resultValue.monitoringTemplateCollections = monitoringTemplateCollections;
            _resultValue.monitoringTemplateId = monitoringTemplateId;
            _resultValue.namespaces = namespaces;
            _resultValue.resourceTypes = resourceTypes;
            _resultValue.state = state;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
