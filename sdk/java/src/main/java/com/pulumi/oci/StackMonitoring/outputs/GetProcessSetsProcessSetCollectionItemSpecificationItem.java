// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProcessSetsProcessSetCollectionItemSpecificationItem {
    /**
     * @return Optional label used to identify a single filter.
     * 
     */
    private String label;
    /**
     * @return String literal used for exact matching on process name.
     * 
     */
    private String processCommand;
    /**
     * @return Regex pattern matching on process arguments.
     * 
     */
    private String processLineRegexPattern;
    /**
     * @return String literal used for exact matching on process user.
     * 
     */
    private String processUser;

    private GetProcessSetsProcessSetCollectionItemSpecificationItem() {}
    /**
     * @return Optional label used to identify a single filter.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return String literal used for exact matching on process name.
     * 
     */
    public String processCommand() {
        return this.processCommand;
    }
    /**
     * @return Regex pattern matching on process arguments.
     * 
     */
    public String processLineRegexPattern() {
        return this.processLineRegexPattern;
    }
    /**
     * @return String literal used for exact matching on process user.
     * 
     */
    public String processUser() {
        return this.processUser;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProcessSetsProcessSetCollectionItemSpecificationItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String label;
        private String processCommand;
        private String processLineRegexPattern;
        private String processUser;
        public Builder() {}
        public Builder(GetProcessSetsProcessSetCollectionItemSpecificationItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.label = defaults.label;
    	      this.processCommand = defaults.processCommand;
    	      this.processLineRegexPattern = defaults.processLineRegexPattern;
    	      this.processUser = defaults.processUser;
        }

        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("GetProcessSetsProcessSetCollectionItemSpecificationItem", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder processCommand(String processCommand) {
            if (processCommand == null) {
              throw new MissingRequiredPropertyException("GetProcessSetsProcessSetCollectionItemSpecificationItem", "processCommand");
            }
            this.processCommand = processCommand;
            return this;
        }
        @CustomType.Setter
        public Builder processLineRegexPattern(String processLineRegexPattern) {
            if (processLineRegexPattern == null) {
              throw new MissingRequiredPropertyException("GetProcessSetsProcessSetCollectionItemSpecificationItem", "processLineRegexPattern");
            }
            this.processLineRegexPattern = processLineRegexPattern;
            return this;
        }
        @CustomType.Setter
        public Builder processUser(String processUser) {
            if (processUser == null) {
              throw new MissingRequiredPropertyException("GetProcessSetsProcessSetCollectionItemSpecificationItem", "processUser");
            }
            this.processUser = processUser;
            return this;
        }
        public GetProcessSetsProcessSetCollectionItemSpecificationItem build() {
            final var _resultValue = new GetProcessSetsProcessSetCollectionItemSpecificationItem();
            _resultValue.label = label;
            _resultValue.processCommand = processCommand;
            _resultValue.processLineRegexPattern = processLineRegexPattern;
            _resultValue.processUser = processUser;
            return _resultValue;
        }
    }
}
