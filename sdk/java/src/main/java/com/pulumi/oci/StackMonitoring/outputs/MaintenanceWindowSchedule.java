// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MaintenanceWindowSchedule {
    /**
     * @return (Updatable) Duration time of each recurrence of each Maintenance Window. It must be specified as a string in ISO 8601 extended format.
     * 
     */
    private @Nullable String maintenanceWindowDuration;
    /**
     * @return (Updatable) A RFC5545 formatted recurrence string which represents the Maintenance Window Recurrence. Please refer this for details:https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 FREQ: Frequency of the Maintenance Window. The supported values are: DAILY and WEEKLY. BYDAY: Comma separated days for Weekly Maintenance Window. BYHOUR: Specifies the start hour of each recurrence after `timeMaintenanceWindowStart` value. BYMINUTE: Specifies the start minute of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 BYSECOND: Specifies the start second of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 Other Rules are not supported.
     * 
     */
    private @Nullable String maintenanceWindowRecurrences;
    /**
     * @return (Updatable) Property to identify the type of the Maintenance Window.
     * 
     */
    private String scheduleType;
    /**
     * @return (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeMaintenanceWindowEnd;
    /**
     * @return (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable String timeMaintenanceWindowStart;

    private MaintenanceWindowSchedule() {}
    /**
     * @return (Updatable) Duration time of each recurrence of each Maintenance Window. It must be specified as a string in ISO 8601 extended format.
     * 
     */
    public Optional<String> maintenanceWindowDuration() {
        return Optional.ofNullable(this.maintenanceWindowDuration);
    }
    /**
     * @return (Updatable) A RFC5545 formatted recurrence string which represents the Maintenance Window Recurrence. Please refer this for details:https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 FREQ: Frequency of the Maintenance Window. The supported values are: DAILY and WEEKLY. BYDAY: Comma separated days for Weekly Maintenance Window. BYHOUR: Specifies the start hour of each recurrence after `timeMaintenanceWindowStart` value. BYMINUTE: Specifies the start minute of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 BYSECOND: Specifies the start second of each reccurrence after `timeMaintenanceWindowStart` value. The default value is 00 Other Rules are not supported.
     * 
     */
    public Optional<String> maintenanceWindowRecurrences() {
        return Optional.ofNullable(this.maintenanceWindowRecurrences);
    }
    /**
     * @return (Updatable) Property to identify the type of the Maintenance Window.
     * 
     */
    public String scheduleType() {
        return this.scheduleType;
    }
    /**
     * @return (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeMaintenanceWindowEnd() {
        return Optional.ofNullable(this.timeMaintenanceWindowEnd);
    }
    /**
     * @return (Updatable) Start time of Maintenance window. A RFC3339 formatted datetime string
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<String> timeMaintenanceWindowStart() {
        return Optional.ofNullable(this.timeMaintenanceWindowStart);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MaintenanceWindowSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String maintenanceWindowDuration;
        private @Nullable String maintenanceWindowRecurrences;
        private String scheduleType;
        private @Nullable String timeMaintenanceWindowEnd;
        private @Nullable String timeMaintenanceWindowStart;
        public Builder() {}
        public Builder(MaintenanceWindowSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maintenanceWindowDuration = defaults.maintenanceWindowDuration;
    	      this.maintenanceWindowRecurrences = defaults.maintenanceWindowRecurrences;
    	      this.scheduleType = defaults.scheduleType;
    	      this.timeMaintenanceWindowEnd = defaults.timeMaintenanceWindowEnd;
    	      this.timeMaintenanceWindowStart = defaults.timeMaintenanceWindowStart;
        }

        @CustomType.Setter
        public Builder maintenanceWindowDuration(@Nullable String maintenanceWindowDuration) {

            this.maintenanceWindowDuration = maintenanceWindowDuration;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindowRecurrences(@Nullable String maintenanceWindowRecurrences) {

            this.maintenanceWindowRecurrences = maintenanceWindowRecurrences;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleType(String scheduleType) {
            if (scheduleType == null) {
              throw new MissingRequiredPropertyException("MaintenanceWindowSchedule", "scheduleType");
            }
            this.scheduleType = scheduleType;
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceWindowEnd(@Nullable String timeMaintenanceWindowEnd) {

            this.timeMaintenanceWindowEnd = timeMaintenanceWindowEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceWindowStart(@Nullable String timeMaintenanceWindowStart) {

            this.timeMaintenanceWindowStart = timeMaintenanceWindowStart;
            return this;
        }
        public MaintenanceWindowSchedule build() {
            final var _resultValue = new MaintenanceWindowSchedule();
            _resultValue.maintenanceWindowDuration = maintenanceWindowDuration;
            _resultValue.maintenanceWindowRecurrences = maintenanceWindowRecurrences;
            _resultValue.scheduleType = scheduleType;
            _resultValue.timeMaintenanceWindowEnd = timeMaintenanceWindowEnd;
            _resultValue.timeMaintenanceWindowStart = timeMaintenanceWindowStart;
            return _resultValue;
        }
    }
}
