// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceAdditionalCredentialProperty;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredResourceAdditionalCredential {
    /**
     * @return (Updatable) Type of credentials specified in the credentials element. Three possible values - EXISTING, PLAINTEXT and ENCRYPTED.
     * * EXISTING  - Credential is already stored in agent and only credential name need to be passed for existing credential.
     * * PLAINTEXT - The credential properties will have credentials in plain text format.
     * * ENCRYPTED - The credential properties will have credentials stored in vault in encrypted format using KMS client which uses master key for encryption. The same master key will be used to decrypt the credentials before passing on to the management agent.
     * 
     */
    private @Nullable String credentialType;
    /**
     * @return (Updatable) The user-specified textual description of the credential.
     * 
     */
    private @Nullable String description;
    /**
     * @return (Updatable) The master key should be created in Oracle Cloud Infrastructure Vault owned by the client of this API.  The user should have permission to access the vault key.
     * 
     */
    private @Nullable String keyId;
    /**
     * @return (Updatable) The name of the credential, within the context of the source.
     * 
     */
    private @Nullable String name;
    /**
     * @return (Updatable) The credential properties list. Credential property values will be either  in plain text format or encrypted for encrypted credentials.
     * 
     */
    private @Nullable List<MonitoredResourceAdditionalCredentialProperty> properties;
    /**
     * @return (Updatable) The source type and source name combination, delimited with (.) separator. {source type}.{source name} and source type max char limit is 63.
     * 
     */
    private @Nullable String source;
    /**
     * @return (Updatable) The type of the credential ( ex. JMXCreds,DBCreds).
     * 
     */
    private @Nullable String type;

    private MonitoredResourceAdditionalCredential() {}
    /**
     * @return (Updatable) Type of credentials specified in the credentials element. Three possible values - EXISTING, PLAINTEXT and ENCRYPTED.
     * * EXISTING  - Credential is already stored in agent and only credential name need to be passed for existing credential.
     * * PLAINTEXT - The credential properties will have credentials in plain text format.
     * * ENCRYPTED - The credential properties will have credentials stored in vault in encrypted format using KMS client which uses master key for encryption. The same master key will be used to decrypt the credentials before passing on to the management agent.
     * 
     */
    public Optional<String> credentialType() {
        return Optional.ofNullable(this.credentialType);
    }
    /**
     * @return (Updatable) The user-specified textual description of the credential.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return (Updatable) The master key should be created in Oracle Cloud Infrastructure Vault owned by the client of this API.  The user should have permission to access the vault key.
     * 
     */
    public Optional<String> keyId() {
        return Optional.ofNullable(this.keyId);
    }
    /**
     * @return (Updatable) The name of the credential, within the context of the source.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (Updatable) The credential properties list. Credential property values will be either  in plain text format or encrypted for encrypted credentials.
     * 
     */
    public List<MonitoredResourceAdditionalCredentialProperty> properties() {
        return this.properties == null ? List.of() : this.properties;
    }
    /**
     * @return (Updatable) The source type and source name combination, delimited with (.) separator. {source type}.{source name} and source type max char limit is 63.
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return (Updatable) The type of the credential ( ex. JMXCreds,DBCreds).
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredResourceAdditionalCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String credentialType;
        private @Nullable String description;
        private @Nullable String keyId;
        private @Nullable String name;
        private @Nullable List<MonitoredResourceAdditionalCredentialProperty> properties;
        private @Nullable String source;
        private @Nullable String type;
        public Builder() {}
        public Builder(MonitoredResourceAdditionalCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialType = defaults.credentialType;
    	      this.description = defaults.description;
    	      this.keyId = defaults.keyId;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.source = defaults.source;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder credentialType(@Nullable String credentialType) {

            this.credentialType = credentialType;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(@Nullable String keyId) {

            this.keyId = keyId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder properties(@Nullable List<MonitoredResourceAdditionalCredentialProperty> properties) {

            this.properties = properties;
            return this;
        }
        public Builder properties(MonitoredResourceAdditionalCredentialProperty... properties) {
            return properties(List.of(properties));
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public MonitoredResourceAdditionalCredential build() {
            final var _resultValue = new MonitoredResourceAdditionalCredential();
            _resultValue.credentialType = credentialType;
            _resultValue.description = description;
            _resultValue.keyId = keyId;
            _resultValue.name = name;
            _resultValue.properties = properties;
            _resultValue.source = source;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
