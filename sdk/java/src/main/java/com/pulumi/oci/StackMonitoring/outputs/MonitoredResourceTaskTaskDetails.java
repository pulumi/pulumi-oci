// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredResourceTaskTaskDetails {
    /**
     * @return Metrics collection interval in seconds used when calculating the availability of the  resource based on metrics specified using the property &#39;availabilityProxyMetrics&#39;.
     * 
     */
    private @Nullable Integer availabilityProxyMetricCollectionInterval;
    /**
     * @return List of metrics to be used to calculate the availability of the resource. Resource is considered to be up if at least one of the specified metrics is available for  the resource during the specified interval using the property  &#39;availabilityProxyMetricCollectionIntervalInSeconds&#39;. If no metrics are specified, availability will not be calculated for the resource.
     * 
     */
    private @Nullable List<String> availabilityProxyMetrics;
    /**
     * @return Name space to be used for Oracle Cloud Infrastructure Native service resources discovery.
     * 
     */
    private String namespace;
    /**
     * @return The resource group to use while fetching metrics from telemetry. If not specified, resource group will be skipped in the list metrics request.
     * 
     */
    private @Nullable String resourceGroup;
    /**
     * @return Source from where the metrics pushed to telemetry. Possible values:
     * * OCI_TELEMETRY_NATIVE      - The metrics are pushed to telemetry from Oracle Cloud Infrastructure Native Services.
     * * OCI_TELEMETRY_PROMETHEUS  - The metrics are pushed to telemetry from Prometheus.
     * 
     */
    private String source;
    /**
     * @return Task type.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private String type;

    private MonitoredResourceTaskTaskDetails() {}
    /**
     * @return Metrics collection interval in seconds used when calculating the availability of the  resource based on metrics specified using the property &#39;availabilityProxyMetrics&#39;.
     * 
     */
    public Optional<Integer> availabilityProxyMetricCollectionInterval() {
        return Optional.ofNullable(this.availabilityProxyMetricCollectionInterval);
    }
    /**
     * @return List of metrics to be used to calculate the availability of the resource. Resource is considered to be up if at least one of the specified metrics is available for  the resource during the specified interval using the property  &#39;availabilityProxyMetricCollectionIntervalInSeconds&#39;. If no metrics are specified, availability will not be calculated for the resource.
     * 
     */
    public List<String> availabilityProxyMetrics() {
        return this.availabilityProxyMetrics == null ? List.of() : this.availabilityProxyMetrics;
    }
    /**
     * @return Name space to be used for Oracle Cloud Infrastructure Native service resources discovery.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The resource group to use while fetching metrics from telemetry. If not specified, resource group will be skipped in the list metrics request.
     * 
     */
    public Optional<String> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }
    /**
     * @return Source from where the metrics pushed to telemetry. Possible values:
     * * OCI_TELEMETRY_NATIVE      - The metrics are pushed to telemetry from Oracle Cloud Infrastructure Native Services.
     * * OCI_TELEMETRY_PROMETHEUS  - The metrics are pushed to telemetry from Prometheus.
     * 
     */
    public String source() {
        return this.source;
    }
    /**
     * @return Task type.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredResourceTaskTaskDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer availabilityProxyMetricCollectionInterval;
        private @Nullable List<String> availabilityProxyMetrics;
        private String namespace;
        private @Nullable String resourceGroup;
        private String source;
        private String type;
        public Builder() {}
        public Builder(MonitoredResourceTaskTaskDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityProxyMetricCollectionInterval = defaults.availabilityProxyMetricCollectionInterval;
    	      this.availabilityProxyMetrics = defaults.availabilityProxyMetrics;
    	      this.namespace = defaults.namespace;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.source = defaults.source;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder availabilityProxyMetricCollectionInterval(@Nullable Integer availabilityProxyMetricCollectionInterval) {

            this.availabilityProxyMetricCollectionInterval = availabilityProxyMetricCollectionInterval;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityProxyMetrics(@Nullable List<String> availabilityProxyMetrics) {

            this.availabilityProxyMetrics = availabilityProxyMetrics;
            return this;
        }
        public Builder availabilityProxyMetrics(String... availabilityProxyMetrics) {
            return availabilityProxyMetrics(List.of(availabilityProxyMetrics));
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("MonitoredResourceTaskTaskDetails", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(@Nullable String resourceGroup) {

            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("MonitoredResourceTaskTaskDetails", "source");
            }
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("MonitoredResourceTaskTaskDetails", "type");
            }
            this.type = type;
            return this;
        }
        public MonitoredResourceTaskTaskDetails build() {
            final var _resultValue = new MonitoredResourceTaskTaskDetails();
            _resultValue.availabilityProxyMetricCollectionInterval = availabilityProxyMetricCollectionInterval;
            _resultValue.availabilityProxyMetrics = availabilityProxyMetrics;
            _resultValue.namespace = namespace;
            _resultValue.resourceGroup = resourceGroup;
            _resultValue.source = source;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
