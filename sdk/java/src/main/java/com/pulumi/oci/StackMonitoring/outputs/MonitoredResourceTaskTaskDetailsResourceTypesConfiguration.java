// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredResourceTaskTaskDetailsResourceTypesConfiguration {
    /**
     * @return Availability metrics details.
     * 
     */
    private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig availabilityMetricsConfig;
    /**
     * @return Specific resource mapping configurations for Agent Extension Handlers.
     * 
     */
    private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig handlerConfig;
    /**
     * @return Resource type.
     * 
     */
    private @Nullable String resourceType;

    private MonitoredResourceTaskTaskDetailsResourceTypesConfiguration() {}
    /**
     * @return Availability metrics details.
     * 
     */
    public Optional<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig> availabilityMetricsConfig() {
        return Optional.ofNullable(this.availabilityMetricsConfig);
    }
    /**
     * @return Specific resource mapping configurations for Agent Extension Handlers.
     * 
     */
    public Optional<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig> handlerConfig() {
        return Optional.ofNullable(this.handlerConfig);
    }
    /**
     * @return Resource type.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredResourceTaskTaskDetailsResourceTypesConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig availabilityMetricsConfig;
        private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig handlerConfig;
        private @Nullable String resourceType;
        public Builder() {}
        public Builder(MonitoredResourceTaskTaskDetailsResourceTypesConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityMetricsConfig = defaults.availabilityMetricsConfig;
    	      this.handlerConfig = defaults.handlerConfig;
    	      this.resourceType = defaults.resourceType;
        }

        @CustomType.Setter
        public Builder availabilityMetricsConfig(@Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig availabilityMetricsConfig) {

            this.availabilityMetricsConfig = availabilityMetricsConfig;
            return this;
        }
        @CustomType.Setter
        public Builder handlerConfig(@Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig handlerConfig) {

            this.handlerConfig = handlerConfig;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        public MonitoredResourceTaskTaskDetailsResourceTypesConfiguration build() {
            final var _resultValue = new MonitoredResourceTaskTaskDetailsResourceTypesConfiguration();
            _resultValue.availabilityMetricsConfig = availabilityMetricsConfig;
            _resultValue.handlerConfig = handlerConfig;
            _resultValue.resourceType = resourceType;
            return _resultValue;
        }
    }
}
