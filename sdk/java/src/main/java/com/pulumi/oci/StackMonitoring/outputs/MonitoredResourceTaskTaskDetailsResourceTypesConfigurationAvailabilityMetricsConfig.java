// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig {
    /**
     * @return Availability metric collection internal in seconds.
     * 
     */
    private @Nullable Integer collectionIntervalInSeconds;
    /**
     * @return List of metrics used for availability calculation for the resource.
     * 
     */
    private @Nullable List<String> metrics;

    private MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig() {}
    /**
     * @return Availability metric collection internal in seconds.
     * 
     */
    public Optional<Integer> collectionIntervalInSeconds() {
        return Optional.ofNullable(this.collectionIntervalInSeconds);
    }
    /**
     * @return List of metrics used for availability calculation for the resource.
     * 
     */
    public List<String> metrics() {
        return this.metrics == null ? List.of() : this.metrics;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer collectionIntervalInSeconds;
        private @Nullable List<String> metrics;
        public Builder() {}
        public Builder(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collectionIntervalInSeconds = defaults.collectionIntervalInSeconds;
    	      this.metrics = defaults.metrics;
        }

        @CustomType.Setter
        public Builder collectionIntervalInSeconds(@Nullable Integer collectionIntervalInSeconds) {

            this.collectionIntervalInSeconds = collectionIntervalInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder metrics(@Nullable List<String> metrics) {

            this.metrics = metrics;
            return this;
        }
        public Builder metrics(String... metrics) {
            return metrics(List.of(metrics));
        }
        public MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig build() {
            final var _resultValue = new MonitoredResourceTaskTaskDetailsResourceTypesConfigurationAvailabilityMetricsConfig();
            _resultValue.collectionIntervalInSeconds = collectionIntervalInSeconds;
            _resultValue.metrics = metrics;
            return _resultValue;
        }
    }
}
