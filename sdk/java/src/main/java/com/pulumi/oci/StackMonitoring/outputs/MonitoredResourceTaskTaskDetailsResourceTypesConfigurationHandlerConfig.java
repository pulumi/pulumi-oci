// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfig;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerProperty;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMapping;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfig;
import com.pulumi.oci.StackMonitoring.outputs.MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig {
    /**
     * @return Resource name generation overriding configurations for collectd resource types.
     * 
     */
    private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfig collectdResourceNameConfig;
    /**
     * @return List of collector/plugin names.
     * 
     */
    private @Nullable List<String> collectorTypes;
    /**
     * @return List of handler configuration properties
     * 
     */
    private @Nullable List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerProperty> handlerProperties;
    /**
     * @return List of AgentExtensionHandlerMetricMappingDetails.
     * 
     */
    private @Nullable List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMapping> metricMappings;
    /**
     * @return Metric name generation overriding configurations.
     * 
     */
    private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfig metricNameConfig;
    /**
     * @return Metric upload interval in seconds. Any metric sent by telegraf/collectd before the  configured interval expires will be dropped.
     * 
     */
    private @Nullable Integer metricUploadIntervalInSeconds;
    /**
     * @return Resource name generation overriding configurations for telegraf resource types.
     * 
     */
    private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfig telegrafResourceNameConfig;
    /**
     * @return Resource group string; if not specified, the resource group string will be generated by the handler.
     * 
     */
    private @Nullable String telemetryResourceGroup;

    private MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig() {}
    /**
     * @return Resource name generation overriding configurations for collectd resource types.
     * 
     */
    public Optional<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfig> collectdResourceNameConfig() {
        return Optional.ofNullable(this.collectdResourceNameConfig);
    }
    /**
     * @return List of collector/plugin names.
     * 
     */
    public List<String> collectorTypes() {
        return this.collectorTypes == null ? List.of() : this.collectorTypes;
    }
    /**
     * @return List of handler configuration properties
     * 
     */
    public List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerProperty> handlerProperties() {
        return this.handlerProperties == null ? List.of() : this.handlerProperties;
    }
    /**
     * @return List of AgentExtensionHandlerMetricMappingDetails.
     * 
     */
    public List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMapping> metricMappings() {
        return this.metricMappings == null ? List.of() : this.metricMappings;
    }
    /**
     * @return Metric name generation overriding configurations.
     * 
     */
    public Optional<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfig> metricNameConfig() {
        return Optional.ofNullable(this.metricNameConfig);
    }
    /**
     * @return Metric upload interval in seconds. Any metric sent by telegraf/collectd before the  configured interval expires will be dropped.
     * 
     */
    public Optional<Integer> metricUploadIntervalInSeconds() {
        return Optional.ofNullable(this.metricUploadIntervalInSeconds);
    }
    /**
     * @return Resource name generation overriding configurations for telegraf resource types.
     * 
     */
    public Optional<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfig> telegrafResourceNameConfig() {
        return Optional.ofNullable(this.telegrafResourceNameConfig);
    }
    /**
     * @return Resource group string; if not specified, the resource group string will be generated by the handler.
     * 
     */
    public Optional<String> telemetryResourceGroup() {
        return Optional.ofNullable(this.telemetryResourceGroup);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfig collectdResourceNameConfig;
        private @Nullable List<String> collectorTypes;
        private @Nullable List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerProperty> handlerProperties;
        private @Nullable List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMapping> metricMappings;
        private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfig metricNameConfig;
        private @Nullable Integer metricUploadIntervalInSeconds;
        private @Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfig telegrafResourceNameConfig;
        private @Nullable String telemetryResourceGroup;
        public Builder() {}
        public Builder(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collectdResourceNameConfig = defaults.collectdResourceNameConfig;
    	      this.collectorTypes = defaults.collectorTypes;
    	      this.handlerProperties = defaults.handlerProperties;
    	      this.metricMappings = defaults.metricMappings;
    	      this.metricNameConfig = defaults.metricNameConfig;
    	      this.metricUploadIntervalInSeconds = defaults.metricUploadIntervalInSeconds;
    	      this.telegrafResourceNameConfig = defaults.telegrafResourceNameConfig;
    	      this.telemetryResourceGroup = defaults.telemetryResourceGroup;
        }

        @CustomType.Setter
        public Builder collectdResourceNameConfig(@Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigCollectdResourceNameConfig collectdResourceNameConfig) {

            this.collectdResourceNameConfig = collectdResourceNameConfig;
            return this;
        }
        @CustomType.Setter
        public Builder collectorTypes(@Nullable List<String> collectorTypes) {

            this.collectorTypes = collectorTypes;
            return this;
        }
        public Builder collectorTypes(String... collectorTypes) {
            return collectorTypes(List.of(collectorTypes));
        }
        @CustomType.Setter
        public Builder handlerProperties(@Nullable List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerProperty> handlerProperties) {

            this.handlerProperties = handlerProperties;
            return this;
        }
        public Builder handlerProperties(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigHandlerProperty... handlerProperties) {
            return handlerProperties(List.of(handlerProperties));
        }
        @CustomType.Setter
        public Builder metricMappings(@Nullable List<MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMapping> metricMappings) {

            this.metricMappings = metricMappings;
            return this;
        }
        public Builder metricMappings(MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricMapping... metricMappings) {
            return metricMappings(List.of(metricMappings));
        }
        @CustomType.Setter
        public Builder metricNameConfig(@Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigMetricNameConfig metricNameConfig) {

            this.metricNameConfig = metricNameConfig;
            return this;
        }
        @CustomType.Setter
        public Builder metricUploadIntervalInSeconds(@Nullable Integer metricUploadIntervalInSeconds) {

            this.metricUploadIntervalInSeconds = metricUploadIntervalInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder telegrafResourceNameConfig(@Nullable MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfigTelegrafResourceNameConfig telegrafResourceNameConfig) {

            this.telegrafResourceNameConfig = telegrafResourceNameConfig;
            return this;
        }
        @CustomType.Setter
        public Builder telemetryResourceGroup(@Nullable String telemetryResourceGroup) {

            this.telemetryResourceGroup = telemetryResourceGroup;
            return this;
        }
        public MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig build() {
            final var _resultValue = new MonitoredResourceTaskTaskDetailsResourceTypesConfigurationHandlerConfig();
            _resultValue.collectdResourceNameConfig = collectdResourceNameConfig;
            _resultValue.collectorTypes = collectorTypes;
            _resultValue.handlerProperties = handlerProperties;
            _resultValue.metricMappings = metricMappings;
            _resultValue.metricNameConfig = metricNameConfig;
            _resultValue.metricUploadIntervalInSeconds = metricUploadIntervalInSeconds;
            _resultValue.telegrafResourceNameConfig = telegrafResourceNameConfig;
            _resultValue.telemetryResourceGroup = telemetryResourceGroup;
            return _resultValue;
        }
    }
}
