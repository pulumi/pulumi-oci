// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredResourcesListMemberItem {
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,String> definedTags;
    /**
     * @return External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     * 
     */
    private @Nullable String externalId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,String> freeformTags;
    /**
     * @return Monitored Resource Host Name.
     * 
     */
    private @Nullable String hostName;
    /**
     * @return License edition of the monitored resource.
     * 
     */
    private @Nullable String license;
    /**
     * @return Parent monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String parentId;
    /**
     * @return Resource Category to indicate the kind of resource type.
     * 
     */
    private @Nullable String resourceCategory;
    /**
     * @return Monitored resource display name.
     * 
     */
    private @Nullable String resourceDisplayName;
    /**
     * @return Monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return Monitored Resource Name.
     * 
     */
    private @Nullable String resourceName;
    /**
     * @return Monitored Resource Type.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     * 
     */
    private @Nullable String sourceType;
    /**
     * @return The current state of the Resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,String> systemTags;

    private MonitoredResourcesListMemberItem() {}
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     * 
     */
    public Optional<String> externalId() {
        return Optional.ofNullable(this.externalId);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Monitored Resource Host Name.
     * 
     */
    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }
    /**
     * @return License edition of the monitored resource.
     * 
     */
    public Optional<String> license() {
        return Optional.ofNullable(this.license);
    }
    /**
     * @return Parent monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> parentId() {
        return Optional.ofNullable(this.parentId);
    }
    /**
     * @return Resource Category to indicate the kind of resource type.
     * 
     */
    public Optional<String> resourceCategory() {
        return Optional.ofNullable(this.resourceCategory);
    }
    /**
     * @return Monitored resource display name.
     * 
     */
    public Optional<String> resourceDisplayName() {
        return Optional.ofNullable(this.resourceDisplayName);
    }
    /**
     * @return Monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return Monitored Resource Name.
     * 
     */
    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }
    /**
     * @return Monitored Resource Type.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     * 
     */
    public Optional<String> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }
    /**
     * @return The current state of the Resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredResourcesListMemberItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,String> definedTags;
        private @Nullable String externalId;
        private @Nullable Map<String,String> freeformTags;
        private @Nullable String hostName;
        private @Nullable String license;
        private @Nullable String parentId;
        private @Nullable String resourceCategory;
        private @Nullable String resourceDisplayName;
        private @Nullable String resourceId;
        private @Nullable String resourceName;
        private @Nullable String resourceType;
        private @Nullable String sourceType;
        private @Nullable String state;
        private @Nullable Map<String,String> systemTags;
        public Builder() {}
        public Builder(MonitoredResourcesListMemberItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.externalId = defaults.externalId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostName = defaults.hostName;
    	      this.license = defaults.license;
    	      this.parentId = defaults.parentId;
    	      this.resourceCategory = defaults.resourceCategory;
    	      this.resourceDisplayName = defaults.resourceDisplayName;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.sourceType = defaults.sourceType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,String> definedTags) {

            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(@Nullable String externalId) {

            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,String> freeformTags) {

            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(@Nullable String hostName) {

            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder license(@Nullable String license) {

            this.license = license;
            return this;
        }
        @CustomType.Setter
        public Builder parentId(@Nullable String parentId) {

            this.parentId = parentId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceCategory(@Nullable String resourceCategory) {

            this.resourceCategory = resourceCategory;
            return this;
        }
        @CustomType.Setter
        public Builder resourceDisplayName(@Nullable String resourceDisplayName) {

            this.resourceDisplayName = resourceDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(@Nullable String resourceName) {

            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(@Nullable String sourceType) {

            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,String> systemTags) {

            this.systemTags = systemTags;
            return this;
        }
        public MonitoredResourcesListMemberItem build() {
            final var _resultValue = new MonitoredResourcesListMemberItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.externalId = externalId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostName = hostName;
            _resultValue.license = license;
            _resultValue.parentId = parentId;
            _resultValue.resourceCategory = resourceCategory;
            _resultValue.resourceDisplayName = resourceDisplayName;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceName = resourceName;
            _resultValue.resourceType = resourceType;
            _resultValue.sourceType = sourceType;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            return _resultValue;
        }
    }
}
