// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Streaming;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Streaming.StreamPoolArgs;
import com.pulumi.oci.Streaming.inputs.StreamPoolState;
import com.pulumi.oci.Streaming.outputs.StreamPoolCustomEncryptionKey;
import com.pulumi.oci.Streaming.outputs.StreamPoolKafkaSettings;
import com.pulumi.oci.Streaming.outputs.StreamPoolPrivateEndpointSettings;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Stream Pool resource in Oracle Cloud Infrastructure Streaming service.
 * 
 * Starts the provisioning of a new stream pool.
 * To track the progress of the provisioning, you can periodically call GetStreamPool.
 * In the response, the `lifecycleState` parameter of the object tells you its current state.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Streaming.StreamPool;
 * import com.pulumi.oci.Streaming.StreamPoolArgs;
 * import com.pulumi.oci.Streaming.inputs.StreamPoolCustomEncryptionKeyArgs;
 * import com.pulumi.oci.Streaming.inputs.StreamPoolKafkaSettingsArgs;
 * import com.pulumi.oci.Streaming.inputs.StreamPoolPrivateEndpointSettingsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testStreamPool = new StreamPool("testStreamPool", StreamPoolArgs.builder()
 *             .compartmentId(compartmentId)
 *             .name(streamPoolName)
 *             .customEncryptionKey(StreamPoolCustomEncryptionKeyArgs.builder()
 *                 .kmsKeyId(testKey.id())
 *                 .build())
 *             .definedTags(streamPoolDefinedTags)
 *             .freeformTags(Map.of("Department", "Finance"))
 *             .kafkaSettings(StreamPoolKafkaSettingsArgs.builder()
 *                 .autoCreateTopicsEnable(streamPoolKafkaSettingsAutoCreateTopicsEnable)
 *                 .bootstrapServers(streamPoolKafkaSettingsBootstrapServers)
 *                 .logRetentionHours(streamPoolKafkaSettingsLogRetentionHours)
 *                 .numPartitions(streamPoolKafkaSettingsNumPartitions)
 *                 .build())
 *             .privateEndpointSettings(StreamPoolPrivateEndpointSettingsArgs.builder()
 *                 .nsgIds(streamPoolPrivateEndpointSettingsNsgIds)
 *                 .privateEndpointIp(streamPoolPrivateEndpointSettingsPrivateEndpointIp)
 *                 .subnetId(testSubnet.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * StreamPools can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Streaming/streamPool:StreamPool test_stream_pool &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Streaming/streamPool:StreamPool")
public class StreamPool extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The OCID of the compartment that contains the stream.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains the stream.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The OCID of the custom encryption key to be used or deleted if currently being used.
     * 
     */
    @Export(name="customEncryptionKey", refs={StreamPoolCustomEncryptionKey.class}, tree="[0]")
    private Output<StreamPoolCustomEncryptionKey> customEncryptionKey;

    /**
     * @return (Updatable) The OCID of the custom encryption key to be used or deleted if currently being used.
     * 
     */
    public Output<StreamPoolCustomEncryptionKey> customEncryptionKey() {
        return this.customEncryptionKey;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
     * 
     */
    @Export(name="endpointFqdn", refs={String.class}, tree="[0]")
    private Output<String> endpointFqdn;

    /**
     * @return The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
     * 
     */
    public Output<String> endpointFqdn() {
        return this.endpointFqdn;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
     * 
     */
    @Export(name="isPrivate", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isPrivate;

    /**
     * @return True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
     * 
     */
    public Output<Boolean> isPrivate() {
        return this.isPrivate;
    }
    /**
     * (Updatable) Settings for the Kafka compatibility layer.
     * 
     */
    @Export(name="kafkaSettings", refs={StreamPoolKafkaSettings.class}, tree="[0]")
    private Output<StreamPoolKafkaSettings> kafkaSettings;

    /**
     * @return (Updatable) Settings for the Kafka compatibility layer.
     * 
     */
    public Output<StreamPoolKafkaSettings> kafkaSettings() {
        return this.kafkaSettings;
    }
    /**
     * Any additional details about the current state of the stream.
     * 
     */
    @Export(name="lifecycleStateDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleStateDetails;

    /**
     * @return Any additional details about the current state of the stream.
     * 
     */
    public Output<String> lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * (Updatable) The name of the stream pool. Avoid entering confidential information.  Example: `MyStreamPool`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return (Updatable) The name of the stream pool. Avoid entering confidential information.  Example: `MyStreamPool`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Optional parameters if a private stream pool is requested.
     * 
     */
    @Export(name="privateEndpointSettings", refs={StreamPoolPrivateEndpointSettings.class}, tree="[0]")
    private Output<StreamPoolPrivateEndpointSettings> privateEndpointSettings;

    /**
     * @return Optional parameters if a private stream pool is requested.
     * 
     */
    public Output<StreamPoolPrivateEndpointSettings> privateEndpointSettings() {
        return this.privateEndpointSettings;
    }
    /**
     * The current state of the stream pool.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the stream pool.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StreamPool(java.lang.String name) {
        this(name, StreamPoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StreamPool(java.lang.String name, StreamPoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StreamPool(java.lang.String name, StreamPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Streaming/streamPool:StreamPool", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StreamPool(java.lang.String name, Output<java.lang.String> id, @Nullable StreamPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Streaming/streamPool:StreamPool", name, state, makeResourceOptions(options, id), false);
    }

    private static StreamPoolArgs makeArgs(StreamPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StreamPoolArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StreamPool get(java.lang.String name, Output<java.lang.String> id, @Nullable StreamPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StreamPool(name, id, state, options);
    }
}
