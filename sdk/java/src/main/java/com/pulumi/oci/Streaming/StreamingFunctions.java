// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Streaming;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.oci.Streaming.inputs.GetConnectHarnessArgs;
import com.pulumi.oci.Streaming.inputs.GetConnectHarnessPlainArgs;
import com.pulumi.oci.Streaming.inputs.GetConnectHarnessesArgs;
import com.pulumi.oci.Streaming.inputs.GetConnectHarnessesPlainArgs;
import com.pulumi.oci.Streaming.inputs.GetStreamArgs;
import com.pulumi.oci.Streaming.inputs.GetStreamPlainArgs;
import com.pulumi.oci.Streaming.inputs.GetStreamPoolArgs;
import com.pulumi.oci.Streaming.inputs.GetStreamPoolPlainArgs;
import com.pulumi.oci.Streaming.inputs.GetStreamPoolsArgs;
import com.pulumi.oci.Streaming.inputs.GetStreamPoolsPlainArgs;
import com.pulumi.oci.Streaming.inputs.GetStreamsArgs;
import com.pulumi.oci.Streaming.inputs.GetStreamsPlainArgs;
import com.pulumi.oci.Streaming.outputs.GetConnectHarnessResult;
import com.pulumi.oci.Streaming.outputs.GetConnectHarnessesResult;
import com.pulumi.oci.Streaming.outputs.GetStreamPoolResult;
import com.pulumi.oci.Streaming.outputs.GetStreamPoolsResult;
import com.pulumi.oci.Streaming.outputs.GetStreamResult;
import com.pulumi.oci.Streaming.outputs.GetStreamsResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class StreamingFunctions {
    /**
     * This data source provides details about a specific Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a connect harness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarness = StreamingFunctions.getConnectHarness(GetConnectHarnessArgs.builder()
     *             .connectHarnessId(testConnectHarnes.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectHarnessResult> getConnectHarness(GetConnectHarnessArgs args) {
        return getConnectHarness(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a connect harness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarness = StreamingFunctions.getConnectHarness(GetConnectHarnessArgs.builder()
     *             .connectHarnessId(testConnectHarnes.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectHarnessResult> getConnectHarnessPlain(GetConnectHarnessPlainArgs args) {
        return getConnectHarnessPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a connect harness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarness = StreamingFunctions.getConnectHarness(GetConnectHarnessArgs.builder()
     *             .connectHarnessId(testConnectHarnes.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectHarnessResult> getConnectHarness(GetConnectHarnessArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getConnectHarness:getConnectHarness", TypeShape.of(GetConnectHarnessResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a connect harness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarness = StreamingFunctions.getConnectHarness(GetConnectHarnessArgs.builder()
     *             .connectHarnessId(testConnectHarnes.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectHarnessResult> getConnectHarness(GetConnectHarnessArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getConnectHarness:getConnectHarness", TypeShape.of(GetConnectHarnessResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Connect Harness resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a connect harness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarness = StreamingFunctions.getConnectHarness(GetConnectHarnessArgs.builder()
     *             .connectHarnessId(testConnectHarnes.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectHarnessResult> getConnectHarnessPlain(GetConnectHarnessPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Streaming/getConnectHarness:getConnectHarness", TypeShape.of(GetConnectHarnessResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Connect Harnesses in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the connectharness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarnesses = StreamingFunctions.getConnectHarnesses(GetConnectHarnessesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(connectHarnessId)
     *             .name(connectHarnessName)
     *             .state(connectHarnessState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectHarnessesResult> getConnectHarnesses(GetConnectHarnessesArgs args) {
        return getConnectHarnesses(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Connect Harnesses in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the connectharness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarnesses = StreamingFunctions.getConnectHarnesses(GetConnectHarnessesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(connectHarnessId)
     *             .name(connectHarnessName)
     *             .state(connectHarnessState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectHarnessesResult> getConnectHarnessesPlain(GetConnectHarnessesPlainArgs args) {
        return getConnectHarnessesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Connect Harnesses in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the connectharness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarnesses = StreamingFunctions.getConnectHarnesses(GetConnectHarnessesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(connectHarnessId)
     *             .name(connectHarnessName)
     *             .state(connectHarnessState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectHarnessesResult> getConnectHarnesses(GetConnectHarnessesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getConnectHarnesses:getConnectHarnesses", TypeShape.of(GetConnectHarnessesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Connect Harnesses in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the connectharness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarnesses = StreamingFunctions.getConnectHarnesses(GetConnectHarnessesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(connectHarnessId)
     *             .name(connectHarnessName)
     *             .state(connectHarnessState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectHarnessesResult> getConnectHarnesses(GetConnectHarnessesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getConnectHarnesses:getConnectHarnesses", TypeShape.of(GetConnectHarnessesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Connect Harnesses in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the connectharness.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetConnectHarnessesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnectHarnesses = StreamingFunctions.getConnectHarnesses(GetConnectHarnessesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(connectHarnessId)
     *             .name(connectHarnessName)
     *             .state(connectHarnessState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectHarnessesResult> getConnectHarnessesPlain(GetConnectHarnessesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Streaming/getConnectHarnesses:getConnectHarnesses", TypeShape.of(GetConnectHarnessesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Stream resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a stream, including the number of partitions.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStream = StreamingFunctions.getStream(GetStreamArgs.builder()
     *             .streamId(testStreamOciStreamingStream.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamResult> getStream(GetStreamArgs args) {
        return getStream(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Stream resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a stream, including the number of partitions.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStream = StreamingFunctions.getStream(GetStreamArgs.builder()
     *             .streamId(testStreamOciStreamingStream.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamResult> getStreamPlain(GetStreamPlainArgs args) {
        return getStreamPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Stream resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a stream, including the number of partitions.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStream = StreamingFunctions.getStream(GetStreamArgs.builder()
     *             .streamId(testStreamOciStreamingStream.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamResult> getStream(GetStreamArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getStream:getStream", TypeShape.of(GetStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Stream resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a stream, including the number of partitions.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStream = StreamingFunctions.getStream(GetStreamArgs.builder()
     *             .streamId(testStreamOciStreamingStream.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamResult> getStream(GetStreamArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getStream:getStream", TypeShape.of(GetStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Stream resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about a stream, including the number of partitions.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStream = StreamingFunctions.getStream(GetStreamArgs.builder()
     *             .streamId(testStreamOciStreamingStream.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamResult> getStreamPlain(GetStreamPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Streaming/getStream:getStream", TypeShape.of(GetStreamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Stream Pool resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about the stream pool, such as Kafka settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPool = StreamingFunctions.getStreamPool(GetStreamPoolArgs.builder()
     *             .streamPoolId(testStreamPoolOciStreamingStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamPoolResult> getStreamPool(GetStreamPoolArgs args) {
        return getStreamPool(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Stream Pool resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about the stream pool, such as Kafka settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPool = StreamingFunctions.getStreamPool(GetStreamPoolArgs.builder()
     *             .streamPoolId(testStreamPoolOciStreamingStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamPoolResult> getStreamPoolPlain(GetStreamPoolPlainArgs args) {
        return getStreamPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Stream Pool resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about the stream pool, such as Kafka settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPool = StreamingFunctions.getStreamPool(GetStreamPoolArgs.builder()
     *             .streamPoolId(testStreamPoolOciStreamingStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamPoolResult> getStreamPool(GetStreamPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getStreamPool:getStreamPool", TypeShape.of(GetStreamPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Stream Pool resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about the stream pool, such as Kafka settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPool = StreamingFunctions.getStreamPool(GetStreamPoolArgs.builder()
     *             .streamPoolId(testStreamPoolOciStreamingStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamPoolResult> getStreamPool(GetStreamPoolArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getStreamPool:getStreamPool", TypeShape.of(GetStreamPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Stream Pool resource in Oracle Cloud Infrastructure Streaming service.
     * 
     * Gets detailed information about the stream pool, such as Kafka settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPool = StreamingFunctions.getStreamPool(GetStreamPoolArgs.builder()
     *             .streamPoolId(testStreamPoolOciStreamingStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamPoolResult> getStreamPoolPlain(GetStreamPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Streaming/getStreamPool:getStreamPool", TypeShape.of(GetStreamPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Stream Pools in Oracle Cloud Infrastructure Streaming service.
     * 
     * List the stream pools for a given compartment ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPools = StreamingFunctions.getStreamPools(GetStreamPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamPoolId)
     *             .name(streamPoolName)
     *             .state(streamPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamPoolsResult> getStreamPools(GetStreamPoolsArgs args) {
        return getStreamPools(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Stream Pools in Oracle Cloud Infrastructure Streaming service.
     * 
     * List the stream pools for a given compartment ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPools = StreamingFunctions.getStreamPools(GetStreamPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamPoolId)
     *             .name(streamPoolName)
     *             .state(streamPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamPoolsResult> getStreamPoolsPlain(GetStreamPoolsPlainArgs args) {
        return getStreamPoolsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Stream Pools in Oracle Cloud Infrastructure Streaming service.
     * 
     * List the stream pools for a given compartment ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPools = StreamingFunctions.getStreamPools(GetStreamPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamPoolId)
     *             .name(streamPoolName)
     *             .state(streamPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamPoolsResult> getStreamPools(GetStreamPoolsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getStreamPools:getStreamPools", TypeShape.of(GetStreamPoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Stream Pools in Oracle Cloud Infrastructure Streaming service.
     * 
     * List the stream pools for a given compartment ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPools = StreamingFunctions.getStreamPools(GetStreamPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamPoolId)
     *             .name(streamPoolName)
     *             .state(streamPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamPoolsResult> getStreamPools(GetStreamPoolsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getStreamPools:getStreamPools", TypeShape.of(GetStreamPoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Stream Pools in Oracle Cloud Infrastructure Streaming service.
     * 
     * List the stream pools for a given compartment ID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreamPools = StreamingFunctions.getStreamPools(GetStreamPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamPoolId)
     *             .name(streamPoolName)
     *             .state(streamPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamPoolsResult> getStreamPoolsPlain(GetStreamPoolsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Streaming/getStreamPools:getStreamPools", TypeShape.of(GetStreamPoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the streams in the given compartment id.
     * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
     * If the stream pool id is specified, the action will be scoped to that stream pool.
     * The compartment id and stream pool id cannot be specified at the same time.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreams = StreamingFunctions.getStreams(GetStreamsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamId)
     *             .name(streamName)
     *             .state(streamState)
     *             .streamPoolId(testStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamsResult> getStreams() {
        return getStreams(GetStreamsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the streams in the given compartment id.
     * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
     * If the stream pool id is specified, the action will be scoped to that stream pool.
     * The compartment id and stream pool id cannot be specified at the same time.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreams = StreamingFunctions.getStreams(GetStreamsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamId)
     *             .name(streamName)
     *             .state(streamState)
     *             .streamPoolId(testStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamsResult> getStreamsPlain() {
        return getStreamsPlain(GetStreamsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the streams in the given compartment id.
     * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
     * If the stream pool id is specified, the action will be scoped to that stream pool.
     * The compartment id and stream pool id cannot be specified at the same time.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreams = StreamingFunctions.getStreams(GetStreamsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamId)
     *             .name(streamName)
     *             .state(streamState)
     *             .streamPoolId(testStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamsResult> getStreams(GetStreamsArgs args) {
        return getStreams(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the streams in the given compartment id.
     * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
     * If the stream pool id is specified, the action will be scoped to that stream pool.
     * The compartment id and stream pool id cannot be specified at the same time.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreams = StreamingFunctions.getStreams(GetStreamsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamId)
     *             .name(streamName)
     *             .state(streamState)
     *             .streamPoolId(testStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamsResult> getStreamsPlain(GetStreamsPlainArgs args) {
        return getStreamsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the streams in the given compartment id.
     * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
     * If the stream pool id is specified, the action will be scoped to that stream pool.
     * The compartment id and stream pool id cannot be specified at the same time.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreams = StreamingFunctions.getStreams(GetStreamsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamId)
     *             .name(streamName)
     *             .state(streamState)
     *             .streamPoolId(testStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamsResult> getStreams(GetStreamsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getStreams:getStreams", TypeShape.of(GetStreamsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the streams in the given compartment id.
     * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
     * If the stream pool id is specified, the action will be scoped to that stream pool.
     * The compartment id and stream pool id cannot be specified at the same time.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreams = StreamingFunctions.getStreams(GetStreamsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamId)
     *             .name(streamName)
     *             .state(streamState)
     *             .streamPoolId(testStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetStreamsResult> getStreams(GetStreamsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:Streaming/getStreams:getStreams", TypeShape.of(GetStreamsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
     * 
     * Lists the streams in the given compartment id.
     * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
     * If the stream pool id is specified, the action will be scoped to that stream pool.
     * The compartment id and stream pool id cannot be specified at the same time.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Streaming.StreamingFunctions;
     * import com.pulumi.oci.Streaming.inputs.GetStreamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testStreams = StreamingFunctions.getStreams(GetStreamsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .id(streamId)
     *             .name(streamName)
     *             .state(streamState)
     *             .streamPoolId(testStreamPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetStreamsResult> getStreamsPlain(GetStreamsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Streaming/getStreams:getStreams", TypeShape.of(GetStreamsResult.class), args, Utilities.withVersion(options));
    }
}
