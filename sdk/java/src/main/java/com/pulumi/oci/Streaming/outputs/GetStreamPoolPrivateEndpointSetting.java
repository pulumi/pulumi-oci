// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Streaming.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStreamPoolPrivateEndpointSetting {
    /**
     * @return The optional list of network security groups that are associated with the private endpoint of the stream pool.
     * 
     */
    private @Nullable List<String> nsgIds;
    /**
     * @return The private IP associated with the stream pool in the associated subnetId. The stream pool&#39;s FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
     * 
     */
    private @Nullable String privateEndpointIp;
    /**
     * @return The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
     * 
     */
    private @Nullable String subnetId;

    private GetStreamPoolPrivateEndpointSetting() {}
    /**
     * @return The optional list of network security groups that are associated with the private endpoint of the stream pool.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds == null ? List.of() : this.nsgIds;
    }
    /**
     * @return The private IP associated with the stream pool in the associated subnetId. The stream pool&#39;s FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
     * 
     */
    public Optional<String> privateEndpointIp() {
        return Optional.ofNullable(this.privateEndpointIp);
    }
    /**
     * @return The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamPoolPrivateEndpointSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> nsgIds;
        private @Nullable String privateEndpointIp;
        private @Nullable String subnetId;
        public Builder() {}
        public Builder(GetStreamPoolPrivateEndpointSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nsgIds = defaults.nsgIds;
    	      this.privateEndpointIp = defaults.privateEndpointIp;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder nsgIds(@Nullable List<String> nsgIds) {
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder privateEndpointIp(@Nullable String privateEndpointIp) {
            this.privateEndpointIp = privateEndpointIp;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        public GetStreamPoolPrivateEndpointSetting build() {
            final var o = new GetStreamPoolPrivateEndpointSetting();
            o.nsgIds = nsgIds;
            o.privateEndpointIp = privateEndpointIp;
            o.subnetId = subnetId;
            return o;
        }
    }
}
