// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Streaming.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetStreamPoolPrivateEndpointSetting {
    /**
     * @return The optional list of network security groups that are associated with the private endpoint of the stream pool.
     * 
     */
    private List<String> nsgIds;
    /**
     * @return The private IP associated with the stream pool in the associated subnetId. The stream pool&#39;s FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
     * 
     */
    private String privateEndpointIp;
    /**
     * @return The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
     * 
     */
    private String subnetId;

    private GetStreamPoolPrivateEndpointSetting() {}
    /**
     * @return The optional list of network security groups that are associated with the private endpoint of the stream pool.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The private IP associated with the stream pool in the associated subnetId. The stream pool&#39;s FQDN resolves to that IP and should be used - instead of the private IP - in order to not trigger any TLS issues.
     * 
     */
    public String privateEndpointIp() {
        return this.privateEndpointIp;
    }
    /**
     * @return The subnet id from which the private stream pool can be accessed. Trying to access the streams from another network location will result in an error.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamPoolPrivateEndpointSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> nsgIds;
        private String privateEndpointIp;
        private String subnetId;
        public Builder() {}
        public Builder(GetStreamPoolPrivateEndpointSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nsgIds = defaults.nsgIds;
    	      this.privateEndpointIp = defaults.privateEndpointIp;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolPrivateEndpointSetting", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder privateEndpointIp(String privateEndpointIp) {
            if (privateEndpointIp == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolPrivateEndpointSetting", "privateEndpointIp");
            }
            this.privateEndpointIp = privateEndpointIp;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolPrivateEndpointSetting", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public GetStreamPoolPrivateEndpointSetting build() {
            final var _resultValue = new GetStreamPoolPrivateEndpointSetting();
            _resultValue.nsgIds = nsgIds;
            _resultValue.privateEndpointIp = privateEndpointIp;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
