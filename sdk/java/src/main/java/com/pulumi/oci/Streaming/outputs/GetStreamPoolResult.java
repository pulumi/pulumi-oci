// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Streaming.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Streaming.outputs.GetStreamPoolCustomEncryptionKey;
import com.pulumi.oci.Streaming.outputs.GetStreamPoolKafkaSetting;
import com.pulumi.oci.Streaming.outputs.GetStreamPoolPrivateEndpointSetting;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetStreamPoolResult {
    /**
     * @return Compartment OCID that the pool belongs to.
     * 
     */
    private String compartmentId;
    /**
     * @return Custom Encryption Key which will be used for encryption by all the streams in the pool.
     * 
     */
    private List<GetStreamPoolCustomEncryptionKey> customEncryptionKeys;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}&#39;
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
     * 
     */
    private String endpointFqdn;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of the stream pool.
     * 
     */
    private String id;
    /**
     * @return True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
     * 
     */
    private Boolean isPrivate;
    /**
     * @return Settings for the Kafka compatibility layer.
     * 
     */
    private List<GetStreamPoolKafkaSetting> kafkaSettings;
    /**
     * @return Any additional details about the current state of the stream.
     * 
     */
    private String lifecycleStateDetails;
    /**
     * @return The name of the stream pool.
     * 
     */
    private String name;
    /**
     * @return Optional settings if the stream pool is private.
     * 
     */
    private List<GetStreamPoolPrivateEndpointSetting> privateEndpointSettings;
    /**
     * @return The current state of the stream pool.
     * 
     */
    private String state;
    private String streamPoolId;
    /**
     * @return The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    private String timeCreated;

    private GetStreamPoolResult() {}
    /**
     * @return Compartment OCID that the pool belongs to.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Custom Encryption Key which will be used for encryption by all the streams in the pool.
     * 
     */
    public List<GetStreamPoolCustomEncryptionKey> customEncryptionKeys() {
        return this.customEncryptionKeys;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}&#39;
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
     * 
     */
    public String endpointFqdn() {
        return this.endpointFqdn;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the stream pool.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
     * 
     */
    public Boolean isPrivate() {
        return this.isPrivate;
    }
    /**
     * @return Settings for the Kafka compatibility layer.
     * 
     */
    public List<GetStreamPoolKafkaSetting> kafkaSettings() {
        return this.kafkaSettings;
    }
    /**
     * @return Any additional details about the current state of the stream.
     * 
     */
    public String lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * @return The name of the stream pool.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Optional settings if the stream pool is private.
     * 
     */
    public List<GetStreamPoolPrivateEndpointSetting> privateEndpointSettings() {
        return this.privateEndpointSettings;
    }
    /**
     * @return The current state of the stream pool.
     * 
     */
    public String state() {
        return this.state;
    }
    public String streamPoolId() {
        return this.streamPoolId;
    }
    /**
     * @return The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamPoolResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetStreamPoolCustomEncryptionKey> customEncryptionKeys;
        private Map<String,Object> definedTags;
        private String endpointFqdn;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isPrivate;
        private List<GetStreamPoolKafkaSetting> kafkaSettings;
        private String lifecycleStateDetails;
        private String name;
        private List<GetStreamPoolPrivateEndpointSetting> privateEndpointSettings;
        private String state;
        private String streamPoolId;
        private String timeCreated;
        public Builder() {}
        public Builder(GetStreamPoolResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.customEncryptionKeys = defaults.customEncryptionKeys;
    	      this.definedTags = defaults.definedTags;
    	      this.endpointFqdn = defaults.endpointFqdn;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isPrivate = defaults.isPrivate;
    	      this.kafkaSettings = defaults.kafkaSettings;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.name = defaults.name;
    	      this.privateEndpointSettings = defaults.privateEndpointSettings;
    	      this.state = defaults.state;
    	      this.streamPoolId = defaults.streamPoolId;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder customEncryptionKeys(List<GetStreamPoolCustomEncryptionKey> customEncryptionKeys) {
            if (customEncryptionKeys == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "customEncryptionKeys");
            }
            this.customEncryptionKeys = customEncryptionKeys;
            return this;
        }
        public Builder customEncryptionKeys(GetStreamPoolCustomEncryptionKey... customEncryptionKeys) {
            return customEncryptionKeys(List.of(customEncryptionKeys));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder endpointFqdn(String endpointFqdn) {
            if (endpointFqdn == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "endpointFqdn");
            }
            this.endpointFqdn = endpointFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isPrivate(Boolean isPrivate) {
            if (isPrivate == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "isPrivate");
            }
            this.isPrivate = isPrivate;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaSettings(List<GetStreamPoolKafkaSetting> kafkaSettings) {
            if (kafkaSettings == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "kafkaSettings");
            }
            this.kafkaSettings = kafkaSettings;
            return this;
        }
        public Builder kafkaSettings(GetStreamPoolKafkaSetting... kafkaSettings) {
            return kafkaSettings(List.of(kafkaSettings));
        }
        @CustomType.Setter
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            if (lifecycleStateDetails == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "lifecycleStateDetails");
            }
            this.lifecycleStateDetails = lifecycleStateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointSettings(List<GetStreamPoolPrivateEndpointSetting> privateEndpointSettings) {
            if (privateEndpointSettings == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "privateEndpointSettings");
            }
            this.privateEndpointSettings = privateEndpointSettings;
            return this;
        }
        public Builder privateEndpointSettings(GetStreamPoolPrivateEndpointSetting... privateEndpointSettings) {
            return privateEndpointSettings(List.of(privateEndpointSettings));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder streamPoolId(String streamPoolId) {
            if (streamPoolId == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "streamPoolId");
            }
            this.streamPoolId = streamPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetStreamPoolResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetStreamPoolResult build() {
            final var _resultValue = new GetStreamPoolResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.customEncryptionKeys = customEncryptionKeys;
            _resultValue.definedTags = definedTags;
            _resultValue.endpointFqdn = endpointFqdn;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isPrivate = isPrivate;
            _resultValue.kafkaSettings = kafkaSettings;
            _resultValue.lifecycleStateDetails = lifecycleStateDetails;
            _resultValue.name = name;
            _resultValue.privateEndpointSettings = privateEndpointSettings;
            _resultValue.state = state;
            _resultValue.streamPoolId = streamPoolId;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
