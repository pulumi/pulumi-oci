// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Streaming.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStreamsStream {
    /**
     * @return The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}&#39;
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return A filter to return only resources that match the given ID exactly.
     * 
     */
    private @Nullable String id;
    /**
     * @return Any additional details about the current state of the stream.
     * 
     */
    private @Nullable String lifecycleStateDetails;
    /**
     * @return The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool&#39;s associated subnet.
     * 
     */
    private @Nullable String messagesEndpoint;
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    private @Nullable String name;
    /**
     * @return The number of partitions in the stream.
     * 
     */
    private @Nullable Integer partitions;
    /**
     * @return The retention period of the stream, in hours. This property is read-only.
     * 
     */
    private @Nullable Integer retentionInHours;
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    private @Nullable String state;
    /**
     * @return The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
     * 
     */
    private @Nullable String streamPoolId;
    /**
     * @return The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    private @Nullable String timeCreated;

    private GetStreamsStream() {}
    /**
     * @return The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}&#39;
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return A filter to return only resources that match the given ID exactly.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Any additional details about the current state of the stream.
     * 
     */
    public Optional<String> lifecycleStateDetails() {
        return Optional.ofNullable(this.lifecycleStateDetails);
    }
    /**
     * @return The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool&#39;s associated subnet.
     * 
     */
    public Optional<String> messagesEndpoint() {
        return Optional.ofNullable(this.messagesEndpoint);
    }
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The number of partitions in the stream.
     * 
     */
    public Optional<Integer> partitions() {
        return Optional.ofNullable(this.partitions);
    }
    /**
     * @return The retention period of the stream, in hours. This property is read-only.
     * 
     */
    public Optional<Integer> retentionInHours() {
        return Optional.ofNullable(this.retentionInHours);
    }
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
     * 
     */
    public Optional<String> streamPoolId() {
        return Optional.ofNullable(this.streamPoolId);
    }
    /**
     * @return The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamsStream defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleStateDetails;
        private @Nullable String messagesEndpoint;
        private @Nullable String name;
        private @Nullable Integer partitions;
        private @Nullable Integer retentionInHours;
        private @Nullable String state;
        private @Nullable String streamPoolId;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetStreamsStream defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.messagesEndpoint = defaults.messagesEndpoint;
    	      this.name = defaults.name;
    	      this.partitions = defaults.partitions;
    	      this.retentionInHours = defaults.retentionInHours;
    	      this.state = defaults.state;
    	      this.streamPoolId = defaults.streamPoolId;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleStateDetails(@Nullable String lifecycleStateDetails) {
            this.lifecycleStateDetails = lifecycleStateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder messagesEndpoint(@Nullable String messagesEndpoint) {
            this.messagesEndpoint = messagesEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partitions(@Nullable Integer partitions) {
            this.partitions = partitions;
            return this;
        }
        @CustomType.Setter
        public Builder retentionInHours(@Nullable Integer retentionInHours) {
            this.retentionInHours = retentionInHours;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder streamPoolId(@Nullable String streamPoolId) {
            this.streamPoolId = streamPoolId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetStreamsStream build() {
            final var o = new GetStreamsStream();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleStateDetails = lifecycleStateDetails;
            o.messagesEndpoint = messagesEndpoint;
            o.name = name;
            o.partitions = partitions;
            o.retentionInHours = retentionInHours;
            o.state = state;
            o.streamPoolId = streamPoolId;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
