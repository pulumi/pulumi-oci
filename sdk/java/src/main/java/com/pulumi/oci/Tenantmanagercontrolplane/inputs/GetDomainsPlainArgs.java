// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.inputs.GetDomainsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDomainsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDomainsPlainArgs Empty = new GetDomainsPlainArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * The domain OCID.
     * 
     */
    @Import(name="domainId")
    private @Nullable String domainId;

    /**
     * @return The domain OCID.
     * 
     */
    public Optional<String> domainId() {
        return Optional.ofNullable(this.domainId);
    }

    @Import(name="filters")
    private @Nullable List<GetDomainsFilter> filters;

    public Optional<List<GetDomainsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that exactly match the name given.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A filter to return only resources that exactly match the name given.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The lifecycle state of the resource.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The lifecycle state of the resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The status of the domain.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the domain.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetDomainsPlainArgs() {}

    private GetDomainsPlainArgs(GetDomainsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.domainId = $.domainId;
        this.filters = $.filters;
        this.name = $.name;
        this.state = $.state;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDomainsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDomainsPlainArgs $;

        public Builder() {
            $ = new GetDomainsPlainArgs();
        }

        public Builder(GetDomainsPlainArgs defaults) {
            $ = new GetDomainsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param domainId The domain OCID.
         * 
         * @return builder
         * 
         */
        public Builder domainId(@Nullable String domainId) {
            $.domainId = domainId;
            return this;
        }

        public Builder filters(@Nullable List<GetDomainsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDomainsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter to return only resources that exactly match the name given.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param state The lifecycle state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param status The status of the domain.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetDomainsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetDomainsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
