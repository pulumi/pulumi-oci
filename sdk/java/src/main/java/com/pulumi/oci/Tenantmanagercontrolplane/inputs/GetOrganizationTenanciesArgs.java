// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.inputs.GetOrganizationTenanciesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOrganizationTenanciesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOrganizationTenanciesArgs Empty = new GetOrganizationTenanciesArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetOrganizationTenanciesFilterArgs>> filters;

    public Optional<Output<List<GetOrganizationTenanciesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * OCID of the organization.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return OCID of the organization.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    private GetOrganizationTenanciesArgs() {}

    private GetOrganizationTenanciesArgs(GetOrganizationTenanciesArgs $) {
        this.filters = $.filters;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOrganizationTenanciesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOrganizationTenanciesArgs $;

        public Builder() {
            $ = new GetOrganizationTenanciesArgs();
        }

        public Builder(GetOrganizationTenanciesArgs defaults) {
            $ = new GetOrganizationTenanciesArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetOrganizationTenanciesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetOrganizationTenanciesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetOrganizationTenanciesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param organizationId OCID of the organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId OCID of the organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public GetOrganizationTenanciesArgs build() {
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("GetOrganizationTenanciesArgs", "organizationId");
            }
            return $;
        }
    }

}
