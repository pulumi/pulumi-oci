// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.inputs.GetRecipientInvitationsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecipientInvitationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRecipientInvitationsPlainArgs Empty = new GetRecipientInvitationsPlainArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetRecipientInvitationsFilter> filters;

    public Optional<List<GetRecipientInvitationsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The tenancy that sent the invitation.
     * 
     */
    @Import(name="senderTenancyId")
    private @Nullable String senderTenancyId;

    /**
     * @return The tenancy that sent the invitation.
     * 
     */
    public Optional<String> senderTenancyId() {
        return Optional.ofNullable(this.senderTenancyId);
    }

    /**
     * The lifecycle state of the resource.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The lifecycle state of the resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The status of the recipient invitation.
     * 
     */
    @Import(name="status")
    private @Nullable String status;

    /**
     * @return The status of the recipient invitation.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    private GetRecipientInvitationsPlainArgs() {}

    private GetRecipientInvitationsPlainArgs(GetRecipientInvitationsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.senderTenancyId = $.senderTenancyId;
        this.state = $.state;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecipientInvitationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecipientInvitationsPlainArgs $;

        public Builder() {
            $ = new GetRecipientInvitationsPlainArgs();
        }

        public Builder(GetRecipientInvitationsPlainArgs defaults) {
            $ = new GetRecipientInvitationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetRecipientInvitationsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetRecipientInvitationsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param senderTenancyId The tenancy that sent the invitation.
         * 
         * @return builder
         * 
         */
        public Builder senderTenancyId(@Nullable String senderTenancyId) {
            $.senderTenancyId = senderTenancyId;
            return this;
        }

        /**
         * @param state The lifecycle state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param status The status of the recipient invitation.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable String status) {
            $.status = status;
            return this;
        }

        public GetRecipientInvitationsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetRecipientInvitationsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
