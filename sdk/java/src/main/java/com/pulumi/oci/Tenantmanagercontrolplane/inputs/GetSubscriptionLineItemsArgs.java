// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.inputs.GetSubscriptionLineItemsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSubscriptionLineItemsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubscriptionLineItemsArgs Empty = new GetSubscriptionLineItemsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetSubscriptionLineItemsFilterArgs>> filters;

    public Optional<Output<List<GetSubscriptionLineItemsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * OCID of the subscription.
     * 
     */
    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    /**
     * @return OCID of the subscription.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    private GetSubscriptionLineItemsArgs() {}

    private GetSubscriptionLineItemsArgs(GetSubscriptionLineItemsArgs $) {
        this.filters = $.filters;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubscriptionLineItemsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubscriptionLineItemsArgs $;

        public Builder() {
            $ = new GetSubscriptionLineItemsArgs();
        }

        public Builder(GetSubscriptionLineItemsArgs defaults) {
            $ = new GetSubscriptionLineItemsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetSubscriptionLineItemsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSubscriptionLineItemsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSubscriptionLineItemsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param subscriptionId OCID of the subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId OCID of the subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public GetSubscriptionLineItemsArgs build() {
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("GetSubscriptionLineItemsArgs", "subscriptionId");
            }
            return $;
        }
    }

}
