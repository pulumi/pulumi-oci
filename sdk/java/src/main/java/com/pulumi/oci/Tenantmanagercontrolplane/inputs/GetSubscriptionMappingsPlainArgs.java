// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.inputs.GetSubscriptionMappingsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSubscriptionMappingsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubscriptionMappingsPlainArgs Empty = new GetSubscriptionMappingsPlainArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable List<GetSubscriptionMappingsFilter> filters;

    public Optional<List<GetSubscriptionMappingsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The lifecycle state of the resource.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The lifecycle state of the resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * OCID of the subscription.
     * 
     */
    @Import(name="subscriptionId", required=true)
    private String subscriptionId;

    /**
     * @return OCID of the subscription.
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * A unique ID for subscription and tenancy mapping.
     * 
     */
    @Import(name="subscriptionMappingId")
    private @Nullable String subscriptionMappingId;

    /**
     * @return A unique ID for subscription and tenancy mapping.
     * 
     */
    public Optional<String> subscriptionMappingId() {
        return Optional.ofNullable(this.subscriptionMappingId);
    }

    private GetSubscriptionMappingsPlainArgs() {}

    private GetSubscriptionMappingsPlainArgs(GetSubscriptionMappingsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.state = $.state;
        this.subscriptionId = $.subscriptionId;
        this.subscriptionMappingId = $.subscriptionMappingId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubscriptionMappingsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubscriptionMappingsPlainArgs $;

        public Builder() {
            $ = new GetSubscriptionMappingsPlainArgs();
        }

        public Builder(GetSubscriptionMappingsPlainArgs defaults) {
            $ = new GetSubscriptionMappingsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetSubscriptionMappingsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetSubscriptionMappingsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state The lifecycle state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param subscriptionId OCID of the subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionMappingId A unique ID for subscription and tenancy mapping.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionMappingId(@Nullable String subscriptionMappingId) {
            $.subscriptionMappingId = subscriptionMappingId;
            return this;
        }

        public GetSubscriptionMappingsPlainArgs build() {
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("GetSubscriptionMappingsPlainArgs", "subscriptionId");
            }
            return $;
        }
    }

}
