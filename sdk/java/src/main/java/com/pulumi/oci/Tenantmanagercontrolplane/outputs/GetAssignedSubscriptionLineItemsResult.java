// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.outputs.GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection;
import com.pulumi.oci.Tenantmanagercontrolplane.outputs.GetAssignedSubscriptionLineItemsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetAssignedSubscriptionLineItemsResult {
    private String assignedSubscriptionId;
    /**
     * @return The list of assigned_subscription_line_item_collection.
     * 
     */
    private List<GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection> assignedSubscriptionLineItemCollections;
    private @Nullable List<GetAssignedSubscriptionLineItemsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetAssignedSubscriptionLineItemsResult() {}
    public String assignedSubscriptionId() {
        return this.assignedSubscriptionId;
    }
    /**
     * @return The list of assigned_subscription_line_item_collection.
     * 
     */
    public List<GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection> assignedSubscriptionLineItemCollections() {
        return this.assignedSubscriptionLineItemCollections;
    }
    public List<GetAssignedSubscriptionLineItemsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssignedSubscriptionLineItemsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String assignedSubscriptionId;
        private List<GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection> assignedSubscriptionLineItemCollections;
        private @Nullable List<GetAssignedSubscriptionLineItemsFilter> filters;
        private String id;
        public Builder() {}
        public Builder(GetAssignedSubscriptionLineItemsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignedSubscriptionId = defaults.assignedSubscriptionId;
    	      this.assignedSubscriptionLineItemCollections = defaults.assignedSubscriptionLineItemCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder assignedSubscriptionId(String assignedSubscriptionId) {
            if (assignedSubscriptionId == null) {
              throw new MissingRequiredPropertyException("GetAssignedSubscriptionLineItemsResult", "assignedSubscriptionId");
            }
            this.assignedSubscriptionId = assignedSubscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder assignedSubscriptionLineItemCollections(List<GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection> assignedSubscriptionLineItemCollections) {
            if (assignedSubscriptionLineItemCollections == null) {
              throw new MissingRequiredPropertyException("GetAssignedSubscriptionLineItemsResult", "assignedSubscriptionLineItemCollections");
            }
            this.assignedSubscriptionLineItemCollections = assignedSubscriptionLineItemCollections;
            return this;
        }
        public Builder assignedSubscriptionLineItemCollections(GetAssignedSubscriptionLineItemsAssignedSubscriptionLineItemCollection... assignedSubscriptionLineItemCollections) {
            return assignedSubscriptionLineItemCollections(List.of(assignedSubscriptionLineItemCollections));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAssignedSubscriptionLineItemsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetAssignedSubscriptionLineItemsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAssignedSubscriptionLineItemsResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetAssignedSubscriptionLineItemsResult build() {
            final var _resultValue = new GetAssignedSubscriptionLineItemsResult();
            _resultValue.assignedSubscriptionId = assignedSubscriptionId;
            _resultValue.assignedSubscriptionLineItemCollections = assignedSubscriptionLineItemCollections;
            _resultValue.filters = filters;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
