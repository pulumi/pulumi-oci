// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.outputs.GetLinksFilter;
import com.pulumi.oci.Tenantmanagercontrolplane.outputs.GetLinksLinkCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLinksResult {
    /**
     * @return OCID of the child tenancy.
     * 
     */
    private @Nullable String childTenancyId;
    private @Nullable List<GetLinksFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of link_collection.
     * 
     */
    private List<GetLinksLinkCollection> linkCollections;
    /**
     * @return OCID of the parent tenancy.
     * 
     */
    private @Nullable String parentTenancyId;
    /**
     * @return Lifecycle state of the link.
     * 
     */
    private @Nullable String state;

    private GetLinksResult() {}
    /**
     * @return OCID of the child tenancy.
     * 
     */
    public Optional<String> childTenancyId() {
        return Optional.ofNullable(this.childTenancyId);
    }
    public List<GetLinksFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of link_collection.
     * 
     */
    public List<GetLinksLinkCollection> linkCollections() {
        return this.linkCollections;
    }
    /**
     * @return OCID of the parent tenancy.
     * 
     */
    public Optional<String> parentTenancyId() {
        return Optional.ofNullable(this.parentTenancyId);
    }
    /**
     * @return Lifecycle state of the link.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLinksResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String childTenancyId;
        private @Nullable List<GetLinksFilter> filters;
        private String id;
        private List<GetLinksLinkCollection> linkCollections;
        private @Nullable String parentTenancyId;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetLinksResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childTenancyId = defaults.childTenancyId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.linkCollections = defaults.linkCollections;
    	      this.parentTenancyId = defaults.parentTenancyId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder childTenancyId(@Nullable String childTenancyId) {

            this.childTenancyId = childTenancyId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetLinksFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetLinksFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLinksResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder linkCollections(List<GetLinksLinkCollection> linkCollections) {
            if (linkCollections == null) {
              throw new MissingRequiredPropertyException("GetLinksResult", "linkCollections");
            }
            this.linkCollections = linkCollections;
            return this;
        }
        public Builder linkCollections(GetLinksLinkCollection... linkCollections) {
            return linkCollections(List.of(linkCollections));
        }
        @CustomType.Setter
        public Builder parentTenancyId(@Nullable String parentTenancyId) {

            this.parentTenancyId = parentTenancyId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetLinksResult build() {
            final var _resultValue = new GetLinksResult();
            _resultValue.childTenancyId = childTenancyId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.linkCollections = linkCollections;
            _resultValue.parentTenancyId = parentTenancyId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
