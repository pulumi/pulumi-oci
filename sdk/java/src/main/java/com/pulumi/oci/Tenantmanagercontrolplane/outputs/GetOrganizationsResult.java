// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.outputs.GetOrganizationsFilter;
import com.pulumi.oci.Tenantmanagercontrolplane.outputs.GetOrganizationsOrganizationCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetOrganizationsResult {
    /**
     * @return OCID of the compartment containing the organization. Always a tenancy OCID.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetOrganizationsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of organization_collection.
     * 
     */
    private List<GetOrganizationsOrganizationCollection> organizationCollections;

    private GetOrganizationsResult() {}
    /**
     * @return OCID of the compartment containing the organization. Always a tenancy OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetOrganizationsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of organization_collection.
     * 
     */
    public List<GetOrganizationsOrganizationCollection> organizationCollections() {
        return this.organizationCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetOrganizationsFilter> filters;
        private String id;
        private List<GetOrganizationsOrganizationCollection> organizationCollections;
        public Builder() {}
        public Builder(GetOrganizationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.organizationCollections = defaults.organizationCollections;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetOrganizationsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetOrganizationsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder organizationCollections(List<GetOrganizationsOrganizationCollection> organizationCollections) {
            if (organizationCollections == null) {
              throw new MissingRequiredPropertyException("GetOrganizationsResult", "organizationCollections");
            }
            this.organizationCollections = organizationCollections;
            return this;
        }
        public Builder organizationCollections(GetOrganizationsOrganizationCollection... organizationCollections) {
            return organizationCollections(List.of(organizationCollections));
        }
        public GetOrganizationsResult build() {
            final var _resultValue = new GetOrganizationsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.organizationCollections = organizationCollections;
            return _resultValue;
        }
    }
}
