// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRecipientInvitationResult {
    /**
     * @return OCID of the recipient tenancy.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-created name to describe the invitation. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Email address of the recipient.
     * 
     */
    private String recipientEmailAddress;
    private String recipientInvitationId;
    /**
     * @return OCID of the corresponding sender invitation.
     * 
     */
    private String senderInvitationId;
    /**
     * @return OCID of the sender tenancy.
     * 
     */
    private String senderTenancyId;
    /**
     * @return Lifecycle state of the recipient invitation.
     * 
     */
    private String state;
    /**
     * @return Status of the recipient invitation.
     * 
     */
    private String status;
    /**
     * @return The list of subjects the invitation contains.
     * 
     */
    private List<String> subjects;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Date and time when the recipient invitation was created.
     * 
     */
    private String timeCreated;
    /**
     * @return Date and time when the recipient invitation was last updated.
     * 
     */
    private String timeUpdated;

    private GetRecipientInvitationResult() {}
    /**
     * @return OCID of the recipient tenancy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-created name to describe the invitation. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Email address of the recipient.
     * 
     */
    public String recipientEmailAddress() {
        return this.recipientEmailAddress;
    }
    public String recipientInvitationId() {
        return this.recipientInvitationId;
    }
    /**
     * @return OCID of the corresponding sender invitation.
     * 
     */
    public String senderInvitationId() {
        return this.senderInvitationId;
    }
    /**
     * @return OCID of the sender tenancy.
     * 
     */
    public String senderTenancyId() {
        return this.senderTenancyId;
    }
    /**
     * @return Lifecycle state of the recipient invitation.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Status of the recipient invitation.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The list of subjects the invitation contains.
     * 
     */
    public List<String> subjects() {
        return this.subjects;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Date and time when the recipient invitation was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Date and time when the recipient invitation was last updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecipientInvitationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String recipientEmailAddress;
        private String recipientInvitationId;
        private String senderInvitationId;
        private String senderTenancyId;
        private String state;
        private String status;
        private List<String> subjects;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetRecipientInvitationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.recipientEmailAddress = defaults.recipientEmailAddress;
    	      this.recipientInvitationId = defaults.recipientInvitationId;
    	      this.senderInvitationId = defaults.senderInvitationId;
    	      this.senderTenancyId = defaults.senderTenancyId;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.subjects = defaults.subjects;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder recipientEmailAddress(String recipientEmailAddress) {
            if (recipientEmailAddress == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "recipientEmailAddress");
            }
            this.recipientEmailAddress = recipientEmailAddress;
            return this;
        }
        @CustomType.Setter
        public Builder recipientInvitationId(String recipientInvitationId) {
            if (recipientInvitationId == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "recipientInvitationId");
            }
            this.recipientInvitationId = recipientInvitationId;
            return this;
        }
        @CustomType.Setter
        public Builder senderInvitationId(String senderInvitationId) {
            if (senderInvitationId == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "senderInvitationId");
            }
            this.senderInvitationId = senderInvitationId;
            return this;
        }
        @CustomType.Setter
        public Builder senderTenancyId(String senderTenancyId) {
            if (senderTenancyId == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "senderTenancyId");
            }
            this.senderTenancyId = senderTenancyId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subjects(List<String> subjects) {
            if (subjects == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "subjects");
            }
            this.subjects = subjects;
            return this;
        }
        public Builder subjects(String... subjects) {
            return subjects(List.of(subjects));
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetRecipientInvitationResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetRecipientInvitationResult build() {
            final var _resultValue = new GetRecipientInvitationResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.recipientEmailAddress = recipientEmailAddress;
            _resultValue.recipientInvitationId = recipientInvitationId;
            _resultValue.senderInvitationId = senderInvitationId;
            _resultValue.senderTenancyId = senderTenancyId;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.subjects = subjects;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
