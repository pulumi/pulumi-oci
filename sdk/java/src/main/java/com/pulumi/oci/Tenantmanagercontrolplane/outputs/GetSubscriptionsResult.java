// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Tenantmanagercontrolplane.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Tenantmanagercontrolplane.outputs.GetSubscriptionsFilter;
import com.pulumi.oci.Tenantmanagercontrolplane.outputs.GetSubscriptionsSubscriptionCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscriptionsResult {
    /**
     * @return The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
     * 
     */
    private @Nullable String entityVersion;
    private @Nullable List<GetSubscriptionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of subscription_collection.
     * 
     */
    private List<GetSubscriptionsSubscriptionCollection> subscriptionCollections;
    private @Nullable String subscriptionId;

    private GetSubscriptionsResult() {}
    /**
     * @return The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
     * 
     */
    public Optional<String> entityVersion() {
        return Optional.ofNullable(this.entityVersion);
    }
    public List<GetSubscriptionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of subscription_collection.
     * 
     */
    public List<GetSubscriptionsSubscriptionCollection> subscriptionCollections() {
        return this.subscriptionCollections;
    }
    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String entityVersion;
        private @Nullable List<GetSubscriptionsFilter> filters;
        private String id;
        private List<GetSubscriptionsSubscriptionCollection> subscriptionCollections;
        private @Nullable String subscriptionId;
        public Builder() {}
        public Builder(GetSubscriptionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.entityVersion = defaults.entityVersion;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.subscriptionCollections = defaults.subscriptionCollections;
    	      this.subscriptionId = defaults.subscriptionId;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder entityVersion(@Nullable String entityVersion) {

            this.entityVersion = entityVersion;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSubscriptionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSubscriptionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionCollections(List<GetSubscriptionsSubscriptionCollection> subscriptionCollections) {
            if (subscriptionCollections == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsResult", "subscriptionCollections");
            }
            this.subscriptionCollections = subscriptionCollections;
            return this;
        }
        public Builder subscriptionCollections(GetSubscriptionsSubscriptionCollection... subscriptionCollections) {
            return subscriptionCollections(List.of(subscriptionCollections));
        }
        @CustomType.Setter
        public Builder subscriptionId(@Nullable String subscriptionId) {

            this.subscriptionId = subscriptionId;
            return this;
        }
        public GetSubscriptionsResult build() {
            final var _resultValue = new GetSubscriptionsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.entityVersion = entityVersion;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.subscriptionCollections = subscriptionCollections;
            _resultValue.subscriptionId = subscriptionId;
            return _resultValue;
        }
    }
}
