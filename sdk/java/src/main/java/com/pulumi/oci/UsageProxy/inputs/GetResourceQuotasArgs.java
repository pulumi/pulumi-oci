// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.UsageProxy.inputs.GetResourceQuotasFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetResourceQuotasArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResourceQuotasArgs Empty = new GetResourceQuotasArgs();

    /**
     * The OCID of the root compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the root compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetResourceQuotasFilterArgs>> filters;

    public Optional<Output<List<GetResourceQuotasFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Service entitlement Id.
     * 
     */
    @Import(name="serviceEntitlement")
    private @Nullable Output<String> serviceEntitlement;

    /**
     * @return Service entitlement Id.
     * 
     */
    public Optional<Output<String>> serviceEntitlement() {
        return Optional.ofNullable(this.serviceEntitlement);
    }

    /**
     * Service Name.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Service Name.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private GetResourceQuotasArgs() {}

    private GetResourceQuotasArgs(GetResourceQuotasArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.serviceEntitlement = $.serviceEntitlement;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResourceQuotasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResourceQuotasArgs $;

        public Builder() {
            $ = new GetResourceQuotasArgs();
        }

        public Builder(GetResourceQuotasArgs defaults) {
            $ = new GetResourceQuotasArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetResourceQuotasFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetResourceQuotasFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetResourceQuotasFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param serviceEntitlement Service entitlement Id.
         * 
         * @return builder
         * 
         */
        public Builder serviceEntitlement(@Nullable Output<String> serviceEntitlement) {
            $.serviceEntitlement = serviceEntitlement;
            return this;
        }

        /**
         * @param serviceEntitlement Service entitlement Id.
         * 
         * @return builder
         * 
         */
        public Builder serviceEntitlement(String serviceEntitlement) {
            return serviceEntitlement(Output.of(serviceEntitlement));
        }

        /**
         * @param serviceName Service Name.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service Name.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public GetResourceQuotasArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetResourceQuotasArgs", "compartmentId");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetResourceQuotasArgs", "serviceName");
            }
            return $;
        }
    }

}
