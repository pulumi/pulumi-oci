// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.UsageProxy.inputs.GetResourceQuotasFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetResourceQuotasPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResourceQuotasPlainArgs Empty = new GetResourceQuotasPlainArgs();

    /**
     * The OCID of the root compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetResourceQuotasFilter> filters;

    public Optional<List<GetResourceQuotasFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Service entitlement Id.
     * 
     */
    @Import(name="serviceEntitlement")
    private @Nullable String serviceEntitlement;

    /**
     * @return Service entitlement Id.
     * 
     */
    public Optional<String> serviceEntitlement() {
        return Optional.ofNullable(this.serviceEntitlement);
    }

    /**
     * Service Name.
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return Service Name.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    private GetResourceQuotasPlainArgs() {}

    private GetResourceQuotasPlainArgs(GetResourceQuotasPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.serviceEntitlement = $.serviceEntitlement;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResourceQuotasPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResourceQuotasPlainArgs $;

        public Builder() {
            $ = new GetResourceQuotasPlainArgs();
        }

        public Builder(GetResourceQuotasPlainArgs defaults) {
            $ = new GetResourceQuotasPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetResourceQuotasFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetResourceQuotasFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param serviceEntitlement Service entitlement Id.
         * 
         * @return builder
         * 
         */
        public Builder serviceEntitlement(@Nullable String serviceEntitlement) {
            $.serviceEntitlement = serviceEntitlement;
            return this;
        }

        /**
         * @param serviceName Service Name.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public GetResourceQuotasPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetResourceQuotasPlainArgs", "compartmentId");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetResourceQuotasPlainArgs", "serviceName");
            }
            return $;
        }
    }

}
