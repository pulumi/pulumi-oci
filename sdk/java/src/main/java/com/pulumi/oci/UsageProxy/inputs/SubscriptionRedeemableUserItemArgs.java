// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionRedeemableUserItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionRedeemableUserItemArgs Empty = new SubscriptionRedeemableUserItemArgs();

    /**
     * The email ID for a user that can redeem rewards.
     * 
     */
    @Import(name="emailId", required=true)
    private Output<String> emailId;

    /**
     * @return The email ID for a user that can redeem rewards.
     * 
     */
    public Output<String> emailId() {
        return this.emailId;
    }

    /**
     * The first name of the user that can redeem rewards.
     * 
     */
    @Import(name="firstName")
    private @Nullable Output<String> firstName;

    /**
     * @return The first name of the user that can redeem rewards.
     * 
     */
    public Optional<Output<String>> firstName() {
        return Optional.ofNullable(this.firstName);
    }

    /**
     * The last name of the user that can redeem rewards.
     * 
     */
    @Import(name="lastName")
    private @Nullable Output<String> lastName;

    /**
     * @return The last name of the user that can redeem rewards.
     * 
     */
    public Optional<Output<String>> lastName() {
        return Optional.ofNullable(this.lastName);
    }

    private SubscriptionRedeemableUserItemArgs() {}

    private SubscriptionRedeemableUserItemArgs(SubscriptionRedeemableUserItemArgs $) {
        this.emailId = $.emailId;
        this.firstName = $.firstName;
        this.lastName = $.lastName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionRedeemableUserItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionRedeemableUserItemArgs $;

        public Builder() {
            $ = new SubscriptionRedeemableUserItemArgs();
        }

        public Builder(SubscriptionRedeemableUserItemArgs defaults) {
            $ = new SubscriptionRedeemableUserItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emailId The email ID for a user that can redeem rewards.
         * 
         * @return builder
         * 
         */
        public Builder emailId(Output<String> emailId) {
            $.emailId = emailId;
            return this;
        }

        /**
         * @param emailId The email ID for a user that can redeem rewards.
         * 
         * @return builder
         * 
         */
        public Builder emailId(String emailId) {
            return emailId(Output.of(emailId));
        }

        /**
         * @param firstName The first name of the user that can redeem rewards.
         * 
         * @return builder
         * 
         */
        public Builder firstName(@Nullable Output<String> firstName) {
            $.firstName = firstName;
            return this;
        }

        /**
         * @param firstName The first name of the user that can redeem rewards.
         * 
         * @return builder
         * 
         */
        public Builder firstName(String firstName) {
            return firstName(Output.of(firstName));
        }

        /**
         * @param lastName The last name of the user that can redeem rewards.
         * 
         * @return builder
         * 
         */
        public Builder lastName(@Nullable Output<String> lastName) {
            $.lastName = lastName;
            return this;
        }

        /**
         * @param lastName The last name of the user that can redeem rewards.
         * 
         * @return builder
         * 
         */
        public Builder lastName(String lastName) {
            return lastName(Output.of(lastName));
        }

        public SubscriptionRedeemableUserItemArgs build() {
            if ($.emailId == null) {
                throw new MissingRequiredPropertyException("SubscriptionRedeemableUserItemArgs", "emailId");
            }
            return $;
        }
    }

}
