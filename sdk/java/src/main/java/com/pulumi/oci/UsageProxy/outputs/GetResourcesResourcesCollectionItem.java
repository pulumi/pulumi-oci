// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.UsageProxy.outputs.GetResourcesResourcesCollectionItemSkus;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResourcesResourcesCollectionItem {
    /**
     * @return The details of any child resources.
     * 
     */
    private @Nullable List<String> childResources;
    /**
     * @return Units to be used for daily aggregated data.
     * 
     */
    private @Nullable String dailyUnitDisplayName;
    /**
     * @return Description of the resource.
     * 
     */
    private @Nullable String description;
    /**
     * @return Units to be used for hourly aggregated data.
     * 
     */
    private @Nullable String hourlyUnitDisplayName;
    /**
     * @return Instance type for the resource.
     * 
     */
    private @Nullable String instanceType;
    /**
     * @return Indicates if the SKU was purchased
     * 
     */
    private @Nullable Boolean isPurchased;
    /**
     * @return Name of the resource.
     * 
     */
    private @Nullable String name;
    /**
     * @return Default units to use when unspecified.
     * 
     */
    private @Nullable String rawUnitDisplayName;
    /**
     * @return Name of the service.
     * 
     */
    private @Nullable String servicename;
    /**
     * @return The details of resource Skus.
     * 
     */
    private @Nullable List<GetResourcesResourcesCollectionItemSkus> skuses;
    /**
     * @return Usage data type of the resource.
     * 
     */
    private @Nullable String usageDataType;

    private GetResourcesResourcesCollectionItem() {}
    /**
     * @return The details of any child resources.
     * 
     */
    public List<String> childResources() {
        return this.childResources == null ? List.of() : this.childResources;
    }
    /**
     * @return Units to be used for daily aggregated data.
     * 
     */
    public Optional<String> dailyUnitDisplayName() {
        return Optional.ofNullable(this.dailyUnitDisplayName);
    }
    /**
     * @return Description of the resource.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Units to be used for hourly aggregated data.
     * 
     */
    public Optional<String> hourlyUnitDisplayName() {
        return Optional.ofNullable(this.hourlyUnitDisplayName);
    }
    /**
     * @return Instance type for the resource.
     * 
     */
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    /**
     * @return Indicates if the SKU was purchased
     * 
     */
    public Optional<Boolean> isPurchased() {
        return Optional.ofNullable(this.isPurchased);
    }
    /**
     * @return Name of the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Default units to use when unspecified.
     * 
     */
    public Optional<String> rawUnitDisplayName() {
        return Optional.ofNullable(this.rawUnitDisplayName);
    }
    /**
     * @return Name of the service.
     * 
     */
    public Optional<String> servicename() {
        return Optional.ofNullable(this.servicename);
    }
    /**
     * @return The details of resource Skus.
     * 
     */
    public List<GetResourcesResourcesCollectionItemSkus> skuses() {
        return this.skuses == null ? List.of() : this.skuses;
    }
    /**
     * @return Usage data type of the resource.
     * 
     */
    public Optional<String> usageDataType() {
        return Optional.ofNullable(this.usageDataType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcesResourcesCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> childResources;
        private @Nullable String dailyUnitDisplayName;
        private @Nullable String description;
        private @Nullable String hourlyUnitDisplayName;
        private @Nullable String instanceType;
        private @Nullable Boolean isPurchased;
        private @Nullable String name;
        private @Nullable String rawUnitDisplayName;
        private @Nullable String servicename;
        private @Nullable List<GetResourcesResourcesCollectionItemSkus> skuses;
        private @Nullable String usageDataType;
        public Builder() {}
        public Builder(GetResourcesResourcesCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childResources = defaults.childResources;
    	      this.dailyUnitDisplayName = defaults.dailyUnitDisplayName;
    	      this.description = defaults.description;
    	      this.hourlyUnitDisplayName = defaults.hourlyUnitDisplayName;
    	      this.instanceType = defaults.instanceType;
    	      this.isPurchased = defaults.isPurchased;
    	      this.name = defaults.name;
    	      this.rawUnitDisplayName = defaults.rawUnitDisplayName;
    	      this.servicename = defaults.servicename;
    	      this.skuses = defaults.skuses;
    	      this.usageDataType = defaults.usageDataType;
        }

        @CustomType.Setter
        public Builder childResources(@Nullable List<String> childResources) {
            this.childResources = childResources;
            return this;
        }
        public Builder childResources(String... childResources) {
            return childResources(List.of(childResources));
        }
        @CustomType.Setter
        public Builder dailyUnitDisplayName(@Nullable String dailyUnitDisplayName) {
            this.dailyUnitDisplayName = dailyUnitDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder hourlyUnitDisplayName(@Nullable String hourlyUnitDisplayName) {
            this.hourlyUnitDisplayName = hourlyUnitDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder isPurchased(@Nullable Boolean isPurchased) {
            this.isPurchased = isPurchased;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder rawUnitDisplayName(@Nullable String rawUnitDisplayName) {
            this.rawUnitDisplayName = rawUnitDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder servicename(@Nullable String servicename) {
            this.servicename = servicename;
            return this;
        }
        @CustomType.Setter
        public Builder skuses(@Nullable List<GetResourcesResourcesCollectionItemSkus> skuses) {
            this.skuses = skuses;
            return this;
        }
        public Builder skuses(GetResourcesResourcesCollectionItemSkus... skuses) {
            return skuses(List.of(skuses));
        }
        @CustomType.Setter
        public Builder usageDataType(@Nullable String usageDataType) {
            this.usageDataType = usageDataType;
            return this;
        }
        public GetResourcesResourcesCollectionItem build() {
            final var o = new GetResourcesResourcesCollectionItem();
            o.childResources = childResources;
            o.dailyUnitDisplayName = dailyUnitDisplayName;
            o.description = description;
            o.hourlyUnitDisplayName = hourlyUnitDisplayName;
            o.instanceType = instanceType;
            o.isPurchased = isPurchased;
            o.name = name;
            o.rawUnitDisplayName = rawUnitDisplayName;
            o.servicename = servicename;
            o.skuses = skuses;
            o.usageDataType = usageDataType;
            return o;
        }
    }
}
