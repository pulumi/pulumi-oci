// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionProductsProductCollectionItemItem {
    /**
     * @return The earned rewards for the product.
     * 
     */
    private Double earnedRewards;
    /**
     * @return The boolean parameter to indicate if the product is eligible to earn rewards.
     * 
     */
    private Boolean isEligibleToEarnRewards;
    /**
     * @return The rate card product name.
     * 
     */
    private String productName;
    /**
     * @return The rate card product number.
     * 
     */
    private String productNumber;
    /**
     * @return The rate card product usage amount.
     * 
     */
    private Double usageAmount;

    private GetSubscriptionProductsProductCollectionItemItem() {}
    /**
     * @return The earned rewards for the product.
     * 
     */
    public Double earnedRewards() {
        return this.earnedRewards;
    }
    /**
     * @return The boolean parameter to indicate if the product is eligible to earn rewards.
     * 
     */
    public Boolean isEligibleToEarnRewards() {
        return this.isEligibleToEarnRewards;
    }
    /**
     * @return The rate card product name.
     * 
     */
    public String productName() {
        return this.productName;
    }
    /**
     * @return The rate card product number.
     * 
     */
    public String productNumber() {
        return this.productNumber;
    }
    /**
     * @return The rate card product usage amount.
     * 
     */
    public Double usageAmount() {
        return this.usageAmount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionProductsProductCollectionItemItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double earnedRewards;
        private Boolean isEligibleToEarnRewards;
        private String productName;
        private String productNumber;
        private Double usageAmount;
        public Builder() {}
        public Builder(GetSubscriptionProductsProductCollectionItemItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.earnedRewards = defaults.earnedRewards;
    	      this.isEligibleToEarnRewards = defaults.isEligibleToEarnRewards;
    	      this.productName = defaults.productName;
    	      this.productNumber = defaults.productNumber;
    	      this.usageAmount = defaults.usageAmount;
        }

        @CustomType.Setter
        public Builder earnedRewards(Double earnedRewards) {
            this.earnedRewards = Objects.requireNonNull(earnedRewards);
            return this;
        }
        @CustomType.Setter
        public Builder isEligibleToEarnRewards(Boolean isEligibleToEarnRewards) {
            this.isEligibleToEarnRewards = Objects.requireNonNull(isEligibleToEarnRewards);
            return this;
        }
        @CustomType.Setter
        public Builder productName(String productName) {
            this.productName = Objects.requireNonNull(productName);
            return this;
        }
        @CustomType.Setter
        public Builder productNumber(String productNumber) {
            this.productNumber = Objects.requireNonNull(productNumber);
            return this;
        }
        @CustomType.Setter
        public Builder usageAmount(Double usageAmount) {
            this.usageAmount = Objects.requireNonNull(usageAmount);
            return this;
        }
        public GetSubscriptionProductsProductCollectionItemItem build() {
            final var o = new GetSubscriptionProductsProductCollectionItemItem();
            o.earnedRewards = earnedRewards;
            o.isEligibleToEarnRewards = isEligibleToEarnRewards;
            o.productName = productName;
            o.productNumber = productNumber;
            o.usageAmount = usageAmount;
            return o;
        }
    }
}
