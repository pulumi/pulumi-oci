// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscriptionRedemptionItem {
    /**
     * @return It provides the redeemed rewards in base/subscription currency.
     * 
     */
    private @Nullable Double baseRewards;
    /**
     * @return It provides the fxRate between invoice currency and subscription currency.
     * 
     */
    private @Nullable Double fxRate;
    /**
     * @return The currency associated with invoice.
     * 
     */
    private @Nullable String invoiceCurrency;
    /**
     * @return It provides the invoice number against the redemption.
     * 
     */
    private @Nullable String invoiceNumber;
    /**
     * @return It provides the invoice total amount of given redemption.
     * 
     */
    private @Nullable Double invoiceTotalAmount;
    /**
     * @return It provides the redeemed rewards in invoice currency.
     * 
     */
    private @Nullable Double redeemedRewards;
    /**
     * @return The redemption code used in the Billing Center during the reward redemption process.
     * 
     */
    private @Nullable String redemptionCode;
    /**
     * @return It provides the redemption email id.
     * 
     */
    private @Nullable String redemptionEmail;
    /**
     * @return It provides the invoice date.
     * 
     */
    private @Nullable String timeInvoiced;
    /**
     * @return It provides redeem date.
     * 
     */
    private @Nullable String timeRedeemed;

    private GetSubscriptionRedemptionItem() {}
    /**
     * @return It provides the redeemed rewards in base/subscription currency.
     * 
     */
    public Optional<Double> baseRewards() {
        return Optional.ofNullable(this.baseRewards);
    }
    /**
     * @return It provides the fxRate between invoice currency and subscription currency.
     * 
     */
    public Optional<Double> fxRate() {
        return Optional.ofNullable(this.fxRate);
    }
    /**
     * @return The currency associated with invoice.
     * 
     */
    public Optional<String> invoiceCurrency() {
        return Optional.ofNullable(this.invoiceCurrency);
    }
    /**
     * @return It provides the invoice number against the redemption.
     * 
     */
    public Optional<String> invoiceNumber() {
        return Optional.ofNullable(this.invoiceNumber);
    }
    /**
     * @return It provides the invoice total amount of given redemption.
     * 
     */
    public Optional<Double> invoiceTotalAmount() {
        return Optional.ofNullable(this.invoiceTotalAmount);
    }
    /**
     * @return It provides the redeemed rewards in invoice currency.
     * 
     */
    public Optional<Double> redeemedRewards() {
        return Optional.ofNullable(this.redeemedRewards);
    }
    /**
     * @return The redemption code used in the Billing Center during the reward redemption process.
     * 
     */
    public Optional<String> redemptionCode() {
        return Optional.ofNullable(this.redemptionCode);
    }
    /**
     * @return It provides the redemption email id.
     * 
     */
    public Optional<String> redemptionEmail() {
        return Optional.ofNullable(this.redemptionEmail);
    }
    /**
     * @return It provides the invoice date.
     * 
     */
    public Optional<String> timeInvoiced() {
        return Optional.ofNullable(this.timeInvoiced);
    }
    /**
     * @return It provides redeem date.
     * 
     */
    public Optional<String> timeRedeemed() {
        return Optional.ofNullable(this.timeRedeemed);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionRedemptionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double baseRewards;
        private @Nullable Double fxRate;
        private @Nullable String invoiceCurrency;
        private @Nullable String invoiceNumber;
        private @Nullable Double invoiceTotalAmount;
        private @Nullable Double redeemedRewards;
        private @Nullable String redemptionCode;
        private @Nullable String redemptionEmail;
        private @Nullable String timeInvoiced;
        private @Nullable String timeRedeemed;
        public Builder() {}
        public Builder(GetSubscriptionRedemptionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseRewards = defaults.baseRewards;
    	      this.fxRate = defaults.fxRate;
    	      this.invoiceCurrency = defaults.invoiceCurrency;
    	      this.invoiceNumber = defaults.invoiceNumber;
    	      this.invoiceTotalAmount = defaults.invoiceTotalAmount;
    	      this.redeemedRewards = defaults.redeemedRewards;
    	      this.redemptionCode = defaults.redemptionCode;
    	      this.redemptionEmail = defaults.redemptionEmail;
    	      this.timeInvoiced = defaults.timeInvoiced;
    	      this.timeRedeemed = defaults.timeRedeemed;
        }

        @CustomType.Setter
        public Builder baseRewards(@Nullable Double baseRewards) {
            this.baseRewards = baseRewards;
            return this;
        }
        @CustomType.Setter
        public Builder fxRate(@Nullable Double fxRate) {
            this.fxRate = fxRate;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceCurrency(@Nullable String invoiceCurrency) {
            this.invoiceCurrency = invoiceCurrency;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceNumber(@Nullable String invoiceNumber) {
            this.invoiceNumber = invoiceNumber;
            return this;
        }
        @CustomType.Setter
        public Builder invoiceTotalAmount(@Nullable Double invoiceTotalAmount) {
            this.invoiceTotalAmount = invoiceTotalAmount;
            return this;
        }
        @CustomType.Setter
        public Builder redeemedRewards(@Nullable Double redeemedRewards) {
            this.redeemedRewards = redeemedRewards;
            return this;
        }
        @CustomType.Setter
        public Builder redemptionCode(@Nullable String redemptionCode) {
            this.redemptionCode = redemptionCode;
            return this;
        }
        @CustomType.Setter
        public Builder redemptionEmail(@Nullable String redemptionEmail) {
            this.redemptionEmail = redemptionEmail;
            return this;
        }
        @CustomType.Setter
        public Builder timeInvoiced(@Nullable String timeInvoiced) {
            this.timeInvoiced = timeInvoiced;
            return this;
        }
        @CustomType.Setter
        public Builder timeRedeemed(@Nullable String timeRedeemed) {
            this.timeRedeemed = timeRedeemed;
            return this;
        }
        public GetSubscriptionRedemptionItem build() {
            final var o = new GetSubscriptionRedemptionItem();
            o.baseRewards = baseRewards;
            o.fxRate = fxRate;
            o.invoiceCurrency = invoiceCurrency;
            o.invoiceNumber = invoiceNumber;
            o.invoiceTotalAmount = invoiceTotalAmount;
            o.redeemedRewards = redeemedRewards;
            o.redemptionCode = redemptionCode;
            o.redemptionEmail = redemptionEmail;
            o.timeInvoiced = timeInvoiced;
            o.timeRedeemed = timeRedeemed;
            return o;
        }
    }
}
