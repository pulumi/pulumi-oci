// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionRedemptionItem {
    /**
     * @return It provides the redeemed rewards in base/subscription currency.
     * 
     */
    private Double baseRewards;
    /**
     * @return It provides the fxRate between invoice currency and subscription currency.
     * 
     */
    private Double fxRate;
    /**
     * @return The currency associated with invoice.
     * 
     */
    private String invoiceCurrency;
    /**
     * @return It provides the invoice number against the redemption.
     * 
     */
    private String invoiceNumber;
    /**
     * @return It provides the invoice total amount of given redemption.
     * 
     */
    private Double invoiceTotalAmount;
    /**
     * @return It provides the redeemed rewards in invoice currency.
     * 
     */
    private Double redeemedRewards;
    /**
     * @return The redemption code used in the Billing Center during the reward redemption process.
     * 
     */
    private String redemptionCode;
    /**
     * @return It provides the redemption email id.
     * 
     */
    private String redemptionEmail;
    /**
     * @return It provides the invoice date.
     * 
     */
    private String timeInvoiced;
    /**
     * @return It provides redeem date.
     * 
     */
    private String timeRedeemed;

    private GetSubscriptionRedemptionItem() {}
    /**
     * @return It provides the redeemed rewards in base/subscription currency.
     * 
     */
    public Double baseRewards() {
        return this.baseRewards;
    }
    /**
     * @return It provides the fxRate between invoice currency and subscription currency.
     * 
     */
    public Double fxRate() {
        return this.fxRate;
    }
    /**
     * @return The currency associated with invoice.
     * 
     */
    public String invoiceCurrency() {
        return this.invoiceCurrency;
    }
    /**
     * @return It provides the invoice number against the redemption.
     * 
     */
    public String invoiceNumber() {
        return this.invoiceNumber;
    }
    /**
     * @return It provides the invoice total amount of given redemption.
     * 
     */
    public Double invoiceTotalAmount() {
        return this.invoiceTotalAmount;
    }
    /**
     * @return It provides the redeemed rewards in invoice currency.
     * 
     */
    public Double redeemedRewards() {
        return this.redeemedRewards;
    }
    /**
     * @return The redemption code used in the Billing Center during the reward redemption process.
     * 
     */
    public String redemptionCode() {
        return this.redemptionCode;
    }
    /**
     * @return It provides the redemption email id.
     * 
     */
    public String redemptionEmail() {
        return this.redemptionEmail;
    }
    /**
     * @return It provides the invoice date.
     * 
     */
    public String timeInvoiced() {
        return this.timeInvoiced;
    }
    /**
     * @return It provides redeem date.
     * 
     */
    public String timeRedeemed() {
        return this.timeRedeemed;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionRedemptionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double baseRewards;
        private Double fxRate;
        private String invoiceCurrency;
        private String invoiceNumber;
        private Double invoiceTotalAmount;
        private Double redeemedRewards;
        private String redemptionCode;
        private String redemptionEmail;
        private String timeInvoiced;
        private String timeRedeemed;
        public Builder() {}
        public Builder(GetSubscriptionRedemptionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseRewards = defaults.baseRewards;
    	      this.fxRate = defaults.fxRate;
    	      this.invoiceCurrency = defaults.invoiceCurrency;
    	      this.invoiceNumber = defaults.invoiceNumber;
    	      this.invoiceTotalAmount = defaults.invoiceTotalAmount;
    	      this.redeemedRewards = defaults.redeemedRewards;
    	      this.redemptionCode = defaults.redemptionCode;
    	      this.redemptionEmail = defaults.redemptionEmail;
    	      this.timeInvoiced = defaults.timeInvoiced;
    	      this.timeRedeemed = defaults.timeRedeemed;
        }

        @CustomType.Setter
        public Builder baseRewards(Double baseRewards) {
            this.baseRewards = Objects.requireNonNull(baseRewards);
            return this;
        }
        @CustomType.Setter
        public Builder fxRate(Double fxRate) {
            this.fxRate = Objects.requireNonNull(fxRate);
            return this;
        }
        @CustomType.Setter
        public Builder invoiceCurrency(String invoiceCurrency) {
            this.invoiceCurrency = Objects.requireNonNull(invoiceCurrency);
            return this;
        }
        @CustomType.Setter
        public Builder invoiceNumber(String invoiceNumber) {
            this.invoiceNumber = Objects.requireNonNull(invoiceNumber);
            return this;
        }
        @CustomType.Setter
        public Builder invoiceTotalAmount(Double invoiceTotalAmount) {
            this.invoiceTotalAmount = Objects.requireNonNull(invoiceTotalAmount);
            return this;
        }
        @CustomType.Setter
        public Builder redeemedRewards(Double redeemedRewards) {
            this.redeemedRewards = Objects.requireNonNull(redeemedRewards);
            return this;
        }
        @CustomType.Setter
        public Builder redemptionCode(String redemptionCode) {
            this.redemptionCode = Objects.requireNonNull(redemptionCode);
            return this;
        }
        @CustomType.Setter
        public Builder redemptionEmail(String redemptionEmail) {
            this.redemptionEmail = Objects.requireNonNull(redemptionEmail);
            return this;
        }
        @CustomType.Setter
        public Builder timeInvoiced(String timeInvoiced) {
            this.timeInvoiced = Objects.requireNonNull(timeInvoiced);
            return this;
        }
        @CustomType.Setter
        public Builder timeRedeemed(String timeRedeemed) {
            this.timeRedeemed = Objects.requireNonNull(timeRedeemed);
            return this;
        }
        public GetSubscriptionRedemptionItem build() {
            final var _resultValue = new GetSubscriptionRedemptionItem();
            _resultValue.baseRewards = baseRewards;
            _resultValue.fxRate = fxRate;
            _resultValue.invoiceCurrency = invoiceCurrency;
            _resultValue.invoiceNumber = invoiceNumber;
            _resultValue.invoiceTotalAmount = invoiceTotalAmount;
            _resultValue.redeemedRewards = redeemedRewards;
            _resultValue.redemptionCode = redemptionCode;
            _resultValue.redemptionEmail = redemptionEmail;
            _resultValue.timeInvoiced = timeInvoiced;
            _resultValue.timeRedeemed = timeRedeemed;
            return _resultValue;
        }
    }
}
