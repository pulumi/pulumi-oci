// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.UsageProxy.outputs.GetSubscriptionRedemptionsFilter;
import com.pulumi.oci.UsageProxy.outputs.GetSubscriptionRedemptionsRedemptionCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscriptionRedemptionsResult {
    private @Nullable List<GetSubscriptionRedemptionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of redemption_collection.
     * 
     */
    private @Nullable List<GetSubscriptionRedemptionsRedemptionCollection> redemptionCollections;
    private String subscriptionId;
    private String tenancyId;
    private @Nullable String timeRedeemedGreaterThanOrEqualTo;
    private @Nullable String timeRedeemedLessThan;

    private GetSubscriptionRedemptionsResult() {}
    public List<GetSubscriptionRedemptionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of redemption_collection.
     * 
     */
    public List<GetSubscriptionRedemptionsRedemptionCollection> redemptionCollections() {
        return this.redemptionCollections == null ? List.of() : this.redemptionCollections;
    }
    public String subscriptionId() {
        return this.subscriptionId;
    }
    public String tenancyId() {
        return this.tenancyId;
    }
    public Optional<String> timeRedeemedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeRedeemedGreaterThanOrEqualTo);
    }
    public Optional<String> timeRedeemedLessThan() {
        return Optional.ofNullable(this.timeRedeemedLessThan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionRedemptionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetSubscriptionRedemptionsFilter> filters;
        private @Nullable String id;
        private @Nullable List<GetSubscriptionRedemptionsRedemptionCollection> redemptionCollections;
        private String subscriptionId;
        private String tenancyId;
        private @Nullable String timeRedeemedGreaterThanOrEqualTo;
        private @Nullable String timeRedeemedLessThan;
        public Builder() {}
        public Builder(GetSubscriptionRedemptionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.redemptionCollections = defaults.redemptionCollections;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tenancyId = defaults.tenancyId;
    	      this.timeRedeemedGreaterThanOrEqualTo = defaults.timeRedeemedGreaterThanOrEqualTo;
    	      this.timeRedeemedLessThan = defaults.timeRedeemedLessThan;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetSubscriptionRedemptionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetSubscriptionRedemptionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder redemptionCollections(@Nullable List<GetSubscriptionRedemptionsRedemptionCollection> redemptionCollections) {
            this.redemptionCollections = redemptionCollections;
            return this;
        }
        public Builder redemptionCollections(GetSubscriptionRedemptionsRedemptionCollection... redemptionCollections) {
            return redemptionCollections(List.of(redemptionCollections));
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        @CustomType.Setter
        public Builder tenancyId(String tenancyId) {
            this.tenancyId = Objects.requireNonNull(tenancyId);
            return this;
        }
        @CustomType.Setter
        public Builder timeRedeemedGreaterThanOrEqualTo(@Nullable String timeRedeemedGreaterThanOrEqualTo) {
            this.timeRedeemedGreaterThanOrEqualTo = timeRedeemedGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeRedeemedLessThan(@Nullable String timeRedeemedLessThan) {
            this.timeRedeemedLessThan = timeRedeemedLessThan;
            return this;
        }
        public GetSubscriptionRedemptionsResult build() {
            final var o = new GetSubscriptionRedemptionsResult();
            o.filters = filters;
            o.id = id;
            o.redemptionCollections = redemptionCollections;
            o.subscriptionId = subscriptionId;
            o.tenancyId = tenancyId;
            o.timeRedeemedGreaterThanOrEqualTo = timeRedeemedGreaterThanOrEqualTo;
            o.timeRedeemedLessThan = timeRedeemedLessThan;
            return o;
        }
    }
}
