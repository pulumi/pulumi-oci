// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.UsageProxy.outputs.GetSubscriptionRewardItem;
import com.pulumi.oci.UsageProxy.outputs.GetSubscriptionRewardSummary;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSubscriptionRewardResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The monthly summary of rewards.
     * 
     */
    private List<GetSubscriptionRewardItem> items;
    /**
     * @return The entitlement ID from MQS, which is the same as the subcription ID.
     * 
     */
    private String subscriptionId;
    /**
     * @return The overall monthly reward summary.
     * 
     */
    private List<GetSubscriptionRewardSummary> summaries;
    /**
     * @return The OCID of the target tenancy.
     * 
     */
    private String tenancyId;

    private GetSubscriptionRewardResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The monthly summary of rewards.
     * 
     */
    public List<GetSubscriptionRewardItem> items() {
        return this.items;
    }
    /**
     * @return The entitlement ID from MQS, which is the same as the subcription ID.
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return The overall monthly reward summary.
     * 
     */
    public List<GetSubscriptionRewardSummary> summaries() {
        return this.summaries;
    }
    /**
     * @return The OCID of the target tenancy.
     * 
     */
    public String tenancyId() {
        return this.tenancyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionRewardResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetSubscriptionRewardItem> items;
        private String subscriptionId;
        private List<GetSubscriptionRewardSummary> summaries;
        private String tenancyId;
        public Builder() {}
        public Builder(GetSubscriptionRewardResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.summaries = defaults.summaries;
    	      this.tenancyId = defaults.tenancyId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionRewardResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetSubscriptionRewardItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionRewardResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetSubscriptionRewardItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionRewardResult", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder summaries(List<GetSubscriptionRewardSummary> summaries) {
            if (summaries == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionRewardResult", "summaries");
            }
            this.summaries = summaries;
            return this;
        }
        public Builder summaries(GetSubscriptionRewardSummary... summaries) {
            return summaries(List.of(summaries));
        }
        @CustomType.Setter
        public Builder tenancyId(String tenancyId) {
            if (tenancyId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionRewardResult", "tenancyId");
            }
            this.tenancyId = tenancyId;
            return this;
        }
        public GetSubscriptionRewardResult build() {
            final var _resultValue = new GetSubscriptionRewardResult();
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.summaries = summaries;
            _resultValue.tenancyId = tenancyId;
            return _resultValue;
        }
    }
}
