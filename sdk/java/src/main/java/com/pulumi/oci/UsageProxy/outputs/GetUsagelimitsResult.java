// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.UsageProxy.outputs.GetUsagelimitsFilter;
import com.pulumi.oci.UsageProxy.outputs.GetUsagelimitsUsageLimitCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUsagelimitsResult {
    private String compartmentId;
    private @Nullable List<GetUsagelimitsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The limit type of the usage limit
     * 
     */
    private @Nullable String limitType;
    private @Nullable String resourceType;
    private @Nullable String serviceType;
    private String subscriptionId;
    /**
     * @return The list of usage_limit_collection.
     * 
     */
    private List<GetUsagelimitsUsageLimitCollection> usageLimitCollections;

    private GetUsagelimitsResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetUsagelimitsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The limit type of the usage limit
     * 
     */
    public Optional<String> limitType() {
        return Optional.ofNullable(this.limitType);
    }
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    public Optional<String> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return The list of usage_limit_collection.
     * 
     */
    public List<GetUsagelimitsUsageLimitCollection> usageLimitCollections() {
        return this.usageLimitCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsagelimitsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetUsagelimitsFilter> filters;
        private String id;
        private @Nullable String limitType;
        private @Nullable String resourceType;
        private @Nullable String serviceType;
        private String subscriptionId;
        private List<GetUsagelimitsUsageLimitCollection> usageLimitCollections;
        public Builder() {}
        public Builder(GetUsagelimitsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.limitType = defaults.limitType;
    	      this.resourceType = defaults.resourceType;
    	      this.serviceType = defaults.serviceType;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.usageLimitCollections = defaults.usageLimitCollections;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetUsagelimitsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetUsagelimitsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetUsagelimitsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUsagelimitsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder limitType(@Nullable String limitType) {

            this.limitType = limitType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder serviceType(@Nullable String serviceType) {

            this.serviceType = serviceType;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetUsagelimitsResult", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder usageLimitCollections(List<GetUsagelimitsUsageLimitCollection> usageLimitCollections) {
            if (usageLimitCollections == null) {
              throw new MissingRequiredPropertyException("GetUsagelimitsResult", "usageLimitCollections");
            }
            this.usageLimitCollections = usageLimitCollections;
            return this;
        }
        public Builder usageLimitCollections(GetUsagelimitsUsageLimitCollection... usageLimitCollections) {
            return usageLimitCollections(List.of(usageLimitCollections));
        }
        public GetUsagelimitsResult build() {
            final var _resultValue = new GetUsagelimitsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.limitType = limitType;
            _resultValue.resourceType = resourceType;
            _resultValue.serviceType = serviceType;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.usageLimitCollections = usageLimitCollections;
            return _resultValue;
        }
    }
}
