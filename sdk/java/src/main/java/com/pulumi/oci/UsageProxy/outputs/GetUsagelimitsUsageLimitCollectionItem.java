// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUsagelimitsUsageLimitCollectionItem {
    /**
     * @return The action when usage limit is hit
     * 
     */
    private @Nullable String action;
    /**
     * @return The alert level of the usage limit
     * 
     */
    private @Nullable Double alertLevel;
    /**
     * @return The user who created the limit
     * 
     */
    private @Nullable String createdBy;
    /**
     * @return Entitlement ID of the usage limit
     * 
     */
    private @Nullable String entitlementId;
    /**
     * @return The usage limit ID
     * 
     */
    private @Nullable String id;
    private @Nullable String limit;
    /**
     * @return Hard or soft limit. Hard limits lead to breaches, soft to alerts.
     * 
     */
    private @Nullable String limitType;
    /**
     * @return The maximum hard limit set for the usage limit
     * 
     */
    private @Nullable String maxHardLimit;
    /**
     * @return The user who modified the limit
     * 
     */
    private @Nullable String modifiedBy;
    /**
     * @return The resource for which the limit is defined
     * 
     */
    private @Nullable String resourceName;
    /**
     * @return The service for which the limit is defined
     * 
     */
    private @Nullable String serviceName;
    /**
     * @return The SKU for which the usage limit is set
     * 
     */
    private @Nullable String skuPartId;
    /**
     * @return The usage limit lifecycle state.
     * 
     */
    private @Nullable String state;
    /**
     * @return Time when the usage limit was created
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Time when the usage limit was modified
     * 
     */
    private @Nullable String timeModified;
    /**
     * @return The value type of the usage limit
     * 
     */
    private @Nullable String valueType;

    private GetUsagelimitsUsageLimitCollectionItem() {}
    /**
     * @return The action when usage limit is hit
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return The alert level of the usage limit
     * 
     */
    public Optional<Double> alertLevel() {
        return Optional.ofNullable(this.alertLevel);
    }
    /**
     * @return The user who created the limit
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }
    /**
     * @return Entitlement ID of the usage limit
     * 
     */
    public Optional<String> entitlementId() {
        return Optional.ofNullable(this.entitlementId);
    }
    /**
     * @return The usage limit ID
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * @return Hard or soft limit. Hard limits lead to breaches, soft to alerts.
     * 
     */
    public Optional<String> limitType() {
        return Optional.ofNullable(this.limitType);
    }
    /**
     * @return The maximum hard limit set for the usage limit
     * 
     */
    public Optional<String> maxHardLimit() {
        return Optional.ofNullable(this.maxHardLimit);
    }
    /**
     * @return The user who modified the limit
     * 
     */
    public Optional<String> modifiedBy() {
        return Optional.ofNullable(this.modifiedBy);
    }
    /**
     * @return The resource for which the limit is defined
     * 
     */
    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }
    /**
     * @return The service for which the limit is defined
     * 
     */
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }
    /**
     * @return The SKU for which the usage limit is set
     * 
     */
    public Optional<String> skuPartId() {
        return Optional.ofNullable(this.skuPartId);
    }
    /**
     * @return The usage limit lifecycle state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Time when the usage limit was created
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Time when the usage limit was modified
     * 
     */
    public Optional<String> timeModified() {
        return Optional.ofNullable(this.timeModified);
    }
    /**
     * @return The value type of the usage limit
     * 
     */
    public Optional<String> valueType() {
        return Optional.ofNullable(this.valueType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsagelimitsUsageLimitCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable Double alertLevel;
        private @Nullable String createdBy;
        private @Nullable String entitlementId;
        private @Nullable String id;
        private @Nullable String limit;
        private @Nullable String limitType;
        private @Nullable String maxHardLimit;
        private @Nullable String modifiedBy;
        private @Nullable String resourceName;
        private @Nullable String serviceName;
        private @Nullable String skuPartId;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeModified;
        private @Nullable String valueType;
        public Builder() {}
        public Builder(GetUsagelimitsUsageLimitCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.alertLevel = defaults.alertLevel;
    	      this.createdBy = defaults.createdBy;
    	      this.entitlementId = defaults.entitlementId;
    	      this.id = defaults.id;
    	      this.limit = defaults.limit;
    	      this.limitType = defaults.limitType;
    	      this.maxHardLimit = defaults.maxHardLimit;
    	      this.modifiedBy = defaults.modifiedBy;
    	      this.resourceName = defaults.resourceName;
    	      this.serviceName = defaults.serviceName;
    	      this.skuPartId = defaults.skuPartId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeModified = defaults.timeModified;
    	      this.valueType = defaults.valueType;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder alertLevel(@Nullable Double alertLevel) {
            this.alertLevel = alertLevel;
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(@Nullable String createdBy) {
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder entitlementId(@Nullable String entitlementId) {
            this.entitlementId = entitlementId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable String limit) {
            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder limitType(@Nullable String limitType) {
            this.limitType = limitType;
            return this;
        }
        @CustomType.Setter
        public Builder maxHardLimit(@Nullable String maxHardLimit) {
            this.maxHardLimit = maxHardLimit;
            return this;
        }
        @CustomType.Setter
        public Builder modifiedBy(@Nullable String modifiedBy) {
            this.modifiedBy = modifiedBy;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(@Nullable String resourceName) {
            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder skuPartId(@Nullable String skuPartId) {
            this.skuPartId = skuPartId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeModified(@Nullable String timeModified) {
            this.timeModified = timeModified;
            return this;
        }
        @CustomType.Setter
        public Builder valueType(@Nullable String valueType) {
            this.valueType = valueType;
            return this;
        }
        public GetUsagelimitsUsageLimitCollectionItem build() {
            final var o = new GetUsagelimitsUsageLimitCollectionItem();
            o.action = action;
            o.alertLevel = alertLevel;
            o.createdBy = createdBy;
            o.entitlementId = entitlementId;
            o.id = id;
            o.limit = limit;
            o.limitType = limitType;
            o.maxHardLimit = maxHardLimit;
            o.modifiedBy = modifiedBy;
            o.resourceName = resourceName;
            o.serviceName = serviceName;
            o.skuPartId = skuPartId;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeModified = timeModified;
            o.valueType = valueType;
            return o;
        }
    }
}
