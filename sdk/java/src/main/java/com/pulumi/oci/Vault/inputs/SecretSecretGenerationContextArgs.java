// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Vault.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretSecretGenerationContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretSecretGenerationContextArgs Empty = new SecretSecretGenerationContextArgs();

    /**
     * (Updatable) Name of random bytes generation template for generating random byte type secret.
     * 
     */
    @Import(name="generationTemplate", required=true)
    private Output<String> generationTemplate;

    /**
     * @return (Updatable) Name of random bytes generation template for generating random byte type secret.
     * 
     */
    public Output<String> generationTemplate() {
        return this.generationTemplate;
    }

    /**
     * (Updatable) Name of the predefined secret generation type.
     * 
     */
    @Import(name="generationType", required=true)
    private Output<String> generationType;

    /**
     * @return (Updatable) Name of the predefined secret generation type.
     * 
     */
    public Output<String> generationType() {
        return this.generationType;
    }

    /**
     * (Updatable) Length of the passphrase to be generated
     * 
     */
    @Import(name="passphraseLength")
    private @Nullable Output<Integer> passphraseLength;

    /**
     * @return (Updatable) Length of the passphrase to be generated
     * 
     */
    public Optional<Output<Integer>> passphraseLength() {
        return Optional.ofNullable(this.passphraseLength);
    }

    /**
     * (Updatable) SecretTemplate captures structure in which customer wants to store secrets. This is optional and a default structure is available for each secret type.  The template can have any structure with static values that are not generated. Within the template, you can insert predefined placeholders to store secrets.  These placeholders are later replaced with the generated content and saved as a Base64 encoded content.
     * 
     */
    @Import(name="secretTemplate")
    private @Nullable Output<String> secretTemplate;

    /**
     * @return (Updatable) SecretTemplate captures structure in which customer wants to store secrets. This is optional and a default structure is available for each secret type.  The template can have any structure with static values that are not generated. Within the template, you can insert predefined placeholders to store secrets.  These placeholders are later replaced with the generated content and saved as a Base64 encoded content.
     * 
     */
    public Optional<Output<String>> secretTemplate() {
        return Optional.ofNullable(this.secretTemplate);
    }

    private SecretSecretGenerationContextArgs() {}

    private SecretSecretGenerationContextArgs(SecretSecretGenerationContextArgs $) {
        this.generationTemplate = $.generationTemplate;
        this.generationType = $.generationType;
        this.passphraseLength = $.passphraseLength;
        this.secretTemplate = $.secretTemplate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretSecretGenerationContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretSecretGenerationContextArgs $;

        public Builder() {
            $ = new SecretSecretGenerationContextArgs();
        }

        public Builder(SecretSecretGenerationContextArgs defaults) {
            $ = new SecretSecretGenerationContextArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param generationTemplate (Updatable) Name of random bytes generation template for generating random byte type secret.
         * 
         * @return builder
         * 
         */
        public Builder generationTemplate(Output<String> generationTemplate) {
            $.generationTemplate = generationTemplate;
            return this;
        }

        /**
         * @param generationTemplate (Updatable) Name of random bytes generation template for generating random byte type secret.
         * 
         * @return builder
         * 
         */
        public Builder generationTemplate(String generationTemplate) {
            return generationTemplate(Output.of(generationTemplate));
        }

        /**
         * @param generationType (Updatable) Name of the predefined secret generation type.
         * 
         * @return builder
         * 
         */
        public Builder generationType(Output<String> generationType) {
            $.generationType = generationType;
            return this;
        }

        /**
         * @param generationType (Updatable) Name of the predefined secret generation type.
         * 
         * @return builder
         * 
         */
        public Builder generationType(String generationType) {
            return generationType(Output.of(generationType));
        }

        /**
         * @param passphraseLength (Updatable) Length of the passphrase to be generated
         * 
         * @return builder
         * 
         */
        public Builder passphraseLength(@Nullable Output<Integer> passphraseLength) {
            $.passphraseLength = passphraseLength;
            return this;
        }

        /**
         * @param passphraseLength (Updatable) Length of the passphrase to be generated
         * 
         * @return builder
         * 
         */
        public Builder passphraseLength(Integer passphraseLength) {
            return passphraseLength(Output.of(passphraseLength));
        }

        /**
         * @param secretTemplate (Updatable) SecretTemplate captures structure in which customer wants to store secrets. This is optional and a default structure is available for each secret type.  The template can have any structure with static values that are not generated. Within the template, you can insert predefined placeholders to store secrets.  These placeholders are later replaced with the generated content and saved as a Base64 encoded content.
         * 
         * @return builder
         * 
         */
        public Builder secretTemplate(@Nullable Output<String> secretTemplate) {
            $.secretTemplate = secretTemplate;
            return this;
        }

        /**
         * @param secretTemplate (Updatable) SecretTemplate captures structure in which customer wants to store secrets. This is optional and a default structure is available for each secret type.  The template can have any structure with static values that are not generated. Within the template, you can insert predefined placeholders to store secrets.  These placeholders are later replaced with the generated content and saved as a Base64 encoded content.
         * 
         * @return builder
         * 
         */
        public Builder secretTemplate(String secretTemplate) {
            return secretTemplate(Output.of(secretTemplate));
        }

        public SecretSecretGenerationContextArgs build() {
            if ($.generationTemplate == null) {
                throw new MissingRequiredPropertyException("SecretSecretGenerationContextArgs", "generationTemplate");
            }
            if ($.generationType == null) {
                throw new MissingRequiredPropertyException("SecretSecretGenerationContextArgs", "generationType");
            }
            return $;
        }
    }

}
