// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Vault.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecretSourceRegionInformationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecretSourceRegionInformationArgs Empty = new SecretSourceRegionInformationArgs();

    /**
     * The OCID of the source region KMS key.
     * 
     */
    @Import(name="sourceKeyId")
    private @Nullable Output<String> sourceKeyId;

    /**
     * @return The OCID of the source region KMS key.
     * 
     */
    public Optional<Output<String>> sourceKeyId() {
        return Optional.ofNullable(this.sourceKeyId);
    }

    /**
     * The name of the source&#39;s region.
     * 
     */
    @Import(name="sourceRegion")
    private @Nullable Output<String> sourceRegion;

    /**
     * @return The name of the source&#39;s region.
     * 
     */
    public Optional<Output<String>> sourceRegion() {
        return Optional.ofNullable(this.sourceRegion);
    }

    /**
     * The OCID of the source region&#39;s Vault.
     * 
     */
    @Import(name="sourceVaultId")
    private @Nullable Output<String> sourceVaultId;

    /**
     * @return The OCID of the source region&#39;s Vault.
     * 
     */
    public Optional<Output<String>> sourceVaultId() {
        return Optional.ofNullable(this.sourceVaultId);
    }

    private SecretSourceRegionInformationArgs() {}

    private SecretSourceRegionInformationArgs(SecretSourceRegionInformationArgs $) {
        this.sourceKeyId = $.sourceKeyId;
        this.sourceRegion = $.sourceRegion;
        this.sourceVaultId = $.sourceVaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecretSourceRegionInformationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecretSourceRegionInformationArgs $;

        public Builder() {
            $ = new SecretSourceRegionInformationArgs();
        }

        public Builder(SecretSourceRegionInformationArgs defaults) {
            $ = new SecretSourceRegionInformationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceKeyId The OCID of the source region KMS key.
         * 
         * @return builder
         * 
         */
        public Builder sourceKeyId(@Nullable Output<String> sourceKeyId) {
            $.sourceKeyId = sourceKeyId;
            return this;
        }

        /**
         * @param sourceKeyId The OCID of the source region KMS key.
         * 
         * @return builder
         * 
         */
        public Builder sourceKeyId(String sourceKeyId) {
            return sourceKeyId(Output.of(sourceKeyId));
        }

        /**
         * @param sourceRegion The name of the source&#39;s region.
         * 
         * @return builder
         * 
         */
        public Builder sourceRegion(@Nullable Output<String> sourceRegion) {
            $.sourceRegion = sourceRegion;
            return this;
        }

        /**
         * @param sourceRegion The name of the source&#39;s region.
         * 
         * @return builder
         * 
         */
        public Builder sourceRegion(String sourceRegion) {
            return sourceRegion(Output.of(sourceRegion));
        }

        /**
         * @param sourceVaultId The OCID of the source region&#39;s Vault.
         * 
         * @return builder
         * 
         */
        public Builder sourceVaultId(@Nullable Output<String> sourceVaultId) {
            $.sourceVaultId = sourceVaultId;
            return this;
        }

        /**
         * @param sourceVaultId The OCID of the source region&#39;s Vault.
         * 
         * @return builder
         * 
         */
        public Builder sourceVaultId(String sourceVaultId) {
            return sourceVaultId(Output.of(sourceVaultId));
        }

        public SecretSourceRegionInformationArgs build() {
            return $;
        }
    }

}
