// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Vault.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecretSecretContent {
    private String content;
    private String contentType;
    private String name;
    private String stage;

    private GetSecretSecretContent() {}
    public String content() {
        return this.content;
    }
    public String contentType() {
        return this.contentType;
    }
    public String name() {
        return this.name;
    }
    public String stage() {
        return this.stage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretSecretContent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String content;
        private String contentType;
        private String name;
        private String stage;
        public Builder() {}
        public Builder(GetSecretSecretContent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.contentType = defaults.contentType;
    	      this.name = defaults.name;
    	      this.stage = defaults.stage;
        }

        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetSecretSecretContent", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(String contentType) {
            if (contentType == null) {
              throw new MissingRequiredPropertyException("GetSecretSecretContent", "contentType");
            }
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSecretSecretContent", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder stage(String stage) {
            if (stage == null) {
              throw new MissingRequiredPropertyException("GetSecretSecretContent", "stage");
            }
            this.stage = stage;
            return this;
        }
        public GetSecretSecretContent build() {
            final var _resultValue = new GetSecretSecretContent();
            _resultValue.content = content;
            _resultValue.contentType = contentType;
            _resultValue.name = name;
            _resultValue.stage = stage;
            return _resultValue;
        }
    }
}
