// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Vault.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecretSourceRegionInformation {
    /**
     * @return The OCID of the source region KMS key.
     * 
     */
    private String sourceKeyId;
    /**
     * @return The name of the source&#39;s region.
     * 
     */
    private String sourceRegion;
    /**
     * @return The OCID of the source region&#39;s Vault.
     * 
     */
    private String sourceVaultId;

    private GetSecretSourceRegionInformation() {}
    /**
     * @return The OCID of the source region KMS key.
     * 
     */
    public String sourceKeyId() {
        return this.sourceKeyId;
    }
    /**
     * @return The name of the source&#39;s region.
     * 
     */
    public String sourceRegion() {
        return this.sourceRegion;
    }
    /**
     * @return The OCID of the source region&#39;s Vault.
     * 
     */
    public String sourceVaultId() {
        return this.sourceVaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretSourceRegionInformation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String sourceKeyId;
        private String sourceRegion;
        private String sourceVaultId;
        public Builder() {}
        public Builder(GetSecretSourceRegionInformation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceKeyId = defaults.sourceKeyId;
    	      this.sourceRegion = defaults.sourceRegion;
    	      this.sourceVaultId = defaults.sourceVaultId;
        }

        @CustomType.Setter
        public Builder sourceKeyId(String sourceKeyId) {
            if (sourceKeyId == null) {
              throw new MissingRequiredPropertyException("GetSecretSourceRegionInformation", "sourceKeyId");
            }
            this.sourceKeyId = sourceKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceRegion(String sourceRegion) {
            if (sourceRegion == null) {
              throw new MissingRequiredPropertyException("GetSecretSourceRegionInformation", "sourceRegion");
            }
            this.sourceRegion = sourceRegion;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVaultId(String sourceVaultId) {
            if (sourceVaultId == null) {
              throw new MissingRequiredPropertyException("GetSecretSourceRegionInformation", "sourceVaultId");
            }
            this.sourceVaultId = sourceVaultId;
            return this;
        }
        public GetSecretSourceRegionInformation build() {
            final var _resultValue = new GetSecretSourceRegionInformation();
            _resultValue.sourceKeyId = sourceKeyId;
            _resultValue.sourceRegion = sourceRegion;
            _resultValue.sourceVaultId = sourceVaultId;
            return _resultValue;
        }
    }
}
