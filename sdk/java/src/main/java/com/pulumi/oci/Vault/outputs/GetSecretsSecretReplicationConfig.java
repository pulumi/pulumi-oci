// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Vault.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Vault.outputs.GetSecretsSecretReplicationConfigReplicationTarget;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSecretsSecretReplicationConfig {
    /**
     * @return (Optional) A Boolean value to enable forwarding of write requests from replicated secrets to the source secrets. The default value of false disables this option.
     * 
     */
    private Boolean isWriteForwardEnabled;
    /**
     * @return List of the secret replication targets. By default, a maximum of 3 targets is allowed. To configure more than 3 targets, an override is required.
     * 
     */
    private List<GetSecretsSecretReplicationConfigReplicationTarget> replicationTargets;

    private GetSecretsSecretReplicationConfig() {}
    /**
     * @return (Optional) A Boolean value to enable forwarding of write requests from replicated secrets to the source secrets. The default value of false disables this option.
     * 
     */
    public Boolean isWriteForwardEnabled() {
        return this.isWriteForwardEnabled;
    }
    /**
     * @return List of the secret replication targets. By default, a maximum of 3 targets is allowed. To configure more than 3 targets, an override is required.
     * 
     */
    public List<GetSecretsSecretReplicationConfigReplicationTarget> replicationTargets() {
        return this.replicationTargets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretsSecretReplicationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isWriteForwardEnabled;
        private List<GetSecretsSecretReplicationConfigReplicationTarget> replicationTargets;
        public Builder() {}
        public Builder(GetSecretsSecretReplicationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isWriteForwardEnabled = defaults.isWriteForwardEnabled;
    	      this.replicationTargets = defaults.replicationTargets;
        }

        @CustomType.Setter
        public Builder isWriteForwardEnabled(Boolean isWriteForwardEnabled) {
            if (isWriteForwardEnabled == null) {
              throw new MissingRequiredPropertyException("GetSecretsSecretReplicationConfig", "isWriteForwardEnabled");
            }
            this.isWriteForwardEnabled = isWriteForwardEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder replicationTargets(List<GetSecretsSecretReplicationConfigReplicationTarget> replicationTargets) {
            if (replicationTargets == null) {
              throw new MissingRequiredPropertyException("GetSecretsSecretReplicationConfig", "replicationTargets");
            }
            this.replicationTargets = replicationTargets;
            return this;
        }
        public Builder replicationTargets(GetSecretsSecretReplicationConfigReplicationTarget... replicationTargets) {
            return replicationTargets(List.of(replicationTargets));
        }
        public GetSecretsSecretReplicationConfig build() {
            final var _resultValue = new GetSecretsSecretReplicationConfig();
            _resultValue.isWriteForwardEnabled = isWriteForwardEnabled;
            _resultValue.replicationTargets = replicationTargets;
            return _resultValue;
        }
    }
}
