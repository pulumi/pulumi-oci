// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Vault.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SecretReplicationConfigReplicationTarget {
    /**
     * @return (Updatable) The OCID of the target region KMS key.
     * 
     */
    private String targetKeyId;
    /**
     * @return (Updatable) The name of the target&#39;s region.
     * 
     */
    private String targetRegion;
    /**
     * @return (Updatable) The OCID of the target region&#39;s Vault.
     * 
     */
    private String targetVaultId;

    private SecretReplicationConfigReplicationTarget() {}
    /**
     * @return (Updatable) The OCID of the target region KMS key.
     * 
     */
    public String targetKeyId() {
        return this.targetKeyId;
    }
    /**
     * @return (Updatable) The name of the target&#39;s region.
     * 
     */
    public String targetRegion() {
        return this.targetRegion;
    }
    /**
     * @return (Updatable) The OCID of the target region&#39;s Vault.
     * 
     */
    public String targetVaultId() {
        return this.targetVaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretReplicationConfigReplicationTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String targetKeyId;
        private String targetRegion;
        private String targetVaultId;
        public Builder() {}
        public Builder(SecretReplicationConfigReplicationTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetKeyId = defaults.targetKeyId;
    	      this.targetRegion = defaults.targetRegion;
    	      this.targetVaultId = defaults.targetVaultId;
        }

        @CustomType.Setter
        public Builder targetKeyId(String targetKeyId) {
            if (targetKeyId == null) {
              throw new MissingRequiredPropertyException("SecretReplicationConfigReplicationTarget", "targetKeyId");
            }
            this.targetKeyId = targetKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder targetRegion(String targetRegion) {
            if (targetRegion == null) {
              throw new MissingRequiredPropertyException("SecretReplicationConfigReplicationTarget", "targetRegion");
            }
            this.targetRegion = targetRegion;
            return this;
        }
        @CustomType.Setter
        public Builder targetVaultId(String targetVaultId) {
            if (targetVaultId == null) {
              throw new MissingRequiredPropertyException("SecretReplicationConfigReplicationTarget", "targetVaultId");
            }
            this.targetVaultId = targetVaultId;
            return this;
        }
        public SecretReplicationConfigReplicationTarget build() {
            final var _resultValue = new SecretReplicationConfigReplicationTarget();
            _resultValue.targetKeyId = targetKeyId;
            _resultValue.targetRegion = targetRegion;
            _resultValue.targetVaultId = targetVaultId;
            return _resultValue;
        }
    }
}
