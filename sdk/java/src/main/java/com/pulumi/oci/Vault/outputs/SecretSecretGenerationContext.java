// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Vault.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecretSecretGenerationContext {
    /**
     * @return (Updatable) Name of random bytes generation template for generating random byte type secret.
     * 
     */
    private String generationTemplate;
    /**
     * @return (Updatable) Name of the predefined secret generation type.
     * 
     */
    private String generationType;
    /**
     * @return (Updatable) Length of the passphrase to be generated
     * 
     */
    private @Nullable Integer passphraseLength;
    /**
     * @return (Updatable) SecretTemplate captures structure in which customer wants to store secrets. This is optional and a default structure is available for each secret type.  The template can have any structure with static values that are not generated. Within the template, you can insert predefined placeholders to store secrets.  These placeholders are later replaced with the generated content and saved as a Base64 encoded content.
     * 
     */
    private @Nullable String secretTemplate;

    private SecretSecretGenerationContext() {}
    /**
     * @return (Updatable) Name of random bytes generation template for generating random byte type secret.
     * 
     */
    public String generationTemplate() {
        return this.generationTemplate;
    }
    /**
     * @return (Updatable) Name of the predefined secret generation type.
     * 
     */
    public String generationType() {
        return this.generationType;
    }
    /**
     * @return (Updatable) Length of the passphrase to be generated
     * 
     */
    public Optional<Integer> passphraseLength() {
        return Optional.ofNullable(this.passphraseLength);
    }
    /**
     * @return (Updatable) SecretTemplate captures structure in which customer wants to store secrets. This is optional and a default structure is available for each secret type.  The template can have any structure with static values that are not generated. Within the template, you can insert predefined placeholders to store secrets.  These placeholders are later replaced with the generated content and saved as a Base64 encoded content.
     * 
     */
    public Optional<String> secretTemplate() {
        return Optional.ofNullable(this.secretTemplate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretSecretGenerationContext defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String generationTemplate;
        private String generationType;
        private @Nullable Integer passphraseLength;
        private @Nullable String secretTemplate;
        public Builder() {}
        public Builder(SecretSecretGenerationContext defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.generationTemplate = defaults.generationTemplate;
    	      this.generationType = defaults.generationType;
    	      this.passphraseLength = defaults.passphraseLength;
    	      this.secretTemplate = defaults.secretTemplate;
        }

        @CustomType.Setter
        public Builder generationTemplate(String generationTemplate) {
            if (generationTemplate == null) {
              throw new MissingRequiredPropertyException("SecretSecretGenerationContext", "generationTemplate");
            }
            this.generationTemplate = generationTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder generationType(String generationType) {
            if (generationType == null) {
              throw new MissingRequiredPropertyException("SecretSecretGenerationContext", "generationType");
            }
            this.generationType = generationType;
            return this;
        }
        @CustomType.Setter
        public Builder passphraseLength(@Nullable Integer passphraseLength) {

            this.passphraseLength = passphraseLength;
            return this;
        }
        @CustomType.Setter
        public Builder secretTemplate(@Nullable String secretTemplate) {

            this.secretTemplate = secretTemplate;
            return this;
        }
        public SecretSecretGenerationContext build() {
            final var _resultValue = new SecretSecretGenerationContext();
            _resultValue.generationTemplate = generationTemplate;
            _resultValue.generationType = generationType;
            _resultValue.passphraseLength = passphraseLength;
            _resultValue.secretTemplate = secretTemplate;
            return _resultValue;
        }
    }
}
