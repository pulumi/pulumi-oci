// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Vbs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstVbsInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstVbsInstanceState Empty = new InstVbsInstanceState();

    /**
     * (Updatable) Compartment Identifier. It can only be the root compartment
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier. It can only be the root compartment
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Display Name
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Display Name
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * IDCS personal acceess token identifying IDCS user and stripe for the VBS service
     * 
     */
    @Import(name="idcsAccessToken")
    private @Nullable Output<String> idcsAccessToken;

    /**
     * @return IDCS personal acceess token identifying IDCS user and stripe for the VBS service
     * 
     */
    public Optional<Output<String>> idcsAccessToken() {
        return Optional.ofNullable(this.idcsAccessToken);
    }

    /**
     * (Updatable) Whether VBS is authorized to create and use resources in the customer tenancy
     * 
     */
    @Import(name="isResourceUsageAgreementGranted")
    private @Nullable Output<Boolean> isResourceUsageAgreementGranted;

    /**
     * @return (Updatable) Whether VBS is authorized to create and use resources in the customer tenancy
     * 
     */
    public Optional<Output<Boolean>> isResourceUsageAgreementGranted() {
        return Optional.ofNullable(this.isResourceUsageAgreementGranted);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecyleDetails")
    private @Nullable Output<String> lifecyleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecyleDetails() {
        return Optional.ofNullable(this.lifecyleDetails);
    }

    /**
     * Service Instance Name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Service Instance Name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) Compartment where VBS may create additional resources for the service instance
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="resourceCompartmentId")
    private @Nullable Output<String> resourceCompartmentId;

    /**
     * @return (Updatable) Compartment where VBS may create additional resources for the service instance
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> resourceCompartmentId() {
        return Optional.ofNullable(this.resourceCompartmentId);
    }

    /**
     * The current state of the VbsInstance.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the VbsInstance.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time the the VbsInstance was created. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the the VbsInstance was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the VbsInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the VbsInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * Public web URL for accessing the VBS service instance
     * 
     */
    @Import(name="vbsAccessUrl")
    private @Nullable Output<String> vbsAccessUrl;

    /**
     * @return Public web URL for accessing the VBS service instance
     * 
     */
    public Optional<Output<String>> vbsAccessUrl() {
        return Optional.ofNullable(this.vbsAccessUrl);
    }

    private InstVbsInstanceState() {}

    private InstVbsInstanceState(InstVbsInstanceState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.idcsAccessToken = $.idcsAccessToken;
        this.isResourceUsageAgreementGranted = $.isResourceUsageAgreementGranted;
        this.lifecyleDetails = $.lifecyleDetails;
        this.name = $.name;
        this.resourceCompartmentId = $.resourceCompartmentId;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.vbsAccessUrl = $.vbsAccessUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstVbsInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstVbsInstanceState $;

        public Builder() {
            $ = new InstVbsInstanceState();
        }

        public Builder(InstVbsInstanceState defaults) {
            $ = new InstVbsInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier. It can only be the root compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier. It can only be the root compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Display Name
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Display Name
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param idcsAccessToken IDCS personal acceess token identifying IDCS user and stripe for the VBS service
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(@Nullable Output<String> idcsAccessToken) {
            $.idcsAccessToken = idcsAccessToken;
            return this;
        }

        /**
         * @param idcsAccessToken IDCS personal acceess token identifying IDCS user and stripe for the VBS service
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(String idcsAccessToken) {
            return idcsAccessToken(Output.of(idcsAccessToken));
        }

        /**
         * @param isResourceUsageAgreementGranted (Updatable) Whether VBS is authorized to create and use resources in the customer tenancy
         * 
         * @return builder
         * 
         */
        public Builder isResourceUsageAgreementGranted(@Nullable Output<Boolean> isResourceUsageAgreementGranted) {
            $.isResourceUsageAgreementGranted = isResourceUsageAgreementGranted;
            return this;
        }

        /**
         * @param isResourceUsageAgreementGranted (Updatable) Whether VBS is authorized to create and use resources in the customer tenancy
         * 
         * @return builder
         * 
         */
        public Builder isResourceUsageAgreementGranted(Boolean isResourceUsageAgreementGranted) {
            return isResourceUsageAgreementGranted(Output.of(isResourceUsageAgreementGranted));
        }

        /**
         * @param lifecyleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecyleDetails(@Nullable Output<String> lifecyleDetails) {
            $.lifecyleDetails = lifecyleDetails;
            return this;
        }

        /**
         * @param lifecyleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecyleDetails(String lifecyleDetails) {
            return lifecyleDetails(Output.of(lifecyleDetails));
        }

        /**
         * @param name Service Instance Name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Service Instance Name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceCompartmentId (Updatable) Compartment where VBS may create additional resources for the service instance
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder resourceCompartmentId(@Nullable Output<String> resourceCompartmentId) {
            $.resourceCompartmentId = resourceCompartmentId;
            return this;
        }

        /**
         * @param resourceCompartmentId (Updatable) Compartment where VBS may create additional resources for the service instance
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder resourceCompartmentId(String resourceCompartmentId) {
            return resourceCompartmentId(Output.of(resourceCompartmentId));
        }

        /**
         * @param state The current state of the VbsInstance.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the VbsInstance.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time the the VbsInstance was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the the VbsInstance was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the VbsInstance was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the VbsInstance was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param vbsAccessUrl Public web URL for accessing the VBS service instance
         * 
         * @return builder
         * 
         */
        public Builder vbsAccessUrl(@Nullable Output<String> vbsAccessUrl) {
            $.vbsAccessUrl = vbsAccessUrl;
            return this;
        }

        /**
         * @param vbsAccessUrl Public web URL for accessing the VBS service instance
         * 
         * @return builder
         * 
         */
        public Builder vbsAccessUrl(String vbsAccessUrl) {
            return vbsAccessUrl(Output.of(vbsAccessUrl));
        }

        public InstVbsInstanceState build() {
            return $;
        }
    }

}
