// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VisualBuilder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.VisualBuilder.inputs.VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VbInstanceNetworkEndpointDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VbInstanceNetworkEndpointDetailsArgs Empty = new VbInstanceNetworkEndpointDetailsArgs();

    /**
     * (Updatable) Source IP addresses or IP address ranges ingress rules. (ex: &#34;168.122.59.5/32&#34;, &#34;10.20.30.0/26&#34;) An invalid IP or CIDR block will result in a 400 response.
     * 
     */
    @Import(name="allowlistedHttpIps")
    private @Nullable Output<List<String>> allowlistedHttpIps;

    /**
     * @return (Updatable) Source IP addresses or IP address ranges ingress rules. (ex: &#34;168.122.59.5/32&#34;, &#34;10.20.30.0/26&#34;) An invalid IP or CIDR block will result in a 400 response.
     * 
     */
    public Optional<Output<List<String>>> allowlistedHttpIps() {
        return Optional.ofNullable(this.allowlistedHttpIps);
    }

    /**
     * (Updatable) Virtual Cloud Networks allowed to access this network endpoint.
     * 
     */
    @Import(name="allowlistedHttpVcns")
    private @Nullable Output<List<VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs>> allowlistedHttpVcns;

    /**
     * @return (Updatable) Virtual Cloud Networks allowed to access this network endpoint.
     * 
     */
    public Optional<Output<List<VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs>>> allowlistedHttpVcns() {
        return Optional.ofNullable(this.allowlistedHttpVcns);
    }

    /**
     * (Updatable) The type of network endpoint.
     * 
     * For private endpoint access
     * 
     */
    @Import(name="networkEndpointType", required=true)
    private Output<String> networkEndpointType;

    /**
     * @return (Updatable) The type of network endpoint.
     * 
     * For private endpoint access
     * 
     */
    public Output<String> networkEndpointType() {
        return this.networkEndpointType;
    }

    /**
     * (Updatable) Network Security Group OCIDs for the Private Endpoint.
     * 
     */
    @Import(name="networkSecurityGroupIds")
    private @Nullable Output<List<String>> networkSecurityGroupIds;

    /**
     * @return (Updatable) Network Security Group OCIDs for the Private Endpoint.
     * 
     */
    public Optional<Output<List<String>>> networkSecurityGroupIds() {
        return Optional.ofNullable(this.networkSecurityGroupIds);
    }

    /**
     * The IP address to be assigned to Private Endpoint
     * 
     */
    @Import(name="privateEndpointIp")
    private @Nullable Output<String> privateEndpointIp;

    /**
     * @return The IP address to be assigned to Private Endpoint
     * 
     */
    public Optional<Output<String>> privateEndpointIp() {
        return Optional.ofNullable(this.privateEndpointIp);
    }

    /**
     * (Updatable) The subnet OCID for the private endpoint.
     * 
     * For public network access control
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return (Updatable) The subnet OCID for the private endpoint.
     * 
     * For public network access control
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    private VbInstanceNetworkEndpointDetailsArgs() {}

    private VbInstanceNetworkEndpointDetailsArgs(VbInstanceNetworkEndpointDetailsArgs $) {
        this.allowlistedHttpIps = $.allowlistedHttpIps;
        this.allowlistedHttpVcns = $.allowlistedHttpVcns;
        this.networkEndpointType = $.networkEndpointType;
        this.networkSecurityGroupIds = $.networkSecurityGroupIds;
        this.privateEndpointIp = $.privateEndpointIp;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VbInstanceNetworkEndpointDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VbInstanceNetworkEndpointDetailsArgs $;

        public Builder() {
            $ = new VbInstanceNetworkEndpointDetailsArgs();
        }

        public Builder(VbInstanceNetworkEndpointDetailsArgs defaults) {
            $ = new VbInstanceNetworkEndpointDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowlistedHttpIps (Updatable) Source IP addresses or IP address ranges ingress rules. (ex: &#34;168.122.59.5/32&#34;, &#34;10.20.30.0/26&#34;) An invalid IP or CIDR block will result in a 400 response.
         * 
         * @return builder
         * 
         */
        public Builder allowlistedHttpIps(@Nullable Output<List<String>> allowlistedHttpIps) {
            $.allowlistedHttpIps = allowlistedHttpIps;
            return this;
        }

        /**
         * @param allowlistedHttpIps (Updatable) Source IP addresses or IP address ranges ingress rules. (ex: &#34;168.122.59.5/32&#34;, &#34;10.20.30.0/26&#34;) An invalid IP or CIDR block will result in a 400 response.
         * 
         * @return builder
         * 
         */
        public Builder allowlistedHttpIps(List<String> allowlistedHttpIps) {
            return allowlistedHttpIps(Output.of(allowlistedHttpIps));
        }

        /**
         * @param allowlistedHttpIps (Updatable) Source IP addresses or IP address ranges ingress rules. (ex: &#34;168.122.59.5/32&#34;, &#34;10.20.30.0/26&#34;) An invalid IP or CIDR block will result in a 400 response.
         * 
         * @return builder
         * 
         */
        public Builder allowlistedHttpIps(String... allowlistedHttpIps) {
            return allowlistedHttpIps(List.of(allowlistedHttpIps));
        }

        /**
         * @param allowlistedHttpVcns (Updatable) Virtual Cloud Networks allowed to access this network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder allowlistedHttpVcns(@Nullable Output<List<VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs>> allowlistedHttpVcns) {
            $.allowlistedHttpVcns = allowlistedHttpVcns;
            return this;
        }

        /**
         * @param allowlistedHttpVcns (Updatable) Virtual Cloud Networks allowed to access this network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder allowlistedHttpVcns(List<VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs> allowlistedHttpVcns) {
            return allowlistedHttpVcns(Output.of(allowlistedHttpVcns));
        }

        /**
         * @param allowlistedHttpVcns (Updatable) Virtual Cloud Networks allowed to access this network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder allowlistedHttpVcns(VbInstanceNetworkEndpointDetailsAllowlistedHttpVcnArgs... allowlistedHttpVcns) {
            return allowlistedHttpVcns(List.of(allowlistedHttpVcns));
        }

        /**
         * @param networkEndpointType (Updatable) The type of network endpoint.
         * 
         * For private endpoint access
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointType(Output<String> networkEndpointType) {
            $.networkEndpointType = networkEndpointType;
            return this;
        }

        /**
         * @param networkEndpointType (Updatable) The type of network endpoint.
         * 
         * For private endpoint access
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointType(String networkEndpointType) {
            return networkEndpointType(Output.of(networkEndpointType));
        }

        /**
         * @param networkSecurityGroupIds (Updatable) Network Security Group OCIDs for the Private Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(@Nullable Output<List<String>> networkSecurityGroupIds) {
            $.networkSecurityGroupIds = networkSecurityGroupIds;
            return this;
        }

        /**
         * @param networkSecurityGroupIds (Updatable) Network Security Group OCIDs for the Private Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(List<String> networkSecurityGroupIds) {
            return networkSecurityGroupIds(Output.of(networkSecurityGroupIds));
        }

        /**
         * @param networkSecurityGroupIds (Updatable) Network Security Group OCIDs for the Private Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(String... networkSecurityGroupIds) {
            return networkSecurityGroupIds(List.of(networkSecurityGroupIds));
        }

        /**
         * @param privateEndpointIp The IP address to be assigned to Private Endpoint
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointIp(@Nullable Output<String> privateEndpointIp) {
            $.privateEndpointIp = privateEndpointIp;
            return this;
        }

        /**
         * @param privateEndpointIp The IP address to be assigned to Private Endpoint
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointIp(String privateEndpointIp) {
            return privateEndpointIp(Output.of(privateEndpointIp));
        }

        /**
         * @param subnetId (Updatable) The subnet OCID for the private endpoint.
         * 
         * For public network access control
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId (Updatable) The subnet OCID for the private endpoint.
         * 
         * For public network access control
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public VbInstanceNetworkEndpointDetailsArgs build() {
            if ($.networkEndpointType == null) {
                throw new MissingRequiredPropertyException("VbInstanceNetworkEndpointDetailsArgs", "networkEndpointType");
            }
            return $;
        }
    }

}
