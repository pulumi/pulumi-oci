// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VisualBuilder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.VisualBuilder.inputs.VbInstanceAlternateCustomEndpointArgs;
import com.pulumi.oci.VisualBuilder.inputs.VbInstanceAttachmentArgs;
import com.pulumi.oci.VisualBuilder.inputs.VbInstanceCustomEndpointArgs;
import com.pulumi.oci.VisualBuilder.inputs.VbInstanceIdcsInfoArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VbInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final VbInstanceState Empty = new VbInstanceState();

    /**
     * (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     * 
     */
    @Import(name="alternateCustomEndpoints")
    private @Nullable Output<List<VbInstanceAlternateCustomEndpointArgs>> alternateCustomEndpoints;

    /**
     * @return (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     * 
     */
    public Optional<Output<List<VbInstanceAlternateCustomEndpointArgs>>> alternateCustomEndpoints() {
        return Optional.ofNullable(this.alternateCustomEndpoints);
    }

    /**
     * A list of associated attachments to other services
     * 
     */
    @Import(name="attachments")
    private @Nullable Output<List<VbInstanceAttachmentArgs>> attachments;

    /**
     * @return A list of associated attachments to other services
     * 
     */
    public Optional<Output<List<VbInstanceAttachmentArgs>>> attachments() {
        return Optional.ofNullable(this.attachments);
    }

    /**
     * (Updatable) Compartment Identifier.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     * 
     */
    @Import(name="consumptionModel")
    private @Nullable Output<String> consumptionModel;

    /**
     * @return Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     * 
     */
    public Optional<Output<String>> consumptionModel() {
        return Optional.ofNullable(this.consumptionModel);
    }

    /**
     * (Updatable) Details for a custom endpoint for the vb instance (update).
     * 
     */
    @Import(name="customEndpoint")
    private @Nullable Output<VbInstanceCustomEndpointArgs> customEndpoint;

    /**
     * @return (Updatable) Details for a custom endpoint for the vb instance (update).
     * 
     */
    public Optional<Output<VbInstanceCustomEndpointArgs>> customEndpoint() {
        return Optional.ofNullable(this.customEndpoint);
    }

    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Vb Instance Identifier.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Vb Instance Identifier.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Information for IDCS access
     * 
     */
    @Import(name="idcsInfos")
    private @Nullable Output<List<VbInstanceIdcsInfoArgs>> idcsInfos;

    /**
     * @return Information for IDCS access
     * 
     */
    public Optional<Output<List<VbInstanceIdcsInfoArgs>>> idcsInfos() {
        return Optional.ofNullable(this.idcsInfos);
    }

    /**
     * (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
     * 
     */
    @Import(name="idcsOpenId")
    private @Nullable Output<String> idcsOpenId;

    /**
     * @return (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
     * 
     */
    public Optional<Output<String>> idcsOpenId() {
        return Optional.ofNullable(this.idcsOpenId);
    }

    /**
     * The Vb Instance URL.
     * 
     */
    @Import(name="instanceUrl")
    private @Nullable Output<String> instanceUrl;

    /**
     * @return The Vb Instance URL.
     * 
     */
    public Optional<Output<String>> instanceUrl() {
        return Optional.ofNullable(this.instanceUrl);
    }

    /**
     * (Updatable) Visual Builder is enabled or not.
     * 
     */
    @Import(name="isVisualBuilderEnabled")
    private @Nullable Output<Boolean> isVisualBuilderEnabled;

    /**
     * @return (Updatable) Visual Builder is enabled or not.
     * 
     */
    public Optional<Output<Boolean>> isVisualBuilderEnabled() {
        return Optional.ofNullable(this.isVisualBuilderEnabled);
    }

    /**
     * The NAT gateway IP address for the VB management VCN
     * 
     */
    @Import(name="managementNatGatewayIp")
    private @Nullable Output<String> managementNatGatewayIp;

    /**
     * @return The NAT gateway IP address for the VB management VCN
     * 
     */
    public Optional<Output<String>> managementNatGatewayIp() {
        return Optional.ofNullable(this.managementNatGatewayIp);
    }

    /**
     * The Oracle Cloud ID (OCID) of the Visual Builder management VCN
     * 
     */
    @Import(name="managementVcnId")
    private @Nullable Output<String> managementVcnId;

    /**
     * @return The Oracle Cloud ID (OCID) of the Visual Builder management VCN
     * 
     */
    public Optional<Output<String>> managementVcnId() {
        return Optional.ofNullable(this.managementVcnId);
    }

    /**
     * (Updatable) The number of Nodes
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="nodeCount")
    private @Nullable Output<Integer> nodeCount;

    /**
     * @return (Updatable) The number of Nodes
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    /**
     * The NAT gateway IP address for the VB service VCN
     * 
     */
    @Import(name="serviceNatGatewayIp")
    private @Nullable Output<String> serviceNatGatewayIp;

    /**
     * @return The NAT gateway IP address for the VB service VCN
     * 
     */
    public Optional<Output<String>> serviceNatGatewayIp() {
        return Optional.ofNullable(this.serviceNatGatewayIp);
    }

    /**
     * The Oracle Cloud ID (OCID) of the Visual Builder service VCN
     * 
     */
    @Import(name="serviceVcnId")
    private @Nullable Output<String> serviceVcnId;

    /**
     * @return The Oracle Cloud ID (OCID) of the Visual Builder service VCN
     * 
     */
    public Optional<Output<String>> serviceVcnId() {
        return Optional.ofNullable(this.serviceVcnId);
    }

    /**
     * The current state of the vb instance.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the vb instance.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="stateMessage")
    private @Nullable Output<String> stateMessage;

    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> stateMessage() {
        return Optional.ofNullable(this.stateMessage);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time the the VbInstance was created. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the the VbInstance was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the VbInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the VbInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private VbInstanceState() {}

    private VbInstanceState(VbInstanceState $) {
        this.alternateCustomEndpoints = $.alternateCustomEndpoints;
        this.attachments = $.attachments;
        this.compartmentId = $.compartmentId;
        this.consumptionModel = $.consumptionModel;
        this.customEndpoint = $.customEndpoint;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.idcsInfos = $.idcsInfos;
        this.idcsOpenId = $.idcsOpenId;
        this.instanceUrl = $.instanceUrl;
        this.isVisualBuilderEnabled = $.isVisualBuilderEnabled;
        this.managementNatGatewayIp = $.managementNatGatewayIp;
        this.managementVcnId = $.managementVcnId;
        this.nodeCount = $.nodeCount;
        this.serviceNatGatewayIp = $.serviceNatGatewayIp;
        this.serviceVcnId = $.serviceVcnId;
        this.state = $.state;
        this.stateMessage = $.stateMessage;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VbInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VbInstanceState $;

        public Builder() {
            $ = new VbInstanceState();
        }

        public Builder(VbInstanceState defaults) {
            $ = new VbInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alternateCustomEndpoints (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
         * 
         * @return builder
         * 
         */
        public Builder alternateCustomEndpoints(@Nullable Output<List<VbInstanceAlternateCustomEndpointArgs>> alternateCustomEndpoints) {
            $.alternateCustomEndpoints = alternateCustomEndpoints;
            return this;
        }

        /**
         * @param alternateCustomEndpoints (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
         * 
         * @return builder
         * 
         */
        public Builder alternateCustomEndpoints(List<VbInstanceAlternateCustomEndpointArgs> alternateCustomEndpoints) {
            return alternateCustomEndpoints(Output.of(alternateCustomEndpoints));
        }

        /**
         * @param alternateCustomEndpoints (Updatable) A list of alternate custom endpoints to be used for the vb instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
         * 
         * @return builder
         * 
         */
        public Builder alternateCustomEndpoints(VbInstanceAlternateCustomEndpointArgs... alternateCustomEndpoints) {
            return alternateCustomEndpoints(List.of(alternateCustomEndpoints));
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(@Nullable Output<List<VbInstanceAttachmentArgs>> attachments) {
            $.attachments = attachments;
            return this;
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(List<VbInstanceAttachmentArgs> attachments) {
            return attachments(Output.of(attachments));
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(VbInstanceAttachmentArgs... attachments) {
            return attachments(List.of(attachments));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param consumptionModel Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
         * 
         * @return builder
         * 
         */
        public Builder consumptionModel(@Nullable Output<String> consumptionModel) {
            $.consumptionModel = consumptionModel;
            return this;
        }

        /**
         * @param consumptionModel Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
         * 
         * @return builder
         * 
         */
        public Builder consumptionModel(String consumptionModel) {
            return consumptionModel(Output.of(consumptionModel));
        }

        /**
         * @param customEndpoint (Updatable) Details for a custom endpoint for the vb instance (update).
         * 
         * @return builder
         * 
         */
        public Builder customEndpoint(@Nullable Output<VbInstanceCustomEndpointArgs> customEndpoint) {
            $.customEndpoint = customEndpoint;
            return this;
        }

        /**
         * @param customEndpoint (Updatable) Details for a custom endpoint for the vb instance (update).
         * 
         * @return builder
         * 
         */
        public Builder customEndpoint(VbInstanceCustomEndpointArgs customEndpoint) {
            return customEndpoint(Output.of(customEndpoint));
        }

        /**
         * @param definedTags (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Vb Instance Identifier.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Vb Instance Identifier.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param idcsInfos Information for IDCS access
         * 
         * @return builder
         * 
         */
        public Builder idcsInfos(@Nullable Output<List<VbInstanceIdcsInfoArgs>> idcsInfos) {
            $.idcsInfos = idcsInfos;
            return this;
        }

        /**
         * @param idcsInfos Information for IDCS access
         * 
         * @return builder
         * 
         */
        public Builder idcsInfos(List<VbInstanceIdcsInfoArgs> idcsInfos) {
            return idcsInfos(Output.of(idcsInfos));
        }

        /**
         * @param idcsInfos Information for IDCS access
         * 
         * @return builder
         * 
         */
        public Builder idcsInfos(VbInstanceIdcsInfoArgs... idcsInfos) {
            return idcsInfos(List.of(idcsInfos));
        }

        /**
         * @param idcsOpenId (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
         * 
         * @return builder
         * 
         */
        public Builder idcsOpenId(@Nullable Output<String> idcsOpenId) {
            $.idcsOpenId = idcsOpenId;
            return this;
        }

        /**
         * @param idcsOpenId (Updatable) Encrypted IDCS Open ID token. This is required for pre-UCPIS cloud accounts, but not UCPIS, hence not a required parameter
         * 
         * @return builder
         * 
         */
        public Builder idcsOpenId(String idcsOpenId) {
            return idcsOpenId(Output.of(idcsOpenId));
        }

        /**
         * @param instanceUrl The Vb Instance URL.
         * 
         * @return builder
         * 
         */
        public Builder instanceUrl(@Nullable Output<String> instanceUrl) {
            $.instanceUrl = instanceUrl;
            return this;
        }

        /**
         * @param instanceUrl The Vb Instance URL.
         * 
         * @return builder
         * 
         */
        public Builder instanceUrl(String instanceUrl) {
            return instanceUrl(Output.of(instanceUrl));
        }

        /**
         * @param isVisualBuilderEnabled (Updatable) Visual Builder is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isVisualBuilderEnabled(@Nullable Output<Boolean> isVisualBuilderEnabled) {
            $.isVisualBuilderEnabled = isVisualBuilderEnabled;
            return this;
        }

        /**
         * @param isVisualBuilderEnabled (Updatable) Visual Builder is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isVisualBuilderEnabled(Boolean isVisualBuilderEnabled) {
            return isVisualBuilderEnabled(Output.of(isVisualBuilderEnabled));
        }

        /**
         * @param managementNatGatewayIp The NAT gateway IP address for the VB management VCN
         * 
         * @return builder
         * 
         */
        public Builder managementNatGatewayIp(@Nullable Output<String> managementNatGatewayIp) {
            $.managementNatGatewayIp = managementNatGatewayIp;
            return this;
        }

        /**
         * @param managementNatGatewayIp The NAT gateway IP address for the VB management VCN
         * 
         * @return builder
         * 
         */
        public Builder managementNatGatewayIp(String managementNatGatewayIp) {
            return managementNatGatewayIp(Output.of(managementNatGatewayIp));
        }

        /**
         * @param managementVcnId The Oracle Cloud ID (OCID) of the Visual Builder management VCN
         * 
         * @return builder
         * 
         */
        public Builder managementVcnId(@Nullable Output<String> managementVcnId) {
            $.managementVcnId = managementVcnId;
            return this;
        }

        /**
         * @param managementVcnId The Oracle Cloud ID (OCID) of the Visual Builder management VCN
         * 
         * @return builder
         * 
         */
        public Builder managementVcnId(String managementVcnId) {
            return managementVcnId(Output.of(managementVcnId));
        }

        /**
         * @param nodeCount (Updatable) The number of Nodes
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(@Nullable Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount (Updatable) The number of Nodes
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param serviceNatGatewayIp The NAT gateway IP address for the VB service VCN
         * 
         * @return builder
         * 
         */
        public Builder serviceNatGatewayIp(@Nullable Output<String> serviceNatGatewayIp) {
            $.serviceNatGatewayIp = serviceNatGatewayIp;
            return this;
        }

        /**
         * @param serviceNatGatewayIp The NAT gateway IP address for the VB service VCN
         * 
         * @return builder
         * 
         */
        public Builder serviceNatGatewayIp(String serviceNatGatewayIp) {
            return serviceNatGatewayIp(Output.of(serviceNatGatewayIp));
        }

        /**
         * @param serviceVcnId The Oracle Cloud ID (OCID) of the Visual Builder service VCN
         * 
         * @return builder
         * 
         */
        public Builder serviceVcnId(@Nullable Output<String> serviceVcnId) {
            $.serviceVcnId = serviceVcnId;
            return this;
        }

        /**
         * @param serviceVcnId The Oracle Cloud ID (OCID) of the Visual Builder service VCN
         * 
         * @return builder
         * 
         */
        public Builder serviceVcnId(String serviceVcnId) {
            return serviceVcnId(Output.of(serviceVcnId));
        }

        /**
         * @param state The current state of the vb instance.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the vb instance.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stateMessage An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder stateMessage(@Nullable Output<String> stateMessage) {
            $.stateMessage = stateMessage;
            return this;
        }

        /**
         * @param stateMessage An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder stateMessage(String stateMessage) {
            return stateMessage(Output.of(stateMessage));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time the the VbInstance was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the the VbInstance was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the VbInstance was updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the VbInstance was updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public VbInstanceState build() {
            return $;
        }
    }

}
