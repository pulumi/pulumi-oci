// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VisualBuilder.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.VisualBuilder.outputs.GetVbInstanceAlternateCustomEndpoint;
import com.pulumi.oci.VisualBuilder.outputs.GetVbInstanceAttachment;
import com.pulumi.oci.VisualBuilder.outputs.GetVbInstanceCustomEndpoint;
import com.pulumi.oci.VisualBuilder.outputs.GetVbInstanceIdcsInfo;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVbInstanceResult {
    /**
     * @return A list of alternate custom endpoints used for the vb instance URL.
     * 
     */
    private @Nullable List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints;
    /**
     * @return A list of associated attachments to other services
     * 
     */
    private @Nullable List<GetVbInstanceAttachment> attachments;
    /**
     * @return Compartment Identifier.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The entitlement used for billing purposes.
     * 
     */
    private @Nullable String consumptionModel;
    /**
     * @return Details for a custom endpoint for the vb instance.
     * 
     */
    private @Nullable List<GetVbInstanceCustomEndpoint> customEndpoints;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Vb Instance Identifier, can be renamed.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return Information for IDCS access
     * 
     */
    private @Nullable List<GetVbInstanceIdcsInfo> idcsInfos;
    private @Nullable String idcsOpenId;
    /**
     * @return The Vb Instance URL.
     * 
     */
    private @Nullable String instanceUrl;
    /**
     * @return Visual Builder is enabled or not.
     * 
     */
    private @Nullable Boolean isVisualBuilderEnabled;
    /**
     * @return The NAT gateway IP address for the VB management VCN
     * 
     */
    private @Nullable String managementNatGatewayIp;
    /**
     * @return The Oracle Cloud ID (OCID) of the Visual Builder management VCN
     * 
     */
    private @Nullable String managementVcnId;
    /**
     * @return The number of Nodes
     * 
     */
    private @Nullable Integer nodeCount;
    /**
     * @return The NAT gateway IP address for the VB service VCN
     * 
     */
    private @Nullable String serviceNatGatewayIp;
    /**
     * @return The Oracle Cloud ID (OCID) of the Visual Builder service VCN
     * 
     */
    private @Nullable String serviceVcnId;
    /**
     * @return The current state of the vb instance.
     * 
     */
    private @Nullable String state;
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String stateMessage;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the the VbInstance was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the VbInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    private String vbInstanceId;

    private GetVbInstanceResult() {}
    /**
     * @return A list of alternate custom endpoints used for the vb instance URL.
     * 
     */
    public List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints() {
        return this.alternateCustomEndpoints == null ? List.of() : this.alternateCustomEndpoints;
    }
    /**
     * @return A list of associated attachments to other services
     * 
     */
    public List<GetVbInstanceAttachment> attachments() {
        return this.attachments == null ? List.of() : this.attachments;
    }
    /**
     * @return Compartment Identifier.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The entitlement used for billing purposes.
     * 
     */
    public Optional<String> consumptionModel() {
        return Optional.ofNullable(this.consumptionModel);
    }
    /**
     * @return Details for a custom endpoint for the vb instance.
     * 
     */
    public List<GetVbInstanceCustomEndpoint> customEndpoints() {
        return this.customEndpoints == null ? List.of() : this.customEndpoints;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Vb Instance Identifier, can be renamed.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Information for IDCS access
     * 
     */
    public List<GetVbInstanceIdcsInfo> idcsInfos() {
        return this.idcsInfos == null ? List.of() : this.idcsInfos;
    }
    public Optional<String> idcsOpenId() {
        return Optional.ofNullable(this.idcsOpenId);
    }
    /**
     * @return The Vb Instance URL.
     * 
     */
    public Optional<String> instanceUrl() {
        return Optional.ofNullable(this.instanceUrl);
    }
    /**
     * @return Visual Builder is enabled or not.
     * 
     */
    public Optional<Boolean> isVisualBuilderEnabled() {
        return Optional.ofNullable(this.isVisualBuilderEnabled);
    }
    /**
     * @return The NAT gateway IP address for the VB management VCN
     * 
     */
    public Optional<String> managementNatGatewayIp() {
        return Optional.ofNullable(this.managementNatGatewayIp);
    }
    /**
     * @return The Oracle Cloud ID (OCID) of the Visual Builder management VCN
     * 
     */
    public Optional<String> managementVcnId() {
        return Optional.ofNullable(this.managementVcnId);
    }
    /**
     * @return The number of Nodes
     * 
     */
    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }
    /**
     * @return The NAT gateway IP address for the VB service VCN
     * 
     */
    public Optional<String> serviceNatGatewayIp() {
        return Optional.ofNullable(this.serviceNatGatewayIp);
    }
    /**
     * @return The Oracle Cloud ID (OCID) of the Visual Builder service VCN
     * 
     */
    public Optional<String> serviceVcnId() {
        return Optional.ofNullable(this.serviceVcnId);
    }
    /**
     * @return The current state of the vb instance.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> stateMessage() {
        return Optional.ofNullable(this.stateMessage);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the the VbInstance was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the VbInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    public String vbInstanceId() {
        return this.vbInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVbInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints;
        private @Nullable List<GetVbInstanceAttachment> attachments;
        private @Nullable String compartmentId;
        private @Nullable String consumptionModel;
        private @Nullable List<GetVbInstanceCustomEndpoint> customEndpoints;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<GetVbInstanceIdcsInfo> idcsInfos;
        private @Nullable String idcsOpenId;
        private @Nullable String instanceUrl;
        private @Nullable Boolean isVisualBuilderEnabled;
        private @Nullable String managementNatGatewayIp;
        private @Nullable String managementVcnId;
        private @Nullable Integer nodeCount;
        private @Nullable String serviceNatGatewayIp;
        private @Nullable String serviceVcnId;
        private @Nullable String state;
        private @Nullable String stateMessage;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private String vbInstanceId;
        public Builder() {}
        public Builder(GetVbInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternateCustomEndpoints = defaults.alternateCustomEndpoints;
    	      this.attachments = defaults.attachments;
    	      this.compartmentId = defaults.compartmentId;
    	      this.consumptionModel = defaults.consumptionModel;
    	      this.customEndpoints = defaults.customEndpoints;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.idcsInfos = defaults.idcsInfos;
    	      this.idcsOpenId = defaults.idcsOpenId;
    	      this.instanceUrl = defaults.instanceUrl;
    	      this.isVisualBuilderEnabled = defaults.isVisualBuilderEnabled;
    	      this.managementNatGatewayIp = defaults.managementNatGatewayIp;
    	      this.managementVcnId = defaults.managementVcnId;
    	      this.nodeCount = defaults.nodeCount;
    	      this.serviceNatGatewayIp = defaults.serviceNatGatewayIp;
    	      this.serviceVcnId = defaults.serviceVcnId;
    	      this.state = defaults.state;
    	      this.stateMessage = defaults.stateMessage;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vbInstanceId = defaults.vbInstanceId;
        }

        @CustomType.Setter
        public Builder alternateCustomEndpoints(@Nullable List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints) {
            this.alternateCustomEndpoints = alternateCustomEndpoints;
            return this;
        }
        public Builder alternateCustomEndpoints(GetVbInstanceAlternateCustomEndpoint... alternateCustomEndpoints) {
            return alternateCustomEndpoints(List.of(alternateCustomEndpoints));
        }
        @CustomType.Setter
        public Builder attachments(@Nullable List<GetVbInstanceAttachment> attachments) {
            this.attachments = attachments;
            return this;
        }
        public Builder attachments(GetVbInstanceAttachment... attachments) {
            return attachments(List.of(attachments));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder consumptionModel(@Nullable String consumptionModel) {
            this.consumptionModel = consumptionModel;
            return this;
        }
        @CustomType.Setter
        public Builder customEndpoints(@Nullable List<GetVbInstanceCustomEndpoint> customEndpoints) {
            this.customEndpoints = customEndpoints;
            return this;
        }
        public Builder customEndpoints(GetVbInstanceCustomEndpoint... customEndpoints) {
            return customEndpoints(List.of(customEndpoints));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsInfos(@Nullable List<GetVbInstanceIdcsInfo> idcsInfos) {
            this.idcsInfos = idcsInfos;
            return this;
        }
        public Builder idcsInfos(GetVbInstanceIdcsInfo... idcsInfos) {
            return idcsInfos(List.of(idcsInfos));
        }
        @CustomType.Setter
        public Builder idcsOpenId(@Nullable String idcsOpenId) {
            this.idcsOpenId = idcsOpenId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceUrl(@Nullable String instanceUrl) {
            this.instanceUrl = instanceUrl;
            return this;
        }
        @CustomType.Setter
        public Builder isVisualBuilderEnabled(@Nullable Boolean isVisualBuilderEnabled) {
            this.isVisualBuilderEnabled = isVisualBuilderEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder managementNatGatewayIp(@Nullable String managementNatGatewayIp) {
            this.managementNatGatewayIp = managementNatGatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder managementVcnId(@Nullable String managementVcnId) {
            this.managementVcnId = managementVcnId;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(@Nullable Integer nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder serviceNatGatewayIp(@Nullable String serviceNatGatewayIp) {
            this.serviceNatGatewayIp = serviceNatGatewayIp;
            return this;
        }
        @CustomType.Setter
        public Builder serviceVcnId(@Nullable String serviceVcnId) {
            this.serviceVcnId = serviceVcnId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stateMessage(@Nullable String stateMessage) {
            this.stateMessage = stateMessage;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder vbInstanceId(String vbInstanceId) {
            this.vbInstanceId = Objects.requireNonNull(vbInstanceId);
            return this;
        }
        public GetVbInstanceResult build() {
            final var o = new GetVbInstanceResult();
            o.alternateCustomEndpoints = alternateCustomEndpoints;
            o.attachments = attachments;
            o.compartmentId = compartmentId;
            o.consumptionModel = consumptionModel;
            o.customEndpoints = customEndpoints;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.idcsInfos = idcsInfos;
            o.idcsOpenId = idcsOpenId;
            o.instanceUrl = instanceUrl;
            o.isVisualBuilderEnabled = isVisualBuilderEnabled;
            o.managementNatGatewayIp = managementNatGatewayIp;
            o.managementVcnId = managementVcnId;
            o.nodeCount = nodeCount;
            o.serviceNatGatewayIp = serviceNatGatewayIp;
            o.serviceVcnId = serviceVcnId;
            o.state = state;
            o.stateMessage = stateMessage;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.vbInstanceId = vbInstanceId;
            return o;
        }
    }
}
