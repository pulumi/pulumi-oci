// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VnMonitoring;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.VnMonitoring.inputs.PathAnalysiDestinationEndpointArgs;
import com.pulumi.oci.VnMonitoring.inputs.PathAnalysiProtocolParametersArgs;
import com.pulumi.oci.VnMonitoring.inputs.PathAnalysiQueryOptionsArgs;
import com.pulumi.oci.VnMonitoring.inputs.PathAnalysiSourceEndpointArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PathAnalysiArgs extends com.pulumi.resources.ResourceArgs {

    public static final PathAnalysiArgs Empty = new PathAnalysiArgs();

    /**
     * The Cache-Control HTTP header holds directives (instructions) for caching in both requests and responses.
     * 
     */
    @Import(name="cacheControl")
    private @Nullable Output<String> cacheControl;

    /**
     * @return The Cache-Control HTTP header holds directives (instructions) for caching in both requests and responses.
     * 
     */
    public Optional<Output<String>> cacheControl() {
        return Optional.ofNullable(this.cacheControl);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Information describing a source or destination in a `PathAnalyzerTest` resource.
     * 
     */
    @Import(name="destinationEndpoint")
    private @Nullable Output<PathAnalysiDestinationEndpointArgs> destinationEndpoint;

    /**
     * @return Information describing a source or destination in a `PathAnalyzerTest` resource.
     * 
     */
    public Optional<Output<PathAnalysiDestinationEndpointArgs>> destinationEndpoint() {
        return Optional.ofNullable(this.destinationEndpoint);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PathAnalyzerTest` resource.
     * 
     */
    @Import(name="pathAnalyzerTestId")
    private @Nullable Output<String> pathAnalyzerTestId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PathAnalyzerTest` resource.
     * 
     */
    public Optional<Output<String>> pathAnalyzerTestId() {
        return Optional.ofNullable(this.pathAnalyzerTestId);
    }

    /**
     * The IP protocol to used for the path analysis.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<Integer> protocol;

    /**
     * @return The IP protocol to used for the path analysis.
     * 
     */
    public Optional<Output<Integer>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
     * 
     */
    @Import(name="protocolParameters")
    private @Nullable Output<PathAnalysiProtocolParametersArgs> protocolParameters;

    /**
     * @return Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
     * 
     */
    public Optional<Output<PathAnalysiProtocolParametersArgs>> protocolParameters() {
        return Optional.ofNullable(this.protocolParameters);
    }

    /**
     * Defines the query options required for a `PathAnalyzerTest` resource.
     * 
     */
    @Import(name="queryOptions")
    private @Nullable Output<PathAnalysiQueryOptionsArgs> queryOptions;

    /**
     * @return Defines the query options required for a `PathAnalyzerTest` resource.
     * 
     */
    public Optional<Output<PathAnalysiQueryOptionsArgs>> queryOptions() {
        return Optional.ofNullable(this.queryOptions);
    }

    /**
     * Information describing a source or destination in a `PathAnalyzerTest` resource.
     * 
     */
    @Import(name="sourceEndpoint")
    private @Nullable Output<PathAnalysiSourceEndpointArgs> sourceEndpoint;

    /**
     * @return Information describing a source or destination in a `PathAnalyzerTest` resource.
     * 
     */
    public Optional<Output<PathAnalysiSourceEndpointArgs>> sourceEndpoint() {
        return Optional.ofNullable(this.sourceEndpoint);
    }

    /**
     * The type of the `PathAnalysis` query.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the `PathAnalysis` query.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private PathAnalysiArgs() {}

    private PathAnalysiArgs(PathAnalysiArgs $) {
        this.cacheControl = $.cacheControl;
        this.compartmentId = $.compartmentId;
        this.destinationEndpoint = $.destinationEndpoint;
        this.pathAnalyzerTestId = $.pathAnalyzerTestId;
        this.protocol = $.protocol;
        this.protocolParameters = $.protocolParameters;
        this.queryOptions = $.queryOptions;
        this.sourceEndpoint = $.sourceEndpoint;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PathAnalysiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PathAnalysiArgs $;

        public Builder() {
            $ = new PathAnalysiArgs();
        }

        public Builder(PathAnalysiArgs defaults) {
            $ = new PathAnalysiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cacheControl The Cache-Control HTTP header holds directives (instructions) for caching in both requests and responses.
         * 
         * @return builder
         * 
         */
        public Builder cacheControl(@Nullable Output<String> cacheControl) {
            $.cacheControl = cacheControl;
            return this;
        }

        /**
         * @param cacheControl The Cache-Control HTTP header holds directives (instructions) for caching in both requests and responses.
         * 
         * @return builder
         * 
         */
        public Builder cacheControl(String cacheControl) {
            return cacheControl(Output.of(cacheControl));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param destinationEndpoint Information describing a source or destination in a `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpoint(@Nullable Output<PathAnalysiDestinationEndpointArgs> destinationEndpoint) {
            $.destinationEndpoint = destinationEndpoint;
            return this;
        }

        /**
         * @param destinationEndpoint Information describing a source or destination in a `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder destinationEndpoint(PathAnalysiDestinationEndpointArgs destinationEndpoint) {
            return destinationEndpoint(Output.of(destinationEndpoint));
        }

        /**
         * @param pathAnalyzerTestId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder pathAnalyzerTestId(@Nullable Output<String> pathAnalyzerTestId) {
            $.pathAnalyzerTestId = pathAnalyzerTestId;
            return this;
        }

        /**
         * @param pathAnalyzerTestId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder pathAnalyzerTestId(String pathAnalyzerTestId) {
            return pathAnalyzerTestId(Output.of(pathAnalyzerTestId));
        }

        /**
         * @param protocol The IP protocol to used for the path analysis.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<Integer> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The IP protocol to used for the path analysis.
         * 
         * @return builder
         * 
         */
        public Builder protocol(Integer protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param protocolParameters Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder protocolParameters(@Nullable Output<PathAnalysiProtocolParametersArgs> protocolParameters) {
            $.protocolParameters = protocolParameters;
            return this;
        }

        /**
         * @param protocolParameters Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder protocolParameters(PathAnalysiProtocolParametersArgs protocolParameters) {
            return protocolParameters(Output.of(protocolParameters));
        }

        /**
         * @param queryOptions Defines the query options required for a `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder queryOptions(@Nullable Output<PathAnalysiQueryOptionsArgs> queryOptions) {
            $.queryOptions = queryOptions;
            return this;
        }

        /**
         * @param queryOptions Defines the query options required for a `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder queryOptions(PathAnalysiQueryOptionsArgs queryOptions) {
            return queryOptions(Output.of(queryOptions));
        }

        /**
         * @param sourceEndpoint Information describing a source or destination in a `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpoint(@Nullable Output<PathAnalysiSourceEndpointArgs> sourceEndpoint) {
            $.sourceEndpoint = sourceEndpoint;
            return this;
        }

        /**
         * @param sourceEndpoint Information describing a source or destination in a `PathAnalyzerTest` resource.
         * 
         * @return builder
         * 
         */
        public Builder sourceEndpoint(PathAnalysiSourceEndpointArgs sourceEndpoint) {
            return sourceEndpoint(Output.of(sourceEndpoint));
        }

        /**
         * @param type The type of the `PathAnalysis` query.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the `PathAnalysis` query.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PathAnalysiArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
