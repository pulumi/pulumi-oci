// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VnMonitoring;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.oci.Utilities;
import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestArgs;
import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestPlainArgs;
import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestsArgs;
import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestsPlainArgs;
import com.pulumi.oci.VnMonitoring.outputs.GetPathAnalyzerTestResult;
import com.pulumi.oci.VnMonitoring.outputs.GetPathAnalyzerTestsResult;
import java.util.concurrent.CompletableFuture;

public final class VnMonitoringFunctions {
    /**
     * This data source provides details about a specific Path Analyzer Test resource in Oracle Cloud Infrastructure Vn Monitoring service.
     * 
     * Gets a `PathAnalyzerTest` using its identifier.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.VnMonitoring.VnMonitoringFunctions;
     * import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testPathAnalyzerTest = VnMonitoringFunctions.GetPathAnalyzerTest(GetPathAnalyzerTestArgs.builder()
     *             .pathAnalyzerTestId(oci_vn_monitoring_path_analyzer_test.test_path_analyzer_test().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPathAnalyzerTestResult> getPathAnalyzerTest(GetPathAnalyzerTestArgs args) {
        return getPathAnalyzerTest(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Path Analyzer Test resource in Oracle Cloud Infrastructure Vn Monitoring service.
     * 
     * Gets a `PathAnalyzerTest` using its identifier.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.VnMonitoring.VnMonitoringFunctions;
     * import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testPathAnalyzerTest = VnMonitoringFunctions.GetPathAnalyzerTest(GetPathAnalyzerTestArgs.builder()
     *             .pathAnalyzerTestId(oci_vn_monitoring_path_analyzer_test.test_path_analyzer_test().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPathAnalyzerTestResult> getPathAnalyzerTestPlain(GetPathAnalyzerTestPlainArgs args) {
        return getPathAnalyzerTestPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Path Analyzer Test resource in Oracle Cloud Infrastructure Vn Monitoring service.
     * 
     * Gets a `PathAnalyzerTest` using its identifier.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.VnMonitoring.VnMonitoringFunctions;
     * import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testPathAnalyzerTest = VnMonitoringFunctions.GetPathAnalyzerTest(GetPathAnalyzerTestArgs.builder()
     *             .pathAnalyzerTestId(oci_vn_monitoring_path_analyzer_test.test_path_analyzer_test().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPathAnalyzerTestResult> getPathAnalyzerTest(GetPathAnalyzerTestArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:VnMonitoring/getPathAnalyzerTest:GetPathAnalyzerTest", TypeShape.of(GetPathAnalyzerTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Path Analyzer Test resource in Oracle Cloud Infrastructure Vn Monitoring service.
     * 
     * Gets a `PathAnalyzerTest` using its identifier.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.VnMonitoring.VnMonitoringFunctions;
     * import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testPathAnalyzerTest = VnMonitoringFunctions.GetPathAnalyzerTest(GetPathAnalyzerTestArgs.builder()
     *             .pathAnalyzerTestId(oci_vn_monitoring_path_analyzer_test.test_path_analyzer_test().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPathAnalyzerTestResult> getPathAnalyzerTestPlain(GetPathAnalyzerTestPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:VnMonitoring/getPathAnalyzerTest:GetPathAnalyzerTest", TypeShape.of(GetPathAnalyzerTestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Path Analyzer Tests in Oracle Cloud Infrastructure Vn Monitoring service.
     * 
     * Returns a list of all `PathAnalyzerTests` in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.VnMonitoring.VnMonitoringFunctions;
     * import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testPathAnalyzerTests = VnMonitoringFunctions.GetPathAnalyzerTests(GetPathAnalyzerTestsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.path_analyzer_test_display_name())
     *             .state(var_.path_analyzer_test_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPathAnalyzerTestsResult> getPathAnalyzerTests(GetPathAnalyzerTestsArgs args) {
        return getPathAnalyzerTests(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Path Analyzer Tests in Oracle Cloud Infrastructure Vn Monitoring service.
     * 
     * Returns a list of all `PathAnalyzerTests` in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.VnMonitoring.VnMonitoringFunctions;
     * import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testPathAnalyzerTests = VnMonitoringFunctions.GetPathAnalyzerTests(GetPathAnalyzerTestsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.path_analyzer_test_display_name())
     *             .state(var_.path_analyzer_test_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPathAnalyzerTestsResult> getPathAnalyzerTestsPlain(GetPathAnalyzerTestsPlainArgs args) {
        return getPathAnalyzerTestsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Path Analyzer Tests in Oracle Cloud Infrastructure Vn Monitoring service.
     * 
     * Returns a list of all `PathAnalyzerTests` in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.VnMonitoring.VnMonitoringFunctions;
     * import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testPathAnalyzerTests = VnMonitoringFunctions.GetPathAnalyzerTests(GetPathAnalyzerTestsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.path_analyzer_test_display_name())
     *             .state(var_.path_analyzer_test_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPathAnalyzerTestsResult> getPathAnalyzerTests(GetPathAnalyzerTestsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:VnMonitoring/getPathAnalyzerTests:GetPathAnalyzerTests", TypeShape.of(GetPathAnalyzerTestsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Path Analyzer Tests in Oracle Cloud Infrastructure Vn Monitoring service.
     * 
     * Returns a list of all `PathAnalyzerTests` in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.VnMonitoring.VnMonitoringFunctions;
     * import com.pulumi.oci.VnMonitoring.inputs.GetPathAnalyzerTestsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testPathAnalyzerTests = VnMonitoringFunctions.GetPathAnalyzerTests(GetPathAnalyzerTestsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .displayName(var_.path_analyzer_test_display_name())
     *             .state(var_.path_analyzer_test_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPathAnalyzerTestsResult> getPathAnalyzerTestsPlain(GetPathAnalyzerTestsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:VnMonitoring/getPathAnalyzerTests:GetPathAnalyzerTests", TypeShape.of(GetPathAnalyzerTestsResult.class), args, Utilities.withVersion(options));
    }
}
