// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VnMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPathAnalyzerTestDestinationEndpoint {
    /**
     * @return The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
     * 
     */
    private final String address;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
     * 
     */
    private final String instanceId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
     * 
     */
    private final String listenerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener&#39;s load balancer.
     * 
     */
    private final String loadBalancerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener&#39;s network load balancer.
     * 
     */
    private final String networkLoadBalancerId;
    /**
     * @return The current state of the `PathAnalyzerTest` resource.
     * 
     */
    private final String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
     * 
     */
    private final String subnetId;
    /**
     * @return The type of the `Endpoint`.
     * 
     */
    private final String type;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
     * 
     */
    private final String vlanId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
     * 
     */
    private final String vnicId;

    @CustomType.Constructor
    private GetPathAnalyzerTestDestinationEndpoint(
        @CustomType.Parameter("address") String address,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("listenerId") String listenerId,
        @CustomType.Parameter("loadBalancerId") String loadBalancerId,
        @CustomType.Parameter("networkLoadBalancerId") String networkLoadBalancerId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("subnetId") String subnetId,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("vlanId") String vlanId,
        @CustomType.Parameter("vnicId") String vnicId) {
        this.address = address;
        this.instanceId = instanceId;
        this.listenerId = listenerId;
        this.loadBalancerId = loadBalancerId;
        this.networkLoadBalancerId = networkLoadBalancerId;
        this.state = state;
        this.subnetId = subnetId;
        this.type = type;
        this.vlanId = vlanId;
        this.vnicId = vnicId;
    }

    /**
     * @return The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
     * 
     */
    public String listenerId() {
        return this.listenerId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener&#39;s load balancer.
     * 
     */
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener&#39;s network load balancer.
     * 
     */
    public String networkLoadBalancerId() {
        return this.networkLoadBalancerId;
    }
    /**
     * @return The current state of the `PathAnalyzerTest` resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The type of the `Endpoint`.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
     * 
     */
    public String vlanId() {
        return this.vlanId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
     * 
     */
    public String vnicId() {
        return this.vnicId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPathAnalyzerTestDestinationEndpoint defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String address;
        private String instanceId;
        private String listenerId;
        private String loadBalancerId;
        private String networkLoadBalancerId;
        private String state;
        private String subnetId;
        private String type;
        private String vlanId;
        private String vnicId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPathAnalyzerTestDestinationEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.instanceId = defaults.instanceId;
    	      this.listenerId = defaults.listenerId;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.networkLoadBalancerId = defaults.networkLoadBalancerId;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.type = defaults.type;
    	      this.vlanId = defaults.vlanId;
    	      this.vnicId = defaults.vnicId;
        }

        public Builder address(String address) {
            this.address = Objects.requireNonNull(address);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder listenerId(String listenerId) {
            this.listenerId = Objects.requireNonNull(listenerId);
            return this;
        }
        public Builder loadBalancerId(String loadBalancerId) {
            this.loadBalancerId = Objects.requireNonNull(loadBalancerId);
            return this;
        }
        public Builder networkLoadBalancerId(String networkLoadBalancerId) {
            this.networkLoadBalancerId = Objects.requireNonNull(networkLoadBalancerId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder vlanId(String vlanId) {
            this.vlanId = Objects.requireNonNull(vlanId);
            return this;
        }
        public Builder vnicId(String vnicId) {
            this.vnicId = Objects.requireNonNull(vnicId);
            return this;
        }        public GetPathAnalyzerTestDestinationEndpoint build() {
            return new GetPathAnalyzerTestDestinationEndpoint(address, instanceId, listenerId, loadBalancerId, networkLoadBalancerId, state, subnetId, type, vlanId, vnicId);
        }
    }
}
