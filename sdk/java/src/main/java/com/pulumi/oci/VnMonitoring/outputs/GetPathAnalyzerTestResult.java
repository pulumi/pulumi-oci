// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VnMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.VnMonitoring.outputs.GetPathAnalyzerTestDestinationEndpoint;
import com.pulumi.oci.VnMonitoring.outputs.GetPathAnalyzerTestProtocolParameter;
import com.pulumi.oci.VnMonitoring.outputs.GetPathAnalyzerTestQueryOption;
import com.pulumi.oci.VnMonitoring.outputs.GetPathAnalyzerTestSourceEndpoint;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPathAnalyzerTestResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PathAnalyzerTest` resource&#39;s compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Information describing a source or destination in a `PathAnalyzerTest` resource.
     * 
     */
    private @Nullable List<GetPathAnalyzerTestDestinationEndpoint> destinationEndpoints;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return A unique identifier established when the resource is created. The identifier can&#39;t be changed later.
     * 
     */
    private @Nullable String id;
    private String pathAnalyzerTestId;
    /**
     * @return The IP protocol to use for the `PathAnalyzerTest` resource.
     * 
     */
    private @Nullable Integer protocol;
    /**
     * @return Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
     * 
     */
    private @Nullable List<GetPathAnalyzerTestProtocolParameter> protocolParameters;
    /**
     * @return Defines the query options required for a `PathAnalyzerTest` resource.
     * 
     */
    private @Nullable List<GetPathAnalyzerTestQueryOption> queryOptions;
    /**
     * @return Information describing a source or destination in a `PathAnalyzerTest` resource.
     * 
     */
    private @Nullable List<GetPathAnalyzerTestSourceEndpoint> sourceEndpoints;
    /**
     * @return The current state of the `PathAnalyzerTest` resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The date and time the `PathAnalyzerTest` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the `PathAnalyzerTest` resource was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeUpdated;

    private GetPathAnalyzerTestResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PathAnalyzerTest` resource&#39;s compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Information describing a source or destination in a `PathAnalyzerTest` resource.
     * 
     */
    public List<GetPathAnalyzerTestDestinationEndpoint> destinationEndpoints() {
        return this.destinationEndpoints == null ? List.of() : this.destinationEndpoints;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return A unique identifier established when the resource is created. The identifier can&#39;t be changed later.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String pathAnalyzerTestId() {
        return this.pathAnalyzerTestId;
    }
    /**
     * @return The IP protocol to use for the `PathAnalyzerTest` resource.
     * 
     */
    public Optional<Integer> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return Defines the IP protocol parameters for a `PathAnalyzerTest` resource.
     * 
     */
    public List<GetPathAnalyzerTestProtocolParameter> protocolParameters() {
        return this.protocolParameters == null ? List.of() : this.protocolParameters;
    }
    /**
     * @return Defines the query options required for a `PathAnalyzerTest` resource.
     * 
     */
    public List<GetPathAnalyzerTestQueryOption> queryOptions() {
        return this.queryOptions == null ? List.of() : this.queryOptions;
    }
    /**
     * @return Information describing a source or destination in a `PathAnalyzerTest` resource.
     * 
     */
    public List<GetPathAnalyzerTestSourceEndpoint> sourceEndpoints() {
        return this.sourceEndpoints == null ? List.of() : this.sourceEndpoints;
    }
    /**
     * @return The current state of the `PathAnalyzerTest` resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The date and time the `PathAnalyzerTest` resource was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the `PathAnalyzerTest` resource was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPathAnalyzerTestResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable List<GetPathAnalyzerTestDestinationEndpoint> destinationEndpoints;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private String pathAnalyzerTestId;
        private @Nullable Integer protocol;
        private @Nullable List<GetPathAnalyzerTestProtocolParameter> protocolParameters;
        private @Nullable List<GetPathAnalyzerTestQueryOption> queryOptions;
        private @Nullable List<GetPathAnalyzerTestSourceEndpoint> sourceEndpoints;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetPathAnalyzerTestResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.destinationEndpoints = defaults.destinationEndpoints;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.pathAnalyzerTestId = defaults.pathAnalyzerTestId;
    	      this.protocol = defaults.protocol;
    	      this.protocolParameters = defaults.protocolParameters;
    	      this.queryOptions = defaults.queryOptions;
    	      this.sourceEndpoints = defaults.sourceEndpoints;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder destinationEndpoints(@Nullable List<GetPathAnalyzerTestDestinationEndpoint> destinationEndpoints) {
            this.destinationEndpoints = destinationEndpoints;
            return this;
        }
        public Builder destinationEndpoints(GetPathAnalyzerTestDestinationEndpoint... destinationEndpoints) {
            return destinationEndpoints(List.of(destinationEndpoints));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pathAnalyzerTestId(String pathAnalyzerTestId) {
            this.pathAnalyzerTestId = Objects.requireNonNull(pathAnalyzerTestId);
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable Integer protocol) {
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder protocolParameters(@Nullable List<GetPathAnalyzerTestProtocolParameter> protocolParameters) {
            this.protocolParameters = protocolParameters;
            return this;
        }
        public Builder protocolParameters(GetPathAnalyzerTestProtocolParameter... protocolParameters) {
            return protocolParameters(List.of(protocolParameters));
        }
        @CustomType.Setter
        public Builder queryOptions(@Nullable List<GetPathAnalyzerTestQueryOption> queryOptions) {
            this.queryOptions = queryOptions;
            return this;
        }
        public Builder queryOptions(GetPathAnalyzerTestQueryOption... queryOptions) {
            return queryOptions(List.of(queryOptions));
        }
        @CustomType.Setter
        public Builder sourceEndpoints(@Nullable List<GetPathAnalyzerTestSourceEndpoint> sourceEndpoints) {
            this.sourceEndpoints = sourceEndpoints;
            return this;
        }
        public Builder sourceEndpoints(GetPathAnalyzerTestSourceEndpoint... sourceEndpoints) {
            return sourceEndpoints(List.of(sourceEndpoints));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetPathAnalyzerTestResult build() {
            final var o = new GetPathAnalyzerTestResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.destinationEndpoints = destinationEndpoints;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.pathAnalyzerTestId = pathAnalyzerTestId;
            o.protocol = protocol;
            o.protocolParameters = protocolParameters;
            o.queryOptions = queryOptions;
            o.sourceEndpoints = sourceEndpoints;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
