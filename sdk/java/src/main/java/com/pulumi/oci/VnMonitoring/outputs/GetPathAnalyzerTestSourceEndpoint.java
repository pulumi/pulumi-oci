// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VnMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPathAnalyzerTestSourceEndpoint {
    /**
     * @return The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
     * 
     */
    private @Nullable String address;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
     * 
     */
    private @Nullable String instanceId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
     * 
     */
    private @Nullable String listenerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener&#39;s load balancer.
     * 
     */
    private @Nullable String loadBalancerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener&#39;s network load balancer.
     * 
     */
    private @Nullable String networkLoadBalancerId;
    /**
     * @return The current state of the `PathAnalyzerTest` resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return The type of the `Endpoint`.
     * 
     */
    private @Nullable String type;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
     * 
     */
    private @Nullable String vlanId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
     * 
     */
    private @Nullable String vnicId;

    private GetPathAnalyzerTestSourceEndpoint() {}
    /**
     * @return The IPv4 address of the COMPUTE_INSTANCE-type `Endpoint` object.
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compute instance.
     * 
     */
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer listener.
     * 
     */
    public Optional<String> listenerId() {
        return Optional.ofNullable(this.listenerId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener&#39;s load balancer.
     * 
     */
    public Optional<String> loadBalancerId() {
        return Optional.ofNullable(this.loadBalancerId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the listener&#39;s network load balancer.
     * 
     */
    public Optional<String> networkLoadBalancerId() {
        return Optional.ofNullable(this.networkLoadBalancerId);
    }
    /**
     * @return The current state of the `PathAnalyzerTest` resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet containing the IP address. This can be used to disambiguate which subnet is intended, in case the IP address is used in more than one subnet (when there are subnets with overlapping IP ranges).
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return The type of the `Endpoint`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN containing the IP address. This can be used to disambiguate which VLAN is queried, in case the endpoint IP address belongs to more than one VLAN (when there are VLANs with overlapping IP ranges).
     * 
     */
    public Optional<String> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC attached to the compute instance.
     * 
     */
    public Optional<String> vnicId() {
        return Optional.ofNullable(this.vnicId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPathAnalyzerTestSourceEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String address;
        private @Nullable String instanceId;
        private @Nullable String listenerId;
        private @Nullable String loadBalancerId;
        private @Nullable String networkLoadBalancerId;
        private @Nullable String state;
        private @Nullable String subnetId;
        private @Nullable String type;
        private @Nullable String vlanId;
        private @Nullable String vnicId;
        public Builder() {}
        public Builder(GetPathAnalyzerTestSourceEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.instanceId = defaults.instanceId;
    	      this.listenerId = defaults.listenerId;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.networkLoadBalancerId = defaults.networkLoadBalancerId;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.type = defaults.type;
    	      this.vlanId = defaults.vlanId;
    	      this.vnicId = defaults.vnicId;
        }

        @CustomType.Setter
        public Builder address(@Nullable String address) {
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder listenerId(@Nullable String listenerId) {
            this.listenerId = listenerId;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerId(@Nullable String loadBalancerId) {
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder networkLoadBalancerId(@Nullable String networkLoadBalancerId) {
            this.networkLoadBalancerId = networkLoadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vlanId(@Nullable String vlanId) {
            this.vlanId = vlanId;
            return this;
        }
        @CustomType.Setter
        public Builder vnicId(@Nullable String vnicId) {
            this.vnicId = vnicId;
            return this;
        }
        public GetPathAnalyzerTestSourceEndpoint build() {
            final var o = new GetPathAnalyzerTestSourceEndpoint();
            o.address = address;
            o.instanceId = instanceId;
            o.listenerId = listenerId;
            o.loadBalancerId = loadBalancerId;
            o.networkLoadBalancerId = networkLoadBalancerId;
            o.state = state;
            o.subnetId = subnetId;
            o.type = type;
            o.vlanId = vlanId;
            o.vnicId = vnicId;
            return o;
        }
    }
}
