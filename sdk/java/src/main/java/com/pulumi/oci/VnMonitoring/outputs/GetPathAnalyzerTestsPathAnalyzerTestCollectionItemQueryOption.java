// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VnMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetPathAnalyzerTestsPathAnalyzerTestCollectionItemQueryOption {
    /**
     * @return If true, a path analysis is done for both the forward and reverse routes.
     * 
     */
    private final Boolean isBiDirectionalAnalysis;

    @CustomType.Constructor
    private GetPathAnalyzerTestsPathAnalyzerTestCollectionItemQueryOption(@CustomType.Parameter("isBiDirectionalAnalysis") Boolean isBiDirectionalAnalysis) {
        this.isBiDirectionalAnalysis = isBiDirectionalAnalysis;
    }

    /**
     * @return If true, a path analysis is done for both the forward and reverse routes.
     * 
     */
    public Boolean isBiDirectionalAnalysis() {
        return this.isBiDirectionalAnalysis;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPathAnalyzerTestsPathAnalyzerTestCollectionItemQueryOption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean isBiDirectionalAnalysis;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPathAnalyzerTestsPathAnalyzerTestCollectionItemQueryOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isBiDirectionalAnalysis = defaults.isBiDirectionalAnalysis;
        }

        public Builder isBiDirectionalAnalysis(Boolean isBiDirectionalAnalysis) {
            this.isBiDirectionalAnalysis = Objects.requireNonNull(isBiDirectionalAnalysis);
            return this;
        }        public GetPathAnalyzerTestsPathAnalyzerTestCollectionItemQueryOption build() {
            return new GetPathAnalyzerTestsPathAnalyzerTestCollectionItemQueryOption(isBiDirectionalAnalysis);
        }
    }
}
