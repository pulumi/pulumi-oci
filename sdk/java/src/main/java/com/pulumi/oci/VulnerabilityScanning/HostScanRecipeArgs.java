// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.VulnerabilityScanning.inputs.HostScanRecipeAgentSettingsArgs;
import com.pulumi.oci.VulnerabilityScanning.inputs.HostScanRecipeApplicationSettingsArgs;
import com.pulumi.oci.VulnerabilityScanning.inputs.HostScanRecipePortSettingsArgs;
import com.pulumi.oci.VulnerabilityScanning.inputs.HostScanRecipeScheduleArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostScanRecipeArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostScanRecipeArgs Empty = new HostScanRecipeArgs();

    /**
     * (Updatable) Agent scan settings for a host scan
     * 
     */
    @Import(name="agentSettings", required=true)
    private Output<HostScanRecipeAgentSettingsArgs> agentSettings;

    /**
     * @return (Updatable) Agent scan settings for a host scan
     * 
     */
    public Output<HostScanRecipeAgentSettingsArgs> agentSettings() {
        return this.agentSettings;
    }

    /**
     * (Updatable) Agent scan settings for an application scan (as a part of a host scan)
     * 
     */
    @Import(name="applicationSettings")
    private @Nullable Output<HostScanRecipeApplicationSettingsArgs> applicationSettings;

    /**
     * @return (Updatable) Agent scan settings for an application scan (as a part of a host scan)
     * 
     */
    public Optional<Output<HostScanRecipeApplicationSettingsArgs>> applicationSettings() {
        return Optional.ofNullable(this.applicationSettings);
    }

    /**
     * (Updatable) Compartment ID of the scanning config. If no individual hosts are specified, all hosts in this compartment are scanned
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment ID of the scanning config. If no individual hosts are specified, all hosts in this compartment are scanned
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Recipe identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Recipe identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Port scan settings for a host scan
     * 
     */
    @Import(name="portSettings", required=true)
    private Output<HostScanRecipePortSettingsArgs> portSettings;

    /**
     * @return (Updatable) Port scan settings for a host scan
     * 
     */
    public Output<HostScanRecipePortSettingsArgs> portSettings() {
        return this.portSettings;
    }

    /**
     * (Updatable) A scanning schedule
     * 
     */
    @Import(name="schedule", required=true)
    private Output<HostScanRecipeScheduleArgs> schedule;

    /**
     * @return (Updatable) A scanning schedule
     * 
     */
    public Output<HostScanRecipeScheduleArgs> schedule() {
        return this.schedule;
    }

    private HostScanRecipeArgs() {}

    private HostScanRecipeArgs(HostScanRecipeArgs $) {
        this.agentSettings = $.agentSettings;
        this.applicationSettings = $.applicationSettings;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.portSettings = $.portSettings;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostScanRecipeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostScanRecipeArgs $;

        public Builder() {
            $ = new HostScanRecipeArgs();
        }

        public Builder(HostScanRecipeArgs defaults) {
            $ = new HostScanRecipeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentSettings (Updatable) Agent scan settings for a host scan
         * 
         * @return builder
         * 
         */
        public Builder agentSettings(Output<HostScanRecipeAgentSettingsArgs> agentSettings) {
            $.agentSettings = agentSettings;
            return this;
        }

        /**
         * @param agentSettings (Updatable) Agent scan settings for a host scan
         * 
         * @return builder
         * 
         */
        public Builder agentSettings(HostScanRecipeAgentSettingsArgs agentSettings) {
            return agentSettings(Output.of(agentSettings));
        }

        /**
         * @param applicationSettings (Updatable) Agent scan settings for an application scan (as a part of a host scan)
         * 
         * @return builder
         * 
         */
        public Builder applicationSettings(@Nullable Output<HostScanRecipeApplicationSettingsArgs> applicationSettings) {
            $.applicationSettings = applicationSettings;
            return this;
        }

        /**
         * @param applicationSettings (Updatable) Agent scan settings for an application scan (as a part of a host scan)
         * 
         * @return builder
         * 
         */
        public Builder applicationSettings(HostScanRecipeApplicationSettingsArgs applicationSettings) {
            return applicationSettings(Output.of(applicationSettings));
        }

        /**
         * @param compartmentId (Updatable) Compartment ID of the scanning config. If no individual hosts are specified, all hosts in this compartment are scanned
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment ID of the scanning config. If no individual hosts are specified, all hosts in this compartment are scanned
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Recipe identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Recipe identifier, which can be renamed. If not present, it will be auto-generated. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param portSettings (Updatable) Port scan settings for a host scan
         * 
         * @return builder
         * 
         */
        public Builder portSettings(Output<HostScanRecipePortSettingsArgs> portSettings) {
            $.portSettings = portSettings;
            return this;
        }

        /**
         * @param portSettings (Updatable) Port scan settings for a host scan
         * 
         * @return builder
         * 
         */
        public Builder portSettings(HostScanRecipePortSettingsArgs portSettings) {
            return portSettings(Output.of(portSettings));
        }

        /**
         * @param schedule (Updatable) A scanning schedule
         * 
         * @return builder
         * 
         */
        public Builder schedule(Output<HostScanRecipeScheduleArgs> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule (Updatable) A scanning schedule
         * 
         * @return builder
         * 
         */
        public Builder schedule(HostScanRecipeScheduleArgs schedule) {
            return schedule(Output.of(schedule));
        }

        public HostScanRecipeArgs build() {
            if ($.agentSettings == null) {
                throw new MissingRequiredPropertyException("HostScanRecipeArgs", "agentSettings");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("HostScanRecipeArgs", "compartmentId");
            }
            if ($.portSettings == null) {
                throw new MissingRequiredPropertyException("HostScanRecipeArgs", "portSettings");
            }
            if ($.schedule == null) {
                throw new MissingRequiredPropertyException("HostScanRecipeArgs", "schedule");
            }
            return $;
        }
    }

}
