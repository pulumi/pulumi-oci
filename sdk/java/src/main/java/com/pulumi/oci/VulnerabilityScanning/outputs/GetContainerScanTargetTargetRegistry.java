// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainerScanTargetTargetRegistry {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
     * 
     */
    private @Nullable List<String> repositories;
    /**
     * @return The scan level
     * 
     */
    private @Nullable String type;
    /**
     * @return URL of the registry.
     * 
     */
    private @Nullable String url;

    private GetContainerScanTargetTargetRegistry() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
     * 
     */
    public List<String> repositories() {
        return this.repositories == null ? List.of() : this.repositories;
    }
    /**
     * @return The scan level
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return URL of the registry.
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerScanTargetTargetRegistry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<String> repositories;
        private @Nullable String type;
        private @Nullable String url;
        public Builder() {}
        public Builder(GetContainerScanTargetTargetRegistry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.repositories = defaults.repositories;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder repositories(@Nullable List<String> repositories) {
            this.repositories = repositories;
            return this;
        }
        public Builder repositories(String... repositories) {
            return repositories(List.of(repositories));
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public GetContainerScanTargetTargetRegistry build() {
            final var o = new GetContainerScanTargetTargetRegistry();
            o.compartmentId = compartmentId;
            o.repositories = repositories;
            o.type = type;
            o.url = url;
            return o;
        }
    }
}
