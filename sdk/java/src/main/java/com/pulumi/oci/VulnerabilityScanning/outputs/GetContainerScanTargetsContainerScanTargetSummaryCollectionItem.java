// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.VulnerabilityScanning.outputs.GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetContainerScanTargetsContainerScanTargetSummaryCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return ID of the container scan recipe this target applies.
     * 
     */
    private String containerScanRecipeId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Target description.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan target. Immutable and generated on creation.
     * 
     */
    private String id;
    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Registry information for a container scan target
     * 
     */
    private List<GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry> targetRegistries;
    /**
     * @return Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     * 
     */
    private String timeCreated;
    /**
     * @return Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     * 
     */
    private String timeUpdated;

    private GetContainerScanTargetsContainerScanTargetSummaryCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return ID of the container scan recipe this target applies.
     * 
     */
    public String containerScanRecipeId() {
        return this.containerScanRecipeId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Target description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of container scan target. Immutable and generated on creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Registry information for a container scan target
     * 
     */
    public List<GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry> targetRegistries() {
        return this.targetRegistries;
    }
    /**
     * @return Date and time the target was created, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Date and time the target was last updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerScanTargetsContainerScanTargetSummaryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String containerScanRecipeId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String state;
        private Map<String,String> systemTags;
        private List<GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry> targetRegistries;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetContainerScanTargetsContainerScanTargetSummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.containerScanRecipeId = defaults.containerScanRecipeId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetRegistries = defaults.targetRegistries;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder containerScanRecipeId(String containerScanRecipeId) {
            if (containerScanRecipeId == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "containerScanRecipeId");
            }
            this.containerScanRecipeId = containerScanRecipeId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetRegistries(List<GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry> targetRegistries) {
            if (targetRegistries == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "targetRegistries");
            }
            this.targetRegistries = targetRegistries;
            return this;
        }
        public Builder targetRegistries(GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry... targetRegistries) {
            return targetRegistries(List.of(targetRegistries));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetContainerScanTargetsContainerScanTargetSummaryCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetContainerScanTargetsContainerScanTargetSummaryCollectionItem build() {
            final var _resultValue = new GetContainerScanTargetsContainerScanTargetSummaryCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.containerScanRecipeId = containerScanRecipeId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.targetRegistries = targetRegistries;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
