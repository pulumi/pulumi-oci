// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.VulnerabilityScanning.outputs.GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationCisBenchmarkSetting;
import com.pulumi.oci.VulnerabilityScanning.outputs.GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationEndpointProtectionSetting;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration {
    /**
     * @return CIS (Center for Internet Security) Benchmark scan settings for a host scan
     * 
     */
    private List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationCisBenchmarkSetting> cisBenchmarkSettings;
    /**
     * @return Endpoint Protection scan settings for a host scan
     * 
     */
    private List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationEndpointProtectionSetting> endpointProtectionSettings;
    /**
     * @return Boolean flag letting agent know if it should un-install the Qualys agent when it is stopped.
     * 
     */
    private Boolean shouldUnInstall;
    /**
     * @return Vault secret OCID which stores license information. Content inside this secret in vault would be base64 string containing information about customer&#39;s Qualys susbcription license.
     * 
     */
    private String vaultSecretId;
    /**
     * @return Vendor to use for the host scan agent.
     * 
     */
    private String vendor;
    /**
     * @return Vendor to use for the host scan agent.
     * 
     */
    private String vendorType;

    private GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration() {}
    /**
     * @return CIS (Center for Internet Security) Benchmark scan settings for a host scan
     * 
     */
    public List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationCisBenchmarkSetting> cisBenchmarkSettings() {
        return this.cisBenchmarkSettings;
    }
    /**
     * @return Endpoint Protection scan settings for a host scan
     * 
     */
    public List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationEndpointProtectionSetting> endpointProtectionSettings() {
        return this.endpointProtectionSettings;
    }
    /**
     * @return Boolean flag letting agent know if it should un-install the Qualys agent when it is stopped.
     * 
     */
    public Boolean shouldUnInstall() {
        return this.shouldUnInstall;
    }
    /**
     * @return Vault secret OCID which stores license information. Content inside this secret in vault would be base64 string containing information about customer&#39;s Qualys susbcription license.
     * 
     */
    public String vaultSecretId() {
        return this.vaultSecretId;
    }
    /**
     * @return Vendor to use for the host scan agent.
     * 
     */
    public String vendor() {
        return this.vendor;
    }
    /**
     * @return Vendor to use for the host scan agent.
     * 
     */
    public String vendorType() {
        return this.vendorType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationCisBenchmarkSetting> cisBenchmarkSettings;
        private List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationEndpointProtectionSetting> endpointProtectionSettings;
        private Boolean shouldUnInstall;
        private String vaultSecretId;
        private String vendor;
        private String vendorType;
        public Builder() {}
        public Builder(GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cisBenchmarkSettings = defaults.cisBenchmarkSettings;
    	      this.endpointProtectionSettings = defaults.endpointProtectionSettings;
    	      this.shouldUnInstall = defaults.shouldUnInstall;
    	      this.vaultSecretId = defaults.vaultSecretId;
    	      this.vendor = defaults.vendor;
    	      this.vendorType = defaults.vendorType;
        }

        @CustomType.Setter
        public Builder cisBenchmarkSettings(List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationCisBenchmarkSetting> cisBenchmarkSettings) {
            if (cisBenchmarkSettings == null) {
              throw new MissingRequiredPropertyException("GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration", "cisBenchmarkSettings");
            }
            this.cisBenchmarkSettings = cisBenchmarkSettings;
            return this;
        }
        public Builder cisBenchmarkSettings(GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationCisBenchmarkSetting... cisBenchmarkSettings) {
            return cisBenchmarkSettings(List.of(cisBenchmarkSettings));
        }
        @CustomType.Setter
        public Builder endpointProtectionSettings(List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationEndpointProtectionSetting> endpointProtectionSettings) {
            if (endpointProtectionSettings == null) {
              throw new MissingRequiredPropertyException("GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration", "endpointProtectionSettings");
            }
            this.endpointProtectionSettings = endpointProtectionSettings;
            return this;
        }
        public Builder endpointProtectionSettings(GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfigurationEndpointProtectionSetting... endpointProtectionSettings) {
            return endpointProtectionSettings(List.of(endpointProtectionSettings));
        }
        @CustomType.Setter
        public Builder shouldUnInstall(Boolean shouldUnInstall) {
            if (shouldUnInstall == null) {
              throw new MissingRequiredPropertyException("GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration", "shouldUnInstall");
            }
            this.shouldUnInstall = shouldUnInstall;
            return this;
        }
        @CustomType.Setter
        public Builder vaultSecretId(String vaultSecretId) {
            if (vaultSecretId == null) {
              throw new MissingRequiredPropertyException("GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration", "vaultSecretId");
            }
            this.vaultSecretId = vaultSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder vendor(String vendor) {
            if (vendor == null) {
              throw new MissingRequiredPropertyException("GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration", "vendor");
            }
            this.vendor = vendor;
            return this;
        }
        @CustomType.Setter
        public Builder vendorType(String vendorType) {
            if (vendorType == null) {
              throw new MissingRequiredPropertyException("GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration", "vendorType");
            }
            this.vendorType = vendorType;
            return this;
        }
        public GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration build() {
            final var _resultValue = new GetHostScanRecipesHostScanRecipeSummaryCollectionItemAgentSettingAgentConfiguration();
            _resultValue.cisBenchmarkSettings = cisBenchmarkSettings;
            _resultValue.endpointProtectionSettings = endpointProtectionSettings;
            _resultValue.shouldUnInstall = shouldUnInstall;
            _resultValue.vaultSecretId = vaultSecretId;
            _resultValue.vendor = vendor;
            _resultValue.vendorType = vendorType;
            return _resultValue;
        }
    }
}
