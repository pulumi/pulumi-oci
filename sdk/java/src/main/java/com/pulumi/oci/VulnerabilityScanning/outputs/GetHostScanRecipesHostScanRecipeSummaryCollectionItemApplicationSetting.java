// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.VulnerabilityScanning.outputs.GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSettingFoldersToScan;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSetting {
    /**
     * @return Scan recurrences in RFC-5545 section 3.3.10 format. Only supported input are weekly, biweekly, monthly listed below FREQ=WEEKLY;WKST=&lt;weekday&gt;;INTERVAL=1 - This weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=WEEKLY;WKST=&lt;weekday&gt;;INTERVAL=2 - This bi-weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=MONTHLY;WKST=&lt;weekday&gt;;INTERVAL=1 - This monthly scan on the specified weekday (e.g. SU for Sunday, starting from the next such weekday based on the time of setting creation)
     * 
     */
    private String applicationScanRecurrence;
    /**
     * @return List of folders selected for scanning
     * 
     */
    private List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSettingFoldersToScan> foldersToScans;
    /**
     * @return Enable or disable application scan
     * 
     */
    private Boolean isEnabled;

    private GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSetting() {}
    /**
     * @return Scan recurrences in RFC-5545 section 3.3.10 format. Only supported input are weekly, biweekly, monthly listed below FREQ=WEEKLY;WKST=&lt;weekday&gt;;INTERVAL=1 - This weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=WEEKLY;WKST=&lt;weekday&gt;;INTERVAL=2 - This bi-weekly scan on the specified weekday (e.g. SU for Sunday) FREQ=MONTHLY;WKST=&lt;weekday&gt;;INTERVAL=1 - This monthly scan on the specified weekday (e.g. SU for Sunday, starting from the next such weekday based on the time of setting creation)
     * 
     */
    public String applicationScanRecurrence() {
        return this.applicationScanRecurrence;
    }
    /**
     * @return List of folders selected for scanning
     * 
     */
    public List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSettingFoldersToScan> foldersToScans() {
        return this.foldersToScans;
    }
    /**
     * @return Enable or disable application scan
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationScanRecurrence;
        private List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSettingFoldersToScan> foldersToScans;
        private Boolean isEnabled;
        public Builder() {}
        public Builder(GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationScanRecurrence = defaults.applicationScanRecurrence;
    	      this.foldersToScans = defaults.foldersToScans;
    	      this.isEnabled = defaults.isEnabled;
        }

        @CustomType.Setter
        public Builder applicationScanRecurrence(String applicationScanRecurrence) {
            this.applicationScanRecurrence = Objects.requireNonNull(applicationScanRecurrence);
            return this;
        }
        @CustomType.Setter
        public Builder foldersToScans(List<GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSettingFoldersToScan> foldersToScans) {
            this.foldersToScans = Objects.requireNonNull(foldersToScans);
            return this;
        }
        public Builder foldersToScans(GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSettingFoldersToScan... foldersToScans) {
            return foldersToScans(List.of(foldersToScans));
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        public GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSetting build() {
            final var o = new GetHostScanRecipesHostScanRecipeSummaryCollectionItemApplicationSetting();
            o.applicationScanRecurrence = applicationScanRecurrence;
            o.foldersToScans = foldersToScans;
            o.isEnabled = isEnabled;
            return o;
        }
    }
}
