// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem {
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Error code of task failure.
     * 
     */
    private String errorCode;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return OCID of the host instance where scan was done.
     * 
     */
    private String instanceId;
    /**
     * @return Error message detailing task failure.
     * 
     */
    private String message;
    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Task during scan which failed.
     * 
     */
    private String task;
    /**
     * @return Date and time the error was updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    private String timeUpdated;
    /**
     * @return Vendor which was used for the host scan agent.
     * 
     */
    private String vendor;

    private GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem() {}
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Error code of task failure.
     * 
     */
    public String errorCode() {
        return this.errorCode;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return OCID of the host instance where scan was done.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Error message detailing task failure.
     * 
     */
    public String message() {
        return this.message;
    }
    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Task during scan which failed.
     * 
     */
    public String task() {
        return this.task;
    }
    /**
     * @return Date and time the error was updated, format as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Vendor which was used for the host scan agent.
     * 
     */
    public String vendor() {
        return this.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> definedTags;
        private String errorCode;
        private Map<String,String> freeformTags;
        private String instanceId;
        private String message;
        private String state;
        private Map<String,String> systemTags;
        private String task;
        private String timeUpdated;
        private String vendor;
        public Builder() {}
        public Builder(GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definedTags = defaults.definedTags;
    	      this.errorCode = defaults.errorCode;
    	      this.freeformTags = defaults.freeformTags;
    	      this.instanceId = defaults.instanceId;
    	      this.message = defaults.message;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.task = defaults.task;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vendor = defaults.vendor;
        }

        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder errorCode(String errorCode) {
            if (errorCode == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "errorCode");
            }
            this.errorCode = errorCode;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder message(String message) {
            if (message == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "message");
            }
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder task(String task) {
            if (task == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "task");
            }
            this.task = task;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder vendor(String vendor) {
            if (vendor == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem", "vendor");
            }
            this.vendor = vendor;
            return this;
        }
        public GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem build() {
            final var _resultValue = new GetHostScanTargetErrorsHostScanTargetErrorSummaryCollectionItemItem();
            _resultValue.definedTags = definedTags;
            _resultValue.errorCode = errorCode;
            _resultValue.freeformTags = freeformTags;
            _resultValue.instanceId = instanceId;
            _resultValue.message = message;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.task = task;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.vendor = vendor;
            return _resultValue;
        }
    }
}
