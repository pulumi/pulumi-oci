// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.VulnerabilityScanning.outputs.GetHostScanTargetErrorsFilter;
import com.pulumi.oci.VulnerabilityScanning.outputs.GetHostScanTargetErrorsHostScanTargetErrorSummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHostScanTargetErrorsResult {
    private String compartmentId;
    private @Nullable List<GetHostScanTargetErrorsFilter> filters;
    /**
     * @return The list of host_scan_target_error_summary_collection.
     * 
     */
    private List<GetHostScanTargetErrorsHostScanTargetErrorSummaryCollection> hostScanTargetErrorSummaryCollections;
    private String hostScanTargetId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The current state of the config.
     * 
     */
    private @Nullable String state;

    private GetHostScanTargetErrorsResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetHostScanTargetErrorsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The list of host_scan_target_error_summary_collection.
     * 
     */
    public List<GetHostScanTargetErrorsHostScanTargetErrorSummaryCollection> hostScanTargetErrorSummaryCollections() {
        return this.hostScanTargetErrorSummaryCollections;
    }
    public String hostScanTargetId() {
        return this.hostScanTargetId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the config.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHostScanTargetErrorsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetHostScanTargetErrorsFilter> filters;
        private List<GetHostScanTargetErrorsHostScanTargetErrorSummaryCollection> hostScanTargetErrorSummaryCollections;
        private String hostScanTargetId;
        private String id;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetHostScanTargetErrorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.hostScanTargetErrorSummaryCollections = defaults.hostScanTargetErrorSummaryCollections;
    	      this.hostScanTargetId = defaults.hostScanTargetId;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetHostScanTargetErrorsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetHostScanTargetErrorsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder hostScanTargetErrorSummaryCollections(List<GetHostScanTargetErrorsHostScanTargetErrorSummaryCollection> hostScanTargetErrorSummaryCollections) {
            if (hostScanTargetErrorSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsResult", "hostScanTargetErrorSummaryCollections");
            }
            this.hostScanTargetErrorSummaryCollections = hostScanTargetErrorSummaryCollections;
            return this;
        }
        public Builder hostScanTargetErrorSummaryCollections(GetHostScanTargetErrorsHostScanTargetErrorSummaryCollection... hostScanTargetErrorSummaryCollections) {
            return hostScanTargetErrorSummaryCollections(List.of(hostScanTargetErrorSummaryCollections));
        }
        @CustomType.Setter
        public Builder hostScanTargetId(String hostScanTargetId) {
            if (hostScanTargetId == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsResult", "hostScanTargetId");
            }
            this.hostScanTargetId = hostScanTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHostScanTargetErrorsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetHostScanTargetErrorsResult build() {
            final var _resultValue = new GetHostScanTargetErrorsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.hostScanTargetErrorSummaryCollections = hostScanTargetErrorSummaryCollections;
            _resultValue.hostScanTargetId = hostScanTargetId;
            _resultValue.id = id;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
