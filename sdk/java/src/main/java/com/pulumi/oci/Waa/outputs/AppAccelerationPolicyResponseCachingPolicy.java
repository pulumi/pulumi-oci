// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waa.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AppAccelerationPolicyResponseCachingPolicy {
    /**
     * @return (Updatable) When false, responses will not be cached by the backend based on response headers.
     * 
     */
    private final @Nullable Boolean isResponseHeaderBasedCachingEnabled;

    @CustomType.Constructor
    private AppAccelerationPolicyResponseCachingPolicy(@CustomType.Parameter("isResponseHeaderBasedCachingEnabled") @Nullable Boolean isResponseHeaderBasedCachingEnabled) {
        this.isResponseHeaderBasedCachingEnabled = isResponseHeaderBasedCachingEnabled;
    }

    /**
     * @return (Updatable) When false, responses will not be cached by the backend based on response headers.
     * 
     */
    public Optional<Boolean> isResponseHeaderBasedCachingEnabled() {
        return Optional.ofNullable(this.isResponseHeaderBasedCachingEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppAccelerationPolicyResponseCachingPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean isResponseHeaderBasedCachingEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(AppAccelerationPolicyResponseCachingPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isResponseHeaderBasedCachingEnabled = defaults.isResponseHeaderBasedCachingEnabled;
        }

        public Builder isResponseHeaderBasedCachingEnabled(@Nullable Boolean isResponseHeaderBasedCachingEnabled) {
            this.isResponseHeaderBasedCachingEnabled = isResponseHeaderBasedCachingEnabled;
            return this;
        }        public AppAccelerationPolicyResponseCachingPolicy build() {
            return new AppAccelerationPolicyResponseCachingPolicy(isResponseHeaderBasedCachingEnabled);
        }
    }
}
