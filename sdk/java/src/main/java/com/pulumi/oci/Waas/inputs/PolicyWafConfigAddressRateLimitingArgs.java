// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyWafConfigAddressRateLimitingArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyWafConfigAddressRateLimitingArgs Empty = new PolicyWafConfigAddressRateLimitingArgs();

    /**
     * (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     * 
     */
    @Import(name="allowedRatePerAddress")
    private @Nullable Output<Integer> allowedRatePerAddress;

    /**
     * @return (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     * 
     */
    public Optional<Output<Integer>> allowedRatePerAddress() {
        return Optional.ofNullable(this.allowedRatePerAddress);
    }

    /**
     * (Updatable) The response status code returned when a request is blocked. If unspecified, defaults to `503`. The list of available response codes: `400`, `401`, `403`, `404`, `405`, `408`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `422`, `494`, `495`, `496`, `497`, `499`, `500`, `501`, `502`, `503`, `504`, `507`.
     * 
     */
    @Import(name="blockResponseCode")
    private @Nullable Output<Integer> blockResponseCode;

    /**
     * @return (Updatable) The response status code returned when a request is blocked. If unspecified, defaults to `503`. The list of available response codes: `400`, `401`, `403`, `404`, `405`, `408`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `422`, `494`, `495`, `496`, `497`, `499`, `500`, `501`, `502`, `503`, `504`, `507`.
     * 
     */
    public Optional<Output<Integer>> blockResponseCode() {
        return Optional.ofNullable(this.blockResponseCode);
    }

    /**
     * (Updatable) Enables or disables the address rate limiting Web Application Firewall feature.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Enables or disables the address rate limiting Web Application Firewall feature.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     * 
     */
    @Import(name="maxDelayedCountPerAddress")
    private @Nullable Output<Integer> maxDelayedCountPerAddress;

    /**
     * @return (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     * 
     */
    public Optional<Output<Integer>> maxDelayedCountPerAddress() {
        return Optional.ofNullable(this.maxDelayedCountPerAddress);
    }

    private PolicyWafConfigAddressRateLimitingArgs() {}

    private PolicyWafConfigAddressRateLimitingArgs(PolicyWafConfigAddressRateLimitingArgs $) {
        this.allowedRatePerAddress = $.allowedRatePerAddress;
        this.blockResponseCode = $.blockResponseCode;
        this.isEnabled = $.isEnabled;
        this.maxDelayedCountPerAddress = $.maxDelayedCountPerAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyWafConfigAddressRateLimitingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyWafConfigAddressRateLimitingArgs $;

        public Builder() {
            $ = new PolicyWafConfigAddressRateLimitingArgs();
        }

        public Builder(PolicyWafConfigAddressRateLimitingArgs defaults) {
            $ = new PolicyWafConfigAddressRateLimitingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedRatePerAddress (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder allowedRatePerAddress(@Nullable Output<Integer> allowedRatePerAddress) {
            $.allowedRatePerAddress = allowedRatePerAddress;
            return this;
        }

        /**
         * @param allowedRatePerAddress (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder allowedRatePerAddress(Integer allowedRatePerAddress) {
            return allowedRatePerAddress(Output.of(allowedRatePerAddress));
        }

        /**
         * @param blockResponseCode (Updatable) The response status code returned when a request is blocked. If unspecified, defaults to `503`. The list of available response codes: `400`, `401`, `403`, `404`, `405`, `408`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `422`, `494`, `495`, `496`, `497`, `499`, `500`, `501`, `502`, `503`, `504`, `507`.
         * 
         * @return builder
         * 
         */
        public Builder blockResponseCode(@Nullable Output<Integer> blockResponseCode) {
            $.blockResponseCode = blockResponseCode;
            return this;
        }

        /**
         * @param blockResponseCode (Updatable) The response status code returned when a request is blocked. If unspecified, defaults to `503`. The list of available response codes: `400`, `401`, `403`, `404`, `405`, `408`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `422`, `494`, `495`, `496`, `497`, `499`, `500`, `501`, `502`, `503`, `504`, `507`.
         * 
         * @return builder
         * 
         */
        public Builder blockResponseCode(Integer blockResponseCode) {
            return blockResponseCode(Output.of(blockResponseCode));
        }

        /**
         * @param isEnabled (Updatable) Enables or disables the address rate limiting Web Application Firewall feature.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled (Updatable) Enables or disables the address rate limiting Web Application Firewall feature.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param maxDelayedCountPerAddress (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder maxDelayedCountPerAddress(@Nullable Output<Integer> maxDelayedCountPerAddress) {
            $.maxDelayedCountPerAddress = maxDelayedCountPerAddress;
            return this;
        }

        /**
         * @param maxDelayedCountPerAddress (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder maxDelayedCountPerAddress(Integer maxDelayedCountPerAddress) {
            return maxDelayedCountPerAddress(Output.of(maxDelayedCountPerAddress));
        }

        public PolicyWafConfigAddressRateLimitingArgs build() {
            if ($.isEnabled == null) {
                throw new MissingRequiredPropertyException("PolicyWafConfigAddressRateLimitingArgs", "isEnabled");
            }
            return $;
        }
    }

}
