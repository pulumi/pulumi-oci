// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PolicyWafConfigCachingRuleCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyWafConfigCachingRuleCriteriaArgs Empty = new PolicyWafConfigCachingRuleCriteriaArgs();

    /**
     * (Updatable) The condition of the caching rule criteria.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * 
     * URLs must start with a `/`. URLs can&#39;t contain restricted double slashes `//`. URLs can&#39;t contain the restricted `&#39;` `&amp;` `?` symbols. Resources to cache can only be specified by a URL, any query parameters are ignored.
     * 
     */
    @Import(name="condition", required=true)
    private Output<String> condition;

    /**
     * @return (Updatable) The condition of the caching rule criteria.
     * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field.
     * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field.
     * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
     * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
     * 
     * URLs must start with a `/`. URLs can&#39;t contain restricted double slashes `//`. URLs can&#39;t contain the restricted `&#39;` `&amp;` `?` symbols. Resources to cache can only be specified by a URL, any query parameters are ignored.
     * 
     */
    public Output<String> condition() {
        return this.condition;
    }

    /**
     * (Updatable) The value of the caching rule criteria.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) The value of the caching rule criteria.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private PolicyWafConfigCachingRuleCriteriaArgs() {}

    private PolicyWafConfigCachingRuleCriteriaArgs(PolicyWafConfigCachingRuleCriteriaArgs $) {
        this.condition = $.condition;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyWafConfigCachingRuleCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyWafConfigCachingRuleCriteriaArgs $;

        public Builder() {
            $ = new PolicyWafConfigCachingRuleCriteriaArgs();
        }

        public Builder(PolicyWafConfigCachingRuleCriteriaArgs defaults) {
            $ = new PolicyWafConfigCachingRuleCriteriaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param condition (Updatable) The condition of the caching rule criteria.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * 
         * URLs must start with a `/`. URLs can&#39;t contain restricted double slashes `//`. URLs can&#39;t contain the restricted `&#39;` `&amp;` `?` symbols. Resources to cache can only be specified by a URL, any query parameters are ignored.
         * 
         * @return builder
         * 
         */
        public Builder condition(Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition (Updatable) The condition of the caching rule criteria.
         * * **URL_IS:** Matches if the concatenation of request URL path and query is identical to the contents of the `value` field.
         * * **URL_STARTS_WITH:** Matches if the concatenation of request URL path and query starts with the contents of the `value` field.
         * * **URL_PART_ENDS_WITH:** Matches if the concatenation of request URL path and query ends with the contents of the `value` field.
         * * **URL_PART_CONTAINS:** Matches if the concatenation of request URL path and query contains the contents of the `value` field.
         * 
         * URLs must start with a `/`. URLs can&#39;t contain restricted double slashes `//`. URLs can&#39;t contain the restricted `&#39;` `&amp;` `?` symbols. Resources to cache can only be specified by a URL, any query parameters are ignored.
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param value (Updatable) The value of the caching rule criteria.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) The value of the caching rule criteria.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public PolicyWafConfigCachingRuleCriteriaArgs build() {
            if ($.condition == null) {
                throw new MissingRequiredPropertyException("PolicyWafConfigCachingRuleCriteriaArgs", "condition");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("PolicyWafConfigCachingRuleCriteriaArgs", "value");
            }
            return $;
        }
    }

}
