// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Waas.outputs.GetCertificateExtension;
import com.pulumi.oci.Waas.outputs.GetCertificateIssuerName;
import com.pulumi.oci.Waas.outputs.GetCertificatePublicKeyInfo;
import com.pulumi.oci.Waas.outputs.GetCertificateSubjectName;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCertificateResult {
    /**
     * @return The data of the SSL certificate.
     * 
     */
    private @Nullable String certificateData;
    private String certificateId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate&#39;s compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The user-friendly name of the SSL certificate.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     * 
     */
    private @Nullable List<GetCertificateExtension> extensions;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate.
     * 
     */
    private @Nullable String id;
    /**
     * @return This indicates whether trust verification was disabled during the creation of SSL certificate. If `true` SSL certificate trust verification was disabled and this SSL certificate is most likely self-signed.
     * 
     */
    private @Nullable Boolean isTrustVerificationDisabled;
    private @Nullable String issuedBy;
    /**
     * @return The issuer of the certificate.
     * 
     */
    private @Nullable List<GetCertificateIssuerName> issuerNames;
    private @Nullable String privateKeyData;
    /**
     * @return Information about the public key and the algorithm used by the public key.
     * 
     */
    private @Nullable List<GetCertificatePublicKeyInfo> publicKeyInfos;
    /**
     * @return A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     * 
     */
    private @Nullable String serialNumber;
    /**
     * @return The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     * 
     */
    private @Nullable String signatureAlgorithm;
    /**
     * @return The current lifecycle state of the SSL certificate.
     * 
     */
    private @Nullable String state;
    /**
     * @return The entity to be secured by the certificate.
     * 
     */
    private @Nullable List<GetCertificateSubjectName> subjectNames;
    /**
     * @return The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     * 
     */
    private @Nullable String timeNotValidAfter;
    /**
     * @return The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     * 
     */
    private @Nullable String timeNotValidBefore;
    /**
     * @return The version of the encoded certificate.
     * 
     */
    private @Nullable Integer version;

    private GetCertificateResult() {}
    /**
     * @return The data of the SSL certificate.
     * 
     */
    public Optional<String> certificateData() {
        return Optional.ofNullable(this.certificateData);
    }
    public String certificateId() {
        return this.certificateId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate&#39;s compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The user-friendly name of the SSL certificate.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     * 
     */
    public List<GetCertificateExtension> extensions() {
        return this.extensions == null ? List.of() : this.extensions;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return This indicates whether trust verification was disabled during the creation of SSL certificate. If `true` SSL certificate trust verification was disabled and this SSL certificate is most likely self-signed.
     * 
     */
    public Optional<Boolean> isTrustVerificationDisabled() {
        return Optional.ofNullable(this.isTrustVerificationDisabled);
    }
    public Optional<String> issuedBy() {
        return Optional.ofNullable(this.issuedBy);
    }
    /**
     * @return The issuer of the certificate.
     * 
     */
    public List<GetCertificateIssuerName> issuerNames() {
        return this.issuerNames == null ? List.of() : this.issuerNames;
    }
    public Optional<String> privateKeyData() {
        return Optional.ofNullable(this.privateKeyData);
    }
    /**
     * @return Information about the public key and the algorithm used by the public key.
     * 
     */
    public List<GetCertificatePublicKeyInfo> publicKeyInfos() {
        return this.publicKeyInfos == null ? List.of() : this.publicKeyInfos;
    }
    /**
     * @return A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     * 
     */
    public Optional<String> serialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }
    /**
     * @return The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     * 
     */
    public Optional<String> signatureAlgorithm() {
        return Optional.ofNullable(this.signatureAlgorithm);
    }
    /**
     * @return The current lifecycle state of the SSL certificate.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The entity to be secured by the certificate.
     * 
     */
    public List<GetCertificateSubjectName> subjectNames() {
        return this.subjectNames == null ? List.of() : this.subjectNames;
    }
    /**
     * @return The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     * 
     */
    public Optional<String> timeNotValidAfter() {
        return Optional.ofNullable(this.timeNotValidAfter);
    }
    /**
     * @return The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     * 
     */
    public Optional<String> timeNotValidBefore() {
        return Optional.ofNullable(this.timeNotValidBefore);
    }
    /**
     * @return The version of the encoded certificate.
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String certificateData;
        private String certificateId;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable List<GetCertificateExtension> extensions;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isTrustVerificationDisabled;
        private @Nullable String issuedBy;
        private @Nullable List<GetCertificateIssuerName> issuerNames;
        private @Nullable String privateKeyData;
        private @Nullable List<GetCertificatePublicKeyInfo> publicKeyInfos;
        private @Nullable String serialNumber;
        private @Nullable String signatureAlgorithm;
        private @Nullable String state;
        private @Nullable List<GetCertificateSubjectName> subjectNames;
        private @Nullable String timeCreated;
        private @Nullable String timeNotValidAfter;
        private @Nullable String timeNotValidBefore;
        private @Nullable Integer version;
        public Builder() {}
        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateData = defaults.certificateData;
    	      this.certificateId = defaults.certificateId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.extensions = defaults.extensions;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isTrustVerificationDisabled = defaults.isTrustVerificationDisabled;
    	      this.issuedBy = defaults.issuedBy;
    	      this.issuerNames = defaults.issuerNames;
    	      this.privateKeyData = defaults.privateKeyData;
    	      this.publicKeyInfos = defaults.publicKeyInfos;
    	      this.serialNumber = defaults.serialNumber;
    	      this.signatureAlgorithm = defaults.signatureAlgorithm;
    	      this.state = defaults.state;
    	      this.subjectNames = defaults.subjectNames;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeNotValidAfter = defaults.timeNotValidAfter;
    	      this.timeNotValidBefore = defaults.timeNotValidBefore;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder certificateData(@Nullable String certificateData) {
            this.certificateData = certificateData;
            return this;
        }
        @CustomType.Setter
        public Builder certificateId(String certificateId) {
            this.certificateId = Objects.requireNonNull(certificateId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder extensions(@Nullable List<GetCertificateExtension> extensions) {
            this.extensions = extensions;
            return this;
        }
        public Builder extensions(GetCertificateExtension... extensions) {
            return extensions(List.of(extensions));
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isTrustVerificationDisabled(@Nullable Boolean isTrustVerificationDisabled) {
            this.isTrustVerificationDisabled = isTrustVerificationDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder issuedBy(@Nullable String issuedBy) {
            this.issuedBy = issuedBy;
            return this;
        }
        @CustomType.Setter
        public Builder issuerNames(@Nullable List<GetCertificateIssuerName> issuerNames) {
            this.issuerNames = issuerNames;
            return this;
        }
        public Builder issuerNames(GetCertificateIssuerName... issuerNames) {
            return issuerNames(List.of(issuerNames));
        }
        @CustomType.Setter
        public Builder privateKeyData(@Nullable String privateKeyData) {
            this.privateKeyData = privateKeyData;
            return this;
        }
        @CustomType.Setter
        public Builder publicKeyInfos(@Nullable List<GetCertificatePublicKeyInfo> publicKeyInfos) {
            this.publicKeyInfos = publicKeyInfos;
            return this;
        }
        public Builder publicKeyInfos(GetCertificatePublicKeyInfo... publicKeyInfos) {
            return publicKeyInfos(List.of(publicKeyInfos));
        }
        @CustomType.Setter
        public Builder serialNumber(@Nullable String serialNumber) {
            this.serialNumber = serialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder signatureAlgorithm(@Nullable String signatureAlgorithm) {
            this.signatureAlgorithm = signatureAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subjectNames(@Nullable List<GetCertificateSubjectName> subjectNames) {
            this.subjectNames = subjectNames;
            return this;
        }
        public Builder subjectNames(GetCertificateSubjectName... subjectNames) {
            return subjectNames(List.of(subjectNames));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeNotValidAfter(@Nullable String timeNotValidAfter) {
            this.timeNotValidAfter = timeNotValidAfter;
            return this;
        }
        @CustomType.Setter
        public Builder timeNotValidBefore(@Nullable String timeNotValidBefore) {
            this.timeNotValidBefore = timeNotValidBefore;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {
            this.version = version;
            return this;
        }
        public GetCertificateResult build() {
            final var o = new GetCertificateResult();
            o.certificateData = certificateData;
            o.certificateId = certificateId;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.extensions = extensions;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isTrustVerificationDisabled = isTrustVerificationDisabled;
            o.issuedBy = issuedBy;
            o.issuerNames = issuerNames;
            o.privateKeyData = privateKeyData;
            o.publicKeyInfos = publicKeyInfos;
            o.serialNumber = serialNumber;
            o.signatureAlgorithm = signatureAlgorithm;
            o.state = state;
            o.subjectNames = subjectNames;
            o.timeCreated = timeCreated;
            o.timeNotValidAfter = timeNotValidAfter;
            o.timeNotValidBefore = timeNotValidBefore;
            o.version = version;
            return o;
        }
    }
}
