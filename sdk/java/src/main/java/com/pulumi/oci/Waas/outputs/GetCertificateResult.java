// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Waas.outputs.GetCertificateExtension;
import com.pulumi.oci.Waas.outputs.GetCertificateIssuerName;
import com.pulumi.oci.Waas.outputs.GetCertificatePublicKeyInfo;
import com.pulumi.oci.Waas.outputs.GetCertificateSubjectName;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCertificateResult {
    /**
     * @return The data of the SSL certificate.
     * 
     */
    private String certificateData;
    private String certificateId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate&#39;s compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The user-friendly name of the SSL certificate.
     * 
     */
    private String displayName;
    /**
     * @return Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     * 
     */
    private List<GetCertificateExtension> extensions;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate.
     * 
     */
    private String id;
    /**
     * @return This indicates whether trust verification was disabled during the creation of SSL certificate. If `true` SSL certificate trust verification was disabled and this SSL certificate is most likely self-signed.
     * 
     */
    private Boolean isTrustVerificationDisabled;
    private String issuedBy;
    /**
     * @return The issuer of the certificate.
     * 
     */
    private List<GetCertificateIssuerName> issuerNames;
    private String privateKeyData;
    /**
     * @return Information about the public key and the algorithm used by the public key.
     * 
     */
    private List<GetCertificatePublicKeyInfo> publicKeyInfos;
    /**
     * @return A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     * 
     */
    private String serialNumber;
    /**
     * @return The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     * 
     */
    private String signatureAlgorithm;
    /**
     * @return The current lifecycle state of the SSL certificate.
     * 
     */
    private String state;
    /**
     * @return The entity to be secured by the certificate.
     * 
     */
    private List<GetCertificateSubjectName> subjectNames;
    /**
     * @return The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     * 
     */
    private String timeNotValidAfter;
    /**
     * @return The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     * 
     */
    private String timeNotValidBefore;
    /**
     * @return The version of the encoded certificate.
     * 
     */
    private Integer version;

    private GetCertificateResult() {}
    /**
     * @return The data of the SSL certificate.
     * 
     */
    public String certificateData() {
        return this.certificateData;
    }
    public String certificateId() {
        return this.certificateId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate&#39;s compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name of the SSL certificate.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     * 
     */
    public List<GetCertificateExtension> extensions() {
        return this.extensions;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SSL certificate.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return This indicates whether trust verification was disabled during the creation of SSL certificate. If `true` SSL certificate trust verification was disabled and this SSL certificate is most likely self-signed.
     * 
     */
    public Boolean isTrustVerificationDisabled() {
        return this.isTrustVerificationDisabled;
    }
    public String issuedBy() {
        return this.issuedBy;
    }
    /**
     * @return The issuer of the certificate.
     * 
     */
    public List<GetCertificateIssuerName> issuerNames() {
        return this.issuerNames;
    }
    public String privateKeyData() {
        return this.privateKeyData;
    }
    /**
     * @return Information about the public key and the algorithm used by the public key.
     * 
     */
    public List<GetCertificatePublicKeyInfo> publicKeyInfos() {
        return this.publicKeyInfos;
    }
    /**
     * @return A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     * 
     */
    public String signatureAlgorithm() {
        return this.signatureAlgorithm;
    }
    /**
     * @return The current lifecycle state of the SSL certificate.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The entity to be secured by the certificate.
     * 
     */
    public List<GetCertificateSubjectName> subjectNames() {
        return this.subjectNames;
    }
    /**
     * @return The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     * 
     */
    public String timeNotValidAfter() {
        return this.timeNotValidAfter;
    }
    /**
     * @return The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     * 
     */
    public String timeNotValidBefore() {
        return this.timeNotValidBefore;
    }
    /**
     * @return The version of the encoded certificate.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateData;
        private String certificateId;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private List<GetCertificateExtension> extensions;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isTrustVerificationDisabled;
        private String issuedBy;
        private List<GetCertificateIssuerName> issuerNames;
        private String privateKeyData;
        private List<GetCertificatePublicKeyInfo> publicKeyInfos;
        private String serialNumber;
        private String signatureAlgorithm;
        private String state;
        private List<GetCertificateSubjectName> subjectNames;
        private String timeCreated;
        private String timeNotValidAfter;
        private String timeNotValidBefore;
        private Integer version;
        public Builder() {}
        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateData = defaults.certificateData;
    	      this.certificateId = defaults.certificateId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.extensions = defaults.extensions;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isTrustVerificationDisabled = defaults.isTrustVerificationDisabled;
    	      this.issuedBy = defaults.issuedBy;
    	      this.issuerNames = defaults.issuerNames;
    	      this.privateKeyData = defaults.privateKeyData;
    	      this.publicKeyInfos = defaults.publicKeyInfos;
    	      this.serialNumber = defaults.serialNumber;
    	      this.signatureAlgorithm = defaults.signatureAlgorithm;
    	      this.state = defaults.state;
    	      this.subjectNames = defaults.subjectNames;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeNotValidAfter = defaults.timeNotValidAfter;
    	      this.timeNotValidBefore = defaults.timeNotValidBefore;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder certificateData(String certificateData) {
            this.certificateData = Objects.requireNonNull(certificateData);
            return this;
        }
        @CustomType.Setter
        public Builder certificateId(String certificateId) {
            this.certificateId = Objects.requireNonNull(certificateId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder extensions(List<GetCertificateExtension> extensions) {
            this.extensions = Objects.requireNonNull(extensions);
            return this;
        }
        public Builder extensions(GetCertificateExtension... extensions) {
            return extensions(List.of(extensions));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isTrustVerificationDisabled(Boolean isTrustVerificationDisabled) {
            this.isTrustVerificationDisabled = Objects.requireNonNull(isTrustVerificationDisabled);
            return this;
        }
        @CustomType.Setter
        public Builder issuedBy(String issuedBy) {
            this.issuedBy = Objects.requireNonNull(issuedBy);
            return this;
        }
        @CustomType.Setter
        public Builder issuerNames(List<GetCertificateIssuerName> issuerNames) {
            this.issuerNames = Objects.requireNonNull(issuerNames);
            return this;
        }
        public Builder issuerNames(GetCertificateIssuerName... issuerNames) {
            return issuerNames(List.of(issuerNames));
        }
        @CustomType.Setter
        public Builder privateKeyData(String privateKeyData) {
            this.privateKeyData = Objects.requireNonNull(privateKeyData);
            return this;
        }
        @CustomType.Setter
        public Builder publicKeyInfos(List<GetCertificatePublicKeyInfo> publicKeyInfos) {
            this.publicKeyInfos = Objects.requireNonNull(publicKeyInfos);
            return this;
        }
        public Builder publicKeyInfos(GetCertificatePublicKeyInfo... publicKeyInfos) {
            return publicKeyInfos(List.of(publicKeyInfos));
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        @CustomType.Setter
        public Builder signatureAlgorithm(String signatureAlgorithm) {
            this.signatureAlgorithm = Objects.requireNonNull(signatureAlgorithm);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subjectNames(List<GetCertificateSubjectName> subjectNames) {
            this.subjectNames = Objects.requireNonNull(subjectNames);
            return this;
        }
        public Builder subjectNames(GetCertificateSubjectName... subjectNames) {
            return subjectNames(List.of(subjectNames));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeNotValidAfter(String timeNotValidAfter) {
            this.timeNotValidAfter = Objects.requireNonNull(timeNotValidAfter);
            return this;
        }
        @CustomType.Setter
        public Builder timeNotValidBefore(String timeNotValidBefore) {
            this.timeNotValidBefore = Objects.requireNonNull(timeNotValidBefore);
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetCertificateResult build() {
            final var _resultValue = new GetCertificateResult();
            _resultValue.certificateData = certificateData;
            _resultValue.certificateId = certificateId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.extensions = extensions;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isTrustVerificationDisabled = isTrustVerificationDisabled;
            _resultValue.issuedBy = issuedBy;
            _resultValue.issuerNames = issuerNames;
            _resultValue.privateKeyData = privateKeyData;
            _resultValue.publicKeyInfos = publicKeyInfos;
            _resultValue.serialNumber = serialNumber;
            _resultValue.signatureAlgorithm = signatureAlgorithm;
            _resultValue.state = state;
            _resultValue.subjectNames = subjectNames;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeNotValidAfter = timeNotValidAfter;
            _resultValue.timeNotValidBefore = timeNotValidBefore;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
