// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Waas.outputs.GetHttpRedirectsHttpRedirectTarget;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetHttpRedirectsHttpRedirect {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The domain from which traffic will be redirected.
     * 
     */
    private String domain;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirect.
     * 
     */
    private String id;
    /**
     * @return The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
     * 
     */
    private Integer responseCode;
    /**
     * @return The current lifecycle state of the HTTP Redirect.
     * 
     */
    private String state;
    /**
     * @return The redirect target object including all the redirect data.
     * 
     */
    private List<GetHttpRedirectsHttpRedirectTarget> targets;
    /**
     * @return The date and time the policy was created, expressed in RFC 3339 timestamp format.
     * 
     */
    private String timeCreated;

    private GetHttpRedirectsHttpRedirect() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment. This number is generated when the compartment is created.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name of the HTTP Redirect. The name can be changed and does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The domain from which traffic will be redirected.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirect.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The response code returned for the redirect to the client. For more information, see [RFC 7231](https://tools.ietf.org/html/rfc7231#section-6.4).
     * 
     */
    public Integer responseCode() {
        return this.responseCode;
    }
    /**
     * @return The current lifecycle state of the HTTP Redirect.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The redirect target object including all the redirect data.
     * 
     */
    public List<GetHttpRedirectsHttpRedirectTarget> targets() {
        return this.targets;
    }
    /**
     * @return The date and time the policy was created, expressed in RFC 3339 timestamp format.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHttpRedirectsHttpRedirect defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private String domain;
        private Map<String,Object> freeformTags;
        private String id;
        private Integer responseCode;
        private String state;
        private List<GetHttpRedirectsHttpRedirectTarget> targets;
        private String timeCreated;
        public Builder() {}
        public Builder(GetHttpRedirectsHttpRedirect defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.domain = defaults.domain;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.responseCode = defaults.responseCode;
    	      this.state = defaults.state;
    	      this.targets = defaults.targets;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder responseCode(Integer responseCode) {
            if (responseCode == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "responseCode");
            }
            this.responseCode = responseCode;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targets(List<GetHttpRedirectsHttpRedirectTarget> targets) {
            if (targets == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "targets");
            }
            this.targets = targets;
            return this;
        }
        public Builder targets(GetHttpRedirectsHttpRedirectTarget... targets) {
            return targets(List.of(targets));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsHttpRedirect", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetHttpRedirectsHttpRedirect build() {
            final var _resultValue = new GetHttpRedirectsHttpRedirect();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.domain = domain;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.responseCode = responseCode;
            _resultValue.state = state;
            _resultValue.targets = targets;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
