// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Waas.outputs.GetHttpRedirectsFilter;
import com.pulumi.oci.Waas.outputs.GetHttpRedirectsHttpRedirect;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHttpRedirectsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirect&#39;s compartment.
     * 
     */
    private String compartmentId;
    private @Nullable List<String> displayNames;
    private @Nullable List<GetHttpRedirectsFilter> filters;
    /**
     * @return The list of http_redirects.
     * 
     */
    private List<GetHttpRedirectsHttpRedirect> httpRedirects;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable List<String> ids;
    private @Nullable List<String> states;
    private @Nullable String timeCreatedGreaterThanOrEqualTo;
    private @Nullable String timeCreatedLessThan;

    private GetHttpRedirectsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the HTTP Redirect&#39;s compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<String> displayNames() {
        return this.displayNames == null ? List.of() : this.displayNames;
    }
    public List<GetHttpRedirectsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The list of http_redirects.
     * 
     */
    public List<GetHttpRedirectsHttpRedirect> httpRedirects() {
        return this.httpRedirects;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids == null ? List.of() : this.ids;
    }
    public List<String> states() {
        return this.states == null ? List.of() : this.states;
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHttpRedirectsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<String> displayNames;
        private @Nullable List<GetHttpRedirectsFilter> filters;
        private List<GetHttpRedirectsHttpRedirect> httpRedirects;
        private String id;
        private @Nullable List<String> ids;
        private @Nullable List<String> states;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        public Builder() {}
        public Builder(GetHttpRedirectsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayNames = defaults.displayNames;
    	      this.filters = defaults.filters;
    	      this.httpRedirects = defaults.httpRedirects;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.states = defaults.states;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayNames(@Nullable List<String> displayNames) {

            this.displayNames = displayNames;
            return this;
        }
        public Builder displayNames(String... displayNames) {
            return displayNames(List.of(displayNames));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetHttpRedirectsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetHttpRedirectsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder httpRedirects(List<GetHttpRedirectsHttpRedirect> httpRedirects) {
            if (httpRedirects == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsResult", "httpRedirects");
            }
            this.httpRedirects = httpRedirects;
            return this;
        }
        public Builder httpRedirects(GetHttpRedirectsHttpRedirect... httpRedirects) {
            return httpRedirects(List.of(httpRedirects));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetHttpRedirectsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ids(@Nullable List<String> ids) {

            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder states(@Nullable List<String> states) {

            this.states = states;
            return this;
        }
        public Builder states(String... states) {
            return states(List.of(states));
        }
        @CustomType.Setter
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {

            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {

            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        public GetHttpRedirectsResult build() {
            final var _resultValue = new GetHttpRedirectsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayNames = displayNames;
            _resultValue.filters = filters;
            _resultValue.httpRedirects = httpRedirects;
            _resultValue.id = id;
            _resultValue.ids = ids;
            _resultValue.states = states;
            _resultValue.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            _resultValue.timeCreatedLessThan = timeCreatedLessThan;
            return _resultValue;
        }
    }
}
