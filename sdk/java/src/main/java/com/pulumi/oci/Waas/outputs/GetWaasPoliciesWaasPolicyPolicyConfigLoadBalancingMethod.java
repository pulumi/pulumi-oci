// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod {
    /**
     * @return The domain for which the cookie is set, defaults to WAAS policy domain.
     * 
     */
    private @Nullable String domain;
    /**
     * @return The time for which a browser should keep the cookie in seconds. Empty value will cause the cookie to expire at the end of a browser session.
     * 
     */
    private @Nullable Integer expirationTimeInSeconds;
    /**
     * @return Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
     * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
     * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
     * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client&#39;s next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
     * 
     */
    private @Nullable String method;
    /**
     * @return The unique name of the whitelist.
     * 
     */
    private @Nullable String name;

    private GetWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod() {}
    /**
     * @return The domain for which the cookie is set, defaults to WAAS policy domain.
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return The time for which a browser should keep the cookie in seconds. Empty value will cause the cookie to expire at the end of a browser session.
     * 
     */
    public Optional<Integer> expirationTimeInSeconds() {
        return Optional.ofNullable(this.expirationTimeInSeconds);
    }
    /**
     * @return Load balancing methods are algorithms used to efficiently distribute traffic among origin servers.
     * * **[IP_HASH](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/IPHashLoadBalancingMethod):** All the incoming requests from the same client IP address should go to the same content origination server. IP_HASH load balancing method uses origin weights when choosing which origin should the hash be assigned to initially.
     * * **[ROUND_ROBIN](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/RoundRobinLoadBalancingMethod):** Forwards requests sequentially to the available origin servers. The first request - to the first origin server, the second request - to the next origin server, and so on. After it sends a request to the last origin server, it starts again with the first origin server. When using weights on origins, Weighted Round Robin assigns more requests to origins with a greater weight. Over a period of time, origins will receive a number of requests in proportion to their weight.
     * * **[STICKY_COOKIE](https://www.terraform.io/iaas/api/#/en/waas/latest/datatypes/StickyCookieLoadBalancingMethod):** Adds a session cookie to the first response from the origin server and identifies the server that sent the response. The client&#39;s next request contains the cookie value, and nginx routes the request to the origin server that responded to the first request. STICKY_COOKIE load balancing method falls back to Round Robin for the first request.
     * 
     */
    public Optional<String> method() {
        return Optional.ofNullable(this.method);
    }
    /**
     * @return The unique name of the whitelist.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String domain;
        private @Nullable Integer expirationTimeInSeconds;
        private @Nullable String method;
        private @Nullable String name;
        public Builder() {}
        public Builder(GetWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.expirationTimeInSeconds = defaults.expirationTimeInSeconds;
    	      this.method = defaults.method;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder domain(@Nullable String domain) {
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder expirationTimeInSeconds(@Nullable Integer expirationTimeInSeconds) {
            this.expirationTimeInSeconds = expirationTimeInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder method(@Nullable String method) {
            this.method = method;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public GetWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod build() {
            final var o = new GetWaasPoliciesWaasPolicyPolicyConfigLoadBalancingMethod();
            o.domain = domain;
            o.expirationTimeInSeconds = expirationTimeInSeconds;
            o.method = method;
            o.name = name;
            return o;
        }
    }
}
