// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigAccessRule;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigAddressRateLimiting;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigCachingRule;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigCaptcha;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRule;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigJsChallenge;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigProtectionSetting;
import com.pulumi.oci.Waas.outputs.GetWaasPoliciesWaasPolicyWafConfigWhitelist;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWaasPoliciesWaasPolicyWafConfig {
    /**
     * @return The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigAccessRule> accessRules;
    /**
     * @return The IP address rate limiting settings used to limit the number of requests from an address.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigAddressRateLimiting> addressRateLimitings;
    /**
     * @return A list of caching rules applied to the web application.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigCachingRule> cachingRules;
    /**
     * @return A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigCaptcha> captchas;
    /**
     * @return A list of the custom protection rule OCIDs and their actions.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRule> customProtectionRules;
    /**
     * @return The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge> deviceFingerprintChallenges;
    /**
     * @return The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge> humanInteractionChallenges;
    /**
     * @return The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigJsChallenge> jsChallenges;
    /**
     * @return The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
     * 
     */
    private String origin;
    /**
     * @return The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     * 
     */
    private List<String> originGroups;
    /**
     * @return The settings to apply to protection rules.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigProtectionSetting> protectionSettings;
    /**
     * @return A list of IP addresses that bypass the Web Application Firewall.
     * 
     */
    private List<GetWaasPoliciesWaasPolicyWafConfigWhitelist> whitelists;

    private GetWaasPoliciesWaasPolicyWafConfig() {}
    /**
     * @return The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigAccessRule> accessRules() {
        return this.accessRules;
    }
    /**
     * @return The IP address rate limiting settings used to limit the number of requests from an address.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigAddressRateLimiting> addressRateLimitings() {
        return this.addressRateLimitings;
    }
    /**
     * @return A list of caching rules applied to the web application.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigCachingRule> cachingRules() {
        return this.cachingRules;
    }
    /**
     * @return A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigCaptcha> captchas() {
        return this.captchas;
    }
    /**
     * @return A list of the custom protection rule OCIDs and their actions.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRule> customProtectionRules() {
        return this.customProtectionRules;
    }
    /**
     * @return The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge> deviceFingerprintChallenges() {
        return this.deviceFingerprintChallenges;
    }
    /**
     * @return The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge> humanInteractionChallenges() {
        return this.humanInteractionChallenges;
    }
    /**
     * @return The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigJsChallenge> jsChallenges() {
        return this.jsChallenges;
    }
    /**
     * @return The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     * 
     */
    public List<String> originGroups() {
        return this.originGroups;
    }
    /**
     * @return The settings to apply to protection rules.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigProtectionSetting> protectionSettings() {
        return this.protectionSettings;
    }
    /**
     * @return A list of IP addresses that bypass the Web Application Firewall.
     * 
     */
    public List<GetWaasPoliciesWaasPolicyWafConfigWhitelist> whitelists() {
        return this.whitelists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWaasPoliciesWaasPolicyWafConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetWaasPoliciesWaasPolicyWafConfigAccessRule> accessRules;
        private List<GetWaasPoliciesWaasPolicyWafConfigAddressRateLimiting> addressRateLimitings;
        private List<GetWaasPoliciesWaasPolicyWafConfigCachingRule> cachingRules;
        private List<GetWaasPoliciesWaasPolicyWafConfigCaptcha> captchas;
        private List<GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRule> customProtectionRules;
        private List<GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge> deviceFingerprintChallenges;
        private List<GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge> humanInteractionChallenges;
        private List<GetWaasPoliciesWaasPolicyWafConfigJsChallenge> jsChallenges;
        private String origin;
        private List<String> originGroups;
        private List<GetWaasPoliciesWaasPolicyWafConfigProtectionSetting> protectionSettings;
        private List<GetWaasPoliciesWaasPolicyWafConfigWhitelist> whitelists;
        public Builder() {}
        public Builder(GetWaasPoliciesWaasPolicyWafConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessRules = defaults.accessRules;
    	      this.addressRateLimitings = defaults.addressRateLimitings;
    	      this.cachingRules = defaults.cachingRules;
    	      this.captchas = defaults.captchas;
    	      this.customProtectionRules = defaults.customProtectionRules;
    	      this.deviceFingerprintChallenges = defaults.deviceFingerprintChallenges;
    	      this.humanInteractionChallenges = defaults.humanInteractionChallenges;
    	      this.jsChallenges = defaults.jsChallenges;
    	      this.origin = defaults.origin;
    	      this.originGroups = defaults.originGroups;
    	      this.protectionSettings = defaults.protectionSettings;
    	      this.whitelists = defaults.whitelists;
        }

        @CustomType.Setter
        public Builder accessRules(List<GetWaasPoliciesWaasPolicyWafConfigAccessRule> accessRules) {
            if (accessRules == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "accessRules");
            }
            this.accessRules = accessRules;
            return this;
        }
        public Builder accessRules(GetWaasPoliciesWaasPolicyWafConfigAccessRule... accessRules) {
            return accessRules(List.of(accessRules));
        }
        @CustomType.Setter
        public Builder addressRateLimitings(List<GetWaasPoliciesWaasPolicyWafConfigAddressRateLimiting> addressRateLimitings) {
            if (addressRateLimitings == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "addressRateLimitings");
            }
            this.addressRateLimitings = addressRateLimitings;
            return this;
        }
        public Builder addressRateLimitings(GetWaasPoliciesWaasPolicyWafConfigAddressRateLimiting... addressRateLimitings) {
            return addressRateLimitings(List.of(addressRateLimitings));
        }
        @CustomType.Setter
        public Builder cachingRules(List<GetWaasPoliciesWaasPolicyWafConfigCachingRule> cachingRules) {
            if (cachingRules == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "cachingRules");
            }
            this.cachingRules = cachingRules;
            return this;
        }
        public Builder cachingRules(GetWaasPoliciesWaasPolicyWafConfigCachingRule... cachingRules) {
            return cachingRules(List.of(cachingRules));
        }
        @CustomType.Setter
        public Builder captchas(List<GetWaasPoliciesWaasPolicyWafConfigCaptcha> captchas) {
            if (captchas == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "captchas");
            }
            this.captchas = captchas;
            return this;
        }
        public Builder captchas(GetWaasPoliciesWaasPolicyWafConfigCaptcha... captchas) {
            return captchas(List.of(captchas));
        }
        @CustomType.Setter
        public Builder customProtectionRules(List<GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRule> customProtectionRules) {
            if (customProtectionRules == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "customProtectionRules");
            }
            this.customProtectionRules = customProtectionRules;
            return this;
        }
        public Builder customProtectionRules(GetWaasPoliciesWaasPolicyWafConfigCustomProtectionRule... customProtectionRules) {
            return customProtectionRules(List.of(customProtectionRules));
        }
        @CustomType.Setter
        public Builder deviceFingerprintChallenges(List<GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge> deviceFingerprintChallenges) {
            if (deviceFingerprintChallenges == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "deviceFingerprintChallenges");
            }
            this.deviceFingerprintChallenges = deviceFingerprintChallenges;
            return this;
        }
        public Builder deviceFingerprintChallenges(GetWaasPoliciesWaasPolicyWafConfigDeviceFingerprintChallenge... deviceFingerprintChallenges) {
            return deviceFingerprintChallenges(List.of(deviceFingerprintChallenges));
        }
        @CustomType.Setter
        public Builder humanInteractionChallenges(List<GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge> humanInteractionChallenges) {
            if (humanInteractionChallenges == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "humanInteractionChallenges");
            }
            this.humanInteractionChallenges = humanInteractionChallenges;
            return this;
        }
        public Builder humanInteractionChallenges(GetWaasPoliciesWaasPolicyWafConfigHumanInteractionChallenge... humanInteractionChallenges) {
            return humanInteractionChallenges(List.of(humanInteractionChallenges));
        }
        @CustomType.Setter
        public Builder jsChallenges(List<GetWaasPoliciesWaasPolicyWafConfigJsChallenge> jsChallenges) {
            if (jsChallenges == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "jsChallenges");
            }
            this.jsChallenges = jsChallenges;
            return this;
        }
        public Builder jsChallenges(GetWaasPoliciesWaasPolicyWafConfigJsChallenge... jsChallenges) {
            return jsChallenges(List.of(jsChallenges));
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "origin");
            }
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder originGroups(List<String> originGroups) {
            if (originGroups == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "originGroups");
            }
            this.originGroups = originGroups;
            return this;
        }
        public Builder originGroups(String... originGroups) {
            return originGroups(List.of(originGroups));
        }
        @CustomType.Setter
        public Builder protectionSettings(List<GetWaasPoliciesWaasPolicyWafConfigProtectionSetting> protectionSettings) {
            if (protectionSettings == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "protectionSettings");
            }
            this.protectionSettings = protectionSettings;
            return this;
        }
        public Builder protectionSettings(GetWaasPoliciesWaasPolicyWafConfigProtectionSetting... protectionSettings) {
            return protectionSettings(List.of(protectionSettings));
        }
        @CustomType.Setter
        public Builder whitelists(List<GetWaasPoliciesWaasPolicyWafConfigWhitelist> whitelists) {
            if (whitelists == null) {
              throw new MissingRequiredPropertyException("GetWaasPoliciesWaasPolicyWafConfig", "whitelists");
            }
            this.whitelists = whitelists;
            return this;
        }
        public Builder whitelists(GetWaasPoliciesWaasPolicyWafConfigWhitelist... whitelists) {
            return whitelists(List.of(whitelists));
        }
        public GetWaasPoliciesWaasPolicyWafConfig build() {
            final var _resultValue = new GetWaasPoliciesWaasPolicyWafConfig();
            _resultValue.accessRules = accessRules;
            _resultValue.addressRateLimitings = addressRateLimitings;
            _resultValue.cachingRules = cachingRules;
            _resultValue.captchas = captchas;
            _resultValue.customProtectionRules = customProtectionRules;
            _resultValue.deviceFingerprintChallenges = deviceFingerprintChallenges;
            _resultValue.humanInteractionChallenges = humanInteractionChallenges;
            _resultValue.jsChallenges = jsChallenges;
            _resultValue.origin = origin;
            _resultValue.originGroups = originGroups;
            _resultValue.protectionSettings = protectionSettings;
            _resultValue.whitelists = whitelists;
            return _resultValue;
        }
    }
}
