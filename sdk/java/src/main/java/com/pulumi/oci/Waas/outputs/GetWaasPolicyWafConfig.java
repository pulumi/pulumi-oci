// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigAccessRule;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigAddressRateLimiting;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigCachingRule;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigCaptcha;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigCustomProtectionRule;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigDeviceFingerprintChallenge;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigHumanInteractionChallenge;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigJsChallenge;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigProtectionSettings;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigWhitelist;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWaasPolicyWafConfig {
    /**
     * @return The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
     * 
     */
    private @Nullable List<GetWaasPolicyWafConfigAccessRule> accessRules;
    /**
     * @return The IP address rate limiting settings used to limit the number of requests from an address.
     * 
     */
    private @Nullable GetWaasPolicyWafConfigAddressRateLimiting addressRateLimiting;
    /**
     * @return A list of caching rules applied to the web application.
     * 
     */
    private @Nullable List<GetWaasPolicyWafConfigCachingRule> cachingRules;
    /**
     * @return A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
     * 
     */
    private @Nullable List<GetWaasPolicyWafConfigCaptcha> captchas;
    /**
     * @return A list of the custom protection rule OCIDs and their actions.
     * 
     */
    private @Nullable List<GetWaasPolicyWafConfigCustomProtectionRule> customProtectionRules;
    /**
     * @return The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
     * 
     */
    private @Nullable GetWaasPolicyWafConfigDeviceFingerprintChallenge deviceFingerprintChallenge;
    /**
     * @return The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     * 
     */
    private @Nullable GetWaasPolicyWafConfigHumanInteractionChallenge humanInteractionChallenge;
    /**
     * @return The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
     * 
     */
    private @Nullable GetWaasPolicyWafConfigJsChallenge jsChallenge;
    /**
     * @return The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
     * 
     */
    private @Nullable String origin;
    /**
     * @return The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     * 
     */
    private @Nullable List<String> originGroups;
    /**
     * @return The settings to apply to protection rules.
     * 
     */
    private @Nullable GetWaasPolicyWafConfigProtectionSettings protectionSettings;
    /**
     * @return A list of IP addresses that bypass the Web Application Firewall.
     * 
     */
    private @Nullable List<GetWaasPolicyWafConfigWhitelist> whitelists;

    private GetWaasPolicyWafConfig() {}
    /**
     * @return The access rules applied to the Web Application Firewall. Used for defining custom access policies with the combination of `ALLOW`, `DETECT`, and `BLOCK` rules, based on different criteria.
     * 
     */
    public List<GetWaasPolicyWafConfigAccessRule> accessRules() {
        return this.accessRules == null ? List.of() : this.accessRules;
    }
    /**
     * @return The IP address rate limiting settings used to limit the number of requests from an address.
     * 
     */
    public Optional<GetWaasPolicyWafConfigAddressRateLimiting> addressRateLimiting() {
        return Optional.ofNullable(this.addressRateLimiting);
    }
    /**
     * @return A list of caching rules applied to the web application.
     * 
     */
    public List<GetWaasPolicyWafConfigCachingRule> cachingRules() {
        return this.cachingRules == null ? List.of() : this.cachingRules;
    }
    /**
     * @return A list of CAPTCHA challenge settings. These are used to challenge requests with a CAPTCHA to block bots.
     * 
     */
    public List<GetWaasPolicyWafConfigCaptcha> captchas() {
        return this.captchas == null ? List.of() : this.captchas;
    }
    /**
     * @return A list of the custom protection rule OCIDs and their actions.
     * 
     */
    public List<GetWaasPolicyWafConfigCustomProtectionRule> customProtectionRules() {
        return this.customProtectionRules == null ? List.of() : this.customProtectionRules;
    }
    /**
     * @return The device fingerprint challenge settings. Used to detect unique devices based on the device fingerprint information collected in order to block bots.
     * 
     */
    public Optional<GetWaasPolicyWafConfigDeviceFingerprintChallenge> deviceFingerprintChallenge() {
        return Optional.ofNullable(this.deviceFingerprintChallenge);
    }
    /**
     * @return The human interaction challenge settings. Used to look for natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     * 
     */
    public Optional<GetWaasPolicyWafConfigHumanInteractionChallenge> humanInteractionChallenge() {
        return Optional.ofNullable(this.humanInteractionChallenge);
    }
    /**
     * @return The JavaScript challenge settings. Used to challenge requests with a JavaScript challenge and take the action if a browser has no JavaScript support in order to block bots.
     * 
     */
    public Optional<GetWaasPolicyWafConfigJsChallenge> jsChallenge() {
        return Optional.ofNullable(this.jsChallenge);
    }
    /**
     * @return The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but not on update.
     * 
     */
    public Optional<String> origin() {
        return Optional.ofNullable(this.origin);
    }
    /**
     * @return The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     * 
     */
    public List<String> originGroups() {
        return this.originGroups == null ? List.of() : this.originGroups;
    }
    /**
     * @return The settings to apply to protection rules.
     * 
     */
    public Optional<GetWaasPolicyWafConfigProtectionSettings> protectionSettings() {
        return Optional.ofNullable(this.protectionSettings);
    }
    /**
     * @return A list of IP addresses that bypass the Web Application Firewall.
     * 
     */
    public List<GetWaasPolicyWafConfigWhitelist> whitelists() {
        return this.whitelists == null ? List.of() : this.whitelists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWaasPolicyWafConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetWaasPolicyWafConfigAccessRule> accessRules;
        private @Nullable GetWaasPolicyWafConfigAddressRateLimiting addressRateLimiting;
        private @Nullable List<GetWaasPolicyWafConfigCachingRule> cachingRules;
        private @Nullable List<GetWaasPolicyWafConfigCaptcha> captchas;
        private @Nullable List<GetWaasPolicyWafConfigCustomProtectionRule> customProtectionRules;
        private @Nullable GetWaasPolicyWafConfigDeviceFingerprintChallenge deviceFingerprintChallenge;
        private @Nullable GetWaasPolicyWafConfigHumanInteractionChallenge humanInteractionChallenge;
        private @Nullable GetWaasPolicyWafConfigJsChallenge jsChallenge;
        private @Nullable String origin;
        private @Nullable List<String> originGroups;
        private @Nullable GetWaasPolicyWafConfigProtectionSettings protectionSettings;
        private @Nullable List<GetWaasPolicyWafConfigWhitelist> whitelists;
        public Builder() {}
        public Builder(GetWaasPolicyWafConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessRules = defaults.accessRules;
    	      this.addressRateLimiting = defaults.addressRateLimiting;
    	      this.cachingRules = defaults.cachingRules;
    	      this.captchas = defaults.captchas;
    	      this.customProtectionRules = defaults.customProtectionRules;
    	      this.deviceFingerprintChallenge = defaults.deviceFingerprintChallenge;
    	      this.humanInteractionChallenge = defaults.humanInteractionChallenge;
    	      this.jsChallenge = defaults.jsChallenge;
    	      this.origin = defaults.origin;
    	      this.originGroups = defaults.originGroups;
    	      this.protectionSettings = defaults.protectionSettings;
    	      this.whitelists = defaults.whitelists;
        }

        @CustomType.Setter
        public Builder accessRules(@Nullable List<GetWaasPolicyWafConfigAccessRule> accessRules) {
            this.accessRules = accessRules;
            return this;
        }
        public Builder accessRules(GetWaasPolicyWafConfigAccessRule... accessRules) {
            return accessRules(List.of(accessRules));
        }
        @CustomType.Setter
        public Builder addressRateLimiting(@Nullable GetWaasPolicyWafConfigAddressRateLimiting addressRateLimiting) {
            this.addressRateLimiting = addressRateLimiting;
            return this;
        }
        @CustomType.Setter
        public Builder cachingRules(@Nullable List<GetWaasPolicyWafConfigCachingRule> cachingRules) {
            this.cachingRules = cachingRules;
            return this;
        }
        public Builder cachingRules(GetWaasPolicyWafConfigCachingRule... cachingRules) {
            return cachingRules(List.of(cachingRules));
        }
        @CustomType.Setter
        public Builder captchas(@Nullable List<GetWaasPolicyWafConfigCaptcha> captchas) {
            this.captchas = captchas;
            return this;
        }
        public Builder captchas(GetWaasPolicyWafConfigCaptcha... captchas) {
            return captchas(List.of(captchas));
        }
        @CustomType.Setter
        public Builder customProtectionRules(@Nullable List<GetWaasPolicyWafConfigCustomProtectionRule> customProtectionRules) {
            this.customProtectionRules = customProtectionRules;
            return this;
        }
        public Builder customProtectionRules(GetWaasPolicyWafConfigCustomProtectionRule... customProtectionRules) {
            return customProtectionRules(List.of(customProtectionRules));
        }
        @CustomType.Setter
        public Builder deviceFingerprintChallenge(@Nullable GetWaasPolicyWafConfigDeviceFingerprintChallenge deviceFingerprintChallenge) {
            this.deviceFingerprintChallenge = deviceFingerprintChallenge;
            return this;
        }
        @CustomType.Setter
        public Builder humanInteractionChallenge(@Nullable GetWaasPolicyWafConfigHumanInteractionChallenge humanInteractionChallenge) {
            this.humanInteractionChallenge = humanInteractionChallenge;
            return this;
        }
        @CustomType.Setter
        public Builder jsChallenge(@Nullable GetWaasPolicyWafConfigJsChallenge jsChallenge) {
            this.jsChallenge = jsChallenge;
            return this;
        }
        @CustomType.Setter
        public Builder origin(@Nullable String origin) {
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder originGroups(@Nullable List<String> originGroups) {
            this.originGroups = originGroups;
            return this;
        }
        public Builder originGroups(String... originGroups) {
            return originGroups(List.of(originGroups));
        }
        @CustomType.Setter
        public Builder protectionSettings(@Nullable GetWaasPolicyWafConfigProtectionSettings protectionSettings) {
            this.protectionSettings = protectionSettings;
            return this;
        }
        @CustomType.Setter
        public Builder whitelists(@Nullable List<GetWaasPolicyWafConfigWhitelist> whitelists) {
            this.whitelists = whitelists;
            return this;
        }
        public Builder whitelists(GetWaasPolicyWafConfigWhitelist... whitelists) {
            return whitelists(List.of(whitelists));
        }
        public GetWaasPolicyWafConfig build() {
            final var o = new GetWaasPolicyWafConfig();
            o.accessRules = accessRules;
            o.addressRateLimiting = addressRateLimiting;
            o.cachingRules = cachingRules;
            o.captchas = captchas;
            o.customProtectionRules = customProtectionRules;
            o.deviceFingerprintChallenge = deviceFingerprintChallenge;
            o.humanInteractionChallenge = humanInteractionChallenge;
            o.jsChallenge = jsChallenge;
            o.origin = origin;
            o.originGroups = originGroups;
            o.protectionSettings = protectionSettings;
            o.whitelists = whitelists;
            return o;
        }
    }
}
