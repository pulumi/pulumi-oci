// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWaasPolicyWafConfigDeviceFingerprintChallenge {
    /**
     * @return The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    private @Nullable String action;
    /**
     * @return The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    private @Nullable Integer actionExpirationInSeconds;
    /**
     * @return The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    private @Nullable GetWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings challengeSettings;
    /**
     * @return The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    private @Nullable Integer failureThreshold;
    /**
     * @return The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     * 
     */
    private @Nullable Integer failureThresholdExpirationInSeconds;
    /**
     * @return Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The maximum number of IP addresses permitted with the same device fingerprint. If unspecified, defaults to `20`.
     * 
     */
    private @Nullable Integer maxAddressCount;
    /**
     * @return The number of seconds before the maximum addresses count resets. If unspecified, defaults to `60`.
     * 
     */
    private @Nullable Integer maxAddressCountExpirationInSeconds;

    private GetWaasPolicyWafConfigDeviceFingerprintChallenge() {}
    /**
     * @return The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    public Optional<Integer> actionExpirationInSeconds() {
        return Optional.ofNullable(this.actionExpirationInSeconds);
    }
    /**
     * @return The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    public Optional<GetWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings> challengeSettings() {
        return Optional.ofNullable(this.challengeSettings);
    }
    /**
     * @return The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    public Optional<Integer> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }
    /**
     * @return The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     * 
     */
    public Optional<Integer> failureThresholdExpirationInSeconds() {
        return Optional.ofNullable(this.failureThresholdExpirationInSeconds);
    }
    /**
     * @return Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The maximum number of IP addresses permitted with the same device fingerprint. If unspecified, defaults to `20`.
     * 
     */
    public Optional<Integer> maxAddressCount() {
        return Optional.ofNullable(this.maxAddressCount);
    }
    /**
     * @return The number of seconds before the maximum addresses count resets. If unspecified, defaults to `60`.
     * 
     */
    public Optional<Integer> maxAddressCountExpirationInSeconds() {
        return Optional.ofNullable(this.maxAddressCountExpirationInSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWaasPolicyWafConfigDeviceFingerprintChallenge defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable Integer actionExpirationInSeconds;
        private @Nullable GetWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings challengeSettings;
        private @Nullable Integer failureThreshold;
        private @Nullable Integer failureThresholdExpirationInSeconds;
        private Boolean isEnabled;
        private @Nullable Integer maxAddressCount;
        private @Nullable Integer maxAddressCountExpirationInSeconds;
        public Builder() {}
        public Builder(GetWaasPolicyWafConfigDeviceFingerprintChallenge defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.actionExpirationInSeconds = defaults.actionExpirationInSeconds;
    	      this.challengeSettings = defaults.challengeSettings;
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.failureThresholdExpirationInSeconds = defaults.failureThresholdExpirationInSeconds;
    	      this.isEnabled = defaults.isEnabled;
    	      this.maxAddressCount = defaults.maxAddressCount;
    	      this.maxAddressCountExpirationInSeconds = defaults.maxAddressCountExpirationInSeconds;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder actionExpirationInSeconds(@Nullable Integer actionExpirationInSeconds) {
            this.actionExpirationInSeconds = actionExpirationInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder challengeSettings(@Nullable GetWaasPolicyWafConfigDeviceFingerprintChallengeChallengeSettings challengeSettings) {
            this.challengeSettings = challengeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder failureThreshold(@Nullable Integer failureThreshold) {
            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder failureThresholdExpirationInSeconds(@Nullable Integer failureThresholdExpirationInSeconds) {
            this.failureThresholdExpirationInSeconds = failureThresholdExpirationInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder maxAddressCount(@Nullable Integer maxAddressCount) {
            this.maxAddressCount = maxAddressCount;
            return this;
        }
        @CustomType.Setter
        public Builder maxAddressCountExpirationInSeconds(@Nullable Integer maxAddressCountExpirationInSeconds) {
            this.maxAddressCountExpirationInSeconds = maxAddressCountExpirationInSeconds;
            return this;
        }
        public GetWaasPolicyWafConfigDeviceFingerprintChallenge build() {
            final var o = new GetWaasPolicyWafConfigDeviceFingerprintChallenge();
            o.action = action;
            o.actionExpirationInSeconds = actionExpirationInSeconds;
            o.challengeSettings = challengeSettings;
            o.failureThreshold = failureThreshold;
            o.failureThresholdExpirationInSeconds = failureThresholdExpirationInSeconds;
            o.isEnabled = isEnabled;
            o.maxAddressCount = maxAddressCount;
            o.maxAddressCountExpirationInSeconds = maxAddressCountExpirationInSeconds;
            return o;
        }
    }
}
