// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings;
import com.pulumi.oci.Waas.outputs.GetWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWaasPolicyWafConfigHumanInteractionChallenge {
    /**
     * @return The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    private String action;
    /**
     * @return The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    private Integer actionExpirationInSeconds;
    /**
     * @return The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    private GetWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings challengeSettings;
    /**
     * @return The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    private Integer failureThreshold;
    /**
     * @return The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     * 
     */
    private Integer failureThresholdExpirationInSeconds;
    /**
     * @return The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     * 
     */
    private Integer interactionThreshold;
    /**
     * @return Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     * 
     */
    private Boolean isNatEnabled;
    /**
     * @return The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     * 
     */
    private Integer recordingPeriodInSeconds;
    /**
     * @return Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     * 
     */
    private GetWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader setHttpHeader;

    private GetWaasPolicyWafConfigHumanInteractionChallenge() {}
    /**
     * @return The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    public Integer actionExpirationInSeconds() {
        return this.actionExpirationInSeconds;
    }
    /**
     * @return The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    public GetWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings challengeSettings() {
        return this.challengeSettings;
    }
    /**
     * @return The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    public Integer failureThreshold() {
        return this.failureThreshold;
    }
    /**
     * @return The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     * 
     */
    public Integer failureThresholdExpirationInSeconds() {
        return this.failureThresholdExpirationInSeconds;
    }
    /**
     * @return The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     * 
     */
    public Integer interactionThreshold() {
        return this.interactionThreshold;
    }
    /**
     * @return Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     * 
     */
    public Boolean isNatEnabled() {
        return this.isNatEnabled;
    }
    /**
     * @return The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     * 
     */
    public Integer recordingPeriodInSeconds() {
        return this.recordingPeriodInSeconds;
    }
    /**
     * @return Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     * 
     */
    public GetWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader setHttpHeader() {
        return this.setHttpHeader;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWaasPolicyWafConfigHumanInteractionChallenge defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private Integer actionExpirationInSeconds;
        private GetWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings challengeSettings;
        private Integer failureThreshold;
        private Integer failureThresholdExpirationInSeconds;
        private Integer interactionThreshold;
        private Boolean isEnabled;
        private Boolean isNatEnabled;
        private Integer recordingPeriodInSeconds;
        private GetWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader setHttpHeader;
        public Builder() {}
        public Builder(GetWaasPolicyWafConfigHumanInteractionChallenge defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.actionExpirationInSeconds = defaults.actionExpirationInSeconds;
    	      this.challengeSettings = defaults.challengeSettings;
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.failureThresholdExpirationInSeconds = defaults.failureThresholdExpirationInSeconds;
    	      this.interactionThreshold = defaults.interactionThreshold;
    	      this.isEnabled = defaults.isEnabled;
    	      this.isNatEnabled = defaults.isNatEnabled;
    	      this.recordingPeriodInSeconds = defaults.recordingPeriodInSeconds;
    	      this.setHttpHeader = defaults.setHttpHeader;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder actionExpirationInSeconds(Integer actionExpirationInSeconds) {
            if (actionExpirationInSeconds == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "actionExpirationInSeconds");
            }
            this.actionExpirationInSeconds = actionExpirationInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder challengeSettings(GetWaasPolicyWafConfigHumanInteractionChallengeChallengeSettings challengeSettings) {
            if (challengeSettings == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "challengeSettings");
            }
            this.challengeSettings = challengeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder failureThreshold(Integer failureThreshold) {
            if (failureThreshold == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "failureThreshold");
            }
            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder failureThresholdExpirationInSeconds(Integer failureThresholdExpirationInSeconds) {
            if (failureThresholdExpirationInSeconds == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "failureThresholdExpirationInSeconds");
            }
            this.failureThresholdExpirationInSeconds = failureThresholdExpirationInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder interactionThreshold(Integer interactionThreshold) {
            if (interactionThreshold == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "interactionThreshold");
            }
            this.interactionThreshold = interactionThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isNatEnabled(Boolean isNatEnabled) {
            if (isNatEnabled == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "isNatEnabled");
            }
            this.isNatEnabled = isNatEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder recordingPeriodInSeconds(Integer recordingPeriodInSeconds) {
            if (recordingPeriodInSeconds == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "recordingPeriodInSeconds");
            }
            this.recordingPeriodInSeconds = recordingPeriodInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder setHttpHeader(GetWaasPolicyWafConfigHumanInteractionChallengeSetHttpHeader setHttpHeader) {
            if (setHttpHeader == null) {
              throw new MissingRequiredPropertyException("GetWaasPolicyWafConfigHumanInteractionChallenge", "setHttpHeader");
            }
            this.setHttpHeader = setHttpHeader;
            return this;
        }
        public GetWaasPolicyWafConfigHumanInteractionChallenge build() {
            final var _resultValue = new GetWaasPolicyWafConfigHumanInteractionChallenge();
            _resultValue.action = action;
            _resultValue.actionExpirationInSeconds = actionExpirationInSeconds;
            _resultValue.challengeSettings = challengeSettings;
            _resultValue.failureThreshold = failureThreshold;
            _resultValue.failureThresholdExpirationInSeconds = failureThresholdExpirationInSeconds;
            _resultValue.interactionThreshold = interactionThreshold;
            _resultValue.isEnabled = isEnabled;
            _resultValue.isNatEnabled = isNatEnabled;
            _resultValue.recordingPeriodInSeconds = recordingPeriodInSeconds;
            _resultValue.setHttpHeader = setHttpHeader;
            return _resultValue;
        }
    }
}
