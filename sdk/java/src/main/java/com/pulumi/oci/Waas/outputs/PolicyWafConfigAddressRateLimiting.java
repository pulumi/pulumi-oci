// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PolicyWafConfigAddressRateLimiting {
    /**
     * @return (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     * 
     */
    private @Nullable Integer allowedRatePerAddress;
    /**
     * @return (Updatable) The response status code returned when a request is blocked. If unspecified, defaults to `503`. The list of available response codes: `400`, `401`, `403`, `404`, `405`, `408`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `422`, `494`, `495`, `496`, `497`, `499`, `500`, `501`, `502`, `503`, `504`, `507`.
     * 
     */
    private @Nullable Integer blockResponseCode;
    /**
     * @return (Updatable) Enables or disables the address rate limiting Web Application Firewall feature.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     * 
     */
    private @Nullable Integer maxDelayedCountPerAddress;

    private PolicyWafConfigAddressRateLimiting() {}
    /**
     * @return (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     * 
     */
    public Optional<Integer> allowedRatePerAddress() {
        return Optional.ofNullable(this.allowedRatePerAddress);
    }
    /**
     * @return (Updatable) The response status code returned when a request is blocked. If unspecified, defaults to `503`. The list of available response codes: `400`, `401`, `403`, `404`, `405`, `408`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `422`, `494`, `495`, `496`, `497`, `499`, `500`, `501`, `502`, `503`, `504`, `507`.
     * 
     */
    public Optional<Integer> blockResponseCode() {
        return Optional.ofNullable(this.blockResponseCode);
    }
    /**
     * @return (Updatable) Enables or disables the address rate limiting Web Application Firewall feature.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     * 
     */
    public Optional<Integer> maxDelayedCountPerAddress() {
        return Optional.ofNullable(this.maxDelayedCountPerAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyWafConfigAddressRateLimiting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer allowedRatePerAddress;
        private @Nullable Integer blockResponseCode;
        private Boolean isEnabled;
        private @Nullable Integer maxDelayedCountPerAddress;
        public Builder() {}
        public Builder(PolicyWafConfigAddressRateLimiting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedRatePerAddress = defaults.allowedRatePerAddress;
    	      this.blockResponseCode = defaults.blockResponseCode;
    	      this.isEnabled = defaults.isEnabled;
    	      this.maxDelayedCountPerAddress = defaults.maxDelayedCountPerAddress;
        }

        @CustomType.Setter
        public Builder allowedRatePerAddress(@Nullable Integer allowedRatePerAddress) {

            this.allowedRatePerAddress = allowedRatePerAddress;
            return this;
        }
        @CustomType.Setter
        public Builder blockResponseCode(@Nullable Integer blockResponseCode) {

            this.blockResponseCode = blockResponseCode;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("PolicyWafConfigAddressRateLimiting", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxDelayedCountPerAddress(@Nullable Integer maxDelayedCountPerAddress) {

            this.maxDelayedCountPerAddress = maxDelayedCountPerAddress;
            return this;
        }
        public PolicyWafConfigAddressRateLimiting build() {
            final var _resultValue = new PolicyWafConfigAddressRateLimiting();
            _resultValue.allowedRatePerAddress = allowedRatePerAddress;
            _resultValue.blockResponseCode = blockResponseCode;
            _resultValue.isEnabled = isEnabled;
            _resultValue.maxDelayedCountPerAddress = maxDelayedCountPerAddress;
            return _resultValue;
        }
    }
}
