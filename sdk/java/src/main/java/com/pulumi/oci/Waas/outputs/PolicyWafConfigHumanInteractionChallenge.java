// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigHumanInteractionChallengeChallengeSettings;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigHumanInteractionChallengeSetHttpHeader;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PolicyWafConfigHumanInteractionChallenge {
    /**
     * @return (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    private @Nullable String action;
    /**
     * @return (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    private @Nullable Integer actionExpirationInSeconds;
    /**
     * @return (Updatable) The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    private @Nullable PolicyWafConfigHumanInteractionChallengeChallengeSettings challengeSettings;
    /**
     * @return (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    private @Nullable Integer failureThreshold;
    /**
     * @return (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     * 
     */
    private @Nullable Integer failureThresholdExpirationInSeconds;
    /**
     * @return (Updatable) The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     * 
     */
    private @Nullable Integer interactionThreshold;
    /**
     * @return (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     * 
     */
    private @Nullable Boolean isNatEnabled;
    /**
     * @return (Updatable) The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     * 
     */
    private @Nullable Integer recordingPeriodInSeconds;
    /**
     * @return (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     * 
     */
    private @Nullable PolicyWafConfigHumanInteractionChallengeSetHttpHeader setHttpHeader;

    private PolicyWafConfigHumanInteractionChallenge() {}
    /**
     * @return (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    public Optional<Integer> actionExpirationInSeconds() {
        return Optional.ofNullable(this.actionExpirationInSeconds);
    }
    /**
     * @return (Updatable) The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    public Optional<PolicyWafConfigHumanInteractionChallengeChallengeSettings> challengeSettings() {
        return Optional.ofNullable(this.challengeSettings);
    }
    /**
     * @return (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    public Optional<Integer> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }
    /**
     * @return (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     * 
     */
    public Optional<Integer> failureThresholdExpirationInSeconds() {
        return Optional.ofNullable(this.failureThresholdExpirationInSeconds);
    }
    /**
     * @return (Updatable) The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     * 
     */
    public Optional<Integer> interactionThreshold() {
        return Optional.ofNullable(this.interactionThreshold);
    }
    /**
     * @return (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     * 
     */
    public Optional<Boolean> isNatEnabled() {
        return Optional.ofNullable(this.isNatEnabled);
    }
    /**
     * @return (Updatable) The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     * 
     */
    public Optional<Integer> recordingPeriodInSeconds() {
        return Optional.ofNullable(this.recordingPeriodInSeconds);
    }
    /**
     * @return (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     * 
     */
    public Optional<PolicyWafConfigHumanInteractionChallengeSetHttpHeader> setHttpHeader() {
        return Optional.ofNullable(this.setHttpHeader);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyWafConfigHumanInteractionChallenge defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable Integer actionExpirationInSeconds;
        private @Nullable PolicyWafConfigHumanInteractionChallengeChallengeSettings challengeSettings;
        private @Nullable Integer failureThreshold;
        private @Nullable Integer failureThresholdExpirationInSeconds;
        private @Nullable Integer interactionThreshold;
        private Boolean isEnabled;
        private @Nullable Boolean isNatEnabled;
        private @Nullable Integer recordingPeriodInSeconds;
        private @Nullable PolicyWafConfigHumanInteractionChallengeSetHttpHeader setHttpHeader;
        public Builder() {}
        public Builder(PolicyWafConfigHumanInteractionChallenge defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.actionExpirationInSeconds = defaults.actionExpirationInSeconds;
    	      this.challengeSettings = defaults.challengeSettings;
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.failureThresholdExpirationInSeconds = defaults.failureThresholdExpirationInSeconds;
    	      this.interactionThreshold = defaults.interactionThreshold;
    	      this.isEnabled = defaults.isEnabled;
    	      this.isNatEnabled = defaults.isNatEnabled;
    	      this.recordingPeriodInSeconds = defaults.recordingPeriodInSeconds;
    	      this.setHttpHeader = defaults.setHttpHeader;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder actionExpirationInSeconds(@Nullable Integer actionExpirationInSeconds) {
            this.actionExpirationInSeconds = actionExpirationInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder challengeSettings(@Nullable PolicyWafConfigHumanInteractionChallengeChallengeSettings challengeSettings) {
            this.challengeSettings = challengeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder failureThreshold(@Nullable Integer failureThreshold) {
            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder failureThresholdExpirationInSeconds(@Nullable Integer failureThresholdExpirationInSeconds) {
            this.failureThresholdExpirationInSeconds = failureThresholdExpirationInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder interactionThreshold(@Nullable Integer interactionThreshold) {
            this.interactionThreshold = interactionThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isNatEnabled(@Nullable Boolean isNatEnabled) {
            this.isNatEnabled = isNatEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder recordingPeriodInSeconds(@Nullable Integer recordingPeriodInSeconds) {
            this.recordingPeriodInSeconds = recordingPeriodInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder setHttpHeader(@Nullable PolicyWafConfigHumanInteractionChallengeSetHttpHeader setHttpHeader) {
            this.setHttpHeader = setHttpHeader;
            return this;
        }
        public PolicyWafConfigHumanInteractionChallenge build() {
            final var _resultValue = new PolicyWafConfigHumanInteractionChallenge();
            _resultValue.action = action;
            _resultValue.actionExpirationInSeconds = actionExpirationInSeconds;
            _resultValue.challengeSettings = challengeSettings;
            _resultValue.failureThreshold = failureThreshold;
            _resultValue.failureThresholdExpirationInSeconds = failureThresholdExpirationInSeconds;
            _resultValue.interactionThreshold = interactionThreshold;
            _resultValue.isEnabled = isEnabled;
            _resultValue.isNatEnabled = isNatEnabled;
            _resultValue.recordingPeriodInSeconds = recordingPeriodInSeconds;
            _resultValue.setHttpHeader = setHttpHeader;
            return _resultValue;
        }
    }
}
