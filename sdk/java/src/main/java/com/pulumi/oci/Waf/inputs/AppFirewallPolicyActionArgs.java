// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Waf.inputs.AppFirewallPolicyActionBodyArgs;
import com.pulumi.oci.Waf.inputs.AppFirewallPolicyActionHeaderArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppFirewallPolicyActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppFirewallPolicyActionArgs Empty = new AppFirewallPolicyActionArgs();

    /**
     * (Updatable) Type of returned HTTP response body.
     * 
     */
    @Import(name="body")
    private @Nullable Output<AppFirewallPolicyActionBodyArgs> body;

    /**
     * @return (Updatable) Type of returned HTTP response body.
     * 
     */
    public Optional<Output<AppFirewallPolicyActionBodyArgs>> body() {
        return Optional.ofNullable(this.body);
    }

    /**
     * (Updatable) Response code.
     * 
     * The following response codes are valid values for this property:
     * * 2xx
     * 
     * 200 OK 201 Created 202 Accepted 206 Partial Content
     * * 3xx
     * 
     * 300 Multiple Choices 301 Moved Permanently 302 Found 303 See Other 307 Temporary Redirect
     * * 4xx
     * 
     * 400 Bad Request 401 Unauthorized 403 Forbidden 404 Not Found 405 Method Not Allowed 408 Request Timeout 409 Conflict 411 Length Required 412 Precondition Failed 413 Payload Too Large 414 URI Too Long 415 Unsupported Media Type 416 Range Not Satisfiable 422 Unprocessable Entity 494 Request Header Too Large 495 Cert Error 496 No Cert 497 HTTP to HTTPS
     * * 5xx
     * 
     * 500 Internal Server Error 501 Not Implemented 502 Bad Gateway 503 Service Unavailable 504 Gateway Timeout 507 Insufficient Storage
     * 
     * Example: `200`
     * 
     */
    @Import(name="code")
    private @Nullable Output<Integer> code;

    /**
     * @return (Updatable) Response code.
     * 
     * The following response codes are valid values for this property:
     * * 2xx
     * 
     * 200 OK 201 Created 202 Accepted 206 Partial Content
     * * 3xx
     * 
     * 300 Multiple Choices 301 Moved Permanently 302 Found 303 See Other 307 Temporary Redirect
     * * 4xx
     * 
     * 400 Bad Request 401 Unauthorized 403 Forbidden 404 Not Found 405 Method Not Allowed 408 Request Timeout 409 Conflict 411 Length Required 412 Precondition Failed 413 Payload Too Large 414 URI Too Long 415 Unsupported Media Type 416 Range Not Satisfiable 422 Unprocessable Entity 494 Request Header Too Large 495 Cert Error 496 No Cert 497 HTTP to HTTPS
     * * 5xx
     * 
     * 500 Internal Server Error 501 Not Implemented 502 Bad Gateway 503 Service Unavailable 504 Gateway Timeout 507 Insufficient Storage
     * 
     * Example: `200`
     * 
     */
    public Optional<Output<Integer>> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * (Updatable) Adds headers defined in this array for HTTP response.
     * 
     * Hop-by-hop headers are not allowed to be set:
     * * Connection
     * * Keep-Alive
     * * Proxy-Authenticate
     * * Proxy-Authorization
     * * TE
     * * Trailer
     * * Transfer-Encoding
     * * Upgrade
     * 
     */
    @Import(name="headers")
    private @Nullable Output<List<AppFirewallPolicyActionHeaderArgs>> headers;

    /**
     * @return (Updatable) Adds headers defined in this array for HTTP response.
     * 
     * Hop-by-hop headers are not allowed to be set:
     * * Connection
     * * Keep-Alive
     * * Proxy-Authenticate
     * * Proxy-Authorization
     * * TE
     * * Trailer
     * * Transfer-Encoding
     * * Upgrade
     * 
     */
    public Optional<Output<List<AppFirewallPolicyActionHeaderArgs>>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * (Updatable) Action name. Can be used to reference the action.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return (Updatable) Action name. Can be used to reference the action.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * (Updatable)
     * * **CHECK** is a non-terminating action that does not stop the execution of rules in current module, just emits a log message documenting result of rule execution.
     * * **ALLOW** is a non-terminating action which upon matching rule skips all remaining rules in the current module.
     * * **RETURN_HTTP_RESPONSE** is a terminating action which is executed immediately, returns a defined HTTP response.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable)
     * * **CHECK** is a non-terminating action that does not stop the execution of rules in current module, just emits a log message documenting result of rule execution.
     * * **ALLOW** is a non-terminating action which upon matching rule skips all remaining rules in the current module.
     * * **RETURN_HTTP_RESPONSE** is a terminating action which is executed immediately, returns a defined HTTP response.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AppFirewallPolicyActionArgs() {}

    private AppFirewallPolicyActionArgs(AppFirewallPolicyActionArgs $) {
        this.body = $.body;
        this.code = $.code;
        this.headers = $.headers;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppFirewallPolicyActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppFirewallPolicyActionArgs $;

        public Builder() {
            $ = new AppFirewallPolicyActionArgs();
        }

        public Builder(AppFirewallPolicyActionArgs defaults) {
            $ = new AppFirewallPolicyActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param body (Updatable) Type of returned HTTP response body.
         * 
         * @return builder
         * 
         */
        public Builder body(@Nullable Output<AppFirewallPolicyActionBodyArgs> body) {
            $.body = body;
            return this;
        }

        /**
         * @param body (Updatable) Type of returned HTTP response body.
         * 
         * @return builder
         * 
         */
        public Builder body(AppFirewallPolicyActionBodyArgs body) {
            return body(Output.of(body));
        }

        /**
         * @param code (Updatable) Response code.
         * 
         * The following response codes are valid values for this property:
         * * 2xx
         * 
         * 200 OK 201 Created 202 Accepted 206 Partial Content
         * * 3xx
         * 
         * 300 Multiple Choices 301 Moved Permanently 302 Found 303 See Other 307 Temporary Redirect
         * * 4xx
         * 
         * 400 Bad Request 401 Unauthorized 403 Forbidden 404 Not Found 405 Method Not Allowed 408 Request Timeout 409 Conflict 411 Length Required 412 Precondition Failed 413 Payload Too Large 414 URI Too Long 415 Unsupported Media Type 416 Range Not Satisfiable 422 Unprocessable Entity 494 Request Header Too Large 495 Cert Error 496 No Cert 497 HTTP to HTTPS
         * * 5xx
         * 
         * 500 Internal Server Error 501 Not Implemented 502 Bad Gateway 503 Service Unavailable 504 Gateway Timeout 507 Insufficient Storage
         * 
         * Example: `200`
         * 
         * @return builder
         * 
         */
        public Builder code(@Nullable Output<Integer> code) {
            $.code = code;
            return this;
        }

        /**
         * @param code (Updatable) Response code.
         * 
         * The following response codes are valid values for this property:
         * * 2xx
         * 
         * 200 OK 201 Created 202 Accepted 206 Partial Content
         * * 3xx
         * 
         * 300 Multiple Choices 301 Moved Permanently 302 Found 303 See Other 307 Temporary Redirect
         * * 4xx
         * 
         * 400 Bad Request 401 Unauthorized 403 Forbidden 404 Not Found 405 Method Not Allowed 408 Request Timeout 409 Conflict 411 Length Required 412 Precondition Failed 413 Payload Too Large 414 URI Too Long 415 Unsupported Media Type 416 Range Not Satisfiable 422 Unprocessable Entity 494 Request Header Too Large 495 Cert Error 496 No Cert 497 HTTP to HTTPS
         * * 5xx
         * 
         * 500 Internal Server Error 501 Not Implemented 502 Bad Gateway 503 Service Unavailable 504 Gateway Timeout 507 Insufficient Storage
         * 
         * Example: `200`
         * 
         * @return builder
         * 
         */
        public Builder code(Integer code) {
            return code(Output.of(code));
        }

        /**
         * @param headers (Updatable) Adds headers defined in this array for HTTP response.
         * 
         * Hop-by-hop headers are not allowed to be set:
         * * Connection
         * * Keep-Alive
         * * Proxy-Authenticate
         * * Proxy-Authorization
         * * TE
         * * Trailer
         * * Transfer-Encoding
         * * Upgrade
         * 
         * @return builder
         * 
         */
        public Builder headers(@Nullable Output<List<AppFirewallPolicyActionHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers (Updatable) Adds headers defined in this array for HTTP response.
         * 
         * Hop-by-hop headers are not allowed to be set:
         * * Connection
         * * Keep-Alive
         * * Proxy-Authenticate
         * * Proxy-Authorization
         * * TE
         * * Trailer
         * * Transfer-Encoding
         * * Upgrade
         * 
         * @return builder
         * 
         */
        public Builder headers(List<AppFirewallPolicyActionHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param headers (Updatable) Adds headers defined in this array for HTTP response.
         * 
         * Hop-by-hop headers are not allowed to be set:
         * * Connection
         * * Keep-Alive
         * * Proxy-Authenticate
         * * Proxy-Authorization
         * * TE
         * * Trailer
         * * Transfer-Encoding
         * * Upgrade
         * 
         * @return builder
         * 
         */
        public Builder headers(AppFirewallPolicyActionHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        /**
         * @param name (Updatable) Action name. Can be used to reference the action.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Action name. Can be used to reference the action.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type (Updatable)
         * * **CHECK** is a non-terminating action that does not stop the execution of rules in current module, just emits a log message documenting result of rule execution.
         * * **ALLOW** is a non-terminating action which upon matching rule skips all remaining rules in the current module.
         * * **RETURN_HTTP_RESPONSE** is a terminating action which is executed immediately, returns a defined HTTP response.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable)
         * * **CHECK** is a non-terminating action that does not stop the execution of rules in current module, just emits a log message documenting result of rule execution.
         * * **ALLOW** is a non-terminating action which upon matching rule skips all remaining rules in the current module.
         * * **RETURN_HTTP_RESPONSE** is a terminating action which is executed immediately, returns a defined HTTP response.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AppFirewallPolicyActionArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("AppFirewallPolicyActionArgs", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AppFirewallPolicyActionArgs", "type");
            }
            return $;
        }
    }

}
