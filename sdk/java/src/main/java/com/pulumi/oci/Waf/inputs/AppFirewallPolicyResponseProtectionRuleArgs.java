// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Waf.inputs.AppFirewallPolicyResponseProtectionRuleProtectionCapabilityArgs;
import com.pulumi.oci.Waf.inputs.AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppFirewallPolicyResponseProtectionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppFirewallPolicyResponseProtectionRuleArgs Empty = new AppFirewallPolicyResponseProtectionRuleArgs();

    /**
     * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
     * 
     */
    @Import(name="actionName", required=true)
    private Output<String> actionName;

    /**
     * @return (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
     * 
     */
    public Output<String> actionName() {
        return this.actionName;
    }

    /**
     * (Updatable) An expression that determines whether or not the rule action should be executed.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<String> condition;

    /**
     * @return (Updatable) An expression that determines whether or not the rule action should be executed.
     * 
     */
    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * (Updatable) The language used to parse condition from field `condition`. Available languages:
     * * **JMESPATH** an extended JMESPath language syntax.
     * 
     */
    @Import(name="conditionLanguage")
    private @Nullable Output<String> conditionLanguage;

    /**
     * @return (Updatable) The language used to parse condition from field `condition`. Available languages:
     * * **JMESPATH** an extended JMESPath language syntax.
     * 
     */
    public Optional<Output<String>> conditionLanguage() {
        return Optional.ofNullable(this.conditionLanguage);
    }

    /**
     * (Updatable) Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
     * 
     */
    @Import(name="isBodyInspectionEnabled")
    private @Nullable Output<Boolean> isBodyInspectionEnabled;

    /**
     * @return (Updatable) Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
     * 
     */
    public Optional<Output<Boolean>> isBodyInspectionEnabled() {
        return Optional.ofNullable(this.isBodyInspectionEnabled);
    }

    /**
     * (Updatable) Rule name. Must be unique within the module.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return (Updatable) Rule name. Must be unique within the module.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
     * 
     */
    @Import(name="protectionCapabilities", required=true)
    private Output<List<AppFirewallPolicyResponseProtectionRuleProtectionCapabilityArgs>> protectionCapabilities;

    /**
     * @return (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
     * 
     */
    public Output<List<AppFirewallPolicyResponseProtectionRuleProtectionCapabilityArgs>> protectionCapabilities() {
        return this.protectionCapabilities;
    }

    /**
     * (Updatable) Settings for protection capabilities
     * 
     */
    @Import(name="protectionCapabilitySettings")
    private @Nullable Output<AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs> protectionCapabilitySettings;

    /**
     * @return (Updatable) Settings for protection capabilities
     * 
     */
    public Optional<Output<AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs>> protectionCapabilitySettings() {
        return Optional.ofNullable(this.protectionCapabilitySettings);
    }

    /**
     * (Updatable) Type of WebAppFirewallPolicyRule.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Type of WebAppFirewallPolicyRule.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AppFirewallPolicyResponseProtectionRuleArgs() {}

    private AppFirewallPolicyResponseProtectionRuleArgs(AppFirewallPolicyResponseProtectionRuleArgs $) {
        this.actionName = $.actionName;
        this.condition = $.condition;
        this.conditionLanguage = $.conditionLanguage;
        this.isBodyInspectionEnabled = $.isBodyInspectionEnabled;
        this.name = $.name;
        this.protectionCapabilities = $.protectionCapabilities;
        this.protectionCapabilitySettings = $.protectionCapabilitySettings;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppFirewallPolicyResponseProtectionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppFirewallPolicyResponseProtectionRuleArgs $;

        public Builder() {
            $ = new AppFirewallPolicyResponseProtectionRuleArgs();
        }

        public Builder(AppFirewallPolicyResponseProtectionRuleArgs defaults) {
            $ = new AppFirewallPolicyResponseProtectionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionName (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         * 
         * @return builder
         * 
         */
        public Builder actionName(Output<String> actionName) {
            $.actionName = actionName;
            return this;
        }

        /**
         * @param actionName (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         * 
         * @return builder
         * 
         */
        public Builder actionName(String actionName) {
            return actionName(Output.of(actionName));
        }

        /**
         * @param condition (Updatable) An expression that determines whether or not the rule action should be executed.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition (Updatable) An expression that determines whether or not the rule action should be executed.
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param conditionLanguage (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         * 
         * @return builder
         * 
         */
        public Builder conditionLanguage(@Nullable Output<String> conditionLanguage) {
            $.conditionLanguage = conditionLanguage;
            return this;
        }

        /**
         * @param conditionLanguage (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         * 
         * @return builder
         * 
         */
        public Builder conditionLanguage(String conditionLanguage) {
            return conditionLanguage(Output.of(conditionLanguage));
        }

        /**
         * @param isBodyInspectionEnabled (Updatable) Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
         * 
         * @return builder
         * 
         */
        public Builder isBodyInspectionEnabled(@Nullable Output<Boolean> isBodyInspectionEnabled) {
            $.isBodyInspectionEnabled = isBodyInspectionEnabled;
            return this;
        }

        /**
         * @param isBodyInspectionEnabled (Updatable) Enables/disables body inspection for this protection rule. Only Protection Rules in RequestProtection can have this option enabled. Response body inspection will be available at a later date.
         * 
         * @return builder
         * 
         */
        public Builder isBodyInspectionEnabled(Boolean isBodyInspectionEnabled) {
            return isBodyInspectionEnabled(Output.of(isBodyInspectionEnabled));
        }

        /**
         * @param name (Updatable) Rule name. Must be unique within the module.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Rule name. Must be unique within the module.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protectionCapabilities (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilities(Output<List<AppFirewallPolicyResponseProtectionRuleProtectionCapabilityArgs>> protectionCapabilities) {
            $.protectionCapabilities = protectionCapabilities;
            return this;
        }

        /**
         * @param protectionCapabilities (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilities(List<AppFirewallPolicyResponseProtectionRuleProtectionCapabilityArgs> protectionCapabilities) {
            return protectionCapabilities(Output.of(protectionCapabilities));
        }

        /**
         * @param protectionCapabilities (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are not necessarily executed in order of appearance. Their execution order is decided at runtime for improved performance. The array cannot contain entries with the same pair of capability key and version more than once.
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilities(AppFirewallPolicyResponseProtectionRuleProtectionCapabilityArgs... protectionCapabilities) {
            return protectionCapabilities(List.of(protectionCapabilities));
        }

        /**
         * @param protectionCapabilitySettings (Updatable) Settings for protection capabilities
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilitySettings(@Nullable Output<AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs> protectionCapabilitySettings) {
            $.protectionCapabilitySettings = protectionCapabilitySettings;
            return this;
        }

        /**
         * @param protectionCapabilitySettings (Updatable) Settings for protection capabilities
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilitySettings(AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs protectionCapabilitySettings) {
            return protectionCapabilitySettings(Output.of(protectionCapabilitySettings));
        }

        /**
         * @param type (Updatable) Type of WebAppFirewallPolicyRule.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of WebAppFirewallPolicyRule.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AppFirewallPolicyResponseProtectionRuleArgs build() {
            if ($.actionName == null) {
                throw new MissingRequiredPropertyException("AppFirewallPolicyResponseProtectionRuleArgs", "actionName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("AppFirewallPolicyResponseProtectionRuleArgs", "name");
            }
            if ($.protectionCapabilities == null) {
                throw new MissingRequiredPropertyException("AppFirewallPolicyResponseProtectionRuleArgs", "protectionCapabilities");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AppFirewallPolicyResponseProtectionRuleArgs", "type");
            }
            return $;
        }
    }

}
