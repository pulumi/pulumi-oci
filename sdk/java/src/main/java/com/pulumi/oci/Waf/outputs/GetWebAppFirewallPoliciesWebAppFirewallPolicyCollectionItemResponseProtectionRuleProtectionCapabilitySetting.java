// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waf.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting {
    /**
     * @return List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
     * 
     */
    private List<String> allowedHttpMethods;
    /**
     * @return Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
     * 
     */
    private Integer maxHttpRequestHeaderLength;
    /**
     * @return Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
     * 
     */
    private Integer maxHttpRequestHeaders;
    /**
     * @return Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
     * 
     */
    private Integer maxNumberOfArguments;
    /**
     * @return Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
     * 
     */
    private Integer maxSingleArgumentLength;
    /**
     * @return Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
     * 
     */
    private Integer maxTotalArgumentLength;

    private GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting() {}
    /**
     * @return List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
     * 
     */
    public List<String> allowedHttpMethods() {
        return this.allowedHttpMethods;
    }
    /**
     * @return Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
     * 
     */
    public Integer maxHttpRequestHeaderLength() {
        return this.maxHttpRequestHeaderLength;
    }
    /**
     * @return Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
     * 
     */
    public Integer maxHttpRequestHeaders() {
        return this.maxHttpRequestHeaders;
    }
    /**
     * @return Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
     * 
     */
    public Integer maxNumberOfArguments() {
        return this.maxNumberOfArguments;
    }
    /**
     * @return Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
     * 
     */
    public Integer maxSingleArgumentLength() {
        return this.maxSingleArgumentLength;
    }
    /**
     * @return Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
     * 
     */
    public Integer maxTotalArgumentLength() {
        return this.maxTotalArgumentLength;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedHttpMethods;
        private Integer maxHttpRequestHeaderLength;
        private Integer maxHttpRequestHeaders;
        private Integer maxNumberOfArguments;
        private Integer maxSingleArgumentLength;
        private Integer maxTotalArgumentLength;
        public Builder() {}
        public Builder(GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedHttpMethods = defaults.allowedHttpMethods;
    	      this.maxHttpRequestHeaderLength = defaults.maxHttpRequestHeaderLength;
    	      this.maxHttpRequestHeaders = defaults.maxHttpRequestHeaders;
    	      this.maxNumberOfArguments = defaults.maxNumberOfArguments;
    	      this.maxSingleArgumentLength = defaults.maxSingleArgumentLength;
    	      this.maxTotalArgumentLength = defaults.maxTotalArgumentLength;
        }

        @CustomType.Setter
        public Builder allowedHttpMethods(List<String> allowedHttpMethods) {
            if (allowedHttpMethods == null) {
              throw new MissingRequiredPropertyException("GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting", "allowedHttpMethods");
            }
            this.allowedHttpMethods = allowedHttpMethods;
            return this;
        }
        public Builder allowedHttpMethods(String... allowedHttpMethods) {
            return allowedHttpMethods(List.of(allowedHttpMethods));
        }
        @CustomType.Setter
        public Builder maxHttpRequestHeaderLength(Integer maxHttpRequestHeaderLength) {
            if (maxHttpRequestHeaderLength == null) {
              throw new MissingRequiredPropertyException("GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting", "maxHttpRequestHeaderLength");
            }
            this.maxHttpRequestHeaderLength = maxHttpRequestHeaderLength;
            return this;
        }
        @CustomType.Setter
        public Builder maxHttpRequestHeaders(Integer maxHttpRequestHeaders) {
            if (maxHttpRequestHeaders == null) {
              throw new MissingRequiredPropertyException("GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting", "maxHttpRequestHeaders");
            }
            this.maxHttpRequestHeaders = maxHttpRequestHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder maxNumberOfArguments(Integer maxNumberOfArguments) {
            if (maxNumberOfArguments == null) {
              throw new MissingRequiredPropertyException("GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting", "maxNumberOfArguments");
            }
            this.maxNumberOfArguments = maxNumberOfArguments;
            return this;
        }
        @CustomType.Setter
        public Builder maxSingleArgumentLength(Integer maxSingleArgumentLength) {
            if (maxSingleArgumentLength == null) {
              throw new MissingRequiredPropertyException("GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting", "maxSingleArgumentLength");
            }
            this.maxSingleArgumentLength = maxSingleArgumentLength;
            return this;
        }
        @CustomType.Setter
        public Builder maxTotalArgumentLength(Integer maxTotalArgumentLength) {
            if (maxTotalArgumentLength == null) {
              throw new MissingRequiredPropertyException("GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting", "maxTotalArgumentLength");
            }
            this.maxTotalArgumentLength = maxTotalArgumentLength;
            return this;
        }
        public GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting build() {
            final var _resultValue = new GetWebAppFirewallPoliciesWebAppFirewallPolicyCollectionItemResponseProtectionRuleProtectionCapabilitySetting();
            _resultValue.allowedHttpMethods = allowedHttpMethods;
            _resultValue.maxHttpRequestHeaderLength = maxHttpRequestHeaderLength;
            _resultValue.maxHttpRequestHeaders = maxHttpRequestHeaders;
            _resultValue.maxNumberOfArguments = maxNumberOfArguments;
            _resultValue.maxSingleArgumentLength = maxSingleArgumentLength;
            _resultValue.maxTotalArgumentLength = maxTotalArgumentLength;
            return _resultValue;
        }
    }
}
