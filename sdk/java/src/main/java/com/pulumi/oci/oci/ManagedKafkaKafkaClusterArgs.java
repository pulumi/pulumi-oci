// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.oci.inputs.ManagedKafkaKafkaClusterAccessSubnetArgs;
import com.pulumi.oci.oci.inputs.ManagedKafkaKafkaClusterBrokerShapeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedKafkaKafkaClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedKafkaKafkaClusterArgs Empty = new ManagedKafkaKafkaClusterArgs();

    /**
     * (Updatable) Subnets where broker/coordinator VNICs will be created.
     * 
     */
    @Import(name="accessSubnets", required=true)
    private Output<List<ManagedKafkaKafkaClusterAccessSubnetArgs>> accessSubnets;

    /**
     * @return (Updatable) Subnets where broker/coordinator VNICs will be created.
     * 
     */
    public Output<List<ManagedKafkaKafkaClusterAccessSubnetArgs>> accessSubnets() {
        return this.accessSubnets;
    }

    /**
     * (Updatable) Configuration of the broker node.
     * 
     */
    @Import(name="brokerShape", required=true)
    private Output<ManagedKafkaKafkaClusterBrokerShapeArgs> brokerShape;

    /**
     * @return (Updatable) Configuration of the broker node.
     * 
     */
    public Output<ManagedKafkaKafkaClusterBrokerShapeArgs> brokerShape() {
        return this.brokerShape;
    }

    /**
     * (Updatable) CA certificate bundle for mTLS broker authentication.
     * 
     */
    @Import(name="clientCertificateBundle")
    private @Nullable Output<String> clientCertificateBundle;

    /**
     * @return (Updatable) CA certificate bundle for mTLS broker authentication.
     * 
     */
    public Optional<Output<String>> clientCertificateBundle() {
        return Optional.ofNullable(this.clientCertificateBundle);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
     * 
     */
    @Import(name="clusterConfigId", required=true)
    private Output<String> clusterConfigId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
     * 
     */
    public Output<String> clusterConfigId() {
        return this.clusterConfigId;
    }

    /**
     * (Updatable) The version of configuration object
     * 
     */
    @Import(name="clusterConfigVersion", required=true)
    private Output<Integer> clusterConfigVersion;

    /**
     * @return (Updatable) The version of configuration object
     * 
     */
    public Output<Integer> clusterConfigVersion() {
        return this.clusterConfigVersion;
    }

    /**
     * Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
     * 
     */
    @Import(name="clusterType", required=true)
    private Output<String> clusterType;

    /**
     * @return Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
     * 
     */
    public Output<String> clusterType() {
        return this.clusterType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Kafka coordination type. Set of available types depends on Kafka version
     * 
     */
    @Import(name="coordinationType", required=true)
    private Output<String> coordinationType;

    /**
     * @return (Updatable) Kafka coordination type. Set of available types depends on Kafka version
     * 
     */
    public Output<String> coordinationType() {
        return this.coordinationType;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Version of Kafka to use to spin up the cluster
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="kafkaVersion", required=true)
    private Output<String> kafkaVersion;

    /**
     * @return Version of Kafka to use to spin up the cluster
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> kafkaVersion() {
        return this.kafkaVersion;
    }

    private ManagedKafkaKafkaClusterArgs() {}

    private ManagedKafkaKafkaClusterArgs(ManagedKafkaKafkaClusterArgs $) {
        this.accessSubnets = $.accessSubnets;
        this.brokerShape = $.brokerShape;
        this.clientCertificateBundle = $.clientCertificateBundle;
        this.clusterConfigId = $.clusterConfigId;
        this.clusterConfigVersion = $.clusterConfigVersion;
        this.clusterType = $.clusterType;
        this.compartmentId = $.compartmentId;
        this.coordinationType = $.coordinationType;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.kafkaVersion = $.kafkaVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedKafkaKafkaClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedKafkaKafkaClusterArgs $;

        public Builder() {
            $ = new ManagedKafkaKafkaClusterArgs();
        }

        public Builder(ManagedKafkaKafkaClusterArgs defaults) {
            $ = new ManagedKafkaKafkaClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessSubnets (Updatable) Subnets where broker/coordinator VNICs will be created.
         * 
         * @return builder
         * 
         */
        public Builder accessSubnets(Output<List<ManagedKafkaKafkaClusterAccessSubnetArgs>> accessSubnets) {
            $.accessSubnets = accessSubnets;
            return this;
        }

        /**
         * @param accessSubnets (Updatable) Subnets where broker/coordinator VNICs will be created.
         * 
         * @return builder
         * 
         */
        public Builder accessSubnets(List<ManagedKafkaKafkaClusterAccessSubnetArgs> accessSubnets) {
            return accessSubnets(Output.of(accessSubnets));
        }

        /**
         * @param accessSubnets (Updatable) Subnets where broker/coordinator VNICs will be created.
         * 
         * @return builder
         * 
         */
        public Builder accessSubnets(ManagedKafkaKafkaClusterAccessSubnetArgs... accessSubnets) {
            return accessSubnets(List.of(accessSubnets));
        }

        /**
         * @param brokerShape (Updatable) Configuration of the broker node.
         * 
         * @return builder
         * 
         */
        public Builder brokerShape(Output<ManagedKafkaKafkaClusterBrokerShapeArgs> brokerShape) {
            $.brokerShape = brokerShape;
            return this;
        }

        /**
         * @param brokerShape (Updatable) Configuration of the broker node.
         * 
         * @return builder
         * 
         */
        public Builder brokerShape(ManagedKafkaKafkaClusterBrokerShapeArgs brokerShape) {
            return brokerShape(Output.of(brokerShape));
        }

        /**
         * @param clientCertificateBundle (Updatable) CA certificate bundle for mTLS broker authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateBundle(@Nullable Output<String> clientCertificateBundle) {
            $.clientCertificateBundle = clientCertificateBundle;
            return this;
        }

        /**
         * @param clientCertificateBundle (Updatable) CA certificate bundle for mTLS broker authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateBundle(String clientCertificateBundle) {
            return clientCertificateBundle(Output.of(clientCertificateBundle));
        }

        /**
         * @param clusterConfigId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
         * 
         * @return builder
         * 
         */
        public Builder clusterConfigId(Output<String> clusterConfigId) {
            $.clusterConfigId = clusterConfigId;
            return this;
        }

        /**
         * @param clusterConfigId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
         * 
         * @return builder
         * 
         */
        public Builder clusterConfigId(String clusterConfigId) {
            return clusterConfigId(Output.of(clusterConfigId));
        }

        /**
         * @param clusterConfigVersion (Updatable) The version of configuration object
         * 
         * @return builder
         * 
         */
        public Builder clusterConfigVersion(Output<Integer> clusterConfigVersion) {
            $.clusterConfigVersion = clusterConfigVersion;
            return this;
        }

        /**
         * @param clusterConfigVersion (Updatable) The version of configuration object
         * 
         * @return builder
         * 
         */
        public Builder clusterConfigVersion(Integer clusterConfigVersion) {
            return clusterConfigVersion(Output.of(clusterConfigVersion));
        }

        /**
         * @param clusterType Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
         * 
         * @return builder
         * 
         */
        public Builder clusterType(Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
         * 
         * @return builder
         * 
         */
        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param coordinationType (Updatable) Kafka coordination type. Set of available types depends on Kafka version
         * 
         * @return builder
         * 
         */
        public Builder coordinationType(Output<String> coordinationType) {
            $.coordinationType = coordinationType;
            return this;
        }

        /**
         * @param coordinationType (Updatable) Kafka coordination type. Set of available types depends on Kafka version
         * 
         * @return builder
         * 
         */
        public Builder coordinationType(String coordinationType) {
            return coordinationType(Output.of(coordinationType));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param kafkaVersion Version of Kafka to use to spin up the cluster
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder kafkaVersion(Output<String> kafkaVersion) {
            $.kafkaVersion = kafkaVersion;
            return this;
        }

        /**
         * @param kafkaVersion Version of Kafka to use to spin up the cluster
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder kafkaVersion(String kafkaVersion) {
            return kafkaVersion(Output.of(kafkaVersion));
        }

        public ManagedKafkaKafkaClusterArgs build() {
            if ($.accessSubnets == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterArgs", "accessSubnets");
            }
            if ($.brokerShape == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterArgs", "brokerShape");
            }
            if ($.clusterConfigId == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterArgs", "clusterConfigId");
            }
            if ($.clusterConfigVersion == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterArgs", "clusterConfigVersion");
            }
            if ($.clusterType == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterArgs", "clusterType");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterArgs", "compartmentId");
            }
            if ($.coordinationType == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterArgs", "coordinationType");
            }
            if ($.kafkaVersion == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterArgs", "kafkaVersion");
            }
            return $;
        }
    }

}
