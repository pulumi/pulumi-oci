// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiPlatformApiPlatformInstanceUriArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiPlatformApiPlatformInstanceUriArgs Empty = new ApiPlatformApiPlatformInstanceUriArgs();

    /**
     * Developer&#39;s Portal URI of the instance (/developers)
     * 
     */
    @Import(name="developersPortalUri")
    private @Nullable Output<String> developersPortalUri;

    /**
     * @return Developer&#39;s Portal URI of the instance (/developers)
     * 
     */
    public Optional<Output<String>> developersPortalUri() {
        return Optional.ofNullable(this.developersPortalUri);
    }

    /**
     * Management Portal URI of the instance (/apiplatform)
     * 
     */
    @Import(name="managementPortalUri")
    private @Nullable Output<String> managementPortalUri;

    /**
     * @return Management Portal URI of the instance (/apiplatform)
     * 
     */
    public Optional<Output<String>> managementPortalUri() {
        return Optional.ofNullable(this.managementPortalUri);
    }

    private ApiPlatformApiPlatformInstanceUriArgs() {}

    private ApiPlatformApiPlatformInstanceUriArgs(ApiPlatformApiPlatformInstanceUriArgs $) {
        this.developersPortalUri = $.developersPortalUri;
        this.managementPortalUri = $.managementPortalUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiPlatformApiPlatformInstanceUriArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiPlatformApiPlatformInstanceUriArgs $;

        public Builder() {
            $ = new ApiPlatformApiPlatformInstanceUriArgs();
        }

        public Builder(ApiPlatformApiPlatformInstanceUriArgs defaults) {
            $ = new ApiPlatformApiPlatformInstanceUriArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param developersPortalUri Developer&#39;s Portal URI of the instance (/developers)
         * 
         * @return builder
         * 
         */
        public Builder developersPortalUri(@Nullable Output<String> developersPortalUri) {
            $.developersPortalUri = developersPortalUri;
            return this;
        }

        /**
         * @param developersPortalUri Developer&#39;s Portal URI of the instance (/developers)
         * 
         * @return builder
         * 
         */
        public Builder developersPortalUri(String developersPortalUri) {
            return developersPortalUri(Output.of(developersPortalUri));
        }

        /**
         * @param managementPortalUri Management Portal URI of the instance (/apiplatform)
         * 
         * @return builder
         * 
         */
        public Builder managementPortalUri(@Nullable Output<String> managementPortalUri) {
            $.managementPortalUri = managementPortalUri;
            return this;
        }

        /**
         * @param managementPortalUri Management Portal URI of the instance (/apiplatform)
         * 
         * @return builder
         * 
         */
        public Builder managementPortalUri(String managementPortalUri) {
            return managementPortalUri(Output.of(managementPortalUri));
        }

        public ApiPlatformApiPlatformInstanceUriArgs build() {
            return $;
        }
    }

}
