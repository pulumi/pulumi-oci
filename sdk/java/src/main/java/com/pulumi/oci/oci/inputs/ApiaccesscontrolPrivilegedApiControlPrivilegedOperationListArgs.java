// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs Empty = new ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs();

    /**
     * (Updatable) name of the api which needs to be protected.
     * 
     */
    @Import(name="apiName", required=true)
    private Output<String> apiName;

    /**
     * @return (Updatable) name of the api which needs to be protected.
     * 
     */
    public Output<String> apiName() {
        return this.apiName;
    }

    /**
     * (Updatable) list of attributes belonging to the above api which needs to be protected.
     * 
     */
    @Import(name="attributeNames")
    private @Nullable Output<List<String>> attributeNames;

    /**
     * @return (Updatable) list of attributes belonging to the above api which needs to be protected.
     * 
     */
    public Optional<Output<List<String>>> attributeNames() {
        return Optional.ofNullable(this.attributeNames);
    }

    /**
     * (Updatable) type of the entity which needs to be protected.
     * 
     */
    @Import(name="entityType")
    private @Nullable Output<String> entityType;

    /**
     * @return (Updatable) type of the entity which needs to be protected.
     * 
     */
    public Optional<Output<String>> entityType() {
        return Optional.ofNullable(this.entityType);
    }

    private ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs() {}

    private ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs(ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs $) {
        this.apiName = $.apiName;
        this.attributeNames = $.attributeNames;
        this.entityType = $.entityType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs $;

        public Builder() {
            $ = new ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs();
        }

        public Builder(ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs defaults) {
            $ = new ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiName (Updatable) name of the api which needs to be protected.
         * 
         * @return builder
         * 
         */
        public Builder apiName(Output<String> apiName) {
            $.apiName = apiName;
            return this;
        }

        /**
         * @param apiName (Updatable) name of the api which needs to be protected.
         * 
         * @return builder
         * 
         */
        public Builder apiName(String apiName) {
            return apiName(Output.of(apiName));
        }

        /**
         * @param attributeNames (Updatable) list of attributes belonging to the above api which needs to be protected.
         * 
         * @return builder
         * 
         */
        public Builder attributeNames(@Nullable Output<List<String>> attributeNames) {
            $.attributeNames = attributeNames;
            return this;
        }

        /**
         * @param attributeNames (Updatable) list of attributes belonging to the above api which needs to be protected.
         * 
         * @return builder
         * 
         */
        public Builder attributeNames(List<String> attributeNames) {
            return attributeNames(Output.of(attributeNames));
        }

        /**
         * @param attributeNames (Updatable) list of attributes belonging to the above api which needs to be protected.
         * 
         * @return builder
         * 
         */
        public Builder attributeNames(String... attributeNames) {
            return attributeNames(List.of(attributeNames));
        }

        /**
         * @param entityType (Updatable) type of the entity which needs to be protected.
         * 
         * @return builder
         * 
         */
        public Builder entityType(@Nullable Output<String> entityType) {
            $.entityType = entityType;
            return this;
        }

        /**
         * @param entityType (Updatable) type of the entity which needs to be protected.
         * 
         * @return builder
         * 
         */
        public Builder entityType(String entityType) {
            return entityType(Output.of(entityType));
        }

        public ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs build() {
            if ($.apiName == null) {
                throw new MissingRequiredPropertyException("ApiaccesscontrolPrivilegedApiControlPrivilegedOperationListArgs", "apiName");
            }
            return $;
        }
    }

}
