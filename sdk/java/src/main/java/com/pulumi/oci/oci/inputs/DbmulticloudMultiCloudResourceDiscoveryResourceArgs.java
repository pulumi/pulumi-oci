// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DbmulticloudMultiCloudResourceDiscoveryResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DbmulticloudMultiCloudResourceDiscoveryResourceArgs Empty = new DbmulticloudMultiCloudResourceDiscoveryResourceArgs();

    /**
     * The ID of the Discovered Resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the Discovered Resource.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Discovered Resource Location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Discovered Resource Location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Discovered Resource Name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Discovered Resource Name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Discovered Resource&#39;s properties.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Map<String,String>> properties;

    /**
     * @return Discovered Resource&#39;s properties.
     * 
     */
    public Optional<Output<Map<String,String>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Discovered Resource Group Name.
     * 
     */
    @Import(name="resourceGroup")
    private @Nullable Output<String> resourceGroup;

    /**
     * @return Discovered Resource Group Name.
     * 
     */
    public Optional<Output<String>> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }

    /**
     * Discovered Resource Type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Discovered Resource Type.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private DbmulticloudMultiCloudResourceDiscoveryResourceArgs() {}

    private DbmulticloudMultiCloudResourceDiscoveryResourceArgs(DbmulticloudMultiCloudResourceDiscoveryResourceArgs $) {
        this.id = $.id;
        this.location = $.location;
        this.name = $.name;
        this.properties = $.properties;
        this.resourceGroup = $.resourceGroup;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DbmulticloudMultiCloudResourceDiscoveryResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DbmulticloudMultiCloudResourceDiscoveryResourceArgs $;

        public Builder() {
            $ = new DbmulticloudMultiCloudResourceDiscoveryResourceArgs();
        }

        public Builder(DbmulticloudMultiCloudResourceDiscoveryResourceArgs defaults) {
            $ = new DbmulticloudMultiCloudResourceDiscoveryResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the Discovered Resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the Discovered Resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param location Discovered Resource Location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Discovered Resource Location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Discovered Resource Name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Discovered Resource Name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param properties Discovered Resource&#39;s properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Discovered Resource&#39;s properties.
         * 
         * @return builder
         * 
         */
        public Builder properties(Map<String,String> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param resourceGroup Discovered Resource Group Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(@Nullable Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup Discovered Resource Group Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        /**
         * @param type Discovered Resource Type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Discovered Resource Type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DbmulticloudMultiCloudResourceDiscoveryResourceArgs build() {
            return $;
        }
    }

}
