// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.oci.inputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs Empty = new GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs();

    /**
     * The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * Display Name of the Multi Cloud Discovery Resource.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return Display Name of the Multi Cloud Discovery Resource.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetDbmulticloudMultiCloudResourceDiscoveriesFilter> filters;

    public Optional<List<GetDbmulticloudMultiCloudResourceDiscoveriesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Multi Cloud Discovery Resource.
     * 
     */
    @Import(name="multiCloudResourceDiscoveryId")
    private @Nullable String multiCloudResourceDiscoveryId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Multi Cloud Discovery Resource.
     * 
     */
    public Optional<String> multiCloudResourceDiscoveryId() {
        return Optional.ofNullable(this.multiCloudResourceDiscoveryId);
    }

    /**
     * A filter to return Oracle DB Azure Blob Mount Resources.
     * 
     */
    @Import(name="oracleDbAzureConnectorId")
    private @Nullable String oracleDbAzureConnectorId;

    /**
     * @return A filter to return Oracle DB Azure Blob Mount Resources.
     * 
     */
    public Optional<String> oracleDbAzureConnectorId() {
        return Optional.ofNullable(this.oracleDbAzureConnectorId);
    }

    /**
     * The type of Multi Cloud Resource.
     * 
     */
    @Import(name="resourceType")
    private @Nullable String resourceType;

    /**
     * @return The type of Multi Cloud Resource.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs() {}

    private GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs(GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.multiCloudResourceDiscoveryId = $.multiCloudResourceDiscoveryId;
        this.oracleDbAzureConnectorId = $.oracleDbAzureConnectorId;
        this.resourceType = $.resourceType;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs $;

        public Builder() {
            $ = new GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs();
        }

        public Builder(GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs defaults) {
            $ = new GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [ID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName Display Name of the Multi Cloud Discovery Resource.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetDbmulticloudMultiCloudResourceDiscoveriesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDbmulticloudMultiCloudResourceDiscoveriesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param multiCloudResourceDiscoveryId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Multi Cloud Discovery Resource.
         * 
         * @return builder
         * 
         */
        public Builder multiCloudResourceDiscoveryId(@Nullable String multiCloudResourceDiscoveryId) {
            $.multiCloudResourceDiscoveryId = multiCloudResourceDiscoveryId;
            return this;
        }

        /**
         * @param oracleDbAzureConnectorId A filter to return Oracle DB Azure Blob Mount Resources.
         * 
         * @return builder
         * 
         */
        public Builder oracleDbAzureConnectorId(@Nullable String oracleDbAzureConnectorId) {
            $.oracleDbAzureConnectorId = oracleDbAzureConnectorId;
            return this;
        }

        /**
         * @param resourceType The type of Multi Cloud Resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetDbmulticloudMultiCloudResourceDiscoveriesPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
