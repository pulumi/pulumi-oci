// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDbmulticloudOracleDbAzureBlobMountPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDbmulticloudOracleDbAzureBlobMountPlainArgs Empty = new GetDbmulticloudOracleDbAzureBlobMountPlainArgs();

    /**
     * The ID of the Azure Container Resource.
     * 
     */
    @Import(name="oracleDbAzureBlobMountId", required=true)
    private String oracleDbAzureBlobMountId;

    /**
     * @return The ID of the Azure Container Resource.
     * 
     */
    public String oracleDbAzureBlobMountId() {
        return this.oracleDbAzureBlobMountId;
    }

    private GetDbmulticloudOracleDbAzureBlobMountPlainArgs() {}

    private GetDbmulticloudOracleDbAzureBlobMountPlainArgs(GetDbmulticloudOracleDbAzureBlobMountPlainArgs $) {
        this.oracleDbAzureBlobMountId = $.oracleDbAzureBlobMountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDbmulticloudOracleDbAzureBlobMountPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDbmulticloudOracleDbAzureBlobMountPlainArgs $;

        public Builder() {
            $ = new GetDbmulticloudOracleDbAzureBlobMountPlainArgs();
        }

        public Builder(GetDbmulticloudOracleDbAzureBlobMountPlainArgs defaults) {
            $ = new GetDbmulticloudOracleDbAzureBlobMountPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param oracleDbAzureBlobMountId The ID of the Azure Container Resource.
         * 
         * @return builder
         * 
         */
        public Builder oracleDbAzureBlobMountId(String oracleDbAzureBlobMountId) {
            $.oracleDbAzureBlobMountId = oracleDbAzureBlobMountId;
            return this;
        }

        public GetDbmulticloudOracleDbAzureBlobMountPlainArgs build() {
            if ($.oracleDbAzureBlobMountId == null) {
                throw new MissingRequiredPropertyException("GetDbmulticloudOracleDbAzureBlobMountPlainArgs", "oracleDbAzureBlobMountId");
            }
            return $;
        }
    }

}
