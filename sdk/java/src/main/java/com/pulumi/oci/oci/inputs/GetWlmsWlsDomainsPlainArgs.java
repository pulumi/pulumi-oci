// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.oci.inputs.GetWlmsWlsDomainsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWlmsWlsDomainsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWlmsWlsDomainsPlainArgs Empty = new GetWlmsWlsDomainsPlainArgs();

    /**
     * The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return The display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetWlmsWlsDomainsFilter> filters;

    public Optional<List<GetWlmsWlsDomainsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A filter to return WebLogic domains based on the type of middleware of the WebLogic domain.
     * 
     */
    @Import(name="middlewareType")
    private @Nullable String middlewareType;

    /**
     * @return A filter to return WebLogic domains based on the type of middleware of the WebLogic domain.
     * 
     */
    public Optional<String> middlewareType() {
        return Optional.ofNullable(this.middlewareType);
    }

    /**
     * A filter to return domains based on the patch readiness status.
     * 
     */
    @Import(name="patchReadinessStatus")
    private @Nullable String patchReadinessStatus;

    /**
     * @return A filter to return domains based on the patch readiness status.
     * 
     */
    public Optional<String> patchReadinessStatus() {
        return Optional.ofNullable(this.patchReadinessStatus);
    }

    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return WebLogic domains based on the WebLogic version.
     * 
     */
    @Import(name="weblogicVersion")
    private @Nullable String weblogicVersion;

    /**
     * @return A filter to return WebLogic domains based on the WebLogic version.
     * 
     */
    public Optional<String> weblogicVersion() {
        return Optional.ofNullable(this.weblogicVersion);
    }

    private GetWlmsWlsDomainsPlainArgs() {}

    private GetWlmsWlsDomainsPlainArgs(GetWlmsWlsDomainsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.middlewareType = $.middlewareType;
        this.patchReadinessStatus = $.patchReadinessStatus;
        this.state = $.state;
        this.weblogicVersion = $.weblogicVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWlmsWlsDomainsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWlmsWlsDomainsPlainArgs $;

        public Builder() {
            $ = new GetWlmsWlsDomainsPlainArgs();
        }

        public Builder(GetWlmsWlsDomainsPlainArgs defaults) {
            $ = new GetWlmsWlsDomainsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the resources to list. This filter returns  only resources contained within the specified compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName The display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetWlmsWlsDomainsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetWlmsWlsDomainsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param middlewareType A filter to return WebLogic domains based on the type of middleware of the WebLogic domain.
         * 
         * @return builder
         * 
         */
        public Builder middlewareType(@Nullable String middlewareType) {
            $.middlewareType = middlewareType;
            return this;
        }

        /**
         * @param patchReadinessStatus A filter to return domains based on the patch readiness status.
         * 
         * @return builder
         * 
         */
        public Builder patchReadinessStatus(@Nullable String patchReadinessStatus) {
            $.patchReadinessStatus = patchReadinessStatus;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param weblogicVersion A filter to return WebLogic domains based on the WebLogic version.
         * 
         * @return builder
         * 
         */
        public Builder weblogicVersion(@Nullable String weblogicVersion) {
            $.weblogicVersion = weblogicVersion;
            return this;
        }

        public GetWlmsWlsDomainsPlainArgs build() {
            return $;
        }
    }

}
