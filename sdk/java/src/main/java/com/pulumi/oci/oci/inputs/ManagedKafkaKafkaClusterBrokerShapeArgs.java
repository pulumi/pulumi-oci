// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedKafkaKafkaClusterBrokerShapeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedKafkaKafkaClusterBrokerShapeArgs Empty = new ManagedKafkaKafkaClusterBrokerShapeArgs();

    /**
     * (Updatable) Number of Kafka broker nodes
     * 
     */
    @Import(name="nodeCount", required=true)
    private Output<Integer> nodeCount;

    /**
     * @return (Updatable) Number of Kafka broker nodes
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }

    /**
     * (Updatable) Number of OCPUs per nodes
     * 
     */
    @Import(name="ocpuCount", required=true)
    private Output<Integer> ocpuCount;

    /**
     * @return (Updatable) Number of OCPUs per nodes
     * 
     */
    public Output<Integer> ocpuCount() {
        return this.ocpuCount;
    }

    /**
     * (Updatable) Size of the storage per nodes.
     * 
     */
    @Import(name="storageSizeInGbs")
    private @Nullable Output<Integer> storageSizeInGbs;

    /**
     * @return (Updatable) Size of the storage per nodes.
     * 
     */
    public Optional<Output<Integer>> storageSizeInGbs() {
        return Optional.ofNullable(this.storageSizeInGbs);
    }

    private ManagedKafkaKafkaClusterBrokerShapeArgs() {}

    private ManagedKafkaKafkaClusterBrokerShapeArgs(ManagedKafkaKafkaClusterBrokerShapeArgs $) {
        this.nodeCount = $.nodeCount;
        this.ocpuCount = $.ocpuCount;
        this.storageSizeInGbs = $.storageSizeInGbs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedKafkaKafkaClusterBrokerShapeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedKafkaKafkaClusterBrokerShapeArgs $;

        public Builder() {
            $ = new ManagedKafkaKafkaClusterBrokerShapeArgs();
        }

        public Builder(ManagedKafkaKafkaClusterBrokerShapeArgs defaults) {
            $ = new ManagedKafkaKafkaClusterBrokerShapeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nodeCount (Updatable) Number of Kafka broker nodes
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount (Updatable) Number of Kafka broker nodes
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param ocpuCount (Updatable) Number of OCPUs per nodes
         * 
         * @return builder
         * 
         */
        public Builder ocpuCount(Output<Integer> ocpuCount) {
            $.ocpuCount = ocpuCount;
            return this;
        }

        /**
         * @param ocpuCount (Updatable) Number of OCPUs per nodes
         * 
         * @return builder
         * 
         */
        public Builder ocpuCount(Integer ocpuCount) {
            return ocpuCount(Output.of(ocpuCount));
        }

        /**
         * @param storageSizeInGbs (Updatable) Size of the storage per nodes.
         * 
         * @return builder
         * 
         */
        public Builder storageSizeInGbs(@Nullable Output<Integer> storageSizeInGbs) {
            $.storageSizeInGbs = storageSizeInGbs;
            return this;
        }

        /**
         * @param storageSizeInGbs (Updatable) Size of the storage per nodes.
         * 
         * @return builder
         * 
         */
        public Builder storageSizeInGbs(Integer storageSizeInGbs) {
            return storageSizeInGbs(Output.of(storageSizeInGbs));
        }

        public ManagedKafkaKafkaClusterBrokerShapeArgs build() {
            if ($.nodeCount == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterBrokerShapeArgs", "nodeCount");
            }
            if ($.ocpuCount == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterBrokerShapeArgs", "ocpuCount");
            }
            return $;
        }
    }

}
