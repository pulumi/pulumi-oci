// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedKafkaKafkaClusterConfigLatestConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedKafkaKafkaClusterConfigLatestConfigArgs Empty = new ManagedKafkaKafkaClusterConfigLatestConfigArgs();

    /**
     * (Updatable) ID cluster configuration
     * 
     */
    @Import(name="configId")
    private @Nullable Output<String> configId;

    /**
     * @return (Updatable) ID cluster configuration
     * 
     */
    public Optional<Output<String>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * (Updatable) Cluster configuration key-value pairs
     * 
     */
    @Import(name="properties", required=true)
    private Output<Map<String,String>> properties;

    /**
     * @return (Updatable) Cluster configuration key-value pairs
     * 
     */
    public Output<Map<String,String>> properties() {
        return this.properties;
    }

    /**
     * (Updatable) The date and time the KafkaClusterConfigVersion was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return (Updatable) The date and time the KafkaClusterConfigVersion was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * (Updatable) Version of the cluster configuration
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="versionNumber")
    private @Nullable Output<Integer> versionNumber;

    /**
     * @return (Updatable) Version of the cluster configuration
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> versionNumber() {
        return Optional.ofNullable(this.versionNumber);
    }

    private ManagedKafkaKafkaClusterConfigLatestConfigArgs() {}

    private ManagedKafkaKafkaClusterConfigLatestConfigArgs(ManagedKafkaKafkaClusterConfigLatestConfigArgs $) {
        this.configId = $.configId;
        this.properties = $.properties;
        this.timeCreated = $.timeCreated;
        this.versionNumber = $.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedKafkaKafkaClusterConfigLatestConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedKafkaKafkaClusterConfigLatestConfigArgs $;

        public Builder() {
            $ = new ManagedKafkaKafkaClusterConfigLatestConfigArgs();
        }

        public Builder(ManagedKafkaKafkaClusterConfigLatestConfigArgs defaults) {
            $ = new ManagedKafkaKafkaClusterConfigLatestConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId (Updatable) ID cluster configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<String> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId (Updatable) ID cluster configuration
         * 
         * @return builder
         * 
         */
        public Builder configId(String configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param properties (Updatable) Cluster configuration key-value pairs
         * 
         * @return builder
         * 
         */
        public Builder properties(Output<Map<String,String>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties (Updatable) Cluster configuration key-value pairs
         * 
         * @return builder
         * 
         */
        public Builder properties(Map<String,String> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param timeCreated (Updatable) The date and time the KafkaClusterConfigVersion was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated (Updatable) The date and time the KafkaClusterConfigVersion was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param versionNumber (Updatable) Version of the cluster configuration
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder versionNumber(@Nullable Output<Integer> versionNumber) {
            $.versionNumber = versionNumber;
            return this;
        }

        /**
         * @param versionNumber (Updatable) Version of the cluster configuration
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder versionNumber(Integer versionNumber) {
            return versionNumber(Output.of(versionNumber));
        }

        public ManagedKafkaKafkaClusterConfigLatestConfigArgs build() {
            if ($.properties == null) {
                throw new MissingRequiredPropertyException("ManagedKafkaKafkaClusterConfigLatestConfigArgs", "properties");
            }
            return $;
        }
    }

}
