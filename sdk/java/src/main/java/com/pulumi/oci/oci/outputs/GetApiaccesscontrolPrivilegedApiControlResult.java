// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.oci.outputs.GetApiaccesscontrolPrivilegedApiControlPrivilegedOperationList;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApiaccesscontrolPrivilegedApiControlResult {
    /**
     * @return List of IAM user group ids who can approve an privilegedApi request associated with a target resource under the governance of this operator control.
     * 
     */
    private List<String> approverGroupIdLists;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Description of privilegedApi control.
     * 
     */
    private String description;
    /**
     * @return Name of the privilegedApi control. The name must be unique.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
     * 
     */
    private String id;
    /**
     * @return A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Privileged Api Control.
     * 
     */
    private String notificationTopicId;
    /**
     * @return Number of approvers required to approve an privilegedApi request.
     * 
     */
    private Integer numberOfApprovers;
    private String privilegedApiControlId;
    /**
     * @return List of privileged operations/apis. These operations/apis will be treaated as secured, once enabled by the Privileged API Managment for a resource. Any of these operations, if needs to be executed, needs to be raised as a PrivilegedApi Request which needs to be approved by customers or it can be pre-approved.
     * 
     */
    private List<GetApiaccesscontrolPrivilegedApiControlPrivilegedOperationList> privilegedOperationLists;
    /**
     * @return resourceType for which the PrivilegedApiControl is applicable
     * 
     */
    private String resourceType;
    /**
     * @return contains Resource details
     * 
     */
    private List<String> resources;
    /**
     * @return The current state of the PrivilegedApiControl.
     * 
     */
    private String state;
    /**
     * @return A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    private String stateDetails;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the PrivilegedApiControl was marked for delete, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeDeleted;
    /**
     * @return The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeUpdated;

    private GetApiaccesscontrolPrivilegedApiControlResult() {}
    /**
     * @return List of IAM user group ids who can approve an privilegedApi request associated with a target resource under the governance of this operator control.
     * 
     */
    public List<String> approverGroupIdLists() {
        return this.approverGroupIdLists;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of privilegedApi control.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Name of the privilegedApi control. The name must be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Privileged Api Control.
     * 
     */
    public String notificationTopicId() {
        return this.notificationTopicId;
    }
    /**
     * @return Number of approvers required to approve an privilegedApi request.
     * 
     */
    public Integer numberOfApprovers() {
        return this.numberOfApprovers;
    }
    public String privilegedApiControlId() {
        return this.privilegedApiControlId;
    }
    /**
     * @return List of privileged operations/apis. These operations/apis will be treaated as secured, once enabled by the Privileged API Managment for a resource. Any of these operations, if needs to be executed, needs to be raised as a PrivilegedApi Request which needs to be approved by customers or it can be pre-approved.
     * 
     */
    public List<GetApiaccesscontrolPrivilegedApiControlPrivilegedOperationList> privilegedOperationLists() {
        return this.privilegedOperationLists;
    }
    /**
     * @return resourceType for which the PrivilegedApiControl is applicable
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return contains Resource details
     * 
     */
    public List<String> resources() {
        return this.resources;
    }
    /**
     * @return The current state of the PrivilegedApiControl.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    public String stateDetails() {
        return this.stateDetails;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the PrivilegedApiControl was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the PrivilegedApiControl was marked for delete, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeDeleted() {
        return this.timeDeleted;
    }
    /**
     * @return The date and time the PrivilegedApiControl was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiaccesscontrolPrivilegedApiControlResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> approverGroupIdLists;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String notificationTopicId;
        private Integer numberOfApprovers;
        private String privilegedApiControlId;
        private List<GetApiaccesscontrolPrivilegedApiControlPrivilegedOperationList> privilegedOperationLists;
        private String resourceType;
        private List<String> resources;
        private String state;
        private String stateDetails;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeDeleted;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetApiaccesscontrolPrivilegedApiControlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approverGroupIdLists = defaults.approverGroupIdLists;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.notificationTopicId = defaults.notificationTopicId;
    	      this.numberOfApprovers = defaults.numberOfApprovers;
    	      this.privilegedApiControlId = defaults.privilegedApiControlId;
    	      this.privilegedOperationLists = defaults.privilegedOperationLists;
    	      this.resourceType = defaults.resourceType;
    	      this.resources = defaults.resources;
    	      this.state = defaults.state;
    	      this.stateDetails = defaults.stateDetails;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDeleted = defaults.timeDeleted;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder approverGroupIdLists(List<String> approverGroupIdLists) {
            if (approverGroupIdLists == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "approverGroupIdLists");
            }
            this.approverGroupIdLists = approverGroupIdLists;
            return this;
        }
        public Builder approverGroupIdLists(String... approverGroupIdLists) {
            return approverGroupIdLists(List.of(approverGroupIdLists));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder notificationTopicId(String notificationTopicId) {
            if (notificationTopicId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "notificationTopicId");
            }
            this.notificationTopicId = notificationTopicId;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfApprovers(Integer numberOfApprovers) {
            if (numberOfApprovers == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "numberOfApprovers");
            }
            this.numberOfApprovers = numberOfApprovers;
            return this;
        }
        @CustomType.Setter
        public Builder privilegedApiControlId(String privilegedApiControlId) {
            if (privilegedApiControlId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "privilegedApiControlId");
            }
            this.privilegedApiControlId = privilegedApiControlId;
            return this;
        }
        @CustomType.Setter
        public Builder privilegedOperationLists(List<GetApiaccesscontrolPrivilegedApiControlPrivilegedOperationList> privilegedOperationLists) {
            if (privilegedOperationLists == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "privilegedOperationLists");
            }
            this.privilegedOperationLists = privilegedOperationLists;
            return this;
        }
        public Builder privilegedOperationLists(GetApiaccesscontrolPrivilegedApiControlPrivilegedOperationList... privilegedOperationLists) {
            return privilegedOperationLists(List.of(privilegedOperationLists));
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder resources(List<String> resources) {
            if (resources == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "resources");
            }
            this.resources = resources;
            return this;
        }
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stateDetails(String stateDetails) {
            if (stateDetails == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "stateDetails");
            }
            this.stateDetails = stateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeDeleted(String timeDeleted) {
            if (timeDeleted == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "timeDeleted");
            }
            this.timeDeleted = timeDeleted;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetApiaccesscontrolPrivilegedApiControlResult build() {
            final var _resultValue = new GetApiaccesscontrolPrivilegedApiControlResult();
            _resultValue.approverGroupIdLists = approverGroupIdLists;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.notificationTopicId = notificationTopicId;
            _resultValue.numberOfApprovers = numberOfApprovers;
            _resultValue.privilegedApiControlId = privilegedApiControlId;
            _resultValue.privilegedOperationLists = privilegedOperationLists;
            _resultValue.resourceType = resourceType;
            _resultValue.resources = resources;
            _resultValue.state = state;
            _resultValue.stateDetails = stateDetails;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeDeleted = timeDeleted;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
