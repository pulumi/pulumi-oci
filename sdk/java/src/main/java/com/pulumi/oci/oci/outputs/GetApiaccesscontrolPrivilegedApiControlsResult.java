// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.oci.outputs.GetApiaccesscontrolPrivilegedApiControlsFilter;
import com.pulumi.oci.oci.outputs.GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApiaccesscontrolPrivilegedApiControlsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Name of the privilegedApi control. The name must be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetApiaccesscontrolPrivilegedApiControlsFilter> filters;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of privileged_api_control_collection.
     * 
     */
    private List<GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollection> privilegedApiControlCollections;
    /**
     * @return resourceType for which the PrivilegedApiControl is applicable
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The current state of the PrivilegedApiControl.
     * 
     */
    private @Nullable String state;

    private GetApiaccesscontrolPrivilegedApiControlsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Name of the privilegedApi control. The name must be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetApiaccesscontrolPrivilegedApiControlsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiControl.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of privileged_api_control_collection.
     * 
     */
    public List<GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollection> privilegedApiControlCollections() {
        return this.privilegedApiControlCollections;
    }
    /**
     * @return resourceType for which the PrivilegedApiControl is applicable
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The current state of the PrivilegedApiControl.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiaccesscontrolPrivilegedApiControlsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetApiaccesscontrolPrivilegedApiControlsFilter> filters;
        private @Nullable String id;
        private List<GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollection> privilegedApiControlCollections;
        private @Nullable String resourceType;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetApiaccesscontrolPrivilegedApiControlsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.privilegedApiControlCollections = defaults.privilegedApiControlCollections;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetApiaccesscontrolPrivilegedApiControlsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetApiaccesscontrolPrivilegedApiControlsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder privilegedApiControlCollections(List<GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollection> privilegedApiControlCollections) {
            if (privilegedApiControlCollections == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiControlsResult", "privilegedApiControlCollections");
            }
            this.privilegedApiControlCollections = privilegedApiControlCollections;
            return this;
        }
        public Builder privilegedApiControlCollections(GetApiaccesscontrolPrivilegedApiControlsPrivilegedApiControlCollection... privilegedApiControlCollections) {
            return privilegedApiControlCollections(List.of(privilegedApiControlCollections));
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetApiaccesscontrolPrivilegedApiControlsResult build() {
            final var _resultValue = new GetApiaccesscontrolPrivilegedApiControlsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.privilegedApiControlCollections = privilegedApiControlCollections;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
