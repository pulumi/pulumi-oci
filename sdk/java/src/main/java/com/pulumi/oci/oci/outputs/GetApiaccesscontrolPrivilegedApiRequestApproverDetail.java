// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApiaccesscontrolPrivilegedApiRequestApproverDetail {
    /**
     * @return The action done by the approver.
     * 
     */
    private String approvalAction;
    /**
     * @return Comment specified by the approver of the request.
     * 
     */
    private String approvalComment;
    /**
     * @return The userId of the approver.
     * 
     */
    private String approverId;
    /**
     * @return Time for when the privilegedApi request should start that is authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeApprovedForAccess;
    /**
     * @return Time when the privilegedApi request was authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeOfAuthorization;

    private GetApiaccesscontrolPrivilegedApiRequestApproverDetail() {}
    /**
     * @return The action done by the approver.
     * 
     */
    public String approvalAction() {
        return this.approvalAction;
    }
    /**
     * @return Comment specified by the approver of the request.
     * 
     */
    public String approvalComment() {
        return this.approvalComment;
    }
    /**
     * @return The userId of the approver.
     * 
     */
    public String approverId() {
        return this.approverId;
    }
    /**
     * @return Time for when the privilegedApi request should start that is authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeApprovedForAccess() {
        return this.timeApprovedForAccess;
    }
    /**
     * @return Time when the privilegedApi request was authorized by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeOfAuthorization() {
        return this.timeOfAuthorization;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiaccesscontrolPrivilegedApiRequestApproverDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String approvalAction;
        private String approvalComment;
        private String approverId;
        private String timeApprovedForAccess;
        private String timeOfAuthorization;
        public Builder() {}
        public Builder(GetApiaccesscontrolPrivilegedApiRequestApproverDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approvalAction = defaults.approvalAction;
    	      this.approvalComment = defaults.approvalComment;
    	      this.approverId = defaults.approverId;
    	      this.timeApprovedForAccess = defaults.timeApprovedForAccess;
    	      this.timeOfAuthorization = defaults.timeOfAuthorization;
        }

        @CustomType.Setter
        public Builder approvalAction(String approvalAction) {
            if (approvalAction == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestApproverDetail", "approvalAction");
            }
            this.approvalAction = approvalAction;
            return this;
        }
        @CustomType.Setter
        public Builder approvalComment(String approvalComment) {
            if (approvalComment == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestApproverDetail", "approvalComment");
            }
            this.approvalComment = approvalComment;
            return this;
        }
        @CustomType.Setter
        public Builder approverId(String approverId) {
            if (approverId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestApproverDetail", "approverId");
            }
            this.approverId = approverId;
            return this;
        }
        @CustomType.Setter
        public Builder timeApprovedForAccess(String timeApprovedForAccess) {
            if (timeApprovedForAccess == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestApproverDetail", "timeApprovedForAccess");
            }
            this.timeApprovedForAccess = timeApprovedForAccess;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfAuthorization(String timeOfAuthorization) {
            if (timeOfAuthorization == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestApproverDetail", "timeOfAuthorization");
            }
            this.timeOfAuthorization = timeOfAuthorization;
            return this;
        }
        public GetApiaccesscontrolPrivilegedApiRequestApproverDetail build() {
            final var _resultValue = new GetApiaccesscontrolPrivilegedApiRequestApproverDetail();
            _resultValue.approvalAction = approvalAction;
            _resultValue.approvalComment = approvalComment;
            _resultValue.approverId = approverId;
            _resultValue.timeApprovedForAccess = timeApprovedForAccess;
            _resultValue.timeOfAuthorization = timeOfAuthorization;
            return _resultValue;
        }
    }
}
