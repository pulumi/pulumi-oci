// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.oci.outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetail;
import com.pulumi.oci.oci.outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationList;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem {
    /**
     * @return Contains the approver details who have approved the privilegedApi Request during the initial request.
     * 
     */
    private List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetail> approverDetails;
    /**
     * @return The comment entered by the operator while closing the request.
     * 
     */
    private String closureComment;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private String displayName;
    /**
     * @return Duration in hours for which access is sought on the target resource.
     * 
     */
    private Integer durationInHrs;
    /**
     * @return entityType of resource for which the AccessRequest is applicable
     * 
     */
    private String entityType;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiRequest.
     * 
     */
    private String id;
    /**
     * @return more in detail about the lifeCycleState.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this privileged api request.
     * 
     */
    private String notificationTopicId;
    /**
     * @return Number of approvers required to approve an privilegedApi request.
     * 
     */
    private Integer numberOfApproversRequired;
    /**
     * @return The OCID of the privilegedApi control governing the target resource.
     * 
     */
    private String privilegedApiControlId;
    /**
     * @return Name of the privilegedApi control governing the target resource.
     * 
     */
    private String privilegedApiControlName;
    /**
     * @return List of api names, attributes for which approval is sought by the user.
     * 
     */
    private List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationList> privilegedOperationLists;
    /**
     * @return Reason in Detail for which the operator is requesting access on the target resource.
     * 
     */
    private String reasonDetail;
    /**
     * @return Summary comment by the operator creating the access request.
     * 
     */
    private String reasonSummary;
    /**
     * @return This is an automatic identifier generated by the system which is easier for human comprehension.
     * 
     */
    private String requestId;
    /**
     * @return List of Users who has created this privilegedApiRequest.
     * 
     */
    private List<String> requestedBies;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource .
     * 
     */
    private String resourceId;
    /**
     * @return resourceName for which the PrivilegedApiRequest is applicable
     * 
     */
    private String resourceName;
    /**
     * @return A filter to return only lists of resources that match the entire given service type.
     * 
     */
    private String resourceType;
    /**
     * @return Priority assigned to the access request by the operator
     * 
     */
    private String severity;
    /**
     * @return A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    private String state;
    /**
     * @return A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    private String stateDetails;
    /**
     * @return The subresource names requested for approval.
     * 
     */
    private List<String> subResourceNameLists;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return A list of ticket numbers related to this Privileged Api Access Request, e.g. Service Request (SR) number and JIRA ticket number.
     * 
     */
    private List<String> ticketNumbers;
    /**
     * @return Time when the privilegedApi request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeCreated;
    /**
     * @return Time in future when the user for the privilegedApi request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeRequestedForFutureAccess;
    /**
     * @return Time when the privilegedApi request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeUpdated;

    private GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem() {}
    /**
     * @return Contains the approver details who have approved the privilegedApi Request during the initial request.
     * 
     */
    public List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetail> approverDetails() {
        return this.approverDetails;
    }
    /**
     * @return The comment entered by the operator while closing the request.
     * 
     */
    public String closureComment() {
        return this.closureComment;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Duration in hours for which access is sought on the target resource.
     * 
     */
    public Integer durationInHrs() {
        return this.durationInHrs;
    }
    /**
     * @return entityType of resource for which the AccessRequest is applicable
     * 
     */
    public String entityType() {
        return this.entityType;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the PrivilegedApiRequest.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return more in detail about the lifeCycleState.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this privileged api request.
     * 
     */
    public String notificationTopicId() {
        return this.notificationTopicId;
    }
    /**
     * @return Number of approvers required to approve an privilegedApi request.
     * 
     */
    public Integer numberOfApproversRequired() {
        return this.numberOfApproversRequired;
    }
    /**
     * @return The OCID of the privilegedApi control governing the target resource.
     * 
     */
    public String privilegedApiControlId() {
        return this.privilegedApiControlId;
    }
    /**
     * @return Name of the privilegedApi control governing the target resource.
     * 
     */
    public String privilegedApiControlName() {
        return this.privilegedApiControlName;
    }
    /**
     * @return List of api names, attributes for which approval is sought by the user.
     * 
     */
    public List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationList> privilegedOperationLists() {
        return this.privilegedOperationLists;
    }
    /**
     * @return Reason in Detail for which the operator is requesting access on the target resource.
     * 
     */
    public String reasonDetail() {
        return this.reasonDetail;
    }
    /**
     * @return Summary comment by the operator creating the access request.
     * 
     */
    public String reasonSummary() {
        return this.reasonSummary;
    }
    /**
     * @return This is an automatic identifier generated by the system which is easier for human comprehension.
     * 
     */
    public String requestId() {
        return this.requestId;
    }
    /**
     * @return List of Users who has created this privilegedApiRequest.
     * 
     */
    public List<String> requestedBies() {
        return this.requestedBies;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource .
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return resourceName for which the PrivilegedApiRequest is applicable
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }
    /**
     * @return A filter to return only lists of resources that match the entire given service type.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return Priority assigned to the access request by the operator
     * 
     */
    public String severity() {
        return this.severity;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    public String stateDetails() {
        return this.stateDetails;
    }
    /**
     * @return The subresource names requested for approval.
     * 
     */
    public List<String> subResourceNameLists() {
        return this.subResourceNameLists;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return A list of ticket numbers related to this Privileged Api Access Request, e.g. Service Request (SR) number and JIRA ticket number.
     * 
     */
    public List<String> ticketNumbers() {
        return this.ticketNumbers;
    }
    /**
     * @return Time when the privilegedApi request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Time in future when the user for the privilegedApi request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeRequestedForFutureAccess() {
        return this.timeRequestedForFutureAccess;
    }
    /**
     * @return Time when the privilegedApi request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetail> approverDetails;
        private String closureComment;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private Integer durationInHrs;
        private String entityType;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String notificationTopicId;
        private Integer numberOfApproversRequired;
        private String privilegedApiControlId;
        private String privilegedApiControlName;
        private List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationList> privilegedOperationLists;
        private String reasonDetail;
        private String reasonSummary;
        private String requestId;
        private List<String> requestedBies;
        private String resourceId;
        private String resourceName;
        private String resourceType;
        private String severity;
        private String state;
        private String stateDetails;
        private List<String> subResourceNameLists;
        private Map<String,String> systemTags;
        private List<String> ticketNumbers;
        private String timeCreated;
        private String timeRequestedForFutureAccess;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approverDetails = defaults.approverDetails;
    	      this.closureComment = defaults.closureComment;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.durationInHrs = defaults.durationInHrs;
    	      this.entityType = defaults.entityType;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.notificationTopicId = defaults.notificationTopicId;
    	      this.numberOfApproversRequired = defaults.numberOfApproversRequired;
    	      this.privilegedApiControlId = defaults.privilegedApiControlId;
    	      this.privilegedApiControlName = defaults.privilegedApiControlName;
    	      this.privilegedOperationLists = defaults.privilegedOperationLists;
    	      this.reasonDetail = defaults.reasonDetail;
    	      this.reasonSummary = defaults.reasonSummary;
    	      this.requestId = defaults.requestId;
    	      this.requestedBies = defaults.requestedBies;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.severity = defaults.severity;
    	      this.state = defaults.state;
    	      this.stateDetails = defaults.stateDetails;
    	      this.subResourceNameLists = defaults.subResourceNameLists;
    	      this.systemTags = defaults.systemTags;
    	      this.ticketNumbers = defaults.ticketNumbers;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeRequestedForFutureAccess = defaults.timeRequestedForFutureAccess;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder approverDetails(List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetail> approverDetails) {
            if (approverDetails == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "approverDetails");
            }
            this.approverDetails = approverDetails;
            return this;
        }
        public Builder approverDetails(GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemApproverDetail... approverDetails) {
            return approverDetails(List.of(approverDetails));
        }
        @CustomType.Setter
        public Builder closureComment(String closureComment) {
            if (closureComment == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "closureComment");
            }
            this.closureComment = closureComment;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder durationInHrs(Integer durationInHrs) {
            if (durationInHrs == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "durationInHrs");
            }
            this.durationInHrs = durationInHrs;
            return this;
        }
        @CustomType.Setter
        public Builder entityType(String entityType) {
            if (entityType == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "entityType");
            }
            this.entityType = entityType;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder notificationTopicId(String notificationTopicId) {
            if (notificationTopicId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "notificationTopicId");
            }
            this.notificationTopicId = notificationTopicId;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfApproversRequired(Integer numberOfApproversRequired) {
            if (numberOfApproversRequired == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "numberOfApproversRequired");
            }
            this.numberOfApproversRequired = numberOfApproversRequired;
            return this;
        }
        @CustomType.Setter
        public Builder privilegedApiControlId(String privilegedApiControlId) {
            if (privilegedApiControlId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "privilegedApiControlId");
            }
            this.privilegedApiControlId = privilegedApiControlId;
            return this;
        }
        @CustomType.Setter
        public Builder privilegedApiControlName(String privilegedApiControlName) {
            if (privilegedApiControlName == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "privilegedApiControlName");
            }
            this.privilegedApiControlName = privilegedApiControlName;
            return this;
        }
        @CustomType.Setter
        public Builder privilegedOperationLists(List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationList> privilegedOperationLists) {
            if (privilegedOperationLists == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "privilegedOperationLists");
            }
            this.privilegedOperationLists = privilegedOperationLists;
            return this;
        }
        public Builder privilegedOperationLists(GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItemPrivilegedOperationList... privilegedOperationLists) {
            return privilegedOperationLists(List.of(privilegedOperationLists));
        }
        @CustomType.Setter
        public Builder reasonDetail(String reasonDetail) {
            if (reasonDetail == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "reasonDetail");
            }
            this.reasonDetail = reasonDetail;
            return this;
        }
        @CustomType.Setter
        public Builder reasonSummary(String reasonSummary) {
            if (reasonSummary == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "reasonSummary");
            }
            this.reasonSummary = reasonSummary;
            return this;
        }
        @CustomType.Setter
        public Builder requestId(String requestId) {
            if (requestId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "requestId");
            }
            this.requestId = requestId;
            return this;
        }
        @CustomType.Setter
        public Builder requestedBies(List<String> requestedBies) {
            if (requestedBies == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "requestedBies");
            }
            this.requestedBies = requestedBies;
            return this;
        }
        public Builder requestedBies(String... requestedBies) {
            return requestedBies(List.of(requestedBies));
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(String resourceName) {
            if (resourceName == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "resourceName");
            }
            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder severity(String severity) {
            if (severity == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "severity");
            }
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stateDetails(String stateDetails) {
            if (stateDetails == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "stateDetails");
            }
            this.stateDetails = stateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder subResourceNameLists(List<String> subResourceNameLists) {
            if (subResourceNameLists == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "subResourceNameLists");
            }
            this.subResourceNameLists = subResourceNameLists;
            return this;
        }
        public Builder subResourceNameLists(String... subResourceNameLists) {
            return subResourceNameLists(List.of(subResourceNameLists));
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder ticketNumbers(List<String> ticketNumbers) {
            if (ticketNumbers == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "ticketNumbers");
            }
            this.ticketNumbers = ticketNumbers;
            return this;
        }
        public Builder ticketNumbers(String... ticketNumbers) {
            return ticketNumbers(List.of(ticketNumbers));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeRequestedForFutureAccess(String timeRequestedForFutureAccess) {
            if (timeRequestedForFutureAccess == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "timeRequestedForFutureAccess");
            }
            this.timeRequestedForFutureAccess = timeRequestedForFutureAccess;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem build() {
            final var _resultValue = new GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollectionItem();
            _resultValue.approverDetails = approverDetails;
            _resultValue.closureComment = closureComment;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.durationInHrs = durationInHrs;
            _resultValue.entityType = entityType;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.notificationTopicId = notificationTopicId;
            _resultValue.numberOfApproversRequired = numberOfApproversRequired;
            _resultValue.privilegedApiControlId = privilegedApiControlId;
            _resultValue.privilegedApiControlName = privilegedApiControlName;
            _resultValue.privilegedOperationLists = privilegedOperationLists;
            _resultValue.reasonDetail = reasonDetail;
            _resultValue.reasonSummary = reasonSummary;
            _resultValue.requestId = requestId;
            _resultValue.requestedBies = requestedBies;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceName = resourceName;
            _resultValue.resourceType = resourceType;
            _resultValue.severity = severity;
            _resultValue.state = state;
            _resultValue.stateDetails = stateDetails;
            _resultValue.subResourceNameLists = subResourceNameLists;
            _resultValue.systemTags = systemTags;
            _resultValue.ticketNumbers = ticketNumbers;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeRequestedForFutureAccess = timeRequestedForFutureAccess;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
