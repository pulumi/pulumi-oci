// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.oci.outputs.GetApiaccesscontrolPrivilegedApiRequestsFilter;
import com.pulumi.oci.oci.outputs.GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetApiaccesscontrolPrivilegedApiRequestsResult {
    /**
     * @return The OCID of the compartment that contains the access request.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Name of the privilegedApi control. The name must be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetApiaccesscontrolPrivilegedApiRequestsFilter> filters;
    /**
     * @return The OCID of the privilegedApi request.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of privileged_api_request_collection.
     * 
     */
    private List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollection> privilegedApiRequestCollections;
    /**
     * @return The OCID of the target resource associated with the access request. The operator raises an access request to get approval to access the target resource.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return resourceType for which the AccessRequest is applicable
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The current state of the PrivilegedApiRequest.
     * 
     */
    private @Nullable String state;

    private GetApiaccesscontrolPrivilegedApiRequestsResult() {}
    /**
     * @return The OCID of the compartment that contains the access request.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Name of the privilegedApi control. The name must be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetApiaccesscontrolPrivilegedApiRequestsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The OCID of the privilegedApi request.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of privileged_api_request_collection.
     * 
     */
    public List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollection> privilegedApiRequestCollections() {
        return this.privilegedApiRequestCollections;
    }
    /**
     * @return The OCID of the target resource associated with the access request. The operator raises an access request to get approval to access the target resource.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return resourceType for which the AccessRequest is applicable
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The current state of the PrivilegedApiRequest.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiaccesscontrolPrivilegedApiRequestsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetApiaccesscontrolPrivilegedApiRequestsFilter> filters;
        private @Nullable String id;
        private List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollection> privilegedApiRequestCollections;
        private @Nullable String resourceId;
        private @Nullable String resourceType;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetApiaccesscontrolPrivilegedApiRequestsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.privilegedApiRequestCollections = defaults.privilegedApiRequestCollections;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetApiaccesscontrolPrivilegedApiRequestsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetApiaccesscontrolPrivilegedApiRequestsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder privilegedApiRequestCollections(List<GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollection> privilegedApiRequestCollections) {
            if (privilegedApiRequestCollections == null) {
              throw new MissingRequiredPropertyException("GetApiaccesscontrolPrivilegedApiRequestsResult", "privilegedApiRequestCollections");
            }
            this.privilegedApiRequestCollections = privilegedApiRequestCollections;
            return this;
        }
        public Builder privilegedApiRequestCollections(GetApiaccesscontrolPrivilegedApiRequestsPrivilegedApiRequestCollection... privilegedApiRequestCollections) {
            return privilegedApiRequestCollections(List.of(privilegedApiRequestCollections));
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetApiaccesscontrolPrivilegedApiRequestsResult build() {
            final var _resultValue = new GetApiaccesscontrolPrivilegedApiRequestsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.privilegedApiRequestCollections = privilegedApiRequestCollections;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
