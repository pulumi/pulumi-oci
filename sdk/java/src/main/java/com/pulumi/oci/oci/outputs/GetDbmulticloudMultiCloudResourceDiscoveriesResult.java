// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.oci.outputs.GetDbmulticloudMultiCloudResourceDiscoveriesFilter;
import com.pulumi.oci.oci.outputs.GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbmulticloudMultiCloudResourceDiscoveriesResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains Multi Cloud Discovery Resource.
     * 
     */
    private String compartmentId;
    /**
     * @return Display name of Multi Cloud Discovery Resource.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetDbmulticloudMultiCloudResourceDiscoveriesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String multiCloudResourceDiscoveryId;
    /**
     * @return The list of multi_cloud_resource_discovery_summary_collection.
     * 
     */
    private List<GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollection> multiCloudResourceDiscoverySummaryCollections;
    private @Nullable String oracleDbAzureConnectorId;
    /**
     * @return Resource Type to discover.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The current lifecycle state of the discovered resource.
     * 
     */
    private @Nullable String state;

    private GetDbmulticloudMultiCloudResourceDiscoveriesResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains Multi Cloud Discovery Resource.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Display name of Multi Cloud Discovery Resource.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetDbmulticloudMultiCloudResourceDiscoveriesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> multiCloudResourceDiscoveryId() {
        return Optional.ofNullable(this.multiCloudResourceDiscoveryId);
    }
    /**
     * @return The list of multi_cloud_resource_discovery_summary_collection.
     * 
     */
    public List<GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollection> multiCloudResourceDiscoverySummaryCollections() {
        return this.multiCloudResourceDiscoverySummaryCollections;
    }
    public Optional<String> oracleDbAzureConnectorId() {
        return Optional.ofNullable(this.oracleDbAzureConnectorId);
    }
    /**
     * @return Resource Type to discover.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The current lifecycle state of the discovered resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbmulticloudMultiCloudResourceDiscoveriesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetDbmulticloudMultiCloudResourceDiscoveriesFilter> filters;
        private String id;
        private @Nullable String multiCloudResourceDiscoveryId;
        private List<GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollection> multiCloudResourceDiscoverySummaryCollections;
        private @Nullable String oracleDbAzureConnectorId;
        private @Nullable String resourceType;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetDbmulticloudMultiCloudResourceDiscoveriesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.multiCloudResourceDiscoveryId = defaults.multiCloudResourceDiscoveryId;
    	      this.multiCloudResourceDiscoverySummaryCollections = defaults.multiCloudResourceDiscoverySummaryCollections;
    	      this.oracleDbAzureConnectorId = defaults.oracleDbAzureConnectorId;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDbmulticloudMultiCloudResourceDiscoveriesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDbmulticloudMultiCloudResourceDiscoveriesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetDbmulticloudMultiCloudResourceDiscoveriesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbmulticloudMultiCloudResourceDiscoveriesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder multiCloudResourceDiscoveryId(@Nullable String multiCloudResourceDiscoveryId) {

            this.multiCloudResourceDiscoveryId = multiCloudResourceDiscoveryId;
            return this;
        }
        @CustomType.Setter
        public Builder multiCloudResourceDiscoverySummaryCollections(List<GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollection> multiCloudResourceDiscoverySummaryCollections) {
            if (multiCloudResourceDiscoverySummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetDbmulticloudMultiCloudResourceDiscoveriesResult", "multiCloudResourceDiscoverySummaryCollections");
            }
            this.multiCloudResourceDiscoverySummaryCollections = multiCloudResourceDiscoverySummaryCollections;
            return this;
        }
        public Builder multiCloudResourceDiscoverySummaryCollections(GetDbmulticloudMultiCloudResourceDiscoveriesMultiCloudResourceDiscoverySummaryCollection... multiCloudResourceDiscoverySummaryCollections) {
            return multiCloudResourceDiscoverySummaryCollections(List.of(multiCloudResourceDiscoverySummaryCollections));
        }
        @CustomType.Setter
        public Builder oracleDbAzureConnectorId(@Nullable String oracleDbAzureConnectorId) {

            this.oracleDbAzureConnectorId = oracleDbAzureConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetDbmulticloudMultiCloudResourceDiscoveriesResult build() {
            final var _resultValue = new GetDbmulticloudMultiCloudResourceDiscoveriesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.multiCloudResourceDiscoveryId = multiCloudResourceDiscoveryId;
            _resultValue.multiCloudResourceDiscoverySummaryCollections = multiCloudResourceDiscoverySummaryCollections;
            _resultValue.oracleDbAzureConnectorId = oracleDbAzureConnectorId;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
