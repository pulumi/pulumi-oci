// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.oci.outputs.GetManagedKafkaKafkaClusterConfigVersionsFilter;
import com.pulumi.oci.oci.outputs.GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedKafkaKafkaClusterConfigVersionsResult {
    private @Nullable List<GetManagedKafkaKafkaClusterConfigVersionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String kafkaClusterConfigId;
    /**
     * @return The list of kafka_cluster_config_version_collection.
     * 
     */
    private List<GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollection> kafkaClusterConfigVersionCollections;

    private GetManagedKafkaKafkaClusterConfigVersionsResult() {}
    public List<GetManagedKafkaKafkaClusterConfigVersionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String kafkaClusterConfigId() {
        return this.kafkaClusterConfigId;
    }
    /**
     * @return The list of kafka_cluster_config_version_collection.
     * 
     */
    public List<GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollection> kafkaClusterConfigVersionCollections() {
        return this.kafkaClusterConfigVersionCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedKafkaKafkaClusterConfigVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetManagedKafkaKafkaClusterConfigVersionsFilter> filters;
        private String id;
        private String kafkaClusterConfigId;
        private List<GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollection> kafkaClusterConfigVersionCollections;
        public Builder() {}
        public Builder(GetManagedKafkaKafkaClusterConfigVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.kafkaClusterConfigId = defaults.kafkaClusterConfigId;
    	      this.kafkaClusterConfigVersionCollections = defaults.kafkaClusterConfigVersionCollections;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedKafkaKafkaClusterConfigVersionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedKafkaKafkaClusterConfigVersionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedKafkaKafkaClusterConfigVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaClusterConfigId(String kafkaClusterConfigId) {
            if (kafkaClusterConfigId == null) {
              throw new MissingRequiredPropertyException("GetManagedKafkaKafkaClusterConfigVersionsResult", "kafkaClusterConfigId");
            }
            this.kafkaClusterConfigId = kafkaClusterConfigId;
            return this;
        }
        @CustomType.Setter
        public Builder kafkaClusterConfigVersionCollections(List<GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollection> kafkaClusterConfigVersionCollections) {
            if (kafkaClusterConfigVersionCollections == null) {
              throw new MissingRequiredPropertyException("GetManagedKafkaKafkaClusterConfigVersionsResult", "kafkaClusterConfigVersionCollections");
            }
            this.kafkaClusterConfigVersionCollections = kafkaClusterConfigVersionCollections;
            return this;
        }
        public Builder kafkaClusterConfigVersionCollections(GetManagedKafkaKafkaClusterConfigVersionsKafkaClusterConfigVersionCollection... kafkaClusterConfigVersionCollections) {
            return kafkaClusterConfigVersionCollections(List.of(kafkaClusterConfigVersionCollections));
        }
        public GetManagedKafkaKafkaClusterConfigVersionsResult build() {
            final var _resultValue = new GetManagedKafkaKafkaClusterConfigVersionsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.kafkaClusterConfigId = kafkaClusterConfigId;
            _resultValue.kafkaClusterConfigVersionCollections = kafkaClusterConfigVersionCollections;
            return _resultValue;
        }
    }
}
