// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.oci.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem {
    /**
     * @return The description of the WebLogic patch.
     * 
     */
    private String description;
    /**
     * @return The name of the WebLogic patch.
     * 
     */
    private String displayName;
    /**
     * @return The ID of the WebLogic patch.
     * 
     */
    private String id;
    /**
     * @return The type of middleware for which this patch is applicable. A patch can be applicable to more than one type of middleware.
     * 
     */
    private List<String> middlewareTypes;
    /**
     * @return The operating system architecture for which the patch can be applied.
     * 
     */
    private String osArch;
    /**
     * @return The WebLogic version for this patch. The patch can be installed to domains with this version.
     * 
     */
    private String weblogicVersion;

    private GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem() {}
    /**
     * @return The description of the WebLogic patch.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The name of the WebLogic patch.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The ID of the WebLogic patch.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The type of middleware for which this patch is applicable. A patch can be applicable to more than one type of middleware.
     * 
     */
    public List<String> middlewareTypes() {
        return this.middlewareTypes;
    }
    /**
     * @return The operating system architecture for which the patch can be applied.
     * 
     */
    public String osArch() {
        return this.osArch;
    }
    /**
     * @return The WebLogic version for this patch. The patch can be installed to domains with this version.
     * 
     */
    public String weblogicVersion() {
        return this.weblogicVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private String id;
        private List<String> middlewareTypes;
        private String osArch;
        private String weblogicVersion;
        public Builder() {}
        public Builder(GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.middlewareTypes = defaults.middlewareTypes;
    	      this.osArch = defaults.osArch;
    	      this.weblogicVersion = defaults.weblogicVersion;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder middlewareTypes(List<String> middlewareTypes) {
            if (middlewareTypes == null) {
              throw new MissingRequiredPropertyException("GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem", "middlewareTypes");
            }
            this.middlewareTypes = middlewareTypes;
            return this;
        }
        public Builder middlewareTypes(String... middlewareTypes) {
            return middlewareTypes(List.of(middlewareTypes));
        }
        @CustomType.Setter
        public Builder osArch(String osArch) {
            if (osArch == null) {
              throw new MissingRequiredPropertyException("GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem", "osArch");
            }
            this.osArch = osArch;
            return this;
        }
        @CustomType.Setter
        public Builder weblogicVersion(String weblogicVersion) {
            if (weblogicVersion == null) {
              throw new MissingRequiredPropertyException("GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem", "weblogicVersion");
            }
            this.weblogicVersion = weblogicVersion;
            return this;
        }
        public GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem build() {
            final var _resultValue = new GetWlmsWlsDomainApplicablePatchesApplicablePatchCollectionItem();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.middlewareTypes = middlewareTypes;
            _resultValue.osArch = osArch;
            _resultValue.weblogicVersion = weblogicVersion;
            return _resultValue;
        }
    }
}
