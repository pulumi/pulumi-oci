// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Remediation Recipes in Oracle Cloud Infrastructure Adm service.
 *
 * Returns a list of Remediation Recipes based on the specified query parameters.
 * The query parameters `compartmentId` or `id` must be provided.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRemediationRecipes = oci.Adm.getRemediationRecipes({
 *     compartmentId: compartmentId,
 *     displayName: remediationRecipeDisplayName,
 *     id: remediationRecipeId,
 *     state: remediationRecipeState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRemediationRecipes(args?: GetRemediationRecipesArgs, opts?: pulumi.InvokeOptions): Promise<GetRemediationRecipesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Adm/getRemediationRecipes:getRemediationRecipes", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getRemediationRecipes.
 */
export interface GetRemediationRecipesArgs {
    /**
     * A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.Adm.GetRemediationRecipesFilter[];
    /**
     * A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
     */
    id?: string;
    /**
     * A filter to return only Remediation Recipes that match the specified lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getRemediationRecipes.
 */
export interface GetRemediationRecipesResult {
    /**
     * The compartment Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
     */
    readonly compartmentId?: string;
    /**
     * The name of the Remediation Recipe.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Adm.GetRemediationRecipesFilter[];
    /**
     * The Oracle Cloud Identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the remediation recipe.
     */
    readonly id?: string;
    /**
     * The list of remediation_recipe_collection.
     */
    readonly remediationRecipeCollections: outputs.Adm.GetRemediationRecipesRemediationRecipeCollection[];
    /**
     * The current lifecycle state of the Remediation Recipe.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Remediation Recipes in Oracle Cloud Infrastructure Adm service.
 *
 * Returns a list of Remediation Recipes based on the specified query parameters.
 * The query parameters `compartmentId` or `id` must be provided.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRemediationRecipes = oci.Adm.getRemediationRecipes({
 *     compartmentId: compartmentId,
 *     displayName: remediationRecipeDisplayName,
 *     id: remediationRecipeId,
 *     state: remediationRecipeState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRemediationRecipesOutput(args?: GetRemediationRecipesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRemediationRecipesResult> {
    return pulumi.output(args).apply((a: any) => getRemediationRecipes(a, opts))
}

/**
 * A collection of arguments for invoking getRemediationRecipes.
 */
export interface GetRemediationRecipesOutputArgs {
    /**
     * A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Adm.GetRemediationRecipesFilterArgs>[]>;
    /**
     * A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only Remediation Recipes that match the specified lifecycleState.
     */
    state?: pulumi.Input<string>;
}
