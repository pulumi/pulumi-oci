// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Vulnerability Audit resource in Oracle Cloud Infrastructure ADM service.
 *
 * Returns the details of the specified Vulnerability Audit.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityAudit = oci.Adm.getVulnerabilityAudit({
 *     vulnerabilityAuditId: oci_adm_vulnerability_audit.test_vulnerability_audit.id,
 * });
 * ```
 */
export function getVulnerabilityAudit(args: GetVulnerabilityAuditArgs, opts?: pulumi.InvokeOptions): Promise<GetVulnerabilityAuditResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Adm/getVulnerabilityAudit:getVulnerabilityAudit", {
        "vulnerabilityAuditId": args.vulnerabilityAuditId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerabilityAudit.
 */
export interface GetVulnerabilityAuditArgs {
    /**
     * Unique Vulnerability Audit identifier path parameter.
     */
    vulnerabilityAuditId: string;
}

/**
 * A collection of values returned by getVulnerabilityAudit.
 */
export interface GetVulnerabilityAuditResult {
    readonly applicationDependencies: outputs.Adm.GetVulnerabilityAuditApplicationDependency[];
    /**
     * The type of the build tool.
     */
    readonly buildType: string;
    /**
     * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
     */
    readonly compartmentId: string;
    /**
     * Configuration for a Vulnerability Audit type: object
     */
    readonly configurations: outputs.Adm.GetVulnerabilityAuditConfiguration[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * The name of the Vulnerability Audit.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * Unique vulnerability identifier.
     */
    readonly id: string;
    /**
     * Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
     */
    readonly isSuccess: boolean;
    /**
     * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
     */
    readonly knowledgeBaseId: string;
    /**
     * Maximum Common Vulnerability Scoring System Version 2 score of vulnerabilities.
     */
    readonly maxObservedCvssV2score: number;
    /**
     * Maximum Common Vulnerability Scoring System Version 3 score of vulnerabilities.
     */
    readonly maxObservedCvssV3score: number;
    /**
     * The current lifecycle state of the Vulnerability Audit.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The creation date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    readonly timeCreated: string;
    /**
     * The update date and time of the Vulnerability Audit (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    readonly timeUpdated: string;
    /**
     * List of vulnerabilities found in the Vulnerability Audit.
     */
    readonly vulnerabilities: outputs.Adm.GetVulnerabilityAuditVulnerability[];
    readonly vulnerabilityAuditId: string;
    /**
     * Count of vulnerable artifacts.
     */
    readonly vulnerableArtifactsCount: number;
}

export function getVulnerabilityAuditOutput(args: GetVulnerabilityAuditOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVulnerabilityAuditResult> {
    return pulumi.output(args).apply(a => getVulnerabilityAudit(a, opts))
}

/**
 * A collection of arguments for invoking getVulnerabilityAudit.
 */
export interface GetVulnerabilityAuditOutputArgs {
    /**
     * Unique Vulnerability Audit identifier path parameter.
     */
    vulnerabilityAuditId: pulumi.Input<string>;
}
