// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Vulnerability Audit Application Dependency Vulnerability resource in Oracle Cloud Infrastructure ADM service.
 *
 * Returns a list of Application Dependencies with their associated vulnerabilities.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityAuditApplicationDependencyVulnerability = oci.Adm.getVulnerabilityAuditApplicationDependencyVulnerability({
 *     vulnerabilityAuditId: oci_adm_vulnerability_audit.test_vulnerability_audit.id,
 *     cvssV2greaterThanOrEqual: _var.vulnerability_audit_application_dependency_vulnerability_cvss_v2greater_than_or_equal,
 *     cvssV3greaterThanOrEqual: _var.vulnerability_audit_application_dependency_vulnerability_cvss_v3greater_than_or_equal,
 *     depth: _var.vulnerability_audit_application_dependency_vulnerability_depth,
 *     gav: _var.vulnerability_audit_application_dependency_vulnerability_gav,
 *     rootNodeId: oci_adm_root_node.test_root_node.id,
 *     vulnerabilityId: oci_adm_vulnerability.test_vulnerability.id,
 * });
 * ```
 */
export function getVulnerabilityAuditApplicationDependencyVulnerability(args: GetVulnerabilityAuditApplicationDependencyVulnerabilityArgs, opts?: pulumi.InvokeOptions): Promise<GetVulnerabilityAuditApplicationDependencyVulnerabilityResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Adm/getVulnerabilityAuditApplicationDependencyVulnerability:getVulnerabilityAuditApplicationDependencyVulnerability", {
        "cvssV2greaterThanOrEqual": args.cvssV2greaterThanOrEqual,
        "cvssV3greaterThanOrEqual": args.cvssV3greaterThanOrEqual,
        "depth": args.depth,
        "gav": args.gav,
        "rootNodeId": args.rootNodeId,
        "sortBy": args.sortBy,
        "vulnerabilityAuditId": args.vulnerabilityAuditId,
        "vulnerabilityId": args.vulnerabilityId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerabilityAuditApplicationDependencyVulnerability.
 */
export interface GetVulnerabilityAuditApplicationDependencyVulnerabilityArgs {
    /**
     * A filter that returns only Vulnerability Audits that have a Common Vulnerability Scoring System Version 2 (CVSS V2) greater or equal than the specified value.
     */
    cvssV2greaterThanOrEqual?: number;
    /**
     * A filter that returns only Vulnerability Audits that have a Common Vulnerability Scoring System Version 3 (CVSS V3) greater or equal than the specified value.
     */
    cvssV3greaterThanOrEqual?: number;
    /**
     * A filter to limit depth of the application dependencies tree traversal. Additionally query parameters such as "cvssV2GreaterThanOrEqual", "cvssV3GreaterThanOrEqual", "gav" and "vulnerabilityId" can't be used in conjunction with this latter.
     */
    depth?: number;
    /**
     * A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     */
    gav?: string;
    /**
     * A filter to override the top level root identifier with the new given value. The application dependency tree will only be traversed from the given node. Query parameters "cvssV2GreaterThanOrEqual", "cvssV3GreaterThanOrEqual", "gav" and "vulnerabilityId" cannot be used in conjunction with this parameter.
     */
    rootNodeId?: string;
    sortBy?: string;
    /**
     * Unique Vulnerability Audit identifier path parameter.
     */
    vulnerabilityAuditId: string;
    /**
     * A filter to return only Vulnerability Audits that match the specified id.
     */
    vulnerabilityId?: string;
}

/**
 * A collection of values returned by getVulnerabilityAuditApplicationDependencyVulnerability.
 */
export interface GetVulnerabilityAuditApplicationDependencyVulnerabilityResult {
    readonly cvssV2greaterThanOrEqual?: number;
    readonly cvssV3greaterThanOrEqual?: number;
    readonly depth?: number;
    /**
     * Group Artifact Version (GAV) identifier (Group:Artifact:Version), for example org.graalvm.nativeimage:svm:21.1.0.
     */
    readonly gav?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * List of Vulnerability Audit summaries.
     */
    readonly items?: outputs.Adm.GetVulnerabilityAuditApplicationDependencyVulnerabilityItem[];
    readonly rootNodeId?: string;
    readonly sortBy?: string;
    readonly vulnerabilityAuditId: string;
    readonly vulnerabilityId?: string;
}
/**
 * This data source provides details about a specific Vulnerability Audit Application Dependency Vulnerability resource in Oracle Cloud Infrastructure ADM service.
 *
 * Returns a list of Application Dependencies with their associated vulnerabilities.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityAuditApplicationDependencyVulnerability = oci.Adm.getVulnerabilityAuditApplicationDependencyVulnerability({
 *     vulnerabilityAuditId: oci_adm_vulnerability_audit.test_vulnerability_audit.id,
 *     cvssV2greaterThanOrEqual: _var.vulnerability_audit_application_dependency_vulnerability_cvss_v2greater_than_or_equal,
 *     cvssV3greaterThanOrEqual: _var.vulnerability_audit_application_dependency_vulnerability_cvss_v3greater_than_or_equal,
 *     depth: _var.vulnerability_audit_application_dependency_vulnerability_depth,
 *     gav: _var.vulnerability_audit_application_dependency_vulnerability_gav,
 *     rootNodeId: oci_adm_root_node.test_root_node.id,
 *     vulnerabilityId: oci_adm_vulnerability.test_vulnerability.id,
 * });
 * ```
 */
export function getVulnerabilityAuditApplicationDependencyVulnerabilityOutput(args: GetVulnerabilityAuditApplicationDependencyVulnerabilityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVulnerabilityAuditApplicationDependencyVulnerabilityResult> {
    return pulumi.output(args).apply((a: any) => getVulnerabilityAuditApplicationDependencyVulnerability(a, opts))
}

/**
 * A collection of arguments for invoking getVulnerabilityAuditApplicationDependencyVulnerability.
 */
export interface GetVulnerabilityAuditApplicationDependencyVulnerabilityOutputArgs {
    /**
     * A filter that returns only Vulnerability Audits that have a Common Vulnerability Scoring System Version 2 (CVSS V2) greater or equal than the specified value.
     */
    cvssV2greaterThanOrEqual?: pulumi.Input<number>;
    /**
     * A filter that returns only Vulnerability Audits that have a Common Vulnerability Scoring System Version 3 (CVSS V3) greater or equal than the specified value.
     */
    cvssV3greaterThanOrEqual?: pulumi.Input<number>;
    /**
     * A filter to limit depth of the application dependencies tree traversal. Additionally query parameters such as "cvssV2GreaterThanOrEqual", "cvssV3GreaterThanOrEqual", "gav" and "vulnerabilityId" can't be used in conjunction with this latter.
     */
    depth?: pulumi.Input<number>;
    /**
     * A filter to return only resources that match the entire GAV (Group Artifact Version) identifier given.
     */
    gav?: pulumi.Input<string>;
    /**
     * A filter to override the top level root identifier with the new given value. The application dependency tree will only be traversed from the given node. Query parameters "cvssV2GreaterThanOrEqual", "cvssV3GreaterThanOrEqual", "gav" and "vulnerabilityId" cannot be used in conjunction with this parameter.
     */
    rootNodeId?: pulumi.Input<string>;
    sortBy?: pulumi.Input<string>;
    /**
     * Unique Vulnerability Audit identifier path parameter.
     */
    vulnerabilityAuditId: pulumi.Input<string>;
    /**
     * A filter to return only Vulnerability Audits that match the specified id.
     */
    vulnerabilityId?: pulumi.Input<string>;
}
