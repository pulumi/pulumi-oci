// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Vulnerability Audits in Oracle Cloud Infrastructure ADM service.
 *
 * Returns a list of Vulnerability Audits based on the specified query parameters.
 * At least one of id, compartmentId query parameter must be provided.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityAudits = oci.Adm.getVulnerabilityAudits({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.vulnerability_audit_display_name,
 *     id: _var.vulnerability_audit_id,
 *     isSuccess: _var.vulnerability_audit_is_success,
 *     knowledgeBaseId: oci_adm_knowledge_base.test_knowledge_base.id,
 *     state: _var.vulnerability_audit_state,
 * });
 * ```
 */
export function getVulnerabilityAudits(args?: GetVulnerabilityAuditsArgs, opts?: pulumi.InvokeOptions): Promise<GetVulnerabilityAuditsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Adm/getVulnerabilityAudits:getVulnerabilityAudits", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "isSuccess": args.isSuccess,
        "knowledgeBaseId": args.knowledgeBaseId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerabilityAudits.
 */
export interface GetVulnerabilityAuditsArgs {
    /**
     * A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.Adm.GetVulnerabilityAuditsFilter[];
    /**
     * A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
     */
    id?: string;
    /**
     * A filter to return only successful or failed Vulnerability Audits.
     */
    isSuccess?: boolean;
    /**
     * A filter to return only Vulnerability Audits that were created against the specified knowledge base.
     */
    knowledgeBaseId?: string;
    /**
     * A filter to return only Vulnerability Audits that match the specified lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getVulnerabilityAudits.
 */
export interface GetVulnerabilityAuditsResult {
    /**
     * The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the vulnerability audit.
     */
    readonly compartmentId?: string;
    /**
     * The name of the vulnerability audit.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Adm.GetVulnerabilityAuditsFilter[];
    /**
     * Unique vulnerability identifier, e.g. CVE-1999-0067.
     */
    readonly id?: string;
    /**
     * Indicates if an audit succeeded according to the configuration. The value is `null` if the audit is in the `CREATING` state.
     */
    readonly isSuccess?: boolean;
    /**
     * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the knowledge base.
     */
    readonly knowledgeBaseId?: string;
    /**
     * The current lifecycle state of the vulnerability audit.
     */
    readonly state?: string;
    /**
     * The list of vulnerability_audit_collection.
     */
    readonly vulnerabilityAuditCollections: outputs.Adm.GetVulnerabilityAuditsVulnerabilityAuditCollection[];
}
/**
 * This data source provides the list of Vulnerability Audits in Oracle Cloud Infrastructure ADM service.
 *
 * Returns a list of Vulnerability Audits based on the specified query parameters.
 * At least one of id, compartmentId query parameter must be provided.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityAudits = oci.Adm.getVulnerabilityAudits({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.vulnerability_audit_display_name,
 *     id: _var.vulnerability_audit_id,
 *     isSuccess: _var.vulnerability_audit_is_success,
 *     knowledgeBaseId: oci_adm_knowledge_base.test_knowledge_base.id,
 *     state: _var.vulnerability_audit_state,
 * });
 * ```
 */
export function getVulnerabilityAuditsOutput(args?: GetVulnerabilityAuditsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVulnerabilityAuditsResult> {
    return pulumi.output(args).apply((a: any) => getVulnerabilityAudits(a, opts))
}

/**
 * A collection of arguments for invoking getVulnerabilityAudits.
 */
export interface GetVulnerabilityAuditsOutputArgs {
    /**
     * A filter to return only resources that belong to the specified compartment identifier. Required only if the id query param is not specified.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Adm.GetVulnerabilityAuditsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the specified identifier. Required only if the compartmentId query parameter is not specified.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only successful or failed Vulnerability Audits.
     */
    isSuccess?: pulumi.Input<boolean>;
    /**
     * A filter to return only Vulnerability Audits that were created against the specified knowledge base.
     */
    knowledgeBaseId?: pulumi.Input<string>;
    /**
     * A filter to return only Vulnerability Audits that match the specified lifecycleState.
     */
    state?: pulumi.Input<string>;
}
