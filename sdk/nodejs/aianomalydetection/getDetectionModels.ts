// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Models in Oracle Cloud Infrastructure Ai Anomaly Detection service.
 *
 * Returns a list of Models.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testModels = oci.AiAnomalyDetection.getDetectionModels({
 *     compartmentId: compartmentId,
 *     displayName: modelDisplayName,
 *     projectId: testProject.id,
 *     state: modelState,
 * });
 * ```
 */
export function getDetectionModels(args: GetDetectionModelsArgs, opts?: pulumi.InvokeOptions): Promise<GetDetectionModelsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:AiAnomalyDetection/getDetectionModels:getDetectionModels", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "projectId": args.projectId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDetectionModels.
 */
export interface GetDetectionModelsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.AiAnomalyDetection.GetDetectionModelsFilter[];
    /**
     * The ID of the project for which to list the objects.
     */
    projectId?: string;
    /**
     * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state?: string;
}

/**
 * A collection of values returned by getDetectionModels.
 */
export interface GetDetectionModelsResult {
    /**
     * The OCID for the model's compartment.
     */
    readonly compartmentId: string;
    /**
     * A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.AiAnomalyDetection.GetDetectionModelsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of model_collection.
     */
    readonly modelCollections: outputs.AiAnomalyDetection.GetDetectionModelsModelCollection[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
     */
    readonly projectId?: string;
    /**
     * The state of the model.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Models in Oracle Cloud Infrastructure Ai Anomaly Detection service.
 *
 * Returns a list of Models.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testModels = oci.AiAnomalyDetection.getDetectionModels({
 *     compartmentId: compartmentId,
 *     displayName: modelDisplayName,
 *     projectId: testProject.id,
 *     state: modelState,
 * });
 * ```
 */
export function getDetectionModelsOutput(args: GetDetectionModelsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDetectionModelsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:AiAnomalyDetection/getDetectionModels:getDetectionModels", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "projectId": args.projectId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDetectionModels.
 */
export interface GetDetectionModelsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.AiAnomalyDetection.GetDetectionModelsFilterArgs>[]>;
    /**
     * The ID of the project for which to list the objects.
     */
    projectId?: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state?: pulumi.Input<string>;
}
