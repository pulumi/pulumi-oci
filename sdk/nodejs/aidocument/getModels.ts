// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Models in Oracle Cloud Infrastructure Ai Document service.
 *
 * Returns a list of models in a compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testModels = oci.AiDocument.getModels({
 *     compartmentId: compartmentId,
 *     displayName: modelDisplayName,
 *     id: modelId,
 *     projectId: testProject.id,
 *     state: modelState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getModels(args?: GetModelsArgs, opts?: pulumi.InvokeOptions): Promise<GetModelsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:AiDocument/getModels:getModels", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "projectId": args.projectId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getModels.
 */
export interface GetModelsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.AiDocument.GetModelsFilter[];
    /**
     * The filter to find the model with the given identifier.
     */
    id?: string;
    /**
     * The ID of the project for which to list the objects.
     */
    projectId?: string;
    /**
     * The filter to match models with the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getModels.
 */
export interface GetModelsResult {
    /**
     * The compartment identifier.
     */
    readonly compartmentId?: string;
    /**
     * A human-friendly name for the model, which can be changed.
     */
    readonly displayName?: string;
    readonly filters?: outputs.AiDocument.GetModelsFilter[];
    /**
     * A unique identifier that is immutable after creation.
     */
    readonly id?: string;
    /**
     * The list of model_collection.
     */
    readonly modelCollections: outputs.AiDocument.GetModelsModelCollection[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project that contains the model.
     */
    readonly projectId?: string;
    /**
     * The current state of the model.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Models in Oracle Cloud Infrastructure Ai Document service.
 *
 * Returns a list of models in a compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testModels = oci.AiDocument.getModels({
 *     compartmentId: compartmentId,
 *     displayName: modelDisplayName,
 *     id: modelId,
 *     projectId: testProject.id,
 *     state: modelState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getModelsOutput(args?: GetModelsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetModelsResult> {
    return pulumi.output(args).apply((a: any) => getModels(a, opts))
}

/**
 * A collection of arguments for invoking getModels.
 */
export interface GetModelsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.AiDocument.GetModelsFilterArgs>[]>;
    /**
     * The filter to find the model with the given identifier.
     */
    id?: pulumi.Input<string>;
    /**
     * The ID of the project for which to list the objects.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The filter to match models with the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
