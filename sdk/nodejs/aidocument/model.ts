// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Model resource in Oracle Cloud Infrastructure Ai Document service.
 *
 * Create a new model.
 *
 *   Updates the model metadata only selected path parameter.
 *
 * ## Import
 *
 * Models can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:AiDocument/model:Model test_model "id"
 * ```
 */
export class Model extends pulumi.CustomResource {
    /**
     * Get an existing Model resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ModelState, opts?: pulumi.CustomResourceOptions): Model {
        return new Model(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:AiDocument/model:Model';

    /**
     * Returns true if the given object is an instance of Model.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Model {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Model.__pulumiType;
    }

    /**
     * (Updatable) The compartment identifier.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) list of active custom Key Value models that need to be composed.
     */
    declare public readonly componentModels: pulumi.Output<outputs.AiDocument.ModelComponentModel[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) An optional description of the model.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) A human-friendly name for the model, which can be changed.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Number of replicas required for this model.
     */
    declare public readonly inferenceUnits: pulumi.Output<number>;
    /**
     * Set to true when the model is created by using multiple key value extraction models.
     */
    declare public /*out*/ readonly isComposedModel: pulumi.Output<boolean>;
    /**
     * Set to true when experimenting with a new model type or dataset, so the model training is quick, with a predefined low number of passes through the training data.
     */
    declare public readonly isQuickMode: pulumi.Output<boolean>;
    /**
     * The collection of labels used to train the custom model.
     */
    declare public /*out*/ readonly labels: pulumi.Output<string[]>;
    /**
     * The document language for model training, abbreviated according to the BCP 47 syntax.
     */
    declare public readonly language: pulumi.Output<string>;
    /**
     * A message describing the current state in more detail, that can provide actionable information if training failed.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * Locks associated with this resource.
     */
    declare public readonly locks: pulumi.Output<outputs.AiDocument.ModelLock[]>;
    /**
     * The maximum model training time in hours, expressed as a decimal fraction.
     */
    declare public readonly maxTrainingTimeInHours: pulumi.Output<number>;
    /**
     * Trained Model Metrics.
     */
    declare public /*out*/ readonly metrics: pulumi.Output<outputs.AiDocument.ModelMetric[]>;
    declare public readonly modelId: pulumi.Output<string | undefined>;
    /**
     * Applicable to only PRE_TRAINED_KEY_VALUE_EXTRACTION, PRE_TRAINED_DOCUMENT_ELEMENTS_EXTRACTION.
     */
    declare public readonly modelSubType: pulumi.Output<outputs.AiDocument.ModelModelSubType>;
    /**
     * The type of the Document model.
     */
    declare public readonly modelType: pulumi.Output<string>;
    /**
     * The model version
     */
    declare public readonly modelVersion: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project that contains the model.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * The current state of the model.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The tenancy id of the model.
     */
    declare public /*out*/ readonly tenancyId: pulumi.Output<string>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    declare public readonly testingDataset: pulumi.Output<outputs.AiDocument.ModelTestingDataset>;
    /**
     * When the model was created, as an RFC3339 datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * When the model was updated, as an RFC3339 datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * The total hours actually used for model training.
     */
    declare public /*out*/ readonly trainedTimeInHours: pulumi.Output<number>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    declare public readonly trainingDataset: pulumi.Output<outputs.AiDocument.ModelTrainingDataset>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    declare public readonly validationDataset: pulumi.Output<outputs.AiDocument.ModelValidationDataset>;

    /**
     * Create a Model resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ModelArgs | ModelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ModelState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["componentModels"] = state?.componentModels;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["inferenceUnits"] = state?.inferenceUnits;
            resourceInputs["isComposedModel"] = state?.isComposedModel;
            resourceInputs["isQuickMode"] = state?.isQuickMode;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["language"] = state?.language;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["locks"] = state?.locks;
            resourceInputs["maxTrainingTimeInHours"] = state?.maxTrainingTimeInHours;
            resourceInputs["metrics"] = state?.metrics;
            resourceInputs["modelId"] = state?.modelId;
            resourceInputs["modelSubType"] = state?.modelSubType;
            resourceInputs["modelType"] = state?.modelType;
            resourceInputs["modelVersion"] = state?.modelVersion;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["tenancyId"] = state?.tenancyId;
            resourceInputs["testingDataset"] = state?.testingDataset;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["trainedTimeInHours"] = state?.trainedTimeInHours;
            resourceInputs["trainingDataset"] = state?.trainingDataset;
            resourceInputs["validationDataset"] = state?.validationDataset;
        } else {
            const args = argsOrState as ModelArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.modelType === undefined && !opts.urn) {
                throw new Error("Missing required property 'modelType'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["componentModels"] = args?.componentModels;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["inferenceUnits"] = args?.inferenceUnits;
            resourceInputs["isQuickMode"] = args?.isQuickMode;
            resourceInputs["language"] = args?.language;
            resourceInputs["locks"] = args?.locks;
            resourceInputs["maxTrainingTimeInHours"] = args?.maxTrainingTimeInHours;
            resourceInputs["modelId"] = args?.modelId;
            resourceInputs["modelSubType"] = args?.modelSubType;
            resourceInputs["modelType"] = args?.modelType;
            resourceInputs["modelVersion"] = args?.modelVersion;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["testingDataset"] = args?.testingDataset;
            resourceInputs["trainingDataset"] = args?.trainingDataset;
            resourceInputs["validationDataset"] = args?.validationDataset;
            resourceInputs["isComposedModel"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["metrics"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["tenancyId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["trainedTimeInHours"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Model.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Model resources.
 */
export interface ModelState {
    /**
     * (Updatable) The compartment identifier.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) list of active custom Key Value models that need to be composed.
     */
    componentModels?: pulumi.Input<pulumi.Input<inputs.AiDocument.ModelComponentModel>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) An optional description of the model.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A human-friendly name for the model, which can be changed.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Number of replicas required for this model.
     */
    inferenceUnits?: pulumi.Input<number>;
    /**
     * Set to true when the model is created by using multiple key value extraction models.
     */
    isComposedModel?: pulumi.Input<boolean>;
    /**
     * Set to true when experimenting with a new model type or dataset, so the model training is quick, with a predefined low number of passes through the training data.
     */
    isQuickMode?: pulumi.Input<boolean>;
    /**
     * The collection of labels used to train the custom model.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The document language for model training, abbreviated according to the BCP 47 syntax.
     */
    language?: pulumi.Input<string>;
    /**
     * A message describing the current state in more detail, that can provide actionable information if training failed.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Locks associated with this resource.
     */
    locks?: pulumi.Input<pulumi.Input<inputs.AiDocument.ModelLock>[]>;
    /**
     * The maximum model training time in hours, expressed as a decimal fraction.
     */
    maxTrainingTimeInHours?: pulumi.Input<number>;
    /**
     * Trained Model Metrics.
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.AiDocument.ModelMetric>[]>;
    modelId?: pulumi.Input<string>;
    /**
     * Applicable to only PRE_TRAINED_KEY_VALUE_EXTRACTION, PRE_TRAINED_DOCUMENT_ELEMENTS_EXTRACTION.
     */
    modelSubType?: pulumi.Input<inputs.AiDocument.ModelModelSubType>;
    /**
     * The type of the Document model.
     */
    modelType?: pulumi.Input<string>;
    /**
     * The model version
     */
    modelVersion?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project that contains the model.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The current state of the model.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The tenancy id of the model.
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    testingDataset?: pulumi.Input<inputs.AiDocument.ModelTestingDataset>;
    /**
     * When the model was created, as an RFC3339 datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * When the model was updated, as an RFC3339 datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The total hours actually used for model training.
     */
    trainedTimeInHours?: pulumi.Input<number>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    trainingDataset?: pulumi.Input<inputs.AiDocument.ModelTrainingDataset>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    validationDataset?: pulumi.Input<inputs.AiDocument.ModelValidationDataset>;
}

/**
 * The set of arguments for constructing a Model resource.
 */
export interface ModelArgs {
    /**
     * (Updatable) The compartment identifier.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) list of active custom Key Value models that need to be composed.
     */
    componentModels?: pulumi.Input<pulumi.Input<inputs.AiDocument.ModelComponentModel>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) An optional description of the model.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A human-friendly name for the model, which can be changed.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Number of replicas required for this model.
     */
    inferenceUnits?: pulumi.Input<number>;
    /**
     * Set to true when experimenting with a new model type or dataset, so the model training is quick, with a predefined low number of passes through the training data.
     */
    isQuickMode?: pulumi.Input<boolean>;
    /**
     * The document language for model training, abbreviated according to the BCP 47 syntax.
     */
    language?: pulumi.Input<string>;
    /**
     * Locks associated with this resource.
     */
    locks?: pulumi.Input<pulumi.Input<inputs.AiDocument.ModelLock>[]>;
    /**
     * The maximum model training time in hours, expressed as a decimal fraction.
     */
    maxTrainingTimeInHours?: pulumi.Input<number>;
    modelId?: pulumi.Input<string>;
    /**
     * Applicable to only PRE_TRAINED_KEY_VALUE_EXTRACTION, PRE_TRAINED_DOCUMENT_ELEMENTS_EXTRACTION.
     */
    modelSubType?: pulumi.Input<inputs.AiDocument.ModelModelSubType>;
    /**
     * The type of the Document model.
     */
    modelType: pulumi.Input<string>;
    /**
     * The model version
     */
    modelVersion?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project that contains the model.
     */
    projectId: pulumi.Input<string>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    testingDataset?: pulumi.Input<inputs.AiDocument.ModelTestingDataset>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    trainingDataset?: pulumi.Input<inputs.AiDocument.ModelTrainingDataset>;
    /**
     * The base entity which is the input for creating and training a model.
     */
    validationDataset?: pulumi.Input<inputs.AiDocument.ModelValidationDataset>;
}
