// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Model resource in Oracle Cloud Infrastructure Ai Language service.
 *
 * Creates a new model for training and train the model with date provided.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testModel = new oci.ailanguage.Model("test_model", {
 *     compartmentId: compartmentId,
 *     modelDetails: {
 *         modelType: modelModelDetailsModelType,
 *         classificationMode: {
 *             classificationMode: modelModelDetailsClassificationModeClassificationMode,
 *             version: modelModelDetailsClassificationModeVersion,
 *         },
 *         languageCode: modelModelDetailsLanguageCode,
 *         version: modelModelDetailsVersion,
 *     },
 *     projectId: testProject.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: modelDescription,
 *     displayName: modelDisplayName,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     testStrategy: {
 *         strategyType: modelTestStrategyStrategyType,
 *         testingDataset: {
 *             datasetType: modelTestStrategyTestingDatasetDatasetType,
 *             datasetId: testDataset.id,
 *             locationDetails: {
 *                 bucket: modelTestStrategyTestingDatasetLocationDetailsBucket,
 *                 locationType: modelTestStrategyTestingDatasetLocationDetailsLocationType,
 *                 namespace: modelTestStrategyTestingDatasetLocationDetailsNamespace,
 *                 objectNames: modelTestStrategyTestingDatasetLocationDetailsObjectNames,
 *             },
 *         },
 *         validationDataset: {
 *             datasetType: modelTestStrategyValidationDatasetDatasetType,
 *             datasetId: testDataset.id,
 *             locationDetails: {
 *                 bucket: modelTestStrategyValidationDatasetLocationDetailsBucket,
 *                 locationType: modelTestStrategyValidationDatasetLocationDetailsLocationType,
 *                 namespace: modelTestStrategyValidationDatasetLocationDetailsNamespace,
 *                 objectNames: modelTestStrategyValidationDatasetLocationDetailsObjectNames,
 *             },
 *         },
 *     },
 *     trainingDataset: {
 *         datasetType: modelTrainingDatasetDatasetType,
 *         datasetId: testDataset.id,
 *         locationDetails: {
 *             bucket: modelTrainingDatasetLocationDetailsBucket,
 *             locationType: modelTrainingDatasetLocationDetailsLocationType,
 *             namespace: modelTrainingDatasetLocationDetailsNamespace,
 *             objectNames: modelTrainingDatasetLocationDetailsObjectNames,
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Models can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:AiLanguage/model:Model test_model "id"
 * ```
 */
export class Model extends pulumi.CustomResource {
    /**
     * Get an existing Model resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ModelState, opts?: pulumi.CustomResourceOptions): Model {
        return new Model(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:AiLanguage/model:Model';

    /**
     * Returns true if the given object is an instance of Model.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Model {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Model.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A short description of the a model.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * model training results of different models
     */
    declare public /*out*/ readonly evaluationResults: pulumi.Output<outputs.AiLanguage.ModelEvaluationResult[]>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * Possible model types
     */
    declare public readonly modelDetails: pulumi.Output<outputs.AiLanguage.ModelModelDetails>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * The state of the model.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Possible strategy as testing and validation(optional) dataset.
     */
    declare public readonly testStrategy: pulumi.Output<outputs.AiLanguage.ModelTestStrategy>;
    /**
     * The time the the model was created. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the model was updated. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * Possible data set type
     */
    declare public readonly trainingDataset: pulumi.Output<outputs.AiLanguage.ModelTrainingDataset>;
    /**
     * For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;

    /**
     * Create a Model resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ModelArgs | ModelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ModelState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["evaluationResults"] = state?.evaluationResults;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["modelDetails"] = state?.modelDetails;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["testStrategy"] = state?.testStrategy;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["trainingDataset"] = state?.trainingDataset;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ModelArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.modelDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'modelDetails'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if (args?.trainingDataset === undefined && !opts.urn) {
                throw new Error("Missing required property 'trainingDataset'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["modelDetails"] = args?.modelDetails;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["testStrategy"] = args?.testStrategy;
            resourceInputs["trainingDataset"] = args?.trainingDataset;
            resourceInputs["evaluationResults"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Model.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Model resources.
 */
export interface ModelState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A short description of the a model.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * model training results of different models
     */
    evaluationResults?: pulumi.Input<pulumi.Input<inputs.AiLanguage.ModelEvaluationResult>[]>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Possible model types
     */
    modelDetails?: pulumi.Input<inputs.AiLanguage.ModelModelDetails>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The state of the model.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Possible strategy as testing and validation(optional) dataset.
     */
    testStrategy?: pulumi.Input<inputs.AiLanguage.ModelTestStrategy>;
    /**
     * The time the the model was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the model was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * Possible data set type
     */
    trainingDataset?: pulumi.Input<inputs.AiLanguage.ModelTrainingDataset>;
    /**
     * For pre trained models this will identify model type version used for model creation For custom identifying the model by model id is difficult. This param provides ease of use for end customer. <<service>>::<<service-name>>_<<model-type-version>>::<<custom model on which this training has to be done>> ex: ai-lang::NER_V1::CUSTOM-V0
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Model resource.
 */
export interface ModelArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A short description of the a model.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Possible model types
     */
    modelDetails: pulumi.Input<inputs.AiLanguage.ModelModelDetails>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
     */
    projectId: pulumi.Input<string>;
    /**
     * Possible strategy as testing and validation(optional) dataset.
     */
    testStrategy?: pulumi.Input<inputs.AiLanguage.ModelTestStrategy>;
    /**
     * Possible data set type
     */
    trainingDataset: pulumi.Input<inputs.AiLanguage.ModelTrainingDataset>;
}
