// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Model resource in Oracle Cloud Infrastructure Ai Language service.
 *
 * Creates a new model for training and train the model with date provided.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testModel = new oci.ailanguage.Model("testModel", {
 *     compartmentId: _var.compartment_id,
 *     modelDetails: {
 *         modelType: _var.model_model_details_model_type,
 *         classificationMode: {
 *             classificationMode: _var.model_model_details_classification_mode_classification_mode,
 *             version: _var.model_model_details_classification_mode_version,
 *         },
 *         languageCode: _var.model_model_details_language_code,
 *         version: _var.model_model_details_version,
 *     },
 *     projectId: oci_ai_language_project.test_project.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.model_description,
 *     displayName: _var.model_display_name,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     testStrategy: {
 *         strategyType: _var.model_test_strategy_strategy_type,
 *         testingDataset: {
 *             datasetType: _var.model_test_strategy_testing_dataset_dataset_type,
 *             datasetId: oci_data_labeling_service_dataset.test_dataset.id,
 *             locationDetails: {
 *                 bucket: _var.model_test_strategy_testing_dataset_location_details_bucket,
 *                 locationType: _var.model_test_strategy_testing_dataset_location_details_location_type,
 *                 namespace: _var.model_test_strategy_testing_dataset_location_details_namespace,
 *                 objectNames: _var.model_test_strategy_testing_dataset_location_details_object_names,
 *             },
 *         },
 *         validationDataset: {
 *             datasetType: _var.model_test_strategy_validation_dataset_dataset_type,
 *             datasetId: oci_data_labeling_service_dataset.test_dataset.id,
 *             locationDetails: {
 *                 bucket: _var.model_test_strategy_validation_dataset_location_details_bucket,
 *                 locationType: _var.model_test_strategy_validation_dataset_location_details_location_type,
 *                 namespace: _var.model_test_strategy_validation_dataset_location_details_namespace,
 *                 objectNames: _var.model_test_strategy_validation_dataset_location_details_object_names,
 *             },
 *         },
 *     },
 *     trainingDataset: {
 *         datasetType: _var.model_training_dataset_dataset_type,
 *         datasetId: oci_data_labeling_service_dataset.test_dataset.id,
 *         locationDetails: {
 *             bucket: _var.model_training_dataset_location_details_bucket,
 *             locationType: _var.model_training_dataset_location_details_location_type,
 *             namespace: _var.model_training_dataset_location_details_namespace,
 *             objectNames: _var.model_training_dataset_location_details_object_names,
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Models can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:AiLanguage/model:Model test_model "id"
 * ```
 */
export class Model extends pulumi.CustomResource {
    /**
     * Get an existing Model resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ModelState, opts?: pulumi.CustomResourceOptions): Model {
        return new Model(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:AiLanguage/model:Model';

    /**
     * Returns true if the given object is an instance of Model.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Model {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Model.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * (Updatable) A short description of the a model.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * model training results of different models
     */
    public /*out*/ readonly evaluationResults!: pulumi.Output<outputs.AiLanguage.ModelEvaluationResult[] | undefined>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string | undefined>;
    /**
     * Possible model types
     */
    public readonly modelDetails!: pulumi.Output<outputs.AiLanguage.ModelModelDetails>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The state of the model.
     */
    public /*out*/ readonly state!: pulumi.Output<string | undefined>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Possible strategy as testing and validation(optional) dataset.
     */
    public readonly testStrategy!: pulumi.Output<outputs.AiLanguage.ModelTestStrategy | undefined>;
    /**
     * The time the the model was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string | undefined>;
    /**
     * The time the model was updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string | undefined>;
    /**
     * Possible data set type
     */
    public readonly trainingDataset!: pulumi.Output<outputs.AiLanguage.ModelTrainingDataset>;
    /**
     * Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
     */
    public /*out*/ readonly version!: pulumi.Output<string | undefined>;

    /**
     * Create a Model resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ModelArgs | ModelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ModelState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["evaluationResults"] = state ? state.evaluationResults : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["modelDetails"] = state ? state.modelDetails : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["testStrategy"] = state ? state.testStrategy : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["trainingDataset"] = state ? state.trainingDataset : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ModelArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.modelDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelDetails'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.trainingDataset === undefined) && !opts.urn) {
                throw new Error("Missing required property 'trainingDataset'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["modelDetails"] = args ? args.modelDetails : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["testStrategy"] = args ? args.testStrategy : undefined;
            resourceInputs["trainingDataset"] = args ? args.trainingDataset : undefined;
            resourceInputs["evaluationResults"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Model.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Model resources.
 */
export interface ModelState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A short description of the a model.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * model training results of different models
     */
    evaluationResults?: pulumi.Input<pulumi.Input<inputs.AiLanguage.ModelEvaluationResult>[]>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Possible model types
     */
    modelDetails?: pulumi.Input<inputs.AiLanguage.ModelModelDetails>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The state of the model.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Possible strategy as testing and validation(optional) dataset.
     */
    testStrategy?: pulumi.Input<inputs.AiLanguage.ModelTestStrategy>;
    /**
     * The time the the model was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the model was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * Possible data set type
     */
    trainingDataset?: pulumi.Input<inputs.AiLanguage.ModelTrainingDataset>;
    /**
     * Optional pre trained model version. if nothing specified latest pre trained model will be used.  Supported versions can be found at /modelTypes/{modelType}
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Model resource.
 */
export interface ModelArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)  for the models compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A short description of the a model.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly display name for the resource. It does not have to be unique and can be modified. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Possible model types
     */
    modelDetails: pulumi.Input<inputs.AiLanguage.ModelModelDetails>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate with the model.
     */
    projectId: pulumi.Input<string>;
    /**
     * Possible strategy as testing and validation(optional) dataset.
     */
    testStrategy?: pulumi.Input<inputs.AiLanguage.ModelTestStrategy>;
    /**
     * Possible data set type
     */
    trainingDataset: pulumi.Input<inputs.AiLanguage.ModelTrainingDataset>;
}
