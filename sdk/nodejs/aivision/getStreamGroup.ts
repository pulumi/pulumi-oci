// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Stream Group resource in Oracle Cloud Infrastructure Ai Vision service.
 *
 * Get a  streamGroup
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreamGroup = oci.AiVision.getStreamGroup({
 *     streamGroupId: testStreamGroupOciAiVisionStreamGroup.id,
 * });
 * ```
 */
export function getStreamGroup(args: GetStreamGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:AiVision/getStreamGroup:getStreamGroup", {
        "streamGroupId": args.streamGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamGroup.
 */
export interface GetStreamGroupArgs {
    /**
     * StreamGroup Id.
     */
    streamGroupId: string;
}

/**
 * A collection of values returned by getStreamGroup.
 */
export interface GetStreamGroupResult {
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * A human-friendly name for the streamGroup.
     */
    readonly displayName: string;
    /**
     * A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamGroup.
     */
    readonly id: string;
    /**
     * Stream
     */
    readonly isEnabled: boolean;
    /**
     * The current state of the streamGroup.
     */
    readonly state: string;
    readonly streamGroupId: string;
    /**
     * List of streamSource OCIDs where the streamSource overlaps in field of view.
     */
    readonly streamOverlaps: outputs.AiVision.GetStreamGroupStreamOverlap[];
    /**
     * List of streamSource OCIDs associated with the stream group
     */
    readonly streamSourceIds: string[];
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * When the streamGroup was created, as an RFC3339 datetime string.
     */
    readonly timeCreated: string;
    /**
     * When the streamGroup was updated, as an RFC3339 datetime string.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Stream Group resource in Oracle Cloud Infrastructure Ai Vision service.
 *
 * Get a  streamGroup
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreamGroup = oci.AiVision.getStreamGroup({
 *     streamGroupId: testStreamGroupOciAiVisionStreamGroup.id,
 * });
 * ```
 */
export function getStreamGroupOutput(args: GetStreamGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamGroupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:AiVision/getStreamGroup:getStreamGroup", {
        "streamGroupId": args.streamGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamGroup.
 */
export interface GetStreamGroupOutputArgs {
    /**
     * StreamGroup Id.
     */
    streamGroupId: pulumi.Input<string>;
}
