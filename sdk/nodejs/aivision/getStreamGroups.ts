// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Stream Groups in Oracle Cloud Infrastructure Ai Vision service.
 *
 * Gets a list of the streamGroups in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreamGroups = oci.AiVision.getStreamGroups({
 *     compartmentId: compartmentId,
 *     displayName: streamGroupDisplayName,
 *     id: streamGroupId,
 * });
 * ```
 */
export function getStreamGroups(args?: GetStreamGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamGroupsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:AiVision/getStreamGroups:getStreamGroups", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamGroups.
 */
export interface GetStreamGroupsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.AiVision.GetStreamGroupsFilter[];
    /**
     * The filter to find the device with the given identifier.
     */
    id?: string;
}

/**
 * A collection of values returned by getStreamGroups.
 */
export interface GetStreamGroupsResult {
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
     */
    readonly compartmentId?: string;
    /**
     * A human-friendly name for the streamGroup.
     */
    readonly displayName?: string;
    readonly filters?: outputs.AiVision.GetStreamGroupsFilter[];
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamGroup.
     */
    readonly id?: string;
    /**
     * The list of stream_group_collection.
     */
    readonly streamGroupCollections: outputs.AiVision.GetStreamGroupsStreamGroupCollection[];
}
/**
 * This data source provides the list of Stream Groups in Oracle Cloud Infrastructure Ai Vision service.
 *
 * Gets a list of the streamGroups in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreamGroups = oci.AiVision.getStreamGroups({
 *     compartmentId: compartmentId,
 *     displayName: streamGroupDisplayName,
 *     id: streamGroupId,
 * });
 * ```
 */
export function getStreamGroupsOutput(args?: GetStreamGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamGroupsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:AiVision/getStreamGroups:getStreamGroups", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamGroups.
 */
export interface GetStreamGroupsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.AiVision.GetStreamGroupsFilterArgs>[]>;
    /**
     * The filter to find the device with the given identifier.
     */
    id?: pulumi.Input<string>;
}
