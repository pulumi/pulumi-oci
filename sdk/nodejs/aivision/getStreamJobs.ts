// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Stream Jobs in Oracle Cloud Infrastructure Ai Vision service.
 *
 * Get list of stream jobs
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreamJobs = oci.AiVision.getStreamJobs({
 *     compartmentId: compartmentId,
 *     displayName: streamJobDisplayName,
 *     id: streamJobId,
 *     state: streamJobState,
 * });
 * ```
 */
export function getStreamJobs(args?: GetStreamJobsArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamJobsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:AiVision/getStreamJobs:getStreamJobs", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamJobs.
 */
export interface GetStreamJobsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.AiVision.GetStreamJobsFilter[];
    /**
     * The filter to find the streamjob with the given identifier.
     */
    id?: string;
    /**
     * The filter to match projects with the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getStreamJobs.
 */
export interface GetStreamJobsResult {
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of compartment
     */
    readonly compartmentId?: string;
    /**
     * Stream job display name.
     */
    readonly displayName?: string;
    readonly filters?: outputs.AiVision.GetStreamJobsFilter[];
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamJob.
     */
    readonly id?: string;
    /**
     * The current state of the Stream job.
     */
    readonly state?: string;
    /**
     * The list of stream_job_collection.
     */
    readonly streamJobCollections: outputs.AiVision.GetStreamJobsStreamJobCollection[];
}
/**
 * This data source provides the list of Stream Jobs in Oracle Cloud Infrastructure Ai Vision service.
 *
 * Get list of stream jobs
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreamJobs = oci.AiVision.getStreamJobs({
 *     compartmentId: compartmentId,
 *     displayName: streamJobDisplayName,
 *     id: streamJobId,
 *     state: streamJobState,
 * });
 * ```
 */
export function getStreamJobsOutput(args?: GetStreamJobsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamJobsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:AiVision/getStreamJobs:getStreamJobs", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamJobs.
 */
export interface GetStreamJobsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.AiVision.GetStreamJobsFilterArgs>[]>;
    /**
     * The filter to find the streamjob with the given identifier.
     */
    id?: pulumi.Input<string>;
    /**
     * The filter to match projects with the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
