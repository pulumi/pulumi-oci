// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Stream Source resource in Oracle Cloud Infrastructure Ai Vision service.
 *
 * Get a  streamSource
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreamSource = oci.AiVision.getStreamSource({
 *     streamSourceId: testStreamSourceOciAiVisionStreamSource.id,
 * });
 * ```
 */
export function getStreamSource(args: GetStreamSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamSourceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:AiVision/getStreamSource:getStreamSource", {
        "streamSourceId": args.streamSourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamSource.
 */
export interface GetStreamSourceArgs {
    /**
     * StreamSource Id.
     */
    streamSourceId: string;
}

/**
 * A collection of values returned by getStreamSource.
 */
export interface GetStreamSourceResult {
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartm.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * display name.
     */
    readonly displayName: string;
    /**
     * A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the streamSource.
     */
    readonly id: string;
    /**
     * The current state of the streamSource.
     */
    readonly state: string;
    /**
     * Details about a stream source
     */
    readonly streamSourceDetails: outputs.AiVision.GetStreamSourceStreamSourceDetail[];
    readonly streamSourceId: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. For example: `{"orcl-cloud": {"free-tier-retained": "true"}}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * When the streamSource was created, as an RFC3339 datetime string.
     */
    readonly timeCreated: string;
    /**
     * When the streamSource was updated, as an RFC3339 datetime string.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Stream Source resource in Oracle Cloud Infrastructure Ai Vision service.
 *
 * Get a  streamSource
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreamSource = oci.AiVision.getStreamSource({
 *     streamSourceId: testStreamSourceOciAiVisionStreamSource.id,
 * });
 * ```
 */
export function getStreamSourceOutput(args: GetStreamSourceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamSourceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:AiVision/getStreamSource:getStreamSource", {
        "streamSourceId": args.streamSourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamSource.
 */
export interface GetStreamSourceOutputArgs {
    /**
     * StreamSource Id.
     */
    streamSourceId: pulumi.Input<string>;
}
