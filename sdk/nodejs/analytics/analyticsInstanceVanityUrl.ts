// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Analytics Instance Vanity Url resource in Oracle Cloud Infrastructure Analytics service.
 *
 * Allows specifying a custom host name to be used to access the analytics instance.  This requires prior setup of DNS entry and certificate
 * for this host.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAnalyticsInstanceVanityUrl = new oci.analytics.AnalyticsInstanceVanityUrl("test_analytics_instance_vanity_url", {
 *     analyticsInstanceId: testAnalyticsInstance.id,
 *     caCertificate: analyticsInstanceVanityUrlCaCertificate,
 *     hosts: analyticsInstanceVanityUrlHosts,
 *     privateKey: analyticsInstanceVanityUrlPrivateKey,
 *     publicCertificate: analyticsInstanceVanityUrlPublicCertificate,
 *     description: analyticsInstanceVanityUrlDescription,
 *     passphrase: analyticsInstanceVanityUrlPassphrase,
 * });
 * ```
 *
 * ## Import
 *
 * AnalyticsInstanceVanityUrls can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Analytics/analyticsInstanceVanityUrl:AnalyticsInstanceVanityUrl test_analytics_instance_vanity_url "analyticsInstances/{analyticsInstanceId}/vanityUrls/{vanityUrlKey}"
 * ```
 */
export class AnalyticsInstanceVanityUrl extends pulumi.CustomResource {
    /**
     * Get an existing AnalyticsInstanceVanityUrl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AnalyticsInstanceVanityUrlState, opts?: pulumi.CustomResourceOptions): AnalyticsInstanceVanityUrl {
        return new AnalyticsInstanceVanityUrl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Analytics/analyticsInstanceVanityUrl:AnalyticsInstanceVanityUrl';

    /**
     * Returns true if the given object is an instance of AnalyticsInstanceVanityUrl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AnalyticsInstanceVanityUrl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnalyticsInstanceVanityUrl.__pulumiType;
    }

    /**
     * The OCID of the AnalyticsInstance.
     */
    declare public readonly analyticsInstanceId: pulumi.Output<string>;
    /**
     * (Updatable) PEM CA certificate(s) for HTTPS connections. This may include multiple PEM certificates.
     */
    declare public readonly caCertificate: pulumi.Output<string>;
    /**
     * Optional description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * List of fully qualified hostnames supported by this vanity URL definition (max of 3).
     */
    declare public readonly hosts: pulumi.Output<string[]>;
    /**
     * (Updatable) Passphrase for the PEM Private key (if any).
     */
    declare public readonly passphrase: pulumi.Output<string | undefined>;
    /**
     * (Updatable) PEM Private key for HTTPS connections.
     */
    declare public readonly privateKey: pulumi.Output<string>;
    /**
     * (Updatable) PEM certificate for HTTPS connections. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly publicCertificate: pulumi.Output<string>;

    /**
     * Create a AnalyticsInstanceVanityUrl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnalyticsInstanceVanityUrlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AnalyticsInstanceVanityUrlArgs | AnalyticsInstanceVanityUrlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AnalyticsInstanceVanityUrlState | undefined;
            resourceInputs["analyticsInstanceId"] = state?.analyticsInstanceId;
            resourceInputs["caCertificate"] = state?.caCertificate;
            resourceInputs["description"] = state?.description;
            resourceInputs["hosts"] = state?.hosts;
            resourceInputs["passphrase"] = state?.passphrase;
            resourceInputs["privateKey"] = state?.privateKey;
            resourceInputs["publicCertificate"] = state?.publicCertificate;
        } else {
            const args = argsOrState as AnalyticsInstanceVanityUrlArgs | undefined;
            if (args?.analyticsInstanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'analyticsInstanceId'");
            }
            if (args?.caCertificate === undefined && !opts.urn) {
                throw new Error("Missing required property 'caCertificate'");
            }
            if (args?.hosts === undefined && !opts.urn) {
                throw new Error("Missing required property 'hosts'");
            }
            if (args?.privateKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            if (args?.publicCertificate === undefined && !opts.urn) {
                throw new Error("Missing required property 'publicCertificate'");
            }
            resourceInputs["analyticsInstanceId"] = args?.analyticsInstanceId;
            resourceInputs["caCertificate"] = args?.caCertificate;
            resourceInputs["description"] = args?.description;
            resourceInputs["hosts"] = args?.hosts;
            resourceInputs["passphrase"] = args?.passphrase ? pulumi.secret(args.passphrase) : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["publicCertificate"] = args?.publicCertificate;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passphrase", "privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AnalyticsInstanceVanityUrl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AnalyticsInstanceVanityUrl resources.
 */
export interface AnalyticsInstanceVanityUrlState {
    /**
     * The OCID of the AnalyticsInstance.
     */
    analyticsInstanceId?: pulumi.Input<string>;
    /**
     * (Updatable) PEM CA certificate(s) for HTTPS connections. This may include multiple PEM certificates.
     */
    caCertificate?: pulumi.Input<string>;
    /**
     * Optional description.
     */
    description?: pulumi.Input<string>;
    /**
     * List of fully qualified hostnames supported by this vanity URL definition (max of 3).
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Passphrase for the PEM Private key (if any).
     */
    passphrase?: pulumi.Input<string>;
    /**
     * (Updatable) PEM Private key for HTTPS connections.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * (Updatable) PEM certificate for HTTPS connections. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    publicCertificate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AnalyticsInstanceVanityUrl resource.
 */
export interface AnalyticsInstanceVanityUrlArgs {
    /**
     * The OCID of the AnalyticsInstance.
     */
    analyticsInstanceId: pulumi.Input<string>;
    /**
     * (Updatable) PEM CA certificate(s) for HTTPS connections. This may include multiple PEM certificates.
     */
    caCertificate: pulumi.Input<string>;
    /**
     * Optional description.
     */
    description?: pulumi.Input<string>;
    /**
     * List of fully qualified hostnames supported by this vanity URL definition (max of 3).
     */
    hosts: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Passphrase for the PEM Private key (if any).
     */
    passphrase?: pulumi.Input<string>;
    /**
     * (Updatable) PEM Private key for HTTPS connections.
     */
    privateKey: pulumi.Input<string>;
    /**
     * (Updatable) PEM certificate for HTTPS connections. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    publicCertificate: pulumi.Input<string>;
}
