// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Analytics Instances in Oracle Cloud Infrastructure Analytics service.
 *
 * List Analytics instances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAnalyticsInstances = oci.Analytics.getAnalyticsInstances({
 *     compartmentId: _var.compartment_id,
 *     capacityType: _var.analytics_instance_capacity_type,
 *     featureSet: _var.analytics_instance_feature_set,
 *     name: _var.analytics_instance_name,
 *     state: _var.analytics_instance_state,
 * });
 * ```
 */
export function getAnalyticsInstances(args: GetAnalyticsInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetAnalyticsInstancesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Analytics/getAnalyticsInstances:getAnalyticsInstances", {
        "capacityType": args.capacityType,
        "compartmentId": args.compartmentId,
        "featureSet": args.featureSet,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getAnalyticsInstances.
 */
export interface GetAnalyticsInstancesArgs {
    /**
     * A filter to only return resources matching the capacity type enum. Values are case-insensitive.
     */
    capacityType?: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * A filter to only return resources matching the feature set. Values are case-insensitive.
     */
    featureSet?: string;
    filters?: inputs.Analytics.GetAnalyticsInstancesFilter[];
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name?: string;
    /**
     * A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getAnalyticsInstances.
 */
export interface GetAnalyticsInstancesResult {
    /**
     * The list of analytics_instances.
     */
    readonly analyticsInstances: outputs.Analytics.GetAnalyticsInstancesAnalyticsInstance[];
    /**
     * The capacity model to use.
     */
    readonly capacityType?: string;
    /**
     * The OCID of the compartment.
     */
    readonly compartmentId: string;
    /**
     * Analytics feature set.
     */
    readonly featureSet?: string;
    readonly filters?: outputs.Analytics.GetAnalyticsInstancesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the Analytics instance. This name must be unique in the tenancy and cannot be changed.
     */
    readonly name?: string;
    /**
     * The current state of an instance.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Analytics Instances in Oracle Cloud Infrastructure Analytics service.
 *
 * List Analytics instances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAnalyticsInstances = oci.Analytics.getAnalyticsInstances({
 *     compartmentId: _var.compartment_id,
 *     capacityType: _var.analytics_instance_capacity_type,
 *     featureSet: _var.analytics_instance_feature_set,
 *     name: _var.analytics_instance_name,
 *     state: _var.analytics_instance_state,
 * });
 * ```
 */
export function getAnalyticsInstancesOutput(args: GetAnalyticsInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAnalyticsInstancesResult> {
    return pulumi.output(args).apply((a: any) => getAnalyticsInstances(a, opts))
}

/**
 * A collection of arguments for invoking getAnalyticsInstances.
 */
export interface GetAnalyticsInstancesOutputArgs {
    /**
     * A filter to only return resources matching the capacity type enum. Values are case-insensitive.
     */
    capacityType?: pulumi.Input<string>;
    /**
     * The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to only return resources matching the feature set. Values are case-insensitive.
     */
    featureSet?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Analytics.GetAnalyticsInstancesFilterArgs>[]>;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
