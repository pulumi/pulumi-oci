// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Announcement Subscription resource in Oracle Cloud Infrastructure Announcements Service service.
 *
 * Gets the specified announcement subscription.
 *
 * This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAnnouncementSubscription = oci.AnnouncementsService.getAnnouncementSubscription({
 *     announcementSubscriptionId: testAnnouncementSubscriptionOciAnnouncementsServiceAnnouncementSubscription.id,
 * });
 * ```
 */
export function getAnnouncementSubscription(args: GetAnnouncementSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetAnnouncementSubscriptionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:AnnouncementsService/getAnnouncementSubscription:getAnnouncementSubscription", {
        "announcementSubscriptionId": args.announcementSubscriptionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAnnouncementSubscription.
 */
export interface GetAnnouncementSubscriptionArgs {
    /**
     * The OCID of the announcement subscription.
     */
    announcementSubscriptionId: string;
}

/**
 * A collection of values returned by getAnnouncementSubscription.
 */
export interface GetAnnouncementSubscriptionResult {
    readonly announcementSubscriptionId: string;
    /**
     * The OCID of the compartment that contains the announcement subscription.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * A description of the announcement subscription. Avoid entering confidential information.
     */
    readonly description: string;
    /**
     * A user-friendly name for the announcement subscription. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * A list of filter groups for the announcement subscription. A filter group is a combination of multiple filters applied to announcements for matching purposes.
     */
    readonly filterGroups: outputs.AnnouncementsService.GetAnnouncementSubscriptionFilterGroup[];
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the announcement subscription.
     */
    readonly id: string;
    /**
     * A message describing the current lifecycle state in more detail. For example, details might provide required or recommended actions for a resource in a Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * The OCID of the Notifications service topic that is the target for publishing announcements that match the configured announcement subscription.
     */
    readonly onsTopicId: string;
    /**
     * (For announcement subscriptions with SaaS configured as the platform type or Oracle Fusion Applications as the service, or both, only) The language in which the user prefers to receive emailed announcements. Specify the preference with a value that uses the x-obmcs-human-language format. For example fr-FR.
     */
    readonly preferredLanguage: string;
    /**
     * The time zone in which the user prefers to receive announcements. Specify the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     */
    readonly preferredTimeZone: string;
    /**
     * The current lifecycle state of the announcement subscription.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The date and time that the announcement subscription was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    readonly timeCreated: string;
    /**
     * The date and time that the announcement subscription was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Announcement Subscription resource in Oracle Cloud Infrastructure Announcements Service service.
 *
 * Gets the specified announcement subscription.
 *
 * This call is subject to an Announcements limit that applies to the total number of requests across all read or write operations. Announcements might throttle this call to reject an otherwise valid request when the total rate of operations exceeds 20 requests per second for a given user. The service might also throttle this call to reject an otherwise valid request when the total rate of operations exceeds 100 requests per second for a given tenancy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAnnouncementSubscription = oci.AnnouncementsService.getAnnouncementSubscription({
 *     announcementSubscriptionId: testAnnouncementSubscriptionOciAnnouncementsServiceAnnouncementSubscription.id,
 * });
 * ```
 */
export function getAnnouncementSubscriptionOutput(args: GetAnnouncementSubscriptionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAnnouncementSubscriptionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:AnnouncementsService/getAnnouncementSubscription:getAnnouncementSubscription", {
        "announcementSubscriptionId": args.announcementSubscriptionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAnnouncementSubscription.
 */
export interface GetAnnouncementSubscriptionOutputArgs {
    /**
     * The OCID of the announcement subscription.
     */
    announcementSubscriptionId: pulumi.Input<string>;
}
