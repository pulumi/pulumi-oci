// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AnnouncementSubscriptionArgs, AnnouncementSubscriptionState } from "./announcementSubscription";
export type AnnouncementSubscription = import("./announcementSubscription").AnnouncementSubscription;
export const AnnouncementSubscription: typeof import("./announcementSubscription").AnnouncementSubscription = null as any;
utilities.lazyLoad(exports, ["AnnouncementSubscription"], () => require("./announcementSubscription"));

export { AnnouncementSubscriptionsActionsChangeCompartmentArgs, AnnouncementSubscriptionsActionsChangeCompartmentState } from "./announcementSubscriptionsActionsChangeCompartment";
export type AnnouncementSubscriptionsActionsChangeCompartment = import("./announcementSubscriptionsActionsChangeCompartment").AnnouncementSubscriptionsActionsChangeCompartment;
export const AnnouncementSubscriptionsActionsChangeCompartment: typeof import("./announcementSubscriptionsActionsChangeCompartment").AnnouncementSubscriptionsActionsChangeCompartment = null as any;
utilities.lazyLoad(exports, ["AnnouncementSubscriptionsActionsChangeCompartment"], () => require("./announcementSubscriptionsActionsChangeCompartment"));

export { AnnouncementSubscriptionsFilterGroupArgs, AnnouncementSubscriptionsFilterGroupState } from "./announcementSubscriptionsFilterGroup";
export type AnnouncementSubscriptionsFilterGroup = import("./announcementSubscriptionsFilterGroup").AnnouncementSubscriptionsFilterGroup;
export const AnnouncementSubscriptionsFilterGroup: typeof import("./announcementSubscriptionsFilterGroup").AnnouncementSubscriptionsFilterGroup = null as any;
utilities.lazyLoad(exports, ["AnnouncementSubscriptionsFilterGroup"], () => require("./announcementSubscriptionsFilterGroup"));

export { GetAnnouncementSubscriptionArgs, GetAnnouncementSubscriptionResult, GetAnnouncementSubscriptionOutputArgs } from "./getAnnouncementSubscription";
export const getAnnouncementSubscription: typeof import("./getAnnouncementSubscription").getAnnouncementSubscription = null as any;
export const getAnnouncementSubscriptionOutput: typeof import("./getAnnouncementSubscription").getAnnouncementSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getAnnouncementSubscription","getAnnouncementSubscriptionOutput"], () => require("./getAnnouncementSubscription"));

export { GetAnnouncementSubscriptionsArgs, GetAnnouncementSubscriptionsResult, GetAnnouncementSubscriptionsOutputArgs } from "./getAnnouncementSubscriptions";
export const getAnnouncementSubscriptions: typeof import("./getAnnouncementSubscriptions").getAnnouncementSubscriptions = null as any;
export const getAnnouncementSubscriptionsOutput: typeof import("./getAnnouncementSubscriptions").getAnnouncementSubscriptionsOutput = null as any;
utilities.lazyLoad(exports, ["getAnnouncementSubscriptions","getAnnouncementSubscriptionsOutput"], () => require("./getAnnouncementSubscriptions"));

export { GetServicesArgs, GetServicesResult, GetServicesOutputArgs } from "./getServices";
export const getServices: typeof import("./getServices").getServices = null as any;
export const getServicesOutput: typeof import("./getServices").getServicesOutput = null as any;
utilities.lazyLoad(exports, ["getServices","getServicesOutput"], () => require("./getServices"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:AnnouncementsService/announcementSubscription:AnnouncementSubscription":
                return new AnnouncementSubscription(name, <any>undefined, { urn })
            case "oci:AnnouncementsService/announcementSubscriptionsActionsChangeCompartment:AnnouncementSubscriptionsActionsChangeCompartment":
                return new AnnouncementSubscriptionsActionsChangeCompartment(name, <any>undefined, { urn })
            case "oci:AnnouncementsService/announcementSubscriptionsFilterGroup:AnnouncementSubscriptionsFilterGroup":
                return new AnnouncementSubscriptionsFilterGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "AnnouncementsService/announcementSubscription", _module)
pulumi.runtime.registerResourceModule("oci", "AnnouncementsService/announcementSubscriptionsActionsChangeCompartment", _module)
pulumi.runtime.registerResourceModule("oci", "AnnouncementsService/announcementSubscriptionsFilterGroup", _module)
