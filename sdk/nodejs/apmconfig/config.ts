// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Config resource in Oracle Cloud Infrastructure Apm Config service.
 *
 * Creates a new configuration item.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConfig = new oci.apmconfig.Config("test_config", {
 *     apmDomainId: testApmDomain.id,
 *     configType: configConfigType,
 *     agentVersion: configAgentVersion,
 *     attachInstallDir: configAttachInstallDir,
 *     config: {
 *         configMaps: [{
 *             fileName: configConfigConfigMapFileName,
 *             body: configConfigConfigMapBody,
 *             contentType: configConfigConfigMapContentType,
 *         }],
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: configDescription,
 *     dimensions: [{
 *         name: configDimensionsName,
 *         valueSource: configDimensionsValueSource,
 *     }],
 *     displayName: configDisplayName,
 *     filterId: testFilter.id,
 *     filterText: configFilterText,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     group: configGroup,
 *     managementAgentId: testManagementAgent.id,
 *     matchAgentsWithAttributeValue: configMatchAgentsWithAttributeValue,
 *     metrics: [{
 *         description: configMetricsDescription,
 *         name: configMetricsName,
 *         unit: configMetricsUnit,
 *         valueSource: configMetricsValueSource,
 *     }],
 *     namespace: configNamespace,
 *     opcDryRun: configOpcDryRun,
 *     options: configOptions,
 *     overrides: {
 *         overrideLists: [{
 *             agentFilter: configOverridesOverrideListAgentFilter,
 *             overrideMap: configOverridesOverrideListOverrideMap,
 *         }],
 *     },
 *     processFilters: configProcessFilter,
 *     rules: [{
 *         displayName: configRulesDisplayName,
 *         filterText: configRulesFilterText,
 *         isApplyToErrorSpans: configRulesIsApplyToErrorSpans,
 *         isEnabled: configRulesIsEnabled,
 *         priority: configRulesPriority,
 *         satisfiedResponseTime: configRulesSatisfiedResponseTime,
 *         toleratingResponseTime: configRulesToleratingResponseTime,
 *     }],
 *     runAsUser: configRunAsUser,
 *     serviceName: testService.name,
 * });
 * ```
 *
 * ## Import
 *
 * Configs can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:ApmConfig/config:Config test_config "configs/{configId}/apmDomainId/{apmDomainId}"
 * ```
 */
export class Config extends pulumi.CustomResource {
    /**
     * Get an existing Config resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigState, opts?: pulumi.CustomResourceOptions): Config {
        return new Config(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:ApmConfig/config:Config';

    /**
     * Returns true if the given object is an instance of Config.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Config {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Config.__pulumiType;
    }

    /**
     * (Updatable) The version of the referenced agent bundle.
     */
    public readonly agentVersion!: pulumi.Output<string>;
    /**
     * (Updatable) The APM Domain ID the request is intended for.
     */
    public readonly apmDomainId!: pulumi.Output<string>;
    /**
     * (Updatable) The directory owned by runAsUser.
     */
    public readonly attachInstallDir!: pulumi.Output<string>;
    /**
     * (Updatable) Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit <some variable> and <some content> {{ <some variable> | default <some content> }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration's overrides, specify a different value for <some variable> along with the desired agent filter. Example: "agentFilter": "ApplicationType='Tomcat'" "overrideMap": { "isJfrEnabled": true }
     */
    public readonly config!: pulumi.Output<outputs.ApmConfig.ConfigConfig>;
    /**
     * (Updatable) The type of configuration item.
     */
    public readonly configType!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) An optional string that describes what the options are intended or used for.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) A list of dimensions for the metric. This variable should not be used.
     */
    public readonly dimensions!: pulumi.Output<outputs.ApmConfig.ConfigDimension[]>;
    /**
     * (Updatable) The name by which a configuration entity is displayed to the end user.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * For optimistic concurrency control. See `if-match`.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
     */
    public readonly filterId!: pulumi.Output<string>;
    /**
     * (Updatable) The string that defines the Span Filter expression.
     */
    public readonly filterText!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A string that specifies the group that an OPTIONS item belongs to.
     */
    public readonly group!: pulumi.Output<string>;
    /**
     * The list of configuration items that reference the span filter.
     */
    public readonly inUseBies!: pulumi.Output<outputs.ApmConfig.ConfigInUseBy[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
     */
    public readonly managementAgentId!: pulumi.Output<string>;
    /**
     * The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
     */
    public /*out*/ readonly matchAgentsWithAttributeKeys!: pulumi.Output<string[]>;
    /**
     * The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
     */
    public readonly matchAgentsWithAttributeValue!: pulumi.Output<string>;
    /**
     * (Updatable) The list of metrics in this group.
     */
    public readonly metrics!: pulumi.Output<outputs.ApmConfig.ConfigMetric[]>;
    /**
     * (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     */
    public readonly opcDryRun!: pulumi.Output<string>;
    /**
     * (Updatable) The options are stored here as JSON.
     */
    public readonly options!: pulumi.Output<string>;
    /**
     * (Updatable) Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
     */
    public readonly overrides!: pulumi.Output<outputs.ApmConfig.ConfigOverrides>;
    /**
     * (Updatable) Filter patterns used to discover active Java processes for provisioning the APM Agent.
     */
    public readonly processFilters!: pulumi.Output<string[]>;
    /**
     * (Updatable)
     */
    public readonly rules!: pulumi.Output<outputs.ApmConfig.ConfigRule[]>;
    /**
     * (Updatable) The OS user that should be used to discover Java processes.
     */
    public readonly runAsUser!: pulumi.Output<string>;
    /**
     * (Updatable) The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
     */
    public /*out*/ readonly updatedBy!: pulumi.Output<string>;

    /**
     * Create a Config resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigArgs | ConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigState | undefined;
            resourceInputs["agentVersion"] = state ? state.agentVersion : undefined;
            resourceInputs["apmDomainId"] = state ? state.apmDomainId : undefined;
            resourceInputs["attachInstallDir"] = state ? state.attachInstallDir : undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["configType"] = state ? state.configType : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dimensions"] = state ? state.dimensions : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["filterId"] = state ? state.filterId : undefined;
            resourceInputs["filterText"] = state ? state.filterText : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["group"] = state ? state.group : undefined;
            resourceInputs["inUseBies"] = state ? state.inUseBies : undefined;
            resourceInputs["managementAgentId"] = state ? state.managementAgentId : undefined;
            resourceInputs["matchAgentsWithAttributeKeys"] = state ? state.matchAgentsWithAttributeKeys : undefined;
            resourceInputs["matchAgentsWithAttributeValue"] = state ? state.matchAgentsWithAttributeValue : undefined;
            resourceInputs["metrics"] = state ? state.metrics : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["opcDryRun"] = state ? state.opcDryRun : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["overrides"] = state ? state.overrides : undefined;
            resourceInputs["processFilters"] = state ? state.processFilters : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["runAsUser"] = state ? state.runAsUser : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["updatedBy"] = state ? state.updatedBy : undefined;
        } else {
            const args = argsOrState as ConfigArgs | undefined;
            if ((!args || args.apmDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apmDomainId'");
            }
            if ((!args || args.configType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configType'");
            }
            resourceInputs["agentVersion"] = args ? args.agentVersion : undefined;
            resourceInputs["apmDomainId"] = args ? args.apmDomainId : undefined;
            resourceInputs["attachInstallDir"] = args ? args.attachInstallDir : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["configType"] = args ? args.configType : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dimensions"] = args ? args.dimensions : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["filterId"] = args ? args.filterId : undefined;
            resourceInputs["filterText"] = args ? args.filterText : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["group"] = args ? args.group : undefined;
            resourceInputs["inUseBies"] = args ? args.inUseBies : undefined;
            resourceInputs["managementAgentId"] = args ? args.managementAgentId : undefined;
            resourceInputs["matchAgentsWithAttributeValue"] = args ? args.matchAgentsWithAttributeValue : undefined;
            resourceInputs["metrics"] = args ? args.metrics : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["opcDryRun"] = args ? args.opcDryRun : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["overrides"] = args ? args.overrides : undefined;
            resourceInputs["processFilters"] = args ? args.processFilters : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["runAsUser"] = args ? args.runAsUser : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["matchAgentsWithAttributeKeys"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["updatedBy"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Config.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Config resources.
 */
export interface ConfigState {
    /**
     * (Updatable) The version of the referenced agent bundle.
     */
    agentVersion?: pulumi.Input<string>;
    /**
     * (Updatable) The APM Domain ID the request is intended for.
     */
    apmDomainId?: pulumi.Input<string>;
    /**
     * (Updatable) The directory owned by runAsUser.
     */
    attachInstallDir?: pulumi.Input<string>;
    /**
     * (Updatable) Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit <some variable> and <some content> {{ <some variable> | default <some content> }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration's overrides, specify a different value for <some variable> along with the desired agent filter. Example: "agentFilter": "ApplicationType='Tomcat'" "overrideMap": { "isJfrEnabled": true }
     */
    config?: pulumi.Input<inputs.ApmConfig.ConfigConfig>;
    /**
     * (Updatable) The type of configuration item.
     */
    configType?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) An optional string that describes what the options are intended or used for.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A list of dimensions for the metric. This variable should not be used.
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.ApmConfig.ConfigDimension>[]>;
    /**
     * (Updatable) The name by which a configuration entity is displayed to the end user.
     */
    displayName?: pulumi.Input<string>;
    /**
     * For optimistic concurrency control. See `if-match`.
     */
    etag?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
     */
    filterId?: pulumi.Input<string>;
    /**
     * (Updatable) The string that defines the Span Filter expression.
     */
    filterText?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A string that specifies the group that an OPTIONS item belongs to.
     */
    group?: pulumi.Input<string>;
    /**
     * The list of configuration items that reference the span filter.
     */
    inUseBies?: pulumi.Input<pulumi.Input<inputs.ApmConfig.ConfigInUseBy>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
     */
    managementAgentId?: pulumi.Input<string>;
    /**
     * The agent attribute KEY by which an Agent configuration is matched to an agent.  All agent configuration objects share the same key. It is [ServiceName, service.name] by default.  The attribute VALUE corresponding to this KEY is in the matchAgentsWithAttributeValue field.
     */
    matchAgentsWithAttributeKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
     */
    matchAgentsWithAttributeValue?: pulumi.Input<string>;
    /**
     * (Updatable) The list of metrics in this group.
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ApmConfig.ConfigMetric>[]>;
    /**
     * (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
     */
    namespace?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     */
    opcDryRun?: pulumi.Input<string>;
    /**
     * (Updatable) The options are stored here as JSON.
     */
    options?: pulumi.Input<string>;
    /**
     * (Updatable) Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
     */
    overrides?: pulumi.Input<inputs.ApmConfig.ConfigOverrides>;
    /**
     * (Updatable) Filter patterns used to discover active Java processes for provisioning the APM Agent.
     */
    processFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable)
     */
    rules?: pulumi.Input<pulumi.Input<inputs.ApmConfig.ConfigRule>[]>;
    /**
     * (Updatable) The OS user that should be used to discover Java processes.
     */
    runAsUser?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The time the resource was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-12T22:47:12.613Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the resource was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2020-02-13T22:47:12.613Z`
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a user.
     */
    updatedBy?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Config resource.
 */
export interface ConfigArgs {
    /**
     * (Updatable) The version of the referenced agent bundle.
     */
    agentVersion?: pulumi.Input<string>;
    /**
     * (Updatable) The APM Domain ID the request is intended for.
     */
    apmDomainId: pulumi.Input<string>;
    /**
     * (Updatable) The directory owned by runAsUser.
     */
    attachInstallDir?: pulumi.Input<string>;
    /**
     * (Updatable) Collection of agent configuration files. For agents that use a single configuration file, this SHOULD contain a single entry and the file name MAY be an empty string. For multiple entries, you should use multiple blocks of `configMap`. To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit <some variable> and <some content> {{ <some variable> | default <some content> }} Example: com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }} Then, in the configuration's overrides, specify a different value for <some variable> along with the desired agent filter. Example: "agentFilter": "ApplicationType='Tomcat'" "overrideMap": { "isJfrEnabled": true }
     */
    config?: pulumi.Input<inputs.ApmConfig.ConfigConfig>;
    /**
     * (Updatable) The type of configuration item.
     */
    configType: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) An optional string that describes what the options are intended or used for.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A list of dimensions for the metric. This variable should not be used.
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.ApmConfig.ConfigDimension>[]>;
    /**
     * (Updatable) The name by which a configuration entity is displayed to the end user.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a Span Filter. The filterId is mandatory for the creation of MetricGroups. A filterId is generated when a Span Filter is created.
     */
    filterId?: pulumi.Input<string>;
    /**
     * (Updatable) The string that defines the Span Filter expression.
     */
    filterText?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A string that specifies the group that an OPTIONS item belongs to.
     */
    group?: pulumi.Input<string>;
    /**
     * The list of configuration items that reference the span filter.
     */
    inUseBies?: pulumi.Input<pulumi.Input<inputs.ApmConfig.ConfigInUseBy>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
     */
    managementAgentId?: pulumi.Input<string>;
    /**
     * The agent attribute VALUE by which an agent configuration is matched to an agent.  Each agent configuration object must specify a different value.  The attribute KEY corresponding to this VALUE is in the matchAgentsWithAttributeKey field.
     */
    matchAgentsWithAttributeValue?: pulumi.Input<string>;
    /**
     * (Updatable) The list of metrics in this group.
     */
    metrics?: pulumi.Input<pulumi.Input<inputs.ApmConfig.ConfigMetric>[]>;
    /**
     * (Updatable) The namespace to which the metrics are published. It must be one of several predefined namespaces.
     */
    namespace?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     */
    opcDryRun?: pulumi.Input<string>;
    /**
     * (Updatable) The options are stored here as JSON.
     */
    options?: pulumi.Input<string>;
    /**
     * (Updatable) Agent configuration overrides that should apply to a subset of the agents associated with an Agent Config object.
     */
    overrides?: pulumi.Input<inputs.ApmConfig.ConfigOverrides>;
    /**
     * (Updatable) Filter patterns used to discover active Java processes for provisioning the APM Agent.
     */
    processFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable)
     */
    rules?: pulumi.Input<pulumi.Input<inputs.ApmConfig.ConfigRule>[]>;
    /**
     * (Updatable) The OS user that should be used to discover Java processes.
     */
    runAsUser?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the service being monitored. This argument enables you to filter by service and view traces and other signals in the APM Explorer user interface. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    serviceName?: pulumi.Input<string>;
}
