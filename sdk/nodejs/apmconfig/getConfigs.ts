// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Configs in Oracle Cloud Infrastructure Apm Config service.
 *
 * Returns all configured items optionally filtered by configuration type
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConfigs = oci.ApmConfig.getConfigs({
 *     apmDomainId: oci_apm_apm_domain.test_apm_domain.id,
 *     configType: _var.config_config_type,
 *     displayName: _var.config_display_name,
 * });
 * ```
 */
export function getConfigs(args: GetConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:ApmConfig/getConfigs:getConfigs", {
        "apmDomainId": args.apmDomainId,
        "configType": args.configType,
        "displayName": args.displayName,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getConfigs.
 */
export interface GetConfigsArgs {
    /**
     * The APM Domain Id the request is intended for.
     */
    apmDomainId: string;
    /**
     * A filter to match only configuration items of the given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
     */
    configType?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.ApmConfig.GetConfigsFilter[];
}

/**
 * A collection of values returned by getConfigs.
 */
export interface GetConfigsResult {
    readonly apmDomainId: string;
    /**
     * The list of config_collection.
     */
    readonly configCollections: outputs.ApmConfig.GetConfigsConfigCollection[];
    /**
     * The type of configuration item
     */
    readonly configType?: string;
    /**
     * A user-friendly name that provides a short description this rule.
     */
    readonly displayName?: string;
    readonly filters?: outputs.ApmConfig.GetConfigsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}

export function getConfigsOutput(args: GetConfigsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigsResult> {
    return pulumi.output(args).apply(a => getConfigs(a, opts))
}

/**
 * A collection of arguments for invoking getConfigs.
 */
export interface GetConfigsOutputArgs {
    /**
     * The APM Domain Id the request is intended for.
     */
    apmDomainId: pulumi.Input<string>;
    /**
     * A filter to match only configuration items of the given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
     */
    configType?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.ApmConfig.GetConfigsFilterArgs>[]>;
}
