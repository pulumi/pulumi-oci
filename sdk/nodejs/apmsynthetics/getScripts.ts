// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Scripts in Oracle Cloud Infrastructure APM Availability Monitoring service (aka APM Synthetics Service).
 *
 * Returns a list of scripts.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testScripts = oci.ApmSynthetics.getScripts({
 *     apmDomainId: testApmDomain.id,
 *     contentType: scriptContentType,
 *     displayName: scriptDisplayName,
 * });
 * ```
 */
export function getScripts(args: GetScriptsArgs, opts?: pulumi.InvokeOptions): Promise<GetScriptsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:ApmSynthetics/getScripts:getScripts", {
        "apmDomainId": args.apmDomainId,
        "contentType": args.contentType,
        "displayName": args.displayName,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getScripts.
 */
export interface GetScriptsArgs {
    /**
     * The APM domain ID the request is intended for.
     */
    apmDomainId: string;
    /**
     * A filter to return only resources that match the content type given.
     */
    contentType?: string;
    /**
     * A filter to return only the resources that match the entire display name.
     */
    displayName?: string;
    filters?: inputs.ApmSynthetics.GetScriptsFilter[];
}

/**
 * A collection of values returned by getScripts.
 */
export interface GetScriptsResult {
    readonly apmDomainId: string;
    /**
     * Content type of the script.
     */
    readonly contentType?: string;
    /**
     * Unique name that can be edited. The name should not contain any confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.ApmSynthetics.GetScriptsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of script_collection.
     */
    readonly scriptCollections: outputs.ApmSynthetics.GetScriptsScriptCollection[];
}
/**
 * This data source provides the list of Scripts in Oracle Cloud Infrastructure APM Availability Monitoring service (aka APM Synthetics Service).
 *
 * Returns a list of scripts.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testScripts = oci.ApmSynthetics.getScripts({
 *     apmDomainId: testApmDomain.id,
 *     contentType: scriptContentType,
 *     displayName: scriptDisplayName,
 * });
 * ```
 */
export function getScriptsOutput(args: GetScriptsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetScriptsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:ApmSynthetics/getScripts:getScripts", {
        "apmDomainId": args.apmDomainId,
        "contentType": args.contentType,
        "displayName": args.displayName,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getScripts.
 */
export interface GetScriptsOutputArgs {
    /**
     * The APM domain ID the request is intended for.
     */
    apmDomainId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the content type given.
     */
    contentType?: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the entire display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.ApmSynthetics.GetScriptsFilterArgs>[]>;
}
