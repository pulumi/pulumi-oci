// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConfigArgs, ConfigState } from "./config";
export type Config = import("./config").Config;
export const Config: typeof import("./config").Config = null as any;
utilities.lazyLoad(exports, ["Config"], () => require("./config"));

export { DedicatedVantagePointArgs, DedicatedVantagePointState } from "./dedicatedVantagePoint";
export type DedicatedVantagePoint = import("./dedicatedVantagePoint").DedicatedVantagePoint;
export const DedicatedVantagePoint: typeof import("./dedicatedVantagePoint").DedicatedVantagePoint = null as any;
utilities.lazyLoad(exports, ["DedicatedVantagePoint"], () => require("./dedicatedVantagePoint"));

export { GetDedicatedVantagePointArgs, GetDedicatedVantagePointResult, GetDedicatedVantagePointOutputArgs } from "./getDedicatedVantagePoint";
export const getDedicatedVantagePoint: typeof import("./getDedicatedVantagePoint").getDedicatedVantagePoint = null as any;
export const getDedicatedVantagePointOutput: typeof import("./getDedicatedVantagePoint").getDedicatedVantagePointOutput = null as any;
utilities.lazyLoad(exports, ["getDedicatedVantagePoint","getDedicatedVantagePointOutput"], () => require("./getDedicatedVantagePoint"));

export { GetDedicatedVantagePointsArgs, GetDedicatedVantagePointsResult, GetDedicatedVantagePointsOutputArgs } from "./getDedicatedVantagePoints";
export const getDedicatedVantagePoints: typeof import("./getDedicatedVantagePoints").getDedicatedVantagePoints = null as any;
export const getDedicatedVantagePointsOutput: typeof import("./getDedicatedVantagePoints").getDedicatedVantagePointsOutput = null as any;
utilities.lazyLoad(exports, ["getDedicatedVantagePoints","getDedicatedVantagePointsOutput"], () => require("./getDedicatedVantagePoints"));

export { GetMonitorArgs, GetMonitorResult, GetMonitorOutputArgs } from "./getMonitor";
export const getMonitor: typeof import("./getMonitor").getMonitor = null as any;
export const getMonitorOutput: typeof import("./getMonitor").getMonitorOutput = null as any;
utilities.lazyLoad(exports, ["getMonitor","getMonitorOutput"], () => require("./getMonitor"));

export { GetMonitorsArgs, GetMonitorsResult, GetMonitorsOutputArgs } from "./getMonitors";
export const getMonitors: typeof import("./getMonitors").getMonitors = null as any;
export const getMonitorsOutput: typeof import("./getMonitors").getMonitorsOutput = null as any;
utilities.lazyLoad(exports, ["getMonitors","getMonitorsOutput"], () => require("./getMonitors"));

export { GetOnPremiseVantagePointArgs, GetOnPremiseVantagePointResult, GetOnPremiseVantagePointOutputArgs } from "./getOnPremiseVantagePoint";
export const getOnPremiseVantagePoint: typeof import("./getOnPremiseVantagePoint").getOnPremiseVantagePoint = null as any;
export const getOnPremiseVantagePointOutput: typeof import("./getOnPremiseVantagePoint").getOnPremiseVantagePointOutput = null as any;
utilities.lazyLoad(exports, ["getOnPremiseVantagePoint","getOnPremiseVantagePointOutput"], () => require("./getOnPremiseVantagePoint"));

export { GetOnPremiseVantagePointWorkerArgs, GetOnPremiseVantagePointWorkerResult, GetOnPremiseVantagePointWorkerOutputArgs } from "./getOnPremiseVantagePointWorker";
export const getOnPremiseVantagePointWorker: typeof import("./getOnPremiseVantagePointWorker").getOnPremiseVantagePointWorker = null as any;
export const getOnPremiseVantagePointWorkerOutput: typeof import("./getOnPremiseVantagePointWorker").getOnPremiseVantagePointWorkerOutput = null as any;
utilities.lazyLoad(exports, ["getOnPremiseVantagePointWorker","getOnPremiseVantagePointWorkerOutput"], () => require("./getOnPremiseVantagePointWorker"));

export { GetOnPremiseVantagePointWorkersArgs, GetOnPremiseVantagePointWorkersResult, GetOnPremiseVantagePointWorkersOutputArgs } from "./getOnPremiseVantagePointWorkers";
export const getOnPremiseVantagePointWorkers: typeof import("./getOnPremiseVantagePointWorkers").getOnPremiseVantagePointWorkers = null as any;
export const getOnPremiseVantagePointWorkersOutput: typeof import("./getOnPremiseVantagePointWorkers").getOnPremiseVantagePointWorkersOutput = null as any;
utilities.lazyLoad(exports, ["getOnPremiseVantagePointWorkers","getOnPremiseVantagePointWorkersOutput"], () => require("./getOnPremiseVantagePointWorkers"));

export { GetOnPremiseVantagePointsArgs, GetOnPremiseVantagePointsResult, GetOnPremiseVantagePointsOutputArgs } from "./getOnPremiseVantagePoints";
export const getOnPremiseVantagePoints: typeof import("./getOnPremiseVantagePoints").getOnPremiseVantagePoints = null as any;
export const getOnPremiseVantagePointsOutput: typeof import("./getOnPremiseVantagePoints").getOnPremiseVantagePointsOutput = null as any;
utilities.lazyLoad(exports, ["getOnPremiseVantagePoints","getOnPremiseVantagePointsOutput"], () => require("./getOnPremiseVantagePoints"));

export { GetResultArgs, GetResultResult, GetResultOutputArgs } from "./getResult";
export const getResult: typeof import("./getResult").getResult = null as any;
export const getResultOutput: typeof import("./getResult").getResultOutput = null as any;
utilities.lazyLoad(exports, ["getResult","getResultOutput"], () => require("./getResult"));

export { GetScriptArgs, GetScriptResult, GetScriptOutputArgs } from "./getScript";
export const getScript: typeof import("./getScript").getScript = null as any;
export const getScriptOutput: typeof import("./getScript").getScriptOutput = null as any;
utilities.lazyLoad(exports, ["getScript","getScriptOutput"], () => require("./getScript"));

export { GetScriptsArgs, GetScriptsResult, GetScriptsOutputArgs } from "./getScripts";
export const getScripts: typeof import("./getScripts").getScripts = null as any;
export const getScriptsOutput: typeof import("./getScripts").getScriptsOutput = null as any;
utilities.lazyLoad(exports, ["getScripts","getScriptsOutput"], () => require("./getScripts"));

export { GetVantagePointArgs, GetVantagePointResult, GetVantagePointOutputArgs } from "./getVantagePoint";
export const getVantagePoint: typeof import("./getVantagePoint").getVantagePoint = null as any;
export const getVantagePointOutput: typeof import("./getVantagePoint").getVantagePointOutput = null as any;
utilities.lazyLoad(exports, ["getVantagePoint","getVantagePointOutput"], () => require("./getVantagePoint"));

export { GetVantagePointsArgs, GetVantagePointsResult, GetVantagePointsOutputArgs } from "./getVantagePoints";
export const getVantagePoints: typeof import("./getVantagePoints").getVantagePoints = null as any;
export const getVantagePointsOutput: typeof import("./getVantagePoints").getVantagePointsOutput = null as any;
utilities.lazyLoad(exports, ["getVantagePoints","getVantagePointsOutput"], () => require("./getVantagePoints"));

export { OnPremiseVantagePointArgs, OnPremiseVantagePointState } from "./onPremiseVantagePoint";
export type OnPremiseVantagePoint = import("./onPremiseVantagePoint").OnPremiseVantagePoint;
export const OnPremiseVantagePoint: typeof import("./onPremiseVantagePoint").OnPremiseVantagePoint = null as any;
utilities.lazyLoad(exports, ["OnPremiseVantagePoint"], () => require("./onPremiseVantagePoint"));

export { OnPremiseVantagePointWorkerArgs, OnPremiseVantagePointWorkerState } from "./onPremiseVantagePointWorker";
export type OnPremiseVantagePointWorker = import("./onPremiseVantagePointWorker").OnPremiseVantagePointWorker;
export const OnPremiseVantagePointWorker: typeof import("./onPremiseVantagePointWorker").OnPremiseVantagePointWorker = null as any;
utilities.lazyLoad(exports, ["OnPremiseVantagePointWorker"], () => require("./onPremiseVantagePointWorker"));

export { ScriptArgs, ScriptState } from "./script";
export type Script = import("./script").Script;
export const Script: typeof import("./script").Script = null as any;
utilities.lazyLoad(exports, ["Script"], () => require("./script"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:ApmSynthetics/config:Config":
                return new Config(name, <any>undefined, { urn })
            case "oci:ApmSynthetics/dedicatedVantagePoint:DedicatedVantagePoint":
                return new DedicatedVantagePoint(name, <any>undefined, { urn })
            case "oci:ApmSynthetics/onPremiseVantagePoint:OnPremiseVantagePoint":
                return new OnPremiseVantagePoint(name, <any>undefined, { urn })
            case "oci:ApmSynthetics/onPremiseVantagePointWorker:OnPremiseVantagePointWorker":
                return new OnPremiseVantagePointWorker(name, <any>undefined, { urn })
            case "oci:ApmSynthetics/script:Script":
                return new Script(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "ApmSynthetics/config", _module)
pulumi.runtime.registerResourceModule("oci", "ApmSynthetics/dedicatedVantagePoint", _module)
pulumi.runtime.registerResourceModule("oci", "ApmSynthetics/onPremiseVantagePoint", _module)
pulumi.runtime.registerResourceModule("oci", "ApmSynthetics/onPremiseVantagePointWorker", _module)
pulumi.runtime.registerResourceModule("oci", "ApmSynthetics/script", _module)
