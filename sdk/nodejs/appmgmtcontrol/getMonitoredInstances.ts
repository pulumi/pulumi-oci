// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Monitored Instances in Oracle Cloud Infrastructure Appmgmt Control service.
 *
 * Returns a list of monitored instances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredInstances = oci.AppMgmtControl.getMonitoredInstances({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.monitored_instance_display_name,
 * });
 * ```
 */
export function getMonitoredInstances(args: GetMonitoredInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoredInstancesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:AppMgmtControl/getMonitoredInstances:getMonitoredInstances", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoredInstances.
 */
export interface GetMonitoredInstancesArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.AppMgmtControl.GetMonitoredInstancesFilter[];
}

/**
 * A collection of values returned by getMonitoredInstances.
 */
export interface GetMonitoredInstancesResult {
    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    readonly compartmentId: string;
    /**
     * A user-friendly name of the monitored instance. It is binded to [Compute Instance](https://docs.cloud.oracle.com/iaas/Content/Compute/Concepts/computeoverview.htm). DisplayName is fetched from [Core Service API](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/Instance/).
     */
    readonly displayName?: string;
    readonly filters?: outputs.AppMgmtControl.GetMonitoredInstancesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of monitored_instance_collection.
     */
    readonly monitoredInstanceCollections: outputs.AppMgmtControl.GetMonitoredInstancesMonitoredInstanceCollection[];
}

export function getMonitoredInstancesOutput(args: GetMonitoredInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoredInstancesResult> {
    return pulumi.output(args).apply(a => getMonitoredInstances(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoredInstances.
 */
export interface GetMonitoredInstancesOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.AppMgmtControl.GetMonitoredInstancesFilterArgs>[]>;
}
