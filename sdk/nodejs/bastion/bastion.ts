// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Bastion resource in Oracle Cloud Infrastructure Bastion service.
 *
 * Creates a new bastion. A bastion provides secured, public access to target resources in the cloud that you cannot otherwise reach from the internet. A bastion resides in a public subnet and establishes the network infrastructure needed to connect a user to a target resource in a private subnet.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBastion = new oci.bastion.Bastion("testBastion", {
 *     bastionType: _var.bastion_bastion_type,
 *     compartmentId: _var.compartment_id,
 *     targetSubnetId: oci_core_subnet.test_subnet.id,
 *     clientCidrBlockAllowLists: _var.bastion_client_cidr_block_allow_list,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     maxSessionTtlInSeconds: _var.bastion_max_session_ttl_in_seconds,
 *     phoneBookEntry: _var.bastion_phone_book_entry,
 *     staticJumpHostIpAddresses: _var.bastion_static_jump_host_ip_addresses,
 * });
 * ```
 *
 * ## Import
 *
 * Bastions can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Bastion/bastion:Bastion test_bastion "id"
 * ```
 */
export class Bastion extends pulumi.CustomResource {
    /**
     * Get an existing Bastion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BastionState, opts?: pulumi.CustomResourceOptions): Bastion {
        return new Bastion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Bastion/bastion:Bastion';

    /**
     * Returns true if the given object is an instance of Bastion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Bastion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Bastion.__pulumiType;
    }

    /**
     * The type of bastion. Use `standard`.
     */
    public readonly bastionType!: pulumi.Output<string>;
    /**
     * (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
     */
    public readonly clientCidrBlockAllowLists!: pulumi.Output<string[]>;
    /**
     * (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) The maximum amount of time that any session on the bastion can remain active.
     */
    public readonly maxSessionTtlInSeconds!: pulumi.Output<number>;
    /**
     * The maximum number of active sessions allowed on the bastion.
     */
    public /*out*/ readonly maxSessionsAllowed!: pulumi.Output<number>;
    /**
     * The name of the bastion, which can't be changed after creation.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
     */
    public readonly phoneBookEntry!: pulumi.Output<string>;
    /**
     * The private IP address of the created private endpoint.
     */
    public /*out*/ readonly privateEndpointIpAddress!: pulumi.Output<string>;
    /**
     * The current state of the bastion.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
     */
    public readonly staticJumpHostIpAddresses!: pulumi.Output<string[]>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The unique identifier (OCID) of the subnet that the bastion connects to.
     */
    public readonly targetSubnetId!: pulumi.Output<string>;
    /**
     * The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
     */
    public /*out*/ readonly targetVcnId!: pulumi.Output<string>;
    /**
     * The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a Bastion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BastionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BastionArgs | BastionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BastionState | undefined;
            resourceInputs["bastionType"] = state ? state.bastionType : undefined;
            resourceInputs["clientCidrBlockAllowLists"] = state ? state.clientCidrBlockAllowLists : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["maxSessionTtlInSeconds"] = state ? state.maxSessionTtlInSeconds : undefined;
            resourceInputs["maxSessionsAllowed"] = state ? state.maxSessionsAllowed : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["phoneBookEntry"] = state ? state.phoneBookEntry : undefined;
            resourceInputs["privateEndpointIpAddress"] = state ? state.privateEndpointIpAddress : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["staticJumpHostIpAddresses"] = state ? state.staticJumpHostIpAddresses : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["targetSubnetId"] = state ? state.targetSubnetId : undefined;
            resourceInputs["targetVcnId"] = state ? state.targetVcnId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as BastionArgs | undefined;
            if ((!args || args.bastionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bastionType'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.targetSubnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetSubnetId'");
            }
            resourceInputs["bastionType"] = args ? args.bastionType : undefined;
            resourceInputs["clientCidrBlockAllowLists"] = args ? args.clientCidrBlockAllowLists : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["maxSessionTtlInSeconds"] = args ? args.maxSessionTtlInSeconds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["phoneBookEntry"] = args ? args.phoneBookEntry : undefined;
            resourceInputs["staticJumpHostIpAddresses"] = args ? args.staticJumpHostIpAddresses : undefined;
            resourceInputs["targetSubnetId"] = args ? args.targetSubnetId : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["maxSessionsAllowed"] = undefined /*out*/;
            resourceInputs["privateEndpointIpAddress"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["targetVcnId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Bastion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Bastion resources.
 */
export interface BastionState {
    /**
     * The type of bastion. Use `standard`.
     */
    bastionType?: pulumi.Input<string>;
    /**
     * (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
     */
    clientCidrBlockAllowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The maximum amount of time that any session on the bastion can remain active.
     */
    maxSessionTtlInSeconds?: pulumi.Input<number>;
    /**
     * The maximum number of active sessions allowed on the bastion.
     */
    maxSessionsAllowed?: pulumi.Input<number>;
    /**
     * The name of the bastion, which can't be changed after creation.
     */
    name?: pulumi.Input<string>;
    /**
     * The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
     */
    phoneBookEntry?: pulumi.Input<string>;
    /**
     * The private IP address of the created private endpoint.
     */
    privateEndpointIpAddress?: pulumi.Input<string>;
    /**
     * The current state of the bastion.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
     */
    staticJumpHostIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The unique identifier (OCID) of the subnet that the bastion connects to.
     */
    targetSubnetId?: pulumi.Input<string>;
    /**
     * The unique identifier (OCID) of the virtual cloud network (VCN) that the bastion connects to.
     */
    targetVcnId?: pulumi.Input<string>;
    /**
     * The time the bastion was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the bastion was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Bastion resource.
 */
export interface BastionArgs {
    /**
     * The type of bastion. Use `standard`.
     */
    bastionType: pulumi.Input<string>;
    /**
     * (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
     */
    clientCidrBlockAllowLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The maximum amount of time that any session on the bastion can remain active.
     */
    maxSessionTtlInSeconds?: pulumi.Input<number>;
    /**
     * The name of the bastion, which can't be changed after creation.
     */
    name?: pulumi.Input<string>;
    /**
     * The phonebook entry of the customer's team, which can't be changed after creation. Not applicable to `standard` bastions.
     */
    phoneBookEntry?: pulumi.Input<string>;
    /**
     * (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
     */
    staticJumpHostIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique identifier (OCID) of the subnet that the bastion connects to.
     */
    targetSubnetId: pulumi.Input<string>;
}
