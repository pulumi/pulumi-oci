// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Session resource in Oracle Cloud Infrastructure Bastion service.
 *
 * Retrieves a session identified by the session ID. A bastion session lets authorized users connect to a target resource for a predetermined amount of time.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSession = oci.Bastion.getSession({
 *     sessionId: testSessionOciBastionSession.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSession(args: GetSessionArgs, opts?: pulumi.InvokeOptions): Promise<GetSessionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Bastion/getSession:getSession", {
        "sessionId": args.sessionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSession.
 */
export interface GetSessionArgs {
    /**
     * The unique identifier (OCID) of the session.
     */
    sessionId: string;
}

/**
 * A collection of values returned by getSession.
 */
export interface GetSessionResult {
    /**
     * The unique identifier (OCID) of the bastion that is hosting this session.
     */
    readonly bastionId: string;
    /**
     * The name of the bastion that is hosting this session.
     */
    readonly bastionName: string;
    /**
     * The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
     */
    readonly bastionPublicHostKeyInfo: string;
    /**
     * The username that the session uses to connect to the target resource.
     */
    readonly bastionUserName: string;
    /**
     * The name of the session.
     */
    readonly displayName: string;
    /**
     * The unique identifier (OCID) of the session, which can't be changed after creation.
     */
    readonly id: string;
    /**
     * Public key details for a bastion session.
     */
    readonly keyDetails: outputs.Bastion.GetSessionKeyDetail[];
    /**
     * The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     */
    readonly keyType: string;
    /**
     * A message describing the current session state in more detail.
     */
    readonly lifecycleDetails: string;
    readonly sessionId: string;
    /**
     * The amount of time the session can remain active.
     */
    readonly sessionTtlInSeconds: number;
    /**
     * The connection message for the session.
     */
    readonly sshMetadata: {[key: string]: any};
    /**
     * The current state of the session.
     */
    readonly state: string;
    /**
     * Details about a bastion session's target resource.
     */
    readonly targetResourceDetails: outputs.Bastion.GetSessionTargetResourceDetail[];
    /**
     * The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    readonly timeCreated: string;
    /**
     * The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Session resource in Oracle Cloud Infrastructure Bastion service.
 *
 * Retrieves a session identified by the session ID. A bastion session lets authorized users connect to a target resource for a predetermined amount of time.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSession = oci.Bastion.getSession({
 *     sessionId: testSessionOciBastionSession.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSessionOutput(args: GetSessionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSessionResult> {
    return pulumi.output(args).apply((a: any) => getSession(a, opts))
}

/**
 * A collection of arguments for invoking getSession.
 */
export interface GetSessionOutputArgs {
    /**
     * The unique identifier (OCID) of the session.
     */
    sessionId: pulumi.Input<string>;
}
