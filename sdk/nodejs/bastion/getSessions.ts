// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Sessions in Oracle Cloud Infrastructure Bastion service.
 *
 * Retrieves a list of SessionSummary objects for an existing bastion. Bastion sessions let authorized users connect to a target resource for a predetermined amount of time.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSessions = oci.Bastion.getSessions({
 *     bastionId: oci_bastion_bastion.test_bastion.id,
 *     displayName: _var.session_display_name,
 *     sessionId: oci_bastion_session.test_session.id,
 *     sessionLifecycleState: _var.session_session_lifecycle_state,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSessions(args: GetSessionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSessionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Bastion/getSessions:getSessions", {
        "bastionId": args.bastionId,
        "displayName": args.displayName,
        "filters": args.filters,
        "sessionId": args.sessionId,
        "sessionLifecycleState": args.sessionLifecycleState,
    }, opts);
}

/**
 * A collection of arguments for invoking getSessions.
 */
export interface GetSessionsArgs {
    /**
     * The unique identifier (OCID) of the bastion in which to list sessions.
     */
    bastionId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.Bastion.GetSessionsFilter[];
    /**
     * The unique identifier (OCID) of the session in which to list resources.
     */
    sessionId?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    sessionLifecycleState?: string;
}

/**
 * A collection of values returned by getSessions.
 */
export interface GetSessionsResult {
    /**
     * The unique identifier (OCID) of the bastion that is hosting this session.
     */
    readonly bastionId: string;
    /**
     * The name of the session.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Bastion.GetSessionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly sessionId?: string;
    readonly sessionLifecycleState?: string;
    /**
     * The list of sessions.
     */
    readonly sessions: outputs.Bastion.GetSessionsSession[];
}
/**
 * This data source provides the list of Sessions in Oracle Cloud Infrastructure Bastion service.
 *
 * Retrieves a list of SessionSummary objects for an existing bastion. Bastion sessions let authorized users connect to a target resource for a predetermined amount of time.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSessions = oci.Bastion.getSessions({
 *     bastionId: oci_bastion_bastion.test_bastion.id,
 *     displayName: _var.session_display_name,
 *     sessionId: oci_bastion_session.test_session.id,
 *     sessionLifecycleState: _var.session_session_lifecycle_state,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSessionsOutput(args: GetSessionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSessionsResult> {
    return pulumi.output(args).apply((a: any) => getSessions(a, opts))
}

/**
 * A collection of arguments for invoking getSessions.
 */
export interface GetSessionsOutputArgs {
    /**
     * The unique identifier (OCID) of the bastion in which to list sessions.
     */
    bastionId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Bastion.GetSessionsFilterArgs>[]>;
    /**
     * The unique identifier (OCID) of the session in which to list resources.
     */
    sessionId?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    sessionLifecycleState?: pulumi.Input<string>;
}
