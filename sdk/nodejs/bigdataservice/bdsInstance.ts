// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Bds Instance resource in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Creates a Big Data Service cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstance = new oci.bigdataservice.BdsInstance("testBdsInstance", {
 *     clusterAdminPassword: _var.bds_instance_cluster_admin_password,
 *     clusterPublicKey: _var.bds_instance_cluster_public_key,
 *     clusterVersion: _var.bds_instance_cluster_version,
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.bds_instance_display_name,
 *     isHighAvailability: _var.bds_instance_is_high_availability,
 *     isSecure: _var.bds_instance_is_secure,
 *     masterNode: {
 *         shape: _var.bds_instance_nodes_shape,
 *         subnetId: oci_core_subnet.test_subnet.id,
 *         blockVolumeSizeInGbs: _var.bds_instance_nodes_block_volume_size_in_gbs,
 *         numberOfNodes: _var.bds_instance_number_of_nodes,
 *     },
 *     utilNode: {
 *         shape: _var.bds_instance_nodes_shape,
 *         subnetId: oci_core_subnet.test_subnet.id,
 *         blockVolumeSizeInGbs: _var.bds_instance_nodes_block_volume_size_in_gbs,
 *         numberOfNodes: _var.bds_instance_number_of_nodes,
 *     },
 *     workerNode: {
 *         shape: _var.bds_instance_nodes_shape,
 *         subnetId: oci_core_subnet.test_subnet.id,
 *         blockVolumeSizeInGbs: _var.bds_instance_nodes_block_volume_size_in_gbs,
 *         numberOfNodes: _var.bds_instance_number_of_nodes,
 *     },
 *     definedTags: _var.bds_instance_defined_tags,
 *     freeformTags: _var.bds_instance_freeform_tags,
 *     networkConfig: {
 *         cidrBlock: _var.bds_instance_network_config_cidr_block,
 *         isNatGatewayRequired: _var.bds_instance_network_config_is_nat_gateway_required,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * BdsInstances can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:BigDataService/bdsInstance:BdsInstance test_bds_instance "id"
 * ```
 */
export class BdsInstance extends pulumi.CustomResource {
    /**
     * Get an existing BdsInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BdsInstanceState, opts?: pulumi.CustomResourceOptions): BdsInstance {
        return new BdsInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:BigDataService/bdsInstance:BdsInstance';

    /**
     * Returns true if the given object is an instance of BdsInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BdsInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BdsInstance.__pulumiType;
    }

    /**
     * The information about added Cloud SQL capability
     */
    public readonly cloudSqlDetails!: pulumi.Output<outputs.BigDataService.BdsInstanceCloudSqlDetail[]>;
    /**
     * Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
     */
    public readonly clusterAdminPassword!: pulumi.Output<string>;
    /**
     * Specific info about a Hadoop cluster
     */
    public /*out*/ readonly clusterDetails!: pulumi.Output<outputs.BigDataService.BdsInstanceClusterDetail[]>;
    /**
     * The SSH public key used to authenticate the cluster connection.
     */
    public readonly clusterPublicKey!: pulumi.Output<string>;
    /**
     * Version of the Hadoop distribution.
     */
    public readonly clusterVersion!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The user who created the cluster.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Name of the Big Data Service cluster.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Boolean flag specifying whether or not Cloud SQL should be configured.
     */
    public readonly isCloudSqlConfigured!: pulumi.Output<boolean>;
    /**
     * Boolean flag specifying whether or not the cluster is highly available (HA).
     */
    public readonly isHighAvailability!: pulumi.Output<boolean>;
    /**
     * Boolean flag specifying whether or not the cluster should be set up as secure.
     */
    public readonly isSecure!: pulumi.Output<boolean>;
    public readonly masterNode!: pulumi.Output<outputs.BigDataService.BdsInstanceMasterNode>;
    /**
     * Additional configuration of the user's network.
     */
    public readonly networkConfig!: pulumi.Output<outputs.BigDataService.BdsInstanceNetworkConfig>;
    /**
     * The list of nodes in the Big Data Service cluster.
     */
    public /*out*/ readonly nodes!: pulumi.Output<outputs.BigDataService.BdsInstanceNode[]>;
    /**
     * The number of nodes that form the cluster.
     */
    public /*out*/ readonly numberOfNodes!: pulumi.Output<number>;
    /**
     * The state of the cluster.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    public readonly utilNode!: pulumi.Output<outputs.BigDataService.BdsInstanceUtilNode>;
    public readonly workerNode!: pulumi.Output<outputs.BigDataService.BdsInstanceWorkerNode>;

    /**
     * Create a BdsInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BdsInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BdsInstanceArgs | BdsInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BdsInstanceState | undefined;
            resourceInputs["cloudSqlDetails"] = state ? state.cloudSqlDetails : undefined;
            resourceInputs["clusterAdminPassword"] = state ? state.clusterAdminPassword : undefined;
            resourceInputs["clusterDetails"] = state ? state.clusterDetails : undefined;
            resourceInputs["clusterPublicKey"] = state ? state.clusterPublicKey : undefined;
            resourceInputs["clusterVersion"] = state ? state.clusterVersion : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isCloudSqlConfigured"] = state ? state.isCloudSqlConfigured : undefined;
            resourceInputs["isHighAvailability"] = state ? state.isHighAvailability : undefined;
            resourceInputs["isSecure"] = state ? state.isSecure : undefined;
            resourceInputs["masterNode"] = state ? state.masterNode : undefined;
            resourceInputs["networkConfig"] = state ? state.networkConfig : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["numberOfNodes"] = state ? state.numberOfNodes : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["utilNode"] = state ? state.utilNode : undefined;
            resourceInputs["workerNode"] = state ? state.workerNode : undefined;
        } else {
            const args = argsOrState as BdsInstanceArgs | undefined;
            if ((!args || args.clusterAdminPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterAdminPassword'");
            }
            if ((!args || args.clusterPublicKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterPublicKey'");
            }
            if ((!args || args.clusterVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterVersion'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.isHighAvailability === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isHighAvailability'");
            }
            if ((!args || args.isSecure === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isSecure'");
            }
            if ((!args || args.masterNode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masterNode'");
            }
            if ((!args || args.utilNode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'utilNode'");
            }
            if ((!args || args.workerNode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workerNode'");
            }
            resourceInputs["cloudSqlDetails"] = args ? args.cloudSqlDetails : undefined;
            resourceInputs["clusterAdminPassword"] = args ? args.clusterAdminPassword : undefined;
            resourceInputs["clusterPublicKey"] = args ? args.clusterPublicKey : undefined;
            resourceInputs["clusterVersion"] = args ? args.clusterVersion : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isCloudSqlConfigured"] = args ? args.isCloudSqlConfigured : undefined;
            resourceInputs["isHighAvailability"] = args ? args.isHighAvailability : undefined;
            resourceInputs["isSecure"] = args ? args.isSecure : undefined;
            resourceInputs["masterNode"] = args ? args.masterNode : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["utilNode"] = args ? args.utilNode : undefined;
            resourceInputs["workerNode"] = args ? args.workerNode : undefined;
            resourceInputs["clusterDetails"] = undefined /*out*/;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["nodes"] = undefined /*out*/;
            resourceInputs["numberOfNodes"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BdsInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BdsInstance resources.
 */
export interface BdsInstanceState {
    /**
     * The information about added Cloud SQL capability
     */
    cloudSqlDetails?: pulumi.Input<pulumi.Input<inputs.BigDataService.BdsInstanceCloudSqlDetail>[]>;
    /**
     * Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
     */
    clusterAdminPassword?: pulumi.Input<string>;
    /**
     * Specific info about a Hadoop cluster
     */
    clusterDetails?: pulumi.Input<pulumi.Input<inputs.BigDataService.BdsInstanceClusterDetail>[]>;
    /**
     * The SSH public key used to authenticate the cluster connection.
     */
    clusterPublicKey?: pulumi.Input<string>;
    /**
     * Version of the Hadoop distribution.
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The user who created the cluster.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Name of the Big Data Service cluster.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Boolean flag specifying whether or not Cloud SQL should be configured.
     */
    isCloudSqlConfigured?: pulumi.Input<boolean>;
    /**
     * Boolean flag specifying whether or not the cluster is highly available (HA).
     */
    isHighAvailability?: pulumi.Input<boolean>;
    /**
     * Boolean flag specifying whether or not the cluster should be set up as secure.
     */
    isSecure?: pulumi.Input<boolean>;
    masterNode?: pulumi.Input<inputs.BigDataService.BdsInstanceMasterNode>;
    /**
     * Additional configuration of the user's network.
     */
    networkConfig?: pulumi.Input<inputs.BigDataService.BdsInstanceNetworkConfig>;
    /**
     * The list of nodes in the Big Data Service cluster.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.BigDataService.BdsInstanceNode>[]>;
    /**
     * The number of nodes that form the cluster.
     */
    numberOfNodes?: pulumi.Input<number>;
    /**
     * The state of the cluster.
     */
    state?: pulumi.Input<string>;
    /**
     * The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    utilNode?: pulumi.Input<inputs.BigDataService.BdsInstanceUtilNode>;
    workerNode?: pulumi.Input<inputs.BigDataService.BdsInstanceWorkerNode>;
}

/**
 * The set of arguments for constructing a BdsInstance resource.
 */
export interface BdsInstanceArgs {
    /**
     * The information about added Cloud SQL capability
     */
    cloudSqlDetails?: pulumi.Input<pulumi.Input<inputs.BigDataService.BdsInstanceCloudSqlDetail>[]>;
    /**
     * Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
     */
    clusterAdminPassword: pulumi.Input<string>;
    /**
     * The SSH public key used to authenticate the cluster connection.
     */
    clusterPublicKey: pulumi.Input<string>;
    /**
     * Version of the Hadoop distribution.
     */
    clusterVersion: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{"foo-namespace": {"bar-key": "value"}}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Name of the Big Data Service cluster.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Boolean flag specifying whether or not Cloud SQL should be configured.
     */
    isCloudSqlConfigured?: pulumi.Input<boolean>;
    /**
     * Boolean flag specifying whether or not the cluster is highly available (HA).
     */
    isHighAvailability: pulumi.Input<boolean>;
    /**
     * Boolean flag specifying whether or not the cluster should be set up as secure.
     */
    isSecure: pulumi.Input<boolean>;
    masterNode: pulumi.Input<inputs.BigDataService.BdsInstanceMasterNode>;
    /**
     * Additional configuration of the user's network.
     */
    networkConfig?: pulumi.Input<inputs.BigDataService.BdsInstanceNetworkConfig>;
    utilNode: pulumi.Input<inputs.BigDataService.BdsInstanceUtilNode>;
    workerNode: pulumi.Input<inputs.BigDataService.BdsInstanceWorkerNode>;
}
