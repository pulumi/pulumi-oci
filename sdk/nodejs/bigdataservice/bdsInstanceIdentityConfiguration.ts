// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Bds Instance Identity Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Create an identity configuration for the cluster
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceIdentityConfiguration = new oci.bigdataservice.BdsInstanceIdentityConfiguration("test_bds_instance_identity_configuration", {
 *     bdsInstanceId: testBdsInstance.id,
 *     clusterAdminPassword: bdsInstanceIdentityConfigurationClusterAdminPassword,
 *     confidentialApplicationId: testApplication.id,
 *     displayName: bdsInstanceIdentityConfigurationDisplayName,
 *     identityDomainId: testDomain.id,
 *     iamUserSyncConfigurationDetails: {
 *         isPosixAttributesAdditionRequired: bdsInstanceIdentityConfigurationIamUserSyncConfigurationDetailsIsPosixAttributesAdditionRequired,
 *     },
 *     upstConfigurationDetails: {
 *         masterEncryptionKeyId: testKey.id,
 *         vaultId: testVault.id,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * BdsInstanceIdentityConfigurations can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:BigDataService/bdsInstanceIdentityConfiguration:BdsInstanceIdentityConfiguration test_bds_instance_identity_configuration "bdsInstances/{bdsInstanceId}/identityConfigurations/{identityConfigurationId}"
 * ```
 */
export class BdsInstanceIdentityConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing BdsInstanceIdentityConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BdsInstanceIdentityConfigurationState, opts?: pulumi.CustomResourceOptions): BdsInstanceIdentityConfiguration {
        return new BdsInstanceIdentityConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:BigDataService/bdsInstanceIdentityConfiguration:BdsInstanceIdentityConfiguration';

    /**
     * Returns true if the given object is an instance of BdsInstanceIdentityConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BdsInstanceIdentityConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BdsInstanceIdentityConfiguration.__pulumiType;
    }

    /**
     * (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
     */
    declare public readonly activateIamUserSyncConfigurationTrigger: pulumi.Output<string | undefined>;
    /**
     * (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
     */
    declare public readonly activateUpstConfigurationTrigger: pulumi.Output<string | undefined>;
    /**
     * The OCID of the cluster.
     */
    declare public readonly bdsInstanceId: pulumi.Output<string>;
    /**
     * (Updatable) Base-64 encoded password for the cluster admin user.
     */
    declare public readonly clusterAdminPassword: pulumi.Output<string>;
    /**
     * Identity domain confidential application ID for the identity config, required for creating identity configuration
     */
    declare public readonly confidentialApplicationId: pulumi.Output<string>;
    /**
     * Display name of the identity configuration, required for creating identity configuration.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Details for activating/updating an IAM user sync configuration
     */
    declare public readonly iamUserSyncConfigurationDetails: pulumi.Output<outputs.BigDataService.BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetails>;
    /**
     * Information about the IAM user sync configuration.
     */
    declare public /*out*/ readonly iamUserSyncConfigurations: pulumi.Output<outputs.BigDataService.BdsInstanceIdentityConfigurationIamUserSyncConfiguration[]>;
    /**
     * Identity domain OCID to use for identity config, required for creating identity configuration
     */
    declare public readonly identityDomainId: pulumi.Output<string>;
    /**
     * (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
     */
    declare public readonly refreshConfidentialApplicationTrigger: pulumi.Output<string | undefined>;
    /**
     * (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly refreshUpstTokenExchangeKeytabTrigger: pulumi.Output<string | undefined>;
    /**
     * Lifecycle state of the UPST config
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * (Updatable) Details for activating/updating UPST config on the cluster
     */
    declare public readonly upstConfigurationDetails: pulumi.Output<outputs.BigDataService.BdsInstanceIdentityConfigurationUpstConfigurationDetails>;
    /**
     * Information about the UPST configuration.
     */
    declare public /*out*/ readonly upstConfigurations: pulumi.Output<outputs.BigDataService.BdsInstanceIdentityConfigurationUpstConfiguration[]>;

    /**
     * Create a BdsInstanceIdentityConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BdsInstanceIdentityConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BdsInstanceIdentityConfigurationArgs | BdsInstanceIdentityConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BdsInstanceIdentityConfigurationState | undefined;
            resourceInputs["activateIamUserSyncConfigurationTrigger"] = state?.activateIamUserSyncConfigurationTrigger;
            resourceInputs["activateUpstConfigurationTrigger"] = state?.activateUpstConfigurationTrigger;
            resourceInputs["bdsInstanceId"] = state?.bdsInstanceId;
            resourceInputs["clusterAdminPassword"] = state?.clusterAdminPassword;
            resourceInputs["confidentialApplicationId"] = state?.confidentialApplicationId;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["iamUserSyncConfigurationDetails"] = state?.iamUserSyncConfigurationDetails;
            resourceInputs["iamUserSyncConfigurations"] = state?.iamUserSyncConfigurations;
            resourceInputs["identityDomainId"] = state?.identityDomainId;
            resourceInputs["refreshConfidentialApplicationTrigger"] = state?.refreshConfidentialApplicationTrigger;
            resourceInputs["refreshUpstTokenExchangeKeytabTrigger"] = state?.refreshUpstTokenExchangeKeytabTrigger;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["upstConfigurationDetails"] = state?.upstConfigurationDetails;
            resourceInputs["upstConfigurations"] = state?.upstConfigurations;
        } else {
            const args = argsOrState as BdsInstanceIdentityConfigurationArgs | undefined;
            if (args?.bdsInstanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'bdsInstanceId'");
            }
            if (args?.clusterAdminPassword === undefined && !opts.urn) {
                throw new Error("Missing required property 'clusterAdminPassword'");
            }
            if (args?.confidentialApplicationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'confidentialApplicationId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.identityDomainId === undefined && !opts.urn) {
                throw new Error("Missing required property 'identityDomainId'");
            }
            resourceInputs["activateIamUserSyncConfigurationTrigger"] = args?.activateIamUserSyncConfigurationTrigger;
            resourceInputs["activateUpstConfigurationTrigger"] = args?.activateUpstConfigurationTrigger;
            resourceInputs["bdsInstanceId"] = args?.bdsInstanceId;
            resourceInputs["clusterAdminPassword"] = args?.clusterAdminPassword ? pulumi.secret(args.clusterAdminPassword) : undefined;
            resourceInputs["confidentialApplicationId"] = args?.confidentialApplicationId;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["iamUserSyncConfigurationDetails"] = args?.iamUserSyncConfigurationDetails;
            resourceInputs["identityDomainId"] = args?.identityDomainId;
            resourceInputs["refreshConfidentialApplicationTrigger"] = args?.refreshConfidentialApplicationTrigger;
            resourceInputs["refreshUpstTokenExchangeKeytabTrigger"] = args?.refreshUpstTokenExchangeKeytabTrigger;
            resourceInputs["upstConfigurationDetails"] = args?.upstConfigurationDetails;
            resourceInputs["iamUserSyncConfigurations"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["upstConfigurations"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clusterAdminPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(BdsInstanceIdentityConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BdsInstanceIdentityConfiguration resources.
 */
export interface BdsInstanceIdentityConfigurationState {
    /**
     * (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
     */
    activateIamUserSyncConfigurationTrigger?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
     */
    activateUpstConfigurationTrigger?: pulumi.Input<string>;
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId?: pulumi.Input<string>;
    /**
     * (Updatable) Base-64 encoded password for the cluster admin user.
     */
    clusterAdminPassword?: pulumi.Input<string>;
    /**
     * Identity domain confidential application ID for the identity config, required for creating identity configuration
     */
    confidentialApplicationId?: pulumi.Input<string>;
    /**
     * Display name of the identity configuration, required for creating identity configuration.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Details for activating/updating an IAM user sync configuration
     */
    iamUserSyncConfigurationDetails?: pulumi.Input<inputs.BigDataService.BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetails>;
    /**
     * Information about the IAM user sync configuration.
     */
    iamUserSyncConfigurations?: pulumi.Input<pulumi.Input<inputs.BigDataService.BdsInstanceIdentityConfigurationIamUserSyncConfiguration>[]>;
    /**
     * Identity domain OCID to use for identity config, required for creating identity configuration
     */
    identityDomainId?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
     */
    refreshConfidentialApplicationTrigger?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    refreshUpstTokenExchangeKeytabTrigger?: pulumi.Input<string>;
    /**
     * Lifecycle state of the UPST config
     */
    state?: pulumi.Input<string>;
    /**
     * Time when this UPST config was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Time when this UPST config was updated, shown as an RFC 3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) Details for activating/updating UPST config on the cluster
     */
    upstConfigurationDetails?: pulumi.Input<inputs.BigDataService.BdsInstanceIdentityConfigurationUpstConfigurationDetails>;
    /**
     * Information about the UPST configuration.
     */
    upstConfigurations?: pulumi.Input<pulumi.Input<inputs.BigDataService.BdsInstanceIdentityConfigurationUpstConfiguration>[]>;
}

/**
 * The set of arguments for constructing a BdsInstanceIdentityConfiguration resource.
 */
export interface BdsInstanceIdentityConfigurationArgs {
    /**
     * (Updatable) An optional property when set to "true" triggers Activate Iam User Sync Configuration and when set to "false" triggers Deactivate Iam User Sync Configuration.
     */
    activateIamUserSyncConfigurationTrigger?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when set to "true" triggers Activate Upst Configuration and when set to "false" triggers Deactivate Upst Configuration.
     */
    activateUpstConfigurationTrigger?: pulumi.Input<string>;
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: pulumi.Input<string>;
    /**
     * (Updatable) Base-64 encoded password for the cluster admin user.
     */
    clusterAdminPassword: pulumi.Input<string>;
    /**
     * Identity domain confidential application ID for the identity config, required for creating identity configuration
     */
    confidentialApplicationId: pulumi.Input<string>;
    /**
     * Display name of the identity configuration, required for creating identity configuration.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Details for activating/updating an IAM user sync configuration
     */
    iamUserSyncConfigurationDetails?: pulumi.Input<inputs.BigDataService.BdsInstanceIdentityConfigurationIamUserSyncConfigurationDetails>;
    /**
     * Identity domain OCID to use for identity config, required for creating identity configuration
     */
    identityDomainId: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when set to "true" triggers Refresh Confidential Application.
     */
    refreshConfidentialApplicationTrigger?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when set to "true"  triggers Refresh Upst Token Exchange Keytab.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    refreshUpstTokenExchangeKeytabTrigger?: pulumi.Input<string>;
    /**
     * (Updatable) Details for activating/updating UPST config on the cluster
     */
    upstConfigurationDetails?: pulumi.Input<inputs.BigDataService.BdsInstanceIdentityConfigurationUpstConfigurationDetails>;
}
