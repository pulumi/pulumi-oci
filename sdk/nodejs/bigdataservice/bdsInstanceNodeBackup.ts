// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Bds Instance Node Backup resource in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Add a node volume backup to the cluster for an indicated node type or node.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceNodeBackup = new oci.bigdataservice.BdsInstanceNodeBackup("test_bds_instance_node_backup", {
 *     bdsInstanceId: testBdsInstance.id,
 *     levelTypeDetails: {
 *         levelType: bdsInstanceNodeBackupLevelTypeDetailsLevelType,
 *         nodeHostName: bdsInstanceNodeBackupLevelTypeDetailsNodeHostName,
 *         nodeType: bdsInstanceNodeBackupLevelTypeDetailsNodeType,
 *     },
 *     backupType: bdsInstanceNodeBackupBackupType,
 * });
 * ```
 *
 * ## Import
 *
 * BdsInstanceNodeBackupConfigurations can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:BigDataService/bdsInstanceNodeBackup:BdsInstanceNodeBackup test_bds_instance_node_backup "bdsInstances/{bdsInstanceId}/nodeBackup/{nodeBackupId}"
 * ```
 */
export class BdsInstanceNodeBackup extends pulumi.CustomResource {
    /**
     * Get an existing BdsInstanceNodeBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BdsInstanceNodeBackupState, opts?: pulumi.CustomResourceOptions): BdsInstanceNodeBackup {
        return new BdsInstanceNodeBackup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:BigDataService/bdsInstanceNodeBackup:BdsInstanceNodeBackup';

    /**
     * Returns true if the given object is an instance of BdsInstanceNodeBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BdsInstanceNodeBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BdsInstanceNodeBackup.__pulumiType;
    }

    public readonly backupConfigId!: pulumi.Output<string | undefined>;
    /**
     * Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     */
    public readonly backupType!: pulumi.Output<string>;
    /**
     * The OCID of the cluster.
     */
    public readonly bdsInstanceId!: pulumi.Output<string>;
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Details of the type of level used to trigger the creation of a new node backup.
     */
    public readonly levelTypeDetails!: pulumi.Output<outputs.BigDataService.BdsInstanceNodeBackupLevelTypeDetails>;
    public readonly nodeInstanceId!: pulumi.Output<string>;
    /**
     * The state of the NodeBackup.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a BdsInstanceNodeBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BdsInstanceNodeBackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BdsInstanceNodeBackupArgs | BdsInstanceNodeBackupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BdsInstanceNodeBackupState | undefined;
            resourceInputs["backupConfigId"] = state ? state.backupConfigId : undefined;
            resourceInputs["backupType"] = state ? state.backupType : undefined;
            resourceInputs["bdsInstanceId"] = state ? state.bdsInstanceId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["levelTypeDetails"] = state ? state.levelTypeDetails : undefined;
            resourceInputs["nodeInstanceId"] = state ? state.nodeInstanceId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as BdsInstanceNodeBackupArgs | undefined;
            if ((!args || args.backupType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupType'");
            }
            if ((!args || args.bdsInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bdsInstanceId'");
            }
            if ((!args || args.levelTypeDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'levelTypeDetails'");
            }
            resourceInputs["backupConfigId"] = args ? args.backupConfigId : undefined;
            resourceInputs["backupType"] = args ? args.backupType : undefined;
            resourceInputs["bdsInstanceId"] = args ? args.bdsInstanceId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["levelTypeDetails"] = args ? args.levelTypeDetails : undefined;
            resourceInputs["nodeInstanceId"] = args ? args.nodeInstanceId : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BdsInstanceNodeBackup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BdsInstanceNodeBackup resources.
 */
export interface BdsInstanceNodeBackupState {
    backupConfigId?: pulumi.Input<string>;
    /**
     * Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     */
    backupType?: pulumi.Input<string>;
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    /**
     * Details of the type of level used to trigger the creation of a new node backup.
     */
    levelTypeDetails?: pulumi.Input<inputs.BigDataService.BdsInstanceNodeBackupLevelTypeDetails>;
    nodeInstanceId?: pulumi.Input<string>;
    /**
     * The state of the NodeBackup.
     */
    state?: pulumi.Input<string>;
    /**
     * The time the NodeBackup was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BdsInstanceNodeBackup resource.
 */
export interface BdsInstanceNodeBackupArgs {
    backupConfigId?: pulumi.Input<string>;
    /**
     * Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     */
    backupType: pulumi.Input<string>;
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    /**
     * Details of the type of level used to trigger the creation of a new node backup.
     */
    levelTypeDetails: pulumi.Input<inputs.BigDataService.BdsInstanceNodeBackupLevelTypeDetails>;
    nodeInstanceId?: pulumi.Input<string>;
}
