// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Bds Instance Node Backup Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Add a node volume backup configuration to the cluster for an indicated node type or node.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceNodeBackupConfiguration = new oci.bigdataservice.BdsInstanceNodeBackupConfiguration("test_bds_instance_node_backup_configuration", {
 *     bdsInstanceId: testBdsInstance.id,
 *     levelTypeDetails: {
 *         levelType: bdsInstanceNodeBackupConfigurationLevelTypeDetailsLevelType,
 *         nodeHostName: bdsInstanceNodeBackupConfigurationLevelTypeDetailsNodeHostName,
 *         nodeType: bdsInstanceNodeBackupConfigurationLevelTypeDetailsNodeType,
 *     },
 *     schedule: bdsInstanceNodeBackupConfigurationSchedule,
 *     backupType: bdsInstanceNodeBackupConfigurationBackupType,
 *     displayName: bdsInstanceNodeBackupConfigurationDisplayName,
 *     numberOfBackupsToRetain: bdsInstanceNodeBackupConfigurationNumberOfBackupsToRetain,
 *     timezone: bdsInstanceNodeBackupConfigurationTimezone,
 * });
 * ```
 *
 * ## Import
 *
 * BdsInstanceNodeBackupConfigurations can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration test_bds_instance_node_backup_configuration "bdsInstances/{bdsInstanceId}/nodeBackupConfigurations/{nodeBackupConfigurationId}"
 * ```
 */
export class BdsInstanceNodeBackupConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing BdsInstanceNodeBackupConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BdsInstanceNodeBackupConfigurationState, opts?: pulumi.CustomResourceOptions): BdsInstanceNodeBackupConfiguration {
        return new BdsInstanceNodeBackupConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:BigDataService/bdsInstanceNodeBackupConfiguration:BdsInstanceNodeBackupConfiguration';

    /**
     * Returns true if the given object is an instance of BdsInstanceNodeBackupConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BdsInstanceNodeBackupConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BdsInstanceNodeBackupConfiguration.__pulumiType;
    }

    /**
     * (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     */
    public readonly backupType!: pulumi.Output<string>;
    /**
     * The OCID of the cluster.
     */
    public readonly bdsInstanceId!: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     */
    public readonly levelTypeDetails!: pulumi.Output<outputs.BigDataService.BdsInstanceNodeBackupConfigurationLevelTypeDetails>;
    /**
     * (Updatable) Number of backup copies to retain.
     */
    public readonly numberOfBackupsToRetain!: pulumi.Output<number>;
    /**
     * (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
     */
    public readonly schedule!: pulumi.Output<string>;
    /**
     * The state of the NodeBackupConfiguration.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) The time zone of the execution schedule, in IANA time zone database name format
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly timezone!: pulumi.Output<string>;

    /**
     * Create a BdsInstanceNodeBackupConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BdsInstanceNodeBackupConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BdsInstanceNodeBackupConfigurationArgs | BdsInstanceNodeBackupConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BdsInstanceNodeBackupConfigurationState | undefined;
            resourceInputs["backupType"] = state ? state.backupType : undefined;
            resourceInputs["bdsInstanceId"] = state ? state.bdsInstanceId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["levelTypeDetails"] = state ? state.levelTypeDetails : undefined;
            resourceInputs["numberOfBackupsToRetain"] = state ? state.numberOfBackupsToRetain : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as BdsInstanceNodeBackupConfigurationArgs | undefined;
            if ((!args || args.bdsInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bdsInstanceId'");
            }
            if ((!args || args.levelTypeDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'levelTypeDetails'");
            }
            if ((!args || args.schedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            resourceInputs["backupType"] = args ? args.backupType : undefined;
            resourceInputs["bdsInstanceId"] = args ? args.bdsInstanceId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["levelTypeDetails"] = args ? args.levelTypeDetails : undefined;
            resourceInputs["numberOfBackupsToRetain"] = args ? args.numberOfBackupsToRetain : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BdsInstanceNodeBackupConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BdsInstanceNodeBackupConfiguration resources.
 */
export interface BdsInstanceNodeBackupConfigurationState {
    /**
     * (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     */
    backupType?: pulumi.Input<string>;
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     */
    levelTypeDetails?: pulumi.Input<inputs.BigDataService.BdsInstanceNodeBackupConfigurationLevelTypeDetails>;
    /**
     * (Updatable) Number of backup copies to retain.
     */
    numberOfBackupsToRetain?: pulumi.Input<number>;
    /**
     * (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
     */
    schedule?: pulumi.Input<string>;
    /**
     * The state of the NodeBackupConfiguration.
     */
    state?: pulumi.Input<string>;
    /**
     * The time the NodeBackupConfiguration was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the NodeBackupConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The time zone of the execution schedule, in IANA time zone database name format
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BdsInstanceNodeBackupConfiguration resource.
 */
export interface BdsInstanceNodeBackupConfigurationArgs {
    /**
     * (Updatable) Incremental backup type includes only the changes since the last backup. Full backup type includes all changes since the volume was created.
     */
    backupType?: pulumi.Input<string>;
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     */
    levelTypeDetails: pulumi.Input<inputs.BigDataService.BdsInstanceNodeBackupConfigurationLevelTypeDetails>;
    /**
     * (Updatable) Number of backup copies to retain.
     */
    numberOfBackupsToRetain?: pulumi.Input<number>;
    /**
     * (Updatable) Day/time recurrence (specified following RFC 5545) at which to trigger the backup process. Currently only DAILY, WEEKLY and MONTHLY frequency is supported. Days of the week are specified using BYDAY field. Time of the day is specified using BYHOUR. Other fields are not supported.
     */
    schedule: pulumi.Input<string>;
    /**
     * (Updatable) The time zone of the execution schedule, in IANA time zone database name format
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timezone?: pulumi.Input<string>;
}
