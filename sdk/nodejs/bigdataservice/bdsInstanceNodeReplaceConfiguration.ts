// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Bds Instance Node Replace Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Add a nodeReplaceConfigurations to the cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceNodeReplaceConfiguration = new oci.bigdataservice.BdsInstanceNodeReplaceConfiguration("test_bds_instance_node_replace_configuration", {
 *     bdsInstanceId: testBdsInstance.id,
 *     clusterAdminPassword: bdsInstanceNodeReplaceConfigurationClusterAdminPassword,
 *     durationInMinutes: bdsInstanceNodeReplaceConfigurationDurationInMinutes,
 *     levelTypeDetails: {
 *         levelType: bdsInstanceNodeReplaceConfigurationLevelTypeDetailsLevelType,
 *         nodeHostName: bdsInstanceNodeReplaceConfigurationLevelTypeDetailsNodeHostName,
 *         nodeType: bdsInstanceNodeReplaceConfigurationLevelTypeDetailsNodeType,
 *     },
 *     metricType: bdsInstanceNodeReplaceConfigurationMetricType,
 *     displayName: bdsInstanceNodeReplaceConfigurationDisplayName,
 * });
 * ```
 *
 * ## Import
 *
 * BdsInstanceNodeReplaceConfigurations can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration test_bds_instance_node_replace_configuration "bdsInstances/{bdsInstanceId}/nodeReplaceConfigurations/{nodeReplaceConfigurationId}"
 * ```
 */
export class BdsInstanceNodeReplaceConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing BdsInstanceNodeReplaceConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BdsInstanceNodeReplaceConfigurationState, opts?: pulumi.CustomResourceOptions): BdsInstanceNodeReplaceConfiguration {
        return new BdsInstanceNodeReplaceConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:BigDataService/bdsInstanceNodeReplaceConfiguration:BdsInstanceNodeReplaceConfiguration';

    /**
     * Returns true if the given object is an instance of BdsInstanceNodeReplaceConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BdsInstanceNodeReplaceConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BdsInstanceNodeReplaceConfiguration.__pulumiType;
    }

    /**
     * The OCID of the cluster.
     */
    public readonly bdsInstanceId!: pulumi.Output<string>;
    /**
     * Base-64 encoded password for the cluster admin user.
     */
    public readonly clusterAdminPassword!: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
     */
    public readonly durationInMinutes!: pulumi.Output<number>;
    /**
     * (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     */
    public readonly levelTypeDetails!: pulumi.Output<outputs.BigDataService.BdsInstanceNodeReplaceConfigurationLevelTypeDetails>;
    /**
     * (Updatable) Type of compute instance health metric to use for node replacement
     */
    public readonly metricType!: pulumi.Output<string>;
    /**
     * The state of the NodeReplaceConfiguration.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a BdsInstanceNodeReplaceConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BdsInstanceNodeReplaceConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BdsInstanceNodeReplaceConfigurationArgs | BdsInstanceNodeReplaceConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BdsInstanceNodeReplaceConfigurationState | undefined;
            resourceInputs["bdsInstanceId"] = state ? state.bdsInstanceId : undefined;
            resourceInputs["clusterAdminPassword"] = state ? state.clusterAdminPassword : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["durationInMinutes"] = state ? state.durationInMinutes : undefined;
            resourceInputs["levelTypeDetails"] = state ? state.levelTypeDetails : undefined;
            resourceInputs["metricType"] = state ? state.metricType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as BdsInstanceNodeReplaceConfigurationArgs | undefined;
            if ((!args || args.bdsInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bdsInstanceId'");
            }
            if ((!args || args.clusterAdminPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterAdminPassword'");
            }
            if ((!args || args.durationInMinutes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'durationInMinutes'");
            }
            if ((!args || args.levelTypeDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'levelTypeDetails'");
            }
            if ((!args || args.metricType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metricType'");
            }
            resourceInputs["bdsInstanceId"] = args ? args.bdsInstanceId : undefined;
            resourceInputs["clusterAdminPassword"] = args?.clusterAdminPassword ? pulumi.secret(args.clusterAdminPassword) : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["durationInMinutes"] = args ? args.durationInMinutes : undefined;
            resourceInputs["levelTypeDetails"] = args ? args.levelTypeDetails : undefined;
            resourceInputs["metricType"] = args ? args.metricType : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clusterAdminPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(BdsInstanceNodeReplaceConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BdsInstanceNodeReplaceConfiguration resources.
 */
export interface BdsInstanceNodeReplaceConfigurationState {
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId?: pulumi.Input<string>;
    /**
     * Base-64 encoded password for the cluster admin user.
     */
    clusterAdminPassword?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
     */
    durationInMinutes?: pulumi.Input<number>;
    /**
     * (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     */
    levelTypeDetails?: pulumi.Input<inputs.BigDataService.BdsInstanceNodeReplaceConfigurationLevelTypeDetails>;
    /**
     * (Updatable) Type of compute instance health metric to use for node replacement
     */
    metricType?: pulumi.Input<string>;
    /**
     * The state of the NodeReplaceConfiguration.
     */
    state?: pulumi.Input<string>;
    /**
     * The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BdsInstanceNodeReplaceConfiguration resource.
 */
export interface BdsInstanceNodeReplaceConfigurationArgs {
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: pulumi.Input<string>;
    /**
     * Base-64 encoded password for the cluster admin user.
     */
    clusterAdminPassword: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) This value is the minimum period of time to wait before triggering node replacement. The value is in minutes.
     */
    durationInMinutes: pulumi.Input<number>;
    /**
     * (Updatable) Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     */
    levelTypeDetails: pulumi.Input<inputs.BigDataService.BdsInstanceNodeReplaceConfigurationLevelTypeDetails>;
    /**
     * (Updatable) Type of compute instance health metric to use for node replacement
     */
    metricType: pulumi.Input<string>;
}
