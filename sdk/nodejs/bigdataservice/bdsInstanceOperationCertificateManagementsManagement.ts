// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Bds Instance Operation Certificate Managements Management resource in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Configuring TLS/SSL for various ODH services running on the BDS cluster.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceOperationCertificateManagementsManagement = new oci.bigdataservice.BdsInstanceOperationCertificateManagementsManagement("testBdsInstanceOperationCertificateManagementsManagement", {
 *     bdsInstanceId: oci_bds_bds_instance.test_bds_instance.id,
 *     clusterAdminPassword: _var.bds_instance_operation_certificate_managements_management_cluster_admin_password,
 *     services: _var.bds_instance_operation_certificate_managements_management_services,
 *     enableOperationCertificateManagement: _var.enable_operation_certificate_management,
 *     renewOperationCertificateManagement: _var.renew_operation_certificate_management,
 *     hostCertDetails: [{
 *         certificate: _var.bds_instance_operation_certificate_managements_management_host_cert_details_certificate,
 *         hostName: _var.bds_instance_operation_certificate_managements_management_host_cert_details_host_name,
 *         privateKey: _var.bds_instance_operation_certificate_managements_management_host_cert_details_private_key,
 *     }],
 *     rootCertificate: _var.bds_instance_operation_certificate_managements_management_root_certificate,
 *     serverKeyPassword: _var.bds_instance_operation_certificate_managements_management_server_key_password,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class BdsInstanceOperationCertificateManagementsManagement extends pulumi.CustomResource {
    /**
     * Get an existing BdsInstanceOperationCertificateManagementsManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BdsInstanceOperationCertificateManagementsManagementState, opts?: pulumi.CustomResourceOptions): BdsInstanceOperationCertificateManagementsManagement {
        return new BdsInstanceOperationCertificateManagementsManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:BigDataService/bdsInstanceOperationCertificateManagementsManagement:BdsInstanceOperationCertificateManagementsManagement';

    /**
     * Returns true if the given object is an instance of BdsInstanceOperationCertificateManagementsManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BdsInstanceOperationCertificateManagementsManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BdsInstanceOperationCertificateManagementsManagement.__pulumiType;
    }

    /**
     * The OCID of the cluster.
     */
    public readonly bdsInstanceId!: pulumi.Output<string>;
    /**
     * Base-64 encoded password for the cluster admin user.
     */
    public readonly clusterAdminPassword!: pulumi.Output<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     */
    public readonly enableOperationCertificateManagement!: pulumi.Output<boolean>;
    /**
     * List of leaf certificates to use for services on each host. If custom host certificate is provided the root certificate becomes required.
     */
    public readonly hostCertDetails!: pulumi.Output<outputs.BigDataService.BdsInstanceOperationCertificateManagementsManagementHostCertDetail[]>;
    /**
     * (Updatable) A required field when set to `true` calls renew action and when set to `false` defaults to enable_operation_certificate_management's value action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly renewOperationCertificateManagement!: pulumi.Output<boolean>;
    /**
     * Plain text certificate/s in order, separated by new line character. If not provided in request a self-signed root certificate is generated inside the cluster. In case hostCertDetails is provided, root certificate is mandatory.
     */
    public readonly rootCertificate!: pulumi.Output<string>;
    /**
     * Base-64 encoded password for CA certificate's private key. This value can be empty.
     */
    public readonly serverKeyPassword!: pulumi.Output<string>;
    /**
     * List of services for which certificate needs to be enabled.
     */
    public readonly services!: pulumi.Output<string[]>;

    /**
     * Create a BdsInstanceOperationCertificateManagementsManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BdsInstanceOperationCertificateManagementsManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BdsInstanceOperationCertificateManagementsManagementArgs | BdsInstanceOperationCertificateManagementsManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BdsInstanceOperationCertificateManagementsManagementState | undefined;
            resourceInputs["bdsInstanceId"] = state ? state.bdsInstanceId : undefined;
            resourceInputs["clusterAdminPassword"] = state ? state.clusterAdminPassword : undefined;
            resourceInputs["enableOperationCertificateManagement"] = state ? state.enableOperationCertificateManagement : undefined;
            resourceInputs["hostCertDetails"] = state ? state.hostCertDetails : undefined;
            resourceInputs["renewOperationCertificateManagement"] = state ? state.renewOperationCertificateManagement : undefined;
            resourceInputs["rootCertificate"] = state ? state.rootCertificate : undefined;
            resourceInputs["serverKeyPassword"] = state ? state.serverKeyPassword : undefined;
            resourceInputs["services"] = state ? state.services : undefined;
        } else {
            const args = argsOrState as BdsInstanceOperationCertificateManagementsManagementArgs | undefined;
            if ((!args || args.bdsInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bdsInstanceId'");
            }
            if ((!args || args.clusterAdminPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterAdminPassword'");
            }
            if ((!args || args.enableOperationCertificateManagement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableOperationCertificateManagement'");
            }
            if ((!args || args.renewOperationCertificateManagement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'renewOperationCertificateManagement'");
            }
            if ((!args || args.services === undefined) && !opts.urn) {
                throw new Error("Missing required property 'services'");
            }
            resourceInputs["bdsInstanceId"] = args ? args.bdsInstanceId : undefined;
            resourceInputs["clusterAdminPassword"] = args?.clusterAdminPassword ? pulumi.secret(args.clusterAdminPassword) : undefined;
            resourceInputs["enableOperationCertificateManagement"] = args ? args.enableOperationCertificateManagement : undefined;
            resourceInputs["hostCertDetails"] = args ? args.hostCertDetails : undefined;
            resourceInputs["renewOperationCertificateManagement"] = args ? args.renewOperationCertificateManagement : undefined;
            resourceInputs["rootCertificate"] = args ? args.rootCertificate : undefined;
            resourceInputs["serverKeyPassword"] = args?.serverKeyPassword ? pulumi.secret(args.serverKeyPassword) : undefined;
            resourceInputs["services"] = args ? args.services : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clusterAdminPassword", "serverKeyPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(BdsInstanceOperationCertificateManagementsManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BdsInstanceOperationCertificateManagementsManagement resources.
 */
export interface BdsInstanceOperationCertificateManagementsManagementState {
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId?: pulumi.Input<string>;
    /**
     * Base-64 encoded password for the cluster admin user.
     */
    clusterAdminPassword?: pulumi.Input<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     */
    enableOperationCertificateManagement?: pulumi.Input<boolean>;
    /**
     * List of leaf certificates to use for services on each host. If custom host certificate is provided the root certificate becomes required.
     */
    hostCertDetails?: pulumi.Input<pulumi.Input<inputs.BigDataService.BdsInstanceOperationCertificateManagementsManagementHostCertDetail>[]>;
    /**
     * (Updatable) A required field when set to `true` calls renew action and when set to `false` defaults to enable_operation_certificate_management's value action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    renewOperationCertificateManagement?: pulumi.Input<boolean>;
    /**
     * Plain text certificate/s in order, separated by new line character. If not provided in request a self-signed root certificate is generated inside the cluster. In case hostCertDetails is provided, root certificate is mandatory.
     */
    rootCertificate?: pulumi.Input<string>;
    /**
     * Base-64 encoded password for CA certificate's private key. This value can be empty.
     */
    serverKeyPassword?: pulumi.Input<string>;
    /**
     * List of services for which certificate needs to be enabled.
     */
    services?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a BdsInstanceOperationCertificateManagementsManagement resource.
 */
export interface BdsInstanceOperationCertificateManagementsManagementArgs {
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: pulumi.Input<string>;
    /**
     * Base-64 encoded password for the cluster admin user.
     */
    clusterAdminPassword: pulumi.Input<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     */
    enableOperationCertificateManagement: pulumi.Input<boolean>;
    /**
     * List of leaf certificates to use for services on each host. If custom host certificate is provided the root certificate becomes required.
     */
    hostCertDetails?: pulumi.Input<pulumi.Input<inputs.BigDataService.BdsInstanceOperationCertificateManagementsManagementHostCertDetail>[]>;
    /**
     * (Updatable) A required field when set to `true` calls renew action and when set to `false` defaults to enable_operation_certificate_management's value action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    renewOperationCertificateManagement: pulumi.Input<boolean>;
    /**
     * Plain text certificate/s in order, separated by new line character. If not provided in request a self-signed root certificate is generated inside the cluster. In case hostCertDetails is provided, root certificate is mandatory.
     */
    rootCertificate?: pulumi.Input<string>;
    /**
     * Base-64 encoded password for CA certificate's private key. This value can be empty.
     */
    serverKeyPassword?: pulumi.Input<string>;
    /**
     * List of services for which certificate needs to be enabled.
     */
    services: pulumi.Input<pulumi.Input<string>[]>;
}
