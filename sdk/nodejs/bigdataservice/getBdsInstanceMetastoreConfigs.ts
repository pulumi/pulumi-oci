// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Bds Instance Metastore Configs in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Returns a list of metastore configurations ssociated with this Big Data Service cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceMetastoreConfigs = oci.BigDataService.getBdsInstanceMetastoreConfigs({
 *     bdsInstanceId: oci_bds_bds_instance.test_bds_instance.id,
 *     bdsApiKeyId: oci_identity_api_key.test_api_key.id,
 *     displayName: _var.bds_instance_metastore_config_display_name,
 *     metastoreId: oci_datacatalog_metastore.test_metastore.id,
 *     metastoreType: _var.bds_instance_metastore_config_metastore_type,
 *     state: _var.bds_instance_metastore_config_state,
 * });
 * ```
 */
export function getBdsInstanceMetastoreConfigs(args: GetBdsInstanceMetastoreConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetBdsInstanceMetastoreConfigsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:BigDataService/getBdsInstanceMetastoreConfigs:getBdsInstanceMetastoreConfigs", {
        "bdsApiKeyId": args.bdsApiKeyId,
        "bdsInstanceId": args.bdsInstanceId,
        "displayName": args.displayName,
        "filters": args.filters,
        "metastoreId": args.metastoreId,
        "metastoreType": args.metastoreType,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getBdsInstanceMetastoreConfigs.
 */
export interface GetBdsInstanceMetastoreConfigsArgs {
    /**
     * The ID of the API key that is associated with the external metastore in the metastore configuration
     */
    bdsApiKeyId?: string;
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.BigDataService.GetBdsInstanceMetastoreConfigsFilter[];
    /**
     * The OCID of the Data Catalog metastore in the metastore configuration
     */
    metastoreId?: string;
    /**
     * The type of the metastore in the metastore configuration
     */
    metastoreType?: string;
    /**
     * The lifecycle state of the metastore in the metastore configuration
     */
    state?: string;
}

/**
 * A collection of values returned by getBdsInstanceMetastoreConfigs.
 */
export interface GetBdsInstanceMetastoreConfigsResult {
    /**
     * The ID of BDS API Key used for metastore configuration. Set only if metastore's type is EXTERNAL.
     */
    readonly bdsApiKeyId?: string;
    readonly bdsInstanceId: string;
    /**
     * The list of bds_metastore_configurations.
     */
    readonly bdsMetastoreConfigurations: outputs.BigDataService.GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration[];
    /**
     * The display name of metastore configuration
     */
    readonly displayName?: string;
    readonly filters?: outputs.BigDataService.GetBdsInstanceMetastoreConfigsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The OCID of the Data Catalog metastore. Set only if metastore's type is EXTERNAL.
     */
    readonly metastoreId?: string;
    /**
     * The type of the metastore in the metastore configuration.
     */
    readonly metastoreType?: string;
    /**
     * the lifecycle state of the metastore configuration.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Bds Instance Metastore Configs in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Returns a list of metastore configurations ssociated with this Big Data Service cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceMetastoreConfigs = oci.BigDataService.getBdsInstanceMetastoreConfigs({
 *     bdsInstanceId: oci_bds_bds_instance.test_bds_instance.id,
 *     bdsApiKeyId: oci_identity_api_key.test_api_key.id,
 *     displayName: _var.bds_instance_metastore_config_display_name,
 *     metastoreId: oci_datacatalog_metastore.test_metastore.id,
 *     metastoreType: _var.bds_instance_metastore_config_metastore_type,
 *     state: _var.bds_instance_metastore_config_state,
 * });
 * ```
 */
export function getBdsInstanceMetastoreConfigsOutput(args: GetBdsInstanceMetastoreConfigsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBdsInstanceMetastoreConfigsResult> {
    return pulumi.output(args).apply((a: any) => getBdsInstanceMetastoreConfigs(a, opts))
}

/**
 * A collection of arguments for invoking getBdsInstanceMetastoreConfigs.
 */
export interface GetBdsInstanceMetastoreConfigsOutputArgs {
    /**
     * The ID of the API key that is associated with the external metastore in the metastore configuration
     */
    bdsApiKeyId?: pulumi.Input<string>;
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.BigDataService.GetBdsInstanceMetastoreConfigsFilterArgs>[]>;
    /**
     * The OCID of the Data Catalog metastore in the metastore configuration
     */
    metastoreId?: pulumi.Input<string>;
    /**
     * The type of the metastore in the metastore configuration
     */
    metastoreType?: pulumi.Input<string>;
    /**
     * The lifecycle state of the metastore in the metastore configuration
     */
    state?: pulumi.Input<string>;
}
