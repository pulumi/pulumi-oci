// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Bds Instance Node Replace Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Returns details of the nodeReplaceConfiguration identified by the given ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceNodeReplaceConfiguration = oci.BigDataService.getBdsInstanceNodeReplaceConfiguration({
 *     bdsInstanceId: testBdsInstance.id,
 *     nodeReplaceConfigurationId: testConfiguration.id,
 * });
 * ```
 */
export function getBdsInstanceNodeReplaceConfiguration(args: GetBdsInstanceNodeReplaceConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetBdsInstanceNodeReplaceConfigurationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:BigDataService/getBdsInstanceNodeReplaceConfiguration:getBdsInstanceNodeReplaceConfiguration", {
        "bdsInstanceId": args.bdsInstanceId,
        "nodeReplaceConfigurationId": args.nodeReplaceConfigurationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBdsInstanceNodeReplaceConfiguration.
 */
export interface GetBdsInstanceNodeReplaceConfigurationArgs {
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: string;
    /**
     * Unique Oracle-assigned identifier of the  NodeReplaceConfiguration.
     */
    nodeReplaceConfigurationId: string;
}

/**
 * A collection of values returned by getBdsInstanceNodeReplaceConfiguration.
 */
export interface GetBdsInstanceNodeReplaceConfigurationResult {
    /**
     * The OCID of the bdsInstance which is the parent resource id.
     */
    readonly bdsInstanceId: string;
    readonly clusterAdminPassword: string;
    /**
     * A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * This value is the minimum period of time to wait for metric emission before triggering node replacement. The value is in minutes.
     */
    readonly durationInMinutes: number;
    /**
     * The unique identifier for the NodeReplaceConfiguration.
     */
    readonly id: string;
    /**
     * Details of the type of level used to trigger the creation of a new node backup configuration or node replacement configuration.
     */
    readonly levelTypeDetails: outputs.BigDataService.GetBdsInstanceNodeReplaceConfigurationLevelTypeDetail[];
    /**
     * Type of compute instance health metric to use for node replacement
     */
    readonly metricType: string;
    readonly nodeReplaceConfigurationId: string;
    /**
     * The state of the NodeReplaceConfiguration.
     */
    readonly state: string;
    /**
     * The time the NodeReplaceConfiguration was created, shown as an RFC 3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time the NodeReplaceConfiguration was updated, shown as an RFC 3339 formatted datetime string.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Bds Instance Node Replace Configuration resource in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Returns details of the nodeReplaceConfiguration identified by the given ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceNodeReplaceConfiguration = oci.BigDataService.getBdsInstanceNodeReplaceConfiguration({
 *     bdsInstanceId: testBdsInstance.id,
 *     nodeReplaceConfigurationId: testConfiguration.id,
 * });
 * ```
 */
export function getBdsInstanceNodeReplaceConfigurationOutput(args: GetBdsInstanceNodeReplaceConfigurationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBdsInstanceNodeReplaceConfigurationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:BigDataService/getBdsInstanceNodeReplaceConfiguration:getBdsInstanceNodeReplaceConfiguration", {
        "bdsInstanceId": args.bdsInstanceId,
        "nodeReplaceConfigurationId": args.nodeReplaceConfigurationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBdsInstanceNodeReplaceConfiguration.
 */
export interface GetBdsInstanceNodeReplaceConfigurationOutputArgs {
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: pulumi.Input<string>;
    /**
     * Unique Oracle-assigned identifier of the  NodeReplaceConfiguration.
     */
    nodeReplaceConfigurationId: pulumi.Input<string>;
}
