// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Bds Instance Node Replace Configurations in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Returns information about the NodeReplaceConfiguration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceNodeReplaceConfigurations = oci.BigDataService.getBdsInstanceNodeReplaceConfigurations({
 *     bdsInstanceId: testBdsInstance.id,
 *     displayName: bdsInstanceNodeReplaceConfigurationDisplayName,
 *     state: bdsInstanceNodeReplaceConfigurationState,
 * });
 * ```
 */
export function getBdsInstanceNodeReplaceConfigurations(args: GetBdsInstanceNodeReplaceConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetBdsInstanceNodeReplaceConfigurationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:BigDataService/getBdsInstanceNodeReplaceConfigurations:getBdsInstanceNodeReplaceConfigurations", {
        "bdsInstanceId": args.bdsInstanceId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getBdsInstanceNodeReplaceConfigurations.
 */
export interface GetBdsInstanceNodeReplaceConfigurationsArgs {
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.BigDataService.GetBdsInstanceNodeReplaceConfigurationsFilter[];
    /**
     * The state of the NodeReplaceConfiguration.
     */
    state?: string;
}

/**
 * A collection of values returned by getBdsInstanceNodeReplaceConfigurations.
 */
export interface GetBdsInstanceNodeReplaceConfigurationsResult {
    /**
     * The OCID of the bdsInstance which is the parent resource id.
     */
    readonly bdsInstanceId: string;
    /**
     * A user-friendly name. Only ASCII alphanumeric characters with no spaces allowed. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.BigDataService.GetBdsInstanceNodeReplaceConfigurationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of node_replace_configurations.
     */
    readonly nodeReplaceConfigurations: outputs.BigDataService.GetBdsInstanceNodeReplaceConfigurationsNodeReplaceConfiguration[];
    /**
     * The state of the NodeReplaceConfiguration.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Bds Instance Node Replace Configurations in Oracle Cloud Infrastructure Big Data Service service.
 *
 * Returns information about the NodeReplaceConfiguration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBdsInstanceNodeReplaceConfigurations = oci.BigDataService.getBdsInstanceNodeReplaceConfigurations({
 *     bdsInstanceId: testBdsInstance.id,
 *     displayName: bdsInstanceNodeReplaceConfigurationDisplayName,
 *     state: bdsInstanceNodeReplaceConfigurationState,
 * });
 * ```
 */
export function getBdsInstanceNodeReplaceConfigurationsOutput(args: GetBdsInstanceNodeReplaceConfigurationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBdsInstanceNodeReplaceConfigurationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:BigDataService/getBdsInstanceNodeReplaceConfigurations:getBdsInstanceNodeReplaceConfigurations", {
        "bdsInstanceId": args.bdsInstanceId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getBdsInstanceNodeReplaceConfigurations.
 */
export interface GetBdsInstanceNodeReplaceConfigurationsOutputArgs {
    /**
     * The OCID of the cluster.
     */
    bdsInstanceId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.BigDataService.GetBdsInstanceNodeReplaceConfigurationsFilterArgs>[]>;
    /**
     * The state of the NodeReplaceConfiguration.
     */
    state?: pulumi.Input<string>;
}
