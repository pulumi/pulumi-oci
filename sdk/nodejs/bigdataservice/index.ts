// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AutoScalingConfigurationArgs, AutoScalingConfigurationState } from "./autoScalingConfiguration";
export type AutoScalingConfiguration = import("./autoScalingConfiguration").AutoScalingConfiguration;
export const AutoScalingConfiguration: typeof import("./autoScalingConfiguration").AutoScalingConfiguration = null as any;
utilities.lazyLoad(exports, ["AutoScalingConfiguration"], () => require("./autoScalingConfiguration"));

export { BdsInstanceArgs, BdsInstanceState } from "./bdsInstance";
export type BdsInstance = import("./bdsInstance").BdsInstance;
export const BdsInstance: typeof import("./bdsInstance").BdsInstance = null as any;
utilities.lazyLoad(exports, ["BdsInstance"], () => require("./bdsInstance"));

export { BdsInstanceApiKeyArgs, BdsInstanceApiKeyState } from "./bdsInstanceApiKey";
export type BdsInstanceApiKey = import("./bdsInstanceApiKey").BdsInstanceApiKey;
export const BdsInstanceApiKey: typeof import("./bdsInstanceApiKey").BdsInstanceApiKey = null as any;
utilities.lazyLoad(exports, ["BdsInstanceApiKey"], () => require("./bdsInstanceApiKey"));

export { BdsInstanceMetastoreConfigArgs, BdsInstanceMetastoreConfigState } from "./bdsInstanceMetastoreConfig";
export type BdsInstanceMetastoreConfig = import("./bdsInstanceMetastoreConfig").BdsInstanceMetastoreConfig;
export const BdsInstanceMetastoreConfig: typeof import("./bdsInstanceMetastoreConfig").BdsInstanceMetastoreConfig = null as any;
utilities.lazyLoad(exports, ["BdsInstanceMetastoreConfig"], () => require("./bdsInstanceMetastoreConfig"));

export { BdsInstanceOperationCertificateManagementsManagementArgs, BdsInstanceOperationCertificateManagementsManagementState } from "./bdsInstanceOperationCertificateManagementsManagement";
export type BdsInstanceOperationCertificateManagementsManagement = import("./bdsInstanceOperationCertificateManagementsManagement").BdsInstanceOperationCertificateManagementsManagement;
export const BdsInstanceOperationCertificateManagementsManagement: typeof import("./bdsInstanceOperationCertificateManagementsManagement").BdsInstanceOperationCertificateManagementsManagement = null as any;
utilities.lazyLoad(exports, ["BdsInstanceOperationCertificateManagementsManagement"], () => require("./bdsInstanceOperationCertificateManagementsManagement"));

export { BdsInstancePatchActionArgs, BdsInstancePatchActionState } from "./bdsInstancePatchAction";
export type BdsInstancePatchAction = import("./bdsInstancePatchAction").BdsInstancePatchAction;
export const BdsInstancePatchAction: typeof import("./bdsInstancePatchAction").BdsInstancePatchAction = null as any;
utilities.lazyLoad(exports, ["BdsInstancePatchAction"], () => require("./bdsInstancePatchAction"));

export { GetAutoScalingConfigurationArgs, GetAutoScalingConfigurationResult, GetAutoScalingConfigurationOutputArgs } from "./getAutoScalingConfiguration";
export const getAutoScalingConfiguration: typeof import("./getAutoScalingConfiguration").getAutoScalingConfiguration = null as any;
export const getAutoScalingConfigurationOutput: typeof import("./getAutoScalingConfiguration").getAutoScalingConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getAutoScalingConfiguration","getAutoScalingConfigurationOutput"], () => require("./getAutoScalingConfiguration"));

export { GetAutoScalingConfigurationsArgs, GetAutoScalingConfigurationsResult, GetAutoScalingConfigurationsOutputArgs } from "./getAutoScalingConfigurations";
export const getAutoScalingConfigurations: typeof import("./getAutoScalingConfigurations").getAutoScalingConfigurations = null as any;
export const getAutoScalingConfigurationsOutput: typeof import("./getAutoScalingConfigurations").getAutoScalingConfigurationsOutput = null as any;
utilities.lazyLoad(exports, ["getAutoScalingConfigurations","getAutoScalingConfigurationsOutput"], () => require("./getAutoScalingConfigurations"));

export { GetBdsInstanceArgs, GetBdsInstanceResult, GetBdsInstanceOutputArgs } from "./getBdsInstance";
export const getBdsInstance: typeof import("./getBdsInstance").getBdsInstance = null as any;
export const getBdsInstanceOutput: typeof import("./getBdsInstance").getBdsInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstance","getBdsInstanceOutput"], () => require("./getBdsInstance"));

export { GetBdsInstanceApiKeyArgs, GetBdsInstanceApiKeyResult, GetBdsInstanceApiKeyOutputArgs } from "./getBdsInstanceApiKey";
export const getBdsInstanceApiKey: typeof import("./getBdsInstanceApiKey").getBdsInstanceApiKey = null as any;
export const getBdsInstanceApiKeyOutput: typeof import("./getBdsInstanceApiKey").getBdsInstanceApiKeyOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstanceApiKey","getBdsInstanceApiKeyOutput"], () => require("./getBdsInstanceApiKey"));

export { GetBdsInstanceApiKeysArgs, GetBdsInstanceApiKeysResult, GetBdsInstanceApiKeysOutputArgs } from "./getBdsInstanceApiKeys";
export const getBdsInstanceApiKeys: typeof import("./getBdsInstanceApiKeys").getBdsInstanceApiKeys = null as any;
export const getBdsInstanceApiKeysOutput: typeof import("./getBdsInstanceApiKeys").getBdsInstanceApiKeysOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstanceApiKeys","getBdsInstanceApiKeysOutput"], () => require("./getBdsInstanceApiKeys"));

export { GetBdsInstanceGetOsPatchArgs, GetBdsInstanceGetOsPatchResult, GetBdsInstanceGetOsPatchOutputArgs } from "./getBdsInstanceGetOsPatch";
export const getBdsInstanceGetOsPatch: typeof import("./getBdsInstanceGetOsPatch").getBdsInstanceGetOsPatch = null as any;
export const getBdsInstanceGetOsPatchOutput: typeof import("./getBdsInstanceGetOsPatch").getBdsInstanceGetOsPatchOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstanceGetOsPatch","getBdsInstanceGetOsPatchOutput"], () => require("./getBdsInstanceGetOsPatch"));

export { GetBdsInstanceListOsPatchesArgs, GetBdsInstanceListOsPatchesResult, GetBdsInstanceListOsPatchesOutputArgs } from "./getBdsInstanceListOsPatches";
export const getBdsInstanceListOsPatches: typeof import("./getBdsInstanceListOsPatches").getBdsInstanceListOsPatches = null as any;
export const getBdsInstanceListOsPatchesOutput: typeof import("./getBdsInstanceListOsPatches").getBdsInstanceListOsPatchesOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstanceListOsPatches","getBdsInstanceListOsPatchesOutput"], () => require("./getBdsInstanceListOsPatches"));

export { GetBdsInstanceMetastoreConfigArgs, GetBdsInstanceMetastoreConfigResult, GetBdsInstanceMetastoreConfigOutputArgs } from "./getBdsInstanceMetastoreConfig";
export const getBdsInstanceMetastoreConfig: typeof import("./getBdsInstanceMetastoreConfig").getBdsInstanceMetastoreConfig = null as any;
export const getBdsInstanceMetastoreConfigOutput: typeof import("./getBdsInstanceMetastoreConfig").getBdsInstanceMetastoreConfigOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstanceMetastoreConfig","getBdsInstanceMetastoreConfigOutput"], () => require("./getBdsInstanceMetastoreConfig"));

export { GetBdsInstanceMetastoreConfigsArgs, GetBdsInstanceMetastoreConfigsResult, GetBdsInstanceMetastoreConfigsOutputArgs } from "./getBdsInstanceMetastoreConfigs";
export const getBdsInstanceMetastoreConfigs: typeof import("./getBdsInstanceMetastoreConfigs").getBdsInstanceMetastoreConfigs = null as any;
export const getBdsInstanceMetastoreConfigsOutput: typeof import("./getBdsInstanceMetastoreConfigs").getBdsInstanceMetastoreConfigsOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstanceMetastoreConfigs","getBdsInstanceMetastoreConfigsOutput"], () => require("./getBdsInstanceMetastoreConfigs"));

export { GetBdsInstancePatchHistoriesArgs, GetBdsInstancePatchHistoriesResult, GetBdsInstancePatchHistoriesOutputArgs } from "./getBdsInstancePatchHistories";
export const getBdsInstancePatchHistories: typeof import("./getBdsInstancePatchHistories").getBdsInstancePatchHistories = null as any;
export const getBdsInstancePatchHistoriesOutput: typeof import("./getBdsInstancePatchHistories").getBdsInstancePatchHistoriesOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstancePatchHistories","getBdsInstancePatchHistoriesOutput"], () => require("./getBdsInstancePatchHistories"));

export { GetBdsInstancePatchesArgs, GetBdsInstancePatchesResult, GetBdsInstancePatchesOutputArgs } from "./getBdsInstancePatches";
export const getBdsInstancePatches: typeof import("./getBdsInstancePatches").getBdsInstancePatches = null as any;
export const getBdsInstancePatchesOutput: typeof import("./getBdsInstancePatches").getBdsInstancePatchesOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstancePatches","getBdsInstancePatchesOutput"], () => require("./getBdsInstancePatches"));

export { GetBdsInstancesArgs, GetBdsInstancesResult, GetBdsInstancesOutputArgs } from "./getBdsInstances";
export const getBdsInstances: typeof import("./getBdsInstances").getBdsInstances = null as any;
export const getBdsInstancesOutput: typeof import("./getBdsInstances").getBdsInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getBdsInstances","getBdsInstancesOutput"], () => require("./getBdsInstances"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:BigDataService/autoScalingConfiguration:AutoScalingConfiguration":
                return new AutoScalingConfiguration(name, <any>undefined, { urn })
            case "oci:BigDataService/bdsInstance:BdsInstance":
                return new BdsInstance(name, <any>undefined, { urn })
            case "oci:BigDataService/bdsInstanceApiKey:BdsInstanceApiKey":
                return new BdsInstanceApiKey(name, <any>undefined, { urn })
            case "oci:BigDataService/bdsInstanceMetastoreConfig:BdsInstanceMetastoreConfig":
                return new BdsInstanceMetastoreConfig(name, <any>undefined, { urn })
            case "oci:BigDataService/bdsInstanceOperationCertificateManagementsManagement:BdsInstanceOperationCertificateManagementsManagement":
                return new BdsInstanceOperationCertificateManagementsManagement(name, <any>undefined, { urn })
            case "oci:BigDataService/bdsInstancePatchAction:BdsInstancePatchAction":
                return new BdsInstancePatchAction(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "BigDataService/autoScalingConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "BigDataService/bdsInstance", _module)
pulumi.runtime.registerResourceModule("oci", "BigDataService/bdsInstanceApiKey", _module)
pulumi.runtime.registerResourceModule("oci", "BigDataService/bdsInstanceMetastoreConfig", _module)
pulumi.runtime.registerResourceModule("oci", "BigDataService/bdsInstanceOperationCertificateManagementsManagement", _module)
pulumi.runtime.registerResourceModule("oci", "BigDataService/bdsInstancePatchAction", _module)
