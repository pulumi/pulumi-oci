// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Blockchain Platform resource in Oracle Cloud Infrastructure Blockchain service.
 *
 * Gets information about a Blockchain Platform identified by the specific id
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBlockchainPlatform = oci.Blockchain.getBlockchainPlatform({
 *     blockchainPlatformId: testBlockchainPlatformOciBlockchainBlockchainPlatform.id,
 * });
 * ```
 */
export function getBlockchainPlatform(args: GetBlockchainPlatformArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockchainPlatformResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Blockchain/getBlockchainPlatform:getBlockchainPlatform", {
        "blockchainPlatformId": args.blockchainPlatformId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBlockchainPlatform.
 */
export interface GetBlockchainPlatformArgs {
    /**
     * Unique service identifier.
     */
    blockchainPlatformId: string;
}

/**
 * A collection of values returned by getBlockchainPlatform.
 */
export interface GetBlockchainPlatformResult {
    readonly blockchainPlatformId: string;
    readonly caCertArchiveText: string;
    /**
     * Compartment Identifier
     */
    readonly compartmentId: string;
    /**
     * Blockchain Platform component details.
     */
    readonly componentDetails: outputs.Blockchain.GetBlockchainPlatformComponentDetail[];
    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM or DIGITAL_ASSETS_MEDIUM or DIGITAL_ASSETS_LARGE or DIGITAL_ASSETS_EXTRA_LARGE
     */
    readonly computeShape: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Platform Instance Description
     */
    readonly description: string;
    /**
     * Platform Instance Display name, can be renamed
     */
    readonly displayName: string;
    readonly federatedUserId: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * List of OcpuUtilization for all hosts
     */
    readonly hostOcpuUtilizationInfos: outputs.Blockchain.GetBlockchainPlatformHostOcpuUtilizationInfo[];
    /**
     * unique identifier that is immutable on creation
     */
    readonly id: string;
    readonly idcsAccessToken: string;
    /**
     * Bring your own license
     */
    readonly isByol: boolean;
    /**
     * True for multi-AD blockchain plaforms, false for single-AD
     */
    readonly isMultiAd: boolean;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     */
    readonly loadBalancerShape: string;
    /**
     * Role of platform - FOUNDER or PARTICIPANT
     */
    readonly platformRole: string;
    /**
     * Type of Platform shape - DEFAULT or CUSTOM
     */
    readonly platformShapeType: string;
    /**
     * Platform Version
     */
    readonly platformVersion: string;
    /**
     * Number of replicas of service components like Rest Proxy, CA and Console
     */
    readonly replicas: outputs.Blockchain.GetBlockchainPlatformReplica[];
    /**
     * Service endpoint URL, valid post-provisioning
     */
    readonly serviceEndpoint: string;
    /**
     * The version of the Platform Instance.
     */
    readonly serviceVersion: string;
    /**
     * The current state of the Platform Instance.
     */
    readonly state: string;
    /**
     * Storage size in TBs
     */
    readonly storageSizeInTbs: number;
    /**
     * Storage used in TBs
     */
    readonly storageUsedInTbs: number;
    /**
     * The time the the Platform Instance was created. An RFC3339 formatted datetime string
     */
    readonly timeCreated: string;
    /**
     * The time the Platform Instance was updated. An RFC3339 formatted datetime string
     */
    readonly timeUpdated: string;
    /**
     * Number of total OCPUs allocated to the platform cluster
     */
    readonly totalOcpuCapacity: number;
}
/**
 * This data source provides details about a specific Blockchain Platform resource in Oracle Cloud Infrastructure Blockchain service.
 *
 * Gets information about a Blockchain Platform identified by the specific id
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBlockchainPlatform = oci.Blockchain.getBlockchainPlatform({
 *     blockchainPlatformId: testBlockchainPlatformOciBlockchainBlockchainPlatform.id,
 * });
 * ```
 */
export function getBlockchainPlatformOutput(args: GetBlockchainPlatformOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBlockchainPlatformResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Blockchain/getBlockchainPlatform:getBlockchainPlatform", {
        "blockchainPlatformId": args.blockchainPlatformId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBlockchainPlatform.
 */
export interface GetBlockchainPlatformOutputArgs {
    /**
     * Unique service identifier.
     */
    blockchainPlatformId: pulumi.Input<string>;
}
