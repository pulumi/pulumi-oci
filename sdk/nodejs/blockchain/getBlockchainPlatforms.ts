// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Blockchain Platforms in Oracle Cloud Infrastructure Blockchain service.
 *
 * Returns a list Blockchain Platform Instances in a compartment
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBlockchainPlatforms = oci.Blockchain.getBlockchainPlatforms({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.blockchain_platform_display_name,
 *     state: _var.blockchain_platform_state,
 * });
 * ```
 */
export function getBlockchainPlatforms(args: GetBlockchainPlatformsArgs, opts?: pulumi.InvokeOptions): Promise<GetBlockchainPlatformsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Blockchain/getBlockchainPlatforms:getBlockchainPlatforms", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getBlockchainPlatforms.
 */
export interface GetBlockchainPlatformsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
     */
    displayName?: string;
    filters?: inputs.Blockchain.GetBlockchainPlatformsFilter[];
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getBlockchainPlatforms.
 */
export interface GetBlockchainPlatformsResult {
    /**
     * The list of blockchain_platform_collection.
     */
    readonly blockchainPlatformCollections?: outputs.Blockchain.GetBlockchainPlatformsBlockchainPlatformCollection[];
    /**
     * Compartment Identifier
     */
    readonly compartmentId: string;
    /**
     * Platform Instance Display name, can be renamed
     */
    readonly displayName?: string;
    readonly filters?: outputs.Blockchain.GetBlockchainPlatformsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * The current state of the Platform Instance.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Blockchain Platforms in Oracle Cloud Infrastructure Blockchain service.
 *
 * Returns a list Blockchain Platform Instances in a compartment
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBlockchainPlatforms = oci.Blockchain.getBlockchainPlatforms({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.blockchain_platform_display_name,
 *     state: _var.blockchain_platform_state,
 * });
 * ```
 */
export function getBlockchainPlatformsOutput(args: GetBlockchainPlatformsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBlockchainPlatformsResult> {
    return pulumi.output(args).apply((a: any) => getBlockchainPlatforms(a, opts))
}

/**
 * A collection of arguments for invoking getBlockchainPlatforms.
 */
export interface GetBlockchainPlatformsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Example: `My new resource`
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Blockchain.GetBlockchainPlatformsFilterArgs>[]>;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
