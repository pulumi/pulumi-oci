// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Budget resource in Oracle Cloud Infrastructure Budget service.
 *
 * Creates a new budget.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBudget = new oci.budget.Budget("testBudget", {
 *     amount: _var.budget_amount,
 *     compartmentId: _var.tenancy_ocid,
 *     resetPeriod: _var.budget_reset_period,
 *     budgetProcessingPeriodStartOffset: _var.budget_budget_processing_period_start_offset,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     description: _var.budget_description,
 *     displayName: _var.budget_display_name,
 *     endDate: _var.budget_end_date,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     processingPeriodType: _var.budget_processing_period_type,
 *     startDate: _var.budget_start_date,
 *     targetCompartmentId: oci_identity_compartment.test_compartment.id,
 *     targetType: _var.budget_target_type,
 *     targets: _var.budget_targets,
 * });
 * ```
 *
 * ## Import
 *
 * Budgets can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Budget/budget:Budget test_budget "id"
 * ```
 */
export class Budget extends pulumi.CustomResource {
    /**
     * Get an existing Budget resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BudgetState, opts?: pulumi.CustomResourceOptions): Budget {
        return new Budget(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Budget/budget:Budget';

    /**
     * Returns true if the given object is an instance of Budget.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Budget {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Budget.__pulumiType;
    }

    /**
     * The actual spend in currency for the current budget cycle.
     */
    public /*out*/ readonly actualSpend!: pulumi.Output<number>;
    /**
     * The total number of alert rules in the budget.
     */
    public /*out*/ readonly alertRuleCount!: pulumi.Output<number>;
    /**
     * (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
     */
    public readonly amount!: pulumi.Output<number>;
    /**
     * (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
     */
    public readonly budgetProcessingPeriodStartOffset!: pulumi.Output<number>;
    /**
     * The OCID of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The description of the budget.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The displayName of the budget. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     */
    public readonly endDate!: pulumi.Output<string>;
    /**
     * The forecasted spend in currency by the end of the current budget cycle.
     */
    public /*out*/ readonly forecastedSpend!: pulumi.Output<number>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
     */
    public readonly processingPeriodType!: pulumi.Output<string>;
    /**
     * (Updatable) The reset period for the budget. Valid value is MONTHLY.
     */
    public readonly resetPeriod!: pulumi.Output<string>;
    /**
     * (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     */
    public readonly startDate!: pulumi.Output<string>;
    /**
     * The current state of the budget.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * This is DEPRECATED. Set the target compartment ID in targets instead.
     *
     * @deprecated The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
     */
    public readonly targetCompartmentId!: pulumi.Output<string>;
    /**
     * The type of target on which the budget is applied.
     */
    public readonly targetType!: pulumi.Output<string>;
    /**
     * The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly targets!: pulumi.Output<string[]>;
    /**
     * The time that the budget was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time that the budget spend was last computed.
     */
    public /*out*/ readonly timeSpendComputed!: pulumi.Output<string>;
    /**
     * The time that the budget was updated.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * The version of the budget. Starts from 1 and increments by 1.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a Budget resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BudgetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BudgetArgs | BudgetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BudgetState | undefined;
            resourceInputs["actualSpend"] = state ? state.actualSpend : undefined;
            resourceInputs["alertRuleCount"] = state ? state.alertRuleCount : undefined;
            resourceInputs["amount"] = state ? state.amount : undefined;
            resourceInputs["budgetProcessingPeriodStartOffset"] = state ? state.budgetProcessingPeriodStartOffset : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["endDate"] = state ? state.endDate : undefined;
            resourceInputs["forecastedSpend"] = state ? state.forecastedSpend : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["processingPeriodType"] = state ? state.processingPeriodType : undefined;
            resourceInputs["resetPeriod"] = state ? state.resetPeriod : undefined;
            resourceInputs["startDate"] = state ? state.startDate : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["targetCompartmentId"] = state ? state.targetCompartmentId : undefined;
            resourceInputs["targetType"] = state ? state.targetType : undefined;
            resourceInputs["targets"] = state ? state.targets : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeSpendComputed"] = state ? state.timeSpendComputed : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as BudgetArgs | undefined;
            if ((!args || args.amount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'amount'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.resetPeriod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resetPeriod'");
            }
            resourceInputs["amount"] = args ? args.amount : undefined;
            resourceInputs["budgetProcessingPeriodStartOffset"] = args ? args.budgetProcessingPeriodStartOffset : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endDate"] = args ? args.endDate : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["processingPeriodType"] = args ? args.processingPeriodType : undefined;
            resourceInputs["resetPeriod"] = args ? args.resetPeriod : undefined;
            resourceInputs["startDate"] = args ? args.startDate : undefined;
            resourceInputs["targetCompartmentId"] = args ? args.targetCompartmentId : undefined;
            resourceInputs["targetType"] = args ? args.targetType : undefined;
            resourceInputs["targets"] = args ? args.targets : undefined;
            resourceInputs["actualSpend"] = undefined /*out*/;
            resourceInputs["alertRuleCount"] = undefined /*out*/;
            resourceInputs["forecastedSpend"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeSpendComputed"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Budget.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Budget resources.
 */
export interface BudgetState {
    /**
     * The actual spend in currency for the current budget cycle.
     */
    actualSpend?: pulumi.Input<number>;
    /**
     * The total number of alert rules in the budget.
     */
    alertRuleCount?: pulumi.Input<number>;
    /**
     * (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
     */
    amount?: pulumi.Input<number>;
    /**
     * (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
     */
    budgetProcessingPeriodStartOffset?: pulumi.Input<number>;
    /**
     * The OCID of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The description of the budget.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The displayName of the budget. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     */
    endDate?: pulumi.Input<string>;
    /**
     * The forecasted spend in currency by the end of the current budget cycle.
     */
    forecastedSpend?: pulumi.Input<number>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
     */
    processingPeriodType?: pulumi.Input<string>;
    /**
     * (Updatable) The reset period for the budget. Valid value is MONTHLY.
     */
    resetPeriod?: pulumi.Input<string>;
    /**
     * (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     */
    startDate?: pulumi.Input<string>;
    /**
     * The current state of the budget.
     */
    state?: pulumi.Input<string>;
    /**
     * This is DEPRECATED. Set the target compartment ID in targets instead.
     *
     * @deprecated The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
     */
    targetCompartmentId?: pulumi.Input<string>;
    /**
     * The type of target on which the budget is applied.
     */
    targetType?: pulumi.Input<string>;
    /**
     * The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    targets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time that the budget was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time that the budget spend was last computed.
     */
    timeSpendComputed?: pulumi.Input<string>;
    /**
     * The time that the budget was updated.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The version of the budget. Starts from 1 and increments by 1.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Budget resource.
 */
export interface BudgetArgs {
    /**
     * (Updatable) The amount of the budget expressed as a whole number in the currency of the customer's rate card.
     */
    amount: pulumi.Input<number>;
    /**
     * (Updatable) The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
     */
    budgetProcessingPeriodStartOffset?: pulumi.Input<number>;
    /**
     * The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The description of the budget.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The displayName of the budget. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     */
    endDate?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
     */
    processingPeriodType?: pulumi.Input<string>;
    /**
     * (Updatable) The reset period for the budget. Valid value is MONTHLY.
     */
    resetPeriod: pulumi.Input<string>;
    /**
     * (Updatable) The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     */
    startDate?: pulumi.Input<string>;
    /**
     * This is DEPRECATED. Set the target compartment ID in targets instead.
     *
     * @deprecated The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
     */
    targetCompartmentId?: pulumi.Input<string>;
    /**
     * The type of target on which the budget is applied.
     */
    targetType?: pulumi.Input<string>;
    /**
     * The list of targets on which the budget is applied. If targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}". Curerntly, the array should contain exactly one item. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    targets?: pulumi.Input<pulumi.Input<string>[]>;
}
