// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Budget resource in Oracle Cloud Infrastructure Budget service.
 *
 * Gets a budget by the identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBudget = oci.Budget.getBudget({
 *     budgetId: testBudgetOciBudgetBudget.id,
 * });
 * ```
 */
export function getBudget(args: GetBudgetArgs, opts?: pulumi.InvokeOptions): Promise<GetBudgetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Budget/getBudget:getBudget", {
        "budgetId": args.budgetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBudget.
 */
export interface GetBudgetArgs {
    /**
     * The unique budget OCID.
     */
    budgetId: string;
}

/**
 * A collection of values returned by getBudget.
 */
export interface GetBudgetResult {
    /**
     * The actual spend in currency for the current budget cycle.
     */
    readonly actualSpend: number;
    /**
     * The total number of alert rules in the budget.
     */
    readonly alertRuleCount: number;
    /**
     * The amount of the budget, expressed in the currency of the customer's rate card.
     */
    readonly amount: number;
    readonly budgetId: string;
    /**
     * The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
     */
    readonly budgetProcessingPeriodStartOffset: number;
    /**
     * The OCID of the compartment.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * The description of the budget.
     */
    readonly description: string;
    /**
     * The display name of the budget. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * The time when the one-time budget concludes. For example, - `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     */
    readonly endDate: string;
    /**
     * The forecasted spend in currency by the end of the current budget cycle.
     */
    readonly forecastedSpend: number;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The OCID of the budget.
     */
    readonly id: string;
    /**
     * The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
     */
    readonly processingPeriodType: string;
    /**
     * The reset period for the budget.
     */
    readonly resetPeriod: string;
    /**
     * The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
     */
    readonly startDate: string;
    /**
     * The current state of the budget.
     */
    readonly state: string;
    /**
     * This is DEPRECATED. For backwards compatability, the property is populated when the targetType is "COMPARTMENT", and targets contain the specific target compartment OCID. For all other scenarios, this property will be left empty.
     *
     * @deprecated The 'target_compartment_id' field has been deprecated. Please use 'targets' instead.
     */
    readonly targetCompartmentId: string;
    /**
     * The type of target on which the budget is applied.
     */
    readonly targetType: string;
    /**
     * The list of targets on which the budget is applied. If the targetType is "COMPARTMENT", the targets contain the list of compartment OCIDs. If the targetType is "TAG", the targets contain the list of cost tracking tag identifiers in the form of "{tagNamespace}.{tagKey}.{tagValue}".
     */
    readonly targets: string[];
    /**
     * The time that the budget was created.
     */
    readonly timeCreated: string;
    /**
     * The time that the budget spend was last computed.
     */
    readonly timeSpendComputed: string;
    /**
     * The time that the budget was updated.
     */
    readonly timeUpdated: string;
    /**
     * The version of the budget. Starts from 1 and increments by 1.
     */
    readonly version: number;
}
/**
 * This data source provides details about a specific Budget resource in Oracle Cloud Infrastructure Budget service.
 *
 * Gets a budget by the identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBudget = oci.Budget.getBudget({
 *     budgetId: testBudgetOciBudgetBudget.id,
 * });
 * ```
 */
export function getBudgetOutput(args: GetBudgetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBudgetResult> {
    return pulumi.output(args).apply((a: any) => getBudget(a, opts))
}

/**
 * A collection of arguments for invoking getBudget.
 */
export interface GetBudgetOutputArgs {
    /**
     * The unique budget OCID.
     */
    budgetId: pulumi.Input<string>;
}
