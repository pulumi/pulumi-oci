// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Internal Namespace Occ Overviews in Oracle Cloud Infrastructure Capacity Management service.
 *
 * Lists an overview of all resources in that namespace in a given time interval.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testInternalNamespaceOccOverviews = oci.CapacityManagement.getInternalNamespaceOccOverviews({
 *     compartmentId: compartmentId,
 *     namespace: internalNamespaceOccOverviewNamespace,
 *     occCustomerGroupId: testOccCustomerGroup.id,
 *     from: internalNamespaceOccOverviewFrom,
 *     to: internalNamespaceOccOverviewTo,
 *     workloadType: internalNamespaceOccOverviewWorkloadType,
 * });
 * ```
 */
export function getInternalNamespaceOccOverviews(args: GetInternalNamespaceOccOverviewsArgs, opts?: pulumi.InvokeOptions): Promise<GetInternalNamespaceOccOverviewsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CapacityManagement/getInternalNamespaceOccOverviews:getInternalNamespaceOccOverviews", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "from": args.from,
        "namespace": args.namespace,
        "occCustomerGroupId": args.occCustomerGroupId,
        "to": args.to,
        "workloadType": args.workloadType,
    }, opts);
}

/**
 * A collection of arguments for invoking getInternalNamespaceOccOverviews.
 */
export interface GetInternalNamespaceOccOverviewsArgs {
    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     */
    compartmentId: string;
    filters?: inputs.CapacityManagement.GetInternalNamespaceOccOverviewsFilter[];
    /**
     * The month corresponding to this date would be considered as the starting point of the time period against which we would like to perform an aggregation.
     */
    from?: string;
    /**
     * The namespace by which we would filter the list.
     */
    namespace: string;
    /**
     * The customer group ocid by which we would filter the list.
     */
    occCustomerGroupId: string;
    /**
     * The month corresponding to this date would be considered as the ending point of the time period against which we would like to perform an aggregation.
     */
    to?: string;
    /**
     * Workload type using the resources in an availability catalog can be filtered.
     */
    workloadType?: string;
}

/**
 * A collection of values returned by getInternalNamespaceOccOverviews.
 */
export interface GetInternalNamespaceOccOverviewsResult {
    /**
     * The OCID of the compartment from which the api call is made. This will be used for authorizing the request.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.CapacityManagement.GetInternalNamespaceOccOverviewsFilter[];
    readonly from?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly namespace: string;
    readonly occCustomerGroupId: string;
    /**
     * The list of occ_overview_collection.
     */
    readonly occOverviewCollections: outputs.CapacityManagement.GetInternalNamespaceOccOverviewsOccOverviewCollection[];
    readonly to?: string;
    readonly workloadType?: string;
}
/**
 * This data source provides the list of Internal Namespace Occ Overviews in Oracle Cloud Infrastructure Capacity Management service.
 *
 * Lists an overview of all resources in that namespace in a given time interval.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testInternalNamespaceOccOverviews = oci.CapacityManagement.getInternalNamespaceOccOverviews({
 *     compartmentId: compartmentId,
 *     namespace: internalNamespaceOccOverviewNamespace,
 *     occCustomerGroupId: testOccCustomerGroup.id,
 *     from: internalNamespaceOccOverviewFrom,
 *     to: internalNamespaceOccOverviewTo,
 *     workloadType: internalNamespaceOccOverviewWorkloadType,
 * });
 * ```
 */
export function getInternalNamespaceOccOverviewsOutput(args: GetInternalNamespaceOccOverviewsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInternalNamespaceOccOverviewsResult> {
    return pulumi.output(args).apply((a: any) => getInternalNamespaceOccOverviews(a, opts))
}

/**
 * A collection of arguments for invoking getInternalNamespaceOccOverviews.
 */
export interface GetInternalNamespaceOccOverviewsOutputArgs {
    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.GetInternalNamespaceOccOverviewsFilterArgs>[]>;
    /**
     * The month corresponding to this date would be considered as the starting point of the time period against which we would like to perform an aggregation.
     */
    from?: pulumi.Input<string>;
    /**
     * The namespace by which we would filter the list.
     */
    namespace: pulumi.Input<string>;
    /**
     * The customer group ocid by which we would filter the list.
     */
    occCustomerGroupId: pulumi.Input<string>;
    /**
     * The month corresponding to this date would be considered as the ending point of the time period against which we would like to perform an aggregation.
     */
    to?: pulumi.Input<string>;
    /**
     * Workload type using the resources in an availability catalog can be filtered.
     */
    workloadType?: pulumi.Input<string>;
}
