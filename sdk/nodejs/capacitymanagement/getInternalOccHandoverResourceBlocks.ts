// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Internal Occ Handover Resource Blocks in Oracle Cloud Infrastructure Capacity Management service.
 *
 * List Occ Handover Resource blocks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testInternalOccHandoverResourceBlocks = oci.CapacityManagement.getInternalOccHandoverResourceBlocks({
 *     compartmentId: compartmentId,
 *     namespace: internalOccHandoverResourceBlockNamespace,
 *     occCustomerGroupId: testOccCustomerGroup.id,
 *     handoverDateGreaterThanOrEqualTo: internalOccHandoverResourceBlockHandoverDateGreaterThanOrEqualTo,
 *     handoverDateLessThanOrEqualTo: internalOccHandoverResourceBlockHandoverDateLessThanOrEqualTo,
 *     handoverResourceName: testResource.name,
 *     occHandoverResourceBlockId: testOccHandoverResourceBlock.id,
 * });
 * ```
 */
export function getInternalOccHandoverResourceBlocks(args: GetInternalOccHandoverResourceBlocksArgs, opts?: pulumi.InvokeOptions): Promise<GetInternalOccHandoverResourceBlocksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CapacityManagement/getInternalOccHandoverResourceBlocks:getInternalOccHandoverResourceBlocks", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "handoverDateGreaterThanOrEqualTo": args.handoverDateGreaterThanOrEqualTo,
        "handoverDateLessThanOrEqualTo": args.handoverDateLessThanOrEqualTo,
        "handoverResourceName": args.handoverResourceName,
        "namespace": args.namespace,
        "occCustomerGroupId": args.occCustomerGroupId,
        "occHandoverResourceBlockId": args.occHandoverResourceBlockId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInternalOccHandoverResourceBlocks.
 */
export interface GetInternalOccHandoverResourceBlocksArgs {
    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     */
    compartmentId: string;
    filters?: inputs.CapacityManagement.GetInternalOccHandoverResourceBlocksFilter[];
    /**
     * This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
     */
    handoverDateGreaterThanOrEqualTo?: string;
    /**
     * This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
     */
    handoverDateLessThanOrEqualTo?: string;
    /**
     * A filter to return only the list of resources that match the name provided in this filter.
     */
    handoverResourceName?: string;
    /**
     * The namespace enum value that needs to be passed as a required query parameter.
     */
    namespace: string;
    /**
     * The customer group ocid by which we would filter the list.
     */
    occCustomerGroupId: string;
    /**
     * This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
     */
    occHandoverResourceBlockId?: string;
}

/**
 * A collection of values returned by getInternalOccHandoverResourceBlocks.
 */
export interface GetInternalOccHandoverResourceBlocksResult {
    /**
     * The OCID of the compartment where the resource block's are placed.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.CapacityManagement.GetInternalOccHandoverResourceBlocksFilter[];
    readonly handoverDateGreaterThanOrEqualTo?: string;
    readonly handoverDateLessThanOrEqualTo?: string;
    /**
     * The name of the resource handed over by oracle.  For instance for compute namespace this will be the name of the bare metal hardware resource.
     */
    readonly handoverResourceName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the Oracle Cloud Infrastructure service in consideration.  For example Compute, Exadata and so on.
     */
    readonly namespace: string;
    /**
     * The OCID of the customer group for which the resources were provisioned.
     */
    readonly occCustomerGroupId: string;
    /**
     * The list of occ_handover_resource_block_collection.
     */
    readonly occHandoverResourceBlockCollections: outputs.CapacityManagement.GetInternalOccHandoverResourceBlocksOccHandoverResourceBlockCollection[];
    readonly occHandoverResourceBlockId?: string;
}
/**
 * This data source provides the list of Internal Occ Handover Resource Blocks in Oracle Cloud Infrastructure Capacity Management service.
 *
 * List Occ Handover Resource blocks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testInternalOccHandoverResourceBlocks = oci.CapacityManagement.getInternalOccHandoverResourceBlocks({
 *     compartmentId: compartmentId,
 *     namespace: internalOccHandoverResourceBlockNamespace,
 *     occCustomerGroupId: testOccCustomerGroup.id,
 *     handoverDateGreaterThanOrEqualTo: internalOccHandoverResourceBlockHandoverDateGreaterThanOrEqualTo,
 *     handoverDateLessThanOrEqualTo: internalOccHandoverResourceBlockHandoverDateLessThanOrEqualTo,
 *     handoverResourceName: testResource.name,
 *     occHandoverResourceBlockId: testOccHandoverResourceBlock.id,
 * });
 * ```
 */
export function getInternalOccHandoverResourceBlocksOutput(args: GetInternalOccHandoverResourceBlocksOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInternalOccHandoverResourceBlocksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:CapacityManagement/getInternalOccHandoverResourceBlocks:getInternalOccHandoverResourceBlocks", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "handoverDateGreaterThanOrEqualTo": args.handoverDateGreaterThanOrEqualTo,
        "handoverDateLessThanOrEqualTo": args.handoverDateLessThanOrEqualTo,
        "handoverResourceName": args.handoverResourceName,
        "namespace": args.namespace,
        "occCustomerGroupId": args.occCustomerGroupId,
        "occHandoverResourceBlockId": args.occHandoverResourceBlockId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInternalOccHandoverResourceBlocks.
 */
export interface GetInternalOccHandoverResourceBlocksOutputArgs {
    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.GetInternalOccHandoverResourceBlocksFilterArgs>[]>;
    /**
     * This filter helps in fetching all handed over resources for which the recordDate is greater than or equal to the startDate.
     */
    handoverDateGreaterThanOrEqualTo?: pulumi.Input<string>;
    /**
     * This filter helps in fetching all handed over resources for which the recordDate is less than or equal to the endDate.
     */
    handoverDateLessThanOrEqualTo?: pulumi.Input<string>;
    /**
     * A filter to return only the list of resources that match the name provided in this filter.
     */
    handoverResourceName?: pulumi.Input<string>;
    /**
     * The namespace enum value that needs to be passed as a required query parameter.
     */
    namespace: pulumi.Input<string>;
    /**
     * The customer group ocid by which we would filter the list.
     */
    occCustomerGroupId: pulumi.Input<string>;
    /**
     * This filter helps in fetching the handed over resource for which the occHandoverResourceId is equal to the one provided here.
     */
    occHandoverResourceBlockId?: pulumi.Input<string>;
}
