// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Internal Occm Demand Signals in Oracle Cloud Infrastructure Capacity Management service.
 *
 * This is an internal GET call is used to list all demand signals within the compartment passed as a query parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testInternalOccmDemandSignals = oci.CapacityManagement.getInternalOccmDemandSignals({
 *     compartmentId: compartmentId,
 *     occCustomerGroupId: testOccCustomerGroup.id,
 *     displayName: internalOccmDemandSignalDisplayName,
 *     id: internalOccmDemandSignalId,
 *     lifecycleDetails: internalOccmDemandSignalLifecycleDetails,
 * });
 * ```
 */
export function getInternalOccmDemandSignals(args: GetInternalOccmDemandSignalsArgs, opts?: pulumi.InvokeOptions): Promise<GetInternalOccmDemandSignalsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CapacityManagement/getInternalOccmDemandSignals:getInternalOccmDemandSignals", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "lifecycleDetails": args.lifecycleDetails,
        "occCustomerGroupId": args.occCustomerGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInternalOccmDemandSignals.
 */
export interface GetInternalOccmDemandSignalsArgs {
    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     */
    compartmentId: string;
    /**
     * A filter to return only the resources that match the entire display name. The match is not case sensitive.
     */
    displayName?: string;
    filters?: inputs.CapacityManagement.GetInternalOccmDemandSignalsFilter[];
    /**
     * A query parameter to filter the list of demand signals based on it's OCID.
     */
    id?: string;
    /**
     * A query parameter to filter the list of demand signals based on its state.
     */
    lifecycleDetails?: string;
    /**
     * The customer group ocid by which we would filter the list.
     */
    occCustomerGroupId: string;
}

/**
 * A collection of values returned by getInternalOccmDemandSignals.
 */
export interface GetInternalOccmDemandSignalsResult {
    /**
     * The OCID of the tenancy from which the request to create the demand signal was made.
     */
    readonly compartmentId: string;
    /**
     * The display name of the demand signal.
     */
    readonly displayName?: string;
    readonly filters?: outputs.CapacityManagement.GetInternalOccmDemandSignalsFilter[];
    /**
     * The OCID of the demand signal.
     */
    readonly id?: string;
    /**
     * The list of internal_occm_demand_signal_collection.
     */
    readonly internalOccmDemandSignalCollections: outputs.CapacityManagement.GetInternalOccmDemandSignalsInternalOccmDemandSignalCollection[];
    /**
     * The different states associated with a demand signal.
     */
    readonly lifecycleDetails?: string;
    /**
     * The OCID of the customer group in which the demand signal is created.
     */
    readonly occCustomerGroupId: string;
}
/**
 * This data source provides the list of Internal Occm Demand Signals in Oracle Cloud Infrastructure Capacity Management service.
 *
 * This is an internal GET call is used to list all demand signals within the compartment passed as a query parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testInternalOccmDemandSignals = oci.CapacityManagement.getInternalOccmDemandSignals({
 *     compartmentId: compartmentId,
 *     occCustomerGroupId: testOccCustomerGroup.id,
 *     displayName: internalOccmDemandSignalDisplayName,
 *     id: internalOccmDemandSignalId,
 *     lifecycleDetails: internalOccmDemandSignalLifecycleDetails,
 * });
 * ```
 */
export function getInternalOccmDemandSignalsOutput(args: GetInternalOccmDemandSignalsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInternalOccmDemandSignalsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:CapacityManagement/getInternalOccmDemandSignals:getInternalOccmDemandSignals", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "lifecycleDetails": args.lifecycleDetails,
        "occCustomerGroupId": args.occCustomerGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInternalOccmDemandSignals.
 */
export interface GetInternalOccmDemandSignalsOutputArgs {
    /**
     * The ocid of the compartment or tenancy in which resources are to be listed. This will also be used for authorization purposes.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the entire display name. The match is not case sensitive.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.GetInternalOccmDemandSignalsFilterArgs>[]>;
    /**
     * A query parameter to filter the list of demand signals based on it's OCID.
     */
    id?: pulumi.Input<string>;
    /**
     * A query parameter to filter the list of demand signals based on its state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The customer group ocid by which we would filter the list.
     */
    occCustomerGroupId: pulumi.Input<string>;
}
