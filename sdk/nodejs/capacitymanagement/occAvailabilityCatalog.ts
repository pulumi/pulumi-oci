// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Occ Availability Catalog resource in Oracle Cloud Infrastructure Capacity Management service.
 *
 * Create availability catalog
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOccAvailabilityCatalog = new oci.capacitymanagement.OccAvailabilityCatalog("test_occ_availability_catalog", {
 *     base64encodedCatalogDetails: occAvailabilityCatalogBase64encodedCatalogDetails,
 *     compartmentId: compartmentId,
 *     displayName: occAvailabilityCatalogDisplayName,
 *     namespace: occAvailabilityCatalogNamespace,
 *     occCustomerGroupId: testOccCustomerGroup.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: occAvailabilityCatalogDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     metadataDetails: {
 *         formatVersion: occAvailabilityCatalogMetadataDetailsFormatVersion,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * OccAvailabilityCatalogs can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog test_occ_availability_catalog "id"
 * ```
 */
export class OccAvailabilityCatalog extends pulumi.CustomResource {
    /**
     * Get an existing OccAvailabilityCatalog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OccAvailabilityCatalogState, opts?: pulumi.CustomResourceOptions): OccAvailabilityCatalog {
        return new OccAvailabilityCatalog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CapacityManagement/occAvailabilityCatalog:OccAvailabilityCatalog';

    /**
     * Returns true if the given object is an instance of OccAvailabilityCatalog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OccAvailabilityCatalog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OccAvailabilityCatalog.__pulumiType;
    }

    /**
     * The base 64 encoded string corresponding to the catalog file contents.
     */
    public readonly base64encodedCatalogDetails!: pulumi.Output<string>;
    /**
     * The different states associated with the availability catalog.
     */
    public /*out*/ readonly catalogState!: pulumi.Output<string>;
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Additional information about the availability catalog.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Details about capacity available for different resources in catalog.
     */
    public /*out*/ readonly details!: pulumi.Output<outputs.CapacityManagement.OccAvailabilityCatalogDetail[]>;
    /**
     * (Updatable) The display name of the availability catalog.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
     */
    public readonly metadataDetails!: pulumi.Output<outputs.CapacityManagement.OccAvailabilityCatalogMetadataDetails>;
    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * The OCID of the customer group.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly occCustomerGroupId!: pulumi.Output<string>;
    /**
     * The current lifecycle state of the resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The time when the availability catalog was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time when the availability catalog was last updated.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a OccAvailabilityCatalog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OccAvailabilityCatalogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OccAvailabilityCatalogArgs | OccAvailabilityCatalogState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OccAvailabilityCatalogState | undefined;
            resourceInputs["base64encodedCatalogDetails"] = state ? state.base64encodedCatalogDetails : undefined;
            resourceInputs["catalogState"] = state ? state.catalogState : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["details"] = state ? state.details : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["metadataDetails"] = state ? state.metadataDetails : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["occCustomerGroupId"] = state ? state.occCustomerGroupId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as OccAvailabilityCatalogArgs | undefined;
            if ((!args || args.base64encodedCatalogDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'base64encodedCatalogDetails'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.occCustomerGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'occCustomerGroupId'");
            }
            resourceInputs["base64encodedCatalogDetails"] = args ? args.base64encodedCatalogDetails : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["metadataDetails"] = args ? args.metadataDetails : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["occCustomerGroupId"] = args ? args.occCustomerGroupId : undefined;
            resourceInputs["catalogState"] = undefined /*out*/;
            resourceInputs["details"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OccAvailabilityCatalog.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OccAvailabilityCatalog resources.
 */
export interface OccAvailabilityCatalogState {
    /**
     * The base 64 encoded string corresponding to the catalog file contents.
     */
    base64encodedCatalogDetails?: pulumi.Input<string>;
    /**
     * The different states associated with the availability catalog.
     */
    catalogState?: pulumi.Input<string>;
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Additional information about the availability catalog.
     */
    description?: pulumi.Input<string>;
    /**
     * Details about capacity available for different resources in catalog.
     */
    details?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.OccAvailabilityCatalogDetail>[]>;
    /**
     * (Updatable) The display name of the availability catalog.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
     */
    metadataDetails?: pulumi.Input<inputs.CapacityManagement.OccAvailabilityCatalogMetadataDetails>;
    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The OCID of the customer group.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    occCustomerGroupId?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time when the availability catalog was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when the availability catalog was last updated.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OccAvailabilityCatalog resource.
 */
export interface OccAvailabilityCatalogArgs {
    /**
     * The base 64 encoded string corresponding to the catalog file contents.
     */
    base64encodedCatalogDetails: pulumi.Input<string>;
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Additional information about the availability catalog.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name of the availability catalog.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Used for representing the metadata of the catalog. This denotes the version and format of the CSV file for parsing.
     */
    metadataDetails?: pulumi.Input<inputs.CapacityManagement.OccAvailabilityCatalogMetadataDetails>;
    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     */
    namespace: pulumi.Input<string>;
    /**
     * The OCID of the customer group.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    occCustomerGroupId: pulumi.Input<string>;
}
