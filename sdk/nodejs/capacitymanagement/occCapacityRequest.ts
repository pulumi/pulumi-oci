// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Occ Capacity Request resource in Oracle Cloud Infrastructure Capacity Management service.
 *
 * Create Capacity Request.
 *   Updates the OccCapacityRequest by evaluating a sequence of instructions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOccCapacityRequest = new oci.capacitymanagement.OccCapacityRequest("test_occ_capacity_request", {
 *     compartmentId: compartmentId,
 *     dateExpectedCapacityHandover: occCapacityRequestDateExpectedCapacityHandover,
 *     details: [{
 *         demandQuantity: occCapacityRequestDetailsDemandQuantity,
 *         resourceName: testResource.name,
 *         resourceType: occCapacityRequestDetailsResourceType,
 *         workloadType: occCapacityRequestDetailsWorkloadType,
 *         actualHandoverQuantity: occCapacityRequestDetailsActualHandoverQuantity,
 *         associatedOccHandoverResourceBlockLists: [{
 *             handoverQuantity: occCapacityRequestDetailsAssociatedOccHandoverResourceBlockListHandoverQuantity,
 *             occHandoverResourceBlockId: testOccHandoverResourceBlock.id,
 *         }],
 *         availabilityDomain: occCapacityRequestDetailsAvailabilityDomain,
 *         dateActualHandover: occCapacityRequestDetailsDateActualHandover,
 *         dateExpectedHandover: occCapacityRequestDetailsDateExpectedHandover,
 *         expectedHandoverQuantity: occCapacityRequestDetailsExpectedHandoverQuantity,
 *         sourceWorkloadType: occCapacityRequestDetailsSourceWorkloadType,
 *     }],
 *     displayName: occCapacityRequestDisplayName,
 *     namespace: occCapacityRequestNamespace,
 *     occCapacityRequestId: occCapacityRequestOccCapacityRequestId,
 *     region: occCapacityRequestRegion,
 *     availabilityDomain: occCapacityRequestAvailabilityDomain,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: occCapacityRequestDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     lifecycleDetails: occCapacityRequestLifecycleDetails,
 *     occAvailabilityCatalogId: testOccAvailabilityCatalog.id,
 *     patchOperations: [{
 *         operation: occCapacityRequestPatchOperationsOperation,
 *         selection: occCapacityRequestPatchOperationsSelection,
 *         from: occCapacityRequestPatchOperationsFrom,
 *         position: occCapacityRequestPatchOperationsPosition,
 *         selectedItem: occCapacityRequestPatchOperationsSelectedItem,
 *         value: occCapacityRequestPatchOperationsValue,
 *         values: occCapacityRequestPatchOperationsValues,
 *     }],
 *     requestState: occCapacityRequestRequestState,
 *     requestType: occCapacityRequestRequestType,
 * });
 * ```
 *
 * ## Import
 *
 * OccCapacityRequests can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CapacityManagement/occCapacityRequest:OccCapacityRequest test_occ_capacity_request "id"
 * ```
 */
export class OccCapacityRequest extends pulumi.CustomResource {
    /**
     * Get an existing OccCapacityRequest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OccCapacityRequestState, opts?: pulumi.CustomResourceOptions): OccCapacityRequest {
        return new OccCapacityRequest(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CapacityManagement/occCapacityRequest:OccCapacityRequest';

    /**
     * Returns true if the given object is an instance of OccCapacityRequest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OccCapacityRequest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OccCapacityRequest.__pulumiType;
    }

    /**
     * The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
     */
    declare public readonly availabilityDomain: pulumi.Output<string>;
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     */
    declare public readonly dateExpectedCapacityHandover: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Meaningful text about the capacity request.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * A list of different resources requested by the user.
     */
    declare public readonly details: pulumi.Output<outputs.CapacityManagement.OccCapacityRequestDetail[]>;
    /**
     * (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    declare public readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     */
    declare public readonly namespace: pulumi.Output<string>;
    /**
     * The OCID of the availability catalog against which capacity request is made.
     */
    declare public readonly occAvailabilityCatalogId: pulumi.Output<string>;
    /**
     * The OCID of the customer group to which this customer belongs to.
     */
    declare public /*out*/ readonly occCustomerGroupId: pulumi.Output<string>;
    /**
     * (Updatable)
     */
    declare public readonly patchOperations: pulumi.Output<outputs.CapacityManagement.OccCapacityRequestPatchOperation[] | undefined>;
    /**
     * The name of the region for which the capacity request is made.
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * (Updatable) The subset of request states available for creating the capacity request.
     */
    declare public readonly requestState: pulumi.Output<string>;
    /**
     * Type of Capacity Request(New or Transfer)
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly requestType: pulumi.Output<string>;
    /**
     * The current lifecycle state of the resource.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time when the capacity request was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time when the capacity request was updated.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a OccCapacityRequest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OccCapacityRequestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OccCapacityRequestArgs | OccCapacityRequestState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OccCapacityRequestState | undefined;
            resourceInputs["availabilityDomain"] = state?.availabilityDomain;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["dateExpectedCapacityHandover"] = state?.dateExpectedCapacityHandover;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["details"] = state?.details;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["occAvailabilityCatalogId"] = state?.occAvailabilityCatalogId;
            resourceInputs["occCustomerGroupId"] = state?.occCustomerGroupId;
            resourceInputs["patchOperations"] = state?.patchOperations;
            resourceInputs["region"] = state?.region;
            resourceInputs["requestState"] = state?.requestState;
            resourceInputs["requestType"] = state?.requestType;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as OccCapacityRequestArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.dateExpectedCapacityHandover === undefined && !opts.urn) {
                throw new Error("Missing required property 'dateExpectedCapacityHandover'");
            }
            if (args?.details === undefined && !opts.urn) {
                throw new Error("Missing required property 'details'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.namespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if (args?.occAvailabilityCatalogId === undefined && !opts.urn) {
                throw new Error("Missing required property 'occAvailabilityCatalogId'");
            }
            if (args?.region === undefined && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["availabilityDomain"] = args?.availabilityDomain;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["dateExpectedCapacityHandover"] = args?.dateExpectedCapacityHandover;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["details"] = args?.details;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["lifecycleDetails"] = args?.lifecycleDetails;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["occAvailabilityCatalogId"] = args?.occAvailabilityCatalogId;
            resourceInputs["patchOperations"] = args?.patchOperations;
            resourceInputs["region"] = args?.region;
            resourceInputs["requestState"] = args?.requestState;
            resourceInputs["requestType"] = args?.requestType;
            resourceInputs["occCustomerGroupId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OccCapacityRequest.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OccCapacityRequest resources.
 */
export interface OccCapacityRequestState {
    /**
     * The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     */
    dateExpectedCapacityHandover?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Meaningful text about the capacity request.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of different resources requested by the user.
     */
    details?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.OccCapacityRequestDetail>[]>;
    /**
     * (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The OCID of the availability catalog against which capacity request is made.
     */
    occAvailabilityCatalogId?: pulumi.Input<string>;
    /**
     * The OCID of the customer group to which this customer belongs to.
     */
    occCustomerGroupId?: pulumi.Input<string>;
    /**
     * (Updatable)
     */
    patchOperations?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.OccCapacityRequestPatchOperation>[]>;
    /**
     * The name of the region for which the capacity request is made.
     */
    region?: pulumi.Input<string>;
    /**
     * (Updatable) The subset of request states available for creating the capacity request.
     */
    requestState?: pulumi.Input<string>;
    /**
     * Type of Capacity Request(New or Transfer)
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    requestType?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time when the capacity request was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when the capacity request was updated.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OccCapacityRequest resource.
 */
export interface OccCapacityRequestArgs {
    /**
     * The availability domain (AD) in which the new resource is to be placed. If this is specified then the capacity will be validated and fulfilled within the scope of this AD. Note that this field is NOT required for Capacity request Transfer requests.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The date by which the capacity requested by customers before dateFinalCustomerOrder needs to be fulfilled.
     */
    dateExpectedCapacityHandover: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Meaningful text about the capacity request.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of different resources requested by the user.
     */
    details: pulumi.Input<pulumi.Input<inputs.CapacityManagement.OccCapacityRequestDetail>[]>;
    /**
     * (Updatable) An user-friendly name for the capacity request. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The name of the Oracle Cloud Infrastructure service in consideration. For example, Compute, Exadata, and so on.
     */
    namespace: pulumi.Input<string>;
    /**
     * The OCID of the availability catalog against which capacity request is made.
     */
    occAvailabilityCatalogId: pulumi.Input<string>;
    /**
     * (Updatable)
     */
    patchOperations?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.OccCapacityRequestPatchOperation>[]>;
    /**
     * The name of the region for which the capacity request is made.
     */
    region: pulumi.Input<string>;
    /**
     * (Updatable) The subset of request states available for creating the capacity request.
     */
    requestState?: pulumi.Input<string>;
    /**
     * Type of Capacity Request(New or Transfer)
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    requestType?: pulumi.Input<string>;
}
