// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Occ Customer Group resource in Oracle Cloud Infrastructure Capacity Management service.
 *
 * Create customer group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOccCustomerGroup = new oci.capacitymanagement.OccCustomerGroup("test_occ_customer_group", {
 *     compartmentId: compartmentId,
 *     displayName: occCustomerGroupDisplayName,
 *     customersLists: [{
 *         displayName: occCustomerGroupCustomersListDisplayName,
 *         tenancyId: testTenancy.id,
 *         description: occCustomerGroupCustomersListDescription,
 *         status: occCustomerGroupCustomersListStatus,
 *     }],
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: occCustomerGroupDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     lifecycleDetails: occCustomerGroupLifecycleDetails,
 *     status: occCustomerGroupStatus,
 * });
 * ```
 *
 * ## Import
 *
 * OccCustomerGroups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CapacityManagement/occCustomerGroup:OccCustomerGroup test_occ_customer_group "id"
 * ```
 */
export class OccCustomerGroup extends pulumi.CustomResource {
    /**
     * Get an existing OccCustomerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OccCustomerGroupState, opts?: pulumi.CustomResourceOptions): OccCustomerGroup {
        return new OccCustomerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CapacityManagement/occCustomerGroup:OccCustomerGroup';

    /**
     * Returns true if the given object is an instance of OccCustomerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OccCustomerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OccCustomerGroup.__pulumiType;
    }

    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * A list containing all the customers that belong to this customer group.
     */
    declare public readonly customersLists: pulumi.Output<outputs.CapacityManagement.OccCustomerGroupCustomersList[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A description about the customer group.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) The name of the customer group.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    declare public readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The current lifecycle state of the resource.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * (Updatable) To determine whether the customer group is enabled/disabled.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time when the customer group was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time when the customer group was last updated.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a OccCustomerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OccCustomerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OccCustomerGroupArgs | OccCustomerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OccCustomerGroupState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["customersLists"] = state?.customersLists;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["state"] = state?.state;
            resourceInputs["status"] = state?.status;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as OccCustomerGroupArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["customersLists"] = args?.customersLists;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["lifecycleDetails"] = args?.lifecycleDetails;
            resourceInputs["status"] = args?.status;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OccCustomerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OccCustomerGroup resources.
 */
export interface OccCustomerGroupState {
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A list containing all the customers that belong to this customer group.
     */
    customersLists?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.OccCustomerGroupCustomersList>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A description about the customer group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the customer group.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) To determine whether the customer group is enabled/disabled.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    status?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time when the customer group was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when the customer group was last updated.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OccCustomerGroup resource.
 */
export interface OccCustomerGroupArgs {
    /**
     * Since all resources are at tenancy level hence this will be the ocid of the tenancy where operation is to be performed.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A list containing all the customers that belong to this customer group.
     */
    customersLists?: pulumi.Input<pulumi.Input<inputs.CapacityManagement.OccCustomerGroupCustomersList>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A description about the customer group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the customer group.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed State.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) To determine whether the customer group is enabled/disabled.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    status?: pulumi.Input<string>;
}
