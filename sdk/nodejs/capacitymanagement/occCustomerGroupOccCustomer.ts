// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Occ Customer Group Occ Customer resource in Oracle Cloud Infrastructure Capacity Management service.
 *
 * Create customer.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOccCustomerGroupOccCustomer = new oci.capacitymanagement.OccCustomerGroupOccCustomer("test_occ_customer_group_occ_customer", {
 *     displayName: occCustomerGroupOccCustomerDisplayName,
 *     occCustomerGroupId: testOccCustomerGroup.id,
 *     tenancyId: testTenancy.id,
 *     description: occCustomerGroupOccCustomerDescription,
 *     status: occCustomerGroupOccCustomerStatus,
 * });
 * ```
 *
 * ## Import
 *
 * OccCustomerGroupOccCustomers can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CapacityManagement/occCustomerGroupOccCustomer:OccCustomerGroupOccCustomer test_occ_customer_group_occ_customer "id"
 * ```
 */
export class OccCustomerGroupOccCustomer extends pulumi.CustomResource {
    /**
     * Get an existing OccCustomerGroupOccCustomer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OccCustomerGroupOccCustomerState, opts?: pulumi.CustomResourceOptions): OccCustomerGroupOccCustomer {
        return new OccCustomerGroupOccCustomer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CapacityManagement/occCustomerGroupOccCustomer:OccCustomerGroupOccCustomer';

    /**
     * Returns true if the given object is an instance of OccCustomerGroupOccCustomer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OccCustomerGroupOccCustomer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OccCustomerGroupOccCustomer.__pulumiType;
    }

    /**
     * (Updatable) The description about the customer group.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The display name for the customer.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The OCID of the customer group.
     */
    public readonly occCustomerGroupId!: pulumi.Output<string>;
    /**
     * (Updatable) To determine whether the customer is enabled/disabled.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * The OCID of the tenancy belonging to the customer.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly tenancyId!: pulumi.Output<string>;

    /**
     * Create a OccCustomerGroupOccCustomer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OccCustomerGroupOccCustomerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OccCustomerGroupOccCustomerArgs | OccCustomerGroupOccCustomerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OccCustomerGroupOccCustomerState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["occCustomerGroupId"] = state ? state.occCustomerGroupId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tenancyId"] = state ? state.tenancyId : undefined;
        } else {
            const args = argsOrState as OccCustomerGroupOccCustomerArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.occCustomerGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'occCustomerGroupId'");
            }
            if ((!args || args.tenancyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenancyId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["occCustomerGroupId"] = args ? args.occCustomerGroupId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tenancyId"] = args ? args.tenancyId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OccCustomerGroupOccCustomer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OccCustomerGroupOccCustomer resources.
 */
export interface OccCustomerGroupOccCustomerState {
    /**
     * (Updatable) The description about the customer group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name for the customer.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The OCID of the customer group.
     */
    occCustomerGroupId?: pulumi.Input<string>;
    /**
     * (Updatable) To determine whether the customer is enabled/disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * The OCID of the tenancy belonging to the customer.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    tenancyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OccCustomerGroupOccCustomer resource.
 */
export interface OccCustomerGroupOccCustomerArgs {
    /**
     * (Updatable) The description about the customer group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name for the customer.
     */
    displayName: pulumi.Input<string>;
    /**
     * The OCID of the customer group.
     */
    occCustomerGroupId: pulumi.Input<string>;
    /**
     * (Updatable) To determine whether the customer is enabled/disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * The OCID of the tenancy belonging to the customer.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    tenancyId: pulumi.Input<string>;
}
