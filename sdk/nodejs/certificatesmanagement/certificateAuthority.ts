// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Certificate Authority resource in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Creates a new certificate authority (CA) according to the details of the request.
 *
 * ## Import
 *
 * CertificateAuthorities can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CertificatesManagement/certificateAuthority:CertificateAuthority test_certificate_authority "id"
 * ```
 */
export class CertificateAuthority extends pulumi.CustomResource {
    /**
     * Get an existing CertificateAuthority resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateAuthorityState, opts?: pulumi.CustomResourceOptions): CertificateAuthority {
        return new CertificateAuthority(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CertificatesManagement/certificateAuthority:CertificateAuthority';

    /**
     * Returns true if the given object is an instance of CertificateAuthority.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CertificateAuthority {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CertificateAuthority.__pulumiType;
    }

    /**
     * (Updatable) The configuration details for creating a certificate authority (CA).
     */
    declare public readonly certificateAuthorityConfig: pulumi.Output<outputs.CertificatesManagement.CertificateAuthorityCertificateAuthorityConfig>;
    /**
     * (Updatable) A list of rules that control how the CA is used and managed.
     */
    declare public readonly certificateAuthorityRules: pulumi.Output<outputs.CertificatesManagement.CertificateAuthorityCertificateAuthorityRule[] | undefined>;
    /**
     * (Updatable) The details of the certificate revocation list (CRL).
     */
    declare public readonly certificateRevocationListDetails: pulumi.Output<outputs.CertificatesManagement.CertificateAuthorityCertificateRevocationListDetails | undefined>;
    /**
     * (Updatable) The compartment in which you want to create the CA.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * The origin of the CA.
     */
    declare public /*out*/ readonly configType: pulumi.Output<string>;
    /**
     * The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
     */
    declare public /*out*/ readonly currentVersions: pulumi.Output<outputs.CertificatesManagement.CertificateAuthorityCurrentVersion[]>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A brief description of the CA.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
     */
    declare public /*out*/ readonly issuerCertificateAuthorityId: pulumi.Output<string>;
    /**
     * The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
     */
    declare public readonly kmsKeyId: pulumi.Output<string>;
    /**
     * Additional information about the current CA lifecycle state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The algorithm used to sign public key certificates that the CA issues.
     */
    declare public /*out*/ readonly signingAlgorithm: pulumi.Output<string>;
    /**
     * The current lifecycle state of the certificate authority.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     */
    declare public /*out*/ readonly subjects: pulumi.Output<outputs.CertificatesManagement.CertificateAuthoritySubject[]>;
    /**
     * A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeOfDeletion: pulumi.Output<string>;

    /**
     * Create a CertificateAuthority resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateAuthorityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CertificateAuthorityArgs | CertificateAuthorityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CertificateAuthorityState | undefined;
            resourceInputs["certificateAuthorityConfig"] = state?.certificateAuthorityConfig;
            resourceInputs["certificateAuthorityRules"] = state?.certificateAuthorityRules;
            resourceInputs["certificateRevocationListDetails"] = state?.certificateRevocationListDetails;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["configType"] = state?.configType;
            resourceInputs["currentVersions"] = state?.currentVersions;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["issuerCertificateAuthorityId"] = state?.issuerCertificateAuthorityId;
            resourceInputs["kmsKeyId"] = state?.kmsKeyId;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["name"] = state?.name;
            resourceInputs["signingAlgorithm"] = state?.signingAlgorithm;
            resourceInputs["state"] = state?.state;
            resourceInputs["subjects"] = state?.subjects;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeOfDeletion"] = state?.timeOfDeletion;
        } else {
            const args = argsOrState as CertificateAuthorityArgs | undefined;
            if (args?.certificateAuthorityConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'certificateAuthorityConfig'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.kmsKeyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'kmsKeyId'");
            }
            resourceInputs["certificateAuthorityConfig"] = args?.certificateAuthorityConfig;
            resourceInputs["certificateAuthorityRules"] = args?.certificateAuthorityRules;
            resourceInputs["certificateRevocationListDetails"] = args?.certificateRevocationListDetails;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["kmsKeyId"] = args?.kmsKeyId;
            resourceInputs["name"] = args?.name;
            resourceInputs["configType"] = undefined /*out*/;
            resourceInputs["currentVersions"] = undefined /*out*/;
            resourceInputs["issuerCertificateAuthorityId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["signingAlgorithm"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["subjects"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeOfDeletion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CertificateAuthority.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CertificateAuthority resources.
 */
export interface CertificateAuthorityState {
    /**
     * (Updatable) The configuration details for creating a certificate authority (CA).
     */
    certificateAuthorityConfig?: pulumi.Input<inputs.CertificatesManagement.CertificateAuthorityCertificateAuthorityConfig>;
    /**
     * (Updatable) A list of rules that control how the CA is used and managed.
     */
    certificateAuthorityRules?: pulumi.Input<pulumi.Input<inputs.CertificatesManagement.CertificateAuthorityCertificateAuthorityRule>[]>;
    /**
     * (Updatable) The details of the certificate revocation list (CRL).
     */
    certificateRevocationListDetails?: pulumi.Input<inputs.CertificatesManagement.CertificateAuthorityCertificateRevocationListDetails>;
    /**
     * (Updatable) The compartment in which you want to create the CA.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The origin of the CA.
     */
    configType?: pulumi.Input<string>;
    /**
     * The metadata details of the certificate authority (CA) version. This summary object does not contain the CA contents.
     */
    currentVersions?: pulumi.Input<pulumi.Input<inputs.CertificatesManagement.CertificateAuthorityCurrentVersion>[]>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A brief description of the CA.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The OCID of the parent CA that issued this CA. If this is the root CA, then this value is null.
     */
    issuerCertificateAuthorityId?: pulumi.Input<string>;
    /**
     * The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Additional information about the current CA lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    name?: pulumi.Input<string>;
    /**
     * The algorithm used to sign public key certificates that the CA issues.
     */
    signingAlgorithm?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the certificate authority.
     */
    state?: pulumi.Input<string>;
    /**
     * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     */
    subjects?: pulumi.Input<pulumi.Input<inputs.CertificatesManagement.CertificateAuthoritySubject>[]>;
    /**
     * A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    timeOfDeletion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CertificateAuthority resource.
 */
export interface CertificateAuthorityArgs {
    /**
     * (Updatable) The configuration details for creating a certificate authority (CA).
     */
    certificateAuthorityConfig: pulumi.Input<inputs.CertificatesManagement.CertificateAuthorityCertificateAuthorityConfig>;
    /**
     * (Updatable) A list of rules that control how the CA is used and managed.
     */
    certificateAuthorityRules?: pulumi.Input<pulumi.Input<inputs.CertificatesManagement.CertificateAuthorityCertificateAuthorityRule>[]>;
    /**
     * (Updatable) The details of the certificate revocation list (CRL).
     */
    certificateRevocationListDetails?: pulumi.Input<inputs.CertificatesManagement.CertificateAuthorityCertificateRevocationListDetails>;
    /**
     * (Updatable) The compartment in which you want to create the CA.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A brief description of the CA.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The OCID of the Oracle Cloud Infrastructure Vault key used to encrypt the CA.
     */
    kmsKeyId: pulumi.Input<string>;
    /**
     * A user-friendly name for the CA. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    name?: pulumi.Input<string>;
}
