// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Association resource in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Gets details about the specified association.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAssociation = oci.CertificatesManagement.getAssociation({
 *     associationId: testAssociationOciCertificatesManagementAssociation.id,
 * });
 * ```
 */
export function getAssociation(args: GetAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetAssociationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CertificatesManagement/getAssociation:getAssociation", {
        "associationId": args.associationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAssociation.
 */
export interface GetAssociationArgs {
    /**
     * The OCID of an association between a certificate-related resource and another Oracle Cloud Infrastructure resource.
     */
    associationId: string;
}

/**
 * A collection of values returned by getAssociation.
 */
export interface GetAssociationResult {
    /**
     * The OCID of the associated resource.
     */
    readonly associatedResourceId: string;
    readonly associationId: string;
    /**
     * Type of the association.
     */
    readonly associationType: string;
    /**
     * The OCID of the certificate-related resource associated with another Oracle Cloud Infrastructure resource.
     */
    readonly certificatesResourceId: string;
    /**
     * The compartment OCID of the association, which is strongly tied to the compartment OCID of the certificate-related resource.
     */
    readonly compartmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A user-friendly name generated by the service for the association, expressed in a format that follows the pattern: [certificatesResourceEntityType]-[associatedResourceEntityType]-UUID.
     */
    readonly name: string;
    /**
     * The current lifecycle state of the association.
     */
    readonly state: string;
    /**
     * A property indicating when the association was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    readonly timeCreated: string;
}
/**
 * This data source provides details about a specific Association resource in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Gets details about the specified association.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAssociation = oci.CertificatesManagement.getAssociation({
 *     associationId: testAssociationOciCertificatesManagementAssociation.id,
 * });
 * ```
 */
export function getAssociationOutput(args: GetAssociationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAssociationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:CertificatesManagement/getAssociation:getAssociation", {
        "associationId": args.associationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAssociation.
 */
export interface GetAssociationOutputArgs {
    /**
     * The OCID of an association between a certificate-related resource and another Oracle Cloud Infrastructure resource.
     */
    associationId: pulumi.Input<string>;
}
