// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Ca Bundle resource in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Gets details about the specified CA bundle.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCaBundle = oci.CertificatesManagement.getCaBundle({
 *     caBundleId: testCaBundleOciCertificatesManagementCaBundle.id,
 * });
 * ```
 */
export function getCaBundle(args: GetCaBundleArgs, opts?: pulumi.InvokeOptions): Promise<GetCaBundleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CertificatesManagement/getCaBundle:getCaBundle", {
        "caBundleId": args.caBundleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCaBundle.
 */
export interface GetCaBundleArgs {
    /**
     * The OCID of the CA bundle.
     */
    caBundleId: string;
}

/**
 * A collection of values returned by getCaBundle.
 */
export interface GetCaBundleResult {
    readonly caBundleId: string;
    readonly caBundlePem: string;
    /**
     * The OCID of the compartment for the CA bundle.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * A brief description of the CA bundle.
     */
    readonly description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The OCID of the CA bundle.
     */
    readonly id: string;
    /**
     * Additional information about the current lifecycle state of the CA bundle.
     */
    readonly lifecycleDetails: string;
    /**
     * A user-friendly name for the CA bundle. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     */
    readonly name: string;
    /**
     * The current lifecycle state of the CA bundle.
     */
    readonly state: string;
    /**
     * A property indicating when the CA bundle was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     */
    readonly timeCreated: string;
}
/**
 * This data source provides details about a specific Ca Bundle resource in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Gets details about the specified CA bundle.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCaBundle = oci.CertificatesManagement.getCaBundle({
 *     caBundleId: testCaBundleOciCertificatesManagementCaBundle.id,
 * });
 * ```
 */
export function getCaBundleOutput(args: GetCaBundleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCaBundleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:CertificatesManagement/getCaBundle:getCaBundle", {
        "caBundleId": args.caBundleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCaBundle.
 */
export interface GetCaBundleOutputArgs {
    /**
     * The OCID of the CA bundle.
     */
    caBundleId: pulumi.Input<string>;
}
