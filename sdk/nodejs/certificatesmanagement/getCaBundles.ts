// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Ca Bundles in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Lists all CA bundles that match the query parameters.
 * Optionally, you can use the parameter `FilterByCaBundleIdQueryParam` to limit the result set to a single item that matches the specified CA bundle.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCaBundles = oci.CertificatesManagement.getCaBundles({
 *     caBundleId: oci_certificates_management_ca_bundle.test_ca_bundle.id,
 *     compartmentId: _var.compartment_id,
 *     name: _var.ca_bundle_name,
 *     state: _var.ca_bundle_state,
 * });
 * ```
 */
export function getCaBundles(args?: GetCaBundlesArgs, opts?: pulumi.InvokeOptions): Promise<GetCaBundlesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:CertificatesManagement/getCaBundles:getCaBundles", {
        "caBundleId": args.caBundleId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getCaBundles.
 */
export interface GetCaBundlesArgs {
    /**
     * The OCID of the CA bundle.
     */
    caBundleId?: string;
    /**
     * A filter that returns only resources that match the given compartment OCID.
     */
    compartmentId?: string;
    filters?: inputs.CertificatesManagement.GetCaBundlesFilter[];
    /**
     * A filter that returns only resources that match the specified name.
     */
    name?: string;
    /**
     * A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getCaBundles.
 */
export interface GetCaBundlesResult {
    /**
     * The list of ca_bundle_collection.
     */
    readonly caBundleCollections: outputs.CertificatesManagement.GetCaBundlesCaBundleCollection[];
    readonly caBundleId?: string;
    /**
     * The OCID of the compartment for the CA bundle.
     */
    readonly compartmentId?: string;
    readonly filters?: outputs.CertificatesManagement.GetCaBundlesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A user-friendly name for the CA bundle. Names are unique within a compartment. Avoid entering confidential information. Valid characters include uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     */
    readonly name?: string;
    /**
     * The current lifecycle state of the CA bundle.
     */
    readonly state?: string;
}

export function getCaBundlesOutput(args?: GetCaBundlesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCaBundlesResult> {
    return pulumi.output(args).apply(a => getCaBundles(a, opts))
}

/**
 * A collection of arguments for invoking getCaBundles.
 */
export interface GetCaBundlesOutputArgs {
    /**
     * The OCID of the CA bundle.
     */
    caBundleId?: pulumi.Input<string>;
    /**
     * A filter that returns only resources that match the given compartment OCID.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CertificatesManagement.GetCaBundlesFilterArgs>[]>;
    /**
     * A filter that returns only resources that match the specified name.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter that returns only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
