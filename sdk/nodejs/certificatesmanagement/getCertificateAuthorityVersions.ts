// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Certificate Authority Versions in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Lists all versions for the specified certificate authority (CA).
 * Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the results to a single item that matches the specified version number.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCertificateAuthorityVersions = oci.CertificatesManagement.getCertificateAuthorityVersions({
 *     certificateAuthorityId: oci_certificates_management_certificate_authority.test_certificate_authority.id,
 *     versionNumber: _var.certificate_authority_version_version_number,
 * });
 * ```
 */
export function getCertificateAuthorityVersions(args: GetCertificateAuthorityVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateAuthorityVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CertificatesManagement/getCertificateAuthorityVersions:getCertificateAuthorityVersions", {
        "certificateAuthorityId": args.certificateAuthorityId,
        "filters": args.filters,
        "versionNumber": args.versionNumber,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificateAuthorityVersions.
 */
export interface GetCertificateAuthorityVersionsArgs {
    /**
     * The OCID of the certificate authority (CA).
     */
    certificateAuthorityId: string;
    filters?: inputs.CertificatesManagement.GetCertificateAuthorityVersionsFilter[];
    /**
     * A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
     */
    versionNumber?: string;
}

/**
 * A collection of values returned by getCertificateAuthorityVersions.
 */
export interface GetCertificateAuthorityVersionsResult {
    /**
     * The OCID of the CA.
     */
    readonly certificateAuthorityId: string;
    /**
     * The list of certificate_authority_version_collection.
     */
    readonly certificateAuthorityVersionCollections: outputs.CertificatesManagement.GetCertificateAuthorityVersionsCertificateAuthorityVersionCollection[];
    readonly filters?: outputs.CertificatesManagement.GetCertificateAuthorityVersionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The version number of the CA.
     */
    readonly versionNumber?: string;
}
/**
 * This data source provides the list of Certificate Authority Versions in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Lists all versions for the specified certificate authority (CA).
 * Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the results to a single item that matches the specified version number.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCertificateAuthorityVersions = oci.CertificatesManagement.getCertificateAuthorityVersions({
 *     certificateAuthorityId: oci_certificates_management_certificate_authority.test_certificate_authority.id,
 *     versionNumber: _var.certificate_authority_version_version_number,
 * });
 * ```
 */
export function getCertificateAuthorityVersionsOutput(args: GetCertificateAuthorityVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateAuthorityVersionsResult> {
    return pulumi.output(args).apply((a: any) => getCertificateAuthorityVersions(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateAuthorityVersions.
 */
export interface GetCertificateAuthorityVersionsOutputArgs {
    /**
     * The OCID of the certificate authority (CA).
     */
    certificateAuthorityId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CertificatesManagement.GetCertificateAuthorityVersionsFilterArgs>[]>;
    /**
     * A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
     */
    versionNumber?: pulumi.Input<string>;
}
