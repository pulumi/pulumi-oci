// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Certificate Versions in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Lists all certificate versions for the specified certificate.
 * Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the result set to a single item that matches the specified version number.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCertificateVersions = oci.CertificatesManagement.getCertificateVersions({
 *     certificateId: testCertificate.id,
 *     versionNumber: certificateVersionVersionNumber,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getCertificateVersions(args: GetCertificateVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CertificatesManagement/getCertificateVersions:getCertificateVersions", {
        "certificateId": args.certificateId,
        "filters": args.filters,
        "versionNumber": args.versionNumber,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificateVersions.
 */
export interface GetCertificateVersionsArgs {
    /**
     * The OCID of the certificate.
     */
    certificateId: string;
    filters?: inputs.CertificatesManagement.GetCertificateVersionsFilter[];
    /**
     * A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
     */
    versionNumber?: string;
}

/**
 * A collection of values returned by getCertificateVersions.
 */
export interface GetCertificateVersionsResult {
    /**
     * The OCID of the certificate.
     */
    readonly certificateId: string;
    /**
     * The list of certificate_version_collection.
     */
    readonly certificateVersionCollections: outputs.CertificatesManagement.GetCertificateVersionsCertificateVersionCollection[];
    readonly filters?: outputs.CertificatesManagement.GetCertificateVersionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The version number of the certificate.
     */
    readonly versionNumber?: string;
}
/**
 * This data source provides the list of Certificate Versions in Oracle Cloud Infrastructure Certificates Management service.
 *
 * Lists all certificate versions for the specified certificate.
 * Optionally, you can use the parameter `FilterByVersionNumberQueryParam` to limit the result set to a single item that matches the specified version number.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCertificateVersions = oci.CertificatesManagement.getCertificateVersions({
 *     certificateId: testCertificate.id,
 *     versionNumber: certificateVersionVersionNumber,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getCertificateVersionsOutput(args: GetCertificateVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateVersionsResult> {
    return pulumi.output(args).apply((a: any) => getCertificateVersions(a, opts))
}

/**
 * A collection of arguments for invoking getCertificateVersions.
 */
export interface GetCertificateVersionsOutputArgs {
    /**
     * The OCID of the certificate.
     */
    certificateId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CertificatesManagement.GetCertificateVersionsFilterArgs>[]>;
    /**
     * A filter that returns only resources that match the specified version number. The default value is 0, which means that this filter is not applied.
     */
    versionNumber?: pulumi.Input<string>;
}
