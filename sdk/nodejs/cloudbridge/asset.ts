// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Asset resource in Oracle Cloud Infrastructure Cloud Bridge service.
 *
 * Creates an asset.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAsset = new oci.cloudbridge.Asset("test_asset", {
 *     assetType: assetAssetType,
 *     compartmentId: compartmentId,
 *     externalAssetKey: assetExternalAssetKey,
 *     inventoryId: testInventory.id,
 *     sourceKey: assetSourceKey,
 *     assetSourceIds: assetAssetSourceIds,
 *     compute: {
 *         connectedNetworks: assetComputeConnectedNetworks,
 *         coresCount: assetComputeCoresCount,
 *         cpuModel: assetComputeCpuModel,
 *         description: assetComputeDescription,
 *         disks: [{
 *             bootOrder: assetComputeDisksBootOrder,
 *             location: assetComputeDisksLocation,
 *             name: assetComputeDisksName,
 *             persistentMode: assetComputeDisksPersistentMode,
 *             sizeInMbs: assetComputeDisksSizeInMbs,
 *             uuid: assetComputeDisksUuid,
 *             uuidLun: assetComputeDisksUuidLun,
 *         }],
 *         disksCount: assetComputeDisksCount,
 *         dnsName: assetComputeDnsName,
 *         firmware: assetComputeFirmware,
 *         gpuDevices: [{
 *             coresCount: assetComputeGpuDevicesCoresCount,
 *             description: assetComputeGpuDevicesDescription,
 *             manufacturer: assetComputeGpuDevicesManufacturer,
 *             memoryInMbs: assetComputeGpuDevicesMemoryInMbs,
 *             name: assetComputeGpuDevicesName,
 *         }],
 *         gpuDevicesCount: assetComputeGpuDevicesCount,
 *         guestState: assetComputeGuestState,
 *         hardwareVersion: assetComputeHardwareVersion,
 *         hostName: assetComputeHostName,
 *         isPmemEnabled: assetComputeIsPmemEnabled,
 *         isTpmEnabled: assetComputeIsTpmEnabled,
 *         latencySensitivity: assetComputeLatencySensitivity,
 *         memoryInMbs: assetComputeMemoryInMbs,
 *         nics: [{
 *             ipAddresses: assetComputeNicsIpAddresses,
 *             label: assetComputeNicsLabel,
 *             macAddress: assetComputeNicsMacAddress,
 *             macAddressType: assetComputeNicsMacAddressType,
 *             networkName: assetComputeNicsNetworkName,
 *             switchName: assetComputeNicsSwitchName,
 *         }],
 *         nicsCount: assetComputeNicsCount,
 *         nvdimmController: {
 *             busNumber: assetComputeNvdimmControllerBusNumber,
 *             label: assetComputeNvdimmControllerLabel,
 *         },
 *         nvdimms: [{
 *             controllerKey: assetComputeNvdimmsControllerKey,
 *             label: assetComputeNvdimmsLabel,
 *             unitNumber: assetComputeNvdimmsUnitNumber,
 *         }],
 *         operatingSystem: assetComputeOperatingSystem,
 *         operatingSystemVersion: assetComputeOperatingSystemVersion,
 *         pmemInMbs: assetComputePmemInMbs,
 *         powerState: assetComputePowerState,
 *         primaryIp: assetComputePrimaryIp,
 *         scsiController: {
 *             label: assetComputeScsiControllerLabel,
 *             sharedBus: assetComputeScsiControllerSharedBus,
 *             unitNumber: assetComputeScsiControllerUnitNumber,
 *         },
 *         storageProvisionedInMbs: assetComputeStorageProvisionedInMbs,
 *         threadsPerCoreCount: assetComputeThreadsPerCoreCount,
 *     },
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     displayName: assetDisplayName,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     vm: {
 *         hypervisorHost: assetVmHypervisorHost,
 *         hypervisorVendor: assetVmHypervisorVendor,
 *         hypervisorVersion: assetVmHypervisorVersion,
 *     },
 *     vmwareVcenter: {
 *         dataCenter: assetVmwareVcenterDataCenter,
 *         vcenterKey: assetVmwareVcenterVcenterKey,
 *         vcenterVersion: assetVmwareVcenterVcenterVersion,
 *     },
 *     vmwareVm: {
 *         cluster: assetVmwareVmCluster,
 *         customerFields: assetVmwareVmCustomerFields,
 *         customerTags: [{
 *             description: assetVmwareVmCustomerTagsDescription,
 *             name: assetVmwareVmCustomerTagsName,
 *         }],
 *         faultToleranceBandwidth: assetVmwareVmFaultToleranceBandwidth,
 *         faultToleranceSecondaryLatency: assetVmwareVmFaultToleranceSecondaryLatency,
 *         faultToleranceState: assetVmwareVmFaultToleranceState,
 *         instanceUuid: assetVmwareVmInstanceUuid,
 *         isDisksCbtEnabled: assetVmwareVmIsDisksCbtEnabled,
 *         isDisksUuidEnabled: assetVmwareVmIsDisksUuidEnabled,
 *         path: assetVmwareVmPath,
 *         vmwareToolsStatus: assetVmwareVmVmwareToolsStatus,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Assets can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CloudBridge/asset:Asset test_asset "id"
 * ```
 */
export class Asset extends pulumi.CustomResource {
    /**
     * Get an existing Asset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AssetState, opts?: pulumi.CustomResourceOptions): Asset {
        return new Asset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CloudBridge/asset:Asset';

    /**
     * Returns true if the given object is an instance of Asset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Asset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Asset.__pulumiType;
    }

    /**
     * (Updatable) List of asset source OCID.
     */
    declare public readonly assetSourceIds: pulumi.Output<string[]>;
    /**
     * (Updatable) The type of asset.
     */
    declare public readonly assetType: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the compartment that the asset belongs to.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Compute related properties.
     */
    declare public readonly compute: pulumi.Output<outputs.CloudBridge.AssetCompute>;
    /**
     * (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Asset display name.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * The key of the asset from the external environment.
     */
    declare public readonly externalAssetKey: pulumi.Output<string>;
    /**
     * (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace/scope. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Inventory ID to which an asset belongs.
     */
    declare public readonly inventoryId: pulumi.Output<string>;
    /**
     * The source key to which the asset belongs.
     */
    declare public readonly sourceKey: pulumi.Output<string>;
    /**
     * The current state of the asset.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle cloud infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time when the asset was created. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time when the asset was updated. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * (Updatable) Virtual machine related properties.
     */
    declare public readonly vm: pulumi.Output<outputs.CloudBridge.AssetVm>;
    /**
     * (Updatable) VMware vCenter related properties.
     */
    declare public readonly vmwareVcenter: pulumi.Output<outputs.CloudBridge.AssetVmwareVcenter>;
    /**
     * (Updatable) VMware virtual machine related properties.
     */
    declare public readonly vmwareVm: pulumi.Output<outputs.CloudBridge.AssetVmwareVm>;

    /**
     * Create a Asset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AssetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AssetArgs | AssetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AssetState | undefined;
            resourceInputs["assetSourceIds"] = state?.assetSourceIds;
            resourceInputs["assetType"] = state?.assetType;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["compute"] = state?.compute;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["externalAssetKey"] = state?.externalAssetKey;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["inventoryId"] = state?.inventoryId;
            resourceInputs["sourceKey"] = state?.sourceKey;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["vm"] = state?.vm;
            resourceInputs["vmwareVcenter"] = state?.vmwareVcenter;
            resourceInputs["vmwareVm"] = state?.vmwareVm;
        } else {
            const args = argsOrState as AssetArgs | undefined;
            if (args?.assetType === undefined && !opts.urn) {
                throw new Error("Missing required property 'assetType'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.externalAssetKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'externalAssetKey'");
            }
            if (args?.inventoryId === undefined && !opts.urn) {
                throw new Error("Missing required property 'inventoryId'");
            }
            if (args?.sourceKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceKey'");
            }
            resourceInputs["assetSourceIds"] = args?.assetSourceIds;
            resourceInputs["assetType"] = args?.assetType;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["compute"] = args?.compute;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["externalAssetKey"] = args?.externalAssetKey;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["inventoryId"] = args?.inventoryId;
            resourceInputs["sourceKey"] = args?.sourceKey;
            resourceInputs["vm"] = args?.vm;
            resourceInputs["vmwareVcenter"] = args?.vmwareVcenter;
            resourceInputs["vmwareVm"] = args?.vmwareVm;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Asset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Asset resources.
 */
export interface AssetState {
    /**
     * (Updatable) List of asset source OCID.
     */
    assetSourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The type of asset.
     */
    assetType?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment that the asset belongs to.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Compute related properties.
     */
    compute?: pulumi.Input<inputs.CloudBridge.AssetCompute>;
    /**
     * (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Asset display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The key of the asset from the external environment.
     */
    externalAssetKey?: pulumi.Input<string>;
    /**
     * (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace/scope. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Inventory ID to which an asset belongs.
     */
    inventoryId?: pulumi.Input<string>;
    /**
     * The source key to which the asset belongs.
     */
    sourceKey?: pulumi.Input<string>;
    /**
     * The current state of the asset.
     */
    state?: pulumi.Input<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle cloud infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time when the asset was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when the asset was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) Virtual machine related properties.
     */
    vm?: pulumi.Input<inputs.CloudBridge.AssetVm>;
    /**
     * (Updatable) VMware vCenter related properties.
     */
    vmwareVcenter?: pulumi.Input<inputs.CloudBridge.AssetVmwareVcenter>;
    /**
     * (Updatable) VMware virtual machine related properties.
     */
    vmwareVm?: pulumi.Input<inputs.CloudBridge.AssetVmwareVm>;
}

/**
 * The set of arguments for constructing a Asset resource.
 */
export interface AssetArgs {
    /**
     * (Updatable) List of asset source OCID.
     */
    assetSourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The type of asset.
     */
    assetType: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment that the asset belongs to.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Compute related properties.
     */
    compute?: pulumi.Input<inputs.CloudBridge.AssetCompute>;
    /**
     * (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Asset display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The key of the asset from the external environment.
     */
    externalAssetKey: pulumi.Input<string>;
    /**
     * (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace/scope. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Inventory ID to which an asset belongs.
     */
    inventoryId: pulumi.Input<string>;
    /**
     * The source key to which the asset belongs.
     */
    sourceKey: pulumi.Input<string>;
    /**
     * (Updatable) Virtual machine related properties.
     */
    vm?: pulumi.Input<inputs.CloudBridge.AssetVm>;
    /**
     * (Updatable) VMware vCenter related properties.
     */
    vmwareVcenter?: pulumi.Input<inputs.CloudBridge.AssetVmwareVcenter>;
    /**
     * (Updatable) VMware virtual machine related properties.
     */
    vmwareVm?: pulumi.Input<inputs.CloudBridge.AssetVmwareVm>;
}
