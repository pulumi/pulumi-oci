// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AgentArgs, AgentState } from "./agent";
export type Agent = import("./agent").Agent;
export const Agent: typeof import("./agent").Agent = null as any;
utilities.lazyLoad(exports, ["Agent"], () => require("./agent"));

export { AgentDependencyArgs, AgentDependencyState } from "./agentDependency";
export type AgentDependency = import("./agentDependency").AgentDependency;
export const AgentDependency: typeof import("./agentDependency").AgentDependency = null as any;
utilities.lazyLoad(exports, ["AgentDependency"], () => require("./agentDependency"));

export { AgentPluginArgs, AgentPluginState } from "./agentPlugin";
export type AgentPlugin = import("./agentPlugin").AgentPlugin;
export const AgentPlugin: typeof import("./agentPlugin").AgentPlugin = null as any;
utilities.lazyLoad(exports, ["AgentPlugin"], () => require("./agentPlugin"));

export { AssetArgs, AssetState } from "./asset";
export type Asset = import("./asset").Asset;
export const Asset: typeof import("./asset").Asset = null as any;
utilities.lazyLoad(exports, ["Asset"], () => require("./asset"));

export { AssetSourceArgs, AssetSourceState } from "./assetSource";
export type AssetSource = import("./assetSource").AssetSource;
export const AssetSource: typeof import("./assetSource").AssetSource = null as any;
utilities.lazyLoad(exports, ["AssetSource"], () => require("./assetSource"));

export { DiscoveryScheduleArgs, DiscoveryScheduleState } from "./discoverySchedule";
export type DiscoverySchedule = import("./discoverySchedule").DiscoverySchedule;
export const DiscoverySchedule: typeof import("./discoverySchedule").DiscoverySchedule = null as any;
utilities.lazyLoad(exports, ["DiscoverySchedule"], () => require("./discoverySchedule"));

export { EnvironmentArgs, EnvironmentState } from "./environment";
export type Environment = import("./environment").Environment;
export const Environment: typeof import("./environment").Environment = null as any;
utilities.lazyLoad(exports, ["Environment"], () => require("./environment"));

export { GetAgentArgs, GetAgentResult, GetAgentOutputArgs } from "./getAgent";
export const getAgent: typeof import("./getAgent").getAgent = null as any;
export const getAgentOutput: typeof import("./getAgent").getAgentOutput = null as any;
utilities.lazyLoad(exports, ["getAgent","getAgentOutput"], () => require("./getAgent"));

export { GetAgentDependenciesArgs, GetAgentDependenciesResult, GetAgentDependenciesOutputArgs } from "./getAgentDependencies";
export const getAgentDependencies: typeof import("./getAgentDependencies").getAgentDependencies = null as any;
export const getAgentDependenciesOutput: typeof import("./getAgentDependencies").getAgentDependenciesOutput = null as any;
utilities.lazyLoad(exports, ["getAgentDependencies","getAgentDependenciesOutput"], () => require("./getAgentDependencies"));

export { GetAgentDependencyArgs, GetAgentDependencyResult, GetAgentDependencyOutputArgs } from "./getAgentDependency";
export const getAgentDependency: typeof import("./getAgentDependency").getAgentDependency = null as any;
export const getAgentDependencyOutput: typeof import("./getAgentDependency").getAgentDependencyOutput = null as any;
utilities.lazyLoad(exports, ["getAgentDependency","getAgentDependencyOutput"], () => require("./getAgentDependency"));

export { GetAgentPluginArgs, GetAgentPluginResult, GetAgentPluginOutputArgs } from "./getAgentPlugin";
export const getAgentPlugin: typeof import("./getAgentPlugin").getAgentPlugin = null as any;
export const getAgentPluginOutput: typeof import("./getAgentPlugin").getAgentPluginOutput = null as any;
utilities.lazyLoad(exports, ["getAgentPlugin","getAgentPluginOutput"], () => require("./getAgentPlugin"));

export { GetAgentsArgs, GetAgentsResult, GetAgentsOutputArgs } from "./getAgents";
export const getAgents: typeof import("./getAgents").getAgents = null as any;
export const getAgentsOutput: typeof import("./getAgents").getAgentsOutput = null as any;
utilities.lazyLoad(exports, ["getAgents","getAgentsOutput"], () => require("./getAgents"));

export { GetApplianceImageArgs, GetApplianceImageResult, GetApplianceImageOutputArgs } from "./getApplianceImage";
export const getApplianceImage: typeof import("./getApplianceImage").getApplianceImage = null as any;
export const getApplianceImageOutput: typeof import("./getApplianceImage").getApplianceImageOutput = null as any;
utilities.lazyLoad(exports, ["getApplianceImage","getApplianceImageOutput"], () => require("./getApplianceImage"));

export { GetApplianceImagesArgs, GetApplianceImagesResult, GetApplianceImagesOutputArgs } from "./getApplianceImages";
export const getApplianceImages: typeof import("./getApplianceImages").getApplianceImages = null as any;
export const getApplianceImagesOutput: typeof import("./getApplianceImages").getApplianceImagesOutput = null as any;
utilities.lazyLoad(exports, ["getApplianceImages","getApplianceImagesOutput"], () => require("./getApplianceImages"));

export { GetAssetArgs, GetAssetResult, GetAssetOutputArgs } from "./getAsset";
export const getAsset: typeof import("./getAsset").getAsset = null as any;
export const getAssetOutput: typeof import("./getAsset").getAssetOutput = null as any;
utilities.lazyLoad(exports, ["getAsset","getAssetOutput"], () => require("./getAsset"));

export { GetAssetSourceArgs, GetAssetSourceResult, GetAssetSourceOutputArgs } from "./getAssetSource";
export const getAssetSource: typeof import("./getAssetSource").getAssetSource = null as any;
export const getAssetSourceOutput: typeof import("./getAssetSource").getAssetSourceOutput = null as any;
utilities.lazyLoad(exports, ["getAssetSource","getAssetSourceOutput"], () => require("./getAssetSource"));

export { GetAssetSourcesArgs, GetAssetSourcesResult, GetAssetSourcesOutputArgs } from "./getAssetSources";
export const getAssetSources: typeof import("./getAssetSources").getAssetSources = null as any;
export const getAssetSourcesOutput: typeof import("./getAssetSources").getAssetSourcesOutput = null as any;
utilities.lazyLoad(exports, ["getAssetSources","getAssetSourcesOutput"], () => require("./getAssetSources"));

export { GetAssetsArgs, GetAssetsResult, GetAssetsOutputArgs } from "./getAssets";
export const getAssets: typeof import("./getAssets").getAssets = null as any;
export const getAssetsOutput: typeof import("./getAssets").getAssetsOutput = null as any;
utilities.lazyLoad(exports, ["getAssets","getAssetsOutput"], () => require("./getAssets"));

export { GetDiscoveryScheduleArgs, GetDiscoveryScheduleResult, GetDiscoveryScheduleOutputArgs } from "./getDiscoverySchedule";
export const getDiscoverySchedule: typeof import("./getDiscoverySchedule").getDiscoverySchedule = null as any;
export const getDiscoveryScheduleOutput: typeof import("./getDiscoverySchedule").getDiscoveryScheduleOutput = null as any;
utilities.lazyLoad(exports, ["getDiscoverySchedule","getDiscoveryScheduleOutput"], () => require("./getDiscoverySchedule"));

export { GetDiscoverySchedulesArgs, GetDiscoverySchedulesResult, GetDiscoverySchedulesOutputArgs } from "./getDiscoverySchedules";
export const getDiscoverySchedules: typeof import("./getDiscoverySchedules").getDiscoverySchedules = null as any;
export const getDiscoverySchedulesOutput: typeof import("./getDiscoverySchedules").getDiscoverySchedulesOutput = null as any;
utilities.lazyLoad(exports, ["getDiscoverySchedules","getDiscoverySchedulesOutput"], () => require("./getDiscoverySchedules"));

export { GetEnvironmentArgs, GetEnvironmentResult, GetEnvironmentOutputArgs } from "./getEnvironment";
export const getEnvironment: typeof import("./getEnvironment").getEnvironment = null as any;
export const getEnvironmentOutput: typeof import("./getEnvironment").getEnvironmentOutput = null as any;
utilities.lazyLoad(exports, ["getEnvironment","getEnvironmentOutput"], () => require("./getEnvironment"));

export { GetEnvironmentsArgs, GetEnvironmentsResult, GetEnvironmentsOutputArgs } from "./getEnvironments";
export const getEnvironments: typeof import("./getEnvironments").getEnvironments = null as any;
export const getEnvironmentsOutput: typeof import("./getEnvironments").getEnvironmentsOutput = null as any;
utilities.lazyLoad(exports, ["getEnvironments","getEnvironmentsOutput"], () => require("./getEnvironments"));

export { GetInventoriesArgs, GetInventoriesResult, GetInventoriesOutputArgs } from "./getInventories";
export const getInventories: typeof import("./getInventories").getInventories = null as any;
export const getInventoriesOutput: typeof import("./getInventories").getInventoriesOutput = null as any;
utilities.lazyLoad(exports, ["getInventories","getInventoriesOutput"], () => require("./getInventories"));

export { GetInventoryArgs, GetInventoryResult, GetInventoryOutputArgs } from "./getInventory";
export const getInventory: typeof import("./getInventory").getInventory = null as any;
export const getInventoryOutput: typeof import("./getInventory").getInventoryOutput = null as any;
utilities.lazyLoad(exports, ["getInventory","getInventoryOutput"], () => require("./getInventory"));

export { InventoryArgs, InventoryState } from "./inventory";
export type Inventory = import("./inventory").Inventory;
export const Inventory: typeof import("./inventory").Inventory = null as any;
utilities.lazyLoad(exports, ["Inventory"], () => require("./inventory"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:CloudBridge/agent:Agent":
                return new Agent(name, <any>undefined, { urn })
            case "oci:CloudBridge/agentDependency:AgentDependency":
                return new AgentDependency(name, <any>undefined, { urn })
            case "oci:CloudBridge/agentPlugin:AgentPlugin":
                return new AgentPlugin(name, <any>undefined, { urn })
            case "oci:CloudBridge/asset:Asset":
                return new Asset(name, <any>undefined, { urn })
            case "oci:CloudBridge/assetSource:AssetSource":
                return new AssetSource(name, <any>undefined, { urn })
            case "oci:CloudBridge/discoverySchedule:DiscoverySchedule":
                return new DiscoverySchedule(name, <any>undefined, { urn })
            case "oci:CloudBridge/environment:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "oci:CloudBridge/inventory:Inventory":
                return new Inventory(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "CloudBridge/agent", _module)
pulumi.runtime.registerResourceModule("oci", "CloudBridge/agentDependency", _module)
pulumi.runtime.registerResourceModule("oci", "CloudBridge/agentPlugin", _module)
pulumi.runtime.registerResourceModule("oci", "CloudBridge/asset", _module)
pulumi.runtime.registerResourceModule("oci", "CloudBridge/assetSource", _module)
pulumi.runtime.registerResourceModule("oci", "CloudBridge/discoverySchedule", _module)
pulumi.runtime.registerResourceModule("oci", "CloudBridge/environment", _module)
pulumi.runtime.registerResourceModule("oci", "CloudBridge/inventory", _module)
