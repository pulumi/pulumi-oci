// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Adhoc Query resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns an adhoc query identified by adhocQueryId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAdhocQuery = oci.CloudGuard.getAdhocQuery({
 *     adhocQueryId: testAdhocQueryOciCloudGuardAdhocQuery.id,
 * });
 * ```
 */
export function getAdhocQuery(args: GetAdhocQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetAdhocQueryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CloudGuard/getAdhocQuery:getAdhocQuery", {
        "adhocQueryId": args.adhocQueryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAdhocQuery.
 */
export interface GetAdhocQueryArgs {
    /**
     * Adhoc query OCID.
     */
    adhocQueryId: string;
}

/**
 * A collection of values returned by getAdhocQuery.
 */
export interface GetAdhocQueryResult {
    /**
     * Detailed information about the adhoc query.
     */
    readonly adhocQueryDetails: outputs.CloudGuard.GetAdhocQueryAdhocQueryDetail[];
    readonly adhocQueryId: string;
    /**
     * Instance level status for each region
     */
    readonly adhocQueryRegionalDetails: outputs.CloudGuard.GetAdhocQueryAdhocQueryRegionalDetail[];
    /**
     * Compartment OCID of the adhoc query
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * Error message to show on UI in case of failure
     */
    readonly errorMessage: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * OCID for the adhoc query
     */
    readonly id: string;
    /**
     * The current lifecycle state of the resource.
     */
    readonly state: string;
    /**
     * Status of the adhoc query
     */
    readonly status: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The date and time the adhoc query was created. Format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the adhoc query was updated. Format defined by RFC3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Adhoc Query resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns an adhoc query identified by adhocQueryId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAdhocQuery = oci.CloudGuard.getAdhocQuery({
 *     adhocQueryId: testAdhocQueryOciCloudGuardAdhocQuery.id,
 * });
 * ```
 */
export function getAdhocQueryOutput(args: GetAdhocQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAdhocQueryResult> {
    return pulumi.output(args).apply((a: any) => getAdhocQuery(a, opts))
}

/**
 * A collection of arguments for invoking getAdhocQuery.
 */
export interface GetAdhocQueryOutputArgs {
    /**
     * Adhoc query OCID.
     */
    adhocQueryId: pulumi.Input<string>;
}
