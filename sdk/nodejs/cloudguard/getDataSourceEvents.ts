// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Data Source Events in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns a list of data source events
 * (DataSourceEventCollection  resource) from the data source
 * (DataSource resource) identified by dataSourceId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDataSourceEvents = oci.CloudGuard.getDataSourceEvents({
 *     dataSourceId: testDataSource.id,
 *     region: dataSourceEventRegion,
 * });
 * ```
 */
export function getDataSourceEvents(args: GetDataSourceEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSourceEventsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CloudGuard/getDataSourceEvents:getDataSourceEvents", {
        "dataSourceId": args.dataSourceId,
        "filters": args.filters,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataSourceEvents.
 */
export interface GetDataSourceEventsArgs {
    /**
     * Data source OCID.
     */
    dataSourceId: string;
    filters?: inputs.CloudGuard.GetDataSourceEventsFilter[];
    /**
     * A filter to return only resource where their region matches the given region.
     */
    region?: string;
}

/**
 * A collection of values returned by getDataSourceEvents.
 */
export interface GetDataSourceEventsResult {
    /**
     * The list of data_source_event_collection.
     */
    readonly dataSourceEventCollections: outputs.CloudGuard.GetDataSourceEventsDataSourceEventCollection[];
    /**
     * Unique identifier of data source.
     */
    readonly dataSourceId: string;
    readonly filters?: outputs.CloudGuard.GetDataSourceEventsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Data source event region
     */
    readonly region?: string;
}
/**
 * This data source provides the list of Data Source Events in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns a list of data source events
 * (DataSourceEventCollection  resource) from the data source
 * (DataSource resource) identified by dataSourceId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDataSourceEvents = oci.CloudGuard.getDataSourceEvents({
 *     dataSourceId: testDataSource.id,
 *     region: dataSourceEventRegion,
 * });
 * ```
 */
export function getDataSourceEventsOutput(args: GetDataSourceEventsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataSourceEventsResult> {
    return pulumi.output(args).apply((a: any) => getDataSourceEvents(a, opts))
}

/**
 * A collection of arguments for invoking getDataSourceEvents.
 */
export interface GetDataSourceEventsOutputArgs {
    /**
     * Data source OCID.
     */
    dataSourceId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CloudGuard.GetDataSourceEventsFilterArgs>[]>;
    /**
     * A filter to return only resource where their region matches the given region.
     */
    region?: pulumi.Input<string>;
}
