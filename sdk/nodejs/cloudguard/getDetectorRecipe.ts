// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Detector Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns a detector recipe (DetectorRecipe object) identified by detectorRecipeId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDetectorRecipe = oci.CloudGuard.getDetectorRecipe({
 *     detectorRecipeId: oci_cloud_guard_detector_recipe.test_detector_recipe.id,
 * });
 * ```
 */
export function getDetectorRecipe(args: GetDetectorRecipeArgs, opts?: pulumi.InvokeOptions): Promise<GetDetectorRecipeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CloudGuard/getDetectorRecipe:getDetectorRecipe", {
        "detectorRecipeId": args.detectorRecipeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDetectorRecipe.
 */
export interface GetDetectorRecipeArgs {
    /**
     * DetectorRecipe OCID
     */
    detectorRecipeId: string;
}

/**
 * A collection of values returned by getDetectorRecipe.
 */
export interface GetDetectorRecipeResult {
    /**
     * compartmentId of detector recipe
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * Description for DetectorRecipeDetectorRule.
     */
    readonly description: string;
    /**
     * detector for the rule
     */
    readonly detector: string;
    readonly detectorRecipeId: string;
    /**
     * List of detector rules for the detector type for recipe - user input
     */
    readonly detectorRules: outputs.CloudGuard.GetDetectorRecipeDetectorRule[];
    /**
     * The display name of entity
     */
    readonly displayName: string;
    /**
     * List of effective detector rules for the detector type for recipe after applying defaults
     */
    readonly effectiveDetectorRules: outputs.CloudGuard.GetDetectorRecipeEffectiveDetectorRule[];
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * Ocid for detector recipe
     */
    readonly id: string;
    /**
     * Owner of detector recipe
     */
    readonly owner: string;
    /**
     * Recipe Ocid of the Source Recipe to be cloned
     */
    readonly sourceDetectorRecipeId: string;
    /**
     * The current state of the resource.
     */
    readonly state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The recipe attached to targets
     */
    readonly targetIds: string[];
    /**
     * The date and time the detector recipe was created. Format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the detector recipe was updated. Format defined by RFC3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Detector Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns a detector recipe (DetectorRecipe object) identified by detectorRecipeId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDetectorRecipe = oci.CloudGuard.getDetectorRecipe({
 *     detectorRecipeId: oci_cloud_guard_detector_recipe.test_detector_recipe.id,
 * });
 * ```
 */
export function getDetectorRecipeOutput(args: GetDetectorRecipeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDetectorRecipeResult> {
    return pulumi.output(args).apply((a: any) => getDetectorRecipe(a, opts))
}

/**
 * A collection of arguments for invoking getDetectorRecipe.
 */
export interface GetDetectorRecipeOutputArgs {
    /**
     * DetectorRecipe OCID
     */
    detectorRecipeId: pulumi.Input<string>;
}
