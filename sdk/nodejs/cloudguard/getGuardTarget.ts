// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Target resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns a target (Target resource) identified by targetId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTarget = oci.CloudGuard.getGuardTarget({
 *     targetId: testTargetOciCloudGuardTarget.id,
 * });
 * ```
 */
export function getGuardTarget(args: GetGuardTargetArgs, opts?: pulumi.InvokeOptions): Promise<GetGuardTargetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CloudGuard/getGuardTarget:getGuardTarget", {
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGuardTarget.
 */
export interface GetGuardTargetArgs {
    /**
     * OCID of the target
     */
    targetId: string;
}

/**
 * A collection of values returned by getGuardTarget.
 */
export interface GetGuardTargetResult {
    /**
     * Compartment OCID
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Responder rule description
     */
    readonly description: string;
    /**
     * Responder rule display name
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * Unique identifier of target responder recipe that can't be changed after creation
     */
    readonly id: string;
    /**
     * List of inherited compartments
     */
    readonly inheritedByCompartments: string[];
    /**
     * A message describing the current lifecycle state in more detail. For example, can be used to provide actionable information for a resource in Failed state. [DEPRECATE]
     */
    readonly lifecyleDetails: string;
    /**
     * Total number of recipes attached to target
     */
    readonly recipeCount: number;
    /**
     * The current lifecycle state of the responder rule
     */
    readonly state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * Details specific to the target type.
     */
    readonly targetDetails: outputs.CloudGuard.GetGuardTargetTargetDetail[];
    /**
     * List of detector recipes attached to target
     */
    readonly targetDetectorRecipes: outputs.CloudGuard.GetGuardTargetTargetDetectorRecipe[];
    readonly targetId: string;
    /**
     * Resource ID which the target uses to monitor
     */
    readonly targetResourceId: string;
    /**
     * Type of target
     */
    readonly targetResourceType: string;
    /**
     * List of responder recipes attached to target
     */
    readonly targetResponderRecipes: outputs.CloudGuard.GetGuardTargetTargetResponderRecipe[];
    /**
     * The date and time the target was created. Format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the target was last updated. Format defined by RFC3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Target resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns a target (Target resource) identified by targetId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTarget = oci.CloudGuard.getGuardTarget({
 *     targetId: testTargetOciCloudGuardTarget.id,
 * });
 * ```
 */
export function getGuardTargetOutput(args: GetGuardTargetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGuardTargetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:CloudGuard/getGuardTarget:getGuardTarget", {
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getGuardTarget.
 */
export interface GetGuardTargetOutputArgs {
    /**
     * OCID of the target
     */
    targetId: pulumi.Input<string>;
}
