// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Responder Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns a responder recipe (ResponderRecipe resource) identified by responderRecipeId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testResponderRecipe = oci.CloudGuard.getResponderRecipe({
 *     responderRecipeId: testResponderRecipeOciCloudGuardResponderRecipe.id,
 * });
 * ```
 */
export function getResponderRecipe(args: GetResponderRecipeArgs, opts?: pulumi.InvokeOptions): Promise<GetResponderRecipeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CloudGuard/getResponderRecipe:getResponderRecipe", {
        "responderRecipeId": args.responderRecipeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getResponderRecipe.
 */
export interface GetResponderRecipeArgs {
    /**
     * OCID of the responder recipe.
     */
    responderRecipeId: string;
}

/**
 * A collection of values returned by getResponderRecipe.
 */
export interface GetResponderRecipeResult {
    /**
     * Compartment OCID
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Responder rule description
     */
    readonly description: string;
    /**
     * Responder rule display name
     */
    readonly displayName: string;
    /**
     * List of currently enabled responder rules for the responder type, for recipe after applying defaults
     */
    readonly effectiveResponderRules: outputs.CloudGuard.GetResponderRecipeEffectiveResponderRule[];
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * Unique identifier for the responder recip
     */
    readonly id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * Owner of responder recipe
     */
    readonly owner: string;
    readonly responderRecipeId: string;
    /**
     * List of responder rules associated with the recipe
     */
    readonly responderRules: outputs.CloudGuard.GetResponderRecipeResponderRule[];
    /**
     * The unique identifier of the source responder recipe
     */
    readonly sourceResponderRecipeId: string;
    /**
     * The current lifecycle state of the example
     */
    readonly state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The date and time the responder recipe was created. Format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the responder recipe was last updated. Format defined by RFC3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Responder Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Returns a responder recipe (ResponderRecipe resource) identified by responderRecipeId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testResponderRecipe = oci.CloudGuard.getResponderRecipe({
 *     responderRecipeId: testResponderRecipeOciCloudGuardResponderRecipe.id,
 * });
 * ```
 */
export function getResponderRecipeOutput(args: GetResponderRecipeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResponderRecipeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:CloudGuard/getResponderRecipe:getResponderRecipe", {
        "responderRecipeId": args.responderRecipeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getResponderRecipe.
 */
export interface GetResponderRecipeOutputArgs {
    /**
     * OCID of the responder recipe.
     */
    responderRecipeId: pulumi.Input<string>;
}
