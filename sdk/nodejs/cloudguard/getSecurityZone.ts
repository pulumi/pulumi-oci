// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Security Zone resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Gets a security zone by its identifier. A security zone is associated with a security zone recipe and enforces all security zone policies in the recipe. Any actions in the zone's compartments that violate a policy are denied.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityZone = oci.CloudGuard.getSecurityZone({
 *     securityZoneId: oci_cloud_guard_security_zone.test_security_zone.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSecurityZone(args: GetSecurityZoneArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityZoneResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CloudGuard/getSecurityZone:getSecurityZone", {
        "securityZoneId": args.securityZoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityZone.
 */
export interface GetSecurityZoneArgs {
    /**
     * The unique identifier of the security zone (`SecurityZone`)
     */
    securityZoneId: string;
}

/**
 * A collection of values returned by getSecurityZone.
 */
export interface GetSecurityZoneResult {
    /**
     * The OCID of the compartment for the security zone
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * The security zone's description
     */
    readonly description: string;
    /**
     * The security zone's name
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * Unique identifier that is immutable on creation
     */
    readonly id: string;
    /**
     * List of inherited compartments
     */
    readonly inheritedByCompartments: string[];
    /**
     * A message describing the current state in more detail. For example, this can be used to provide actionable information for a zone in the `Failed` state.
     */
    readonly lifecycleDetails: string;
    readonly securityZoneId: string;
    /**
     * The OCID of the recipe (`SecurityRecipe`) for the security zone
     */
    readonly securityZoneRecipeId: string;
    /**
     * The OCID of the target associated with the security zone
     */
    readonly securityZoneTargetId: string;
    /**
     * The current state of the security zone
     */
    readonly state: string;
    /**
     * The time the security zone was created. An RFC3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time the security zone was last updated. An RFC3339 formatted datetime string.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Security Zone resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Gets a security zone by its identifier. A security zone is associated with a security zone recipe and enforces all security zone policies in the recipe. Any actions in the zone's compartments that violate a policy are denied.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityZone = oci.CloudGuard.getSecurityZone({
 *     securityZoneId: oci_cloud_guard_security_zone.test_security_zone.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSecurityZoneOutput(args: GetSecurityZoneOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityZoneResult> {
    return pulumi.output(args).apply((a: any) => getSecurityZone(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityZone.
 */
export interface GetSecurityZoneOutputArgs {
    /**
     * The unique identifier of the security zone (`SecurityZone`)
     */
    securityZoneId: pulumi.Input<string>;
}
