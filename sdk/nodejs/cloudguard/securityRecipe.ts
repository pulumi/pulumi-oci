// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Security Recipe resource in Oracle Cloud Infrastructure Cloud Guard service.
 *
 * Creates a security zone recipe. A security zone recipe is a collection of security zone policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityRecipe = new oci.cloudguard.SecurityRecipe("testSecurityRecipe", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.security_recipe_display_name,
 *     securityPolicies: _var.security_recipe_security_policies,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.security_recipe_description,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * SecurityRecipes can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:CloudGuard/securityRecipe:SecurityRecipe test_security_recipe "id"
 * ```
 */
export class SecurityRecipe extends pulumi.CustomResource {
    /**
     * Get an existing SecurityRecipe resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityRecipeState, opts?: pulumi.CustomResourceOptions): SecurityRecipe {
        return new SecurityRecipe(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CloudGuard/securityRecipe:SecurityRecipe';

    /**
     * Returns true if the given object is an instance of SecurityRecipe.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityRecipe {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityRecipe.__pulumiType;
    }

    /**
     * (Updatable) The compartment in which to create the recipe
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The recipe's description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The recipe's name
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     *
     * Avoid entering confidential information.
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail. For example, this can be used to provide actionable information for a recipe in the `Failed` state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * The owner of the recipe
     */
    public /*out*/ readonly owner!: pulumi.Output<string>;
    /**
     * (Updatable) The list of `SecurityPolicy` ids to include in the recipe
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly securityPolicies!: pulumi.Output<string[]>;
    /**
     * The current state of the recipe
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The time the recipe was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the recipe was last updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a SecurityRecipe resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityRecipeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityRecipeArgs | SecurityRecipeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityRecipeState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
            resourceInputs["securityPolicies"] = state ? state.securityPolicies : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as SecurityRecipeArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.securityPolicies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicies'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["securityPolicies"] = args ? args.securityPolicies : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityRecipe.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityRecipe resources.
 */
export interface SecurityRecipeState {
    /**
     * (Updatable) The compartment in which to create the recipe
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The recipe's description
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The recipe's name
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     *
     * Avoid entering confidential information.
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail. For example, this can be used to provide actionable information for a recipe in the `Failed` state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The owner of the recipe
     */
    owner?: pulumi.Input<string>;
    /**
     * (Updatable) The list of `SecurityPolicy` ids to include in the recipe
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    securityPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The current state of the recipe
     */
    state?: pulumi.Input<string>;
    /**
     * The time the recipe was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the recipe was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityRecipe resource.
 */
export interface SecurityRecipeArgs {
    /**
     * (Updatable) The compartment in which to create the recipe
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The recipe's description
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The recipe's name
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     *
     * Avoid entering confidential information.
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The list of `SecurityPolicy` ids to include in the recipe
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    securityPolicies: pulumi.Input<pulumi.Input<string>[]>;
}
