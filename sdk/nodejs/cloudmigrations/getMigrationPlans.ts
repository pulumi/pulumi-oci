// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Migration Plans in Oracle Cloud Infrastructure Cloud Migrations service.
 *
 * Returns a list of migration plans.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMigrationPlans = oci.CloudMigrations.getMigrationPlans({
 *     compartmentId: compartmentId,
 *     displayName: migrationPlanDisplayName,
 *     migrationId: testMigration.id,
 *     migrationPlanId: testMigrationPlan.id,
 *     state: migrationPlanState,
 * });
 * ```
 */
export function getMigrationPlans(args?: GetMigrationPlansArgs, opts?: pulumi.InvokeOptions): Promise<GetMigrationPlansResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CloudMigrations/getMigrationPlans:getMigrationPlans", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "migrationId": args.migrationId,
        "migrationPlanId": args.migrationPlanId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMigrationPlans.
 */
export interface GetMigrationPlansArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire given display name.
     */
    displayName?: string;
    filters?: inputs.CloudMigrations.GetMigrationPlansFilter[];
    /**
     * Unique migration identifier
     */
    migrationId?: string;
    /**
     * Unique migration plan identifier
     */
    migrationPlanId?: string;
    /**
     * The current state of the migration plan.
     */
    state?: string;
}

/**
 * A collection of values returned by getMigrationPlans.
 */
export interface GetMigrationPlansResult {
    /**
     * The OCID of the compartment containing the migration plan.
     */
    readonly compartmentId?: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.CloudMigrations.GetMigrationPlansFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The OCID of the associated migration.
     */
    readonly migrationId?: string;
    /**
     * The list of migration_plan_collection.
     */
    readonly migrationPlanCollections: outputs.CloudMigrations.GetMigrationPlansMigrationPlanCollection[];
    readonly migrationPlanId?: string;
    /**
     * The current state of the migration plan.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Migration Plans in Oracle Cloud Infrastructure Cloud Migrations service.
 *
 * Returns a list of migration plans.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMigrationPlans = oci.CloudMigrations.getMigrationPlans({
 *     compartmentId: compartmentId,
 *     displayName: migrationPlanDisplayName,
 *     migrationId: testMigration.id,
 *     migrationPlanId: testMigrationPlan.id,
 *     state: migrationPlanState,
 * });
 * ```
 */
export function getMigrationPlansOutput(args?: GetMigrationPlansOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMigrationPlansResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:CloudMigrations/getMigrationPlans:getMigrationPlans", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "migrationId": args.migrationId,
        "migrationPlanId": args.migrationPlanId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMigrationPlans.
 */
export interface GetMigrationPlansOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire given display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.GetMigrationPlansFilterArgs>[]>;
    /**
     * Unique migration identifier
     */
    migrationId?: pulumi.Input<string>;
    /**
     * Unique migration plan identifier
     */
    migrationPlanId?: pulumi.Input<string>;
    /**
     * The current state of the migration plan.
     */
    state?: pulumi.Input<string>;
}
