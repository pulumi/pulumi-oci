// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Migrations in Oracle Cloud Infrastructure Cloud Migrations service.
 *
 * Returns a list of migrations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMigrations = oci.CloudMigrations.getMigrations({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.migration_display_name,
 *     migrationId: oci_cloud_migrations_migration.test_migration.id,
 *     state: _var.migration_state,
 * });
 * ```
 */
export function getMigrations(args?: GetMigrationsArgs, opts?: pulumi.InvokeOptions): Promise<GetMigrationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:CloudMigrations/getMigrations:getMigrations", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "migrationId": args.migrationId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMigrations.
 */
export interface GetMigrationsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire given display name.
     */
    displayName?: string;
    filters?: inputs.CloudMigrations.GetMigrationsFilter[];
    /**
     * Unique migration identifier
     */
    migrationId?: string;
    /**
     * A filter to return only resources where the resource's lifecycle state matches the given lifecycle state.
     */
    state?: string;
}

/**
 * A collection of values returned by getMigrations.
 */
export interface GetMigrationsResult {
    /**
     * Compartment Identifier
     */
    readonly compartmentId?: string;
    /**
     * Migration Identifier that can be renamed
     */
    readonly displayName?: string;
    readonly filters?: outputs.CloudMigrations.GetMigrationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of migration_collection.
     */
    readonly migrationCollections: outputs.CloudMigrations.GetMigrationsMigrationCollection[];
    readonly migrationId?: string;
    /**
     * The current state of migration.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Migrations in Oracle Cloud Infrastructure Cloud Migrations service.
 *
 * Returns a list of migrations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMigrations = oci.CloudMigrations.getMigrations({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.migration_display_name,
 *     migrationId: oci_cloud_migrations_migration.test_migration.id,
 *     state: _var.migration_state,
 * });
 * ```
 */
export function getMigrationsOutput(args?: GetMigrationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMigrationsResult> {
    return pulumi.output(args).apply((a: any) => getMigrations(a, opts))
}

/**
 * A collection of arguments for invoking getMigrations.
 */
export interface GetMigrationsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire given display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.GetMigrationsFilterArgs>[]>;
    /**
     * Unique migration identifier
     */
    migrationId?: pulumi.Input<string>;
    /**
     * A filter to return only resources where the resource's lifecycle state matches the given lifecycle state.
     */
    state?: pulumi.Input<string>;
}
