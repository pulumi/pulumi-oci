// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Migration Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
 *
 * Creates a migration asset.
 *
 * ## Import
 *
 * MigrationAssets can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CloudMigrations/migrationAsset:MigrationAsset test_migration_asset "id"
 * ```
 */
export class MigrationAsset extends pulumi.CustomResource {
    /**
     * Get an existing MigrationAsset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MigrationAssetState, opts?: pulumi.CustomResourceOptions): MigrationAsset {
        return new MigrationAsset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CloudMigrations/migrationAsset:MigrationAsset';

    /**
     * Returns true if the given object is an instance of MigrationAsset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MigrationAsset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MigrationAsset.__pulumiType;
    }

    /**
     * Availability domain
     */
    declare public readonly availabilityDomain: pulumi.Output<string>;
    /**
     * Compartment Identifier
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * List of migration assets that depend on the asset.
     */
    declare public /*out*/ readonly dependedOnBies: pulumi.Output<string[]>;
    /**
     * (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * OCID of an asset for an inventory.
     */
    declare public readonly inventoryAssetId: pulumi.Output<string>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    declare public readonly migrationAssetDependsOns: pulumi.Output<string[]>;
    /**
     * OCID of the associated migration.
     */
    declare public readonly migrationId: pulumi.Output<string>;
    /**
     * List of notifications
     */
    declare public /*out*/ readonly notifications: pulumi.Output<string[]>;
    /**
     * The parent snapshot of the migration asset to be used by the replication task.
     */
    declare public /*out*/ readonly parentSnapshot: pulumi.Output<string>;
    /**
     * Replication compartment identifier
     */
    declare public readonly replicationCompartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Replication schedule identifier
     */
    declare public readonly replicationScheduleId: pulumi.Output<string>;
    /**
     * Name of snapshot bucket
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly snapShotBucketName: pulumi.Output<string>;
    /**
     * Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
     */
    declare public /*out*/ readonly snapshots: pulumi.Output<{[key: string]: string}>;
    /**
     * OCID that is referenced to an asset for an inventory.
     */
    declare public /*out*/ readonly sourceAssetId: pulumi.Output<string>;
    /**
     * The current state of the migration asset.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Tenancy identifier
     */
    declare public /*out*/ readonly tenancyId: pulumi.Output<string>;
    /**
     * The time when the migration asset was created. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time when the migration asset was updated. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * The type of asset referenced for inventory.
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a MigrationAsset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MigrationAssetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MigrationAssetArgs | MigrationAssetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MigrationAssetState | undefined;
            resourceInputs["availabilityDomain"] = state?.availabilityDomain;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["dependedOnBies"] = state?.dependedOnBies;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["inventoryAssetId"] = state?.inventoryAssetId;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["migrationAssetDependsOns"] = state?.migrationAssetDependsOns;
            resourceInputs["migrationId"] = state?.migrationId;
            resourceInputs["notifications"] = state?.notifications;
            resourceInputs["parentSnapshot"] = state?.parentSnapshot;
            resourceInputs["replicationCompartmentId"] = state?.replicationCompartmentId;
            resourceInputs["replicationScheduleId"] = state?.replicationScheduleId;
            resourceInputs["snapShotBucketName"] = state?.snapShotBucketName;
            resourceInputs["snapshots"] = state?.snapshots;
            resourceInputs["sourceAssetId"] = state?.sourceAssetId;
            resourceInputs["state"] = state?.state;
            resourceInputs["tenancyId"] = state?.tenancyId;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as MigrationAssetArgs | undefined;
            if (args?.availabilityDomain === undefined && !opts.urn) {
                throw new Error("Missing required property 'availabilityDomain'");
            }
            if (args?.inventoryAssetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'inventoryAssetId'");
            }
            if (args?.migrationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'migrationId'");
            }
            if (args?.replicationCompartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'replicationCompartmentId'");
            }
            if (args?.snapShotBucketName === undefined && !opts.urn) {
                throw new Error("Missing required property 'snapShotBucketName'");
            }
            resourceInputs["availabilityDomain"] = args?.availabilityDomain;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["inventoryAssetId"] = args?.inventoryAssetId;
            resourceInputs["migrationAssetDependsOns"] = args?.migrationAssetDependsOns;
            resourceInputs["migrationId"] = args?.migrationId;
            resourceInputs["replicationCompartmentId"] = args?.replicationCompartmentId;
            resourceInputs["replicationScheduleId"] = args?.replicationScheduleId;
            resourceInputs["snapShotBucketName"] = args?.snapShotBucketName;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["dependedOnBies"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["parentSnapshot"] = undefined /*out*/;
            resourceInputs["snapshots"] = undefined /*out*/;
            resourceInputs["sourceAssetId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tenancyId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MigrationAsset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MigrationAsset resources.
 */
export interface MigrationAssetState {
    /**
     * Availability domain
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Compartment Identifier
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * List of migration assets that depend on the asset.
     */
    dependedOnBies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * OCID of an asset for an inventory.
     */
    inventoryAssetId?: pulumi.Input<string>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    migrationAssetDependsOns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OCID of the associated migration.
     */
    migrationId?: pulumi.Input<string>;
    /**
     * List of notifications
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The parent snapshot of the migration asset to be used by the replication task.
     */
    parentSnapshot?: pulumi.Input<string>;
    /**
     * Replication compartment identifier
     */
    replicationCompartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Replication schedule identifier
     */
    replicationScheduleId?: pulumi.Input<string>;
    /**
     * Name of snapshot bucket
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    snapShotBucketName?: pulumi.Input<string>;
    /**
     * Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
     */
    snapshots?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * OCID that is referenced to an asset for an inventory.
     */
    sourceAssetId?: pulumi.Input<string>;
    /**
     * The current state of the migration asset.
     */
    state?: pulumi.Input<string>;
    /**
     * Tenancy identifier
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * The time when the migration asset was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when the migration asset was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The type of asset referenced for inventory.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MigrationAsset resource.
 */
export interface MigrationAssetArgs {
    /**
     * Availability domain
     */
    availabilityDomain: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * OCID of an asset for an inventory.
     */
    inventoryAssetId: pulumi.Input<string>;
    migrationAssetDependsOns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OCID of the associated migration.
     */
    migrationId: pulumi.Input<string>;
    /**
     * Replication compartment identifier
     */
    replicationCompartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Replication schedule identifier
     */
    replicationScheduleId?: pulumi.Input<string>;
    /**
     * Name of snapshot bucket
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    snapShotBucketName: pulumi.Input<string>;
}
