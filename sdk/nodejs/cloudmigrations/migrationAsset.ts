// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Migration Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
 *
 * Creates a migration asset.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMigrationAsset = new oci.cloudmigrations.MigrationAsset("testMigrationAsset", {
 *     availabilityDomain: _var.migration_asset_availability_domain,
 *     inventoryAssetId: oci_cloud_migrations_inventory_asset.test_inventory_asset.id,
 *     migrationId: oci_cloud_migrations_migration.test_migration.id,
 *     replicationCompartmentId: oci_identity_compartment.test_compartment.id,
 *     snapShotBucketName: oci_objectstorage_bucket.test_bucket.name,
 *     displayName: _var.migration_asset_display_name,
 *     replicationScheduleId: oci_cloud_migrations_replication_schedule.test_replication_schedule.id,
 * }, {
 *     dependsOn: _var.migration_asset_depends_on,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * MigrationAssets can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CloudMigrations/migrationAsset:MigrationAsset test_migration_asset "id"
 * ```
 */
export class MigrationAsset extends pulumi.CustomResource {
    /**
     * Get an existing MigrationAsset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MigrationAssetState, opts?: pulumi.CustomResourceOptions): MigrationAsset {
        return new MigrationAsset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CloudMigrations/migrationAsset:MigrationAsset';

    /**
     * Returns true if the given object is an instance of MigrationAsset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MigrationAsset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MigrationAsset.__pulumiType;
    }

    /**
     * Availability domain
     */
    public readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * Compartment Identifier
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * List of migration assets that depend on the asset.
     */
    public /*out*/ readonly dependedOnBies!: pulumi.Output<string[]>;
    /**
     * (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * OCID of an asset for an inventory.
     */
    public readonly inventoryAssetId!: pulumi.Output<string>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly migrationAssetDependsOns!: pulumi.Output<string[]>;
    /**
     * OCID of the associated migration.
     */
    public readonly migrationId!: pulumi.Output<string>;
    /**
     * List of notifications
     */
    public /*out*/ readonly notifications!: pulumi.Output<string[]>;
    /**
     * The parent snapshot of the migration asset to be used by the replication task.
     */
    public /*out*/ readonly parentSnapshot!: pulumi.Output<string>;
    /**
     * Replication compartment identifier
     */
    public readonly replicationCompartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Replication schedule identifier
     */
    public readonly replicationScheduleId!: pulumi.Output<string>;
    /**
     * Name of snapshot bucket
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly snapShotBucketName!: pulumi.Output<string>;
    /**
     * Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
     */
    public /*out*/ readonly snapshots!: pulumi.Output<{[key: string]: any}>;
    /**
     * OCID that is referenced to an asset for an inventory.
     */
    public /*out*/ readonly sourceAssetId!: pulumi.Output<string>;
    /**
     * The current state of the migration asset.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Tenancy identifier
     */
    public /*out*/ readonly tenancyId!: pulumi.Output<string>;
    /**
     * The time when the migration asset was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time when the migration asset was updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * The type of asset referenced for inventory.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a MigrationAsset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MigrationAssetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MigrationAssetArgs | MigrationAssetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MigrationAssetState | undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["dependedOnBies"] = state ? state.dependedOnBies : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["inventoryAssetId"] = state ? state.inventoryAssetId : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["migrationAssetDependsOns"] = state ? state.migrationAssetDependsOns : undefined;
            resourceInputs["migrationId"] = state ? state.migrationId : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["parentSnapshot"] = state ? state.parentSnapshot : undefined;
            resourceInputs["replicationCompartmentId"] = state ? state.replicationCompartmentId : undefined;
            resourceInputs["replicationScheduleId"] = state ? state.replicationScheduleId : undefined;
            resourceInputs["snapShotBucketName"] = state ? state.snapShotBucketName : undefined;
            resourceInputs["snapshots"] = state ? state.snapshots : undefined;
            resourceInputs["sourceAssetId"] = state ? state.sourceAssetId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tenancyId"] = state ? state.tenancyId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as MigrationAssetArgs | undefined;
            if ((!args || args.availabilityDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityDomain'");
            }
            if ((!args || args.inventoryAssetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'inventoryAssetId'");
            }
            if ((!args || args.migrationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'migrationId'");
            }
            if ((!args || args.replicationCompartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replicationCompartmentId'");
            }
            if ((!args || args.snapShotBucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapShotBucketName'");
            }
            resourceInputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["inventoryAssetId"] = args ? args.inventoryAssetId : undefined;
            resourceInputs["migrationAssetDependsOns"] = args ? args.migrationAssetDependsOns : undefined;
            resourceInputs["migrationId"] = args ? args.migrationId : undefined;
            resourceInputs["replicationCompartmentId"] = args ? args.replicationCompartmentId : undefined;
            resourceInputs["replicationScheduleId"] = args ? args.replicationScheduleId : undefined;
            resourceInputs["snapShotBucketName"] = args ? args.snapShotBucketName : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["dependedOnBies"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["parentSnapshot"] = undefined /*out*/;
            resourceInputs["snapshots"] = undefined /*out*/;
            resourceInputs["sourceAssetId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tenancyId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MigrationAsset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MigrationAsset resources.
 */
export interface MigrationAssetState {
    /**
     * Availability domain
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Compartment Identifier
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * List of migration assets that depend on the asset.
     */
    dependedOnBies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * OCID of an asset for an inventory.
     */
    inventoryAssetId?: pulumi.Input<string>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    migrationAssetDependsOns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OCID of the associated migration.
     */
    migrationId?: pulumi.Input<string>;
    /**
     * List of notifications
     */
    notifications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The parent snapshot of the migration asset to be used by the replication task.
     */
    parentSnapshot?: pulumi.Input<string>;
    /**
     * Replication compartment identifier
     */
    replicationCompartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Replication schedule identifier
     */
    replicationScheduleId?: pulumi.Input<string>;
    /**
     * Name of snapshot bucket
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    snapShotBucketName?: pulumi.Input<string>;
    /**
     * Key-value pair representing disks ID mapped to the OCIDs of replicated or hydration server volume snapshots. Example: `{"bar-key": "value"}`
     */
    snapshots?: pulumi.Input<{[key: string]: any}>;
    /**
     * OCID that is referenced to an asset for an inventory.
     */
    sourceAssetId?: pulumi.Input<string>;
    /**
     * The current state of the migration asset.
     */
    state?: pulumi.Input<string>;
    /**
     * Tenancy identifier
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * The time when the migration asset was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when the migration asset was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The type of asset referenced for inventory.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MigrationAsset resource.
 */
export interface MigrationAssetArgs {
    /**
     * Availability domain
     */
    availabilityDomain: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. If empty, then source asset name will be used. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * OCID of an asset for an inventory.
     */
    inventoryAssetId: pulumi.Input<string>;
    migrationAssetDependsOns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OCID of the associated migration.
     */
    migrationId: pulumi.Input<string>;
    /**
     * Replication compartment identifier
     */
    replicationCompartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Replication schedule identifier
     */
    replicationScheduleId?: pulumi.Input<string>;
    /**
     * Name of snapshot bucket
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    snapShotBucketName: pulumi.Input<string>;
}
