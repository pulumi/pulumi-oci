// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Migration Plan resource in Oracle Cloud Infrastructure Cloud Migrations service.
 *
 * Creates a migration plan.
 *
 * ## Import
 *
 * MigrationPlans can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:CloudMigrations/migrationPlan:MigrationPlan test_migration_plan "id"
 * ```
 */
export class MigrationPlan extends pulumi.CustomResource {
    /**
     * Get an existing MigrationPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MigrationPlanState, opts?: pulumi.CustomResourceOptions): MigrationPlan {
        return new MigrationPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CloudMigrations/migrationPlan:MigrationPlan';

    /**
     * Returns true if the given object is an instance of MigrationPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MigrationPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MigrationPlan.__pulumiType;
    }

    /**
     * Limits of the resources that are needed for migration. Example: {"BlockVolume": 2, "VCN": 1}
     */
    declare public /*out*/ readonly calculatedLimits: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Compartment identifier
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Migration plan identifier
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The OCID of the associated migration.
     */
    declare public readonly migrationId: pulumi.Output<string>;
    /**
     * Status of the migration plan.
     */
    declare public /*out*/ readonly migrationPlanStats: pulumi.Output<outputs.CloudMigrations.MigrationPlanMigrationPlanStat[]>;
    /**
     * OCID of the referenced ORM job.
     */
    declare public /*out*/ readonly referenceToRmsStack: pulumi.Output<string>;
    /**
     * Source migraiton plan ID to be cloned.
     */
    declare public readonly sourceMigrationPlanId: pulumi.Output<string>;
    /**
     * The current state of the migration plan.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * (Updatable) List of strategies for the resources to be migrated.
     */
    declare public readonly strategies: pulumi.Output<outputs.CloudMigrations.MigrationPlanStrategy[]>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) List of target environments.
     */
    declare public readonly targetEnvironments: pulumi.Output<outputs.CloudMigrations.MigrationPlanTargetEnvironment[]>;
    /**
     * The time when the migration plan was created. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time when the migration plan was updated. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a MigrationPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MigrationPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MigrationPlanArgs | MigrationPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MigrationPlanState | undefined;
            resourceInputs["calculatedLimits"] = state?.calculatedLimits;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["migrationId"] = state?.migrationId;
            resourceInputs["migrationPlanStats"] = state?.migrationPlanStats;
            resourceInputs["referenceToRmsStack"] = state?.referenceToRmsStack;
            resourceInputs["sourceMigrationPlanId"] = state?.sourceMigrationPlanId;
            resourceInputs["state"] = state?.state;
            resourceInputs["strategies"] = state?.strategies;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["targetEnvironments"] = state?.targetEnvironments;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as MigrationPlanArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.migrationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'migrationId'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["migrationId"] = args?.migrationId;
            resourceInputs["sourceMigrationPlanId"] = args?.sourceMigrationPlanId;
            resourceInputs["strategies"] = args?.strategies;
            resourceInputs["targetEnvironments"] = args?.targetEnvironments;
            resourceInputs["calculatedLimits"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["migrationPlanStats"] = undefined /*out*/;
            resourceInputs["referenceToRmsStack"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MigrationPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MigrationPlan resources.
 */
export interface MigrationPlanState {
    /**
     * Limits of the resources that are needed for migration. Example: {"BlockVolume": 2, "VCN": 1}
     */
    calculatedLimits?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Compartment identifier
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Migration plan identifier
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The OCID of the associated migration.
     */
    migrationId?: pulumi.Input<string>;
    /**
     * Status of the migration plan.
     */
    migrationPlanStats?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.MigrationPlanMigrationPlanStat>[]>;
    /**
     * OCID of the referenced ORM job.
     */
    referenceToRmsStack?: pulumi.Input<string>;
    /**
     * Source migraiton plan ID to be cloned.
     */
    sourceMigrationPlanId?: pulumi.Input<string>;
    /**
     * The current state of the migration plan.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) List of strategies for the resources to be migrated.
     */
    strategies?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.MigrationPlanStrategy>[]>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) List of target environments.
     */
    targetEnvironments?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.MigrationPlanTargetEnvironment>[]>;
    /**
     * The time when the migration plan was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when the migration plan was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MigrationPlan resource.
 */
export interface MigrationPlanArgs {
    /**
     * (Updatable) Compartment identifier
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Migration plan identifier
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. It exists only for cross-compatibility. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The OCID of the associated migration.
     */
    migrationId: pulumi.Input<string>;
    /**
     * Source migraiton plan ID to be cloned.
     */
    sourceMigrationPlanId?: pulumi.Input<string>;
    /**
     * (Updatable) List of strategies for the resources to be migrated.
     */
    strategies?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.MigrationPlanStrategy>[]>;
    /**
     * (Updatable) List of target environments.
     */
    targetEnvironments?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.MigrationPlanTargetEnvironment>[]>;
}
