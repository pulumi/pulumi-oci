// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Target Asset resource in Oracle Cloud Infrastructure Cloud Migrations service.
 *
 * Creates a target asset.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTargetAsset = new oci.cloudmigrations.TargetAsset("testTargetAsset", {
 *     isExcludedFromExecution: _var.target_asset_is_excluded_from_execution,
 *     migrationPlanId: oci_cloud_migrations_migration_plan.test_migration_plan.id,
 *     preferredShapeType: _var.target_asset_preferred_shape_type,
 *     type: _var.target_asset_type,
 *     userSpec: {
 *         agentConfig: {
 *             areAllPluginsDisabled: _var.target_asset_user_spec_agent_config_are_all_plugins_disabled,
 *             isManagementDisabled: _var.target_asset_user_spec_agent_config_is_management_disabled,
 *             isMonitoringDisabled: _var.target_asset_user_spec_agent_config_is_monitoring_disabled,
 *             pluginsConfigs: [{
 *                 desiredState: _var.target_asset_user_spec_agent_config_plugins_config_desired_state,
 *                 name: _var.target_asset_user_spec_agent_config_plugins_config_name,
 *             }],
 *         },
 *         availabilityDomain: _var.target_asset_user_spec_availability_domain,
 *         capacityReservationId: oci_cloud_migrations_capacity_reservation.test_capacity_reservation.id,
 *         compartmentId: _var.compartment_id,
 *         createVnicDetails: {
 *             assignPrivateDnsRecord: _var.target_asset_user_spec_create_vnic_details_assign_private_dns_record,
 *             assignPublicIp: _var.target_asset_user_spec_create_vnic_details_assign_public_ip,
 *             definedTags: {
 *                 "foo-namespace.bar-key": "value",
 *             },
 *             displayName: _var.target_asset_user_spec_create_vnic_details_display_name,
 *             freeformTags: {
 *                 "bar-key": "value",
 *             },
 *             hostnameLabel: _var.target_asset_user_spec_create_vnic_details_hostname_label,
 *             nsgIds: _var.target_asset_user_spec_create_vnic_details_nsg_ids,
 *             privateIp: _var.target_asset_user_spec_create_vnic_details_private_ip,
 *             skipSourceDestCheck: _var.target_asset_user_spec_create_vnic_details_skip_source_dest_check,
 *             subnetId: oci_core_subnet.test_subnet.id,
 *             vlanId: oci_core_vlan.test_vlan.id,
 *         },
 *         dedicatedVmHostId: oci_core_dedicated_vm_host.test_dedicated_vm_host.id,
 *         definedTags: {
 *             "foo-namespace.bar-key": "value",
 *         },
 *         displayName: _var.target_asset_user_spec_display_name,
 *         faultDomain: _var.target_asset_user_spec_fault_domain,
 *         freeformTags: {
 *             "bar-key": "value",
 *         },
 *         hostnameLabel: _var.target_asset_user_spec_hostname_label,
 *         instanceOptions: {
 *             areLegacyImdsEndpointsDisabled: _var.target_asset_user_spec_instance_options_are_legacy_imds_endpoints_disabled,
 *         },
 *         ipxeScript: _var.target_asset_user_spec_ipxe_script,
 *         isPvEncryptionInTransitEnabled: _var.target_asset_user_spec_is_pv_encryption_in_transit_enabled,
 *         preemptibleInstanceConfig: {
 *             preemptionAction: {
 *                 type: _var.target_asset_user_spec_preemptible_instance_config_preemption_action_type,
 *                 preserveBootVolume: _var.target_asset_user_spec_preemptible_instance_config_preemption_action_preserve_boot_volume,
 *             },
 *         },
 *         shape: _var.target_asset_user_spec_shape,
 *         shapeConfig: {
 *             baselineOcpuUtilization: _var.target_asset_user_spec_shape_config_baseline_ocpu_utilization,
 *             memoryInGbs: _var.target_asset_user_spec_shape_config_memory_in_gbs,
 *             ocpus: _var.target_asset_user_spec_shape_config_ocpus,
 *         },
 *         sourceDetails: {
 *             sourceType: _var.target_asset_user_spec_source_details_source_type,
 *             bootVolumeId: oci_core_boot_volume.test_boot_volume.id,
 *             bootVolumeSizeInGbs: _var.target_asset_user_spec_source_details_boot_volume_size_in_gbs,
 *             bootVolumeVpusPerGb: _var.target_asset_user_spec_source_details_boot_volume_vpus_per_gb,
 *             imageId: oci_core_image.test_image.id,
 *             kmsKeyId: oci_kms_key.test_key.id,
 *         },
 *     },
 *     blockVolumesPerformance: _var.target_asset_block_volumes_performance,
 *     msLicense: _var.target_asset_ms_license,
 * });
 * ```
 *
 * ## Import
 *
 * TargetAssets can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:CloudMigrations/targetAsset:TargetAsset test_target_asset "id"
 * ```
 */
export class TargetAsset extends pulumi.CustomResource {
    /**
     * Get an existing TargetAsset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TargetAssetState, opts?: pulumi.CustomResourceOptions): TargetAsset {
        return new TargetAsset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:CloudMigrations/targetAsset:TargetAsset';

    /**
     * Returns true if the given object is an instance of TargetAsset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TargetAsset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TargetAsset.__pulumiType;
    }

    /**
     * (Updatable) Performance of the block volumes.
     */
    public readonly blockVolumesPerformance!: pulumi.Output<number | undefined>;
    /**
     * (Updatable) The OCID of the compartment.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string | undefined>;
    /**
     * Messages about the compatibility issues.
     */
    public /*out*/ readonly compatibilityMessages!: pulumi.Output<outputs.CloudMigrations.TargetAssetCompatibilityMessage[] | undefined>;
    /**
     * Created resource identifier
     */
    public /*out*/ readonly createdResourceId!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Cost estimation description
     */
    public /*out*/ readonly estimatedCosts!: pulumi.Output<outputs.CloudMigrations.TargetAssetEstimatedCost[] | undefined>;
    /**
     * (Updatable) A boolean indicating whether the asset should be migrated.
     */
    public readonly isExcludedFromExecution!: pulumi.Output<boolean>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string | undefined>;
    /**
     * Description of the migration asset.
     */
    public /*out*/ readonly migrationAssets!: pulumi.Output<outputs.CloudMigrations.TargetAssetMigrationAsset[] | undefined>;
    /**
     * OCID of the associated migration plan.
     */
    public readonly migrationPlanId!: pulumi.Output<string>;
    /**
     * (Updatable) Microsoft license for the VM configuration.
     */
    public readonly msLicense!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Preferred VM shape type that you provide.
     */
    public readonly preferredShapeType!: pulumi.Output<string>;
    /**
     * Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    public /*out*/ readonly recommendedSpecs!: pulumi.Output<outputs.CloudMigrations.TargetAssetRecommendedSpec[] | undefined>;
    /**
     * The current state of the target asset.
     */
    public /*out*/ readonly state!: pulumi.Output<string | undefined>;
    /**
     * Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    public /*out*/ readonly testSpecs!: pulumi.Output<outputs.CloudMigrations.TargetAssetTestSpec[] | undefined>;
    /**
     * The time when the assessment was done. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeAssessed!: pulumi.Output<string | undefined>;
    /**
     * The time when the target asset was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string | undefined>;
    /**
     * The time when the target asset was updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) The type of action to run when the instance is interrupted for eviction.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    public readonly userSpec!: pulumi.Output<outputs.CloudMigrations.TargetAssetUserSpec>;

    /**
     * Create a TargetAsset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TargetAssetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TargetAssetArgs | TargetAssetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TargetAssetState | undefined;
            resourceInputs["blockVolumesPerformance"] = state ? state.blockVolumesPerformance : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["compatibilityMessages"] = state ? state.compatibilityMessages : undefined;
            resourceInputs["createdResourceId"] = state ? state.createdResourceId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["estimatedCosts"] = state ? state.estimatedCosts : undefined;
            resourceInputs["isExcludedFromExecution"] = state ? state.isExcludedFromExecution : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["migrationAssets"] = state ? state.migrationAssets : undefined;
            resourceInputs["migrationPlanId"] = state ? state.migrationPlanId : undefined;
            resourceInputs["msLicense"] = state ? state.msLicense : undefined;
            resourceInputs["preferredShapeType"] = state ? state.preferredShapeType : undefined;
            resourceInputs["recommendedSpecs"] = state ? state.recommendedSpecs : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["testSpecs"] = state ? state.testSpecs : undefined;
            resourceInputs["timeAssessed"] = state ? state.timeAssessed : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userSpec"] = state ? state.userSpec : undefined;
        } else {
            const args = argsOrState as TargetAssetArgs | undefined;
            if ((!args || args.isExcludedFromExecution === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isExcludedFromExecution'");
            }
            if ((!args || args.migrationPlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'migrationPlanId'");
            }
            if ((!args || args.preferredShapeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'preferredShapeType'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.userSpec === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userSpec'");
            }
            resourceInputs["blockVolumesPerformance"] = args ? args.blockVolumesPerformance : undefined;
            resourceInputs["isExcludedFromExecution"] = args ? args.isExcludedFromExecution : undefined;
            resourceInputs["migrationPlanId"] = args ? args.migrationPlanId : undefined;
            resourceInputs["msLicense"] = args ? args.msLicense : undefined;
            resourceInputs["preferredShapeType"] = args ? args.preferredShapeType : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userSpec"] = args ? args.userSpec : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["compatibilityMessages"] = undefined /*out*/;
            resourceInputs["createdResourceId"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["estimatedCosts"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["migrationAssets"] = undefined /*out*/;
            resourceInputs["recommendedSpecs"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["testSpecs"] = undefined /*out*/;
            resourceInputs["timeAssessed"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TargetAsset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TargetAsset resources.
 */
export interface TargetAssetState {
    /**
     * (Updatable) Performance of the block volumes.
     */
    blockVolumesPerformance?: pulumi.Input<number>;
    /**
     * (Updatable) The OCID of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Messages about the compatibility issues.
     */
    compatibilityMessages?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.TargetAssetCompatibilityMessage>[]>;
    /**
     * Created resource identifier
     */
    createdResourceId?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Cost estimation description
     */
    estimatedCosts?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.TargetAssetEstimatedCost>[]>;
    /**
     * (Updatable) A boolean indicating whether the asset should be migrated.
     */
    isExcludedFromExecution?: pulumi.Input<boolean>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Description of the migration asset.
     */
    migrationAssets?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.TargetAssetMigrationAsset>[]>;
    /**
     * OCID of the associated migration plan.
     */
    migrationPlanId?: pulumi.Input<string>;
    /**
     * (Updatable) Microsoft license for the VM configuration.
     */
    msLicense?: pulumi.Input<string>;
    /**
     * (Updatable) Preferred VM shape type that you provide.
     */
    preferredShapeType?: pulumi.Input<string>;
    /**
     * Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    recommendedSpecs?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.TargetAssetRecommendedSpec>[]>;
    /**
     * The current state of the target asset.
     */
    state?: pulumi.Input<string>;
    /**
     * Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    testSpecs?: pulumi.Input<pulumi.Input<inputs.CloudMigrations.TargetAssetTestSpec>[]>;
    /**
     * The time when the assessment was done. An RFC3339 formatted datetime string.
     */
    timeAssessed?: pulumi.Input<string>;
    /**
     * The time when the target asset was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when the target asset was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The type of action to run when the instance is interrupted for eviction.
     */
    type?: pulumi.Input<string>;
    /**
     * (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    userSpec?: pulumi.Input<inputs.CloudMigrations.TargetAssetUserSpec>;
}

/**
 * The set of arguments for constructing a TargetAsset resource.
 */
export interface TargetAssetArgs {
    /**
     * (Updatable) Performance of the block volumes.
     */
    blockVolumesPerformance?: pulumi.Input<number>;
    /**
     * (Updatable) A boolean indicating whether the asset should be migrated.
     */
    isExcludedFromExecution: pulumi.Input<boolean>;
    /**
     * OCID of the associated migration plan.
     */
    migrationPlanId: pulumi.Input<string>;
    /**
     * (Updatable) Microsoft license for the VM configuration.
     */
    msLicense?: pulumi.Input<string>;
    /**
     * (Updatable) Preferred VM shape type that you provide.
     */
    preferredShapeType: pulumi.Input<string>;
    /**
     * (Updatable) The type of action to run when the instance is interrupted for eviction.
     */
    type: pulumi.Input<string>;
    /**
     * (Updatable) Instance launch details. Use the `sourceDetails` parameter to specify whether a boot volume or an image should be used to launch a new instance.
     */
    userSpec: pulumi.Input<inputs.CloudMigrations.TargetAssetUserSpec>;
}
