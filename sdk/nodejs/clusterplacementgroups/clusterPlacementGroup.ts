// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Cluster Placement Group resource in Oracle Cloud Infrastructure Cluster Placement Groups service.
 *
 * Creates a new cluster placement group in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testClusterPlacementGroup = new oci.clusterplacementgroups.ClusterPlacementGroup("test_cluster_placement_group", {
 *     availabilityDomain: clusterPlacementGroupAvailabilityDomain,
 *     clusterPlacementGroupType: clusterPlacementGroupClusterPlacementGroupType,
 *     compartmentId: compartmentId,
 *     description: clusterPlacementGroupDescription,
 *     name: clusterPlacementGroupName,
 *     capabilities: {
 *         items: [{
 *             name: clusterPlacementGroupCapabilitiesItemsName,
 *             service: clusterPlacementGroupCapabilitiesItemsService,
 *         }],
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     opcDryRun: clusterPlacementGroupOpcDryRun,
 *     placementInstruction: {
 *         type: clusterPlacementGroupPlacementInstructionType,
 *         value: clusterPlacementGroupPlacementInstructionValue,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ClusterPlacementGroups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:ClusterPlacementGroups/clusterPlacementGroup:ClusterPlacementGroup test_cluster_placement_group "id"
 * ```
 */
export class ClusterPlacementGroup extends pulumi.CustomResource {
    /**
     * Get an existing ClusterPlacementGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterPlacementGroupState, opts?: pulumi.CustomResourceOptions): ClusterPlacementGroup {
        return new ClusterPlacementGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:ClusterPlacementGroups/clusterPlacementGroup:ClusterPlacementGroup';

    /**
     * Returns true if the given object is an instance of ClusterPlacementGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterPlacementGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterPlacementGroup.__pulumiType;
    }

    /**
     * The availability domain where you want to create the cluster placement group.
     */
    declare public readonly availabilityDomain: pulumi.Output<string>;
    /**
     * A list of resources that you can create in a cluster placement group.
     */
    declare public readonly capabilities: pulumi.Output<outputs.ClusterPlacementGroups.ClusterPlacementGroupCapabilities>;
    /**
     * ClusterPlacementGroup Identifier.
     */
    declare public readonly clusterPlacementGroupType: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A description of the cluster placement group.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, lifecycle details for a resource in a Failed state might include information to act on.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The friendly name of the cluster placement group.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
     */
    declare public readonly opcDryRun: pulumi.Output<boolean>;
    /**
     * Details that inform cluster placement group provisioning.
     */
    declare public readonly placementInstruction: pulumi.Output<outputs.ClusterPlacementGroups.ClusterPlacementGroupPlacementInstruction>;
    /**
     * (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time the cluster placement group was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the cluster placement group was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a ClusterPlacementGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterPlacementGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterPlacementGroupArgs | ClusterPlacementGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterPlacementGroupState | undefined;
            resourceInputs["availabilityDomain"] = state?.availabilityDomain;
            resourceInputs["capabilities"] = state?.capabilities;
            resourceInputs["clusterPlacementGroupType"] = state?.clusterPlacementGroupType;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["name"] = state?.name;
            resourceInputs["opcDryRun"] = state?.opcDryRun;
            resourceInputs["placementInstruction"] = state?.placementInstruction;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as ClusterPlacementGroupArgs | undefined;
            if (args?.availabilityDomain === undefined && !opts.urn) {
                throw new Error("Missing required property 'availabilityDomain'");
            }
            if (args?.clusterPlacementGroupType === undefined && !opts.urn) {
                throw new Error("Missing required property 'clusterPlacementGroupType'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["availabilityDomain"] = args?.availabilityDomain;
            resourceInputs["capabilities"] = args?.capabilities;
            resourceInputs["clusterPlacementGroupType"] = args?.clusterPlacementGroupType;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["name"] = args?.name;
            resourceInputs["opcDryRun"] = args?.opcDryRun;
            resourceInputs["placementInstruction"] = args?.placementInstruction;
            resourceInputs["state"] = args?.state;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterPlacementGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterPlacementGroup resources.
 */
export interface ClusterPlacementGroupState {
    /**
     * The availability domain where you want to create the cluster placement group.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * A list of resources that you can create in a cluster placement group.
     */
    capabilities?: pulumi.Input<inputs.ClusterPlacementGroups.ClusterPlacementGroupCapabilities>;
    /**
     * ClusterPlacementGroup Identifier.
     */
    clusterPlacementGroupType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A description of the cluster placement group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, lifecycle details for a resource in a Failed state might include information to act on.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The friendly name of the cluster placement group.
     */
    name?: pulumi.Input<string>;
    /**
     * When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
     */
    opcDryRun?: pulumi.Input<boolean>;
    /**
     * Details that inform cluster placement group provisioning.
     */
    placementInstruction?: pulumi.Input<inputs.ClusterPlacementGroups.ClusterPlacementGroupPlacementInstruction>;
    /**
     * (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time the cluster placement group was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the cluster placement group was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClusterPlacementGroup resource.
 */
export interface ClusterPlacementGroupArgs {
    /**
     * The availability domain where you want to create the cluster placement group.
     */
    availabilityDomain: pulumi.Input<string>;
    /**
     * A list of resources that you can create in a cluster placement group.
     */
    capabilities?: pulumi.Input<inputs.ClusterPlacementGroups.ClusterPlacementGroupCapabilities>;
    /**
     * ClusterPlacementGroup Identifier.
     */
    clusterPlacementGroupType: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A description of the cluster placement group.
     */
    description: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The friendly name of the cluster placement group.
     */
    name?: pulumi.Input<string>;
    /**
     * When set to `true`, the request performs validation on the submitted data without modifying configuration item details.
     */
    opcDryRun?: pulumi.Input<boolean>;
    /**
     * Details that inform cluster placement group provisioning.
     */
    placementInstruction?: pulumi.Input<inputs.ClusterPlacementGroups.ClusterPlacementGroupPlacementInstruction>;
    /**
     * (Updatable) The target state for the Cluster Placement Group. Could be set to `ACTIVE` or `INACTIVE`. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    state?: pulumi.Input<string>;
}
