// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Cluster resource in Oracle Cloud Infrastructure Container Engine service.
 *
 * Create a new cluster.
 *
 * ## Import
 *
 * Clusters can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:ContainerEngine/cluster:Cluster test_cluster "id"
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:ContainerEngine/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Available Kubernetes versions to which the clusters masters may be upgraded.
     */
    public /*out*/ readonly availableKubernetesUpgrades!: pulumi.Output<string[] | undefined>;
    /**
     * Available CNIs and network options for existing and new node pools of the cluster
     */
    public readonly clusterPodNetworkOptions!: pulumi.Output<outputs.ContainerEngine.ClusterClusterPodNetworkOption[] | undefined>;
    /**
     * The OCID of the compartment in which to create the cluster.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The network configuration for access to the Cluster control plane.
     */
    public readonly endpointConfig!: pulumi.Output<outputs.ContainerEngine.ClusterEndpointConfig | undefined>;
    /**
     * Endpoints served up by the cluster masters.
     */
    public /*out*/ readonly endpoints!: pulumi.Output<outputs.ContainerEngine.ClusterEndpoint[] | undefined>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * (Updatable) The image verification policy for signature validation. Once a policy is created and enabled with one or more kms keys, the policy will ensure all images deployed has been signed with the key(s) attached to the policy.
     */
    public readonly imagePolicyConfig!: pulumi.Output<outputs.ContainerEngine.ClusterImagePolicyConfig | undefined>;
    /**
     * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption. When used, `kubernetesVersion` must be at least `v1.13.0`.
     */
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) The version of Kubernetes to install into the cluster masters.
     */
    public readonly kubernetesVersion!: pulumi.Output<string>;
    /**
     * Details about the state of the cluster masters.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string | undefined>;
    /**
     * Metadata about the cluster.
     */
    public /*out*/ readonly metadatas!: pulumi.Output<outputs.ContainerEngine.ClusterMetadata[] | undefined>;
    /**
     * (Updatable) The name of the cluster. Avoid entering confidential information.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) Optional attributes for the cluster.
     */
    public readonly options!: pulumi.Output<outputs.ContainerEngine.ClusterOptions | undefined>;
    /**
     * The state of the cluster masters.
     */
    public /*out*/ readonly state!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Type of cluster
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The OCID of the virtual cloud network (VCN) in which to create the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly vcnId!: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["availableKubernetesUpgrades"] = state ? state.availableKubernetesUpgrades : undefined;
            resourceInputs["clusterPodNetworkOptions"] = state ? state.clusterPodNetworkOptions : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["endpointConfig"] = state ? state.endpointConfig : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["imagePolicyConfig"] = state ? state.imagePolicyConfig : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["kubernetesVersion"] = state ? state.kubernetesVersion : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vcnId"] = state ? state.vcnId : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.kubernetesVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kubernetesVersion'");
            }
            if ((!args || args.vcnId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vcnId'");
            }
            resourceInputs["clusterPodNetworkOptions"] = args ? args.clusterPodNetworkOptions : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["endpointConfig"] = args ? args.endpointConfig : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["imagePolicyConfig"] = args ? args.imagePolicyConfig : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["kubernetesVersion"] = args ? args.kubernetesVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vcnId"] = args ? args.vcnId : undefined;
            resourceInputs["availableKubernetesUpgrades"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["metadatas"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Available Kubernetes versions to which the clusters masters may be upgraded.
     */
    availableKubernetesUpgrades?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Available CNIs and network options for existing and new node pools of the cluster
     */
    clusterPodNetworkOptions?: pulumi.Input<pulumi.Input<inputs.ContainerEngine.ClusterClusterPodNetworkOption>[]>;
    /**
     * The OCID of the compartment in which to create the cluster.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The network configuration for access to the Cluster control plane.
     */
    endpointConfig?: pulumi.Input<inputs.ContainerEngine.ClusterEndpointConfig>;
    /**
     * Endpoints served up by the cluster masters.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.ContainerEngine.ClusterEndpoint>[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The image verification policy for signature validation. Once a policy is created and enabled with one or more kms keys, the policy will ensure all images deployed has been signed with the key(s) attached to the policy.
     */
    imagePolicyConfig?: pulumi.Input<inputs.ContainerEngine.ClusterImagePolicyConfig>;
    /**
     * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption. When used, `kubernetesVersion` must be at least `v1.13.0`.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * (Updatable) The version of Kubernetes to install into the cluster masters.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * Details about the state of the cluster masters.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Metadata about the cluster.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.ContainerEngine.ClusterMetadata>[]>;
    /**
     * (Updatable) The name of the cluster. Avoid entering confidential information.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Optional attributes for the cluster.
     */
    options?: pulumi.Input<inputs.ContainerEngine.ClusterOptions>;
    /**
     * The state of the cluster masters.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) Type of cluster
     */
    type?: pulumi.Input<string>;
    /**
     * The OCID of the virtual cloud network (VCN) in which to create the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    vcnId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Available CNIs and network options for existing and new node pools of the cluster
     */
    clusterPodNetworkOptions?: pulumi.Input<pulumi.Input<inputs.ContainerEngine.ClusterClusterPodNetworkOption>[]>;
    /**
     * The OCID of the compartment in which to create the cluster.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The network configuration for access to the Cluster control plane.
     */
    endpointConfig?: pulumi.Input<inputs.ContainerEngine.ClusterEndpointConfig>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The image verification policy for signature validation. Once a policy is created and enabled with one or more kms keys, the policy will ensure all images deployed has been signed with the key(s) attached to the policy.
     */
    imagePolicyConfig?: pulumi.Input<inputs.ContainerEngine.ClusterImagePolicyConfig>;
    /**
     * The OCID of the KMS key to be used as the master encryption key for Kubernetes secret encryption. When used, `kubernetesVersion` must be at least `v1.13.0`.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * (Updatable) The version of Kubernetes to install into the cluster masters.
     */
    kubernetesVersion: pulumi.Input<string>;
    /**
     * (Updatable) The name of the cluster. Avoid entering confidential information.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Optional attributes for the cluster.
     */
    options?: pulumi.Input<inputs.ContainerEngine.ClusterOptions>;
    /**
     * (Updatable) Type of cluster
     */
    type?: pulumi.Input<string>;
    /**
     * The OCID of the virtual cloud network (VCN) in which to create the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    vcnId: pulumi.Input<string>;
}
