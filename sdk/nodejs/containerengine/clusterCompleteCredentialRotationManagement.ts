// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Cluster Complete Credential Rotation Management resource in Oracle Cloud Infrastructure Container Engine service.
 *
 * Complete cluster credential rotation. Retire old credentials from kubernetes components.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testClusterCompleteCredentialRotationManagement = new oci.containerengine.ClusterCompleteCredentialRotationManagement("testClusterCompleteCredentialRotationManagement", {clusterId: oci_containerengine_cluster.test_cluster.id}, {
 *     dependsOn: [oci_containerengine_cluster_start_credential_rotation_management.test_cluster_start_credential_rotation_management],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class ClusterCompleteCredentialRotationManagement extends pulumi.CustomResource {
    /**
     * Get an existing ClusterCompleteCredentialRotationManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterCompleteCredentialRotationManagementState, opts?: pulumi.CustomResourceOptions): ClusterCompleteCredentialRotationManagement {
        return new ClusterCompleteCredentialRotationManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:ContainerEngine/clusterCompleteCredentialRotationManagement:ClusterCompleteCredentialRotationManagement';

    /**
     * Returns true if the given object is an instance of ClusterCompleteCredentialRotationManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterCompleteCredentialRotationManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterCompleteCredentialRotationManagement.__pulumiType;
    }

    /**
     * The OCID of the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly clusterId!: pulumi.Output<string>;

    /**
     * Create a ClusterCompleteCredentialRotationManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterCompleteCredentialRotationManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterCompleteCredentialRotationManagementArgs | ClusterCompleteCredentialRotationManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterCompleteCredentialRotationManagementState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
        } else {
            const args = argsOrState as ClusterCompleteCredentialRotationManagementArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterCompleteCredentialRotationManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterCompleteCredentialRotationManagement resources.
 */
export interface ClusterCompleteCredentialRotationManagementState {
    /**
     * The OCID of the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    clusterId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClusterCompleteCredentialRotationManagement resource.
 */
export interface ClusterCompleteCredentialRotationManagementArgs {
    /**
     * The OCID of the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    clusterId: pulumi.Input<string>;
}
