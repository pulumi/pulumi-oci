// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Node Pool resource in Oracle Cloud Infrastructure Container Engine service.
 *
 * Create a new node pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNodePool = new oci.containerengine.NodePool("test_node_pool", {
 *     clusterId: testCluster.id,
 *     compartmentId: compartmentId,
 *     name: nodePoolName,
 *     nodeShape: nodePoolNodeShape,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     initialNodeLabels: [{
 *         key: nodePoolInitialNodeLabelsKey,
 *         value: nodePoolInitialNodeLabelsValue,
 *     }],
 *     kubernetesVersion: nodePoolKubernetesVersion,
 *     nodeConfigDetails: {
 *         placementConfigs: [{
 *             availabilityDomain: nodePoolNodeConfigDetailsPlacementConfigsAvailabilityDomain,
 *             subnetId: testSubnet.id,
 *             capacityReservationId: testCapacityReservation.id,
 *             faultDomains: nodePoolNodeConfigDetailsPlacementConfigsFaultDomains,
 *             preemptibleNodeConfig: {
 *                 preemptionAction: {
 *                     type: nodePoolNodeConfigDetailsPlacementConfigsPreemptibleNodeConfigPreemptionActionType,
 *                     isPreserveBootVolume: nodePoolNodeConfigDetailsPlacementConfigsPreemptibleNodeConfigPreemptionActionIsPreserveBootVolume,
 *                 },
 *             },
 *         }],
 *         size: nodePoolNodeConfigDetailsSize,
 *         isPvEncryptionInTransitEnabled: nodePoolNodeConfigDetailsIsPvEncryptionInTransitEnabled,
 *         kmsKeyId: testKey.id,
 *         nodePoolPodNetworkOptionDetails: {
 *             cniType: nodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetailsCniType,
 *             maxPodsPerNode: nodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetailsMaxPodsPerNode,
 *             podNsgIds: nodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetailsPodNsgIds,
 *             podSubnetIds: nodePoolNodeConfigDetailsNodePoolPodNetworkOptionDetailsPodSubnetIds,
 *         },
 *         definedTags: {
 *             "Operations.CostCenter": "42",
 *         },
 *         freeformTags: {
 *             Department: "Finance",
 *         },
 *         nsgIds: nodePoolNodeConfigDetailsNsgIds,
 *     },
 *     nodeEvictionNodePoolSettings: {
 *         evictionGraceDuration: nodePoolNodeEvictionNodePoolSettingsEvictionGraceDuration,
 *         isForceDeleteAfterGraceDuration: nodePoolNodeEvictionNodePoolSettingsIsForceDeleteAfterGraceDuration,
 *     },
 *     nodeImageName: testImage.name,
 *     nodeMetadata: nodePoolNodeMetadata,
 *     nodePoolCyclingDetails: {
 *         isNodeCyclingEnabled: nodePoolNodePoolCyclingDetailsIsNodeCyclingEnabled,
 *         maximumSurge: nodePoolNodePoolCyclingDetailsMaximumSurge,
 *         maximumUnavailable: nodePoolNodePoolCyclingDetailsMaximumUnavailable,
 *     },
 *     nodeShapeConfig: {
 *         memoryInGbs: nodePoolNodeShapeConfigMemoryInGbs,
 *         ocpus: nodePoolNodeShapeConfigOcpus,
 *     },
 *     nodeSourceDetails: {
 *         imageId: testImage.id,
 *         sourceType: nodePoolNodeSourceDetailsSourceType,
 *         bootVolumeSizeInGbs: nodePoolNodeSourceDetailsBootVolumeSizeInGbs,
 *     },
 *     quantityPerSubnet: nodePoolQuantityPerSubnet,
 *     sshPublicKey: nodePoolSshPublicKey,
 *     subnetIds: nodePoolSubnetIds,
 * });
 * ```
 *
 * ## Import
 *
 * NodePools can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:ContainerEngine/nodePool:NodePool test_node_pool "id"
 * ```
 */
export class NodePool extends pulumi.CustomResource {
    /**
     * Get an existing NodePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NodePoolState, opts?: pulumi.CustomResourceOptions): NodePool {
        return new NodePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:ContainerEngine/nodePool:NodePool';

    /**
     * Returns true if the given object is an instance of NodePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NodePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NodePool.__pulumiType;
    }

    /**
     * The OCID of the cluster to which this node pool is attached.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * The OCID of the compartment in which the node pool exists.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
     */
    public readonly initialNodeLabels!: pulumi.Output<outputs.ContainerEngine.NodePoolInitialNodeLabel[]>;
    /**
     * (Updatable) The version of Kubernetes to install on the nodes in the node pool.
     */
    public readonly kubernetesVersion!: pulumi.Output<string>;
    /**
     * Details about the state of the node.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) The name of the node pool. Avoid entering confidential information.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
     */
    public readonly nodeConfigDetails!: pulumi.Output<outputs.ContainerEngine.NodePoolNodeConfigDetails>;
    /**
     * (Updatable) Node Eviction Details configuration
     */
    public readonly nodeEvictionNodePoolSettings!: pulumi.Output<outputs.ContainerEngine.NodePoolNodeEvictionNodePoolSettings>;
    /**
     * Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
     *
     * @deprecated The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
     */
    public readonly nodeImageId!: pulumi.Output<string>;
    /**
     * Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
     *
     * @deprecated The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
     */
    public readonly nodeImageName!: pulumi.Output<string>;
    /**
     * (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
     */
    public readonly nodeMetadata!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Node Pool Cycling Details
     */
    public readonly nodePoolCyclingDetails!: pulumi.Output<outputs.ContainerEngine.NodePoolNodePoolCyclingDetails>;
    /**
     * (Updatable) The name of the node shape of the nodes in the node pool.
     */
    public readonly nodeShape!: pulumi.Output<string>;
    /**
     * (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
     */
    public readonly nodeShapeConfig!: pulumi.Output<outputs.ContainerEngine.NodePoolNodeShapeConfig>;
    /**
     * (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
     */
    public readonly nodeSourceDetails!: pulumi.Output<outputs.ContainerEngine.NodePoolNodeSourceDetails>;
    /**
     * Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
     */
    public /*out*/ readonly nodeSources!: pulumi.Output<outputs.ContainerEngine.NodePoolNodeSource[]>;
    /**
     * The nodes in the node pool.
     */
    public /*out*/ readonly nodes!: pulumi.Output<outputs.ContainerEngine.NodePoolNode[]>;
    /**
     * (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
     */
    public readonly quantityPerSubnet!: pulumi.Output<number>;
    /**
     * (Updatable) The SSH public key on each node in the node pool on launch.
     */
    public readonly sshPublicKey!: pulumi.Output<string>;
    /**
     * The state of the nodepool.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly subnetIds!: pulumi.Output<string[]>;

    /**
     * Create a NodePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NodePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NodePoolArgs | NodePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NodePoolState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["initialNodeLabels"] = state ? state.initialNodeLabels : undefined;
            resourceInputs["kubernetesVersion"] = state ? state.kubernetesVersion : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeConfigDetails"] = state ? state.nodeConfigDetails : undefined;
            resourceInputs["nodeEvictionNodePoolSettings"] = state ? state.nodeEvictionNodePoolSettings : undefined;
            resourceInputs["nodeImageId"] = state ? state.nodeImageId : undefined;
            resourceInputs["nodeImageName"] = state ? state.nodeImageName : undefined;
            resourceInputs["nodeMetadata"] = state ? state.nodeMetadata : undefined;
            resourceInputs["nodePoolCyclingDetails"] = state ? state.nodePoolCyclingDetails : undefined;
            resourceInputs["nodeShape"] = state ? state.nodeShape : undefined;
            resourceInputs["nodeShapeConfig"] = state ? state.nodeShapeConfig : undefined;
            resourceInputs["nodeSourceDetails"] = state ? state.nodeSourceDetails : undefined;
            resourceInputs["nodeSources"] = state ? state.nodeSources : undefined;
            resourceInputs["nodes"] = state ? state.nodes : undefined;
            resourceInputs["quantityPerSubnet"] = state ? state.quantityPerSubnet : undefined;
            resourceInputs["sshPublicKey"] = state ? state.sshPublicKey : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
        } else {
            const args = argsOrState as NodePoolArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.nodeShape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeShape'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["initialNodeLabels"] = args ? args.initialNodeLabels : undefined;
            resourceInputs["kubernetesVersion"] = args ? args.kubernetesVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nodeConfigDetails"] = args ? args.nodeConfigDetails : undefined;
            resourceInputs["nodeEvictionNodePoolSettings"] = args ? args.nodeEvictionNodePoolSettings : undefined;
            resourceInputs["nodeImageId"] = args ? args.nodeImageId : undefined;
            resourceInputs["nodeImageName"] = args ? args.nodeImageName : undefined;
            resourceInputs["nodeMetadata"] = args ? args.nodeMetadata : undefined;
            resourceInputs["nodePoolCyclingDetails"] = args ? args.nodePoolCyclingDetails : undefined;
            resourceInputs["nodeShape"] = args ? args.nodeShape : undefined;
            resourceInputs["nodeShapeConfig"] = args ? args.nodeShapeConfig : undefined;
            resourceInputs["nodeSourceDetails"] = args ? args.nodeSourceDetails : undefined;
            resourceInputs["quantityPerSubnet"] = args ? args.quantityPerSubnet : undefined;
            resourceInputs["sshPublicKey"] = args ? args.sshPublicKey : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["nodeSources"] = undefined /*out*/;
            resourceInputs["nodes"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NodePool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NodePool resources.
 */
export interface NodePoolState {
    /**
     * The OCID of the cluster to which this node pool is attached.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The OCID of the compartment in which the node pool exists.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
     */
    initialNodeLabels?: pulumi.Input<pulumi.Input<inputs.ContainerEngine.NodePoolInitialNodeLabel>[]>;
    /**
     * (Updatable) The version of Kubernetes to install on the nodes in the node pool.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * Details about the state of the node.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the node pool. Avoid entering confidential information.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
     */
    nodeConfigDetails?: pulumi.Input<inputs.ContainerEngine.NodePoolNodeConfigDetails>;
    /**
     * (Updatable) Node Eviction Details configuration
     */
    nodeEvictionNodePoolSettings?: pulumi.Input<inputs.ContainerEngine.NodePoolNodeEvictionNodePoolSettings>;
    /**
     * Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
     *
     * @deprecated The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
     */
    nodeImageId?: pulumi.Input<string>;
    /**
     * Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
     *
     * @deprecated The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
     */
    nodeImageName?: pulumi.Input<string>;
    /**
     * (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
     */
    nodeMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Node Pool Cycling Details
     */
    nodePoolCyclingDetails?: pulumi.Input<inputs.ContainerEngine.NodePoolNodePoolCyclingDetails>;
    /**
     * (Updatable) The name of the node shape of the nodes in the node pool.
     */
    nodeShape?: pulumi.Input<string>;
    /**
     * (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
     */
    nodeShapeConfig?: pulumi.Input<inputs.ContainerEngine.NodePoolNodeShapeConfig>;
    /**
     * (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
     */
    nodeSourceDetails?: pulumi.Input<inputs.ContainerEngine.NodePoolNodeSourceDetails>;
    /**
     * Deprecated. see `nodeSourceDetails`. Source running on the nodes in the node pool.
     */
    nodeSources?: pulumi.Input<pulumi.Input<inputs.ContainerEngine.NodePoolNodeSource>[]>;
    /**
     * The nodes in the node pool.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.ContainerEngine.NodePoolNode>[]>;
    /**
     * (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
     */
    quantityPerSubnet?: pulumi.Input<number>;
    /**
     * (Updatable) The SSH public key on each node in the node pool on launch.
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * The state of the nodepool.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a NodePool resource.
 */
export interface NodePoolArgs {
    /**
     * The OCID of the cluster to which this node pool is attached.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The OCID of the compartment in which the node pool exists.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A list of key/value pairs to add to nodes after they join the Kubernetes cluster.
     */
    initialNodeLabels?: pulumi.Input<pulumi.Input<inputs.ContainerEngine.NodePoolInitialNodeLabel>[]>;
    /**
     * (Updatable) The version of Kubernetes to install on the nodes in the node pool.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the node pool. Avoid entering confidential information.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) The configuration of nodes in the node pool. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
     */
    nodeConfigDetails?: pulumi.Input<inputs.ContainerEngine.NodePoolNodeConfigDetails>;
    /**
     * (Updatable) Node Eviction Details configuration
     */
    nodeEvictionNodePoolSettings?: pulumi.Input<inputs.ContainerEngine.NodePoolNodeEvictionNodePoolSettings>;
    /**
     * Deprecated. see `nodeSource`. The OCID of the image running on the nodes in the node pool.
     *
     * @deprecated The 'node_image_id' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
     */
    nodeImageId?: pulumi.Input<string>;
    /**
     * Deprecated. Use `nodeSourceDetails` instead. If you specify values for both, this value is ignored. The name of the image running on the nodes in the node pool. Cannot be used when `nodeImageId` is specified.
     *
     * @deprecated The 'node_image_name' field has been deprecated. Please use 'node_source_details' instead. If both fields are specified, then 'node_source_details' will be used.
     */
    nodeImageName?: pulumi.Input<string>;
    /**
     * (Updatable) A list of key/value pairs to add to each underlying Oracle Cloud Infrastructure instance in the node pool on launch.
     */
    nodeMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Node Pool Cycling Details
     */
    nodePoolCyclingDetails?: pulumi.Input<inputs.ContainerEngine.NodePoolNodePoolCyclingDetails>;
    /**
     * (Updatable) The name of the node shape of the nodes in the node pool.
     */
    nodeShape: pulumi.Input<string>;
    /**
     * (Updatable) Specify the configuration of the shape to launch nodes in the node pool.
     */
    nodeShapeConfig?: pulumi.Input<inputs.ContainerEngine.NodePoolNodeShapeConfig>;
    /**
     * (Updatable) Specify the source to use to launch nodes in the node pool. Currently, image is the only supported source.
     */
    nodeSourceDetails?: pulumi.Input<inputs.ContainerEngine.NodePoolNodeSourceDetails>;
    /**
     * (Updatable) Optional, default to 1. The number of nodes to create in each subnet specified in subnetIds property. When used, subnetIds is required. This property is deprecated, use nodeConfigDetails instead.
     */
    quantityPerSubnet?: pulumi.Input<number>;
    /**
     * (Updatable) The SSH public key on each node in the node pool on launch.
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * (Updatable) The OCIDs of the subnets in which to place nodes for this node pool. When used, quantityPerSubnet can be provided. This property is deprecated, use nodeConfigDetails. Exactly one of the subnetIds or nodeConfigDetails properties must be specified.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}
