// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Container Instance resource in Oracle Cloud Infrastructure Container Instances service.
 *
 * Gets information about the specified container instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerInstance = oci.ContainerInstances.getContainerInstance({
 *     containerInstanceId: oci_container_instances_container_instance.test_container_instance.id,
 * });
 * ```
 */
export function getContainerInstance(args: GetContainerInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:ContainerInstances/getContainerInstance:getContainerInstance", {
        "containerInstanceId": args.containerInstanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getContainerInstance.
 */
export interface GetContainerInstanceArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container instance.
     */
    containerInstanceId: string;
}

/**
 * A collection of values returned by getContainerInstance.
 */
export interface GetContainerInstanceResult {
    /**
     * The availability domain to place the container instance.
     */
    readonly availabilityDomain?: string;
    /**
     * The OCID of the compartment.
     */
    readonly compartmentId?: string;
    /**
     * The number of containers on the container instance.
     */
    readonly containerCount?: number;
    readonly containerInstanceId: string;
    /**
     * The container restart policy is applied for all containers in container instance.
     */
    readonly containerRestartPolicy?: string;
    /**
     * The containers on the container instance.
     */
    readonly containers?: outputs.ContainerInstances.GetContainerInstanceContainer[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`.
     */
    readonly definedTags?: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    /**
     * DNS settings for containers.
     */
    readonly dnsConfigs?: outputs.ContainerInstances.GetContainerInstanceDnsConfig[];
    /**
     * The fault domain to place the container instance.
     */
    readonly faultDomain?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags?: {[key: string]: any};
    /**
     * The amount of time that processes in a container have to gracefully end when the container must be stopped. For example, when you delete a container instance. After the timeout is reached, the processes are sent a signal to be deleted.
     */
    readonly gracefulShutdownTimeoutInSeconds?: string;
    /**
     * An OCID that cannot be changed.
     */
    readonly id?: string;
    /**
     * The image pulls secrets so you can access private registry to pull container images.
     */
    readonly imagePullSecrets?: outputs.ContainerInstances.GetContainerInstanceImagePullSecret[];
    /**
     * A message that describes the current state of the container in more detail. Can be used to provide actionable information.
     */
    readonly lifecycleDetails?: string;
    /**
     * The shape of the container instance. The shape determines the number of OCPUs, amount of memory, and other resources that are allocated to a container instance.
     */
    readonly shape?: string;
    /**
     * The shape configuration for a container instance. The shape configuration determines the resources thats are available to the container instance and its containers.
     */
    readonly shapeConfigs?: outputs.ContainerInstances.GetContainerInstanceShapeConfig[];
    /**
     * The current state of the container instance.
     */
    readonly state?: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`.
     */
    readonly systemTags?: {[key: string]: any};
    /**
     * The time the container instance was created, in the format defined by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    readonly timeCreated?: string;
    /**
     * The time the container instance was updated, in the format defined by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    readonly timeUpdated?: string;
    /**
     * The virtual networks available to the containers in the container instance.
     */
    readonly vnics?: outputs.ContainerInstances.GetContainerInstanceVnic[];
    /**
     * The number of volumes that are attached to the container instance.
     */
    readonly volumeCount?: number;
    /**
     * A volume is a directory with data that is accessible across multiple containers in a container instance.
     */
    readonly volumes?: outputs.ContainerInstances.GetContainerInstanceVolume[];
}
/**
 * This data source provides details about a specific Container Instance resource in Oracle Cloud Infrastructure Container Instances service.
 *
 * Gets information about the specified container instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerInstance = oci.ContainerInstances.getContainerInstance({
 *     containerInstanceId: oci_container_instances_container_instance.test_container_instance.id,
 * });
 * ```
 */
export function getContainerInstanceOutput(args: GetContainerInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerInstanceResult> {
    return pulumi.output(args).apply((a: any) => getContainerInstance(a, opts))
}

/**
 * A collection of arguments for invoking getContainerInstance.
 */
export interface GetContainerInstanceOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the container instance.
     */
    containerInstanceId: pulumi.Input<string>;
}
