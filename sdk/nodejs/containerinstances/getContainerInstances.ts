// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Container Instances in Oracle Cloud Infrastructure Container Instances service.
 *
 * Returns a list of container instances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerInstances = oci.ContainerInstances.getContainerInstances({
 *     compartmentId: _var.compartment_id,
 *     availabilityDomain: _var.container_instance_availability_domain,
 *     displayName: _var.container_instance_display_name,
 *     state: _var.container_instance_state,
 * });
 * ```
 */
export function getContainerInstances(args: GetContainerInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerInstancesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:ContainerInstances/getContainerInstances:getContainerInstances", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getContainerInstances.
 */
export interface GetContainerInstancesArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.ContainerInstances.GetContainerInstancesFilter[];
    /**
     * A filter to only return resources that match the given lifecycle state.
     */
    state?: string;
}

/**
 * A collection of values returned by getContainerInstances.
 */
export interface GetContainerInstancesResult {
    /**
     * The availability domain to place the container instance.
     */
    readonly availabilityDomain?: string;
    /**
     * The OCID of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The list of container_instance_collection.
     */
    readonly containerInstanceCollections?: outputs.ContainerInstances.GetContainerInstancesContainerInstanceCollection[];
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.ContainerInstances.GetContainerInstancesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * The current state of the container instance.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Container Instances in Oracle Cloud Infrastructure Container Instances service.
 *
 * Returns a list of container instances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testContainerInstances = oci.ContainerInstances.getContainerInstances({
 *     compartmentId: _var.compartment_id,
 *     availabilityDomain: _var.container_instance_availability_domain,
 *     displayName: _var.container_instance_display_name,
 *     state: _var.container_instance_state,
 * });
 * ```
 */
export function getContainerInstancesOutput(args: GetContainerInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerInstancesResult> {
    return pulumi.output(args).apply((a: any) => getContainerInstances(a, opts))
}

/**
 * A collection of arguments for invoking getContainerInstances.
 */
export interface GetContainerInstancesOutputArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.ContainerInstances.GetContainerInstancesFilterArgs>[]>;
    /**
     * A filter to only return resources that match the given lifecycle state.
     */
    state?: pulumi.Input<string>;
}
