// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Boot Volume Replicas in Oracle Cloud Infrastructure Core service.
 *
 * Lists the boot volume replicas in the specified compartment and availability domain.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBootVolumeReplicas = oci.Core.getBootVolumeReplicas({
 *     availabilityDomain: bootVolumeReplicaAvailabilityDomain,
 *     compartmentId: compartmentId,
 *     displayName: bootVolumeReplicaDisplayName,
 *     state: bootVolumeReplicaState,
 *     volumeGroupReplicaId: testVolumeGroupReplica.id,
 * });
 * ```
 */
export function getBootVolumeReplicas(args?: GetBootVolumeReplicasArgs, opts?: pulumi.InvokeOptions): Promise<GetBootVolumeReplicasResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Core/getBootVolumeReplicas:getBootVolumeReplicas", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "volumeGroupReplicaId": args.volumeGroupReplicaId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBootVolumeReplicas.
 */
export interface GetBootVolumeReplicasArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.Core.GetBootVolumeReplicasFilter[];
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the volume group replica.
     */
    volumeGroupReplicaId?: string;
}

/**
 * A collection of values returned by getBootVolumeReplicas.
 */
export interface GetBootVolumeReplicasResult {
    /**
     * The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     */
    readonly availabilityDomain?: string;
    /**
     * The list of boot_volume_replicas.
     */
    readonly bootVolumeReplicas: outputs.Core.GetBootVolumeReplicasBootVolumeReplica[];
    /**
     * The OCID of the compartment that contains the boot volume replica.
     */
    readonly compartmentId?: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Core.GetBootVolumeReplicasFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of a boot volume replica.
     */
    readonly state?: string;
    readonly volumeGroupReplicaId?: string;
}
/**
 * This data source provides the list of Boot Volume Replicas in Oracle Cloud Infrastructure Core service.
 *
 * Lists the boot volume replicas in the specified compartment and availability domain.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBootVolumeReplicas = oci.Core.getBootVolumeReplicas({
 *     availabilityDomain: bootVolumeReplicaAvailabilityDomain,
 *     compartmentId: compartmentId,
 *     displayName: bootVolumeReplicaDisplayName,
 *     state: bootVolumeReplicaState,
 *     volumeGroupReplicaId: testVolumeGroupReplica.id,
 * });
 * ```
 */
export function getBootVolumeReplicasOutput(args?: GetBootVolumeReplicasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBootVolumeReplicasResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Core/getBootVolumeReplicas:getBootVolumeReplicas", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "volumeGroupReplicaId": args.volumeGroupReplicaId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBootVolumeReplicas.
 */
export interface GetBootVolumeReplicasOutputArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Core.GetBootVolumeReplicasFilterArgs>[]>;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the volume group replica.
     */
    volumeGroupReplicaId?: pulumi.Input<string>;
}
