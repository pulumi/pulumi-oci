// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Image Shapes in Oracle Cloud Infrastructure Core service.
 *
 * Lists the compatible shapes for the specified image.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testImageShapes = oci.Core.getImageShapes({
 *     imageId: testImage.id,
 * });
 * ```
 */
export function getImageShapes(args: GetImageShapesArgs, opts?: pulumi.InvokeOptions): Promise<GetImageShapesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Core/getImageShapes:getImageShapes", {
        "filters": args.filters,
        "imageId": args.imageId,
    }, opts);
}

/**
 * A collection of arguments for invoking getImageShapes.
 */
export interface GetImageShapesArgs {
    filters?: inputs.Core.GetImageShapesFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
     */
    imageId: string;
}

/**
 * A collection of values returned by getImageShapes.
 */
export interface GetImageShapesResult {
    readonly filters?: outputs.Core.GetImageShapesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly imageId: string;
    /**
     * The list of image_shape_compatibilities.
     */
    readonly imageShapeCompatibilities: outputs.Core.GetImageShapesImageShapeCompatibility[];
}
/**
 * This data source provides the list of Image Shapes in Oracle Cloud Infrastructure Core service.
 *
 * Lists the compatible shapes for the specified image.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testImageShapes = oci.Core.getImageShapes({
 *     imageId: testImage.id,
 * });
 * ```
 */
export function getImageShapesOutput(args: GetImageShapesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetImageShapesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Core/getImageShapes:getImageShapes", {
        "filters": args.filters,
        "imageId": args.imageId,
    }, opts);
}

/**
 * A collection of arguments for invoking getImageShapes.
 */
export interface GetImageShapesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Core.GetImageShapesFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the image.
     */
    imageId: pulumi.Input<string>;
}
