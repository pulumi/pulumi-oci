// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Ipv6s in Oracle Cloud Infrastructure Core service.
 *
 * Lists the [IPv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Ipv6/) objects based
 * on one of these filters:
 *
 *   * Subnet OCID.
 *   * VNIC OCID.
 *   * Both IPv6 address and subnet OCID: This lets you get an `Ipv6` object based on its private
 *       IPv6 address (for example, 2001:0db8:0123:1111:abcd:ef01:2345:6789) and not its OCID. For comparison,
 *       [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Ipv6/GetIpv6) requires the OCID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIpv6s = oci.Core.getIpv6s({
 *     ipAddress: ipv6IpAddress,
 *     subnetId: testSubnet.id,
 *     vnicId: testVnicAttachment.id,
 * });
 * ```
 */
export function getIpv6s(args?: GetIpv6sArgs, opts?: pulumi.InvokeOptions): Promise<GetIpv6sResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Core/getIpv6s:getIpv6s", {
        "filters": args.filters,
        "ipAddress": args.ipAddress,
        "subnetId": args.subnetId,
        "vnicId": args.vnicId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpv6s.
 */
export interface GetIpv6sArgs {
    filters?: inputs.Core.GetIpv6sFilter[];
    /**
     * An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
     */
    ipAddress?: string;
    /**
     * The OCID of the subnet.
     */
    subnetId?: string;
    /**
     * The OCID of the VNIC.
     */
    vnicId?: string;
}

/**
 * A collection of values returned by getIpv6s.
 */
export interface GetIpv6sResult {
    readonly filters?: outputs.Core.GetIpv6sFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The IPv6 address of the `IPv6` object. The address is within the IPv6 CIDR block of the VNIC's subnet (see the `ipv6CidrBlock` attribute for the [Subnet](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Subnet/) object.  Example: `2001:0db8:0123:1111:abcd:ef01:2345:6789`
     */
    readonly ipAddress?: string;
    /**
     * The list of ipv6s.
     */
    readonly ipv6s: outputs.Core.GetIpv6sIpv6[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the VNIC is in.
     */
    readonly subnetId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC the IPv6 is assigned to. The VNIC and IPv6 must be in the same subnet.
     */
    readonly vnicId?: string;
}
/**
 * This data source provides the list of Ipv6s in Oracle Cloud Infrastructure Core service.
 *
 * Lists the [IPv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Ipv6/) objects based
 * on one of these filters:
 *
 *   * Subnet OCID.
 *   * VNIC OCID.
 *   * Both IPv6 address and subnet OCID: This lets you get an `Ipv6` object based on its private
 *       IPv6 address (for example, 2001:0db8:0123:1111:abcd:ef01:2345:6789) and not its OCID. For comparison,
 *       [GetIpv6](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Ipv6/GetIpv6) requires the OCID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIpv6s = oci.Core.getIpv6s({
 *     ipAddress: ipv6IpAddress,
 *     subnetId: testSubnet.id,
 *     vnicId: testVnicAttachment.id,
 * });
 * ```
 */
export function getIpv6sOutput(args?: GetIpv6sOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpv6sResult> {
    return pulumi.output(args).apply((a: any) => getIpv6s(a, opts))
}

/**
 * A collection of arguments for invoking getIpv6s.
 */
export interface GetIpv6sOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Core.GetIpv6sFilterArgs>[]>;
    /**
     * An IP address. This could be either IPv4 or IPv6, depending on the resource. Example: `10.0.3.3`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The OCID of the subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The OCID of the VNIC.
     */
    vnicId?: pulumi.Input<string>;
}
