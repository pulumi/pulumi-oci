// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getListingResourceVersions(args: GetListingResourceVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetListingResourceVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Core/getListingResourceVersions:getListingResourceVersions", {
        "filters": args.filters,
        "listingId": args.listingId,
    }, opts);
}

/**
 * A collection of arguments for invoking getListingResourceVersions.
 */
export interface GetListingResourceVersionsArgs {
    filters?: inputs.Core.GetListingResourceVersionsFilter[];
    listingId: string;
}

/**
 * A collection of values returned by getListingResourceVersions.
 */
export interface GetListingResourceVersionsResult {
    readonly appCatalogListingResourceVersions?: outputs.Core.GetListingResourceVersionsAppCatalogListingResourceVersion[];
    readonly filters?: outputs.Core.GetListingResourceVersionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    readonly listingId: string;
}
export function getListingResourceVersionsOutput(args: GetListingResourceVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetListingResourceVersionsResult> {
    return pulumi.output(args).apply((a: any) => getListingResourceVersions(a, opts))
}

/**
 * A collection of arguments for invoking getListingResourceVersions.
 */
export interface GetListingResourceVersionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Core.GetListingResourceVersionsFilterArgs>[]>;
    listingId: pulumi.Input<string>;
}
