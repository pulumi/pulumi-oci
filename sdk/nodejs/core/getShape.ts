// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getShape(args: GetShapeArgs, opts?: pulumi.InvokeOptions): Promise<GetShapeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Core/getShape:getShape", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "imageId": args.imageId,
    }, opts);
}

/**
 * A collection of arguments for invoking getShape.
 */
export interface GetShapeArgs {
    availabilityDomain?: string;
    compartmentId: string;
    filters?: inputs.Core.GetShapeFilter[];
    imageId?: string;
}

/**
 * A collection of values returned by getShape.
 */
export interface GetShapeResult {
    readonly availabilityDomain?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.Core.GetShapeFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageId?: string;
    readonly shapes: outputs.Core.GetShapeShape[];
}
export function getShapeOutput(args: GetShapeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetShapeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Core/getShape:getShape", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "imageId": args.imageId,
    }, opts);
}

/**
 * A collection of arguments for invoking getShape.
 */
export interface GetShapeOutputArgs {
    availabilityDomain?: pulumi.Input<string>;
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Core.GetShapeFilterArgs>[]>;
    imageId?: pulumi.Input<string>;
}
