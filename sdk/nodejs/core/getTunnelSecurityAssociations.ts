// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Tunnel Security Associations in Oracle Cloud Infrastructure Core service.
 *
 * Lists the tunnel security associations information for the specified IPSec tunnel ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTunnelSecurityAssociations = oci.Core.getTunnelSecurityAssociations({
 *     ipsecId: oci_core_ipsec.test_ipsec.id,
 *     tunnelId: oci_core_tunnel.test_tunnel.id,
 * });
 * ```
 */
export function getTunnelSecurityAssociations(args: GetTunnelSecurityAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetTunnelSecurityAssociationsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Core/getTunnelSecurityAssociations:getTunnelSecurityAssociations", {
        "filters": args.filters,
        "ipsecId": args.ipsecId,
        "tunnelId": args.tunnelId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTunnelSecurityAssociations.
 */
export interface GetTunnelSecurityAssociationsArgs {
    filters?: inputs.Core.GetTunnelSecurityAssociationsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
     */
    ipsecId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
     */
    tunnelId: string;
}

/**
 * A collection of values returned by getTunnelSecurityAssociations.
 */
export interface GetTunnelSecurityAssociationsResult {
    readonly filters?: outputs.Core.GetTunnelSecurityAssociationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipsecId: string;
    readonly tunnelId: string;
    /**
     * The list of tunnel_security_associations.
     */
    readonly tunnelSecurityAssociations: outputs.Core.GetTunnelSecurityAssociationsTunnelSecurityAssociation[];
}

export function getTunnelSecurityAssociationsOutput(args: GetTunnelSecurityAssociationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTunnelSecurityAssociationsResult> {
    return pulumi.output(args).apply(a => getTunnelSecurityAssociations(a, opts))
}

/**
 * A collection of arguments for invoking getTunnelSecurityAssociations.
 */
export interface GetTunnelSecurityAssociationsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Core.GetTunnelSecurityAssociationsFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPSec connection.
     */
    ipsecId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tunnel.
     */
    tunnelId: pulumi.Input<string>;
}
