// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Virtual Circuit Public Prefixes in Oracle Cloud Infrastructure Core service.
 *
 * Lists the public IP prefixes and their details for the specified
 * public virtual circuit.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVirtualCircuitPublicPrefixes = oci.Core.getVirtualCircuitPublicPrefixes({
 *     virtualCircuitId: testVirtualCircuit.id,
 *     verificationState: virtualCircuitPublicPrefixVerificationState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getVirtualCircuitPublicPrefixes(args: GetVirtualCircuitPublicPrefixesArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualCircuitPublicPrefixesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Core/getVirtualCircuitPublicPrefixes:getVirtualCircuitPublicPrefixes", {
        "filters": args.filters,
        "verificationState": args.verificationState,
        "virtualCircuitId": args.virtualCircuitId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVirtualCircuitPublicPrefixes.
 */
export interface GetVirtualCircuitPublicPrefixesArgs {
    filters?: inputs.Core.GetVirtualCircuitPublicPrefixesFilter[];
    /**
     * A filter to only return resources that match the given verification state.
     *
     * The state value is case-insensitive.
     */
    verificationState?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit.
     */
    virtualCircuitId: string;
}

/**
 * A collection of values returned by getVirtualCircuitPublicPrefixes.
 */
export interface GetVirtualCircuitPublicPrefixesResult {
    readonly filters?: outputs.Core.GetVirtualCircuitPublicPrefixesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Oracle must verify that the customer owns the public IP prefix before traffic for that prefix can flow across the virtual circuit. Verification can take a few business days. `IN_PROGRESS` means Oracle is verifying the prefix. `COMPLETED` means verification succeeded. `FAILED` means verification failed and traffic for this prefix will not flow across the connection.
     */
    readonly verificationState?: string;
    readonly virtualCircuitId: string;
    /**
     * The list of virtual_circuit_public_prefixes.
     */
    readonly virtualCircuitPublicPrefixes: outputs.Core.GetVirtualCircuitPublicPrefixesVirtualCircuitPublicPrefix[];
}
/**
 * This data source provides the list of Virtual Circuit Public Prefixes in Oracle Cloud Infrastructure Core service.
 *
 * Lists the public IP prefixes and their details for the specified
 * public virtual circuit.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVirtualCircuitPublicPrefixes = oci.Core.getVirtualCircuitPublicPrefixes({
 *     virtualCircuitId: testVirtualCircuit.id,
 *     verificationState: virtualCircuitPublicPrefixVerificationState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getVirtualCircuitPublicPrefixesOutput(args: GetVirtualCircuitPublicPrefixesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualCircuitPublicPrefixesResult> {
    return pulumi.output(args).apply((a: any) => getVirtualCircuitPublicPrefixes(a, opts))
}

/**
 * A collection of arguments for invoking getVirtualCircuitPublicPrefixes.
 */
export interface GetVirtualCircuitPublicPrefixesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Core.GetVirtualCircuitPublicPrefixesFilterArgs>[]>;
    /**
     * A filter to only return resources that match the given verification state.
     *
     * The state value is case-insensitive.
     */
    verificationState?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit.
     */
    virtualCircuitId: pulumi.Input<string>;
}
