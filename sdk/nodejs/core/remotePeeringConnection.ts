// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Remote Peering Connection resource in Oracle Cloud Infrastructure Core service.
 *
 * Creates a new remote peering connection (RPC) for the specified DRG.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRemotePeeringConnection = new oci.core.RemotePeeringConnection("testRemotePeeringConnection", {
 *     compartmentId: _var.compartment_id,
 *     drgId: oci_core_drg.test_drg.id,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     displayName: _var.remote_peering_connection_display_name,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     peerId: oci_core_remote_peering_connection.test_remote_peering_connection2.id,
 *     peerRegionName: _var.remote_peering_connection_peer_region_name,
 * });
 * ```
 *
 * ## Import
 *
 * RemotePeeringConnections can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Core/remotePeeringConnection:RemotePeeringConnection test_remote_peering_connection "id"
 * ```
 */
export class RemotePeeringConnection extends pulumi.CustomResource {
    /**
     * Get an existing RemotePeeringConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RemotePeeringConnectionState, opts?: pulumi.CustomResourceOptions): RemotePeeringConnection {
        return new RemotePeeringConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Core/remotePeeringConnection:RemotePeeringConnection';

    /**
     * Returns true if the given object is an instance of RemotePeeringConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RemotePeeringConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RemotePeeringConnection.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
     */
    public readonly drgId!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
     */
    public /*out*/ readonly isCrossTenancyPeering!: pulumi.Output<boolean>;
    /**
     * The OCID of the RPC you want to peer with.
     */
    public readonly peerId!: pulumi.Output<string>;
    /**
     * The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
     */
    public readonly peerRegionName!: pulumi.Output<string>;
    /**
     * If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
     */
    public /*out*/ readonly peerTenancyId!: pulumi.Output<string>;
    /**
     * Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
     */
    public /*out*/ readonly peeringStatus!: pulumi.Output<string>;
    /**
     * The RPC's current lifecycle state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;

    /**
     * Create a RemotePeeringConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RemotePeeringConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RemotePeeringConnectionArgs | RemotePeeringConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RemotePeeringConnectionState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["drgId"] = state ? state.drgId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isCrossTenancyPeering"] = state ? state.isCrossTenancyPeering : undefined;
            resourceInputs["peerId"] = state ? state.peerId : undefined;
            resourceInputs["peerRegionName"] = state ? state.peerRegionName : undefined;
            resourceInputs["peerTenancyId"] = state ? state.peerTenancyId : undefined;
            resourceInputs["peeringStatus"] = state ? state.peeringStatus : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
        } else {
            const args = argsOrState as RemotePeeringConnectionArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.drgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'drgId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["drgId"] = args ? args.drgId : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["peerId"] = args ? args.peerId : undefined;
            resourceInputs["peerRegionName"] = args ? args.peerRegionName : undefined;
            resourceInputs["isCrossTenancyPeering"] = undefined /*out*/;
            resourceInputs["peerTenancyId"] = undefined /*out*/;
            resourceInputs["peeringStatus"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RemotePeeringConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RemotePeeringConnection resources.
 */
export interface RemotePeeringConnectionState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
     */
    drgId?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
     */
    isCrossTenancyPeering?: pulumi.Input<boolean>;
    /**
     * The OCID of the RPC you want to peer with.
     */
    peerId?: pulumi.Input<string>;
    /**
     * The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
     */
    peerRegionName?: pulumi.Input<string>;
    /**
     * If this RPC is peered, this value is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the other RPC's tenancy.
     */
    peerTenancyId?: pulumi.Input<string>;
    /**
     * Whether the RPC is peered with another RPC. `NEW` means the RPC has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the RPC at the other end of the peering has been deleted.
     */
    peeringStatus?: pulumi.Input<string>;
    /**
     * The RPC's current lifecycle state.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the RPC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RemotePeeringConnection resource.
 */
export interface RemotePeeringConnectionArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the RPC.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG the RPC belongs to.
     */
    drgId: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The OCID of the RPC you want to peer with.
     */
    peerId?: pulumi.Input<string>;
    /**
     * The name of the region that contains the RPC you want to peer with.  Example: `us-ashburn-1`
     */
    peerRegionName?: pulumi.Input<string>;
}
