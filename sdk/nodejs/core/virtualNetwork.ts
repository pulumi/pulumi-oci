// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class VirtualNetwork extends pulumi.CustomResource {
    /**
     * Get an existing VirtualNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualNetworkState, opts?: pulumi.CustomResourceOptions): VirtualNetwork {
        return new VirtualNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Core/virtualNetwork:VirtualNetwork';

    /**
     * Returns true if the given object is an instance of VirtualNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualNetwork.__pulumiType;
    }

    declare public /*out*/ readonly byoipv6cidrBlocks: pulumi.Output<string[]>;
    declare public readonly byoipv6cidrDetails: pulumi.Output<outputs.Core.VirtualNetworkByoipv6cidrDetail[]>;
    declare public readonly cidrBlock: pulumi.Output<string>;
    declare public readonly cidrBlocks: pulumi.Output<string[]>;
    declare public readonly compartmentId: pulumi.Output<string>;
    declare public /*out*/ readonly defaultDhcpOptionsId: pulumi.Output<string>;
    declare public /*out*/ readonly defaultRouteTableId: pulumi.Output<string>;
    declare public /*out*/ readonly defaultSecurityListId: pulumi.Output<string>;
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    declare public readonly displayName: pulumi.Output<string>;
    declare public readonly dnsLabel: pulumi.Output<string>;
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    declare public /*out*/ readonly ipv6cidrBlocks: pulumi.Output<string[]>;
    declare public readonly ipv6privateCidrBlocks: pulumi.Output<string[]>;
    declare public readonly isIpv6enabled: pulumi.Output<boolean>;
    declare public readonly isOracleGuaAllocationEnabled: pulumi.Output<boolean>;
    declare public readonly securityAttributes: pulumi.Output<{[key: string]: string}>;
    declare public /*out*/ readonly state: pulumi.Output<string>;
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    declare public /*out*/ readonly vcnDomainName: pulumi.Output<string>;

    /**
     * Create a VirtualNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualNetworkArgs | VirtualNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VirtualNetworkState | undefined;
            resourceInputs["byoipv6cidrBlocks"] = state?.byoipv6cidrBlocks;
            resourceInputs["byoipv6cidrDetails"] = state?.byoipv6cidrDetails;
            resourceInputs["cidrBlock"] = state?.cidrBlock;
            resourceInputs["cidrBlocks"] = state?.cidrBlocks;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["defaultDhcpOptionsId"] = state?.defaultDhcpOptionsId;
            resourceInputs["defaultRouteTableId"] = state?.defaultRouteTableId;
            resourceInputs["defaultSecurityListId"] = state?.defaultSecurityListId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["dnsLabel"] = state?.dnsLabel;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["ipv6cidrBlocks"] = state?.ipv6cidrBlocks;
            resourceInputs["ipv6privateCidrBlocks"] = state?.ipv6privateCidrBlocks;
            resourceInputs["isIpv6enabled"] = state?.isIpv6enabled;
            resourceInputs["isOracleGuaAllocationEnabled"] = state?.isOracleGuaAllocationEnabled;
            resourceInputs["securityAttributes"] = state?.securityAttributes;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["vcnDomainName"] = state?.vcnDomainName;
        } else {
            const args = argsOrState as VirtualNetworkArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            resourceInputs["byoipv6cidrDetails"] = args?.byoipv6cidrDetails;
            resourceInputs["cidrBlock"] = args?.cidrBlock;
            resourceInputs["cidrBlocks"] = args?.cidrBlocks;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["dnsLabel"] = args?.dnsLabel;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["ipv6privateCidrBlocks"] = args?.ipv6privateCidrBlocks;
            resourceInputs["isIpv6enabled"] = args?.isIpv6enabled;
            resourceInputs["isOracleGuaAllocationEnabled"] = args?.isOracleGuaAllocationEnabled;
            resourceInputs["securityAttributes"] = args?.securityAttributes;
            resourceInputs["byoipv6cidrBlocks"] = undefined /*out*/;
            resourceInputs["defaultDhcpOptionsId"] = undefined /*out*/;
            resourceInputs["defaultRouteTableId"] = undefined /*out*/;
            resourceInputs["defaultSecurityListId"] = undefined /*out*/;
            resourceInputs["ipv6cidrBlocks"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["vcnDomainName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualNetwork resources.
 */
export interface VirtualNetworkState {
    byoipv6cidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    byoipv6cidrDetails?: pulumi.Input<pulumi.Input<inputs.Core.VirtualNetworkByoipv6cidrDetail>[]>;
    cidrBlock?: pulumi.Input<string>;
    cidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId?: pulumi.Input<string>;
    defaultDhcpOptionsId?: pulumi.Input<string>;
    defaultRouteTableId?: pulumi.Input<string>;
    defaultSecurityListId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    dnsLabel?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ipv6cidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    ipv6privateCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    isIpv6enabled?: pulumi.Input<boolean>;
    isOracleGuaAllocationEnabled?: pulumi.Input<boolean>;
    securityAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    state?: pulumi.Input<string>;
    timeCreated?: pulumi.Input<string>;
    vcnDomainName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualNetwork resource.
 */
export interface VirtualNetworkArgs {
    byoipv6cidrDetails?: pulumi.Input<pulumi.Input<inputs.Core.VirtualNetworkByoipv6cidrDetail>[]>;
    cidrBlock?: pulumi.Input<string>;
    cidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    compartmentId: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    displayName?: pulumi.Input<string>;
    dnsLabel?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ipv6privateCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    isIpv6enabled?: pulumi.Input<boolean>;
    isOracleGuaAllocationEnabled?: pulumi.Input<boolean>;
    securityAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
