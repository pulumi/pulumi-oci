// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Volume Attachment resource in Oracle Cloud Infrastructure Core service.
 *
 * Attaches the specified storage volume to the specified instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVolumeAttachment = new oci.core.VolumeAttachment("testVolumeAttachment", {
 *     attachmentType: _var.volume_attachment_attachment_type,
 *     instanceId: oci_core_instance.test_instance.id,
 *     volumeId: oci_core_volume.test_volume.id,
 *     device: _var.volume_attachment_device,
 *     displayName: _var.volume_attachment_display_name,
 *     encryptionInTransitType: _var.volume_attachment_encryption_in_transit_type,
 *     isAgentAutoIscsiLoginEnabled: _var.volume_attachment_is_agent_auto_iscsi_login_enabled,
 *     isPvEncryptionInTransitEnabled: _var.volume_attachment_is_pv_encryption_in_transit_enabled,
 *     isReadOnly: _var.volume_attachment_is_read_only,
 *     isShareable: _var.volume_attachment_is_shareable,
 *     useChap: _var.volume_attachment_use_chap,
 * });
 * ```
 *
 * ## Import
 *
 * VolumeAttachments can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Core/volumeAttachment:VolumeAttachment test_volume_attachment "id"
 * ```
 */
export class VolumeAttachment extends pulumi.CustomResource {
    /**
     * Get an existing VolumeAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VolumeAttachmentState, opts?: pulumi.CustomResourceOptions): VolumeAttachment {
        return new VolumeAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Core/volumeAttachment:VolumeAttachment';

    /**
     * Returns true if the given object is an instance of VolumeAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VolumeAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VolumeAttachment.__pulumiType;
    }

    /**
     * The type of volume. The only supported values are "iscsi" and "paravirtualized".
     */
    public readonly attachmentType!: pulumi.Output<string>;
    /**
     * The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
     */
    public /*out*/ readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the "CHAP password".)
     */
    public /*out*/ readonly chapSecret!: pulumi.Output<string>;
    /**
     * The volume's system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.<unique_ID>`
     */
    public /*out*/ readonly chapUsername!: pulumi.Output<string>;
    /**
     * The OCID of the compartment.
     *
     * @deprecated The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
     */
    public readonly device!: pulumi.Output<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     */
    public readonly encryptionInTransitType!: pulumi.Output<string>;
    /**
     * The OCID of the instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The volume's iSCSI IP address.  Example: `169.254.2.2`
     */
    public /*out*/ readonly ipv4!: pulumi.Output<string>;
    /**
     * The target volume's iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     */
    public /*out*/ readonly iqn!: pulumi.Output<string>;
    /**
     * Whether to enable Oracle Cloud Agent to perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
     */
    public readonly isAgentAutoIscsiLoginEnabled!: pulumi.Output<boolean>;
    /**
     * Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
     */
    public /*out*/ readonly isMultipath!: pulumi.Output<boolean>;
    /**
     * Whether to enable in-transit encryption for the data volume's paravirtualized attachment. The default value is false.
     */
    public readonly isPvEncryptionInTransitEnabled!: pulumi.Output<boolean>;
    /**
     * Whether the attachment was created in read-only mode.
     */
    public readonly isReadOnly!: pulumi.Output<boolean>;
    /**
     * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     */
    public readonly isShareable!: pulumi.Output<boolean>;
    /**
     * The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
     */
    public /*out*/ readonly iscsiLoginState!: pulumi.Output<string>;
    /**
     * A list of secondary multipath devices
     */
    public /*out*/ readonly multipathDevices!: pulumi.Output<outputs.Core.VolumeAttachmentMultipathDevice[]>;
    /**
     * The volume's iSCSI port, usually port 860 or 3260.  Example: `3260`
     */
    public /*out*/ readonly port!: pulumi.Output<number>;
    /**
     * The current state of the volume attachment.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * Whether to use CHAP authentication for the volume attachment. Defaults to false.
     */
    public readonly useChap!: pulumi.Output<boolean>;
    /**
     * The OCID of the volume.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly volumeId!: pulumi.Output<string>;

    /**
     * Create a VolumeAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VolumeAttachmentArgs | VolumeAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VolumeAttachmentState | undefined;
            resourceInputs["attachmentType"] = state ? state.attachmentType : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["chapSecret"] = state ? state.chapSecret : undefined;
            resourceInputs["chapUsername"] = state ? state.chapUsername : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["encryptionInTransitType"] = state ? state.encryptionInTransitType : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["ipv4"] = state ? state.ipv4 : undefined;
            resourceInputs["iqn"] = state ? state.iqn : undefined;
            resourceInputs["isAgentAutoIscsiLoginEnabled"] = state ? state.isAgentAutoIscsiLoginEnabled : undefined;
            resourceInputs["isMultipath"] = state ? state.isMultipath : undefined;
            resourceInputs["isPvEncryptionInTransitEnabled"] = state ? state.isPvEncryptionInTransitEnabled : undefined;
            resourceInputs["isReadOnly"] = state ? state.isReadOnly : undefined;
            resourceInputs["isShareable"] = state ? state.isShareable : undefined;
            resourceInputs["iscsiLoginState"] = state ? state.iscsiLoginState : undefined;
            resourceInputs["multipathDevices"] = state ? state.multipathDevices : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["useChap"] = state ? state.useChap : undefined;
            resourceInputs["volumeId"] = state ? state.volumeId : undefined;
        } else {
            const args = argsOrState as VolumeAttachmentArgs | undefined;
            if ((!args || args.attachmentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'attachmentType'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.volumeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'volumeId'");
            }
            resourceInputs["attachmentType"] = args ? args.attachmentType : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["encryptionInTransitType"] = args ? args.encryptionInTransitType : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["isAgentAutoIscsiLoginEnabled"] = args ? args.isAgentAutoIscsiLoginEnabled : undefined;
            resourceInputs["isPvEncryptionInTransitEnabled"] = args ? args.isPvEncryptionInTransitEnabled : undefined;
            resourceInputs["isReadOnly"] = args ? args.isReadOnly : undefined;
            resourceInputs["isShareable"] = args ? args.isShareable : undefined;
            resourceInputs["useChap"] = args ? args.useChap : undefined;
            resourceInputs["volumeId"] = args ? args.volumeId : undefined;
            resourceInputs["availabilityDomain"] = undefined /*out*/;
            resourceInputs["chapSecret"] = undefined /*out*/;
            resourceInputs["chapUsername"] = undefined /*out*/;
            resourceInputs["ipv4"] = undefined /*out*/;
            resourceInputs["iqn"] = undefined /*out*/;
            resourceInputs["isMultipath"] = undefined /*out*/;
            resourceInputs["iscsiLoginState"] = undefined /*out*/;
            resourceInputs["multipathDevices"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VolumeAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VolumeAttachment resources.
 */
export interface VolumeAttachmentState {
    /**
     * The type of volume. The only supported values are "iscsi" and "paravirtualized".
     */
    attachmentType?: pulumi.Input<string>;
    /**
     * The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the "CHAP password".)
     */
    chapSecret?: pulumi.Input<string>;
    /**
     * The volume's system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.<unique_ID>`
     */
    chapUsername?: pulumi.Input<string>;
    /**
     * The OCID of the compartment.
     *
     * @deprecated The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
     */
    device?: pulumi.Input<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     */
    encryptionInTransitType?: pulumi.Input<string>;
    /**
     * The OCID of the instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The volume's iSCSI IP address.  Example: `169.254.2.2`
     */
    ipv4?: pulumi.Input<string>;
    /**
     * The target volume's iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     */
    iqn?: pulumi.Input<string>;
    /**
     * Whether to enable Oracle Cloud Agent to perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
     */
    isAgentAutoIscsiLoginEnabled?: pulumi.Input<boolean>;
    /**
     * Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
     */
    isMultipath?: pulumi.Input<boolean>;
    /**
     * Whether to enable in-transit encryption for the data volume's paravirtualized attachment. The default value is false.
     */
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    /**
     * Whether the attachment was created in read-only mode.
     */
    isReadOnly?: pulumi.Input<boolean>;
    /**
     * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     */
    isShareable?: pulumi.Input<boolean>;
    /**
     * The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
     */
    iscsiLoginState?: pulumi.Input<string>;
    /**
     * A list of secondary multipath devices
     */
    multipathDevices?: pulumi.Input<pulumi.Input<inputs.Core.VolumeAttachmentMultipathDevice>[]>;
    /**
     * The volume's iSCSI port, usually port 860 or 3260.  Example: `3260`
     */
    port?: pulumi.Input<number>;
    /**
     * The current state of the volume attachment.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Whether to use CHAP authentication for the volume attachment. Defaults to false.
     */
    useChap?: pulumi.Input<boolean>;
    /**
     * The OCID of the volume.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    volumeId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VolumeAttachment resource.
 */
export interface VolumeAttachmentArgs {
    /**
     * The type of volume. The only supported values are "iscsi" and "paravirtualized".
     */
    attachmentType: pulumi.Input<string>;
    /**
     * The OCID of the compartment.
     *
     * @deprecated The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
     */
    device?: pulumi.Input<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     */
    encryptionInTransitType?: pulumi.Input<string>;
    /**
     * The OCID of the instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Whether to enable Oracle Cloud Agent to perform the iSCSI login and logout commands after the volume attach or detach operations for non multipath-enabled iSCSI attachments.
     */
    isAgentAutoIscsiLoginEnabled?: pulumi.Input<boolean>;
    /**
     * Whether to enable in-transit encryption for the data volume's paravirtualized attachment. The default value is false.
     */
    isPvEncryptionInTransitEnabled?: pulumi.Input<boolean>;
    /**
     * Whether the attachment was created in read-only mode.
     */
    isReadOnly?: pulumi.Input<boolean>;
    /**
     * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     */
    isShareable?: pulumi.Input<boolean>;
    /**
     * Whether to use CHAP authentication for the volume attachment. Defaults to false.
     */
    useChap?: pulumi.Input<boolean>;
    /**
     * The OCID of the volume.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    volumeId: pulumi.Input<string>;
}
