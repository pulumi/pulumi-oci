// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Volume Backup resource in Oracle Cloud Infrastructure Core service.
 *
 * Creates a new backup of the specified volume. For general information about volume backups,
 * see [Overview of Block Volume Service Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumebackups.htm)
 *
 * When the request is received, the backup object is in a REQUEST_RECEIVED state.
 * When the data is imaged, it goes into a CREATING state.
 * After the backup is fully uploaded to the cloud, it goes into an AVAILABLE state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVolumeBackup = new oci.core.VolumeBackup("test_volume_backup", {
 *     volumeId: testVolume.id,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     displayName: volumeBackupDisplayName,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     kmsKeyId: testKey.id,
 *     type: volumeBackupType,
 * });
 * ```
 *
 * ## Import
 *
 * VolumeBackups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Core/volumeBackup:VolumeBackup test_volume_backup "id"
 * ```
 */
export class VolumeBackup extends pulumi.CustomResource {
    /**
     * Get an existing VolumeBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VolumeBackupState, opts?: pulumi.CustomResourceOptions): VolumeBackup {
        return new VolumeBackup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Core/volumeBackup:VolumeBackup';

    /**
     * Returns true if the given object is an instance of VolumeBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VolumeBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VolumeBackup.__pulumiType;
    }

    /**
     * (Updatable) The OCID of the compartment that contains the volume backup.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     */
    declare public /*out*/ readonly expirationTime: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    declare public readonly kmsKeyId: pulumi.Output<string>;
    /**
     * The size of the volume, in GBs.
     */
    declare public /*out*/ readonly sizeInGbs: pulumi.Output<string>;
    /**
     * The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
     *
     * @deprecated The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
     */
    declare public /*out*/ readonly sizeInMbs: pulumi.Output<string>;
    /**
     * Details of the volume backup source in the cloud.
     */
    declare public readonly sourceDetails: pulumi.Output<outputs.Core.VolumeBackupSourceDetails | undefined>;
    /**
     * Specifies whether the backup was created manually, or via scheduled backup policy.
     */
    declare public /*out*/ readonly sourceType: pulumi.Output<string>;
    /**
     * The OCID of the source volume backup.
     */
    declare public /*out*/ readonly sourceVolumeBackupId: pulumi.Output<string>;
    /**
     * The current state of a volume backup.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
     */
    declare public /*out*/ readonly timeRequestReceived: pulumi.Output<string>;
    /**
     * The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
     */
    declare public /*out*/ readonly uniqueSizeInGbs: pulumi.Output<string>;
    /**
     * The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
     *
     * @deprecated The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead.
     */
    declare public /*out*/ readonly uniqueSizeInMbs: pulumi.Output<string>;
    /**
     * The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
     */
    declare public readonly volumeId: pulumi.Output<string>;

    /**
     * Create a VolumeBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VolumeBackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VolumeBackupArgs | VolumeBackupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VolumeBackupState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["expirationTime"] = state?.expirationTime;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["kmsKeyId"] = state?.kmsKeyId;
            resourceInputs["sizeInGbs"] = state?.sizeInGbs;
            resourceInputs["sizeInMbs"] = state?.sizeInMbs;
            resourceInputs["sourceDetails"] = state?.sourceDetails;
            resourceInputs["sourceType"] = state?.sourceType;
            resourceInputs["sourceVolumeBackupId"] = state?.sourceVolumeBackupId;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeRequestReceived"] = state?.timeRequestReceived;
            resourceInputs["type"] = state?.type;
            resourceInputs["uniqueSizeInGbs"] = state?.uniqueSizeInGbs;
            resourceInputs["uniqueSizeInMbs"] = state?.uniqueSizeInMbs;
            resourceInputs["volumeId"] = state?.volumeId;
        } else {
            const args = argsOrState as VolumeBackupArgs | undefined;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["kmsKeyId"] = args?.kmsKeyId;
            resourceInputs["sourceDetails"] = args?.sourceDetails;
            resourceInputs["type"] = args?.type;
            resourceInputs["volumeId"] = args?.volumeId;
            resourceInputs["expirationTime"] = undefined /*out*/;
            resourceInputs["sizeInGbs"] = undefined /*out*/;
            resourceInputs["sizeInMbs"] = undefined /*out*/;
            resourceInputs["sourceType"] = undefined /*out*/;
            resourceInputs["sourceVolumeBackupId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeRequestReceived"] = undefined /*out*/;
            resourceInputs["uniqueSizeInGbs"] = undefined /*out*/;
            resourceInputs["uniqueSizeInMbs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VolumeBackup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VolumeBackup resources.
 */
export interface VolumeBackupState {
    /**
     * (Updatable) The OCID of the compartment that contains the volume backup.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     */
    expirationTime?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The size of the volume, in GBs.
     */
    sizeInGbs?: pulumi.Input<string>;
    /**
     * The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `sizeInGbs`.
     *
     * @deprecated The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead.
     */
    sizeInMbs?: pulumi.Input<string>;
    /**
     * Details of the volume backup source in the cloud.
     */
    sourceDetails?: pulumi.Input<inputs.Core.VolumeBackupSourceDetails>;
    /**
     * Specifies whether the backup was created manually, or via scheduled backup policy.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * The OCID of the source volume backup.
     */
    sourceVolumeBackupId?: pulumi.Input<string>;
    /**
     * The current state of a volume backup.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
     */
    timeRequestReceived?: pulumi.Input<string>;
    /**
     * The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
     */
    type?: pulumi.Input<string>;
    /**
     * The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
     */
    uniqueSizeInGbs?: pulumi.Input<string>;
    /**
     * The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
     *
     * @deprecated The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead.
     */
    uniqueSizeInMbs?: pulumi.Input<string>;
    /**
     * The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
     */
    volumeId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VolumeBackup resource.
 */
export interface VolumeBackupArgs {
    /**
     * (Updatable) The OCID of the compartment that contains the volume backup.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The OCID of the Vault service key which is the master encryption key for the volume backup. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * Details of the volume backup source in the cloud.
     */
    sourceDetails?: pulumi.Input<inputs.Core.VolumeBackupSourceDetails>;
    /**
     * The type of backup to create. If omitted, defaults to INCREMENTAL. Supported values are 'FULL' or 'INCREMENTAL'.
     */
    type?: pulumi.Input<string>;
    /**
     * The OCID of the volume that needs to be backed up.**Note: To create the resource either `volumeId` or `sourceDetails` is required to be set.
     */
    volumeId?: pulumi.Input<string>;
}
