// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVolumeGroup = new oci.core.VolumeGroup("test_volume_group", {
 *     availabilityDomain: volumeGroupAvailabilityDomain,
 *     compartmentId: compartmentId,
 *     sourceDetails: {
 *         type: "volumeIds",
 *         volumeIds: [volumeGroupSourceId],
 *     },
 *     backupPolicyId: testVolumeBackupPolicies.volumeBackupPolicies[0].id,
 *     clusterPlacementGroupId: testGroup.id,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     displayName: volumeGroupDisplayName,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     volumeGroupReplicas: [{
 *         availabilityDomain: volumeGroupVolumeGroupReplicasAvailabilityDomain,
 *         displayName: volumeGroupVolumeGroupReplicasDisplayName,
 *         xrrKmsKeyId: testKey.id,
 *     }],
 *     volumeIds: [volumeGroupSourceId],
 *     xrcKmsKeyId: testKey.id,
 * });
 * ```
 *
 * ## Import
 *
 * VolumeGroups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Core/volumeGroup:VolumeGroup test_volume_group "id"
 * ```
 */
export class VolumeGroup extends pulumi.CustomResource {
    /**
     * Get an existing VolumeGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VolumeGroupState, opts?: pulumi.CustomResourceOptions): VolumeGroup {
        return new VolumeGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Core/volumeGroup:VolumeGroup';

    /**
     * Returns true if the given object is an instance of VolumeGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VolumeGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VolumeGroup.__pulumiType;
    }

    /**
     * The availability domain of the volume group.
     */
    declare public readonly availabilityDomain: pulumi.Output<string>;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `oci.Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
     *
     * @deprecated The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
     */
    declare public readonly backupPolicyId: pulumi.Output<string>;
    /**
     * The clusterPlacementGroup Id of the volume group for volume group placement.
     */
    declare public readonly clusterPlacementGroupId: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the compartment that contains the volume group.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
     */
    declare public /*out*/ readonly isHydrated: pulumi.Output<boolean>;
    declare public readonly preserveVolumeReplica: pulumi.Output<boolean | undefined>;
    /**
     * The aggregate size of the volume group in GBs.
     */
    declare public /*out*/ readonly sizeInGbs: pulumi.Output<string>;
    /**
     * The aggregate size of the volume group in MBs.
     */
    declare public /*out*/ readonly sizeInMbs: pulumi.Output<string>;
    /**
     * Specifies the source for a volume group.
     */
    declare public readonly sourceDetails: pulumi.Output<outputs.Core.VolumeGroupSourceDetails>;
    /**
     * The current state of a volume group.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
     */
    declare public readonly volumeGroupReplicas: pulumi.Output<outputs.Core.VolumeGroupVolumeGroupReplica[]>;
    declare public readonly volumeGroupReplicasDeletion: pulumi.Output<boolean | undefined>;
    /**
     * (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly volumeIds: pulumi.Output<string[]>;
    /**
     * The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    declare public readonly xrcKmsKeyId: pulumi.Output<string>;

    /**
     * Create a VolumeGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VolumeGroupArgs | VolumeGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VolumeGroupState | undefined;
            resourceInputs["availabilityDomain"] = state?.availabilityDomain;
            resourceInputs["backupPolicyId"] = state?.backupPolicyId;
            resourceInputs["clusterPlacementGroupId"] = state?.clusterPlacementGroupId;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["isHydrated"] = state?.isHydrated;
            resourceInputs["preserveVolumeReplica"] = state?.preserveVolumeReplica;
            resourceInputs["sizeInGbs"] = state?.sizeInGbs;
            resourceInputs["sizeInMbs"] = state?.sizeInMbs;
            resourceInputs["sourceDetails"] = state?.sourceDetails;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["volumeGroupReplicas"] = state?.volumeGroupReplicas;
            resourceInputs["volumeGroupReplicasDeletion"] = state?.volumeGroupReplicasDeletion;
            resourceInputs["volumeIds"] = state?.volumeIds;
            resourceInputs["xrcKmsKeyId"] = state?.xrcKmsKeyId;
        } else {
            const args = argsOrState as VolumeGroupArgs | undefined;
            if (args?.availabilityDomain === undefined && !opts.urn) {
                throw new Error("Missing required property 'availabilityDomain'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.sourceDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceDetails'");
            }
            resourceInputs["availabilityDomain"] = args?.availabilityDomain;
            resourceInputs["backupPolicyId"] = args?.backupPolicyId;
            resourceInputs["clusterPlacementGroupId"] = args?.clusterPlacementGroupId;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["preserveVolumeReplica"] = args?.preserveVolumeReplica;
            resourceInputs["sourceDetails"] = args?.sourceDetails;
            resourceInputs["volumeGroupReplicas"] = args?.volumeGroupReplicas;
            resourceInputs["volumeGroupReplicasDeletion"] = args?.volumeGroupReplicasDeletion;
            resourceInputs["volumeIds"] = args?.volumeIds;
            resourceInputs["xrcKmsKeyId"] = args?.xrcKmsKeyId;
            resourceInputs["isHydrated"] = undefined /*out*/;
            resourceInputs["sizeInGbs"] = undefined /*out*/;
            resourceInputs["sizeInMbs"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VolumeGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VolumeGroup resources.
 */
export interface VolumeGroupState {
    /**
     * The availability domain of the volume group.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `oci.Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
     *
     * @deprecated The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
     */
    backupPolicyId?: pulumi.Input<string>;
    /**
     * The clusterPlacementGroup Id of the volume group for volume group placement.
     */
    clusterPlacementGroupId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment that contains the volume group.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether the newly created cloned volume group's data has finished copying from the source volume group or backup.
     */
    isHydrated?: pulumi.Input<boolean>;
    preserveVolumeReplica?: pulumi.Input<boolean>;
    /**
     * The aggregate size of the volume group in GBs.
     */
    sizeInGbs?: pulumi.Input<string>;
    /**
     * The aggregate size of the volume group in MBs.
     */
    sizeInMbs?: pulumi.Input<string>;
    /**
     * Specifies the source for a volume group.
     */
    sourceDetails?: pulumi.Input<inputs.Core.VolumeGroupSourceDetails>;
    /**
     * The current state of a volume group.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the volume group was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
     */
    volumeGroupReplicas?: pulumi.Input<pulumi.Input<inputs.Core.VolumeGroupVolumeGroupReplica>[]>;
    volumeGroupReplicasDeletion?: pulumi.Input<boolean>;
    /**
     * (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    volumeIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    xrcKmsKeyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VolumeGroup resource.
 */
export interface VolumeGroupArgs {
    /**
     * The availability domain of the volume group.
     */
    availabilityDomain: pulumi.Input<string>;
    /**
     * If provided, specifies the ID of the volume backup policy to assign to the newly created volume group. If omitted, no policy will be assigned. This field is deprecated. Use the `oci.Core.getVolumeBackupPolicyAssignments` instead to assign a backup policy to a volume group.
     *
     * @deprecated The 'backup_policy_id' field has been deprecated. Please use the 'oci_core_volume_backup_policy_assignment' resource instead.
     */
    backupPolicyId?: pulumi.Input<string>;
    /**
     * The clusterPlacementGroup Id of the volume group for volume group placement.
     */
    clusterPlacementGroupId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment that contains the volume group.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    preserveVolumeReplica?: pulumi.Input<boolean>;
    /**
     * Specifies the source for a volume group.
     */
    sourceDetails: pulumi.Input<inputs.Core.VolumeGroupSourceDetails>;
    /**
     * (Updatable) The list of volume group replicas that this volume group will be enabled to have in the specified destination availability domains.
     */
    volumeGroupReplicas?: pulumi.Input<pulumi.Input<inputs.Core.VolumeGroupVolumeGroupReplica>[]>;
    volumeGroupReplicasDeletion?: pulumi.Input<boolean>;
    /**
     * (Updatable) Use this for update operation only. This field is not supported during creation. For create use `volumeIds` under `sourceDetails`.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    volumeIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OCID of the Vault service key which is the master encryption key for the volume's cross region backups, which will be used in the destination region to encrypt the backup's encryption keys. For more information about the Vault service and encryption keys, see [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     */
    xrcKmsKeyId?: pulumi.Input<string>;
}
