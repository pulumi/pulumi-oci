// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Autonomous Container Database Dataguard Association Operation resource in Oracle Cloud Infrastructure Database service.
 *
 * Perform a new Autonomous Container Database Dataguard Association Operation on an Autonomous Container Database that has Dataguard enabled
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const switchover = new oci.database.AutonomousContainerDatabaseDataguardAssociationOperation("switchover", {
 *     operation: "switchover",
 *     autonomousContainerDatabaseId: data.oci_database_autonomous_container_database_dataguard_associations.dataguard_associations.autonomous_container_database_dataguard_associations[0].autonomous_container_database_id,
 *     autonomousContainerDatabaseDataguardAssociationId: data.oci_database_autonomous_container_database_dataguard_associations.dataguard_associations.autonomous_container_database_dataguard_associations[0].id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * AutonomousContainerDatabaseDataguardAssociationOperation does not support import.
 */
export class AutonomousContainerDatabaseDataguardAssociationOperation extends pulumi.CustomResource {
    /**
     * Get an existing AutonomousContainerDatabaseDataguardAssociationOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutonomousContainerDatabaseDataguardAssociationOperationState, opts?: pulumi.CustomResourceOptions): AutonomousContainerDatabaseDataguardAssociationOperation {
        return new AutonomousContainerDatabaseDataguardAssociationOperation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/autonomousContainerDatabaseDataguardAssociationOperation:AutonomousContainerDatabaseDataguardAssociationOperation';

    /**
     * Returns true if the given object is an instance of AutonomousContainerDatabaseDataguardAssociationOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutonomousContainerDatabaseDataguardAssociationOperation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutonomousContainerDatabaseDataguardAssociationOperation.__pulumiType;
    }

    /**
     * The Autonomous Container Database Dataguard Association [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). This attribute is a forcenew attribute.
     */
    public readonly autonomousContainerDatabaseDataguardAssociationId!: pulumi.Output<string>;
    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). This attribute is a forcenew attribute.
     */
    public readonly autonomousContainerDatabaseId!: pulumi.Output<string>;
    /**
     * There are three type of supported operations `switchover`, `failover`, `reinstate`. `switchover` can only be used for primary database while `failover` and `reinstate` can only be used for standby database. This attribute is a forcenew attribute.
     */
    public readonly operation!: pulumi.Output<string>;

    /**
     * Create a AutonomousContainerDatabaseDataguardAssociationOperation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutonomousContainerDatabaseDataguardAssociationOperationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutonomousContainerDatabaseDataguardAssociationOperationArgs | AutonomousContainerDatabaseDataguardAssociationOperationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutonomousContainerDatabaseDataguardAssociationOperationState | undefined;
            resourceInputs["autonomousContainerDatabaseDataguardAssociationId"] = state ? state.autonomousContainerDatabaseDataguardAssociationId : undefined;
            resourceInputs["autonomousContainerDatabaseId"] = state ? state.autonomousContainerDatabaseId : undefined;
            resourceInputs["operation"] = state ? state.operation : undefined;
        } else {
            const args = argsOrState as AutonomousContainerDatabaseDataguardAssociationOperationArgs | undefined;
            if ((!args || args.autonomousContainerDatabaseDataguardAssociationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autonomousContainerDatabaseDataguardAssociationId'");
            }
            if ((!args || args.autonomousContainerDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autonomousContainerDatabaseId'");
            }
            if ((!args || args.operation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operation'");
            }
            resourceInputs["autonomousContainerDatabaseDataguardAssociationId"] = args ? args.autonomousContainerDatabaseDataguardAssociationId : undefined;
            resourceInputs["autonomousContainerDatabaseId"] = args ? args.autonomousContainerDatabaseId : undefined;
            resourceInputs["operation"] = args ? args.operation : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AutonomousContainerDatabaseDataguardAssociationOperation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AutonomousContainerDatabaseDataguardAssociationOperation resources.
 */
export interface AutonomousContainerDatabaseDataguardAssociationOperationState {
    /**
     * The Autonomous Container Database Dataguard Association [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). This attribute is a forcenew attribute.
     */
    autonomousContainerDatabaseDataguardAssociationId?: pulumi.Input<string>;
    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). This attribute is a forcenew attribute.
     */
    autonomousContainerDatabaseId?: pulumi.Input<string>;
    /**
     * There are three type of supported operations `switchover`, `failover`, `reinstate`. `switchover` can only be used for primary database while `failover` and `reinstate` can only be used for standby database. This attribute is a forcenew attribute.
     */
    operation?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutonomousContainerDatabaseDataguardAssociationOperation resource.
 */
export interface AutonomousContainerDatabaseDataguardAssociationOperationArgs {
    /**
     * The Autonomous Container Database Dataguard Association [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). This attribute is a forcenew attribute.
     */
    autonomousContainerDatabaseDataguardAssociationId: pulumi.Input<string>;
    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). This attribute is a forcenew attribute.
     */
    autonomousContainerDatabaseId: pulumi.Input<string>;
    /**
     * There are three type of supported operations `switchover`, `failover`, `reinstate`. `switchover` can only be used for primary database while `failover` and `reinstate` can only be used for standby database. This attribute is a forcenew attribute.
     */
    operation: pulumi.Input<string>;
}
