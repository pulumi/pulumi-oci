// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Backup resource in Oracle Cloud Infrastructure Database service.
 *
 * Creates a new backup in the specified database based on the request parameters you provide. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBackup = new oci.database.Backup("test_backup", {
 *     databaseId: testDatabase.id,
 *     displayName: backupDisplayName,
 * });
 * ```
 *
 * ## Import
 *
 * Backups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Database/backup:Backup test_backup "id"
 * ```
 */
export class Backup extends pulumi.CustomResource {
    /**
     * Get an existing Backup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupState, opts?: pulumi.CustomResourceOptions): Backup {
        return new Backup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/backup:Backup';

    /**
     * Returns true if the given object is an instance of Backup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Backup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Backup.__pulumiType;
    }

    /**
     * The name of the availability domain where the database backup is stored.
     */
    public /*out*/ readonly availabilityDomain!: pulumi.Output<string>;
    public /*out*/ readonly backupDestinationType!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * The Oracle Database Edition that applies to all the databases on the DB system. Exadata DB systems and 2-node RAC DB systems require ENTERPRISE_EDITION_EXTREME_PERFORMANCE.
     */
    public /*out*/ readonly databaseEdition!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    public readonly databaseId!: pulumi.Output<string>;
    /**
     * The size of the database in gigabytes at the time the backup was taken.
     */
    public /*out*/ readonly databaseSizeInGbs!: pulumi.Output<number>;
    /**
     * The user-friendly name for the backup. The name does not have to be unique.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Types of providers supported for managing database encryption keys
     */
    public /*out*/ readonly encryptionKeyLocationDetails!: pulumi.Output<outputs.Database.BackupEncryptionKeyLocationDetail[]>;
    public /*out*/ readonly isUsingOracleManagedKeys!: pulumi.Output<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
     */
    public /*out*/ readonly keyStoreId!: pulumi.Output<string>;
    /**
     * The wallet name for Oracle Key Vault.
     */
    public /*out*/ readonly keyStoreWalletName!: pulumi.Output<string>;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    public /*out*/ readonly kmsKeyId!: pulumi.Output<string>;
    /**
     * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
     */
    public /*out*/ readonly kmsKeyVersionId!: pulumi.Output<string>;
    /**
     * Additional information about the current lifecycle state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly retentionPeriodInDays!: pulumi.Output<number>;
    public readonly retentionPeriodInYears!: pulumi.Output<number>;
    public /*out*/ readonly secondaryKmsKeyIds!: pulumi.Output<string[]>;
    /**
     * Shape of the backup's source database.
     */
    public /*out*/ readonly shape!: pulumi.Output<string>;
    /**
     * The current state of the backup.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the backup was completed.
     */
    public /*out*/ readonly timeEnded!: pulumi.Output<string>;
    public /*out*/ readonly timeExpiryScheduled!: pulumi.Output<string>;
    /**
     * The date and time the backup started.
     */
    public /*out*/ readonly timeStarted!: pulumi.Output<string>;
    /**
     * The type of backup.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
     */
    public /*out*/ readonly vaultId!: pulumi.Output<string>;
    /**
     * Version of the backup's source database
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a Backup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupArgs | BackupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupState | undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["backupDestinationType"] = state ? state.backupDestinationType : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["databaseEdition"] = state ? state.databaseEdition : undefined;
            resourceInputs["databaseId"] = state ? state.databaseId : undefined;
            resourceInputs["databaseSizeInGbs"] = state ? state.databaseSizeInGbs : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["encryptionKeyLocationDetails"] = state ? state.encryptionKeyLocationDetails : undefined;
            resourceInputs["isUsingOracleManagedKeys"] = state ? state.isUsingOracleManagedKeys : undefined;
            resourceInputs["keyStoreId"] = state ? state.keyStoreId : undefined;
            resourceInputs["keyStoreWalletName"] = state ? state.keyStoreWalletName : undefined;
            resourceInputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            resourceInputs["kmsKeyVersionId"] = state ? state.kmsKeyVersionId : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["retentionPeriodInDays"] = state ? state.retentionPeriodInDays : undefined;
            resourceInputs["retentionPeriodInYears"] = state ? state.retentionPeriodInYears : undefined;
            resourceInputs["secondaryKmsKeyIds"] = state ? state.secondaryKmsKeyIds : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeEnded"] = state ? state.timeEnded : undefined;
            resourceInputs["timeExpiryScheduled"] = state ? state.timeExpiryScheduled : undefined;
            resourceInputs["timeStarted"] = state ? state.timeStarted : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vaultId"] = state ? state.vaultId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as BackupArgs | undefined;
            if ((!args || args.databaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["databaseId"] = args ? args.databaseId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["retentionPeriodInDays"] = args ? args.retentionPeriodInDays : undefined;
            resourceInputs["retentionPeriodInYears"] = args ? args.retentionPeriodInYears : undefined;
            resourceInputs["availabilityDomain"] = undefined /*out*/;
            resourceInputs["backupDestinationType"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["databaseEdition"] = undefined /*out*/;
            resourceInputs["databaseSizeInGbs"] = undefined /*out*/;
            resourceInputs["encryptionKeyLocationDetails"] = undefined /*out*/;
            resourceInputs["isUsingOracleManagedKeys"] = undefined /*out*/;
            resourceInputs["keyStoreId"] = undefined /*out*/;
            resourceInputs["keyStoreWalletName"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["kmsKeyVersionId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["secondaryKmsKeyIds"] = undefined /*out*/;
            resourceInputs["shape"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeEnded"] = undefined /*out*/;
            resourceInputs["timeExpiryScheduled"] = undefined /*out*/;
            resourceInputs["timeStarted"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["vaultId"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Backup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Backup resources.
 */
export interface BackupState {
    /**
     * The name of the availability domain where the database backup is stored.
     */
    availabilityDomain?: pulumi.Input<string>;
    backupDestinationType?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The Oracle Database Edition that applies to all the databases on the DB system. Exadata DB systems and 2-node RAC DB systems require ENTERPRISE_EDITION_EXTREME_PERFORMANCE.
     */
    databaseEdition?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * The size of the database in gigabytes at the time the backup was taken.
     */
    databaseSizeInGbs?: pulumi.Input<number>;
    /**
     * The user-friendly name for the backup. The name does not have to be unique.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    displayName?: pulumi.Input<string>;
    /**
     * Types of providers supported for managing database encryption keys
     */
    encryptionKeyLocationDetails?: pulumi.Input<pulumi.Input<inputs.Database.BackupEncryptionKeyLocationDetail>[]>;
    isUsingOracleManagedKeys?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
     */
    keyStoreId?: pulumi.Input<string>;
    /**
     * The wallet name for Oracle Key Vault.
     */
    keyStoreWalletName?: pulumi.Input<string>;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
     */
    kmsKeyVersionId?: pulumi.Input<string>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    retentionPeriodInDays?: pulumi.Input<number>;
    retentionPeriodInYears?: pulumi.Input<number>;
    secondaryKmsKeyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Shape of the backup's source database.
     */
    shape?: pulumi.Input<string>;
    /**
     * The current state of the backup.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the backup was completed.
     */
    timeEnded?: pulumi.Input<string>;
    timeExpiryScheduled?: pulumi.Input<string>;
    /**
     * The date and time the backup started.
     */
    timeStarted?: pulumi.Input<string>;
    /**
     * The type of backup.
     */
    type?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
     */
    vaultId?: pulumi.Input<string>;
    /**
     * Version of the backup's source database
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Backup resource.
 */
export interface BackupArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     */
    databaseId: pulumi.Input<string>;
    /**
     * The user-friendly name for the backup. The name does not have to be unique.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    displayName: pulumi.Input<string>;
    retentionPeriodInDays?: pulumi.Input<number>;
    retentionPeriodInYears?: pulumi.Input<number>;
}
