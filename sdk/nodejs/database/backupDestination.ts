// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Backup Destination resource in Oracle Cloud Infrastructure Database service.
 *
 * Creates a backup destination in an Exadata Cloud@Customer system.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBackupDestination = new oci.database.BackupDestination("testBackupDestination", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.backup_destination_display_name,
 *     type: _var.backup_destination_type,
 *     connectionString: _var.backup_destination_connection_string,
 *     definedTags: _var.backup_destination_defined_tags,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     localMountPointPath: _var.backup_destination_local_mount_point_path,
 *     mountTypeDetails: {
 *         mountType: _var.backup_destination_mount_type_details_mount_type,
 *         localMountPointPath: _var.backup_destination_mount_type_details_local_mount_point_path,
 *         nfsServers: _var.backup_destination_mount_type_details_nfs_server,
 *         nfsServerExport: _var.backup_destination_mount_type_details_nfs_server_export,
 *     },
 *     vpcUsers: _var.backup_destination_vpc_users,
 * });
 * ```
 *
 * ## Import
 *
 * BackupDestinations can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Database/backupDestination:BackupDestination test_backup_destination "id"
 * ```
 */
export class BackupDestination extends pulumi.CustomResource {
    /**
     * Get an existing BackupDestination resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupDestinationState, opts?: pulumi.CustomResourceOptions): BackupDestination {
        return new BackupDestination(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/backupDestination:BackupDestination';

    /**
     * Returns true if the given object is an instance of BackupDestination.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupDestination {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupDestination.__pulumiType;
    }

    /**
     * List of databases associated with the backup destination.
     */
    public /*out*/ readonly associatedDatabases!: pulumi.Output<outputs.Database.BackupDestinationAssociatedDatabase[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The connection string for connecting to the Recovery Appliance.
     */
    public readonly connectionString!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The user-provided name of the backup destination.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * A descriptive text associated with the lifecycleState. Typically contains additional displayable text
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     *
     * @deprecated The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
     */
    public readonly localMountPointPath!: pulumi.Output<string>;
    /**
     * Mount type details for backup destination.
     */
    public readonly mountTypeDetails!: pulumi.Output<outputs.Database.BackupDestinationMountTypeDetails>;
    /**
     * NFS Mount type for backup destination.
     */
    public /*out*/ readonly nfsMountType!: pulumi.Output<string>;
    /**
     * Specifies the directory on which to mount the file system
     */
    public /*out*/ readonly nfsServerExport!: pulumi.Output<string>;
    /**
     * IP addresses for NFS Auto mount.
     */
    public /*out*/ readonly nfsServers!: pulumi.Output<string[]>;
    /**
     * The current lifecycle state of the backup destination.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the backup destination was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * Type of the backup destination.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * (Updatable) The Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly vpcUsers!: pulumi.Output<string[] | undefined>;

    /**
     * Create a BackupDestination resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupDestinationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupDestinationArgs | BackupDestinationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupDestinationState | undefined;
            resourceInputs["associatedDatabases"] = state ? state.associatedDatabases : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["localMountPointPath"] = state ? state.localMountPointPath : undefined;
            resourceInputs["mountTypeDetails"] = state ? state.mountTypeDetails : undefined;
            resourceInputs["nfsMountType"] = state ? state.nfsMountType : undefined;
            resourceInputs["nfsServerExport"] = state ? state.nfsServerExport : undefined;
            resourceInputs["nfsServers"] = state ? state.nfsServers : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vpcUsers"] = state ? state.vpcUsers : undefined;
        } else {
            const args = argsOrState as BackupDestinationArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["connectionString"] = args ? args.connectionString : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["localMountPointPath"] = args ? args.localMountPointPath : undefined;
            resourceInputs["mountTypeDetails"] = args ? args.mountTypeDetails : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vpcUsers"] = args ? args.vpcUsers : undefined;
            resourceInputs["associatedDatabases"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["nfsMountType"] = undefined /*out*/;
            resourceInputs["nfsServerExport"] = undefined /*out*/;
            resourceInputs["nfsServers"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupDestination.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BackupDestination resources.
 */
export interface BackupDestinationState {
    /**
     * List of databases associated with the backup destination.
     */
    associatedDatabases?: pulumi.Input<pulumi.Input<inputs.Database.BackupDestinationAssociatedDatabase>[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The connection string for connecting to the Recovery Appliance.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The user-provided name of the backup destination.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A descriptive text associated with the lifecycleState. Typically contains additional displayable text
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     *
     * @deprecated The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
     */
    localMountPointPath?: pulumi.Input<string>;
    /**
     * Mount type details for backup destination.
     */
    mountTypeDetails?: pulumi.Input<inputs.Database.BackupDestinationMountTypeDetails>;
    /**
     * NFS Mount type for backup destination.
     */
    nfsMountType?: pulumi.Input<string>;
    /**
     * Specifies the directory on which to mount the file system
     */
    nfsServerExport?: pulumi.Input<string>;
    /**
     * IP addresses for NFS Auto mount.
     */
    nfsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The current lifecycle state of the backup destination.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the backup destination was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Type of the backup destination.
     */
    type?: pulumi.Input<string>;
    /**
     * (Updatable) The Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    vpcUsers?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a BackupDestination resource.
 */
export interface BackupDestinationArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) The connection string for connecting to the Recovery Appliance.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The user-provided name of the backup destination.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     *
     * @deprecated The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead.
     */
    localMountPointPath?: pulumi.Input<string>;
    /**
     * Mount type details for backup destination.
     */
    mountTypeDetails?: pulumi.Input<inputs.Database.BackupDestinationMountTypeDetails>;
    /**
     * Type of the backup destination.
     */
    type: pulumi.Input<string>;
    /**
     * (Updatable) The Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    vpcUsers?: pulumi.Input<pulumi.Input<string>[]>;
}
