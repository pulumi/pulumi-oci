// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Cloud Vm Cluster Iorm Config resource in Oracle Cloud Infrastructure Database service.
 *
 * Updates IORM settings for the specified Cloud Vm Cluster.
 *
 * The [UpdateCloudVmClusterIormConfig](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/UpdateCloudVmClusterIormConfig/) API is used for Cloud Vm Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCloudVmClusterIormConfig = new oci.database.CloudVmClusterIormConfig("test_cloud_vm_cluster_iorm_config", {
 *     dbPlans: [{
 *         dbName: cloudVmClusterIormConfigDbPlansDbName,
 *         share: cloudVmClusterIormConfigDbPlansShare,
 *     }],
 *     cloudVmClusterId: testCloudVmCluster.id,
 *     objective: "AUTO",
 * });
 * ```
 *
 * ## Import
 *
 * CloudVmClusterIormConfigs can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Database/cloudVmClusterIormConfig:CloudVmClusterIormConfig test_cloud_vm_cluster_iorm_config "cloudVmClusters/{cloudVmClusterId}/CloudVmClusterIormConfig"
 * ```
 */
export class CloudVmClusterIormConfig extends pulumi.CustomResource {
    /**
     * Get an existing CloudVmClusterIormConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudVmClusterIormConfigState, opts?: pulumi.CustomResourceOptions): CloudVmClusterIormConfig {
        return new CloudVmClusterIormConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/cloudVmClusterIormConfig:CloudVmClusterIormConfig';

    /**
     * Returns true if the given object is an instance of CloudVmClusterIormConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudVmClusterIormConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudVmClusterIormConfig.__pulumiType;
    }

    /**
     * The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public readonly cloudVmClusterId: pulumi.Output<string>;
    /**
     * (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
     */
    declare public readonly dbPlans: pulumi.Output<outputs.Database.CloudVmClusterIormConfigDbPlan[]>;
    /**
     * Additional information about the current `lifecycleState`.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * (Updatable) Value for the IORM objective Default is "Auto"
     */
    declare public readonly objective: pulumi.Output<string>;
    /**
     * The current state of IORM configuration for the Exadata DB system.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;

    /**
     * Create a CloudVmClusterIormConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudVmClusterIormConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudVmClusterIormConfigArgs | CloudVmClusterIormConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudVmClusterIormConfigState | undefined;
            resourceInputs["cloudVmClusterId"] = state?.cloudVmClusterId;
            resourceInputs["dbPlans"] = state?.dbPlans;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["objective"] = state?.objective;
            resourceInputs["state"] = state?.state;
        } else {
            const args = argsOrState as CloudVmClusterIormConfigArgs | undefined;
            if (args?.cloudVmClusterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'cloudVmClusterId'");
            }
            if (args?.dbPlans === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbPlans'");
            }
            resourceInputs["cloudVmClusterId"] = args?.cloudVmClusterId;
            resourceInputs["dbPlans"] = args?.dbPlans;
            resourceInputs["objective"] = args?.objective;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudVmClusterIormConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudVmClusterIormConfig resources.
 */
export interface CloudVmClusterIormConfigState {
    /**
     * The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    cloudVmClusterId?: pulumi.Input<string>;
    /**
     * (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
     */
    dbPlans?: pulumi.Input<pulumi.Input<inputs.Database.CloudVmClusterIormConfigDbPlan>[]>;
    /**
     * Additional information about the current `lifecycleState`.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Value for the IORM objective Default is "Auto"
     */
    objective?: pulumi.Input<string>;
    /**
     * The current state of IORM configuration for the Exadata DB system.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudVmClusterIormConfig resource.
 */
export interface CloudVmClusterIormConfigArgs {
    /**
     * The Cluster [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    cloudVmClusterId: pulumi.Input<string>;
    /**
     * (Updatable) Array of IORM Setting for all the database in this Cloud Vm Cluster
     */
    dbPlans: pulumi.Input<pulumi.Input<inputs.Database.CloudVmClusterIormConfigDbPlan>[]>;
    /**
     * (Updatable) Value for the IORM objective Default is "Auto"
     */
    objective?: pulumi.Input<string>;
}
