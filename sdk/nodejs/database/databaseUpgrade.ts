// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Database Upgrade resource in Oracle Cloud Infrastructure Database service.
 *
 * Upgrades the specified Oracle Database instance.
 *
 * Database upgrade requires source to be `DB_VERSION` or `DB_SOFTWARE_IMAGE`.
 * 	`db_home.0.db_version` is updated to target DB version specified in the upgrade request.
 * 	To avoid a force new create of the dbHome on the next apply, add the following to the resource
 * 	```	lifecycle {
 * 	   	ignore_changes = [
 * 	   		db_home.0.db_version,
 * 	   	]
 * 	}
 * 	```
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseUpgrade = new oci.database.DatabaseUpgrade("test_database_upgrade", {
 *     action: databaseUpgradeAction,
 *     databaseId: testDatabase.id,
 *     databaseUpgradeSourceDetails: {
 *         databaseSoftwareImageId: testDatabaseSoftwareImage.id,
 *         dbHomeId: testDbHome.id,
 *         dbVersion: databaseUpgradeDatabaseUpgradeSourceDetailsDbVersion,
 *         options: databaseUpgradeDatabaseUpgradeSourceDetailsOptions,
 *         source: databaseUpgradeDatabaseUpgradeSourceDetailsSource,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class DatabaseUpgrade extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseUpgrade resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseUpgradeState, opts?: pulumi.CustomResourceOptions): DatabaseUpgrade {
        return new DatabaseUpgrade(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/databaseUpgrade:DatabaseUpgrade';

    /**
     * Returns true if the given object is an instance of DatabaseUpgrade.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseUpgrade {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseUpgrade.__pulumiType;
    }

    /**
     * The database upgrade action.
     */
    declare public readonly action: pulumi.Output<string>;
    /**
     * The character set for the database.
     */
    declare public /*out*/ readonly characterSet: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * The Connection strings used to connect to the Oracle Database.
     */
    declare public /*out*/ readonly connectionStrings: pulumi.Output<outputs.Database.DatabaseUpgradeConnectionString[]>;
    /**
     * Details of Data Guard setup that the given database is part of.  Also includes information about databases part of this Data Guard group and properties for their Data Guard configuration.
     */
    declare public /*out*/ readonly dataGuardGroups: pulumi.Output<outputs.Database.DatabaseUpgradeDataGuardGroup[]>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public readonly databaseId: pulumi.Output<string>;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    declare public /*out*/ readonly databaseSoftwareImageId: pulumi.Output<string>;
    /**
     * Details for the database upgrade source.
     */
    declare public readonly databaseUpgradeSourceDetails: pulumi.Output<outputs.Database.DatabaseUpgradeDatabaseUpgradeSourceDetails>;
    /**
     * Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     */
    declare public /*out*/ readonly dbBackupConfigs: pulumi.Output<outputs.Database.DatabaseUpgradeDbBackupConfig[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    declare public /*out*/ readonly dbHomeId: pulumi.Output<string>;
    /**
     * The database name.
     */
    declare public /*out*/ readonly dbName: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     */
    declare public /*out*/ readonly dbSystemId: pulumi.Output<string>;
    /**
     * A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
     */
    declare public /*out*/ readonly dbUniqueName: pulumi.Output<string>;
    /**
     * **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud@Customer, and Base Database Service. Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
     */
    declare public /*out*/ readonly dbWorkload: pulumi.Output<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public /*out*/ readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public /*out*/ readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * True if the database is a container database.
     */
    declare public /*out*/ readonly isCdb: pulumi.Output<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
     */
    declare public /*out*/ readonly keyStoreId: pulumi.Output<string>;
    /**
     * The wallet name for Oracle Key Vault.
     */
    declare public /*out*/ readonly keyStoreWalletName: pulumi.Output<string>;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    declare public /*out*/ readonly kmsKeyId: pulumi.Output<string>;
    /**
     * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
     */
    declare public /*out*/ readonly kmsKeyVersionId: pulumi.Output<string>;
    /**
     * The duration when the latest database backup created.
     */
    declare public /*out*/ readonly lastBackupDurationInSeconds: pulumi.Output<number>;
    /**
     * The date and time when the latest database backup was created.
     */
    declare public /*out*/ readonly lastBackupTimestamp: pulumi.Output<string>;
    /**
     * The date and time when the latest database backup failed.
     */
    declare public /*out*/ readonly lastFailedBackupTimestamp: pulumi.Output<string>;
    /**
     * Additional information about the current lifecycle state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The national character set for the database.
     */
    declare public /*out*/ readonly ncharacterSet: pulumi.Output<string>;
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     */
    declare public /*out*/ readonly pdbName: pulumi.Output<string>;
    /**
     * Specifies a prefix for the `Oracle SID` of the database to be created.
     */
    declare public /*out*/ readonly sidPrefix: pulumi.Output<string>;
    /**
     * Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    declare public /*out*/ readonly sourceDatabasePointInTimeRecoveryTimestamp: pulumi.Output<string>;
    /**
     * The current state of the database.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the database was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
     */
    declare public /*out*/ readonly vaultId: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     */
    declare public /*out*/ readonly vmClusterId: pulumi.Output<string>;

    /**
     * Create a DatabaseUpgrade resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseUpgradeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseUpgradeArgs | DatabaseUpgradeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseUpgradeState | undefined;
            resourceInputs["action"] = state?.action;
            resourceInputs["characterSet"] = state?.characterSet;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["connectionStrings"] = state?.connectionStrings;
            resourceInputs["dataGuardGroups"] = state?.dataGuardGroups;
            resourceInputs["databaseId"] = state?.databaseId;
            resourceInputs["databaseSoftwareImageId"] = state?.databaseSoftwareImageId;
            resourceInputs["databaseUpgradeSourceDetails"] = state?.databaseUpgradeSourceDetails;
            resourceInputs["dbBackupConfigs"] = state?.dbBackupConfigs;
            resourceInputs["dbHomeId"] = state?.dbHomeId;
            resourceInputs["dbName"] = state?.dbName;
            resourceInputs["dbSystemId"] = state?.dbSystemId;
            resourceInputs["dbUniqueName"] = state?.dbUniqueName;
            resourceInputs["dbWorkload"] = state?.dbWorkload;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["isCdb"] = state?.isCdb;
            resourceInputs["keyStoreId"] = state?.keyStoreId;
            resourceInputs["keyStoreWalletName"] = state?.keyStoreWalletName;
            resourceInputs["kmsKeyId"] = state?.kmsKeyId;
            resourceInputs["kmsKeyVersionId"] = state?.kmsKeyVersionId;
            resourceInputs["lastBackupDurationInSeconds"] = state?.lastBackupDurationInSeconds;
            resourceInputs["lastBackupTimestamp"] = state?.lastBackupTimestamp;
            resourceInputs["lastFailedBackupTimestamp"] = state?.lastFailedBackupTimestamp;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["ncharacterSet"] = state?.ncharacterSet;
            resourceInputs["pdbName"] = state?.pdbName;
            resourceInputs["sidPrefix"] = state?.sidPrefix;
            resourceInputs["sourceDatabasePointInTimeRecoveryTimestamp"] = state?.sourceDatabasePointInTimeRecoveryTimestamp;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["vaultId"] = state?.vaultId;
            resourceInputs["vmClusterId"] = state?.vmClusterId;
        } else {
            const args = argsOrState as DatabaseUpgradeArgs | undefined;
            if (args?.action === undefined && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if (args?.databaseId === undefined && !opts.urn) {
                throw new Error("Missing required property 'databaseId'");
            }
            resourceInputs["action"] = args?.action;
            resourceInputs["databaseId"] = args?.databaseId;
            resourceInputs["databaseUpgradeSourceDetails"] = args?.databaseUpgradeSourceDetails;
            resourceInputs["characterSet"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["connectionStrings"] = undefined /*out*/;
            resourceInputs["dataGuardGroups"] = undefined /*out*/;
            resourceInputs["databaseSoftwareImageId"] = undefined /*out*/;
            resourceInputs["dbBackupConfigs"] = undefined /*out*/;
            resourceInputs["dbHomeId"] = undefined /*out*/;
            resourceInputs["dbName"] = undefined /*out*/;
            resourceInputs["dbSystemId"] = undefined /*out*/;
            resourceInputs["dbUniqueName"] = undefined /*out*/;
            resourceInputs["dbWorkload"] = undefined /*out*/;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["isCdb"] = undefined /*out*/;
            resourceInputs["keyStoreId"] = undefined /*out*/;
            resourceInputs["keyStoreWalletName"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["kmsKeyVersionId"] = undefined /*out*/;
            resourceInputs["lastBackupDurationInSeconds"] = undefined /*out*/;
            resourceInputs["lastBackupTimestamp"] = undefined /*out*/;
            resourceInputs["lastFailedBackupTimestamp"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["ncharacterSet"] = undefined /*out*/;
            resourceInputs["pdbName"] = undefined /*out*/;
            resourceInputs["sidPrefix"] = undefined /*out*/;
            resourceInputs["sourceDatabasePointInTimeRecoveryTimestamp"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["vaultId"] = undefined /*out*/;
            resourceInputs["vmClusterId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseUpgrade.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseUpgrade resources.
 */
export interface DatabaseUpgradeState {
    /**
     * The database upgrade action.
     */
    action?: pulumi.Input<string>;
    /**
     * The character set for the database.
     */
    characterSet?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The Connection strings used to connect to the Oracle Database.
     */
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.Database.DatabaseUpgradeConnectionString>[]>;
    /**
     * Details of Data Guard setup that the given database is part of.  Also includes information about databases part of this Data Guard group and properties for their Data Guard configuration.
     */
    dataGuardGroups?: pulumi.Input<pulumi.Input<inputs.Database.DatabaseUpgradeDataGuardGroup>[]>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseId?: pulumi.Input<string>;
    /**
     * The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    databaseSoftwareImageId?: pulumi.Input<string>;
    /**
     * Details for the database upgrade source.
     */
    databaseUpgradeSourceDetails?: pulumi.Input<inputs.Database.DatabaseUpgradeDatabaseUpgradeSourceDetails>;
    /**
     * Backup Options To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized, talk to an administrator. If you're an administrator who needs to write policies to give users access, see [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
     */
    dbBackupConfigs?: pulumi.Input<pulumi.Input<inputs.Database.DatabaseUpgradeDbBackupConfig>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    dbHomeId?: pulumi.Input<string>;
    /**
     * The database name.
     */
    dbName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     */
    dbSystemId?: pulumi.Input<string>;
    /**
     * A system-generated name for the database to ensure uniqueness within an Oracle Data Guard group (a primary database and its standby databases). The unique name cannot be changed.
     */
    dbUniqueName?: pulumi.Input<string>;
    /**
     * **Deprecated.** The dbWorkload field has been deprecated for Exadata Database Service on Dedicated Infrastructure, Exadata Database Service on Cloud@Customer, and Base Database Service. Support for this attribute will end in November 2023. You may choose to update your custom scripts to exclude the dbWorkload attribute. After November 2023 if you pass a value to the dbWorkload attribute, it will be ignored.
     */
    dbWorkload?: pulumi.Input<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * True if the database is a container database.
     */
    isCdb?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
     */
    keyStoreId?: pulumi.Input<string>;
    /**
     * The wallet name for Oracle Key Vault.
     */
    keyStoreWalletName?: pulumi.Input<string>;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
     */
    kmsKeyVersionId?: pulumi.Input<string>;
    /**
     * The duration when the latest database backup created.
     */
    lastBackupDurationInSeconds?: pulumi.Input<number>;
    /**
     * The date and time when the latest database backup was created.
     */
    lastBackupTimestamp?: pulumi.Input<string>;
    /**
     * The date and time when the latest database backup failed.
     */
    lastFailedBackupTimestamp?: pulumi.Input<string>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The national character set for the database.
     */
    ncharacterSet?: pulumi.Input<string>;
    /**
     * The name of the pluggable database. The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. Pluggable database should not be same as database name.
     */
    pdbName?: pulumi.Input<string>;
    /**
     * Specifies a prefix for the `Oracle SID` of the database to be created.
     */
    sidPrefix?: pulumi.Input<string>;
    /**
     * Point in time recovery timeStamp of the source database at which cloned database system is cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     */
    sourceDatabasePointInTimeRecoveryTimestamp?: pulumi.Input<string>;
    /**
     * The current state of the database.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the database was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
     */
    vaultId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     */
    vmClusterId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabaseUpgrade resource.
 */
export interface DatabaseUpgradeArgs {
    /**
     * The database upgrade action.
     */
    action: pulumi.Input<string>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseId: pulumi.Input<string>;
    /**
     * Details for the database upgrade source.
     */
    databaseUpgradeSourceDetails?: pulumi.Input<inputs.Database.DatabaseUpgradeDatabaseUpgradeSourceDetails>;
}
