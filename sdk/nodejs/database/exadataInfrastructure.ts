// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Exadata Infrastructure resource in Oracle Cloud Infrastructure Database service.
 *
 * Creates an Exadata infrastructure resource. Applies to Exadata Cloud@Customer instances only.
 * To create an Exadata Cloud Service infrastructure resource, use the  [CreateCloudExadataInfrastructure](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudExadataInfrastructure/CreateCloudExadataInfrastructure) operation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExadataInfrastructure = new oci.database.ExadataInfrastructure("test_exadata_infrastructure", {
 *     adminNetworkCidr: exadataInfrastructureAdminNetworkCidr,
 *     cloudControlPlaneServer1: exadataInfrastructureCloudControlPlaneServer1,
 *     cloudControlPlaneServer2: exadataInfrastructureCloudControlPlaneServer2,
 *     compartmentId: compartmentId,
 *     displayName: exadataInfrastructureDisplayName,
 *     dnsServers: exadataInfrastructureDnsServer,
 *     gateway: exadataInfrastructureGateway,
 *     infiniBandNetworkCidr: exadataInfrastructureInfiniBandNetworkCidr,
 *     netmask: exadataInfrastructureNetmask,
 *     ntpServers: exadataInfrastructureNtpServer,
 *     shape: exadataInfrastructureShape,
 *     timeZone: exadataInfrastructureTimeZone,
 *     activationFile: exadataInfrastructureActivationFile,
 *     computeCount: exadataInfrastructureComputeCount,
 *     contacts: [{
 *         email: exadataInfrastructureContactsEmail,
 *         isPrimary: exadataInfrastructureContactsIsPrimary,
 *         name: exadataInfrastructureContactsName,
 *         isContactMosValidated: exadataInfrastructureContactsIsContactMosValidated,
 *         phoneNumber: exadataInfrastructureContactsPhoneNumber,
 *     }],
 *     corporateProxy: exadataInfrastructureCorporateProxy,
 *     definedTags: exadataInfrastructureDefinedTags,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     isCpsOfflineReportEnabled: exadataInfrastructureIsCpsOfflineReportEnabled,
 *     isMultiRackDeployment: exadataInfrastructureIsMultiRackDeployment,
 *     maintenanceWindow: {
 *         customActionTimeoutInMins: exadataInfrastructureMaintenanceWindowCustomActionTimeoutInMins,
 *         daysOfWeeks: [{
 *             name: exadataInfrastructureMaintenanceWindowDaysOfWeekName,
 *         }],
 *         hoursOfDays: exadataInfrastructureMaintenanceWindowHoursOfDay,
 *         isCustomActionTimeoutEnabled: exadataInfrastructureMaintenanceWindowIsCustomActionTimeoutEnabled,
 *         isMonthlyPatchingEnabled: exadataInfrastructureMaintenanceWindowIsMonthlyPatchingEnabled,
 *         leadTimeInWeeks: exadataInfrastructureMaintenanceWindowLeadTimeInWeeks,
 *         months: [{
 *             name: exadataInfrastructureMaintenanceWindowMonthsName,
 *         }],
 *         patchingMode: exadataInfrastructureMaintenanceWindowPatchingMode,
 *         preference: exadataInfrastructureMaintenanceWindowPreference,
 *         weeksOfMonths: exadataInfrastructureMaintenanceWindowWeeksOfMonth,
 *     },
 *     multiRackConfigurationFile: exadataInfrastructureMultiRackConfigurationFile,
 *     networkBondingModeDetails: {
 *         backupNetworkBondingMode: exadataInfrastructureNetworkBondingModeDetailsBackupNetworkBondingMode,
 *         clientNetworkBondingMode: exadataInfrastructureNetworkBondingModeDetailsClientNetworkBondingMode,
 *         drNetworkBondingMode: exadataInfrastructureNetworkBondingModeDetailsDrNetworkBondingMode,
 *     },
 *     storageCount: exadataInfrastructureStorageCount,
 * });
 * ```
 *
 * ## Import
 *
 * ExadataInfrastructures can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Database/exadataInfrastructure:ExadataInfrastructure test_exadata_infrastructure "id"
 * ```
 */
export class ExadataInfrastructure extends pulumi.CustomResource {
    /**
     * Get an existing ExadataInfrastructure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExadataInfrastructureState, opts?: pulumi.CustomResourceOptions): ExadataInfrastructure {
        return new ExadataInfrastructure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/exadataInfrastructure:ExadataInfrastructure';

    /**
     * Returns true if the given object is an instance of ExadataInfrastructure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExadataInfrastructure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExadataInfrastructure.__pulumiType;
    }

    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     */
    public /*out*/ readonly activatedStorageCount!: pulumi.Output<number>;
    /**
     * (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
     */
    public readonly activationFile!: pulumi.Output<string | undefined>;
    /**
     * The requested number of additional compute servers for the Exadata infrastructure.
     */
    public /*out*/ readonly additionalComputeCount!: pulumi.Output<number>;
    /**
     * Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (<https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B>)
     */
    public /*out*/ readonly additionalComputeSystemModel!: pulumi.Output<string>;
    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly additionalStorageCount!: pulumi.Output<number>;
    /**
     * (Updatable) The CIDR block for the Exadata administration network.
     */
    public readonly adminNetworkCidr!: pulumi.Output<string>;
    /**
     * The name of the availability domain that the Exadata infrastructure is located in.
     */
    public /*out*/ readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * (Updatable) The IP address for the first control plane server.
     */
    public readonly cloudControlPlaneServer1!: pulumi.Output<string>;
    /**
     * (Updatable) The IP address for the second control plane server.
     */
    public readonly cloudControlPlaneServer2!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The number of compute servers for the Exadata infrastructure.
     */
    public readonly computeCount!: pulumi.Output<number>;
    /**
     * (Updatable) The list of contacts for the Exadata infrastructure.
     */
    public readonly contacts!: pulumi.Output<outputs.Database.ExadataInfrastructureContact[] | undefined>;
    /**
     * (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
     */
    public readonly corporateProxy!: pulumi.Output<string>;
    /**
     * The number of enabled CPU cores.
     */
    public /*out*/ readonly cpusEnabled!: pulumi.Output<number>;
    public readonly createAsync!: pulumi.Output<boolean | undefined>;
    /**
     * The CSI Number of the Exadata infrastructure.
     */
    public /*out*/ readonly csiNumber!: pulumi.Output<string>;
    /**
     * Size, in terabytes, of the DATA disk group.
     */
    public /*out*/ readonly dataStorageSizeInTbs!: pulumi.Output<number>;
    /**
     * The local node storage allocated in GBs.
     */
    public /*out*/ readonly dbNodeStorageSizeInGbs!: pulumi.Output<number>;
    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     */
    public /*out*/ readonly dbServerVersion!: pulumi.Output<string>;
    /**
     * Details of the file system configuration of the Exadata infrastructure.
     */
    public /*out*/ readonly definedFileSystemConfigurations!: pulumi.Output<outputs.Database.ExadataInfrastructureDefinedFileSystemConfiguration[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    public readonly dnsServers!: pulumi.Output<string[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The gateway for the control plane network.
     */
    public readonly gateway!: pulumi.Output<string>;
    /**
     * (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
     */
    public readonly infiniBandNetworkCidr!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
     */
    public readonly isCpsOfflineReportEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Indicates if deployment is Multi-Rack or not.
     */
    public readonly isMultiRackDeployment!: pulumi.Output<boolean>;
    /**
     * Additional information about the current lifecycle state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     */
    public /*out*/ readonly maintenanceSloStatus!: pulumi.Output<string>;
    /**
     * (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    public readonly maintenanceWindow!: pulumi.Output<outputs.Database.ExadataInfrastructureMaintenanceWindow>;
    /**
     * The total number of CPU cores available.
     */
    public /*out*/ readonly maxCpuCount!: pulumi.Output<number>;
    /**
     * The total available DATA disk group size.
     */
    public /*out*/ readonly maxDataStorageInTbs!: pulumi.Output<number>;
    /**
     * The total local node storage available in GBs.
     */
    public /*out*/ readonly maxDbNodeStorageInGbs!: pulumi.Output<number>;
    /**
     * The total memory available in GBs.
     */
    public /*out*/ readonly maxMemoryInGbs!: pulumi.Output<number>;
    /**
     * The memory allocated in GBs.
     */
    public /*out*/ readonly memorySizeInGbs!: pulumi.Output<number>;
    /**
     * The monthly software version of the database servers (dom0) in the Exadata infrastructure.
     */
    public /*out*/ readonly monthlyDbServerVersion!: pulumi.Output<string>;
    /**
     * (Updatable) The base64 encoded Multi-Rack configuration json file.
     */
    public readonly multiRackConfigurationFile!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) The netmask for the control plane network.
     */
    public readonly netmask!: pulumi.Output<string>;
    /**
     * (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
     */
    public readonly networkBondingModeDetails!: pulumi.Output<outputs.Database.ExadataInfrastructureNetworkBondingModeDetails>;
    /**
     * (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    public readonly ntpServers!: pulumi.Output<string[]>;
    /**
     * The serial number for the Exadata infrastructure.
     */
    public /*out*/ readonly rackSerialNumber!: pulumi.Output<string>;
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    public readonly shape!: pulumi.Output<string>;
    /**
     * The current lifecycle state of the Exadata infrastructure.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The number of storage servers for the Exadata infrastructure.
     */
    public readonly storageCount!: pulumi.Output<number>;
    /**
     * The software version of the storage servers (cells) in the Exadata infrastructure.
     */
    public /*out*/ readonly storageServerVersion!: pulumi.Output<string>;
    /**
     * The date and time the Exadata infrastructure was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    public readonly timeZone!: pulumi.Output<string>;

    /**
     * Create a ExadataInfrastructure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExadataInfrastructureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExadataInfrastructureArgs | ExadataInfrastructureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExadataInfrastructureState | undefined;
            resourceInputs["activatedStorageCount"] = state ? state.activatedStorageCount : undefined;
            resourceInputs["activationFile"] = state ? state.activationFile : undefined;
            resourceInputs["additionalComputeCount"] = state ? state.additionalComputeCount : undefined;
            resourceInputs["additionalComputeSystemModel"] = state ? state.additionalComputeSystemModel : undefined;
            resourceInputs["additionalStorageCount"] = state ? state.additionalStorageCount : undefined;
            resourceInputs["adminNetworkCidr"] = state ? state.adminNetworkCidr : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["cloudControlPlaneServer1"] = state ? state.cloudControlPlaneServer1 : undefined;
            resourceInputs["cloudControlPlaneServer2"] = state ? state.cloudControlPlaneServer2 : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["computeCount"] = state ? state.computeCount : undefined;
            resourceInputs["contacts"] = state ? state.contacts : undefined;
            resourceInputs["corporateProxy"] = state ? state.corporateProxy : undefined;
            resourceInputs["cpusEnabled"] = state ? state.cpusEnabled : undefined;
            resourceInputs["createAsync"] = state ? state.createAsync : undefined;
            resourceInputs["csiNumber"] = state ? state.csiNumber : undefined;
            resourceInputs["dataStorageSizeInTbs"] = state ? state.dataStorageSizeInTbs : undefined;
            resourceInputs["dbNodeStorageSizeInGbs"] = state ? state.dbNodeStorageSizeInGbs : undefined;
            resourceInputs["dbServerVersion"] = state ? state.dbServerVersion : undefined;
            resourceInputs["definedFileSystemConfigurations"] = state ? state.definedFileSystemConfigurations : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["dnsServers"] = state ? state.dnsServers : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["infiniBandNetworkCidr"] = state ? state.infiniBandNetworkCidr : undefined;
            resourceInputs["isCpsOfflineReportEnabled"] = state ? state.isCpsOfflineReportEnabled : undefined;
            resourceInputs["isMultiRackDeployment"] = state ? state.isMultiRackDeployment : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["maintenanceSloStatus"] = state ? state.maintenanceSloStatus : undefined;
            resourceInputs["maintenanceWindow"] = state ? state.maintenanceWindow : undefined;
            resourceInputs["maxCpuCount"] = state ? state.maxCpuCount : undefined;
            resourceInputs["maxDataStorageInTbs"] = state ? state.maxDataStorageInTbs : undefined;
            resourceInputs["maxDbNodeStorageInGbs"] = state ? state.maxDbNodeStorageInGbs : undefined;
            resourceInputs["maxMemoryInGbs"] = state ? state.maxMemoryInGbs : undefined;
            resourceInputs["memorySizeInGbs"] = state ? state.memorySizeInGbs : undefined;
            resourceInputs["monthlyDbServerVersion"] = state ? state.monthlyDbServerVersion : undefined;
            resourceInputs["multiRackConfigurationFile"] = state ? state.multiRackConfigurationFile : undefined;
            resourceInputs["netmask"] = state ? state.netmask : undefined;
            resourceInputs["networkBondingModeDetails"] = state ? state.networkBondingModeDetails : undefined;
            resourceInputs["ntpServers"] = state ? state.ntpServers : undefined;
            resourceInputs["rackSerialNumber"] = state ? state.rackSerialNumber : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["storageCount"] = state ? state.storageCount : undefined;
            resourceInputs["storageServerVersion"] = state ? state.storageServerVersion : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
        } else {
            const args = argsOrState as ExadataInfrastructureArgs | undefined;
            if ((!args || args.adminNetworkCidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminNetworkCidr'");
            }
            if ((!args || args.cloudControlPlaneServer1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudControlPlaneServer1'");
            }
            if ((!args || args.cloudControlPlaneServer2 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudControlPlaneServer2'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.dnsServers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dnsServers'");
            }
            if ((!args || args.gateway === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gateway'");
            }
            if ((!args || args.infiniBandNetworkCidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'infiniBandNetworkCidr'");
            }
            if ((!args || args.netmask === undefined) && !opts.urn) {
                throw new Error("Missing required property 'netmask'");
            }
            if ((!args || args.ntpServers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ntpServers'");
            }
            if ((!args || args.shape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shape'");
            }
            if ((!args || args.timeZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeZone'");
            }
            resourceInputs["activationFile"] = args ? args.activationFile : undefined;
            resourceInputs["additionalStorageCount"] = args ? args.additionalStorageCount : undefined;
            resourceInputs["adminNetworkCidr"] = args ? args.adminNetworkCidr : undefined;
            resourceInputs["cloudControlPlaneServer1"] = args ? args.cloudControlPlaneServer1 : undefined;
            resourceInputs["cloudControlPlaneServer2"] = args ? args.cloudControlPlaneServer2 : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["computeCount"] = args ? args.computeCount : undefined;
            resourceInputs["contacts"] = args ? args.contacts : undefined;
            resourceInputs["corporateProxy"] = args ? args.corporateProxy : undefined;
            resourceInputs["createAsync"] = args ? args.createAsync : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["dnsServers"] = args ? args.dnsServers : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["infiniBandNetworkCidr"] = args ? args.infiniBandNetworkCidr : undefined;
            resourceInputs["isCpsOfflineReportEnabled"] = args ? args.isCpsOfflineReportEnabled : undefined;
            resourceInputs["isMultiRackDeployment"] = args ? args.isMultiRackDeployment : undefined;
            resourceInputs["maintenanceWindow"] = args ? args.maintenanceWindow : undefined;
            resourceInputs["multiRackConfigurationFile"] = args ? args.multiRackConfigurationFile : undefined;
            resourceInputs["netmask"] = args ? args.netmask : undefined;
            resourceInputs["networkBondingModeDetails"] = args ? args.networkBondingModeDetails : undefined;
            resourceInputs["ntpServers"] = args ? args.ntpServers : undefined;
            resourceInputs["shape"] = args ? args.shape : undefined;
            resourceInputs["storageCount"] = args ? args.storageCount : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["activatedStorageCount"] = undefined /*out*/;
            resourceInputs["additionalComputeCount"] = undefined /*out*/;
            resourceInputs["additionalComputeSystemModel"] = undefined /*out*/;
            resourceInputs["availabilityDomain"] = undefined /*out*/;
            resourceInputs["cpusEnabled"] = undefined /*out*/;
            resourceInputs["csiNumber"] = undefined /*out*/;
            resourceInputs["dataStorageSizeInTbs"] = undefined /*out*/;
            resourceInputs["dbNodeStorageSizeInGbs"] = undefined /*out*/;
            resourceInputs["dbServerVersion"] = undefined /*out*/;
            resourceInputs["definedFileSystemConfigurations"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["maintenanceSloStatus"] = undefined /*out*/;
            resourceInputs["maxCpuCount"] = undefined /*out*/;
            resourceInputs["maxDataStorageInTbs"] = undefined /*out*/;
            resourceInputs["maxDbNodeStorageInGbs"] = undefined /*out*/;
            resourceInputs["maxMemoryInGbs"] = undefined /*out*/;
            resourceInputs["memorySizeInGbs"] = undefined /*out*/;
            resourceInputs["monthlyDbServerVersion"] = undefined /*out*/;
            resourceInputs["rackSerialNumber"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["storageServerVersion"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExadataInfrastructure.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExadataInfrastructure resources.
 */
export interface ExadataInfrastructureState {
    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     */
    activatedStorageCount?: pulumi.Input<number>;
    /**
     * (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
     */
    activationFile?: pulumi.Input<string>;
    /**
     * The requested number of additional compute servers for the Exadata infrastructure.
     */
    additionalComputeCount?: pulumi.Input<number>;
    /**
     * Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (<https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B>)
     */
    additionalComputeSystemModel?: pulumi.Input<string>;
    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    additionalStorageCount?: pulumi.Input<number>;
    /**
     * (Updatable) The CIDR block for the Exadata administration network.
     */
    adminNetworkCidr?: pulumi.Input<string>;
    /**
     * The name of the availability domain that the Exadata infrastructure is located in.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * (Updatable) The IP address for the first control plane server.
     */
    cloudControlPlaneServer1?: pulumi.Input<string>;
    /**
     * (Updatable) The IP address for the second control plane server.
     */
    cloudControlPlaneServer2?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The number of compute servers for the Exadata infrastructure.
     */
    computeCount?: pulumi.Input<number>;
    /**
     * (Updatable) The list of contacts for the Exadata infrastructure.
     */
    contacts?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureContact>[]>;
    /**
     * (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
     */
    corporateProxy?: pulumi.Input<string>;
    /**
     * The number of enabled CPU cores.
     */
    cpusEnabled?: pulumi.Input<number>;
    createAsync?: pulumi.Input<boolean>;
    /**
     * The CSI Number of the Exadata infrastructure.
     */
    csiNumber?: pulumi.Input<string>;
    /**
     * Size, in terabytes, of the DATA disk group.
     */
    dataStorageSizeInTbs?: pulumi.Input<number>;
    /**
     * The local node storage allocated in GBs.
     */
    dbNodeStorageSizeInGbs?: pulumi.Input<number>;
    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     */
    dbServerVersion?: pulumi.Input<string>;
    /**
     * Details of the file system configuration of the Exadata infrastructure.
     */
    definedFileSystemConfigurations?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureDefinedFileSystemConfiguration>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The gateway for the control plane network.
     */
    gateway?: pulumi.Input<string>;
    /**
     * (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
     */
    infiniBandNetworkCidr?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
     */
    isCpsOfflineReportEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates if deployment is Multi-Rack or not.
     */
    isMultiRackDeployment?: pulumi.Input<boolean>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     */
    maintenanceSloStatus?: pulumi.Input<string>;
    /**
     * (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindow?: pulumi.Input<inputs.Database.ExadataInfrastructureMaintenanceWindow>;
    /**
     * The total number of CPU cores available.
     */
    maxCpuCount?: pulumi.Input<number>;
    /**
     * The total available DATA disk group size.
     */
    maxDataStorageInTbs?: pulumi.Input<number>;
    /**
     * The total local node storage available in GBs.
     */
    maxDbNodeStorageInGbs?: pulumi.Input<number>;
    /**
     * The total memory available in GBs.
     */
    maxMemoryInGbs?: pulumi.Input<number>;
    /**
     * The memory allocated in GBs.
     */
    memorySizeInGbs?: pulumi.Input<number>;
    /**
     * The monthly software version of the database servers (dom0) in the Exadata infrastructure.
     */
    monthlyDbServerVersion?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded Multi-Rack configuration json file.
     */
    multiRackConfigurationFile?: pulumi.Input<string>;
    /**
     * (Updatable) The netmask for the control plane network.
     */
    netmask?: pulumi.Input<string>;
    /**
     * (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
     */
    networkBondingModeDetails?: pulumi.Input<inputs.Database.ExadataInfrastructureNetworkBondingModeDetails>;
    /**
     * (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The serial number for the Exadata infrastructure.
     */
    rackSerialNumber?: pulumi.Input<string>;
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    shape?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the Exadata infrastructure.
     */
    state?: pulumi.Input<string>;
    /**
     * The number of storage servers for the Exadata infrastructure.
     */
    storageCount?: pulumi.Input<number>;
    /**
     * The software version of the storage servers (cells) in the Exadata infrastructure.
     */
    storageServerVersion?: pulumi.Input<string>;
    /**
     * The date and time the Exadata infrastructure was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExadataInfrastructure resource.
 */
export interface ExadataInfrastructureArgs {
    /**
     * (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
     */
    activationFile?: pulumi.Input<string>;
    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    additionalStorageCount?: pulumi.Input<number>;
    /**
     * (Updatable) The CIDR block for the Exadata administration network.
     */
    adminNetworkCidr: pulumi.Input<string>;
    /**
     * (Updatable) The IP address for the first control plane server.
     */
    cloudControlPlaneServer1: pulumi.Input<string>;
    /**
     * (Updatable) The IP address for the second control plane server.
     */
    cloudControlPlaneServer2: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The number of compute servers for the Exadata infrastructure.
     */
    computeCount?: pulumi.Input<number>;
    /**
     * (Updatable) The list of contacts for the Exadata infrastructure.
     */
    contacts?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureContact>[]>;
    /**
     * (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
     */
    corporateProxy?: pulumi.Input<string>;
    createAsync?: pulumi.Input<boolean>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    dnsServers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The gateway for the control plane network.
     */
    gateway: pulumi.Input<string>;
    /**
     * (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
     */
    infiniBandNetworkCidr: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
     */
    isCpsOfflineReportEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates if deployment is Multi-Rack or not.
     */
    isMultiRackDeployment?: pulumi.Input<boolean>;
    /**
     * (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindow?: pulumi.Input<inputs.Database.ExadataInfrastructureMaintenanceWindow>;
    /**
     * (Updatable) The base64 encoded Multi-Rack configuration json file.
     */
    multiRackConfigurationFile?: pulumi.Input<string>;
    /**
     * (Updatable) The netmask for the control plane network.
     */
    netmask: pulumi.Input<string>;
    /**
     * (Updatable) Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
     */
    networkBondingModeDetails?: pulumi.Input<inputs.Database.ExadataInfrastructureNetworkBondingModeDetails>;
    /**
     * (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    ntpServers: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    shape: pulumi.Input<string>;
    /**
     * The number of storage servers for the Exadata infrastructure.
     */
    storageCount?: pulumi.Input<number>;
    /**
     * (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone: pulumi.Input<string>;
}
