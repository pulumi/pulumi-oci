// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 */
export class ExadataInfrastructureCompute extends pulumi.CustomResource {
    /**
     * Get an existing ExadataInfrastructureCompute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExadataInfrastructureComputeState, opts?: pulumi.CustomResourceOptions): ExadataInfrastructureCompute {
        return new ExadataInfrastructureCompute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/exadataInfrastructureCompute:ExadataInfrastructureCompute';

    /**
     * Returns true if the given object is an instance of ExadataInfrastructureCompute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExadataInfrastructureCompute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExadataInfrastructureCompute.__pulumiType;
    }

    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     */
    declare public /*out*/ readonly activatedStorageCount: pulumi.Output<number>;
    /**
     * (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
     */
    declare public readonly activationFile: pulumi.Output<string | undefined>;
    /**
     * The number of additional compute servers for the Exadata infrastructure.
     */
    declare public /*out*/ readonly additionalComputeCount: pulumi.Output<number>;
    /**
     * The requested number of additional compute servers for the Exadata infrastructure.
     */
    declare public readonly additionalComputeCountComputeManagedResource: pulumi.Output<number | undefined>;
    /**
     * Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
     */
    declare public /*out*/ readonly additionalComputeSystemModel: pulumi.Output<string>;
    /**
     * The requested Oracle Exadata System Model specification for the additional compute servers. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
     */
    declare public readonly additionalComputeSystemModelComputeManagedResource: pulumi.Output<string | undefined>;
    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     */
    declare public /*out*/ readonly additionalStorageCount: pulumi.Output<number>;
    /**
     * The CIDR block for the Exadata administration network.
     */
    declare public /*out*/ readonly adminNetworkCidr: pulumi.Output<string>;
    /**
     * The IP address for the first control plane server.
     */
    declare public /*out*/ readonly cloudControlPlaneServer1: pulumi.Output<string>;
    /**
     * The IP address for the second control plane server.
     */
    declare public /*out*/ readonly cloudControlPlaneServer2: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * The number of compute servers for the Exadata infrastructure.
     */
    declare public /*out*/ readonly computeCount: pulumi.Output<number>;
    /**
     * The list of contacts for the Exadata infrastructure.
     */
    declare public /*out*/ readonly contacts: pulumi.Output<outputs.Database.ExadataInfrastructureComputeContact[]>;
    /**
     * The corporate network proxy for access to the control plane network.
     */
    declare public /*out*/ readonly corporateProxy: pulumi.Output<string>;
    /**
     * The number of enabled CPU cores.
     */
    declare public /*out*/ readonly cpusEnabled: pulumi.Output<number>;
    declare public /*out*/ readonly createAsync: pulumi.Output<boolean>;
    /**
     * The CSI Number of the Exadata infrastructure.
     */
    declare public /*out*/ readonly csiNumber: pulumi.Output<string>;
    /**
     * Size, in terabytes, of the DATA disk group.
     */
    declare public /*out*/ readonly dataStorageSizeInTbs: pulumi.Output<number>;
    /**
     * The local node storage allocated in GBs.
     */
    declare public /*out*/ readonly dbNodeStorageSizeInGbs: pulumi.Output<number>;
    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     */
    declare public /*out*/ readonly dbServerVersion: pulumi.Output<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public /*out*/ readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The user-friendly name for the Exadata Cloud@Customer infrastructure. The name does not need to be unique.
     */
    declare public /*out*/ readonly displayName: pulumi.Output<string>;
    /**
     * The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    declare public /*out*/ readonly dnsServers: pulumi.Output<string[]>;
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public readonly exadataInfrastructureId: pulumi.Output<string>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public /*out*/ readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The gateway for the control plane network.
     */
    declare public /*out*/ readonly gateway: pulumi.Output<string>;
    /**
     * The CIDR block for the Exadata InfiniBand interconnect.
     */
    declare public /*out*/ readonly infiniBandNetworkCidr: pulumi.Output<string>;
    /**
     * Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
     */
    declare public /*out*/ readonly isCpsOfflineReportEnabled: pulumi.Output<boolean>;
    /**
     * Additional information about the current lifecycle state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     */
    declare public /*out*/ readonly maintenanceSloStatus: pulumi.Output<string>;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    declare public /*out*/ readonly maintenanceWindows: pulumi.Output<outputs.Database.ExadataInfrastructureComputeMaintenanceWindow[]>;
    /**
     * The total number of CPU cores available.
     */
    declare public /*out*/ readonly maxCpuCount: pulumi.Output<number>;
    /**
     * The total available DATA disk group size.
     */
    declare public /*out*/ readonly maxDataStorageInTbs: pulumi.Output<number>;
    /**
     * The total local node storage available in GBs.
     */
    declare public /*out*/ readonly maxDbNodeStorageInGbs: pulumi.Output<number>;
    /**
     * The total memory available in GBs.
     */
    declare public /*out*/ readonly maxMemoryInGbs: pulumi.Output<number>;
    /**
     * The memory allocated in GBs.
     */
    declare public /*out*/ readonly memorySizeInGbs: pulumi.Output<number>;
    /**
     * The monthly software version of the database servers (dom0) in the Exadata infrastructure.
     */
    declare public /*out*/ readonly monthlyDbServerVersion: pulumi.Output<string>;
    /**
     * The netmask for the control plane network.
     */
    declare public /*out*/ readonly netmask: pulumi.Output<string>;
    /**
     * The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    declare public /*out*/ readonly ntpServers: pulumi.Output<string[]>;
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    declare public /*out*/ readonly shape: pulumi.Output<string>;
    /**
     * The current lifecycle state of the Exadata infrastructure.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The number of Exadata storage servers for the Exadata infrastructure.
     */
    declare public /*out*/ readonly storageCount: pulumi.Output<number>;
    /**
     * The software version of the storage servers (cells) in the Exadata infrastructure.
     */
    declare public /*out*/ readonly storageServerVersion: pulumi.Output<string>;
    /**
     * The date and time the Exadata infrastructure was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    declare public /*out*/ readonly timeZone: pulumi.Output<string>;

    /**
     * Create a ExadataInfrastructureCompute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExadataInfrastructureComputeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExadataInfrastructureComputeArgs | ExadataInfrastructureComputeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExadataInfrastructureComputeState | undefined;
            resourceInputs["activatedStorageCount"] = state?.activatedStorageCount;
            resourceInputs["activationFile"] = state?.activationFile;
            resourceInputs["additionalComputeCount"] = state?.additionalComputeCount;
            resourceInputs["additionalComputeCountComputeManagedResource"] = state?.additionalComputeCountComputeManagedResource;
            resourceInputs["additionalComputeSystemModel"] = state?.additionalComputeSystemModel;
            resourceInputs["additionalComputeSystemModelComputeManagedResource"] = state?.additionalComputeSystemModelComputeManagedResource;
            resourceInputs["additionalStorageCount"] = state?.additionalStorageCount;
            resourceInputs["adminNetworkCidr"] = state?.adminNetworkCidr;
            resourceInputs["cloudControlPlaneServer1"] = state?.cloudControlPlaneServer1;
            resourceInputs["cloudControlPlaneServer2"] = state?.cloudControlPlaneServer2;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["computeCount"] = state?.computeCount;
            resourceInputs["contacts"] = state?.contacts;
            resourceInputs["corporateProxy"] = state?.corporateProxy;
            resourceInputs["cpusEnabled"] = state?.cpusEnabled;
            resourceInputs["createAsync"] = state?.createAsync;
            resourceInputs["csiNumber"] = state?.csiNumber;
            resourceInputs["dataStorageSizeInTbs"] = state?.dataStorageSizeInTbs;
            resourceInputs["dbNodeStorageSizeInGbs"] = state?.dbNodeStorageSizeInGbs;
            resourceInputs["dbServerVersion"] = state?.dbServerVersion;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["dnsServers"] = state?.dnsServers;
            resourceInputs["exadataInfrastructureId"] = state?.exadataInfrastructureId;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["gateway"] = state?.gateway;
            resourceInputs["infiniBandNetworkCidr"] = state?.infiniBandNetworkCidr;
            resourceInputs["isCpsOfflineReportEnabled"] = state?.isCpsOfflineReportEnabled;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["maintenanceSloStatus"] = state?.maintenanceSloStatus;
            resourceInputs["maintenanceWindows"] = state?.maintenanceWindows;
            resourceInputs["maxCpuCount"] = state?.maxCpuCount;
            resourceInputs["maxDataStorageInTbs"] = state?.maxDataStorageInTbs;
            resourceInputs["maxDbNodeStorageInGbs"] = state?.maxDbNodeStorageInGbs;
            resourceInputs["maxMemoryInGbs"] = state?.maxMemoryInGbs;
            resourceInputs["memorySizeInGbs"] = state?.memorySizeInGbs;
            resourceInputs["monthlyDbServerVersion"] = state?.monthlyDbServerVersion;
            resourceInputs["netmask"] = state?.netmask;
            resourceInputs["ntpServers"] = state?.ntpServers;
            resourceInputs["shape"] = state?.shape;
            resourceInputs["state"] = state?.state;
            resourceInputs["storageCount"] = state?.storageCount;
            resourceInputs["storageServerVersion"] = state?.storageServerVersion;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeZone"] = state?.timeZone;
        } else {
            const args = argsOrState as ExadataInfrastructureComputeArgs | undefined;
            if (args?.exadataInfrastructureId === undefined && !opts.urn) {
                throw new Error("Missing required property 'exadataInfrastructureId'");
            }
            resourceInputs["activationFile"] = args?.activationFile;
            resourceInputs["additionalComputeCountComputeManagedResource"] = args?.additionalComputeCountComputeManagedResource;
            resourceInputs["additionalComputeSystemModelComputeManagedResource"] = args?.additionalComputeSystemModelComputeManagedResource;
            resourceInputs["exadataInfrastructureId"] = args?.exadataInfrastructureId;
            resourceInputs["activatedStorageCount"] = undefined /*out*/;
            resourceInputs["additionalComputeCount"] = undefined /*out*/;
            resourceInputs["additionalComputeSystemModel"] = undefined /*out*/;
            resourceInputs["additionalStorageCount"] = undefined /*out*/;
            resourceInputs["adminNetworkCidr"] = undefined /*out*/;
            resourceInputs["cloudControlPlaneServer1"] = undefined /*out*/;
            resourceInputs["cloudControlPlaneServer2"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["computeCount"] = undefined /*out*/;
            resourceInputs["contacts"] = undefined /*out*/;
            resourceInputs["corporateProxy"] = undefined /*out*/;
            resourceInputs["cpusEnabled"] = undefined /*out*/;
            resourceInputs["createAsync"] = undefined /*out*/;
            resourceInputs["csiNumber"] = undefined /*out*/;
            resourceInputs["dataStorageSizeInTbs"] = undefined /*out*/;
            resourceInputs["dbNodeStorageSizeInGbs"] = undefined /*out*/;
            resourceInputs["dbServerVersion"] = undefined /*out*/;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["dnsServers"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["gateway"] = undefined /*out*/;
            resourceInputs["infiniBandNetworkCidr"] = undefined /*out*/;
            resourceInputs["isCpsOfflineReportEnabled"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["maintenanceSloStatus"] = undefined /*out*/;
            resourceInputs["maintenanceWindows"] = undefined /*out*/;
            resourceInputs["maxCpuCount"] = undefined /*out*/;
            resourceInputs["maxDataStorageInTbs"] = undefined /*out*/;
            resourceInputs["maxDbNodeStorageInGbs"] = undefined /*out*/;
            resourceInputs["maxMemoryInGbs"] = undefined /*out*/;
            resourceInputs["memorySizeInGbs"] = undefined /*out*/;
            resourceInputs["monthlyDbServerVersion"] = undefined /*out*/;
            resourceInputs["netmask"] = undefined /*out*/;
            resourceInputs["ntpServers"] = undefined /*out*/;
            resourceInputs["shape"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["storageCount"] = undefined /*out*/;
            resourceInputs["storageServerVersion"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeZone"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExadataInfrastructureCompute.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExadataInfrastructureCompute resources.
 */
export interface ExadataInfrastructureComputeState {
    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     */
    activatedStorageCount?: pulumi.Input<number>;
    /**
     * (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
     */
    activationFile?: pulumi.Input<string>;
    /**
     * The number of additional compute servers for the Exadata infrastructure.
     */
    additionalComputeCount?: pulumi.Input<number>;
    /**
     * The requested number of additional compute servers for the Exadata infrastructure.
     */
    additionalComputeCountComputeManagedResource?: pulumi.Input<number>;
    /**
     * Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
     */
    additionalComputeSystemModel?: pulumi.Input<string>;
    /**
     * The requested Oracle Exadata System Model specification for the additional compute servers. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
     */
    additionalComputeSystemModelComputeManagedResource?: pulumi.Input<string>;
    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     */
    additionalStorageCount?: pulumi.Input<number>;
    /**
     * The CIDR block for the Exadata administration network.
     */
    adminNetworkCidr?: pulumi.Input<string>;
    /**
     * The IP address for the first control plane server.
     */
    cloudControlPlaneServer1?: pulumi.Input<string>;
    /**
     * The IP address for the second control plane server.
     */
    cloudControlPlaneServer2?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The number of compute servers for the Exadata infrastructure.
     */
    computeCount?: pulumi.Input<number>;
    /**
     * The list of contacts for the Exadata infrastructure.
     */
    contacts?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureComputeContact>[]>;
    /**
     * The corporate network proxy for access to the control plane network.
     */
    corporateProxy?: pulumi.Input<string>;
    /**
     * The number of enabled CPU cores.
     */
    cpusEnabled?: pulumi.Input<number>;
    createAsync?: pulumi.Input<boolean>;
    /**
     * The CSI Number of the Exadata infrastructure.
     */
    csiNumber?: pulumi.Input<string>;
    /**
     * Size, in terabytes, of the DATA disk group.
     */
    dataStorageSizeInTbs?: pulumi.Input<number>;
    /**
     * The local node storage allocated in GBs.
     */
    dbNodeStorageSizeInGbs?: pulumi.Input<number>;
    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     */
    dbServerVersion?: pulumi.Input<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The user-friendly name for the Exadata Cloud@Customer infrastructure. The name does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    exadataInfrastructureId?: pulumi.Input<string>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The gateway for the control plane network.
     */
    gateway?: pulumi.Input<string>;
    /**
     * The CIDR block for the Exadata InfiniBand interconnect.
     */
    infiniBandNetworkCidr?: pulumi.Input<string>;
    /**
     * Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
     */
    isCpsOfflineReportEnabled?: pulumi.Input<boolean>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     */
    maintenanceSloStatus?: pulumi.Input<string>;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureComputeMaintenanceWindow>[]>;
    /**
     * The total number of CPU cores available.
     */
    maxCpuCount?: pulumi.Input<number>;
    /**
     * The total available DATA disk group size.
     */
    maxDataStorageInTbs?: pulumi.Input<number>;
    /**
     * The total local node storage available in GBs.
     */
    maxDbNodeStorageInGbs?: pulumi.Input<number>;
    /**
     * The total memory available in GBs.
     */
    maxMemoryInGbs?: pulumi.Input<number>;
    /**
     * The memory allocated in GBs.
     */
    memorySizeInGbs?: pulumi.Input<number>;
    /**
     * The monthly software version of the database servers (dom0) in the Exadata infrastructure.
     */
    monthlyDbServerVersion?: pulumi.Input<string>;
    /**
     * The netmask for the control plane network.
     */
    netmask?: pulumi.Input<string>;
    /**
     * The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    shape?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the Exadata infrastructure.
     */
    state?: pulumi.Input<string>;
    /**
     * The number of Exadata storage servers for the Exadata infrastructure.
     */
    storageCount?: pulumi.Input<number>;
    /**
     * The software version of the storage servers (cells) in the Exadata infrastructure.
     */
    storageServerVersion?: pulumi.Input<string>;
    /**
     * The date and time the Exadata infrastructure was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExadataInfrastructureCompute resource.
 */
export interface ExadataInfrastructureComputeArgs {
    /**
     * (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
     */
    activationFile?: pulumi.Input<string>;
    /**
     * The requested number of additional compute servers for the Exadata infrastructure.
     */
    additionalComputeCountComputeManagedResource?: pulumi.Input<number>;
    /**
     * The requested Oracle Exadata System Model specification for the additional compute servers. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
     */
    additionalComputeSystemModelComputeManagedResource?: pulumi.Input<string>;
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    exadataInfrastructureId: pulumi.Input<string>;
}
