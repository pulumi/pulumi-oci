// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Exadata Infrastructure Configure Exascale Management resource in Oracle Cloud Infrastructure Database service.
 *
 * Configures Exascale on Exadata infrastructure resource. Applies to Exadata Cloud@Customer instances only.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExadataInfrastructureConfigureExascaleManagement = new oci.database.ExadataInfrastructureConfigureExascaleManagement("test_exadata_infrastructure_configure_exascale_management", {
 *     exadataInfrastructureId: testExadataInfrastructure.id,
 *     totalStorageInGbs: exadataInfrastructureConfigureExascaleManagementTotalStorageInGbs,
 * });
 * ```
 *
 * ## Import
 *
 * ExadataInfrastructureConfigureExascaleManagement can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Database/exadataInfrastructureConfigureExascaleManagement:ExadataInfrastructureConfigureExascaleManagement test_exadata_infrastructure_configure_exascale_management "id"
 * ```
 */
export class ExadataInfrastructureConfigureExascaleManagement extends pulumi.CustomResource {
    /**
     * Get an existing ExadataInfrastructureConfigureExascaleManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExadataInfrastructureConfigureExascaleManagementState, opts?: pulumi.CustomResourceOptions): ExadataInfrastructureConfigureExascaleManagement {
        return new ExadataInfrastructureConfigureExascaleManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/exadataInfrastructureConfigureExascaleManagement:ExadataInfrastructureConfigureExascaleManagement';

    /**
     * Returns true if the given object is an instance of ExadataInfrastructureConfigureExascaleManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExadataInfrastructureConfigureExascaleManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExadataInfrastructureConfigureExascaleManagement.__pulumiType;
    }

    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     */
    public /*out*/ readonly activatedStorageCount!: pulumi.Output<number>;
    /**
     * The requested number of additional compute servers for the Exadata infrastructure.
     */
    public /*out*/ readonly additionalComputeCount!: pulumi.Output<number>;
    /**
     * Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
     */
    public /*out*/ readonly additionalComputeSystemModel!: pulumi.Output<string>;
    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     */
    public /*out*/ readonly additionalStorageCount!: pulumi.Output<number>;
    /**
     * The CIDR block for the Exadata administration network.
     */
    public /*out*/ readonly adminNetworkCidr!: pulumi.Output<string>;
    /**
     * The name of the availability domain that the Exadata infrastructure is located in.
     */
    public /*out*/ readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * The IP address for the first control plane server.
     */
    public /*out*/ readonly cloudControlPlaneServer1!: pulumi.Output<string>;
    /**
     * The IP address for the second control plane server.
     */
    public /*out*/ readonly cloudControlPlaneServer2!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * The number of compute servers for the Exadata infrastructure.
     */
    public /*out*/ readonly computeCount!: pulumi.Output<number>;
    /**
     * The list of contacts for the Exadata infrastructure.
     */
    public /*out*/ readonly contacts!: pulumi.Output<outputs.Database.ExadataInfrastructureConfigureExascaleManagementContact[]>;
    /**
     * The corporate network proxy for access to the control plane network.
     */
    public /*out*/ readonly corporateProxy!: pulumi.Output<string>;
    /**
     * The number of enabled CPU cores.
     */
    public /*out*/ readonly cpusEnabled!: pulumi.Output<number>;
    /**
     * The CSI Number of the Exadata infrastructure.
     */
    public /*out*/ readonly csiNumber!: pulumi.Output<string>;
    /**
     * Size, in terabytes, of the DATA disk group.
     */
    public /*out*/ readonly dataStorageSizeInTbs!: pulumi.Output<number>;
    /**
     * The local node storage allocated in GBs.
     */
    public /*out*/ readonly dbNodeStorageSizeInGbs!: pulumi.Output<number>;
    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     */
    public /*out*/ readonly dbServerVersion!: pulumi.Output<string>;
    /**
     * Details of the file system configuration of the Exadata infrastructure.
     */
    public /*out*/ readonly definedFileSystemConfigurations!: pulumi.Output<outputs.Database.ExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfiguration[]>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public /*out*/ readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The user-friendly name for the Exadata Cloud@Customer infrastructure. The name does not need to be unique.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    public /*out*/ readonly dnsServers!: pulumi.Output<string[]>;
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    public readonly exadataInfrastructureId!: pulumi.Output<string>;
    /**
     * The exascale config response details for the Exadata Cloud@Customer infrastructure or cloud Exadata infrastructure . Applies to both Exadata Cloud@Customer instances and Exadata Cloud Service instances.
     */
    public /*out*/ readonly exascaleConfigs!: pulumi.Output<outputs.Database.ExadataInfrastructureConfigureExascaleManagementExascaleConfig[]>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public /*out*/ readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The gateway for the control plane network.
     */
    public /*out*/ readonly gateway!: pulumi.Output<string>;
    /**
     * The CIDR block for the Exadata InfiniBand interconnect.
     */
    public /*out*/ readonly infiniBandNetworkCidr!: pulumi.Output<string>;
    /**
     * Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
     */
    public /*out*/ readonly isCpsOfflineReportEnabled!: pulumi.Output<boolean>;
    /**
     * Indicates if deployment is Multi-Rack or not.
     */
    public /*out*/ readonly isMultiRackDeployment!: pulumi.Output<boolean>;
    /**
     * If true, the infrastructure is using granular maintenance scheduling preference.
     */
    public /*out*/ readonly isSchedulingPolicyAssociated!: pulumi.Output<boolean>;
    /**
     * Additional information about the current lifecycle state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     */
    public /*out*/ readonly maintenanceSloStatus!: pulumi.Output<string>;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    public /*out*/ readonly maintenanceWindows!: pulumi.Output<outputs.Database.ExadataInfrastructureConfigureExascaleManagementMaintenanceWindow[]>;
    /**
     * The total number of CPU cores available.
     */
    public /*out*/ readonly maxCpuCount!: pulumi.Output<number>;
    /**
     * The total available DATA disk group size.
     */
    public /*out*/ readonly maxDataStorageInTbs!: pulumi.Output<number>;
    /**
     * The total local node storage available in GBs.
     */
    public /*out*/ readonly maxDbNodeStorageInGbs!: pulumi.Output<number>;
    /**
     * The total memory available in GBs.
     */
    public /*out*/ readonly maxMemoryInGbs!: pulumi.Output<number>;
    /**
     * The memory allocated in GBs.
     */
    public /*out*/ readonly memorySizeInGbs!: pulumi.Output<number>;
    /**
     * The monthly software version of the database servers (dom0) in the Exadata infrastructure.
     */
    public /*out*/ readonly monthlyDbServerVersion!: pulumi.Output<string>;
    /**
     * The base64 encoded Multi-Rack configuration json file.
     */
    public /*out*/ readonly multiRackConfigurationFile!: pulumi.Output<string>;
    /**
     * The netmask for the control plane network.
     */
    public /*out*/ readonly netmask!: pulumi.Output<string>;
    /**
     * Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
     */
    public /*out*/ readonly networkBondingModeDetails!: pulumi.Output<outputs.Database.ExadataInfrastructureConfigureExascaleManagementNetworkBondingModeDetail[]>;
    /**
     * The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    public /*out*/ readonly ntpServers!: pulumi.Output<string[]>;
    /**
     * The serial number for the Exadata infrastructure.
     */
    public /*out*/ readonly rackSerialNumber!: pulumi.Output<string>;
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    public /*out*/ readonly shape!: pulumi.Output<string>;
    /**
     * The current lifecycle state of the Exadata infrastructure.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The number of Exadata storage servers for the Exadata infrastructure.
     */
    public /*out*/ readonly storageCount!: pulumi.Output<number>;
    /**
     * The software version of the storage servers (cells) in the Exadata infrastructure.
     */
    public /*out*/ readonly storageServerVersion!: pulumi.Output<string>;
    /**
     * The date and time the Exadata infrastructure was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    public /*out*/ readonly timeZone!: pulumi.Output<string>;
    /**
     * Storage size needed for Exascale in GBs.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly totalStorageInGbs!: pulumi.Output<number>;

    /**
     * Create a ExadataInfrastructureConfigureExascaleManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExadataInfrastructureConfigureExascaleManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExadataInfrastructureConfigureExascaleManagementArgs | ExadataInfrastructureConfigureExascaleManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExadataInfrastructureConfigureExascaleManagementState | undefined;
            resourceInputs["activatedStorageCount"] = state ? state.activatedStorageCount : undefined;
            resourceInputs["additionalComputeCount"] = state ? state.additionalComputeCount : undefined;
            resourceInputs["additionalComputeSystemModel"] = state ? state.additionalComputeSystemModel : undefined;
            resourceInputs["additionalStorageCount"] = state ? state.additionalStorageCount : undefined;
            resourceInputs["adminNetworkCidr"] = state ? state.adminNetworkCidr : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["cloudControlPlaneServer1"] = state ? state.cloudControlPlaneServer1 : undefined;
            resourceInputs["cloudControlPlaneServer2"] = state ? state.cloudControlPlaneServer2 : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["computeCount"] = state ? state.computeCount : undefined;
            resourceInputs["contacts"] = state ? state.contacts : undefined;
            resourceInputs["corporateProxy"] = state ? state.corporateProxy : undefined;
            resourceInputs["cpusEnabled"] = state ? state.cpusEnabled : undefined;
            resourceInputs["csiNumber"] = state ? state.csiNumber : undefined;
            resourceInputs["dataStorageSizeInTbs"] = state ? state.dataStorageSizeInTbs : undefined;
            resourceInputs["dbNodeStorageSizeInGbs"] = state ? state.dbNodeStorageSizeInGbs : undefined;
            resourceInputs["dbServerVersion"] = state ? state.dbServerVersion : undefined;
            resourceInputs["definedFileSystemConfigurations"] = state ? state.definedFileSystemConfigurations : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["dnsServers"] = state ? state.dnsServers : undefined;
            resourceInputs["exadataInfrastructureId"] = state ? state.exadataInfrastructureId : undefined;
            resourceInputs["exascaleConfigs"] = state ? state.exascaleConfigs : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["infiniBandNetworkCidr"] = state ? state.infiniBandNetworkCidr : undefined;
            resourceInputs["isCpsOfflineReportEnabled"] = state ? state.isCpsOfflineReportEnabled : undefined;
            resourceInputs["isMultiRackDeployment"] = state ? state.isMultiRackDeployment : undefined;
            resourceInputs["isSchedulingPolicyAssociated"] = state ? state.isSchedulingPolicyAssociated : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["maintenanceSloStatus"] = state ? state.maintenanceSloStatus : undefined;
            resourceInputs["maintenanceWindows"] = state ? state.maintenanceWindows : undefined;
            resourceInputs["maxCpuCount"] = state ? state.maxCpuCount : undefined;
            resourceInputs["maxDataStorageInTbs"] = state ? state.maxDataStorageInTbs : undefined;
            resourceInputs["maxDbNodeStorageInGbs"] = state ? state.maxDbNodeStorageInGbs : undefined;
            resourceInputs["maxMemoryInGbs"] = state ? state.maxMemoryInGbs : undefined;
            resourceInputs["memorySizeInGbs"] = state ? state.memorySizeInGbs : undefined;
            resourceInputs["monthlyDbServerVersion"] = state ? state.monthlyDbServerVersion : undefined;
            resourceInputs["multiRackConfigurationFile"] = state ? state.multiRackConfigurationFile : undefined;
            resourceInputs["netmask"] = state ? state.netmask : undefined;
            resourceInputs["networkBondingModeDetails"] = state ? state.networkBondingModeDetails : undefined;
            resourceInputs["ntpServers"] = state ? state.ntpServers : undefined;
            resourceInputs["rackSerialNumber"] = state ? state.rackSerialNumber : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["storageCount"] = state ? state.storageCount : undefined;
            resourceInputs["storageServerVersion"] = state ? state.storageServerVersion : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["totalStorageInGbs"] = state ? state.totalStorageInGbs : undefined;
        } else {
            const args = argsOrState as ExadataInfrastructureConfigureExascaleManagementArgs | undefined;
            if ((!args || args.exadataInfrastructureId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'exadataInfrastructureId'");
            }
            if ((!args || args.totalStorageInGbs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'totalStorageInGbs'");
            }
            resourceInputs["exadataInfrastructureId"] = args ? args.exadataInfrastructureId : undefined;
            resourceInputs["totalStorageInGbs"] = args ? args.totalStorageInGbs : undefined;
            resourceInputs["activatedStorageCount"] = undefined /*out*/;
            resourceInputs["additionalComputeCount"] = undefined /*out*/;
            resourceInputs["additionalComputeSystemModel"] = undefined /*out*/;
            resourceInputs["additionalStorageCount"] = undefined /*out*/;
            resourceInputs["adminNetworkCidr"] = undefined /*out*/;
            resourceInputs["availabilityDomain"] = undefined /*out*/;
            resourceInputs["cloudControlPlaneServer1"] = undefined /*out*/;
            resourceInputs["cloudControlPlaneServer2"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["computeCount"] = undefined /*out*/;
            resourceInputs["contacts"] = undefined /*out*/;
            resourceInputs["corporateProxy"] = undefined /*out*/;
            resourceInputs["cpusEnabled"] = undefined /*out*/;
            resourceInputs["csiNumber"] = undefined /*out*/;
            resourceInputs["dataStorageSizeInTbs"] = undefined /*out*/;
            resourceInputs["dbNodeStorageSizeInGbs"] = undefined /*out*/;
            resourceInputs["dbServerVersion"] = undefined /*out*/;
            resourceInputs["definedFileSystemConfigurations"] = undefined /*out*/;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["dnsServers"] = undefined /*out*/;
            resourceInputs["exascaleConfigs"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["gateway"] = undefined /*out*/;
            resourceInputs["infiniBandNetworkCidr"] = undefined /*out*/;
            resourceInputs["isCpsOfflineReportEnabled"] = undefined /*out*/;
            resourceInputs["isMultiRackDeployment"] = undefined /*out*/;
            resourceInputs["isSchedulingPolicyAssociated"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["maintenanceSloStatus"] = undefined /*out*/;
            resourceInputs["maintenanceWindows"] = undefined /*out*/;
            resourceInputs["maxCpuCount"] = undefined /*out*/;
            resourceInputs["maxDataStorageInTbs"] = undefined /*out*/;
            resourceInputs["maxDbNodeStorageInGbs"] = undefined /*out*/;
            resourceInputs["maxMemoryInGbs"] = undefined /*out*/;
            resourceInputs["memorySizeInGbs"] = undefined /*out*/;
            resourceInputs["monthlyDbServerVersion"] = undefined /*out*/;
            resourceInputs["multiRackConfigurationFile"] = undefined /*out*/;
            resourceInputs["netmask"] = undefined /*out*/;
            resourceInputs["networkBondingModeDetails"] = undefined /*out*/;
            resourceInputs["ntpServers"] = undefined /*out*/;
            resourceInputs["rackSerialNumber"] = undefined /*out*/;
            resourceInputs["shape"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["storageCount"] = undefined /*out*/;
            resourceInputs["storageServerVersion"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeZone"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExadataInfrastructureConfigureExascaleManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExadataInfrastructureConfigureExascaleManagement resources.
 */
export interface ExadataInfrastructureConfigureExascaleManagementState {
    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     */
    activatedStorageCount?: pulumi.Input<number>;
    /**
     * The requested number of additional compute servers for the Exadata infrastructure.
     */
    additionalComputeCount?: pulumi.Input<number>;
    /**
     * Oracle Exadata System Model specification. The system model determines the amount of compute or storage server resources available for use. For more information, please see [System and Shape Configuration Options] (https://docs.oracle.com/en/engineered-systems/exadata-cloud-at-customer/ecccm/ecc-system-config-options.html#GUID-9E090174-5C57-4EB1-9243-B470F9F10D6B)
     */
    additionalComputeSystemModel?: pulumi.Input<string>;
    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     */
    additionalStorageCount?: pulumi.Input<number>;
    /**
     * The CIDR block for the Exadata administration network.
     */
    adminNetworkCidr?: pulumi.Input<string>;
    /**
     * The name of the availability domain that the Exadata infrastructure is located in.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The IP address for the first control plane server.
     */
    cloudControlPlaneServer1?: pulumi.Input<string>;
    /**
     * The IP address for the second control plane server.
     */
    cloudControlPlaneServer2?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The number of compute servers for the Exadata infrastructure.
     */
    computeCount?: pulumi.Input<number>;
    /**
     * The list of contacts for the Exadata infrastructure.
     */
    contacts?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureConfigureExascaleManagementContact>[]>;
    /**
     * The corporate network proxy for access to the control plane network.
     */
    corporateProxy?: pulumi.Input<string>;
    /**
     * The number of enabled CPU cores.
     */
    cpusEnabled?: pulumi.Input<number>;
    /**
     * The CSI Number of the Exadata infrastructure.
     */
    csiNumber?: pulumi.Input<string>;
    /**
     * Size, in terabytes, of the DATA disk group.
     */
    dataStorageSizeInTbs?: pulumi.Input<number>;
    /**
     * The local node storage allocated in GBs.
     */
    dbNodeStorageSizeInGbs?: pulumi.Input<number>;
    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     */
    dbServerVersion?: pulumi.Input<string>;
    /**
     * Details of the file system configuration of the Exadata infrastructure.
     */
    definedFileSystemConfigurations?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureConfigureExascaleManagementDefinedFileSystemConfiguration>[]>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The user-friendly name for the Exadata Cloud@Customer infrastructure. The name does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    exadataInfrastructureId?: pulumi.Input<string>;
    /**
     * The exascale config response details for the Exadata Cloud@Customer infrastructure or cloud Exadata infrastructure . Applies to both Exadata Cloud@Customer instances and Exadata Cloud Service instances.
     */
    exascaleConfigs?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureConfigureExascaleManagementExascaleConfig>[]>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The gateway for the control plane network.
     */
    gateway?: pulumi.Input<string>;
    /**
     * The CIDR block for the Exadata InfiniBand interconnect.
     */
    infiniBandNetworkCidr?: pulumi.Input<string>;
    /**
     * Indicates whether cps offline diagnostic report is enabled for this Exadata infrastructure. This will allow a customer to quickly check status themselves and fix problems on their end, saving time and frustration for both Oracle and the customer when they find the CPS in a disconnected state.You can enable offline diagnostic report during Exadata infrastructure provisioning. You can also disable or enable it at any time using the UpdateExadatainfrastructure API.
     */
    isCpsOfflineReportEnabled?: pulumi.Input<boolean>;
    /**
     * Indicates if deployment is Multi-Rack or not.
     */
    isMultiRackDeployment?: pulumi.Input<boolean>;
    /**
     * If true, the infrastructure is using granular maintenance scheduling preference.
     */
    isSchedulingPolicyAssociated?: pulumi.Input<boolean>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     */
    maintenanceSloStatus?: pulumi.Input<string>;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureConfigureExascaleManagementMaintenanceWindow>[]>;
    /**
     * The total number of CPU cores available.
     */
    maxCpuCount?: pulumi.Input<number>;
    /**
     * The total available DATA disk group size.
     */
    maxDataStorageInTbs?: pulumi.Input<number>;
    /**
     * The total local node storage available in GBs.
     */
    maxDbNodeStorageInGbs?: pulumi.Input<number>;
    /**
     * The total memory available in GBs.
     */
    maxMemoryInGbs?: pulumi.Input<number>;
    /**
     * The memory allocated in GBs.
     */
    memorySizeInGbs?: pulumi.Input<number>;
    /**
     * The monthly software version of the database servers (dom0) in the Exadata infrastructure.
     */
    monthlyDbServerVersion?: pulumi.Input<string>;
    /**
     * The base64 encoded Multi-Rack configuration json file.
     */
    multiRackConfigurationFile?: pulumi.Input<string>;
    /**
     * The netmask for the control plane network.
     */
    netmask?: pulumi.Input<string>;
    /**
     * Details of bonding mode for Client and Backup and DR networks of an Exadata infrastructure.
     */
    networkBondingModeDetails?: pulumi.Input<pulumi.Input<inputs.Database.ExadataInfrastructureConfigureExascaleManagementNetworkBondingModeDetail>[]>;
    /**
     * The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The serial number for the Exadata infrastructure.
     */
    rackSerialNumber?: pulumi.Input<string>;
    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     */
    shape?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the Exadata infrastructure.
     */
    state?: pulumi.Input<string>;
    /**
     * The number of Exadata storage servers for the Exadata infrastructure.
     */
    storageCount?: pulumi.Input<number>;
    /**
     * The software version of the storage servers (cells) in the Exadata infrastructure.
     */
    storageServerVersion?: pulumi.Input<string>;
    /**
     * The date and time the Exadata infrastructure was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     */
    timeZone?: pulumi.Input<string>;
    /**
     * Storage size needed for Exascale in GBs.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    totalStorageInGbs?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ExadataInfrastructureConfigureExascaleManagement resource.
 */
export interface ExadataInfrastructureConfigureExascaleManagementArgs {
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    exadataInfrastructureId: pulumi.Input<string>;
    /**
     * Storage size needed for Exascale in GBs.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    totalStorageInGbs: pulumi.Input<number>;
}
