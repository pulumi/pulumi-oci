// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Exadata Iorm Config resource in Oracle Cloud Infrastructure Database service.
 *
 * Updates IORM settings for the specified Exadata DB system.
 *
 * **Note:** Deprecated for Exadata Cloud Service systems. Use the [new resource model APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem.htm#exaflexsystem_topic-resource_model) instead.
 *
 * For Exadata Cloud Service instances, support for this API will end on May 15th, 2021. See [Switching an Exadata DB System to the New Resource Model and APIs](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaflexsystem_topic-resource_model_conversion.htm) for details on converting existing Exadata DB systems to the new resource model.
 *
 * The [UpdateCloudVmClusterIormConfig](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/UpdateCloudVmClusterIormConfig/) API is used for Exadata systems using the
 * new resource model.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExadataIormConfig = new oci.database.ExadataIormConfig("testExadataIormConfig", {
 *     dbPlans: [{
 *         dbName: _var.exadata_iorm_config_db_plans_db_name,
 *         share: _var.exadata_iorm_config_db_plans_share,
 *     }],
 *     dbSystemId: oci_database_db_system.test_db_system.id,
 *     objective: "AUTO",
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class ExadataIormConfig extends pulumi.CustomResource {
    /**
     * Get an existing ExadataIormConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExadataIormConfigState, opts?: pulumi.CustomResourceOptions): ExadataIormConfig {
        return new ExadataIormConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/exadataIormConfig:ExadataIormConfig';

    /**
     * Returns true if the given object is an instance of ExadataIormConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExadataIormConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExadataIormConfig.__pulumiType;
    }

    /**
     * (Updatable) Array of IORM Setting for all the database in this Exadata DB System
     */
    public readonly dbPlans!: pulumi.Output<outputs.Database.ExadataIormConfigDbPlan[]>;
    /**
     * (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    public readonly dbSystemId!: pulumi.Output<string>;
    /**
     * Additional information about the current `lifecycleState`.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Value for the IORM objective Default is "Auto" 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly objective!: pulumi.Output<string>;
    /**
     * The current state of IORM configuration for the Exadata DB system.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a ExadataIormConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExadataIormConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExadataIormConfigArgs | ExadataIormConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExadataIormConfigState | undefined;
            resourceInputs["dbPlans"] = state ? state.dbPlans : undefined;
            resourceInputs["dbSystemId"] = state ? state.dbSystemId : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["objective"] = state ? state.objective : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as ExadataIormConfigArgs | undefined;
            if ((!args || args.dbPlans === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbPlans'");
            }
            if ((!args || args.dbSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbSystemId'");
            }
            resourceInputs["dbPlans"] = args ? args.dbPlans : undefined;
            resourceInputs["dbSystemId"] = args ? args.dbSystemId : undefined;
            resourceInputs["objective"] = args ? args.objective : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExadataIormConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExadataIormConfig resources.
 */
export interface ExadataIormConfigState {
    /**
     * (Updatable) Array of IORM Setting for all the database in this Exadata DB System
     */
    dbPlans?: pulumi.Input<pulumi.Input<inputs.Database.ExadataIormConfigDbPlan>[]>;
    /**
     * (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId?: pulumi.Input<string>;
    /**
     * Additional information about the current `lifecycleState`.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Value for the IORM objective Default is "Auto" 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    objective?: pulumi.Input<string>;
    /**
     * The current state of IORM configuration for the Exadata DB system.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExadataIormConfig resource.
 */
export interface ExadataIormConfigArgs {
    /**
     * (Updatable) Array of IORM Setting for all the database in this Exadata DB System
     */
    dbPlans: pulumi.Input<pulumi.Input<inputs.Database.ExadataIormConfigDbPlan>[]>;
    /**
     * (Updatable) The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: pulumi.Input<string>;
    /**
     * (Updatable) Value for the IORM objective Default is "Auto" 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    objective?: pulumi.Input<string>;
}
