// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Autonomous Container Database resource in Oracle Cloud Infrastructure Database service.
 *
 * Gets information about the specified Autonomous Container Database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAutonomousContainerDatabase = oci.Database.getAutonomousContainerDatabase({
 *     autonomousContainerDatabaseId: oci_database_autonomous_container_database.test_autonomous_container_database.id,
 * });
 * ```
 */
export function getAutonomousContainerDatabase(args: GetAutonomousContainerDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetAutonomousContainerDatabaseResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Database/getAutonomousContainerDatabase:getAutonomousContainerDatabase", {
        "autonomousContainerDatabaseId": args.autonomousContainerDatabaseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAutonomousContainerDatabase.
 */
export interface GetAutonomousContainerDatabaseArgs {
    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousContainerDatabaseId: string;
}

/**
 * A collection of values returned by getAutonomousContainerDatabase.
 */
export interface GetAutonomousContainerDatabaseResult {
    readonly autonomousContainerDatabaseId: string;
    /**
     * The OCID of the Autonomous Exadata Infrastructure.
     */
    readonly autonomousExadataInfrastructureId: string;
    /**
     * The OCID of the Autonomous VM Cluster.
     */
    readonly autonomousVmClusterId: string;
    /**
     * The availability domain of the Autonomous Container Database.
     */
    readonly availabilityDomain: string;
    /**
     * Backup options for the Autonomous Container Database.
     */
    readonly backupConfigs: outputs.Database.GetAutonomousContainerDatabaseBackupConfig[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
     */
    readonly cloudAutonomousVmClusterId: string;
    /**
     * The OCID of the compartment.
     */
    readonly compartmentId: string;
    readonly dbUniqueName: string;
    /**
     * Oracle Database version of the Autonomous Container Database.
     */
    readonly dbVersion: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    readonly definedTags: {[key: string]: any};
    /**
     * The user-provided name for the Autonomous Container Database.
     */
    readonly displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The id of the Autonomous Database [Vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts) service key management history entry.
     */
    readonly id: string;
    /**
     * The infrastructure type this resource belongs to.
     */
    readonly infrastructureType: string;
    readonly isAutomaticFailoverEnabled: boolean;
    /**
     * Key History Entry.
     */
    readonly keyHistoryEntries: outputs.Database.GetAutonomousContainerDatabaseKeyHistoryEntry[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     */
    readonly keyStoreId: string;
    /**
     * The wallet name for Oracle Key Vault.
     */
    readonly keyStoreWalletName: string;
    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     */
    readonly kmsKeyId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     */
    readonly lastMaintenanceRunId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    readonly lifecycleDetails: string;
    readonly maintenanceWindowDetails: outputs.Database.GetAutonomousContainerDatabaseMaintenanceWindowDetail[];
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    readonly maintenanceWindows: outputs.Database.GetAutonomousContainerDatabaseMaintenanceWindow[];
    /**
     * The amount of memory (in GBs) enabled per each OCPU core in Autonomous VM Cluster.
     */
    readonly memoryPerOracleComputeUnitInGbs: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     */
    readonly nextMaintenanceRunId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch applied on the system.
     */
    readonly patchId: string;
    /**
     * Database patch model preference.
     */
    readonly patchModel: string;
    readonly peerAutonomousContainerDatabaseBackupConfigs: outputs.Database.GetAutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfig[];
    readonly peerAutonomousContainerDatabaseCompartmentId: string;
    readonly peerAutonomousContainerDatabaseDisplayName: string;
    readonly peerAutonomousExadataInfrastructureId: string;
    readonly peerAutonomousVmClusterId: string;
    readonly peerCloudAutonomousVmClusterId: string;
    readonly peerDbUniqueName: string;
    readonly protectionMode: string;
    /**
     * The role of the dataguard enabled Autonomous Container Database.
     */
    readonly role: string;
    readonly rotateKeyTrigger: boolean;
    /**
     * The service level agreement type of the container database. The default is STANDARD.
     */
    readonly serviceLevelAgreementType: string;
    /**
     * The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database. This value represents the number of days before scheduled maintenance of the primary database.
     */
    readonly standbyMaintenanceBufferInDays: number;
    /**
     * The current state of the Autonomous Container Database.
     */
    readonly state: string;
    /**
     * The date and time the Autonomous Container Database was created.
     */
    readonly timeCreated: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    readonly vaultId: string;
}

export function getAutonomousContainerDatabaseOutput(args: GetAutonomousContainerDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutonomousContainerDatabaseResult> {
    return pulumi.output(args).apply(a => getAutonomousContainerDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getAutonomousContainerDatabase.
 */
export interface GetAutonomousContainerDatabaseOutputArgs {
    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousContainerDatabaseId: pulumi.Input<string>;
}
