// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Autonomous Database Backups in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of Autonomous Database backups based on either the `autonomousDatabaseId` or `compartmentId` specified as a query parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAutonomousDatabaseBackups = oci.Database.getAutonomousDatabaseBackups({
 *     autonomousDatabaseId: testAutonomousDatabase.id,
 *     compartmentId: compartmentId,
 *     displayName: autonomousDatabaseBackupDisplayName,
 *     state: autonomousDatabaseBackupState,
 *     type: autonomousDatabaseBackupType,
 * });
 * ```
 */
export function getAutonomousDatabaseBackups(args?: GetAutonomousDatabaseBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetAutonomousDatabaseBackupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getAutonomousDatabaseBackups:getAutonomousDatabaseBackups", {
        "autonomousDatabaseId": args.autonomousDatabaseId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getAutonomousDatabaseBackups.
 */
export interface GetAutonomousDatabaseBackupsArgs {
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousDatabaseId?: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: string;
    filters?: inputs.Database.GetAutonomousDatabaseBackupsFilter[];
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: string;
    /**
     * A filter to return only backups that matches with the given type of Backup.
     */
    type?: string;
}

/**
 * A collection of values returned by getAutonomousDatabaseBackups.
 */
export interface GetAutonomousDatabaseBackupsResult {
    /**
     * The list of autonomous_database_backups.
     */
    readonly autonomousDatabaseBackups: outputs.Database.GetAutonomousDatabaseBackupsAutonomousDatabaseBackup[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database.
     */
    readonly autonomousDatabaseId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId?: string;
    /**
     * The user-friendly name for the backup. The name does not have to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Database.GetAutonomousDatabaseBackupsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the backup.
     */
    readonly state?: string;
    /**
     * The type of backup.
     */
    readonly type?: string;
}
/**
 * This data source provides the list of Autonomous Database Backups in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of Autonomous Database backups based on either the `autonomousDatabaseId` or `compartmentId` specified as a query parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAutonomousDatabaseBackups = oci.Database.getAutonomousDatabaseBackups({
 *     autonomousDatabaseId: testAutonomousDatabase.id,
 *     compartmentId: compartmentId,
 *     displayName: autonomousDatabaseBackupDisplayName,
 *     state: autonomousDatabaseBackupState,
 *     type: autonomousDatabaseBackupType,
 * });
 * ```
 */
export function getAutonomousDatabaseBackupsOutput(args?: GetAutonomousDatabaseBackupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAutonomousDatabaseBackupsResult> {
    return pulumi.output(args).apply((a: any) => getAutonomousDatabaseBackups(a, opts))
}

/**
 * A collection of arguments for invoking getAutonomousDatabaseBackups.
 */
export interface GetAutonomousDatabaseBackupsOutputArgs {
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    autonomousDatabaseId?: pulumi.Input<string>;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetAutonomousDatabaseBackupsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only backups that matches with the given type of Backup.
     */
    type?: pulumi.Input<string>;
}
