// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Cloud Exadata Infrastructure resource in Oracle Cloud Infrastructure Database service.
 *
 * Gets information about the specified cloud Exadata infrastructure resource. Applies to Exadata Cloud Service instances and Autonomous Database on dedicated Exadata infrastructure only.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCloudExadataInfrastructure = oci.Database.getCloudExadataInfrastructure({
 *     cloudExadataInfrastructureId: oci_database_cloud_exadata_infrastructure.test_cloud_exadata_infrastructure.id,
 * });
 * ```
 */
export function getCloudExadataInfrastructure(args: GetCloudExadataInfrastructureArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudExadataInfrastructureResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Database/getCloudExadataInfrastructure:getCloudExadataInfrastructure", {
        "cloudExadataInfrastructureId": args.cloudExadataInfrastructureId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudExadataInfrastructure.
 */
export interface GetCloudExadataInfrastructureArgs {
    /**
     * The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    cloudExadataInfrastructureId: string;
}

/**
 * A collection of values returned by getCloudExadataInfrastructure.
 */
export interface GetCloudExadataInfrastructureResult {
    /**
     * The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     */
    readonly availabilityDomain: string;
    /**
     * The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     */
    readonly availableStorageSizeInGbs: number;
    readonly cloudExadataInfrastructureId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The number of compute servers for the cloud Exadata infrastructure.
     */
    readonly computeCount: number;
    /**
     * The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
     */
    readonly customerContacts: outputs.Database.GetCloudExadataInfrastructureCustomerContact[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    readonly definedTags: {[key: string]: any};
    /**
     * The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
     */
    readonly displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
     */
    readonly id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     */
    readonly lastMaintenanceRunId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    readonly lifecycleDetails: string;
    /**
     * The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     */
    readonly maintenanceWindows: outputs.Database.GetCloudExadataInfrastructureMaintenanceWindow[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     */
    readonly nextMaintenanceRunId: string;
    /**
     * The model name of the cloud Exadata infrastructure resource.
     */
    readonly shape: string;
    /**
     * The current lifecycle state of the cloud Exadata infrastructure resource.
     */
    readonly state: string;
    /**
     * The number of storage servers for the cloud Exadata infrastructure.
     */
    readonly storageCount: number;
    /**
     * The date and time the cloud Exadata infrastructure resource was created.
     */
    readonly timeCreated: string;
    /**
     * The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     */
    readonly totalStorageSizeInGbs: number;
}

export function getCloudExadataInfrastructureOutput(args: GetCloudExadataInfrastructureOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudExadataInfrastructureResult> {
    return pulumi.output(args).apply(a => getCloudExadataInfrastructure(a, opts))
}

/**
 * A collection of arguments for invoking getCloudExadataInfrastructure.
 */
export interface GetCloudExadataInfrastructureOutputArgs {
    /**
     * The cloud Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    cloudExadataInfrastructureId: pulumi.Input<string>;
}
