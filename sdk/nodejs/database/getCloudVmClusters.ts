// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Cloud Vm Clusters in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of the cloud VM clusters in the specified compartment. Applies to Exadata Cloud Service instances and Autonomous Database on dedicated Exadata infrastructure only.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCloudVmClusters = oci.Database.getCloudVmClusters({
 *     compartmentId: compartmentId,
 *     cloudExadataInfrastructureId: testCloudExadataInfrastructure.id,
 *     displayName: cloudVmClusterDisplayName,
 *     state: cloudVmClusterState,
 *     vmClusterType: cloudVmClusterVmClusterType,
 * });
 * ```
 */
export function getCloudVmClusters(args: GetCloudVmClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudVmClustersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getCloudVmClusters:getCloudVmClusters", {
        "cloudExadataInfrastructureId": args.cloudExadataInfrastructureId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "vmClusterType": args.vmClusterType,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudVmClusters.
 */
export interface GetCloudVmClustersArgs {
    /**
     * If provided, filters the results for the specified cloud Exadata infrastructure.
     */
    cloudExadataInfrastructureId?: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: string;
    filters?: inputs.Database.GetCloudVmClustersFilter[];
    /**
     * A filter to return only cloud VM clusters that match the given lifecycle state exactly.
     */
    state?: string;
    /**
     * A filter to return only cloud vmclusters that match the given cloud vmcluster type exactly.
     */
    vmClusterType?: string;
}

/**
 * A collection of values returned by getCloudVmClusters.
 */
export interface GetCloudVmClustersResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
     */
    readonly cloudExadataInfrastructureId?: string;
    /**
     * The list of cloud_vm_clusters.
     */
    readonly cloudVmClusters: outputs.Database.GetCloudVmClustersCloudVmCluster[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The user-friendly name for the cloud VM cluster. The name does not need to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Database.GetCloudVmClustersFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the cloud VM cluster.
     */
    readonly state?: string;
    /**
     * The vmcluster type for the VM cluster/Cloud VM cluster.
     */
    readonly vmClusterType?: string;
}
/**
 * This data source provides the list of Cloud Vm Clusters in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of the cloud VM clusters in the specified compartment. Applies to Exadata Cloud Service instances and Autonomous Database on dedicated Exadata infrastructure only.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCloudVmClusters = oci.Database.getCloudVmClusters({
 *     compartmentId: compartmentId,
 *     cloudExadataInfrastructureId: testCloudExadataInfrastructure.id,
 *     displayName: cloudVmClusterDisplayName,
 *     state: cloudVmClusterState,
 *     vmClusterType: cloudVmClusterVmClusterType,
 * });
 * ```
 */
export function getCloudVmClustersOutput(args: GetCloudVmClustersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudVmClustersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Database/getCloudVmClusters:getCloudVmClusters", {
        "cloudExadataInfrastructureId": args.cloudExadataInfrastructureId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "vmClusterType": args.vmClusterType,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudVmClusters.
 */
export interface GetCloudVmClustersOutputArgs {
    /**
     * If provided, filters the results for the specified cloud Exadata infrastructure.
     */
    cloudExadataInfrastructureId?: pulumi.Input<string>;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetCloudVmClustersFilterArgs>[]>;
    /**
     * A filter to return only cloud VM clusters that match the given lifecycle state exactly.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only cloud vmclusters that match the given cloud vmcluster type exactly.
     */
    vmClusterType?: pulumi.Input<string>;
}
