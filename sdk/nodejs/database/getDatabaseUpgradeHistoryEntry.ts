// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Database Upgrade History Entry resource in Oracle Cloud Infrastructure Database service.
 *
 * gets the upgrade history for a specified database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseUpgradeHistoryEntry = oci.Database.getDatabaseUpgradeHistoryEntry({
 *     databaseId: testDatabase.id,
 *     upgradeHistoryEntryId: testUpgradeHistoryEntry.id,
 * });
 * ```
 */
export function getDatabaseUpgradeHistoryEntry(args: GetDatabaseUpgradeHistoryEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseUpgradeHistoryEntryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getDatabaseUpgradeHistoryEntry:getDatabaseUpgradeHistoryEntry", {
        "databaseId": args.databaseId,
        "upgradeHistoryEntryId": args.upgradeHistoryEntryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseUpgradeHistoryEntry.
 */
export interface GetDatabaseUpgradeHistoryEntryArgs {
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseId: string;
    /**
     * The database/db system upgrade History [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    upgradeHistoryEntryId: string;
}

/**
 * A collection of values returned by getDatabaseUpgradeHistoryEntry.
 */
export interface GetDatabaseUpgradeHistoryEntryResult {
    /**
     * The database upgrade action.
     */
    readonly action: string;
    readonly databaseId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Additional information about the current lifecycle state.
     */
    readonly lifecycleDetails: string;
    /**
     * Additional upgrade options supported by DBUA(Database Upgrade Assistant). Example: "-upgradeTimezone false -keepEvents"
     */
    readonly options: string;
    /**
     * The source of the Oracle Database software to be used for the upgrade.
     * * Use `DB_VERSION` to specify a generally-available Oracle Database software version to upgrade the database.
     * * Use `DB_SOFTWARE_IMAGE` to specify a [database software image](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/databasesoftwareimage.htm) to upgrade the database.
     */
    readonly source: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    readonly sourceDbHomeId: string;
    /**
     * Status of database upgrade history SUCCEEDED|IN_PROGRESS|FAILED.
     */
    readonly state: string;
    /**
     * the database software image used for upgrading database.
     */
    readonly targetDatabaseSoftwareImageId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     */
    readonly targetDbHomeId: string;
    /**
     * A valid Oracle Database version. For a list of supported versions, use the ListDbVersions operation.
     */
    readonly targetDbVersion: string;
    /**
     * The date and time when the database upgrade ended.
     */
    readonly timeEnded: string;
    /**
     * The date and time when the database upgrade started.
     */
    readonly timeStarted: string;
    readonly upgradeHistoryEntryId: string;
}
/**
 * This data source provides details about a specific Database Upgrade History Entry resource in Oracle Cloud Infrastructure Database service.
 *
 * gets the upgrade history for a specified database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseUpgradeHistoryEntry = oci.Database.getDatabaseUpgradeHistoryEntry({
 *     databaseId: testDatabase.id,
 *     upgradeHistoryEntryId: testUpgradeHistoryEntry.id,
 * });
 * ```
 */
export function getDatabaseUpgradeHistoryEntryOutput(args: GetDatabaseUpgradeHistoryEntryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseUpgradeHistoryEntryResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseUpgradeHistoryEntry(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseUpgradeHistoryEntry.
 */
export interface GetDatabaseUpgradeHistoryEntryOutputArgs {
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    databaseId: pulumi.Input<string>;
    /**
     * The database/db system upgrade History [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    upgradeHistoryEntryId: pulumi.Input<string>;
}
