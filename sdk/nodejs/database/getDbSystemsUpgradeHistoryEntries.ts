// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Db Systems Upgrade History Entries in Oracle Cloud Infrastructure Database service.
 *
 * Gets the history of the upgrade actions performed on the specified DB system.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDbSystemsUpgradeHistoryEntries = oci.Database.getDbSystemsUpgradeHistoryEntries({
 *     dbSystemId: oci_database_db_system.test_db_system.id,
 *     state: _var.db_systems_upgrade_history_entry_state,
 *     upgradeAction: _var.db_systems_upgrade_history_entry_upgrade_action,
 * });
 * ```
 */
export function getDbSystemsUpgradeHistoryEntries(args: GetDbSystemsUpgradeHistoryEntriesArgs, opts?: pulumi.InvokeOptions): Promise<GetDbSystemsUpgradeHistoryEntriesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Database/getDbSystemsUpgradeHistoryEntries:getDbSystemsUpgradeHistoryEntries", {
        "dbSystemId": args.dbSystemId,
        "filters": args.filters,
        "state": args.state,
        "upgradeAction": args.upgradeAction,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbSystemsUpgradeHistoryEntries.
 */
export interface GetDbSystemsUpgradeHistoryEntriesArgs {
    /**
     * The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: string;
    filters?: inputs.Database.GetDbSystemsUpgradeHistoryEntriesFilter[];
    /**
     * A filter to return only upgrade history entries that match the given lifecycle state exactly.
     */
    state?: string;
    /**
     * A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
     */
    upgradeAction?: string;
}

/**
 * A collection of values returned by getDbSystemsUpgradeHistoryEntries.
 */
export interface GetDbSystemsUpgradeHistoryEntriesResult {
    readonly dbSystemId: string;
    /**
     * The list of db_system_upgrade_history_entries.
     */
    readonly dbSystemUpgradeHistoryEntries: outputs.Database.GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry[];
    readonly filters?: outputs.Database.GetDbSystemsUpgradeHistoryEntriesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the action.
     */
    readonly state?: string;
    readonly upgradeAction?: string;
}

export function getDbSystemsUpgradeHistoryEntriesOutput(args: GetDbSystemsUpgradeHistoryEntriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbSystemsUpgradeHistoryEntriesResult> {
    return pulumi.output(args).apply(a => getDbSystemsUpgradeHistoryEntries(a, opts))
}

/**
 * A collection of arguments for invoking getDbSystemsUpgradeHistoryEntries.
 */
export interface GetDbSystemsUpgradeHistoryEntriesOutputArgs {
    /**
     * The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetDbSystemsUpgradeHistoryEntriesFilterArgs>[]>;
    /**
     * A filter to return only upgrade history entries that match the given lifecycle state exactly.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only upgradeHistoryEntries that match the specified Upgrade Action.
     */
    upgradeAction?: pulumi.Input<string>;
}
