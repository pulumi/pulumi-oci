// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Execution Window resource in Oracle Cloud Infrastructure Database service.
 *
 * Gets information about the specified execution window.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExecutionWindow = oci.Database.getExecutionWindow({
 *     executionWindowId: testExecutionWindowOciDatabaseExecutionWindow.id,
 * });
 * ```
 */
export function getExecutionWindow(args: GetExecutionWindowArgs, opts?: pulumi.InvokeOptions): Promise<GetExecutionWindowResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getExecutionWindow:getExecutionWindow", {
        "executionWindowId": args.executionWindowId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExecutionWindow.
 */
export interface GetExecutionWindowArgs {
    /**
     * The execution window [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    executionWindowId: string;
}

/**
 * A collection of values returned by getExecutionWindow.
 */
export interface GetExecutionWindowResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Description of the execution window.
     */
    readonly description: string;
    /**
     * The user-friendly name for the execution window. The name does not need to be unique.
     */
    readonly displayName: string;
    /**
     * The estimated time of the execution window in minutes.
     */
    readonly estimatedTimeInMins: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution resource the execution window belongs to.
     */
    readonly executionResourceId: string;
    readonly executionWindowId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the execution window.
     */
    readonly id: string;
    /**
     * Indicates if duration the user plans to allocate for scheduling window is strictly enforced. The default value is `FALSE`.
     */
    readonly isEnforcedDuration: boolean;
    /**
     * Additional information about the current lifecycle state.
     */
    readonly lifecycleDetails: string;
    /**
     * The current sub-state of the execution window. Valid states are DURATION_EXCEEDED, MAINTENANCE_IN_PROGRESS and WAITING.
     */
    readonly lifecycleSubstate: string;
    /**
     * The current state of the Schedule Policy. Valid states are CREATED, SCHEDULED, IN_PROGRESS, FAILED, CANCELED, UPDATING, DELETED, SUCCEEDED and PARTIAL_SUCCESS.
     */
    readonly state: string;
    /**
     * The date and time the execution window was created.
     */
    readonly timeCreated: string;
    /**
     * The date and time that the execution window ended.
     */
    readonly timeEnded: string;
    /**
     * The scheduled start date and time of the execution window.
     */
    readonly timeScheduled: string;
    /**
     * The date and time that the execution window was started.
     */
    readonly timeStarted: string;
    /**
     * The last date and time that the execution window was updated.
     */
    readonly timeUpdated: string;
    /**
     * The total time taken by corresponding resource activity in minutes.
     */
    readonly totalTimeTakenInMins: number;
    /**
     * Duration window allows user to set a duration they plan to allocate for Scheduling window. The duration is in minutes.
     */
    readonly windowDurationInMins: number;
    /**
     * The execution window is of PLANNED or UNPLANNED type.
     */
    readonly windowType: string;
}
/**
 * This data source provides details about a specific Execution Window resource in Oracle Cloud Infrastructure Database service.
 *
 * Gets information about the specified execution window.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExecutionWindow = oci.Database.getExecutionWindow({
 *     executionWindowId: testExecutionWindowOciDatabaseExecutionWindow.id,
 * });
 * ```
 */
export function getExecutionWindowOutput(args: GetExecutionWindowOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExecutionWindowResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Database/getExecutionWindow:getExecutionWindow", {
        "executionWindowId": args.executionWindowId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExecutionWindow.
 */
export interface GetExecutionWindowOutputArgs {
    /**
     * The execution window [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    executionWindowId: pulumi.Input<string>;
}
