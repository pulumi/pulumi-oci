// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Pluggable Database Snapshots in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of the Exadata Pluggable Database Snapshots in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPluggableDatabaseSnapshots = oci.Database.getPluggableDatabaseSnapshots({
 *     clusterId: testCluster.id,
 *     compartmentId: compartmentId,
 *     name: pluggableDatabaseSnapshotName,
 *     pluggableDatabaseId: testPluggableDatabase.id,
 *     state: pluggableDatabaseSnapshotState,
 * });
 * ```
 */
export function getPluggableDatabaseSnapshots(args?: GetPluggableDatabaseSnapshotsArgs, opts?: pulumi.InvokeOptions): Promise<GetPluggableDatabaseSnapshotsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getPluggableDatabaseSnapshots:getPluggableDatabaseSnapshots", {
        "clusterId": args.clusterId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "pluggableDatabaseId": args.pluggableDatabaseId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getPluggableDatabaseSnapshots.
 */
export interface GetPluggableDatabaseSnapshotsArgs {
    /**
     * A filter to return only Exadata Database Node Snapshots that match the given VM cluster.
     */
    clusterId?: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: string;
    filters?: inputs.Database.GetPluggableDatabaseSnapshotsFilter[];
    /**
     * A filter to return only resources that match the entire name given. The match is not case sensitive.
     */
    name?: string;
    /**
     * A filter to return only Exadata Pluggable Database Snapshots that match the given database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    pluggableDatabaseId?: string;
    /**
     * A filter to return only Exadata Pluggable Database Snapshots that match the given lifecycle state exactly.
     */
    state?: string;
}

/**
 * A collection of values returned by getPluggableDatabaseSnapshots.
 */
export interface GetPluggableDatabaseSnapshotsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     */
    readonly clusterId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId?: string;
    readonly filters?: outputs.Database.GetPluggableDatabaseSnapshotsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The user-friendly name for the Database Snapshot. The name should be unique.
     */
    readonly name?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Pluggable Database.
     */
    readonly pluggableDatabaseId?: string;
    /**
     * The list of pluggable_database_snapshots.
     */
    readonly pluggableDatabaseSnapshots: outputs.Database.GetPluggableDatabaseSnapshotsPluggableDatabaseSnapshot[];
    /**
     * The current state of the Exadata Pluggable Database Snapshot.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Pluggable Database Snapshots in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of the Exadata Pluggable Database Snapshots in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPluggableDatabaseSnapshots = oci.Database.getPluggableDatabaseSnapshots({
 *     clusterId: testCluster.id,
 *     compartmentId: compartmentId,
 *     name: pluggableDatabaseSnapshotName,
 *     pluggableDatabaseId: testPluggableDatabase.id,
 *     state: pluggableDatabaseSnapshotState,
 * });
 * ```
 */
export function getPluggableDatabaseSnapshotsOutput(args?: GetPluggableDatabaseSnapshotsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPluggableDatabaseSnapshotsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Database/getPluggableDatabaseSnapshots:getPluggableDatabaseSnapshots", {
        "clusterId": args.clusterId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "pluggableDatabaseId": args.pluggableDatabaseId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getPluggableDatabaseSnapshots.
 */
export interface GetPluggableDatabaseSnapshotsOutputArgs {
    /**
     * A filter to return only Exadata Database Node Snapshots that match the given VM cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetPluggableDatabaseSnapshotsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the entire name given. The match is not case sensitive.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only Exadata Pluggable Database Snapshots that match the given database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    pluggableDatabaseId?: pulumi.Input<string>;
    /**
     * A filter to return only Exadata Pluggable Database Snapshots that match the given lifecycle state exactly.
     */
    state?: pulumi.Input<string>;
}
