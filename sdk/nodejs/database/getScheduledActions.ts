// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Scheduled Actions in Oracle Cloud Infrastructure Database service.
 *
 * Lists the Scheduled Action resources in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testScheduledActions = oci.Database.getScheduledActions({
 *     compartmentId: compartmentId,
 *     displayName: scheduledActionDisplayName,
 *     id: scheduledActionId,
 *     schedulingPlanId: testSchedulingPlan.id,
 *     serviceType: scheduledActionServiceType,
 *     state: scheduledActionState,
 * });
 * ```
 */
export function getScheduledActions(args: GetScheduledActionsArgs, opts?: pulumi.InvokeOptions): Promise<GetScheduledActionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getScheduledActions:getScheduledActions", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "schedulingPlanId": args.schedulingPlanId,
        "serviceType": args.serviceType,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getScheduledActions.
 */
export interface GetScheduledActionsArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: string;
    filters?: inputs.Database.GetScheduledActionsFilter[];
    /**
     * A filter to return only resources that match the given Scheduled Action id exactly.
     */
    id?: string;
    /**
     * A filter to return only resources that match the given scheduling policy id exactly.
     */
    schedulingPlanId?: string;
    /**
     * A filter to return only resources that match the given service type exactly.
     */
    serviceType?: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: string;
}

/**
 * A collection of values returned by getScheduledActions.
 */
export interface GetScheduledActionsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The display name of the Scheduled Action.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Database.GetScheduledActionsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduled Action.
     */
    readonly id?: string;
    /**
     * The list of scheduled_action_collection.
     */
    readonly scheduledActionCollections: outputs.Database.GetScheduledActionsScheduledActionCollection[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Plan.
     */
    readonly schedulingPlanId?: string;
    readonly serviceType?: string;
    /**
     * The current state of the Scheduled Action. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Scheduled Actions in Oracle Cloud Infrastructure Database service.
 *
 * Lists the Scheduled Action resources in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testScheduledActions = oci.Database.getScheduledActions({
 *     compartmentId: compartmentId,
 *     displayName: scheduledActionDisplayName,
 *     id: scheduledActionId,
 *     schedulingPlanId: testSchedulingPlan.id,
 *     serviceType: scheduledActionServiceType,
 *     state: scheduledActionState,
 * });
 * ```
 */
export function getScheduledActionsOutput(args: GetScheduledActionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetScheduledActionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Database/getScheduledActions:getScheduledActions", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "schedulingPlanId": args.schedulingPlanId,
        "serviceType": args.serviceType,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getScheduledActions.
 */
export interface GetScheduledActionsOutputArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetScheduledActionsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the given Scheduled Action id exactly.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given scheduling policy id exactly.
     */
    schedulingPlanId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given service type exactly.
     */
    serviceType?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: pulumi.Input<string>;
}
