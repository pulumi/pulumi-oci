// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Scheduling Policy Scheduling Windows in Oracle Cloud Infrastructure Database service.
 *
 * Lists the Scheduling Window resources in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSchedulingPolicySchedulingWindows = oci.Database.getSchedulingPolicySchedulingWindows({
 *     schedulingPolicyId: testSchedulingPolicy.id,
 *     compartmentId: compartmentId,
 *     displayName: schedulingPolicySchedulingWindowDisplayName,
 *     state: schedulingPolicySchedulingWindowState,
 * });
 * ```
 */
export function getSchedulingPolicySchedulingWindows(args: GetSchedulingPolicySchedulingWindowsArgs, opts?: pulumi.InvokeOptions): Promise<GetSchedulingPolicySchedulingWindowsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getSchedulingPolicySchedulingWindows:getSchedulingPolicySchedulingWindows", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "schedulingPolicyId": args.schedulingPolicyId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchedulingPolicySchedulingWindows.
 */
export interface GetSchedulingPolicySchedulingWindowsArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: string;
    filters?: inputs.Database.GetSchedulingPolicySchedulingWindowsFilter[];
    /**
     * The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    schedulingPolicyId: string;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: string;
}

/**
 * A collection of values returned by getSchedulingPolicySchedulingWindows.
 */
export interface GetSchedulingPolicySchedulingWindowsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId?: string;
    /**
     * The user-friendly name for the Scheduling Window. The name does not need to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Database.GetSchedulingPolicySchedulingWindowsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
     */
    readonly schedulingPolicyId: string;
    /**
     * The list of scheduling_windows.
     */
    readonly schedulingWindows: outputs.Database.GetSchedulingPolicySchedulingWindowsSchedulingWindow[];
    /**
     * The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Scheduling Policy Scheduling Windows in Oracle Cloud Infrastructure Database service.
 *
 * Lists the Scheduling Window resources in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSchedulingPolicySchedulingWindows = oci.Database.getSchedulingPolicySchedulingWindows({
 *     schedulingPolicyId: testSchedulingPolicy.id,
 *     compartmentId: compartmentId,
 *     displayName: schedulingPolicySchedulingWindowDisplayName,
 *     state: schedulingPolicySchedulingWindowState,
 * });
 * ```
 */
export function getSchedulingPolicySchedulingWindowsOutput(args: GetSchedulingPolicySchedulingWindowsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSchedulingPolicySchedulingWindowsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Database/getSchedulingPolicySchedulingWindows:getSchedulingPolicySchedulingWindows", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "schedulingPolicyId": args.schedulingPolicyId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchedulingPolicySchedulingWindows.
 */
export interface GetSchedulingPolicySchedulingWindowsOutputArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetSchedulingPolicySchedulingWindowsFilterArgs>[]>;
    /**
     * The Scheduling Policy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    schedulingPolicyId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: pulumi.Input<string>;
}
