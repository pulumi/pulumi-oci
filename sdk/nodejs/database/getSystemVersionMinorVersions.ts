// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of System Version Minor Versions in Oracle Cloud Infrastructure Database service.
 *
 * Retrieves a list of supported minor versions for the specified Exadata System Software major version. You must provide either a `shape` or `resourceId` value.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSystemVersionMinorVersions = oci.Database.getSystemVersionMinorVersions({
 *     compartmentId: compartmentId,
 *     giVersion: systemVersionMinorVersionGiVersion,
 *     majorVersion: systemVersionMinorVersionMajorVersion,
 *     isLatest: systemVersionMinorVersionIsLatest,
 *     resourceId: testResource.id,
 *     shape: systemVersionMinorVersionShape,
 * });
 * ```
 */
export function getSystemVersionMinorVersions(args: GetSystemVersionMinorVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemVersionMinorVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getSystemVersionMinorVersions:getSystemVersionMinorVersions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "giVersion": args.giVersion,
        "isLatest": args.isLatest,
        "majorVersion": args.majorVersion,
        "resourceId": args.resourceId,
        "shape": args.shape,
    }, opts);
}

/**
 * A collection of arguments for invoking getSystemVersionMinorVersions.
 */
export interface GetSystemVersionMinorVersionsArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    filters?: inputs.Database.GetSystemVersionMinorVersionsFilter[];
    /**
     * Specifies gi version query parameter.
     */
    giVersion: string;
    /**
     * If provided, return highest versions from each major version family.
     */
    isLatest?: boolean;
    /**
     * The System major version.
     */
    majorVersion: string;
    /**
     * If provided, filters the results for the specified resource Id.
     */
    resourceId?: string;
    /**
     * If provided, filters the results for the given shape.
     */
    shape?: string;
}

/**
 * A collection of values returned by getSystemVersionMinorVersions.
 */
export interface GetSystemVersionMinorVersionsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.Database.GetSystemVersionMinorVersionsFilter[];
    readonly giVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isLatest?: boolean;
    readonly majorVersion: string;
    readonly resourceId?: string;
    readonly shape?: string;
    /**
     * The list of system_version_minor_version_collection.
     */
    readonly systemVersionMinorVersionCollections: outputs.Database.GetSystemVersionMinorVersionsSystemVersionMinorVersionCollection[];
}
/**
 * This data source provides the list of System Version Minor Versions in Oracle Cloud Infrastructure Database service.
 *
 * Retrieves a list of supported minor versions for the specified Exadata System Software major version. You must provide either a `shape` or `resourceId` value.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSystemVersionMinorVersions = oci.Database.getSystemVersionMinorVersions({
 *     compartmentId: compartmentId,
 *     giVersion: systemVersionMinorVersionGiVersion,
 *     majorVersion: systemVersionMinorVersionMajorVersion,
 *     isLatest: systemVersionMinorVersionIsLatest,
 *     resourceId: testResource.id,
 *     shape: systemVersionMinorVersionShape,
 * });
 * ```
 */
export function getSystemVersionMinorVersionsOutput(args: GetSystemVersionMinorVersionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSystemVersionMinorVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Database/getSystemVersionMinorVersions:getSystemVersionMinorVersions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "giVersion": args.giVersion,
        "isLatest": args.isLatest,
        "majorVersion": args.majorVersion,
        "resourceId": args.resourceId,
        "shape": args.shape,
    }, opts);
}

/**
 * A collection of arguments for invoking getSystemVersionMinorVersions.
 */
export interface GetSystemVersionMinorVersionsOutputArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetSystemVersionMinorVersionsFilterArgs>[]>;
    /**
     * Specifies gi version query parameter.
     */
    giVersion: pulumi.Input<string>;
    /**
     * If provided, return highest versions from each major version family.
     */
    isLatest?: pulumi.Input<boolean>;
    /**
     * The System major version.
     */
    majorVersion: pulumi.Input<string>;
    /**
     * If provided, filters the results for the specified resource Id.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * If provided, filters the results for the given shape.
     */
    shape?: pulumi.Input<string>;
}
