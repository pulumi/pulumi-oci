// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of System Versions in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of supported Exadata system versions for a given shape and GI version.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSystemVersions = oci.Database.getSystemVersions({
 *     compartmentId: compartmentId,
 *     giVersion: systemVersionGiVersion,
 *     shape: systemVersionShape,
 * });
 * ```
 */
export function getSystemVersions(args: GetSystemVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSystemVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getSystemVersions:getSystemVersions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "giVersion": args.giVersion,
        "shape": args.shape,
    }, opts);
}

/**
 * A collection of arguments for invoking getSystemVersions.
 */
export interface GetSystemVersionsArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    filters?: inputs.Database.GetSystemVersionsFilter[];
    /**
     * Specifies gi version query parameter.
     */
    giVersion: string;
    /**
     * Specifies shape query parameter.
     */
    shape: string;
}

/**
 * A collection of values returned by getSystemVersions.
 */
export interface GetSystemVersionsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.Database.GetSystemVersionsFilter[];
    /**
     * Grid Infrastructure version.
     */
    readonly giVersion: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Exadata shape.
     */
    readonly shape: string;
    /**
     * The list of system_version_collection.
     */
    readonly systemVersionCollections: outputs.Database.GetSystemVersionsSystemVersionCollection[];
}
/**
 * This data source provides the list of System Versions in Oracle Cloud Infrastructure Database service.
 *
 * Gets a list of supported Exadata system versions for a given shape and GI version.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSystemVersions = oci.Database.getSystemVersions({
 *     compartmentId: compartmentId,
 *     giVersion: systemVersionGiVersion,
 *     shape: systemVersionShape,
 * });
 * ```
 */
export function getSystemVersionsOutput(args: GetSystemVersionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSystemVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Database/getSystemVersions:getSystemVersions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "giVersion": args.giVersion,
        "shape": args.shape,
    }, opts);
}

/**
 * A collection of arguments for invoking getSystemVersions.
 */
export interface GetSystemVersionsOutputArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetSystemVersionsFilterArgs>[]>;
    /**
     * Specifies gi version query parameter.
     */
    giVersion: pulumi.Input<string>;
    /**
     * Specifies shape query parameter.
     */
    shape: pulumi.Input<string>;
}
