// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Vm Clusters in Oracle Cloud Infrastructure Database service.
 *
 * Lists the VM clusters in the specified compartment. Applies to Exadata Cloud@Customer instances only.
 * To list the cloud VM clusters in an Exadata Cloud Service instance, use the [ListCloudVmClusters ](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/ListCloudVmClusters) operation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVmClusters = oci.Database.getVmClusters({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.vm_cluster_display_name,
 *     exadataInfrastructureId: oci_database_exadata_infrastructure.test_exadata_infrastructure.id,
 *     state: _var.vm_cluster_state,
 * });
 * ```
 */
export function getVmClusters(args: GetVmClustersArgs, opts?: pulumi.InvokeOptions): Promise<GetVmClustersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Database/getVmClusters:getVmClusters", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "exadataInfrastructureId": args.exadataInfrastructureId,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getVmClusters.
 */
export interface GetVmClustersArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: string;
    /**
     * If provided, filters the results for the given Exadata Infrastructure.
     */
    exadataInfrastructureId?: string;
    filters?: inputs.Database.GetVmClustersFilter[];
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: string;
}

/**
 * A collection of values returned by getVmClusters.
 */
export interface GetVmClustersResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The user-friendly name for the Exadata Cloud@Customer VM cluster. The name does not need to be unique.
     */
    readonly displayName?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     */
    readonly exadataInfrastructureId?: string;
    readonly filters?: outputs.Database.GetVmClustersFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * The current state of the VM cluster.
     */
    readonly state?: string;
    /**
     * The list of vm_clusters.
     */
    readonly vmClusters?: outputs.Database.GetVmClustersVmCluster[];
}
/**
 * This data source provides the list of Vm Clusters in Oracle Cloud Infrastructure Database service.
 *
 * Lists the VM clusters in the specified compartment. Applies to Exadata Cloud@Customer instances only.
 * To list the cloud VM clusters in an Exadata Cloud Service instance, use the [ListCloudVmClusters ](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/ListCloudVmClusters) operation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVmClusters = oci.Database.getVmClusters({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.vm_cluster_display_name,
 *     exadataInfrastructureId: oci_database_exadata_infrastructure.test_exadata_infrastructure.id,
 *     state: _var.vm_cluster_state,
 * });
 * ```
 */
export function getVmClustersOutput(args: GetVmClustersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVmClustersResult> {
    return pulumi.output(args).apply((a: any) => getVmClusters(a, opts))
}

/**
 * A collection of arguments for invoking getVmClusters.
 */
export interface GetVmClustersOutputArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: pulumi.Input<string>;
    /**
     * If provided, filters the results for the given Exadata Infrastructure.
     */
    exadataInfrastructureId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Database.GetVmClustersFilterArgs>[]>;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    state?: pulumi.Input<string>;
}
