// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Key Store resource in Oracle Cloud Infrastructure Database service.
 *
 * Creates a Key Store.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testKeyStore = new oci.database.KeyStore("testKeyStore", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.key_store_display_name,
 *     typeDetails: {
 *         adminUsername: _var.key_store_type_details_admin_username,
 *         connectionIps: _var.key_store_type_details_connection_ips,
 *         secretId: oci_vault_secret.test_secret.id,
 *         type: _var.key_store_type_details_type,
 *         vaultId: oci_kms_vault.test_vault.id,
 *     },
 *     definedTags: _var.key_store_defined_tags,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * KeyStores can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Database/keyStore:KeyStore test_key_store "id"
 * ```
 */
export class KeyStore extends pulumi.CustomResource {
    /**
     * Get an existing KeyStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KeyStoreState, opts?: pulumi.CustomResourceOptions): KeyStore {
        return new KeyStore(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/keyStore:KeyStore';

    /**
     * Returns true if the given object is an instance of KeyStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KeyStore {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KeyStore.__pulumiType;
    }

    /**
     * List of databases associated with the key store.
     */
    public /*out*/ readonly associatedDatabases!: pulumi.Output<outputs.Database.KeyStoreAssociatedDatabase[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The user-friendly name for the key store. The name does not need to be unique.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Additional information about the current lifecycle state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * The current state of the key store.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time that the key store was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * (Updatable) Key store type details.
     */
    public readonly typeDetails!: pulumi.Output<outputs.Database.KeyStoreTypeDetails>;

    /**
     * Create a KeyStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeyStoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KeyStoreArgs | KeyStoreState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KeyStoreState | undefined;
            resourceInputs["associatedDatabases"] = state ? state.associatedDatabases : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["typeDetails"] = state ? state.typeDetails : undefined;
        } else {
            const args = argsOrState as KeyStoreArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.typeDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'typeDetails'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["typeDetails"] = args ? args.typeDetails : undefined;
            resourceInputs["associatedDatabases"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KeyStore.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KeyStore resources.
 */
export interface KeyStoreState {
    /**
     * List of databases associated with the key store.
     */
    associatedDatabases?: pulumi.Input<pulumi.Input<inputs.Database.KeyStoreAssociatedDatabase>[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The user-friendly name for the key store. The name does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The current state of the key store.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time that the key store was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) Key store type details.
     */
    typeDetails?: pulumi.Input<inputs.Database.KeyStoreTypeDetails>;
}

/**
 * The set of arguments for constructing a KeyStore resource.
 */
export interface KeyStoreArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The user-friendly name for the key store. The name does not need to be unique.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Key store type details.
     */
    typeDetails: pulumi.Input<inputs.Database.KeyStoreTypeDetails>;
}
