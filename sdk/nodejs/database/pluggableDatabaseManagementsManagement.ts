// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Pluggable Database Pluggabledatabasemanagements Management resource in Oracle Cloud Infrastructure Database service.
 *
 * Enables the Database Management service for an Oracle Pluggable Database located in Oracle Cloud Infrastructure. This service allows the pluggable database to access tools including Metrics and Performance hub. Database Management is enabled at the pluggable database (PDB) level.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPluggableDatabasePluggabledatabasemanagementsManagement = new oci.database.PluggableDatabaseManagementsManagement("test_pluggable_database_pluggabledatabasemanagements_management", {
 *     pluggableDatabaseId: testPluggableDatabase.id,
 *     enablePluggabledatabasemanagement: enablePluggabledatabasemanagement,
 *     credentialDetails: {
 *         passwordSecretId: testSecret.id,
 *         userName: testUser.name,
 *     },
 *     privateEndPointId: testPrivateEndPoint.id,
 *     serviceName: testService.name,
 *     port: pluggableDatabasePluggabledatabasemanagementsManagementPort,
 *     protocol: pluggableDatabasePluggabledatabasemanagementsManagementProtocol,
 *     role: pluggableDatabasePluggabledatabasemanagementsManagementRole,
 *     sslSecretId: testSecret.id,
 * });
 * ```
 */
export class PluggableDatabaseManagementsManagement extends pulumi.CustomResource {
    /**
     * Get an existing PluggableDatabaseManagementsManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PluggableDatabaseManagementsManagementState, opts?: pulumi.CustomResourceOptions): PluggableDatabaseManagementsManagement {
        return new PluggableDatabaseManagementsManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/pluggableDatabaseManagementsManagement:PluggableDatabaseManagementsManagement';

    /**
     * Returns true if the given object is an instance of PluggableDatabaseManagementsManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PluggableDatabaseManagementsManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PluggableDatabaseManagementsManagement.__pulumiType;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * Connection strings to connect to an Oracle Pluggable Database.
     */
    declare public /*out*/ readonly connectionStrings: pulumi.Output<outputs.Database.PluggableDatabaseManagementsManagementConnectionString[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
     */
    declare public /*out*/ readonly containerDatabaseId: pulumi.Output<string>;
    /**
     * Data for the credential used to connect to the database.
     */
    declare public readonly credentialDetails: pulumi.Output<outputs.Database.PluggableDatabaseManagementsManagementCredentialDetails>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public /*out*/ readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly enablePluggabledatabasemanagement: pulumi.Output<boolean>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public /*out*/ readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
     */
    declare public /*out*/ readonly isRestricted: pulumi.Output<boolean>;
    /**
     * Detailed message for the lifecycle state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     */
    declare public /*out*/ readonly openMode: pulumi.Output<string>;
    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     */
    declare public /*out*/ readonly pdbName: pulumi.Output<string>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public readonly pluggableDatabaseId: pulumi.Output<string>;
    /**
     * The configuration of the Pluggable Database Management service.
     */
    declare public /*out*/ readonly pluggableDatabaseManagementConfigs: pulumi.Output<outputs.Database.PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfig[]>;
    /**
     * The port used to connect to the pluggable database.
     */
    declare public readonly port: pulumi.Output<number>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     */
    declare public readonly privateEndPointId: pulumi.Output<string>;
    /**
     * Protocol used by the database connection.
     */
    declare public readonly protocol: pulumi.Output<string>;
    /**
     * The role of the user that will be connecting to the pluggable database.
     */
    declare public readonly role: pulumi.Output<string>;
    /**
     * The name of the Oracle Database service that will be used to connect to the database.
     */
    declare public readonly serviceName: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    declare public readonly sslSecretId: pulumi.Output<string>;
    /**
     * The current state of the pluggable database.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The date and time the pluggable database was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;

    /**
     * Create a PluggableDatabaseManagementsManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PluggableDatabaseManagementsManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PluggableDatabaseManagementsManagementArgs | PluggableDatabaseManagementsManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PluggableDatabaseManagementsManagementState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["connectionStrings"] = state?.connectionStrings;
            resourceInputs["containerDatabaseId"] = state?.containerDatabaseId;
            resourceInputs["credentialDetails"] = state?.credentialDetails;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["enablePluggabledatabasemanagement"] = state?.enablePluggabledatabasemanagement;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["isRestricted"] = state?.isRestricted;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["openMode"] = state?.openMode;
            resourceInputs["pdbName"] = state?.pdbName;
            resourceInputs["pluggableDatabaseId"] = state?.pluggableDatabaseId;
            resourceInputs["pluggableDatabaseManagementConfigs"] = state?.pluggableDatabaseManagementConfigs;
            resourceInputs["port"] = state?.port;
            resourceInputs["privateEndPointId"] = state?.privateEndPointId;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["role"] = state?.role;
            resourceInputs["serviceName"] = state?.serviceName;
            resourceInputs["sslSecretId"] = state?.sslSecretId;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeCreated"] = state?.timeCreated;
        } else {
            const args = argsOrState as PluggableDatabaseManagementsManagementArgs | undefined;
            if (args?.credentialDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'credentialDetails'");
            }
            if (args?.enablePluggabledatabasemanagement === undefined && !opts.urn) {
                throw new Error("Missing required property 'enablePluggabledatabasemanagement'");
            }
            if (args?.pluggableDatabaseId === undefined && !opts.urn) {
                throw new Error("Missing required property 'pluggableDatabaseId'");
            }
            if (args?.privateEndPointId === undefined && !opts.urn) {
                throw new Error("Missing required property 'privateEndPointId'");
            }
            if (args?.serviceName === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["credentialDetails"] = args?.credentialDetails;
            resourceInputs["enablePluggabledatabasemanagement"] = args?.enablePluggabledatabasemanagement;
            resourceInputs["pluggableDatabaseId"] = args?.pluggableDatabaseId;
            resourceInputs["port"] = args?.port;
            resourceInputs["privateEndPointId"] = args?.privateEndPointId;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["role"] = args?.role;
            resourceInputs["serviceName"] = args?.serviceName;
            resourceInputs["sslSecretId"] = args?.sslSecretId;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["connectionStrings"] = undefined /*out*/;
            resourceInputs["containerDatabaseId"] = undefined /*out*/;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["isRestricted"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["openMode"] = undefined /*out*/;
            resourceInputs["pdbName"] = undefined /*out*/;
            resourceInputs["pluggableDatabaseManagementConfigs"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PluggableDatabaseManagementsManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PluggableDatabaseManagementsManagement resources.
 */
export interface PluggableDatabaseManagementsManagementState {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Connection strings to connect to an Oracle Pluggable Database.
     */
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.Database.PluggableDatabaseManagementsManagementConnectionString>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
     */
    containerDatabaseId?: pulumi.Input<string>;
    /**
     * Data for the credential used to connect to the database.
     */
    credentialDetails?: pulumi.Input<inputs.Database.PluggableDatabaseManagementsManagementCredentialDetails>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    enablePluggabledatabasemanagement?: pulumi.Input<boolean>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
     */
    isRestricted?: pulumi.Input<boolean>;
    /**
     * Detailed message for the lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     */
    openMode?: pulumi.Input<string>;
    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     */
    pdbName?: pulumi.Input<string>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    pluggableDatabaseId?: pulumi.Input<string>;
    /**
     * The configuration of the Pluggable Database Management service.
     */
    pluggableDatabaseManagementConfigs?: pulumi.Input<pulumi.Input<inputs.Database.PluggableDatabaseManagementsManagementPluggableDatabaseManagementConfig>[]>;
    /**
     * The port used to connect to the pluggable database.
     */
    port?: pulumi.Input<number>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     */
    privateEndPointId?: pulumi.Input<string>;
    /**
     * Protocol used by the database connection.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The role of the user that will be connecting to the pluggable database.
     */
    role?: pulumi.Input<string>;
    /**
     * The name of the Oracle Database service that will be used to connect to the database.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    sslSecretId?: pulumi.Input<string>;
    /**
     * The current state of the pluggable database.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the pluggable database was created.
     */
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PluggableDatabaseManagementsManagement resource.
 */
export interface PluggableDatabaseManagementsManagementArgs {
    /**
     * Data for the credential used to connect to the database.
     */
    credentialDetails: pulumi.Input<inputs.Database.PluggableDatabaseManagementsManagementCredentialDetails>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    enablePluggabledatabasemanagement: pulumi.Input<boolean>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    pluggableDatabaseId: pulumi.Input<string>;
    /**
     * The port used to connect to the pluggable database.
     */
    port?: pulumi.Input<number>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     */
    privateEndPointId: pulumi.Input<string>;
    /**
     * Protocol used by the database connection.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The role of the user that will be connecting to the pluggable database.
     */
    role?: pulumi.Input<string>;
    /**
     * The name of the Oracle Database service that will be used to connect to the database.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     */
    sslSecretId?: pulumi.Input<string>;
}
