// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Pluggable Databases Remote Clone resource in Oracle Cloud Infrastructure Database service.
 *
 * **Deprecated.** Use [CreatePluggableDatabase](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/PluggableDatabase/CreatePluggableDatabase) for Pluggable Database RemoteClone Operation.
 * Clones a pluggable database (PDB) to a different database from the source PDB. The cloned PDB will be started upon completion of the clone operation. The source PDB must be in the `READ_WRITE` openMode when performing the clone.
 * For Exadata Cloud@Customer instances, the source pluggable database (PDB) must be on the same Exadata Infrastructure as the target container database (CDB) to create a remote clone.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPluggableDatabasesRemoteClone = new oci.database.PluggableDatabasesRemoteClone("test_pluggable_databases_remote_clone", {
 *     clonedPdbName: pluggableDatabasesRemoteCloneClonedPdbName,
 *     pluggableDatabaseId: testPluggableDatabase.id,
 *     sourceContainerDbAdminPassword: pluggableDatabasesRemoteCloneSourceContainerDbAdminPassword,
 *     targetContainerDatabaseId: testDatabase.id,
 *     pdbAdminPassword: pluggableDatabasesRemoteClonePdbAdminPassword,
 *     shouldPdbAdminAccountBeLocked: pluggableDatabasesRemoteCloneShouldPdbAdminAccountBeLocked,
 *     targetTdeWalletPassword: pluggableDatabasesRemoteCloneTargetTdeWalletPassword,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class PluggableDatabasesRemoteClone extends pulumi.CustomResource {
    /**
     * Get an existing PluggableDatabasesRemoteClone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PluggableDatabasesRemoteCloneState, opts?: pulumi.CustomResourceOptions): PluggableDatabasesRemoteClone {
        return new PluggableDatabasesRemoteClone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/pluggableDatabasesRemoteClone:PluggableDatabasesRemoteClone';

    /**
     * Returns true if the given object is an instance of PluggableDatabasesRemoteClone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PluggableDatabasesRemoteClone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PluggableDatabasesRemoteClone.__pulumiType;
    }

    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     */
    public readonly clonedPdbName!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * Connection strings to connect to an Oracle Pluggable Database.
     */
    public /*out*/ readonly connectionStrings!: pulumi.Output<outputs.Database.PluggableDatabasesRemoteCloneConnectionString[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
     */
    public /*out*/ readonly containerDatabaseId!: pulumi.Output<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public /*out*/ readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public /*out*/ readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
     */
    public /*out*/ readonly isRestricted!: pulumi.Output<boolean>;
    /**
     * Detailed message for the lifecycle state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     */
    public /*out*/ readonly openMode!: pulumi.Output<string>;
    /**
     * A strong password for PDB Admin of the newly cloned PDB. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
     */
    public readonly pdbAdminPassword!: pulumi.Output<string>;
    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     */
    public /*out*/ readonly pdbName!: pulumi.Output<string>;
    /**
     * Pluggable Database Node Level Details. Example: [{"nodeName" : "node1", "openMode" : "READ_WRITE"}, {"nodeName" : "node2", "openMode" : "READ_ONLY"}]
     */
    public /*out*/ readonly pdbNodeLevelDetails!: pulumi.Output<outputs.Database.PluggableDatabasesRemoteClonePdbNodeLevelDetail[]>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    public readonly pluggableDatabaseId!: pulumi.Output<string>;
    /**
     * The configuration of the Pluggable Database Management service.
     */
    public /*out*/ readonly pluggableDatabaseManagementConfigs!: pulumi.Output<outputs.Database.PluggableDatabasesRemoteClonePluggableDatabaseManagementConfig[]>;
    /**
     * Pluggable Database Refreshable Clone Configuration.
     */
    public /*out*/ readonly refreshableCloneConfigs!: pulumi.Output<outputs.Database.PluggableDatabasesRemoteCloneRefreshableCloneConfig[]>;
    /**
     * The locked mode of the pluggable database admin account. If false, the user needs to provide the PDB Admin Password to connect to it. If true, the pluggable database will be locked and user cannot login to it.
     */
    public readonly shouldPdbAdminAccountBeLocked!: pulumi.Output<boolean>;
    /**
     * The DB system administrator password of the source CDB.
     */
    public readonly sourceContainerDbAdminPassword!: pulumi.Output<string>;
    /**
     * The current state of the pluggable database.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target CDB
     */
    public readonly targetContainerDatabaseId!: pulumi.Output<string>;
    /**
     * The existing TDE wallet password of the target CDB.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly targetTdeWalletPassword!: pulumi.Output<string>;
    /**
     * The date and time the pluggable database was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;

    /**
     * Create a PluggableDatabasesRemoteClone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PluggableDatabasesRemoteCloneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PluggableDatabasesRemoteCloneArgs | PluggableDatabasesRemoteCloneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PluggableDatabasesRemoteCloneState | undefined;
            resourceInputs["clonedPdbName"] = state ? state.clonedPdbName : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionStrings"] = state ? state.connectionStrings : undefined;
            resourceInputs["containerDatabaseId"] = state ? state.containerDatabaseId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isRestricted"] = state ? state.isRestricted : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["openMode"] = state ? state.openMode : undefined;
            resourceInputs["pdbAdminPassword"] = state ? state.pdbAdminPassword : undefined;
            resourceInputs["pdbName"] = state ? state.pdbName : undefined;
            resourceInputs["pdbNodeLevelDetails"] = state ? state.pdbNodeLevelDetails : undefined;
            resourceInputs["pluggableDatabaseId"] = state ? state.pluggableDatabaseId : undefined;
            resourceInputs["pluggableDatabaseManagementConfigs"] = state ? state.pluggableDatabaseManagementConfigs : undefined;
            resourceInputs["refreshableCloneConfigs"] = state ? state.refreshableCloneConfigs : undefined;
            resourceInputs["shouldPdbAdminAccountBeLocked"] = state ? state.shouldPdbAdminAccountBeLocked : undefined;
            resourceInputs["sourceContainerDbAdminPassword"] = state ? state.sourceContainerDbAdminPassword : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["targetContainerDatabaseId"] = state ? state.targetContainerDatabaseId : undefined;
            resourceInputs["targetTdeWalletPassword"] = state ? state.targetTdeWalletPassword : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
        } else {
            const args = argsOrState as PluggableDatabasesRemoteCloneArgs | undefined;
            if ((!args || args.clonedPdbName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clonedPdbName'");
            }
            if ((!args || args.pluggableDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pluggableDatabaseId'");
            }
            if ((!args || args.sourceContainerDbAdminPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceContainerDbAdminPassword'");
            }
            if ((!args || args.targetContainerDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetContainerDatabaseId'");
            }
            resourceInputs["clonedPdbName"] = args ? args.clonedPdbName : undefined;
            resourceInputs["pdbAdminPassword"] = args?.pdbAdminPassword ? pulumi.secret(args.pdbAdminPassword) : undefined;
            resourceInputs["pluggableDatabaseId"] = args ? args.pluggableDatabaseId : undefined;
            resourceInputs["shouldPdbAdminAccountBeLocked"] = args ? args.shouldPdbAdminAccountBeLocked : undefined;
            resourceInputs["sourceContainerDbAdminPassword"] = args?.sourceContainerDbAdminPassword ? pulumi.secret(args.sourceContainerDbAdminPassword) : undefined;
            resourceInputs["targetContainerDatabaseId"] = args ? args.targetContainerDatabaseId : undefined;
            resourceInputs["targetTdeWalletPassword"] = args?.targetTdeWalletPassword ? pulumi.secret(args.targetTdeWalletPassword) : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["connectionStrings"] = undefined /*out*/;
            resourceInputs["containerDatabaseId"] = undefined /*out*/;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["isRestricted"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["openMode"] = undefined /*out*/;
            resourceInputs["pdbName"] = undefined /*out*/;
            resourceInputs["pdbNodeLevelDetails"] = undefined /*out*/;
            resourceInputs["pluggableDatabaseManagementConfigs"] = undefined /*out*/;
            resourceInputs["refreshableCloneConfigs"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["pdbAdminPassword", "sourceContainerDbAdminPassword", "targetTdeWalletPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(PluggableDatabasesRemoteClone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PluggableDatabasesRemoteClone resources.
 */
export interface PluggableDatabasesRemoteCloneState {
    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     */
    clonedPdbName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Connection strings to connect to an Oracle Pluggable Database.
     */
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.Database.PluggableDatabasesRemoteCloneConnectionString>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the CDB.
     */
    containerDatabaseId?: pulumi.Input<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The restricted mode of the pluggable database. If a pluggable database is opened in restricted mode, the user needs both create a session and have restricted session privileges to connect to it.
     */
    isRestricted?: pulumi.Input<boolean>;
    /**
     * Detailed message for the lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     */
    openMode?: pulumi.Input<string>;
    /**
     * A strong password for PDB Admin of the newly cloned PDB. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
     */
    pdbAdminPassword?: pulumi.Input<string>;
    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     */
    pdbName?: pulumi.Input<string>;
    /**
     * Pluggable Database Node Level Details. Example: [{"nodeName" : "node1", "openMode" : "READ_WRITE"}, {"nodeName" : "node2", "openMode" : "READ_ONLY"}]
     */
    pdbNodeLevelDetails?: pulumi.Input<pulumi.Input<inputs.Database.PluggableDatabasesRemoteClonePdbNodeLevelDetail>[]>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    pluggableDatabaseId?: pulumi.Input<string>;
    /**
     * The configuration of the Pluggable Database Management service.
     */
    pluggableDatabaseManagementConfigs?: pulumi.Input<pulumi.Input<inputs.Database.PluggableDatabasesRemoteClonePluggableDatabaseManagementConfig>[]>;
    /**
     * Pluggable Database Refreshable Clone Configuration.
     */
    refreshableCloneConfigs?: pulumi.Input<pulumi.Input<inputs.Database.PluggableDatabasesRemoteCloneRefreshableCloneConfig>[]>;
    /**
     * The locked mode of the pluggable database admin account. If false, the user needs to provide the PDB Admin Password to connect to it. If true, the pluggable database will be locked and user cannot login to it.
     */
    shouldPdbAdminAccountBeLocked?: pulumi.Input<boolean>;
    /**
     * The DB system administrator password of the source CDB.
     */
    sourceContainerDbAdminPassword?: pulumi.Input<string>;
    /**
     * The current state of the pluggable database.
     */
    state?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target CDB
     */
    targetContainerDatabaseId?: pulumi.Input<string>;
    /**
     * The existing TDE wallet password of the target CDB.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    targetTdeWalletPassword?: pulumi.Input<string>;
    /**
     * The date and time the pluggable database was created.
     */
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PluggableDatabasesRemoteClone resource.
 */
export interface PluggableDatabasesRemoteCloneArgs {
    /**
     * The name for the pluggable database (PDB). The name is unique in the context of a [container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/Database/). The name must begin with an alphabetic character and can contain a maximum of thirty alphanumeric characters. Special characters are not permitted. The pluggable database name should not be same as the container database name.
     */
    clonedPdbName: pulumi.Input<string>;
    /**
     * A strong password for PDB Admin of the newly cloned PDB. The password must be at least nine characters and contain at least two uppercase, two lowercase, two numbers, and two special characters. The special characters must be _, \#, or -.
     */
    pdbAdminPassword?: pulumi.Input<string>;
    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    pluggableDatabaseId: pulumi.Input<string>;
    /**
     * The locked mode of the pluggable database admin account. If false, the user needs to provide the PDB Admin Password to connect to it. If true, the pluggable database will be locked and user cannot login to it.
     */
    shouldPdbAdminAccountBeLocked?: pulumi.Input<boolean>;
    /**
     * The DB system administrator password of the source CDB.
     */
    sourceContainerDbAdminPassword: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target CDB
     */
    targetContainerDatabaseId: pulumi.Input<string>;
    /**
     * The existing TDE wallet password of the target CDB.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    targetTdeWalletPassword?: pulumi.Input<string>;
}
