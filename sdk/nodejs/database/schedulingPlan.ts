// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Scheduling Plan resource in Oracle Cloud Infrastructure Database service.
 *
 * Creates a Scheduling Plan resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSchedulingPlan = new oci.database.SchedulingPlan("test_scheduling_plan", {
 *     compartmentId: compartmentId,
 *     resourceId: testResource.id,
 *     schedulingPolicyId: testSchedulingPolicy.id,
 *     serviceType: schedulingPlanServiceType,
 *     definedTags: schedulingPlanDefinedTags,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     isUsingRecommendedScheduledActions: schedulingPlanIsUsingRecommendedScheduledActions,
 * });
 * ```
 *
 * ## Import
 *
 * SchedulingPlans can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Database/schedulingPlan:SchedulingPlan test_scheduling_plan "id"
 * ```
 */
export class SchedulingPlan extends pulumi.CustomResource {
    /**
     * Get an existing SchedulingPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SchedulingPlanState, opts?: pulumi.CustomResourceOptions): SchedulingPlan {
        return new SchedulingPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/schedulingPlan:SchedulingPlan';

    /**
     * Returns true if the given object is an instance of SchedulingPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SchedulingPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SchedulingPlan.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The display name of the Scheduling Plan.
     */
    declare public /*out*/ readonly displayName: pulumi.Output<string>;
    /**
     * The estimated time for the Scheduling Plan.
     */
    declare public /*out*/ readonly estimatedTimeInMins: pulumi.Output<number>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * If true, recommended scheduled actions will be generated for the scheduling plan.
     */
    declare public readonly isUsingRecommendedScheduledActions: pulumi.Output<boolean>;
    /**
     * Additional information about the current lifecycle state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The current intent the Scheduling Plan. Valid states is EXADATA_INFRASTRUCTURE_FULL_SOFTWARE_UPDATE.
     */
    declare public /*out*/ readonly planIntent: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     */
    declare public readonly resourceId: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
     */
    declare public readonly schedulingPolicyId: pulumi.Output<string>;
    /**
     * The service type of the Scheduling Plan.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly serviceType: pulumi.Output<string>;
    /**
     * The current state of the Scheduling Plan. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the Scheduling Plan Resource was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the Scheduling Plan Resource was updated.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a SchedulingPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SchedulingPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SchedulingPlanArgs | SchedulingPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SchedulingPlanState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["estimatedTimeInMins"] = state?.estimatedTimeInMins;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["isUsingRecommendedScheduledActions"] = state?.isUsingRecommendedScheduledActions;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["planIntent"] = state?.planIntent;
            resourceInputs["resourceId"] = state?.resourceId;
            resourceInputs["schedulingPolicyId"] = state?.schedulingPolicyId;
            resourceInputs["serviceType"] = state?.serviceType;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as SchedulingPlanArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.resourceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if (args?.schedulingPolicyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'schedulingPolicyId'");
            }
            if (args?.serviceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceType'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["isUsingRecommendedScheduledActions"] = args?.isUsingRecommendedScheduledActions;
            resourceInputs["resourceId"] = args?.resourceId;
            resourceInputs["schedulingPolicyId"] = args?.schedulingPolicyId;
            resourceInputs["serviceType"] = args?.serviceType;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["estimatedTimeInMins"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["planIntent"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SchedulingPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SchedulingPlan resources.
 */
export interface SchedulingPlanState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The display name of the Scheduling Plan.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The estimated time for the Scheduling Plan.
     */
    estimatedTimeInMins?: pulumi.Input<number>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * If true, recommended scheduled actions will be generated for the scheduling plan.
     */
    isUsingRecommendedScheduledActions?: pulumi.Input<boolean>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The current intent the Scheduling Plan. Valid states is EXADATA_INFRASTRUCTURE_FULL_SOFTWARE_UPDATE.
     */
    planIntent?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
     */
    schedulingPolicyId?: pulumi.Input<string>;
    /**
     * The service type of the Scheduling Plan.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    serviceType?: pulumi.Input<string>;
    /**
     * The current state of the Scheduling Plan. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the Scheduling Plan Resource was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the Scheduling Plan Resource was updated.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SchedulingPlan resource.
 */
export interface SchedulingPlanArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * If true, recommended scheduled actions will be generated for the scheduling plan.
     */
    isUsingRecommendedScheduledActions?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
     */
    schedulingPolicyId: pulumi.Input<string>;
    /**
     * The service type of the Scheduling Plan.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    serviceType: pulumi.Input<string>;
}
