// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Scheduling Policy resource in Oracle Cloud Infrastructure Database service.
 *
 * Creates a Scheduling Policy resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSchedulingPolicy = new oci.database.SchedulingPolicy("test_scheduling_policy", {
 *     cadence: schedulingPolicyCadence,
 *     compartmentId: compartmentId,
 *     displayName: schedulingPolicyDisplayName,
 *     cadenceStartMonth: {
 *         name: schedulingPolicyCadenceStartMonthName,
 *     },
 *     definedTags: schedulingPolicyDefinedTags,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * SchedulingPolicies can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Database/schedulingPolicy:SchedulingPolicy test_scheduling_policy "id"
 * ```
 */
export class SchedulingPolicy extends pulumi.CustomResource {
    /**
     * Get an existing SchedulingPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SchedulingPolicyState, opts?: pulumi.CustomResourceOptions): SchedulingPolicy {
        return new SchedulingPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/schedulingPolicy:SchedulingPolicy';

    /**
     * Returns true if the given object is an instance of SchedulingPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SchedulingPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SchedulingPolicy.__pulumiType;
    }

    /**
     * (Updatable) The cadence period.
     */
    declare public readonly cadence: pulumi.Output<string>;
    /**
     * (Updatable) Start of the month to be followed during the cadence period.
     */
    declare public readonly cadenceStartMonth: pulumi.Output<outputs.Database.SchedulingPolicyCadenceStartMonth>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The user-friendly name for the Scheduling Policy. The name does not need to be unique.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Additional information about the current lifecycle state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The current state of the Scheduling Policy. Valid states are CREATING, NEEDS_ATTENTION, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The date and time the Scheduling Policy was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time of the next scheduling window associated with the schedulingPolicy is planned to start.
     */
    declare public /*out*/ readonly timeNextWindowStarts: pulumi.Output<string>;
    /**
     * The last date and time that the Scheduling Policy was updated.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a SchedulingPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SchedulingPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SchedulingPolicyArgs | SchedulingPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SchedulingPolicyState | undefined;
            resourceInputs["cadence"] = state?.cadence;
            resourceInputs["cadenceStartMonth"] = state?.cadenceStartMonth;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeNextWindowStarts"] = state?.timeNextWindowStarts;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as SchedulingPolicyArgs | undefined;
            if (args?.cadence === undefined && !opts.urn) {
                throw new Error("Missing required property 'cadence'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["cadence"] = args?.cadence;
            resourceInputs["cadenceStartMonth"] = args?.cadenceStartMonth;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeNextWindowStarts"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SchedulingPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SchedulingPolicy resources.
 */
export interface SchedulingPolicyState {
    /**
     * (Updatable) The cadence period.
     */
    cadence?: pulumi.Input<string>;
    /**
     * (Updatable) Start of the month to be followed during the cadence period.
     */
    cadenceStartMonth?: pulumi.Input<inputs.Database.SchedulingPolicyCadenceStartMonth>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The user-friendly name for the Scheduling Policy. The name does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The current state of the Scheduling Policy. Valid states are CREATING, NEEDS_ATTENTION, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the Scheduling Policy was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time of the next scheduling window associated with the schedulingPolicy is planned to start.
     */
    timeNextWindowStarts?: pulumi.Input<string>;
    /**
     * The last date and time that the Scheduling Policy was updated.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SchedulingPolicy resource.
 */
export interface SchedulingPolicyArgs {
    /**
     * (Updatable) The cadence period.
     */
    cadence: pulumi.Input<string>;
    /**
     * (Updatable) Start of the month to be followed during the cadence period.
     */
    cadenceStartMonth?: pulumi.Input<inputs.Database.SchedulingPolicyCadenceStartMonth>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The user-friendly name for the Scheduling Policy. The name does not need to be unique.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
