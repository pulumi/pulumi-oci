// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Vm Cluster Network resource in Oracle Cloud Infrastructure Database service.
 *
 * Creates the VM cluster network. Applies to Exadata Cloud@Customer instances only.
 * To create a cloud VM cluster in an Exadata Cloud Service instance, use the [CreateCloudVmCluster ](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/CloudVmCluster/CreateCloudVmCluster) operation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVmClusterNetwork = new oci.database.VmClusterNetwork("test_vm_cluster_network", {
 *     compartmentId: compartmentId,
 *     displayName: vmClusterNetworkDisplayName,
 *     exadataInfrastructureId: testExadataInfrastructure.id,
 *     scans: [{
 *         hostname: vmClusterNetworkScansHostname,
 *         ips: vmClusterNetworkScansIps,
 *         port: vmClusterNetworkScansPort,
 *         scanListenerPortTcp: vmClusterNetworkScansScanListenerPortTcp,
 *         scanListenerPortTcpSsl: vmClusterNetworkScansScanListenerPortTcpSsl,
 *     }],
 *     vmNetworks: [{
 *         networkType: vmClusterNetworkVmNetworksNetworkType,
 *         nodes: [{
 *             hostname: vmClusterNetworkVmNetworksNodesHostname,
 *             ip: vmClusterNetworkVmNetworksNodesIp,
 *             dbServerId: testDbServer.id,
 *             state: vmClusterNetworkVmNetworksNodesState,
 *             vip: vmClusterNetworkVmNetworksNodesVip,
 *             vipHostname: vmClusterNetworkVmNetworksNodesVipHostname,
 *         }],
 *         domainName: testDomain.name,
 *         gateway: vmClusterNetworkVmNetworksGateway,
 *         netmask: vmClusterNetworkVmNetworksNetmask,
 *         vlanId: vmClusterNetworkVmNetworksVlanId,
 *     }],
 *     definedTags: vmClusterNetworkDefinedTags,
 *     dns: vmClusterNetworkDns,
 *     drScans: [{
 *         hostname: vmClusterNetworkDrScansHostname,
 *         ips: vmClusterNetworkDrScansIps,
 *         scanListenerPortTcp: vmClusterNetworkDrScansScanListenerPortTcp,
 *     }],
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     ntps: vmClusterNetworkNtp,
 *     validateVmClusterNetwork: vmClusterNetworkValidateVmClusterNetwork,
 * });
 * ```
 *
 * ## Import
 *
 * VmClusterNetworks can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Database/vmClusterNetwork:VmClusterNetwork test_vm_cluster_network "exadataInfrastructures/{exadataInfrastructureId}/vmClusterNetworks/{vmClusterNetworkId}"
 * ```
 */
export class VmClusterNetwork extends pulumi.CustomResource {
    /**
     * Get an existing VmClusterNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VmClusterNetworkState, opts?: pulumi.CustomResourceOptions): VmClusterNetwork {
        return new VmClusterNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Database/vmClusterNetwork:VmClusterNetwork';

    /**
     * Returns true if the given object is an instance of VmClusterNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VmClusterNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VmClusterNetwork.__pulumiType;
    }

    declare public readonly action: pulumi.Output<string | undefined>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The user-friendly name for the Exadata Cloud@Customer VM cluster network. The name does not need to be unique.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    declare public readonly dns: pulumi.Output<string[]>;
    /**
     * (Updatable) The SCAN details for DR network
     */
    declare public readonly drScans: pulumi.Output<outputs.Database.VmClusterNetworkDrScan[]>;
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public readonly exadataInfrastructureId: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Additional information about the current lifecycle state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    declare public readonly ntps: pulumi.Output<string[]>;
    /**
     * (Updatable) The SCAN details.
     */
    declare public readonly scans: pulumi.Output<outputs.Database.VmClusterNetworkScan[]>;
    /**
     * The current state of the VM cluster network nodes. CREATING - The resource is being created REQUIRES_VALIDATION - The resource is created and may not be usable until it is validated. VALIDATING - The resource is being validated and not available to use. VALIDATED - The resource is validated and is available for consumption by VM cluster. VALIDATION_FAILED - The resource validation has failed and might require user input to be corrected. UPDATING - The resource is being updated and not available to use. ALLOCATED - The resource is currently being used by VM cluster. TERMINATING - The resource is being deleted and not available to use. TERMINATED - The resource is deleted and unavailable. FAILED - The resource is in a failed state due to validation or other errors.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time when the VM cluster network was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    declare public readonly validateVmClusterNetwork: pulumi.Output<boolean | undefined>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated VM Cluster.
     */
    declare public /*out*/ readonly vmClusterId: pulumi.Output<string>;
    /**
     * (Updatable) Details of the client and backup networks.
     */
    declare public readonly vmNetworks: pulumi.Output<outputs.Database.VmClusterNetworkVmNetwork[]>;

    /**
     * Create a VmClusterNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VmClusterNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VmClusterNetworkArgs | VmClusterNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VmClusterNetworkState | undefined;
            resourceInputs["action"] = state?.action;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["dns"] = state?.dns;
            resourceInputs["drScans"] = state?.drScans;
            resourceInputs["exadataInfrastructureId"] = state?.exadataInfrastructureId;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["ntps"] = state?.ntps;
            resourceInputs["scans"] = state?.scans;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["validateVmClusterNetwork"] = state?.validateVmClusterNetwork;
            resourceInputs["vmClusterId"] = state?.vmClusterId;
            resourceInputs["vmNetworks"] = state?.vmNetworks;
        } else {
            const args = argsOrState as VmClusterNetworkArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.exadataInfrastructureId === undefined && !opts.urn) {
                throw new Error("Missing required property 'exadataInfrastructureId'");
            }
            if (args?.scans === undefined && !opts.urn) {
                throw new Error("Missing required property 'scans'");
            }
            if (args?.vmNetworks === undefined && !opts.urn) {
                throw new Error("Missing required property 'vmNetworks'");
            }
            resourceInputs["action"] = args?.action;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["dns"] = args?.dns;
            resourceInputs["drScans"] = args?.drScans;
            resourceInputs["exadataInfrastructureId"] = args?.exadataInfrastructureId;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["ntps"] = args?.ntps;
            resourceInputs["scans"] = args?.scans;
            resourceInputs["validateVmClusterNetwork"] = args?.validateVmClusterNetwork;
            resourceInputs["vmNetworks"] = args?.vmNetworks;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["vmClusterId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VmClusterNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VmClusterNetwork resources.
 */
export interface VmClusterNetworkState {
    action?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The user-friendly name for the Exadata Cloud@Customer VM cluster network. The name does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The SCAN details for DR network
     */
    drScans?: pulumi.Input<pulumi.Input<inputs.Database.VmClusterNetworkDrScan>[]>;
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    exadataInfrastructureId?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Additional information about the current lifecycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    ntps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The SCAN details.
     */
    scans?: pulumi.Input<pulumi.Input<inputs.Database.VmClusterNetworkScan>[]>;
    /**
     * The current state of the VM cluster network nodes. CREATING - The resource is being created REQUIRES_VALIDATION - The resource is created and may not be usable until it is validated. VALIDATING - The resource is being validated and not available to use. VALIDATED - The resource is validated and is available for consumption by VM cluster. VALIDATION_FAILED - The resource validation has failed and might require user input to be corrected. UPDATING - The resource is being updated and not available to use. ALLOCATED - The resource is currently being used by VM cluster. TERMINATING - The resource is being deleted and not available to use. TERMINATED - The resource is deleted and unavailable. FAILED - The resource is in a failed state due to validation or other errors.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time when the VM cluster network was created.
     */
    timeCreated?: pulumi.Input<string>;
    validateVmClusterNetwork?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated VM Cluster.
     */
    vmClusterId?: pulumi.Input<string>;
    /**
     * (Updatable) Details of the client and backup networks.
     */
    vmNetworks?: pulumi.Input<pulumi.Input<inputs.Database.VmClusterNetworkVmNetwork>[]>;
}

/**
 * The set of arguments for constructing a VmClusterNetwork resource.
 */
export interface VmClusterNetworkArgs {
    action?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The user-friendly name for the Exadata Cloud@Customer VM cluster network. The name does not need to be unique.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
     */
    dns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The SCAN details for DR network
     */
    drScans?: pulumi.Input<pulumi.Input<inputs.Database.VmClusterNetworkDrScan>[]>;
    /**
     * The Exadata infrastructure [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    exadataInfrastructureId: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
     */
    ntps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The SCAN details.
     */
    scans: pulumi.Input<pulumi.Input<inputs.Database.VmClusterNetworkScan>[]>;
    validateVmClusterNetwork?: pulumi.Input<boolean>;
    /**
     * (Updatable) Details of the client and backup networks.
     */
    vmNetworks: pulumi.Input<pulumi.Input<inputs.Database.VmClusterNetworkVmNetwork>[]>;
}
