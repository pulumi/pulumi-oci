// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the External Exadata Infrastructure resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Creates an Oracle Cloud Infrastructure resource for the Exadata infrastructure and enables the Monitoring service for the Exadata infrastructure.
 * The following resource/subresources are created:
 *   Infrastructure
 *   Storage server connectors
 *   Storage servers
 *   Storage grids
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExternalExadataInfrastructure = new oci.databasemanagement.ExternalExadataInfrastructure("test_external_exadata_infrastructure", {
 *     compartmentId: compartmentId,
 *     dbSystemIds: externalExadataInfrastructureDbSystemIds,
 *     displayName: externalExadataInfrastructureDisplayName,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     discoveryKey: externalExadataInfrastructureDiscoveryKey,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     licenseModel: externalExadataInfrastructureLicenseModel,
 *     storageServerNames: externalExadataInfrastructureStorageServerNames,
 * });
 * ```
 *
 * ## Import
 *
 * ExternalExadataInfrastructures can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DatabaseManagement/externalExadataInfrastructure:ExternalExadataInfrastructure test_external_exadata_infrastructure "id"
 * ```
 */
export class ExternalExadataInfrastructure extends pulumi.CustomResource {
    /**
     * Get an existing ExternalExadataInfrastructure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExternalExadataInfrastructureState, opts?: pulumi.CustomResourceOptions): ExternalExadataInfrastructure {
        return new ExternalExadataInfrastructure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DatabaseManagement/externalExadataInfrastructure:ExternalExadataInfrastructure';

    /**
     * Returns true if the given object is an instance of ExternalExadataInfrastructure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExternalExadataInfrastructure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExternalExadataInfrastructure.__pulumiType;
    }

    /**
     * The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
     */
    declare public /*out*/ readonly additionalDetails: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * The list of [OCIDs] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
     */
    declare public /*out*/ readonly databaseCompartments: pulumi.Output<string[]>;
    /**
     * A list of DB systems.
     */
    declare public /*out*/ readonly databaseSystems: pulumi.Output<outputs.DatabaseManagement.ExternalExadataInfrastructureDatabaseSystem[]>;
    /**
     * (Updatable) The list of DB systems in the Exadata infrastructure.
     */
    declare public readonly dbSystemIds: pulumi.Output<string[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The unique key of the discovery request.
     */
    declare public readonly discoveryKey: pulumi.Output<string>;
    /**
     * (Updatable) The name of the Exadata infrastructure.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The internal ID of the Exadata resource.
     */
    declare public /*out*/ readonly internalId: pulumi.Output<string>;
    /**
     * (Updatable) The Oracle license model that applies to the database management resources.
     */
    declare public readonly licenseModel: pulumi.Output<string>;
    /**
     * The details of the lifecycle state of the Exadata resource.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The rack size of the Exadata infrastructure.
     */
    declare public /*out*/ readonly rackSize: pulumi.Output<string>;
    /**
     * The current lifecycle state of the database resource.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The status of the Exadata resource.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The Exadata storage server grid of the Exadata infrastructure.
     */
    declare public /*out*/ readonly storageGrids: pulumi.Output<outputs.DatabaseManagement.ExternalExadataInfrastructureStorageGrid[]>;
    /**
     * (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly storageServerNames: pulumi.Output<string[] | undefined>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The timestamp of the creation of the Exadata resource.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The timestamp of the last update of the Exadata resource.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * The version of the Exadata resource.
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;

    /**
     * Create a ExternalExadataInfrastructure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExternalExadataInfrastructureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExternalExadataInfrastructureArgs | ExternalExadataInfrastructureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExternalExadataInfrastructureState | undefined;
            resourceInputs["additionalDetails"] = state?.additionalDetails;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["databaseCompartments"] = state?.databaseCompartments;
            resourceInputs["databaseSystems"] = state?.databaseSystems;
            resourceInputs["dbSystemIds"] = state?.dbSystemIds;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["discoveryKey"] = state?.discoveryKey;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["internalId"] = state?.internalId;
            resourceInputs["licenseModel"] = state?.licenseModel;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["rackSize"] = state?.rackSize;
            resourceInputs["state"] = state?.state;
            resourceInputs["status"] = state?.status;
            resourceInputs["storageGrids"] = state?.storageGrids;
            resourceInputs["storageServerNames"] = state?.storageServerNames;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ExternalExadataInfrastructureArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.dbSystemIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbSystemIds'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["dbSystemIds"] = args?.dbSystemIds;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["discoveryKey"] = args?.discoveryKey;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["licenseModel"] = args?.licenseModel;
            resourceInputs["storageServerNames"] = args?.storageServerNames;
            resourceInputs["additionalDetails"] = undefined /*out*/;
            resourceInputs["databaseCompartments"] = undefined /*out*/;
            resourceInputs["databaseSystems"] = undefined /*out*/;
            resourceInputs["internalId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["rackSize"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["storageGrids"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExternalExadataInfrastructure.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExternalExadataInfrastructure resources.
 */
export interface ExternalExadataInfrastructureState {
    /**
     * The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
     */
    additionalDetails?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The list of [OCIDs] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartments.
     */
    databaseCompartments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of DB systems.
     */
    databaseSystems?: pulumi.Input<pulumi.Input<inputs.DatabaseManagement.ExternalExadataInfrastructureDatabaseSystem>[]>;
    /**
     * (Updatable) The list of DB systems in the Exadata infrastructure.
     */
    dbSystemIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The unique key of the discovery request.
     */
    discoveryKey?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the Exadata infrastructure.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The internal ID of the Exadata resource.
     */
    internalId?: pulumi.Input<string>;
    /**
     * (Updatable) The Oracle license model that applies to the database management resources.
     */
    licenseModel?: pulumi.Input<string>;
    /**
     * The details of the lifecycle state of the Exadata resource.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The rack size of the Exadata infrastructure.
     */
    rackSize?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the database resource.
     */
    state?: pulumi.Input<string>;
    /**
     * The status of the Exadata resource.
     */
    status?: pulumi.Input<string>;
    /**
     * The Exadata storage server grid of the Exadata infrastructure.
     */
    storageGrids?: pulumi.Input<pulumi.Input<inputs.DatabaseManagement.ExternalExadataInfrastructureStorageGrid>[]>;
    /**
     * (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    storageServerNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The timestamp of the creation of the Exadata resource.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The timestamp of the last update of the Exadata resource.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The version of the Exadata resource.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExternalExadataInfrastructure resource.
 */
export interface ExternalExadataInfrastructureArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) The list of DB systems in the Exadata infrastructure.
     */
    dbSystemIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The unique key of the discovery request.
     */
    discoveryKey?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the Exadata infrastructure.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The Oracle license model that applies to the database management resources.
     */
    licenseModel?: pulumi.Input<string>;
    /**
     * (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    storageServerNames?: pulumi.Input<pulumi.Input<string>[]>;
}
