// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the External My Sql Database External Mysql Databases Management resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Enables Database Management for an external MySQL Database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExternalMySqlDatabaseExternalMysqlDatabasesManagement = new oci.databasemanagement.ExternalMySqlDatabaseExternalMysqlDatabasesManagement("test_external_my_sql_database_external_mysql_databases_management", {
 *     externalMySqlDatabaseId: testExternalMySqlDatabase.id,
 *     enableExternalMysqlDatabase: enableExternalMysqlDatabase,
 *     connectorId: testConnector.id,
 * });
 * ```
 */
export class ExternalMySqlDatabaseExternalMysqlDatabasesManagement extends pulumi.CustomResource {
    /**
     * Get an existing ExternalMySqlDatabaseExternalMysqlDatabasesManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExternalMySqlDatabaseExternalMysqlDatabasesManagementState, opts?: pulumi.CustomResourceOptions): ExternalMySqlDatabaseExternalMysqlDatabasesManagement {
        return new ExternalMySqlDatabaseExternalMysqlDatabasesManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DatabaseManagement/externalMySqlDatabaseExternalMysqlDatabasesManagement:ExternalMySqlDatabaseExternalMysqlDatabasesManagement';

    /**
     * Returns true if the given object is an instance of ExternalMySqlDatabaseExternalMysqlDatabasesManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExternalMySqlDatabaseExternalMysqlDatabasesManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExternalMySqlDatabaseExternalMysqlDatabasesManagement.__pulumiType;
    }

    /**
     * OCID of External MySQL Database connector.
     */
    declare public readonly connectorId: pulumi.Output<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly enableExternalMysqlDatabase: pulumi.Output<boolean>;
    /**
     * The OCID of the External MySQL Database.
     */
    declare public readonly externalMySqlDatabaseId: pulumi.Output<string>;

    /**
     * Create a ExternalMySqlDatabaseExternalMysqlDatabasesManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs | ExternalMySqlDatabaseExternalMysqlDatabasesManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExternalMySqlDatabaseExternalMysqlDatabasesManagementState | undefined;
            resourceInputs["connectorId"] = state?.connectorId;
            resourceInputs["enableExternalMysqlDatabase"] = state?.enableExternalMysqlDatabase;
            resourceInputs["externalMySqlDatabaseId"] = state?.externalMySqlDatabaseId;
        } else {
            const args = argsOrState as ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs | undefined;
            if (args?.enableExternalMysqlDatabase === undefined && !opts.urn) {
                throw new Error("Missing required property 'enableExternalMysqlDatabase'");
            }
            if (args?.externalMySqlDatabaseId === undefined && !opts.urn) {
                throw new Error("Missing required property 'externalMySqlDatabaseId'");
            }
            resourceInputs["connectorId"] = args?.connectorId;
            resourceInputs["enableExternalMysqlDatabase"] = args?.enableExternalMysqlDatabase;
            resourceInputs["externalMySqlDatabaseId"] = args?.externalMySqlDatabaseId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExternalMySqlDatabaseExternalMysqlDatabasesManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExternalMySqlDatabaseExternalMysqlDatabasesManagement resources.
 */
export interface ExternalMySqlDatabaseExternalMysqlDatabasesManagementState {
    /**
     * OCID of External MySQL Database connector.
     */
    connectorId?: pulumi.Input<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    enableExternalMysqlDatabase?: pulumi.Input<boolean>;
    /**
     * The OCID of the External MySQL Database.
     */
    externalMySqlDatabaseId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExternalMySqlDatabaseExternalMysqlDatabasesManagement resource.
 */
export interface ExternalMySqlDatabaseExternalMysqlDatabasesManagementArgs {
    /**
     * OCID of External MySQL Database connector.
     */
    connectorId?: pulumi.Input<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    enableExternalMysqlDatabase: pulumi.Input<boolean>;
    /**
     * The OCID of the External MySQL Database.
     */
    externalMySqlDatabaseId: pulumi.Input<string>;
}
