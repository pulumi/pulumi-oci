// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Cloud Db Systems in Oracle Cloud Infrastructure Database Management service.
 *
 * Lists the cloud DB systems in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCloudDbSystems = oci.DatabaseManagement.getCloudDbSystems({
 *     compartmentId: compartmentId,
 *     dbaasParentInfrastructureId: testDbaasParentInfrastructure.id,
 *     deploymentType: cloudDbSystemDeploymentType,
 *     displayName: cloudDbSystemDisplayName,
 *     state: cloudDbSystemState,
 * });
 * ```
 */
export function getCloudDbSystems(args: GetCloudDbSystemsArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudDbSystemsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DatabaseManagement/getCloudDbSystems:getCloudDbSystems", {
        "compartmentId": args.compartmentId,
        "dbaasParentInfrastructureId": args.dbaasParentInfrastructureId,
        "deploymentType": args.deploymentType,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudDbSystems.
 */
export interface GetCloudDbSystemsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dbaas parent infrastructure of the cloud DB system.
     */
    dbaasParentInfrastructureId?: string;
    /**
     * A filter to return cloud DB systems of the specified deployment type.
     */
    deploymentType?: string;
    /**
     * A filter to only return the resources that match the entire display name.
     */
    displayName?: string;
    filters?: inputs.DatabaseManagement.GetCloudDbSystemsFilter[];
    /**
     * The lifecycle state of a resource.
     */
    state?: string;
}

/**
 * A collection of values returned by getCloudDbSystems.
 */
export interface GetCloudDbSystemsResult {
    /**
     * The list of cloud_db_system_collection.
     */
    readonly cloudDbSystemCollections: outputs.DatabaseManagement.GetCloudDbSystemsCloudDbSystemCollection[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent cloud DB Infrastructure. For VM Dbsystems , it will be the DBSystem Id. For ExaCS and ExaCC,  it will be the cloudVmClusterId and vmClusterId respectively.
     */
    readonly dbaasParentInfrastructureId?: string;
    /**
     * The deployment type of cloud dbsystem.
     */
    readonly deploymentType?: string;
    /**
     * The user-friendly name for the DB system. The name does not have to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DatabaseManagement.GetCloudDbSystemsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current lifecycle state of the cloud DB system resource.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Cloud Db Systems in Oracle Cloud Infrastructure Database Management service.
 *
 * Lists the cloud DB systems in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCloudDbSystems = oci.DatabaseManagement.getCloudDbSystems({
 *     compartmentId: compartmentId,
 *     dbaasParentInfrastructureId: testDbaasParentInfrastructure.id,
 *     deploymentType: cloudDbSystemDeploymentType,
 *     displayName: cloudDbSystemDisplayName,
 *     state: cloudDbSystemState,
 * });
 * ```
 */
export function getCloudDbSystemsOutput(args: GetCloudDbSystemsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudDbSystemsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DatabaseManagement/getCloudDbSystems:getCloudDbSystems", {
        "compartmentId": args.compartmentId,
        "dbaasParentInfrastructureId": args.dbaasParentInfrastructureId,
        "deploymentType": args.deploymentType,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudDbSystems.
 */
export interface GetCloudDbSystemsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dbaas parent infrastructure of the cloud DB system.
     */
    dbaasParentInfrastructureId?: pulumi.Input<string>;
    /**
     * A filter to return cloud DB systems of the specified deployment type.
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * A filter to only return the resources that match the entire display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DatabaseManagement.GetCloudDbSystemsFilterArgs>[]>;
    /**
     * The lifecycle state of a resource.
     */
    state?: pulumi.Input<string>;
}
