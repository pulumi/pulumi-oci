// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific External Exadata Storage Server resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Gets the summary for the Exadata storage server specified by exadataStorageServerId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExternalExadataStorageServer = oci.DatabaseManagement.getExternalExadataStorageServer({
 *     externalExadataStorageServerId: testExternalExadataStorageServerOciDatabaseManagementExternalExadataStorageServer.id,
 * });
 * ```
 */
export function getExternalExadataStorageServer(args: GetExternalExadataStorageServerArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalExadataStorageServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DatabaseManagement/getExternalExadataStorageServer:getExternalExadataStorageServer", {
        "externalExadataStorageServerId": args.externalExadataStorageServerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalExadataStorageServer.
 */
export interface GetExternalExadataStorageServerArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
     */
    externalExadataStorageServerId: string;
}

/**
 * A collection of values returned by getExternalExadataStorageServer.
 */
export interface GetExternalExadataStorageServerResult {
    /**
     * The additional details of the resource defined in `{"key": "value"}` format. Example: `{"bar-key": "value"}`
     */
    readonly additionalDetails: {[key: string]: string};
    /**
     * The connector of the Exadata storage server.
     */
    readonly connectors: outputs.DatabaseManagement.GetExternalExadataStorageServerConnector[];
    /**
     * The CPU count of the Exadata storage server.
     */
    readonly cpuCount: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * The name of the Exadata resource. English letters, numbers, "-", "_" and "." only.
     */
    readonly displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     */
    readonly exadataInfrastructureId: string;
    readonly externalExadataStorageServerId: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     */
    readonly id: string;
    /**
     * The internal ID of the Exadata resource.
     */
    readonly internalId: string;
    /**
     * The IP address of the Exadata storage server.
     */
    readonly ipAddress: string;
    /**
     * The details of the lifecycle state of the Exadata resource.
     */
    readonly lifecycleDetails: string;
    /**
     * The make model of the Exadata storage server.
     */
    readonly makeModel: string;
    /**
     * The maximum flash disk IO operations per second of the Exadata storage server.
     */
    readonly maxFlashDiskIops: number;
    /**
     * The maximum flash disk IO throughput in MB/s of the Exadata storage server.
     */
    readonly maxFlashDiskThroughput: number;
    /**
     * The maximum hard disk IO operations per second of the Exadata storage server.
     */
    readonly maxHardDiskIops: number;
    /**
     * The maximum hard disk IO throughput in MB/s of the Exadata storage server.
     */
    readonly maxHardDiskThroughput: number;
    /**
     * The Exadata storage server memory size in GB.
     */
    readonly memoryGb: number;
    /**
     * The type of Exadata resource.
     */
    readonly resourceType: string;
    /**
     * The current lifecycle state of the database resource.
     */
    readonly state: string;
    /**
     * The status of the Exadata resource.
     */
    readonly status: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
     */
    readonly storageGridId: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The timestamp of the creation of the Exadata resource.
     */
    readonly timeCreated: string;
    /**
     * The timestamp of the last update of the Exadata resource.
     */
    readonly timeUpdated: string;
    /**
     * The version of the Exadata resource.
     */
    readonly version: string;
}
/**
 * This data source provides details about a specific External Exadata Storage Server resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Gets the summary for the Exadata storage server specified by exadataStorageServerId.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExternalExadataStorageServer = oci.DatabaseManagement.getExternalExadataStorageServer({
 *     externalExadataStorageServerId: testExternalExadataStorageServerOciDatabaseManagementExternalExadataStorageServer.id,
 * });
 * ```
 */
export function getExternalExadataStorageServerOutput(args: GetExternalExadataStorageServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExternalExadataStorageServerResult> {
    return pulumi.output(args).apply((a: any) => getExternalExadataStorageServer(a, opts))
}

/**
 * A collection of arguments for invoking getExternalExadataStorageServer.
 */
export interface GetExternalExadataStorageServerOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
     */
    externalExadataStorageServerId: pulumi.Input<string>;
}
