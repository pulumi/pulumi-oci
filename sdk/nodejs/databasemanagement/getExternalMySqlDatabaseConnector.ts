// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific External My Sql Database Connector resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Retrieves the MySQL database connector.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExternalMySqlDatabaseConnector = oci.DatabaseManagement.getExternalMySqlDatabaseConnector({
 *     externalMySqlDatabaseConnectorId: testExternalMySqlDatabaseConnectorOciDatabaseManagementExternalMySqlDatabaseConnector.id,
 * });
 * ```
 */
export function getExternalMySqlDatabaseConnector(args: GetExternalMySqlDatabaseConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetExternalMySqlDatabaseConnectorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DatabaseManagement/getExternalMySqlDatabaseConnector:getExternalMySqlDatabaseConnector", {
        "externalMySqlDatabaseConnectorId": args.externalMySqlDatabaseConnectorId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalMySqlDatabaseConnector.
 */
export interface GetExternalMySqlDatabaseConnectorArgs {
    /**
     * The OCID of the External MySQL Database Connector.
     */
    externalMySqlDatabaseConnectorId: string;
}

/**
 * A collection of values returned by getExternalMySqlDatabaseConnector.
 */
export interface GetExternalMySqlDatabaseConnectorResult {
    /**
     * Oracle Cloud Infrastructure Services associated with this connector.
     */
    readonly associatedServices: string;
    readonly checkConnectionStatusTrigger: number;
    /**
     * OCID of compartment for the External MySQL connector.
     */
    readonly compartmentId: string;
    /**
     * Connection Status
     */
    readonly connectionStatus: string;
    readonly connectorDetails: outputs.DatabaseManagement.GetExternalMySqlDatabaseConnectorConnectorDetail[];
    /**
     * Connector Type.
     */
    readonly connectorType: string;
    /**
     * Credential type used to connect to database.
     */
    readonly credentialType: string;
    /**
     * OCID of MySQL Database resource
     */
    readonly externalDatabaseId: string;
    readonly externalMySqlDatabaseConnectorId: string;
    /**
     * Host name for Connector.
     */
    readonly hostName: string;
    /**
     * OCID of MySQL Database Connector.
     */
    readonly id: string;
    readonly isTestConnectionParam: boolean;
    /**
     * Agent Id of the MACS agent.
     */
    readonly macsAgentId: string;
    /**
     * External MySQL Database Connector Name.
     */
    readonly name: string;
    /**
     * Network Protocol.
     */
    readonly networkProtocol: string;
    /**
     * Connector port.
     */
    readonly port: number;
    /**
     * Name of MySQL Database.
     */
    readonly sourceDatabase: string;
    /**
     * Type of MySQL Database.
     */
    readonly sourceDatabaseType: string;
    /**
     * OCID of the SSL secret, if TCPS with SSL is used to connect to database.
     */
    readonly sslSecretId: string;
    /**
     * Name of the SSL secret, if TCPS with SSL is used to connect to database.
     */
    readonly sslSecretName: string;
    /**
     * Indicates lifecycle  state of the resource.
     */
    readonly state: string;
    /**
     * Time when connection status was last updated.
     */
    readonly timeConnectionStatusUpdated: string;
    /**
     * Connector creation time.
     */
    readonly timeCreated: string;
    /**
     * Connector update time.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific External My Sql Database Connector resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Retrieves the MySQL database connector.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExternalMySqlDatabaseConnector = oci.DatabaseManagement.getExternalMySqlDatabaseConnector({
 *     externalMySqlDatabaseConnectorId: testExternalMySqlDatabaseConnectorOciDatabaseManagementExternalMySqlDatabaseConnector.id,
 * });
 * ```
 */
export function getExternalMySqlDatabaseConnectorOutput(args: GetExternalMySqlDatabaseConnectorOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExternalMySqlDatabaseConnectorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DatabaseManagement/getExternalMySqlDatabaseConnector:getExternalMySqlDatabaseConnector", {
        "externalMySqlDatabaseConnectorId": args.externalMySqlDatabaseConnectorId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExternalMySqlDatabaseConnector.
 */
export interface GetExternalMySqlDatabaseConnectorOutputArgs {
    /**
     * The OCID of the External MySQL Database Connector.
     */
    externalMySqlDatabaseConnectorId: pulumi.Input<string>;
}
