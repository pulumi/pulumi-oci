// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Managed Database Attention Log Counts in Oracle Cloud Infrastructure Database Management service.
 *
 * Get the counts of attention logs for the specified Managed Database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedDatabaseAttentionLogCounts = oci.DatabaseManagement.getManagedDatabaseAttentionLogCounts({
 *     managedDatabaseId: oci_database_management_managed_database.test_managed_database.id,
 *     groupBy: _var.managed_database_attention_log_count_group_by,
 *     isRegularExpression: _var.managed_database_attention_log_count_is_regular_expression,
 *     logSearchText: _var.managed_database_attention_log_count_log_search_text,
 *     timeGreaterThanOrEqualTo: _var.managed_database_attention_log_count_time_greater_than_or_equal_to,
 *     timeLessThanOrEqualTo: _var.managed_database_attention_log_count_time_less_than_or_equal_to,
 *     typeFilter: _var.managed_database_attention_log_count_type_filter,
 *     urgencyFilter: _var.managed_database_attention_log_count_urgency_filter,
 * });
 * ```
 */
export function getManagedDatabaseAttentionLogCounts(args: GetManagedDatabaseAttentionLogCountsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedDatabaseAttentionLogCountsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DatabaseManagement/getManagedDatabaseAttentionLogCounts:getManagedDatabaseAttentionLogCounts", {
        "filters": args.filters,
        "groupBy": args.groupBy,
        "isRegularExpression": args.isRegularExpression,
        "logSearchText": args.logSearchText,
        "managedDatabaseId": args.managedDatabaseId,
        "timeGreaterThanOrEqualTo": args.timeGreaterThanOrEqualTo,
        "timeLessThanOrEqualTo": args.timeLessThanOrEqualTo,
        "typeFilter": args.typeFilter,
        "urgencyFilter": args.urgencyFilter,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedDatabaseAttentionLogCounts.
 */
export interface GetManagedDatabaseAttentionLogCountsArgs {
    filters?: inputs.DatabaseManagement.GetManagedDatabaseAttentionLogCountsFilter[];
    /**
     * The optional parameter used to group different attention logs.
     */
    groupBy?: string;
    /**
     * The flag to indicate whether the search text is regular expression or not.
     */
    isRegularExpression?: boolean;
    /**
     * The optional query parameter to filter the attention or alert logs by search text.
     */
    logSearchText?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    managedDatabaseId: string;
    /**
     * The optional greater than or equal to timestamp to filter the logs.
     */
    timeGreaterThanOrEqualTo?: string;
    /**
     * The optional less than or equal to timestamp to filter the logs.
     */
    timeLessThanOrEqualTo?: string;
    /**
     * The optional parameter to filter the attention or alert logs by type.
     */
    typeFilter?: string;
    /**
     * The optional parameter to filter the attention logs by urgency.
     */
    urgencyFilter?: string;
}

/**
 * A collection of values returned by getManagedDatabaseAttentionLogCounts.
 */
export interface GetManagedDatabaseAttentionLogCountsResult {
    /**
     * The list of attention_log_counts_collection.
     */
    readonly attentionLogCountsCollections: outputs.DatabaseManagement.GetManagedDatabaseAttentionLogCountsAttentionLogCountsCollection[];
    readonly filters?: outputs.DatabaseManagement.GetManagedDatabaseAttentionLogCountsFilter[];
    readonly groupBy?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isRegularExpression?: boolean;
    readonly logSearchText?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    readonly managedDatabaseId: string;
    readonly timeGreaterThanOrEqualTo?: string;
    readonly timeLessThanOrEqualTo?: string;
    readonly typeFilter?: string;
    readonly urgencyFilter?: string;
}

export function getManagedDatabaseAttentionLogCountsOutput(args: GetManagedDatabaseAttentionLogCountsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedDatabaseAttentionLogCountsResult> {
    return pulumi.output(args).apply(a => getManagedDatabaseAttentionLogCounts(a, opts))
}

/**
 * A collection of arguments for invoking getManagedDatabaseAttentionLogCounts.
 */
export interface GetManagedDatabaseAttentionLogCountsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.DatabaseManagement.GetManagedDatabaseAttentionLogCountsFilterArgs>[]>;
    /**
     * The optional parameter used to group different attention logs.
     */
    groupBy?: pulumi.Input<string>;
    /**
     * The flag to indicate whether the search text is regular expression or not.
     */
    isRegularExpression?: pulumi.Input<boolean>;
    /**
     * The optional query parameter to filter the attention or alert logs by search text.
     */
    logSearchText?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    managedDatabaseId: pulumi.Input<string>;
    /**
     * The optional greater than or equal to timestamp to filter the logs.
     */
    timeGreaterThanOrEqualTo?: pulumi.Input<string>;
    /**
     * The optional less than or equal to timestamp to filter the logs.
     */
    timeLessThanOrEqualTo?: pulumi.Input<string>;
    /**
     * The optional parameter to filter the attention or alert logs by type.
     */
    typeFilter?: pulumi.Input<string>;
    /**
     * The optional parameter to filter the attention logs by urgency.
     */
    urgencyFilter?: pulumi.Input<string>;
}
