// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Managed Database User Consumer Group Privilege resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Gets the list of consumer group privileges granted to a specific user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedDatabaseUserConsumerGroupPrivilege = oci.DatabaseManagement.getManagedDatabaseUserConsumerGroupPrivilege({
 *     managedDatabaseId: oci_database_management_managed_database.test_managed_database.id,
 *     userName: oci_identity_user.test_user.name,
 *     name: _var.managed_database_user_consumer_group_privilege_name,
 * });
 * ```
 */
export function getManagedDatabaseUserConsumerGroupPrivilege(args: GetManagedDatabaseUserConsumerGroupPrivilegeArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedDatabaseUserConsumerGroupPrivilegeResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DatabaseManagement/getManagedDatabaseUserConsumerGroupPrivilege:getManagedDatabaseUserConsumerGroupPrivilege", {
        "managedDatabaseId": args.managedDatabaseId,
        "name": args.name,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedDatabaseUserConsumerGroupPrivilege.
 */
export interface GetManagedDatabaseUserConsumerGroupPrivilegeArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    managedDatabaseId: string;
    /**
     * A filter to return only resources that match the entire name.
     */
    name?: string;
    /**
     * The name of the user whose details are to be viewed.
     */
    userName: string;
}

/**
 * A collection of values returned by getManagedDatabaseUserConsumerGroupPrivilege.
 */
export interface GetManagedDatabaseUserConsumerGroupPrivilegeResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An array of consumer group privileges.
     */
    readonly items: outputs.DatabaseManagement.GetManagedDatabaseUserConsumerGroupPrivilegeItem[];
    readonly managedDatabaseId: string;
    /**
     * The name of the granted consumer group privilege.
     */
    readonly name?: string;
    readonly userName: string;
}

export function getManagedDatabaseUserConsumerGroupPrivilegeOutput(args: GetManagedDatabaseUserConsumerGroupPrivilegeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedDatabaseUserConsumerGroupPrivilegeResult> {
    return pulumi.output(args).apply(a => getManagedDatabaseUserConsumerGroupPrivilege(a, opts))
}

/**
 * A collection of arguments for invoking getManagedDatabaseUserConsumerGroupPrivilege.
 */
export interface GetManagedDatabaseUserConsumerGroupPrivilegeOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    managedDatabaseId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire name.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the user whose details are to be viewed.
     */
    userName: pulumi.Input<string>;
}
