// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Managed Database User Proxied For Users in Oracle Cloud Infrastructure Database Management service.
 *
 * Gets the list of users on whose behalf the current user acts as proxy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedDatabaseUserProxiedForUsers = oci.DatabaseManagement.getManagedDatabaseUserProxiedForUsers({
 *     managedDatabaseId: testManagedDatabase.id,
 *     userName: testUser.name,
 *     name: managedDatabaseUserProxiedForUserName,
 *     opcNamedCredentialId: managedDatabaseUserProxiedForUserOpcNamedCredentialId,
 * });
 * ```
 */
export function getManagedDatabaseUserProxiedForUsers(args: GetManagedDatabaseUserProxiedForUsersArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedDatabaseUserProxiedForUsersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DatabaseManagement/getManagedDatabaseUserProxiedForUsers:getManagedDatabaseUserProxiedForUsers", {
        "filters": args.filters,
        "managedDatabaseId": args.managedDatabaseId,
        "name": args.name,
        "opcNamedCredentialId": args.opcNamedCredentialId,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedDatabaseUserProxiedForUsers.
 */
export interface GetManagedDatabaseUserProxiedForUsersArgs {
    filters?: inputs.DatabaseManagement.GetManagedDatabaseUserProxiedForUsersFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    managedDatabaseId: string;
    /**
     * A filter to return only resources that match the entire name.
     */
    name?: string;
    /**
     * The OCID of the Named Credential.
     */
    opcNamedCredentialId?: string;
    /**
     * The name of the user whose details are to be viewed.
     */
    userName: string;
}

/**
 * A collection of values returned by getManagedDatabaseUserProxiedForUsers.
 */
export interface GetManagedDatabaseUserProxiedForUsersResult {
    readonly filters?: outputs.DatabaseManagement.GetManagedDatabaseUserProxiedForUsersFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedDatabaseId: string;
    /**
     * The name of a proxy user or the name of the client user.
     */
    readonly name?: string;
    readonly opcNamedCredentialId?: string;
    /**
     * The list of proxied_for_user_collection.
     */
    readonly proxiedForUserCollections: outputs.DatabaseManagement.GetManagedDatabaseUserProxiedForUsersProxiedForUserCollection[];
    readonly userName: string;
}
/**
 * This data source provides the list of Managed Database User Proxied For Users in Oracle Cloud Infrastructure Database Management service.
 *
 * Gets the list of users on whose behalf the current user acts as proxy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedDatabaseUserProxiedForUsers = oci.DatabaseManagement.getManagedDatabaseUserProxiedForUsers({
 *     managedDatabaseId: testManagedDatabase.id,
 *     userName: testUser.name,
 *     name: managedDatabaseUserProxiedForUserName,
 *     opcNamedCredentialId: managedDatabaseUserProxiedForUserOpcNamedCredentialId,
 * });
 * ```
 */
export function getManagedDatabaseUserProxiedForUsersOutput(args: GetManagedDatabaseUserProxiedForUsersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedDatabaseUserProxiedForUsersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DatabaseManagement/getManagedDatabaseUserProxiedForUsers:getManagedDatabaseUserProxiedForUsers", {
        "filters": args.filters,
        "managedDatabaseId": args.managedDatabaseId,
        "name": args.name,
        "opcNamedCredentialId": args.opcNamedCredentialId,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedDatabaseUserProxiedForUsers.
 */
export interface GetManagedDatabaseUserProxiedForUsersOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.DatabaseManagement.GetManagedDatabaseUserProxiedForUsersFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     */
    managedDatabaseId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire name.
     */
    name?: pulumi.Input<string>;
    /**
     * The OCID of the Named Credential.
     */
    opcNamedCredentialId?: pulumi.Input<string>;
    /**
     * The name of the user whose details are to be viewed.
     */
    userName: pulumi.Input<string>;
}
