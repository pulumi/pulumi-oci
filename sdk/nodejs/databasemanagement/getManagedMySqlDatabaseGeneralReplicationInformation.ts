// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Managed My Sql Database General Replication Information resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Retrieves general information regarding the replication of a specific MySQL server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedMySqlDatabaseGeneralReplicationInformation = oci.DatabaseManagement.getManagedMySqlDatabaseGeneralReplicationInformation({
 *     managedMySqlDatabaseId: testManagedMySqlDatabase.id,
 * });
 * ```
 */
export function getManagedMySqlDatabaseGeneralReplicationInformation(args: GetManagedMySqlDatabaseGeneralReplicationInformationArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedMySqlDatabaseGeneralReplicationInformationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DatabaseManagement/getManagedMySqlDatabaseGeneralReplicationInformation:getManagedMySqlDatabaseGeneralReplicationInformation", {
        "managedMySqlDatabaseId": args.managedMySqlDatabaseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedMySqlDatabaseGeneralReplicationInformation.
 */
export interface GetManagedMySqlDatabaseGeneralReplicationInformationArgs {
    /**
     * The OCID of the Managed MySQL Database.
     */
    managedMySqlDatabaseId: string;
}

/**
 * A collection of values returned by getManagedMySqlDatabaseGeneralReplicationInformation.
 */
export interface GetManagedMySqlDatabaseGeneralReplicationInformationResult {
    /**
     * A summary of the current status of apply operations.
     */
    readonly applyStatusSummary: string;
    /**
     * The binary logging format used by this server.
     */
    readonly binaryLogFormat: string;
    /**
     * The status of binary logging on this server.
     */
    readonly binaryLogging: string;
    /**
     * The set of global transaction identifiers for transactions that have been executed on this source server.
     */
    readonly executedGtidSet: string;
    /**
     * A summary of the current status of fetch operations.
     */
    readonly fetchStatusSummary: string;
    /**
     * The Global Transaction Identifier (GTID) mode of this server.
     */
    readonly gtidMode: string;
    /**
     * The state of this server as a group replication member.
     */
    readonly highAvailabilityMemberState: string;
    /**
     * This server's host name.
     */
    readonly hostName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The number of sources this server is replicating from.
     */
    readonly inboundReplicationsCount: number;
    /**
     * The type of the instance for example, Source, Replica, Primary Group Member, and Secondary Group Member. If the instance is replicating from one or more sources and has one or more replicas, which means, it belongs to a replication chain, the instance type can be Replica/Source.
     */
    readonly instanceType: string;
    /**
     * Specifies if high availability is enabled on this server.
     */
    readonly isHighAvailabilityEnabled: boolean;
    readonly managedMySqlDatabaseId: string;
    /**
     * The number of replicas replicating from this server.
     */
    readonly outboundReplicationsCount: number;
    /**
     * The number of the port on which the server listens for TCP/IP connections.
     */
    readonly port: number;
    /**
     * If the value is ON, the instance is configured as read_only. If the value is SUPER, the instance is configured as super_read_only. If the value is OFF, the instance is neither readOnly nor super_read_only.
     */
    readonly readOnly: string;
    /**
     * The number of seconds the replica is behind the source. When multiple sources are involved, this is the maximum value across all sources.
     */
    readonly secondsBehindSourceMax: string;
    /**
     * This server's ID.
     */
    readonly serverId: string;
    /**
     * This server's Universally Unique Identifier (UUID).
     */
    readonly serverUuid: string;
}
/**
 * This data source provides details about a specific Managed My Sql Database General Replication Information resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Retrieves general information regarding the replication of a specific MySQL server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedMySqlDatabaseGeneralReplicationInformation = oci.DatabaseManagement.getManagedMySqlDatabaseGeneralReplicationInformation({
 *     managedMySqlDatabaseId: testManagedMySqlDatabase.id,
 * });
 * ```
 */
export function getManagedMySqlDatabaseGeneralReplicationInformationOutput(args: GetManagedMySqlDatabaseGeneralReplicationInformationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedMySqlDatabaseGeneralReplicationInformationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DatabaseManagement/getManagedMySqlDatabaseGeneralReplicationInformation:getManagedMySqlDatabaseGeneralReplicationInformation", {
        "managedMySqlDatabaseId": args.managedMySqlDatabaseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedMySqlDatabaseGeneralReplicationInformation.
 */
export interface GetManagedMySqlDatabaseGeneralReplicationInformationOutputArgs {
    /**
     * The OCID of the Managed MySQL Database.
     */
    managedMySqlDatabaseId: pulumi.Input<string>;
}
