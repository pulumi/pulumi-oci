// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DbManagementPrivateEndpointArgs, DbManagementPrivateEndpointState } from "./dbManagementPrivateEndpoint";
export type DbManagementPrivateEndpoint = import("./dbManagementPrivateEndpoint").DbManagementPrivateEndpoint;
export const DbManagementPrivateEndpoint: typeof import("./dbManagementPrivateEndpoint").DbManagementPrivateEndpoint = null as any;
utilities.lazyLoad(exports, ["DbManagementPrivateEndpoint"], () => require("./dbManagementPrivateEndpoint"));

export { ExternalAsmArgs, ExternalAsmState } from "./externalAsm";
export type ExternalAsm = import("./externalAsm").ExternalAsm;
export const ExternalAsm: typeof import("./externalAsm").ExternalAsm = null as any;
utilities.lazyLoad(exports, ["ExternalAsm"], () => require("./externalAsm"));

export { ExternalClusterArgs, ExternalClusterState } from "./externalCluster";
export type ExternalCluster = import("./externalCluster").ExternalCluster;
export const ExternalCluster: typeof import("./externalCluster").ExternalCluster = null as any;
utilities.lazyLoad(exports, ["ExternalCluster"], () => require("./externalCluster"));

export { ExternalClusterInstanceArgs, ExternalClusterInstanceState } from "./externalClusterInstance";
export type ExternalClusterInstance = import("./externalClusterInstance").ExternalClusterInstance;
export const ExternalClusterInstance: typeof import("./externalClusterInstance").ExternalClusterInstance = null as any;
utilities.lazyLoad(exports, ["ExternalClusterInstance"], () => require("./externalClusterInstance"));

export { ExternalDbNodeArgs, ExternalDbNodeState } from "./externalDbNode";
export type ExternalDbNode = import("./externalDbNode").ExternalDbNode;
export const ExternalDbNode: typeof import("./externalDbNode").ExternalDbNode = null as any;
utilities.lazyLoad(exports, ["ExternalDbNode"], () => require("./externalDbNode"));

export { ExternalDbSystemArgs, ExternalDbSystemState } from "./externalDbSystem";
export type ExternalDbSystem = import("./externalDbSystem").ExternalDbSystem;
export const ExternalDbSystem: typeof import("./externalDbSystem").ExternalDbSystem = null as any;
utilities.lazyLoad(exports, ["ExternalDbSystem"], () => require("./externalDbSystem"));

export { ExternalDbSystemConnectorArgs, ExternalDbSystemConnectorState } from "./externalDbSystemConnector";
export type ExternalDbSystemConnector = import("./externalDbSystemConnector").ExternalDbSystemConnector;
export const ExternalDbSystemConnector: typeof import("./externalDbSystemConnector").ExternalDbSystemConnector = null as any;
utilities.lazyLoad(exports, ["ExternalDbSystemConnector"], () => require("./externalDbSystemConnector"));

export { ExternalDbSystemDatabaseManagementsManagementArgs, ExternalDbSystemDatabaseManagementsManagementState } from "./externalDbSystemDatabaseManagementsManagement";
export type ExternalDbSystemDatabaseManagementsManagement = import("./externalDbSystemDatabaseManagementsManagement").ExternalDbSystemDatabaseManagementsManagement;
export const ExternalDbSystemDatabaseManagementsManagement: typeof import("./externalDbSystemDatabaseManagementsManagement").ExternalDbSystemDatabaseManagementsManagement = null as any;
utilities.lazyLoad(exports, ["ExternalDbSystemDatabaseManagementsManagement"], () => require("./externalDbSystemDatabaseManagementsManagement"));

export { ExternalDbSystemDiscoveryArgs, ExternalDbSystemDiscoveryState } from "./externalDbSystemDiscovery";
export type ExternalDbSystemDiscovery = import("./externalDbSystemDiscovery").ExternalDbSystemDiscovery;
export const ExternalDbSystemDiscovery: typeof import("./externalDbSystemDiscovery").ExternalDbSystemDiscovery = null as any;
utilities.lazyLoad(exports, ["ExternalDbSystemDiscovery"], () => require("./externalDbSystemDiscovery"));

export { ExternalExadataInfrastructureArgs, ExternalExadataInfrastructureState } from "./externalExadataInfrastructure";
export type ExternalExadataInfrastructure = import("./externalExadataInfrastructure").ExternalExadataInfrastructure;
export const ExternalExadataInfrastructure: typeof import("./externalExadataInfrastructure").ExternalExadataInfrastructure = null as any;
utilities.lazyLoad(exports, ["ExternalExadataInfrastructure"], () => require("./externalExadataInfrastructure"));

export { ExternalExadataInfrastructureExadataManagementArgs, ExternalExadataInfrastructureExadataManagementState } from "./externalExadataInfrastructureExadataManagement";
export type ExternalExadataInfrastructureExadataManagement = import("./externalExadataInfrastructureExadataManagement").ExternalExadataInfrastructureExadataManagement;
export const ExternalExadataInfrastructureExadataManagement: typeof import("./externalExadataInfrastructureExadataManagement").ExternalExadataInfrastructureExadataManagement = null as any;
utilities.lazyLoad(exports, ["ExternalExadataInfrastructureExadataManagement"], () => require("./externalExadataInfrastructureExadataManagement"));

export { ExternalExadataStorageConnectorArgs, ExternalExadataStorageConnectorState } from "./externalExadataStorageConnector";
export type ExternalExadataStorageConnector = import("./externalExadataStorageConnector").ExternalExadataStorageConnector;
export const ExternalExadataStorageConnector: typeof import("./externalExadataStorageConnector").ExternalExadataStorageConnector = null as any;
utilities.lazyLoad(exports, ["ExternalExadataStorageConnector"], () => require("./externalExadataStorageConnector"));

export { ExternalListenerArgs, ExternalListenerState } from "./externalListener";
export type ExternalListener = import("./externalListener").ExternalListener;
export const ExternalListener: typeof import("./externalListener").ExternalListener = null as any;
utilities.lazyLoad(exports, ["ExternalListener"], () => require("./externalListener"));

export { GetDbManagementPrivateEndpointArgs, GetDbManagementPrivateEndpointResult, GetDbManagementPrivateEndpointOutputArgs } from "./getDbManagementPrivateEndpoint";
export const getDbManagementPrivateEndpoint: typeof import("./getDbManagementPrivateEndpoint").getDbManagementPrivateEndpoint = null as any;
export const getDbManagementPrivateEndpointOutput: typeof import("./getDbManagementPrivateEndpoint").getDbManagementPrivateEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getDbManagementPrivateEndpoint","getDbManagementPrivateEndpointOutput"], () => require("./getDbManagementPrivateEndpoint"));

export { GetDbManagementPrivateEndpointAssociatedDatabaseArgs, GetDbManagementPrivateEndpointAssociatedDatabaseResult, GetDbManagementPrivateEndpointAssociatedDatabaseOutputArgs } from "./getDbManagementPrivateEndpointAssociatedDatabase";
export const getDbManagementPrivateEndpointAssociatedDatabase: typeof import("./getDbManagementPrivateEndpointAssociatedDatabase").getDbManagementPrivateEndpointAssociatedDatabase = null as any;
export const getDbManagementPrivateEndpointAssociatedDatabaseOutput: typeof import("./getDbManagementPrivateEndpointAssociatedDatabase").getDbManagementPrivateEndpointAssociatedDatabaseOutput = null as any;
utilities.lazyLoad(exports, ["getDbManagementPrivateEndpointAssociatedDatabase","getDbManagementPrivateEndpointAssociatedDatabaseOutput"], () => require("./getDbManagementPrivateEndpointAssociatedDatabase"));

export { GetDbManagementPrivateEndpointAssociatedDatabasesArgs, GetDbManagementPrivateEndpointAssociatedDatabasesResult, GetDbManagementPrivateEndpointAssociatedDatabasesOutputArgs } from "./getDbManagementPrivateEndpointAssociatedDatabases";
export const getDbManagementPrivateEndpointAssociatedDatabases: typeof import("./getDbManagementPrivateEndpointAssociatedDatabases").getDbManagementPrivateEndpointAssociatedDatabases = null as any;
export const getDbManagementPrivateEndpointAssociatedDatabasesOutput: typeof import("./getDbManagementPrivateEndpointAssociatedDatabases").getDbManagementPrivateEndpointAssociatedDatabasesOutput = null as any;
utilities.lazyLoad(exports, ["getDbManagementPrivateEndpointAssociatedDatabases","getDbManagementPrivateEndpointAssociatedDatabasesOutput"], () => require("./getDbManagementPrivateEndpointAssociatedDatabases"));

export { GetDbManagementPrivateEndpointsArgs, GetDbManagementPrivateEndpointsResult, GetDbManagementPrivateEndpointsOutputArgs } from "./getDbManagementPrivateEndpoints";
export const getDbManagementPrivateEndpoints: typeof import("./getDbManagementPrivateEndpoints").getDbManagementPrivateEndpoints = null as any;
export const getDbManagementPrivateEndpointsOutput: typeof import("./getDbManagementPrivateEndpoints").getDbManagementPrivateEndpointsOutput = null as any;
utilities.lazyLoad(exports, ["getDbManagementPrivateEndpoints","getDbManagementPrivateEndpointsOutput"], () => require("./getDbManagementPrivateEndpoints"));

export { GetExternalAsmArgs, GetExternalAsmResult, GetExternalAsmOutputArgs } from "./getExternalAsm";
export const getExternalAsm: typeof import("./getExternalAsm").getExternalAsm = null as any;
export const getExternalAsmOutput: typeof import("./getExternalAsm").getExternalAsmOutput = null as any;
utilities.lazyLoad(exports, ["getExternalAsm","getExternalAsmOutput"], () => require("./getExternalAsm"));

export { GetExternalAsmConfigurationArgs, GetExternalAsmConfigurationResult, GetExternalAsmConfigurationOutputArgs } from "./getExternalAsmConfiguration";
export const getExternalAsmConfiguration: typeof import("./getExternalAsmConfiguration").getExternalAsmConfiguration = null as any;
export const getExternalAsmConfigurationOutput: typeof import("./getExternalAsmConfiguration").getExternalAsmConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getExternalAsmConfiguration","getExternalAsmConfigurationOutput"], () => require("./getExternalAsmConfiguration"));

export { GetExternalAsmDiskGroupsArgs, GetExternalAsmDiskGroupsResult, GetExternalAsmDiskGroupsOutputArgs } from "./getExternalAsmDiskGroups";
export const getExternalAsmDiskGroups: typeof import("./getExternalAsmDiskGroups").getExternalAsmDiskGroups = null as any;
export const getExternalAsmDiskGroupsOutput: typeof import("./getExternalAsmDiskGroups").getExternalAsmDiskGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getExternalAsmDiskGroups","getExternalAsmDiskGroupsOutput"], () => require("./getExternalAsmDiskGroups"));

export { GetExternalAsmInstanceArgs, GetExternalAsmInstanceResult, GetExternalAsmInstanceOutputArgs } from "./getExternalAsmInstance";
export const getExternalAsmInstance: typeof import("./getExternalAsmInstance").getExternalAsmInstance = null as any;
export const getExternalAsmInstanceOutput: typeof import("./getExternalAsmInstance").getExternalAsmInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getExternalAsmInstance","getExternalAsmInstanceOutput"], () => require("./getExternalAsmInstance"));

export { GetExternalAsmInstancesArgs, GetExternalAsmInstancesResult, GetExternalAsmInstancesOutputArgs } from "./getExternalAsmInstances";
export const getExternalAsmInstances: typeof import("./getExternalAsmInstances").getExternalAsmInstances = null as any;
export const getExternalAsmInstancesOutput: typeof import("./getExternalAsmInstances").getExternalAsmInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getExternalAsmInstances","getExternalAsmInstancesOutput"], () => require("./getExternalAsmInstances"));

export { GetExternalAsmUsersArgs, GetExternalAsmUsersResult, GetExternalAsmUsersOutputArgs } from "./getExternalAsmUsers";
export const getExternalAsmUsers: typeof import("./getExternalAsmUsers").getExternalAsmUsers = null as any;
export const getExternalAsmUsersOutput: typeof import("./getExternalAsmUsers").getExternalAsmUsersOutput = null as any;
utilities.lazyLoad(exports, ["getExternalAsmUsers","getExternalAsmUsersOutput"], () => require("./getExternalAsmUsers"));

export { GetExternalAsmsArgs, GetExternalAsmsResult, GetExternalAsmsOutputArgs } from "./getExternalAsms";
export const getExternalAsms: typeof import("./getExternalAsms").getExternalAsms = null as any;
export const getExternalAsmsOutput: typeof import("./getExternalAsms").getExternalAsmsOutput = null as any;
utilities.lazyLoad(exports, ["getExternalAsms","getExternalAsmsOutput"], () => require("./getExternalAsms"));

export { GetExternalClusterArgs, GetExternalClusterResult, GetExternalClusterOutputArgs } from "./getExternalCluster";
export const getExternalCluster: typeof import("./getExternalCluster").getExternalCluster = null as any;
export const getExternalClusterOutput: typeof import("./getExternalCluster").getExternalClusterOutput = null as any;
utilities.lazyLoad(exports, ["getExternalCluster","getExternalClusterOutput"], () => require("./getExternalCluster"));

export { GetExternalClusterInstanceArgs, GetExternalClusterInstanceResult, GetExternalClusterInstanceOutputArgs } from "./getExternalClusterInstance";
export const getExternalClusterInstance: typeof import("./getExternalClusterInstance").getExternalClusterInstance = null as any;
export const getExternalClusterInstanceOutput: typeof import("./getExternalClusterInstance").getExternalClusterInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getExternalClusterInstance","getExternalClusterInstanceOutput"], () => require("./getExternalClusterInstance"));

export { GetExternalClusterInstancesArgs, GetExternalClusterInstancesResult, GetExternalClusterInstancesOutputArgs } from "./getExternalClusterInstances";
export const getExternalClusterInstances: typeof import("./getExternalClusterInstances").getExternalClusterInstances = null as any;
export const getExternalClusterInstancesOutput: typeof import("./getExternalClusterInstances").getExternalClusterInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getExternalClusterInstances","getExternalClusterInstancesOutput"], () => require("./getExternalClusterInstances"));

export { GetExternalClustersArgs, GetExternalClustersResult, GetExternalClustersOutputArgs } from "./getExternalClusters";
export const getExternalClusters: typeof import("./getExternalClusters").getExternalClusters = null as any;
export const getExternalClustersOutput: typeof import("./getExternalClusters").getExternalClustersOutput = null as any;
utilities.lazyLoad(exports, ["getExternalClusters","getExternalClustersOutput"], () => require("./getExternalClusters"));

export { GetExternalDatabasesArgs, GetExternalDatabasesResult, GetExternalDatabasesOutputArgs } from "./getExternalDatabases";
export const getExternalDatabases: typeof import("./getExternalDatabases").getExternalDatabases = null as any;
export const getExternalDatabasesOutput: typeof import("./getExternalDatabases").getExternalDatabasesOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDatabases","getExternalDatabasesOutput"], () => require("./getExternalDatabases"));

export { GetExternalDbHomeArgs, GetExternalDbHomeResult, GetExternalDbHomeOutputArgs } from "./getExternalDbHome";
export const getExternalDbHome: typeof import("./getExternalDbHome").getExternalDbHome = null as any;
export const getExternalDbHomeOutput: typeof import("./getExternalDbHome").getExternalDbHomeOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbHome","getExternalDbHomeOutput"], () => require("./getExternalDbHome"));

export { GetExternalDbHomesArgs, GetExternalDbHomesResult, GetExternalDbHomesOutputArgs } from "./getExternalDbHomes";
export const getExternalDbHomes: typeof import("./getExternalDbHomes").getExternalDbHomes = null as any;
export const getExternalDbHomesOutput: typeof import("./getExternalDbHomes").getExternalDbHomesOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbHomes","getExternalDbHomesOutput"], () => require("./getExternalDbHomes"));

export { GetExternalDbNodeArgs, GetExternalDbNodeResult, GetExternalDbNodeOutputArgs } from "./getExternalDbNode";
export const getExternalDbNode: typeof import("./getExternalDbNode").getExternalDbNode = null as any;
export const getExternalDbNodeOutput: typeof import("./getExternalDbNode").getExternalDbNodeOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbNode","getExternalDbNodeOutput"], () => require("./getExternalDbNode"));

export { GetExternalDbNodesArgs, GetExternalDbNodesResult, GetExternalDbNodesOutputArgs } from "./getExternalDbNodes";
export const getExternalDbNodes: typeof import("./getExternalDbNodes").getExternalDbNodes = null as any;
export const getExternalDbNodesOutput: typeof import("./getExternalDbNodes").getExternalDbNodesOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbNodes","getExternalDbNodesOutput"], () => require("./getExternalDbNodes"));

export { GetExternalDbSystemArgs, GetExternalDbSystemResult, GetExternalDbSystemOutputArgs } from "./getExternalDbSystem";
export const getExternalDbSystem: typeof import("./getExternalDbSystem").getExternalDbSystem = null as any;
export const getExternalDbSystemOutput: typeof import("./getExternalDbSystem").getExternalDbSystemOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbSystem","getExternalDbSystemOutput"], () => require("./getExternalDbSystem"));

export { GetExternalDbSystemConnectorArgs, GetExternalDbSystemConnectorResult, GetExternalDbSystemConnectorOutputArgs } from "./getExternalDbSystemConnector";
export const getExternalDbSystemConnector: typeof import("./getExternalDbSystemConnector").getExternalDbSystemConnector = null as any;
export const getExternalDbSystemConnectorOutput: typeof import("./getExternalDbSystemConnector").getExternalDbSystemConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbSystemConnector","getExternalDbSystemConnectorOutput"], () => require("./getExternalDbSystemConnector"));

export { GetExternalDbSystemConnectorsArgs, GetExternalDbSystemConnectorsResult, GetExternalDbSystemConnectorsOutputArgs } from "./getExternalDbSystemConnectors";
export const getExternalDbSystemConnectors: typeof import("./getExternalDbSystemConnectors").getExternalDbSystemConnectors = null as any;
export const getExternalDbSystemConnectorsOutput: typeof import("./getExternalDbSystemConnectors").getExternalDbSystemConnectorsOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbSystemConnectors","getExternalDbSystemConnectorsOutput"], () => require("./getExternalDbSystemConnectors"));

export { GetExternalDbSystemDiscoveriesArgs, GetExternalDbSystemDiscoveriesResult, GetExternalDbSystemDiscoveriesOutputArgs } from "./getExternalDbSystemDiscoveries";
export const getExternalDbSystemDiscoveries: typeof import("./getExternalDbSystemDiscoveries").getExternalDbSystemDiscoveries = null as any;
export const getExternalDbSystemDiscoveriesOutput: typeof import("./getExternalDbSystemDiscoveries").getExternalDbSystemDiscoveriesOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbSystemDiscoveries","getExternalDbSystemDiscoveriesOutput"], () => require("./getExternalDbSystemDiscoveries"));

export { GetExternalDbSystemDiscoveryArgs, GetExternalDbSystemDiscoveryResult, GetExternalDbSystemDiscoveryOutputArgs } from "./getExternalDbSystemDiscovery";
export const getExternalDbSystemDiscovery: typeof import("./getExternalDbSystemDiscovery").getExternalDbSystemDiscovery = null as any;
export const getExternalDbSystemDiscoveryOutput: typeof import("./getExternalDbSystemDiscovery").getExternalDbSystemDiscoveryOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbSystemDiscovery","getExternalDbSystemDiscoveryOutput"], () => require("./getExternalDbSystemDiscovery"));

export { GetExternalDbSystemsArgs, GetExternalDbSystemsResult, GetExternalDbSystemsOutputArgs } from "./getExternalDbSystems";
export const getExternalDbSystems: typeof import("./getExternalDbSystems").getExternalDbSystems = null as any;
export const getExternalDbSystemsOutput: typeof import("./getExternalDbSystems").getExternalDbSystemsOutput = null as any;
utilities.lazyLoad(exports, ["getExternalDbSystems","getExternalDbSystemsOutput"], () => require("./getExternalDbSystems"));

export { GetExternalExadataInfrastructureArgs, GetExternalExadataInfrastructureResult, GetExternalExadataInfrastructureOutputArgs } from "./getExternalExadataInfrastructure";
export const getExternalExadataInfrastructure: typeof import("./getExternalExadataInfrastructure").getExternalExadataInfrastructure = null as any;
export const getExternalExadataInfrastructureOutput: typeof import("./getExternalExadataInfrastructure").getExternalExadataInfrastructureOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataInfrastructure","getExternalExadataInfrastructureOutput"], () => require("./getExternalExadataInfrastructure"));

export { GetExternalExadataInfrastructuresArgs, GetExternalExadataInfrastructuresResult, GetExternalExadataInfrastructuresOutputArgs } from "./getExternalExadataInfrastructures";
export const getExternalExadataInfrastructures: typeof import("./getExternalExadataInfrastructures").getExternalExadataInfrastructures = null as any;
export const getExternalExadataInfrastructuresOutput: typeof import("./getExternalExadataInfrastructures").getExternalExadataInfrastructuresOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataInfrastructures","getExternalExadataInfrastructuresOutput"], () => require("./getExternalExadataInfrastructures"));

export { GetExternalExadataStorageConnectorArgs, GetExternalExadataStorageConnectorResult, GetExternalExadataStorageConnectorOutputArgs } from "./getExternalExadataStorageConnector";
export const getExternalExadataStorageConnector: typeof import("./getExternalExadataStorageConnector").getExternalExadataStorageConnector = null as any;
export const getExternalExadataStorageConnectorOutput: typeof import("./getExternalExadataStorageConnector").getExternalExadataStorageConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataStorageConnector","getExternalExadataStorageConnectorOutput"], () => require("./getExternalExadataStorageConnector"));

export { GetExternalExadataStorageConnectorsArgs, GetExternalExadataStorageConnectorsResult, GetExternalExadataStorageConnectorsOutputArgs } from "./getExternalExadataStorageConnectors";
export const getExternalExadataStorageConnectors: typeof import("./getExternalExadataStorageConnectors").getExternalExadataStorageConnectors = null as any;
export const getExternalExadataStorageConnectorsOutput: typeof import("./getExternalExadataStorageConnectors").getExternalExadataStorageConnectorsOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataStorageConnectors","getExternalExadataStorageConnectorsOutput"], () => require("./getExternalExadataStorageConnectors"));

export { GetExternalExadataStorageGridArgs, GetExternalExadataStorageGridResult, GetExternalExadataStorageGridOutputArgs } from "./getExternalExadataStorageGrid";
export const getExternalExadataStorageGrid: typeof import("./getExternalExadataStorageGrid").getExternalExadataStorageGrid = null as any;
export const getExternalExadataStorageGridOutput: typeof import("./getExternalExadataStorageGrid").getExternalExadataStorageGridOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataStorageGrid","getExternalExadataStorageGridOutput"], () => require("./getExternalExadataStorageGrid"));

export { GetExternalExadataStorageServerArgs, GetExternalExadataStorageServerResult, GetExternalExadataStorageServerOutputArgs } from "./getExternalExadataStorageServer";
export const getExternalExadataStorageServer: typeof import("./getExternalExadataStorageServer").getExternalExadataStorageServer = null as any;
export const getExternalExadataStorageServerOutput: typeof import("./getExternalExadataStorageServer").getExternalExadataStorageServerOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataStorageServer","getExternalExadataStorageServerOutput"], () => require("./getExternalExadataStorageServer"));

export { GetExternalExadataStorageServerIormPlanArgs, GetExternalExadataStorageServerIormPlanResult, GetExternalExadataStorageServerIormPlanOutputArgs } from "./getExternalExadataStorageServerIormPlan";
export const getExternalExadataStorageServerIormPlan: typeof import("./getExternalExadataStorageServerIormPlan").getExternalExadataStorageServerIormPlan = null as any;
export const getExternalExadataStorageServerIormPlanOutput: typeof import("./getExternalExadataStorageServerIormPlan").getExternalExadataStorageServerIormPlanOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataStorageServerIormPlan","getExternalExadataStorageServerIormPlanOutput"], () => require("./getExternalExadataStorageServerIormPlan"));

export { GetExternalExadataStorageServerOpenAlertHistoryArgs, GetExternalExadataStorageServerOpenAlertHistoryResult, GetExternalExadataStorageServerOpenAlertHistoryOutputArgs } from "./getExternalExadataStorageServerOpenAlertHistory";
export const getExternalExadataStorageServerOpenAlertHistory: typeof import("./getExternalExadataStorageServerOpenAlertHistory").getExternalExadataStorageServerOpenAlertHistory = null as any;
export const getExternalExadataStorageServerOpenAlertHistoryOutput: typeof import("./getExternalExadataStorageServerOpenAlertHistory").getExternalExadataStorageServerOpenAlertHistoryOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataStorageServerOpenAlertHistory","getExternalExadataStorageServerOpenAlertHistoryOutput"], () => require("./getExternalExadataStorageServerOpenAlertHistory"));

export { GetExternalExadataStorageServerTopSqlCpuActivityArgs, GetExternalExadataStorageServerTopSqlCpuActivityResult, GetExternalExadataStorageServerTopSqlCpuActivityOutputArgs } from "./getExternalExadataStorageServerTopSqlCpuActivity";
export const getExternalExadataStorageServerTopSqlCpuActivity: typeof import("./getExternalExadataStorageServerTopSqlCpuActivity").getExternalExadataStorageServerTopSqlCpuActivity = null as any;
export const getExternalExadataStorageServerTopSqlCpuActivityOutput: typeof import("./getExternalExadataStorageServerTopSqlCpuActivity").getExternalExadataStorageServerTopSqlCpuActivityOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataStorageServerTopSqlCpuActivity","getExternalExadataStorageServerTopSqlCpuActivityOutput"], () => require("./getExternalExadataStorageServerTopSqlCpuActivity"));

export { GetExternalExadataStorageServersArgs, GetExternalExadataStorageServersResult, GetExternalExadataStorageServersOutputArgs } from "./getExternalExadataStorageServers";
export const getExternalExadataStorageServers: typeof import("./getExternalExadataStorageServers").getExternalExadataStorageServers = null as any;
export const getExternalExadataStorageServersOutput: typeof import("./getExternalExadataStorageServers").getExternalExadataStorageServersOutput = null as any;
utilities.lazyLoad(exports, ["getExternalExadataStorageServers","getExternalExadataStorageServersOutput"], () => require("./getExternalExadataStorageServers"));

export { GetExternalListenerArgs, GetExternalListenerResult, GetExternalListenerOutputArgs } from "./getExternalListener";
export const getExternalListener: typeof import("./getExternalListener").getExternalListener = null as any;
export const getExternalListenerOutput: typeof import("./getExternalListener").getExternalListenerOutput = null as any;
utilities.lazyLoad(exports, ["getExternalListener","getExternalListenerOutput"], () => require("./getExternalListener"));

export { GetExternalListenerServicesArgs, GetExternalListenerServicesResult, GetExternalListenerServicesOutputArgs } from "./getExternalListenerServices";
export const getExternalListenerServices: typeof import("./getExternalListenerServices").getExternalListenerServices = null as any;
export const getExternalListenerServicesOutput: typeof import("./getExternalListenerServices").getExternalListenerServicesOutput = null as any;
utilities.lazyLoad(exports, ["getExternalListenerServices","getExternalListenerServicesOutput"], () => require("./getExternalListenerServices"));

export { GetExternalListenersArgs, GetExternalListenersResult, GetExternalListenersOutputArgs } from "./getExternalListeners";
export const getExternalListeners: typeof import("./getExternalListeners").getExternalListeners = null as any;
export const getExternalListenersOutput: typeof import("./getExternalListeners").getExternalListenersOutput = null as any;
utilities.lazyLoad(exports, ["getExternalListeners","getExternalListenersOutput"], () => require("./getExternalListeners"));

export { GetJobExecutionsStatusArgs, GetJobExecutionsStatusResult, GetJobExecutionsStatusOutputArgs } from "./getJobExecutionsStatus";
export const getJobExecutionsStatus: typeof import("./getJobExecutionsStatus").getJobExecutionsStatus = null as any;
export const getJobExecutionsStatusOutput: typeof import("./getJobExecutionsStatus").getJobExecutionsStatusOutput = null as any;
utilities.lazyLoad(exports, ["getJobExecutionsStatus","getJobExecutionsStatusOutput"], () => require("./getJobExecutionsStatus"));

export { GetJobExecutionsStatusesArgs, GetJobExecutionsStatusesResult, GetJobExecutionsStatusesOutputArgs } from "./getJobExecutionsStatuses";
export const getJobExecutionsStatuses: typeof import("./getJobExecutionsStatuses").getJobExecutionsStatuses = null as any;
export const getJobExecutionsStatusesOutput: typeof import("./getJobExecutionsStatuses").getJobExecutionsStatusesOutput = null as any;
utilities.lazyLoad(exports, ["getJobExecutionsStatuses","getJobExecutionsStatusesOutput"], () => require("./getJobExecutionsStatuses"));

export { GetManagedDatabaseArgs, GetManagedDatabaseResult, GetManagedDatabaseOutputArgs } from "./getManagedDatabase";
export const getManagedDatabase: typeof import("./getManagedDatabase").getManagedDatabase = null as any;
export const getManagedDatabaseOutput: typeof import("./getManagedDatabase").getManagedDatabaseOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabase","getManagedDatabaseOutput"], () => require("./getManagedDatabase"));

export { GetManagedDatabaseAddmTaskArgs, GetManagedDatabaseAddmTaskResult, GetManagedDatabaseAddmTaskOutputArgs } from "./getManagedDatabaseAddmTask";
export const getManagedDatabaseAddmTask: typeof import("./getManagedDatabaseAddmTask").getManagedDatabaseAddmTask = null as any;
export const getManagedDatabaseAddmTaskOutput: typeof import("./getManagedDatabaseAddmTask").getManagedDatabaseAddmTaskOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseAddmTask","getManagedDatabaseAddmTaskOutput"], () => require("./getManagedDatabaseAddmTask"));

export { GetManagedDatabaseAddmTasksArgs, GetManagedDatabaseAddmTasksResult, GetManagedDatabaseAddmTasksOutputArgs } from "./getManagedDatabaseAddmTasks";
export const getManagedDatabaseAddmTasks: typeof import("./getManagedDatabaseAddmTasks").getManagedDatabaseAddmTasks = null as any;
export const getManagedDatabaseAddmTasksOutput: typeof import("./getManagedDatabaseAddmTasks").getManagedDatabaseAddmTasksOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseAddmTasks","getManagedDatabaseAddmTasksOutput"], () => require("./getManagedDatabaseAddmTasks"));

export { GetManagedDatabaseAlertLogCountArgs, GetManagedDatabaseAlertLogCountResult, GetManagedDatabaseAlertLogCountOutputArgs } from "./getManagedDatabaseAlertLogCount";
export const getManagedDatabaseAlertLogCount: typeof import("./getManagedDatabaseAlertLogCount").getManagedDatabaseAlertLogCount = null as any;
export const getManagedDatabaseAlertLogCountOutput: typeof import("./getManagedDatabaseAlertLogCount").getManagedDatabaseAlertLogCountOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseAlertLogCount","getManagedDatabaseAlertLogCountOutput"], () => require("./getManagedDatabaseAlertLogCount"));

export { GetManagedDatabaseAlertLogCountsArgs, GetManagedDatabaseAlertLogCountsResult, GetManagedDatabaseAlertLogCountsOutputArgs } from "./getManagedDatabaseAlertLogCounts";
export const getManagedDatabaseAlertLogCounts: typeof import("./getManagedDatabaseAlertLogCounts").getManagedDatabaseAlertLogCounts = null as any;
export const getManagedDatabaseAlertLogCountsOutput: typeof import("./getManagedDatabaseAlertLogCounts").getManagedDatabaseAlertLogCountsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseAlertLogCounts","getManagedDatabaseAlertLogCountsOutput"], () => require("./getManagedDatabaseAlertLogCounts"));

export { GetManagedDatabaseAttentionLogCountArgs, GetManagedDatabaseAttentionLogCountResult, GetManagedDatabaseAttentionLogCountOutputArgs } from "./getManagedDatabaseAttentionLogCount";
export const getManagedDatabaseAttentionLogCount: typeof import("./getManagedDatabaseAttentionLogCount").getManagedDatabaseAttentionLogCount = null as any;
export const getManagedDatabaseAttentionLogCountOutput: typeof import("./getManagedDatabaseAttentionLogCount").getManagedDatabaseAttentionLogCountOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseAttentionLogCount","getManagedDatabaseAttentionLogCountOutput"], () => require("./getManagedDatabaseAttentionLogCount"));

export { GetManagedDatabaseAttentionLogCountsArgs, GetManagedDatabaseAttentionLogCountsResult, GetManagedDatabaseAttentionLogCountsOutputArgs } from "./getManagedDatabaseAttentionLogCounts";
export const getManagedDatabaseAttentionLogCounts: typeof import("./getManagedDatabaseAttentionLogCounts").getManagedDatabaseAttentionLogCounts = null as any;
export const getManagedDatabaseAttentionLogCountsOutput: typeof import("./getManagedDatabaseAttentionLogCounts").getManagedDatabaseAttentionLogCountsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseAttentionLogCounts","getManagedDatabaseAttentionLogCountsOutput"], () => require("./getManagedDatabaseAttentionLogCounts"));

export { GetManagedDatabaseGroupArgs, GetManagedDatabaseGroupResult, GetManagedDatabaseGroupOutputArgs } from "./getManagedDatabaseGroup";
export const getManagedDatabaseGroup: typeof import("./getManagedDatabaseGroup").getManagedDatabaseGroup = null as any;
export const getManagedDatabaseGroupOutput: typeof import("./getManagedDatabaseGroup").getManagedDatabaseGroupOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseGroup","getManagedDatabaseGroupOutput"], () => require("./getManagedDatabaseGroup"));

export { GetManagedDatabaseGroupsArgs, GetManagedDatabaseGroupsResult, GetManagedDatabaseGroupsOutputArgs } from "./getManagedDatabaseGroups";
export const getManagedDatabaseGroups: typeof import("./getManagedDatabaseGroups").getManagedDatabaseGroups = null as any;
export const getManagedDatabaseGroupsOutput: typeof import("./getManagedDatabaseGroups").getManagedDatabaseGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseGroups","getManagedDatabaseGroupsOutput"], () => require("./getManagedDatabaseGroups"));

export { GetManagedDatabaseOptimizerStatisticsAdvisorExecutionArgs, GetManagedDatabaseOptimizerStatisticsAdvisorExecutionResult, GetManagedDatabaseOptimizerStatisticsAdvisorExecutionOutputArgs } from "./getManagedDatabaseOptimizerStatisticsAdvisorExecution";
export const getManagedDatabaseOptimizerStatisticsAdvisorExecution: typeof import("./getManagedDatabaseOptimizerStatisticsAdvisorExecution").getManagedDatabaseOptimizerStatisticsAdvisorExecution = null as any;
export const getManagedDatabaseOptimizerStatisticsAdvisorExecutionOutput: typeof import("./getManagedDatabaseOptimizerStatisticsAdvisorExecution").getManagedDatabaseOptimizerStatisticsAdvisorExecutionOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseOptimizerStatisticsAdvisorExecution","getManagedDatabaseOptimizerStatisticsAdvisorExecutionOutput"], () => require("./getManagedDatabaseOptimizerStatisticsAdvisorExecution"));

export { GetManagedDatabaseOptimizerStatisticsAdvisorExecutionScriptArgs, GetManagedDatabaseOptimizerStatisticsAdvisorExecutionScriptResult, GetManagedDatabaseOptimizerStatisticsAdvisorExecutionScriptOutputArgs } from "./getManagedDatabaseOptimizerStatisticsAdvisorExecutionScript";
export const getManagedDatabaseOptimizerStatisticsAdvisorExecutionScript: typeof import("./getManagedDatabaseOptimizerStatisticsAdvisorExecutionScript").getManagedDatabaseOptimizerStatisticsAdvisorExecutionScript = null as any;
export const getManagedDatabaseOptimizerStatisticsAdvisorExecutionScriptOutput: typeof import("./getManagedDatabaseOptimizerStatisticsAdvisorExecutionScript").getManagedDatabaseOptimizerStatisticsAdvisorExecutionScriptOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseOptimizerStatisticsAdvisorExecutionScript","getManagedDatabaseOptimizerStatisticsAdvisorExecutionScriptOutput"], () => require("./getManagedDatabaseOptimizerStatisticsAdvisorExecutionScript"));

export { GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsArgs, GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsResult, GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOutputArgs } from "./getManagedDatabaseOptimizerStatisticsAdvisorExecutions";
export const getManagedDatabaseOptimizerStatisticsAdvisorExecutions: typeof import("./getManagedDatabaseOptimizerStatisticsAdvisorExecutions").getManagedDatabaseOptimizerStatisticsAdvisorExecutions = null as any;
export const getManagedDatabaseOptimizerStatisticsAdvisorExecutionsOutput: typeof import("./getManagedDatabaseOptimizerStatisticsAdvisorExecutions").getManagedDatabaseOptimizerStatisticsAdvisorExecutionsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseOptimizerStatisticsAdvisorExecutions","getManagedDatabaseOptimizerStatisticsAdvisorExecutionsOutput"], () => require("./getManagedDatabaseOptimizerStatisticsAdvisorExecutions"));

export { GetManagedDatabaseOptimizerStatisticsCollectionAggregationsArgs, GetManagedDatabaseOptimizerStatisticsCollectionAggregationsResult, GetManagedDatabaseOptimizerStatisticsCollectionAggregationsOutputArgs } from "./getManagedDatabaseOptimizerStatisticsCollectionAggregations";
export const getManagedDatabaseOptimizerStatisticsCollectionAggregations: typeof import("./getManagedDatabaseOptimizerStatisticsCollectionAggregations").getManagedDatabaseOptimizerStatisticsCollectionAggregations = null as any;
export const getManagedDatabaseOptimizerStatisticsCollectionAggregationsOutput: typeof import("./getManagedDatabaseOptimizerStatisticsCollectionAggregations").getManagedDatabaseOptimizerStatisticsCollectionAggregationsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseOptimizerStatisticsCollectionAggregations","getManagedDatabaseOptimizerStatisticsCollectionAggregationsOutput"], () => require("./getManagedDatabaseOptimizerStatisticsCollectionAggregations"));

export { GetManagedDatabaseOptimizerStatisticsCollectionOperationArgs, GetManagedDatabaseOptimizerStatisticsCollectionOperationResult, GetManagedDatabaseOptimizerStatisticsCollectionOperationOutputArgs } from "./getManagedDatabaseOptimizerStatisticsCollectionOperation";
export const getManagedDatabaseOptimizerStatisticsCollectionOperation: typeof import("./getManagedDatabaseOptimizerStatisticsCollectionOperation").getManagedDatabaseOptimizerStatisticsCollectionOperation = null as any;
export const getManagedDatabaseOptimizerStatisticsCollectionOperationOutput: typeof import("./getManagedDatabaseOptimizerStatisticsCollectionOperation").getManagedDatabaseOptimizerStatisticsCollectionOperationOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseOptimizerStatisticsCollectionOperation","getManagedDatabaseOptimizerStatisticsCollectionOperationOutput"], () => require("./getManagedDatabaseOptimizerStatisticsCollectionOperation"));

export { GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs, GetManagedDatabaseOptimizerStatisticsCollectionOperationsResult, GetManagedDatabaseOptimizerStatisticsCollectionOperationsOutputArgs } from "./getManagedDatabaseOptimizerStatisticsCollectionOperations";
export const getManagedDatabaseOptimizerStatisticsCollectionOperations: typeof import("./getManagedDatabaseOptimizerStatisticsCollectionOperations").getManagedDatabaseOptimizerStatisticsCollectionOperations = null as any;
export const getManagedDatabaseOptimizerStatisticsCollectionOperationsOutput: typeof import("./getManagedDatabaseOptimizerStatisticsCollectionOperations").getManagedDatabaseOptimizerStatisticsCollectionOperationsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseOptimizerStatisticsCollectionOperations","getManagedDatabaseOptimizerStatisticsCollectionOperationsOutput"], () => require("./getManagedDatabaseOptimizerStatisticsCollectionOperations"));

export { GetManagedDatabaseSqlTuningAdvisorTaskArgs, GetManagedDatabaseSqlTuningAdvisorTaskResult, GetManagedDatabaseSqlTuningAdvisorTaskOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTask";
export const getManagedDatabaseSqlTuningAdvisorTask: typeof import("./getManagedDatabaseSqlTuningAdvisorTask").getManagedDatabaseSqlTuningAdvisorTask = null as any;
export const getManagedDatabaseSqlTuningAdvisorTaskOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTask").getManagedDatabaseSqlTuningAdvisorTaskOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTask","getManagedDatabaseSqlTuningAdvisorTaskOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTask"));

export { GetManagedDatabaseSqlTuningAdvisorTasksArgs, GetManagedDatabaseSqlTuningAdvisorTasksResult, GetManagedDatabaseSqlTuningAdvisorTasksOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTasks";
export const getManagedDatabaseSqlTuningAdvisorTasks: typeof import("./getManagedDatabaseSqlTuningAdvisorTasks").getManagedDatabaseSqlTuningAdvisorTasks = null as any;
export const getManagedDatabaseSqlTuningAdvisorTasksOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTasks").getManagedDatabaseSqlTuningAdvisorTasksOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTasks","getManagedDatabaseSqlTuningAdvisorTasksOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTasks"));

export { GetManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparisonArgs, GetManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparisonResult, GetManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparisonOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparison";
export const getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparison: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparison").getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparison = null as any;
export const getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparisonOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparison").getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparisonOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparison","getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparisonOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTasksExecutionPlanStatsComparison"));

export { GetManagedDatabaseSqlTuningAdvisorTasksFindingArgs, GetManagedDatabaseSqlTuningAdvisorTasksFindingResult, GetManagedDatabaseSqlTuningAdvisorTasksFindingOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTasksFinding";
export const getManagedDatabaseSqlTuningAdvisorTasksFinding: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksFinding").getManagedDatabaseSqlTuningAdvisorTasksFinding = null as any;
export const getManagedDatabaseSqlTuningAdvisorTasksFindingOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksFinding").getManagedDatabaseSqlTuningAdvisorTasksFindingOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTasksFinding","getManagedDatabaseSqlTuningAdvisorTasksFindingOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTasksFinding"));

export { GetManagedDatabaseSqlTuningAdvisorTasksFindingsArgs, GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult, GetManagedDatabaseSqlTuningAdvisorTasksFindingsOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTasksFindings";
export const getManagedDatabaseSqlTuningAdvisorTasksFindings: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksFindings").getManagedDatabaseSqlTuningAdvisorTasksFindings = null as any;
export const getManagedDatabaseSqlTuningAdvisorTasksFindingsOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksFindings").getManagedDatabaseSqlTuningAdvisorTasksFindingsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTasksFindings","getManagedDatabaseSqlTuningAdvisorTasksFindingsOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTasksFindings"));

export { GetManagedDatabaseSqlTuningAdvisorTasksRecommendationArgs, GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult, GetManagedDatabaseSqlTuningAdvisorTasksRecommendationOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTasksRecommendation";
export const getManagedDatabaseSqlTuningAdvisorTasksRecommendation: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksRecommendation").getManagedDatabaseSqlTuningAdvisorTasksRecommendation = null as any;
export const getManagedDatabaseSqlTuningAdvisorTasksRecommendationOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksRecommendation").getManagedDatabaseSqlTuningAdvisorTasksRecommendationOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTasksRecommendation","getManagedDatabaseSqlTuningAdvisorTasksRecommendationOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTasksRecommendation"));

export { GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsArgs, GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsResult, GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTasksRecommendations";
export const getManagedDatabaseSqlTuningAdvisorTasksRecommendations: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksRecommendations").getManagedDatabaseSqlTuningAdvisorTasksRecommendations = null as any;
export const getManagedDatabaseSqlTuningAdvisorTasksRecommendationsOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksRecommendations").getManagedDatabaseSqlTuningAdvisorTasksRecommendationsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTasksRecommendations","getManagedDatabaseSqlTuningAdvisorTasksRecommendationsOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTasksRecommendations"));

export { GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanArgs, GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult, GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlan";
export const getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlan: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlan").getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlan = null as any;
export const getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlan").getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlan","getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlan"));

export { GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportArgs, GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportResult, GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportOutputArgs } from "./getManagedDatabaseSqlTuningAdvisorTasksSummaryReport";
export const getManagedDatabaseSqlTuningAdvisorTasksSummaryReport: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksSummaryReport").getManagedDatabaseSqlTuningAdvisorTasksSummaryReport = null as any;
export const getManagedDatabaseSqlTuningAdvisorTasksSummaryReportOutput: typeof import("./getManagedDatabaseSqlTuningAdvisorTasksSummaryReport").getManagedDatabaseSqlTuningAdvisorTasksSummaryReportOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningAdvisorTasksSummaryReport","getManagedDatabaseSqlTuningAdvisorTasksSummaryReportOutput"], () => require("./getManagedDatabaseSqlTuningAdvisorTasksSummaryReport"));

export { GetManagedDatabaseSqlTuningSetArgs, GetManagedDatabaseSqlTuningSetResult, GetManagedDatabaseSqlTuningSetOutputArgs } from "./getManagedDatabaseSqlTuningSet";
export const getManagedDatabaseSqlTuningSet: typeof import("./getManagedDatabaseSqlTuningSet").getManagedDatabaseSqlTuningSet = null as any;
export const getManagedDatabaseSqlTuningSetOutput: typeof import("./getManagedDatabaseSqlTuningSet").getManagedDatabaseSqlTuningSetOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningSet","getManagedDatabaseSqlTuningSetOutput"], () => require("./getManagedDatabaseSqlTuningSet"));

export { GetManagedDatabaseSqlTuningSetsArgs, GetManagedDatabaseSqlTuningSetsResult, GetManagedDatabaseSqlTuningSetsOutputArgs } from "./getManagedDatabaseSqlTuningSets";
export const getManagedDatabaseSqlTuningSets: typeof import("./getManagedDatabaseSqlTuningSets").getManagedDatabaseSqlTuningSets = null as any;
export const getManagedDatabaseSqlTuningSetsOutput: typeof import("./getManagedDatabaseSqlTuningSets").getManagedDatabaseSqlTuningSetsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseSqlTuningSets","getManagedDatabaseSqlTuningSetsOutput"], () => require("./getManagedDatabaseSqlTuningSets"));

export { GetManagedDatabaseTableStatisticsArgs, GetManagedDatabaseTableStatisticsResult, GetManagedDatabaseTableStatisticsOutputArgs } from "./getManagedDatabaseTableStatistics";
export const getManagedDatabaseTableStatistics: typeof import("./getManagedDatabaseTableStatistics").getManagedDatabaseTableStatistics = null as any;
export const getManagedDatabaseTableStatisticsOutput: typeof import("./getManagedDatabaseTableStatistics").getManagedDatabaseTableStatisticsOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseTableStatistics","getManagedDatabaseTableStatisticsOutput"], () => require("./getManagedDatabaseTableStatistics"));

export { GetManagedDatabaseUserArgs, GetManagedDatabaseUserResult, GetManagedDatabaseUserOutputArgs } from "./getManagedDatabaseUser";
export const getManagedDatabaseUser: typeof import("./getManagedDatabaseUser").getManagedDatabaseUser = null as any;
export const getManagedDatabaseUserOutput: typeof import("./getManagedDatabaseUser").getManagedDatabaseUserOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUser","getManagedDatabaseUserOutput"], () => require("./getManagedDatabaseUser"));

export { GetManagedDatabaseUserConsumerGroupPrivilegeArgs, GetManagedDatabaseUserConsumerGroupPrivilegeResult, GetManagedDatabaseUserConsumerGroupPrivilegeOutputArgs } from "./getManagedDatabaseUserConsumerGroupPrivilege";
export const getManagedDatabaseUserConsumerGroupPrivilege: typeof import("./getManagedDatabaseUserConsumerGroupPrivilege").getManagedDatabaseUserConsumerGroupPrivilege = null as any;
export const getManagedDatabaseUserConsumerGroupPrivilegeOutput: typeof import("./getManagedDatabaseUserConsumerGroupPrivilege").getManagedDatabaseUserConsumerGroupPrivilegeOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserConsumerGroupPrivilege","getManagedDatabaseUserConsumerGroupPrivilegeOutput"], () => require("./getManagedDatabaseUserConsumerGroupPrivilege"));

export { GetManagedDatabaseUserConsumerGroupPrivilegesArgs, GetManagedDatabaseUserConsumerGroupPrivilegesResult, GetManagedDatabaseUserConsumerGroupPrivilegesOutputArgs } from "./getManagedDatabaseUserConsumerGroupPrivileges";
export const getManagedDatabaseUserConsumerGroupPrivileges: typeof import("./getManagedDatabaseUserConsumerGroupPrivileges").getManagedDatabaseUserConsumerGroupPrivileges = null as any;
export const getManagedDatabaseUserConsumerGroupPrivilegesOutput: typeof import("./getManagedDatabaseUserConsumerGroupPrivileges").getManagedDatabaseUserConsumerGroupPrivilegesOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserConsumerGroupPrivileges","getManagedDatabaseUserConsumerGroupPrivilegesOutput"], () => require("./getManagedDatabaseUserConsumerGroupPrivileges"));

export { GetManagedDatabaseUserDataAccessContainerArgs, GetManagedDatabaseUserDataAccessContainerResult, GetManagedDatabaseUserDataAccessContainerOutputArgs } from "./getManagedDatabaseUserDataAccessContainer";
export const getManagedDatabaseUserDataAccessContainer: typeof import("./getManagedDatabaseUserDataAccessContainer").getManagedDatabaseUserDataAccessContainer = null as any;
export const getManagedDatabaseUserDataAccessContainerOutput: typeof import("./getManagedDatabaseUserDataAccessContainer").getManagedDatabaseUserDataAccessContainerOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserDataAccessContainer","getManagedDatabaseUserDataAccessContainerOutput"], () => require("./getManagedDatabaseUserDataAccessContainer"));

export { GetManagedDatabaseUserDataAccessContainersArgs, GetManagedDatabaseUserDataAccessContainersResult, GetManagedDatabaseUserDataAccessContainersOutputArgs } from "./getManagedDatabaseUserDataAccessContainers";
export const getManagedDatabaseUserDataAccessContainers: typeof import("./getManagedDatabaseUserDataAccessContainers").getManagedDatabaseUserDataAccessContainers = null as any;
export const getManagedDatabaseUserDataAccessContainersOutput: typeof import("./getManagedDatabaseUserDataAccessContainers").getManagedDatabaseUserDataAccessContainersOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserDataAccessContainers","getManagedDatabaseUserDataAccessContainersOutput"], () => require("./getManagedDatabaseUserDataAccessContainers"));

export { GetManagedDatabaseUserObjectPrivilegeArgs, GetManagedDatabaseUserObjectPrivilegeResult, GetManagedDatabaseUserObjectPrivilegeOutputArgs } from "./getManagedDatabaseUserObjectPrivilege";
export const getManagedDatabaseUserObjectPrivilege: typeof import("./getManagedDatabaseUserObjectPrivilege").getManagedDatabaseUserObjectPrivilege = null as any;
export const getManagedDatabaseUserObjectPrivilegeOutput: typeof import("./getManagedDatabaseUserObjectPrivilege").getManagedDatabaseUserObjectPrivilegeOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserObjectPrivilege","getManagedDatabaseUserObjectPrivilegeOutput"], () => require("./getManagedDatabaseUserObjectPrivilege"));

export { GetManagedDatabaseUserObjectPrivilegesArgs, GetManagedDatabaseUserObjectPrivilegesResult, GetManagedDatabaseUserObjectPrivilegesOutputArgs } from "./getManagedDatabaseUserObjectPrivileges";
export const getManagedDatabaseUserObjectPrivileges: typeof import("./getManagedDatabaseUserObjectPrivileges").getManagedDatabaseUserObjectPrivileges = null as any;
export const getManagedDatabaseUserObjectPrivilegesOutput: typeof import("./getManagedDatabaseUserObjectPrivileges").getManagedDatabaseUserObjectPrivilegesOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserObjectPrivileges","getManagedDatabaseUserObjectPrivilegesOutput"], () => require("./getManagedDatabaseUserObjectPrivileges"));

export { GetManagedDatabaseUserProxiedForUserArgs, GetManagedDatabaseUserProxiedForUserResult, GetManagedDatabaseUserProxiedForUserOutputArgs } from "./getManagedDatabaseUserProxiedForUser";
export const getManagedDatabaseUserProxiedForUser: typeof import("./getManagedDatabaseUserProxiedForUser").getManagedDatabaseUserProxiedForUser = null as any;
export const getManagedDatabaseUserProxiedForUserOutput: typeof import("./getManagedDatabaseUserProxiedForUser").getManagedDatabaseUserProxiedForUserOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserProxiedForUser","getManagedDatabaseUserProxiedForUserOutput"], () => require("./getManagedDatabaseUserProxiedForUser"));

export { GetManagedDatabaseUserProxiedForUsersArgs, GetManagedDatabaseUserProxiedForUsersResult, GetManagedDatabaseUserProxiedForUsersOutputArgs } from "./getManagedDatabaseUserProxiedForUsers";
export const getManagedDatabaseUserProxiedForUsers: typeof import("./getManagedDatabaseUserProxiedForUsers").getManagedDatabaseUserProxiedForUsers = null as any;
export const getManagedDatabaseUserProxiedForUsersOutput: typeof import("./getManagedDatabaseUserProxiedForUsers").getManagedDatabaseUserProxiedForUsersOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserProxiedForUsers","getManagedDatabaseUserProxiedForUsersOutput"], () => require("./getManagedDatabaseUserProxiedForUsers"));

export { GetManagedDatabaseUserRoleArgs, GetManagedDatabaseUserRoleResult, GetManagedDatabaseUserRoleOutputArgs } from "./getManagedDatabaseUserRole";
export const getManagedDatabaseUserRole: typeof import("./getManagedDatabaseUserRole").getManagedDatabaseUserRole = null as any;
export const getManagedDatabaseUserRoleOutput: typeof import("./getManagedDatabaseUserRole").getManagedDatabaseUserRoleOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserRole","getManagedDatabaseUserRoleOutput"], () => require("./getManagedDatabaseUserRole"));

export { GetManagedDatabaseUserRolesArgs, GetManagedDatabaseUserRolesResult, GetManagedDatabaseUserRolesOutputArgs } from "./getManagedDatabaseUserRoles";
export const getManagedDatabaseUserRoles: typeof import("./getManagedDatabaseUserRoles").getManagedDatabaseUserRoles = null as any;
export const getManagedDatabaseUserRolesOutput: typeof import("./getManagedDatabaseUserRoles").getManagedDatabaseUserRolesOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUserRoles","getManagedDatabaseUserRolesOutput"], () => require("./getManagedDatabaseUserRoles"));

export { GetManagedDatabaseUsersArgs, GetManagedDatabaseUsersResult, GetManagedDatabaseUsersOutputArgs } from "./getManagedDatabaseUsers";
export const getManagedDatabaseUsers: typeof import("./getManagedDatabaseUsers").getManagedDatabaseUsers = null as any;
export const getManagedDatabaseUsersOutput: typeof import("./getManagedDatabaseUsers").getManagedDatabaseUsersOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabaseUsers","getManagedDatabaseUsersOutput"], () => require("./getManagedDatabaseUsers"));

export { GetManagedDatabasesArgs, GetManagedDatabasesResult, GetManagedDatabasesOutputArgs } from "./getManagedDatabases";
export const getManagedDatabases: typeof import("./getManagedDatabases").getManagedDatabases = null as any;
export const getManagedDatabasesOutput: typeof import("./getManagedDatabases").getManagedDatabasesOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabases","getManagedDatabasesOutput"], () => require("./getManagedDatabases"));

export { GetManagedDatabasesAsmPropertiesArgs, GetManagedDatabasesAsmPropertiesResult, GetManagedDatabasesAsmPropertiesOutputArgs } from "./getManagedDatabasesAsmProperties";
export const getManagedDatabasesAsmProperties: typeof import("./getManagedDatabasesAsmProperties").getManagedDatabasesAsmProperties = null as any;
export const getManagedDatabasesAsmPropertiesOutput: typeof import("./getManagedDatabasesAsmProperties").getManagedDatabasesAsmPropertiesOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabasesAsmProperties","getManagedDatabasesAsmPropertiesOutput"], () => require("./getManagedDatabasesAsmProperties"));

export { GetManagedDatabasesAsmPropertyArgs, GetManagedDatabasesAsmPropertyResult, GetManagedDatabasesAsmPropertyOutputArgs } from "./getManagedDatabasesAsmProperty";
export const getManagedDatabasesAsmProperty: typeof import("./getManagedDatabasesAsmProperty").getManagedDatabasesAsmProperty = null as any;
export const getManagedDatabasesAsmPropertyOutput: typeof import("./getManagedDatabasesAsmProperty").getManagedDatabasesAsmPropertyOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabasesAsmProperty","getManagedDatabasesAsmPropertyOutput"], () => require("./getManagedDatabasesAsmProperty"));

export { GetManagedDatabasesDatabaseParameterArgs, GetManagedDatabasesDatabaseParameterResult, GetManagedDatabasesDatabaseParameterOutputArgs } from "./getManagedDatabasesDatabaseParameter";
export const getManagedDatabasesDatabaseParameter: typeof import("./getManagedDatabasesDatabaseParameter").getManagedDatabasesDatabaseParameter = null as any;
export const getManagedDatabasesDatabaseParameterOutput: typeof import("./getManagedDatabasesDatabaseParameter").getManagedDatabasesDatabaseParameterOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabasesDatabaseParameter","getManagedDatabasesDatabaseParameterOutput"], () => require("./getManagedDatabasesDatabaseParameter"));

export { GetManagedDatabasesDatabaseParametersArgs, GetManagedDatabasesDatabaseParametersResult, GetManagedDatabasesDatabaseParametersOutputArgs } from "./getManagedDatabasesDatabaseParameters";
export const getManagedDatabasesDatabaseParameters: typeof import("./getManagedDatabasesDatabaseParameters").getManagedDatabasesDatabaseParameters = null as any;
export const getManagedDatabasesDatabaseParametersOutput: typeof import("./getManagedDatabasesDatabaseParameters").getManagedDatabasesDatabaseParametersOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabasesDatabaseParameters","getManagedDatabasesDatabaseParametersOutput"], () => require("./getManagedDatabasesDatabaseParameters"));

export { GetManagedDatabasesUserProxyUserArgs, GetManagedDatabasesUserProxyUserResult, GetManagedDatabasesUserProxyUserOutputArgs } from "./getManagedDatabasesUserProxyUser";
export const getManagedDatabasesUserProxyUser: typeof import("./getManagedDatabasesUserProxyUser").getManagedDatabasesUserProxyUser = null as any;
export const getManagedDatabasesUserProxyUserOutput: typeof import("./getManagedDatabasesUserProxyUser").getManagedDatabasesUserProxyUserOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabasesUserProxyUser","getManagedDatabasesUserProxyUserOutput"], () => require("./getManagedDatabasesUserProxyUser"));

export { GetManagedDatabasesUserProxyUsersArgs, GetManagedDatabasesUserProxyUsersResult, GetManagedDatabasesUserProxyUsersOutputArgs } from "./getManagedDatabasesUserProxyUsers";
export const getManagedDatabasesUserProxyUsers: typeof import("./getManagedDatabasesUserProxyUsers").getManagedDatabasesUserProxyUsers = null as any;
export const getManagedDatabasesUserProxyUsersOutput: typeof import("./getManagedDatabasesUserProxyUsers").getManagedDatabasesUserProxyUsersOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabasesUserProxyUsers","getManagedDatabasesUserProxyUsersOutput"], () => require("./getManagedDatabasesUserProxyUsers"));

export { GetManagedDatabasesUserSystemPrivilegeArgs, GetManagedDatabasesUserSystemPrivilegeResult, GetManagedDatabasesUserSystemPrivilegeOutputArgs } from "./getManagedDatabasesUserSystemPrivilege";
export const getManagedDatabasesUserSystemPrivilege: typeof import("./getManagedDatabasesUserSystemPrivilege").getManagedDatabasesUserSystemPrivilege = null as any;
export const getManagedDatabasesUserSystemPrivilegeOutput: typeof import("./getManagedDatabasesUserSystemPrivilege").getManagedDatabasesUserSystemPrivilegeOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabasesUserSystemPrivilege","getManagedDatabasesUserSystemPrivilegeOutput"], () => require("./getManagedDatabasesUserSystemPrivilege"));

export { GetManagedDatabasesUserSystemPrivilegesArgs, GetManagedDatabasesUserSystemPrivilegesResult, GetManagedDatabasesUserSystemPrivilegesOutputArgs } from "./getManagedDatabasesUserSystemPrivileges";
export const getManagedDatabasesUserSystemPrivileges: typeof import("./getManagedDatabasesUserSystemPrivileges").getManagedDatabasesUserSystemPrivileges = null as any;
export const getManagedDatabasesUserSystemPrivilegesOutput: typeof import("./getManagedDatabasesUserSystemPrivileges").getManagedDatabasesUserSystemPrivilegesOutput = null as any;
utilities.lazyLoad(exports, ["getManagedDatabasesUserSystemPrivileges","getManagedDatabasesUserSystemPrivilegesOutput"], () => require("./getManagedDatabasesUserSystemPrivileges"));

export { ManagedDatabaseGroupArgs, ManagedDatabaseGroupState } from "./managedDatabaseGroup";
export type ManagedDatabaseGroup = import("./managedDatabaseGroup").ManagedDatabaseGroup;
export const ManagedDatabaseGroup: typeof import("./managedDatabaseGroup").ManagedDatabaseGroup = null as any;
utilities.lazyLoad(exports, ["ManagedDatabaseGroup"], () => require("./managedDatabaseGroup"));

export { ManagedDatabasesChangeDatabaseParameterArgs, ManagedDatabasesChangeDatabaseParameterState } from "./managedDatabasesChangeDatabaseParameter";
export type ManagedDatabasesChangeDatabaseParameter = import("./managedDatabasesChangeDatabaseParameter").ManagedDatabasesChangeDatabaseParameter;
export const ManagedDatabasesChangeDatabaseParameter: typeof import("./managedDatabasesChangeDatabaseParameter").ManagedDatabasesChangeDatabaseParameter = null as any;
utilities.lazyLoad(exports, ["ManagedDatabasesChangeDatabaseParameter"], () => require("./managedDatabasesChangeDatabaseParameter"));

export { ManagedDatabasesResetDatabaseParameterArgs, ManagedDatabasesResetDatabaseParameterState } from "./managedDatabasesResetDatabaseParameter";
export type ManagedDatabasesResetDatabaseParameter = import("./managedDatabasesResetDatabaseParameter").ManagedDatabasesResetDatabaseParameter;
export const ManagedDatabasesResetDatabaseParameter: typeof import("./managedDatabasesResetDatabaseParameter").ManagedDatabasesResetDatabaseParameter = null as any;
utilities.lazyLoad(exports, ["ManagedDatabasesResetDatabaseParameter"], () => require("./managedDatabasesResetDatabaseParameter"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:DatabaseManagement/dbManagementPrivateEndpoint:DbManagementPrivateEndpoint":
                return new DbManagementPrivateEndpoint(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalAsm:ExternalAsm":
                return new ExternalAsm(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalCluster:ExternalCluster":
                return new ExternalCluster(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalClusterInstance:ExternalClusterInstance":
                return new ExternalClusterInstance(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalDbNode:ExternalDbNode":
                return new ExternalDbNode(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalDbSystem:ExternalDbSystem":
                return new ExternalDbSystem(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalDbSystemConnector:ExternalDbSystemConnector":
                return new ExternalDbSystemConnector(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalDbSystemDatabaseManagementsManagement:ExternalDbSystemDatabaseManagementsManagement":
                return new ExternalDbSystemDatabaseManagementsManagement(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalDbSystemDiscovery:ExternalDbSystemDiscovery":
                return new ExternalDbSystemDiscovery(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalExadataInfrastructure:ExternalExadataInfrastructure":
                return new ExternalExadataInfrastructure(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalExadataInfrastructureExadataManagement:ExternalExadataInfrastructureExadataManagement":
                return new ExternalExadataInfrastructureExadataManagement(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalExadataStorageConnector:ExternalExadataStorageConnector":
                return new ExternalExadataStorageConnector(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/externalListener:ExternalListener":
                return new ExternalListener(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/managedDatabaseGroup:ManagedDatabaseGroup":
                return new ManagedDatabaseGroup(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/managedDatabasesChangeDatabaseParameter:ManagedDatabasesChangeDatabaseParameter":
                return new ManagedDatabasesChangeDatabaseParameter(name, <any>undefined, { urn })
            case "oci:DatabaseManagement/managedDatabasesResetDatabaseParameter:ManagedDatabasesResetDatabaseParameter":
                return new ManagedDatabasesResetDatabaseParameter(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/dbManagementPrivateEndpoint", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalAsm", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalCluster", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalClusterInstance", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalDbNode", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalDbSystem", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalDbSystemConnector", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalDbSystemDatabaseManagementsManagement", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalDbSystemDiscovery", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalExadataInfrastructure", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalExadataInfrastructureExadataManagement", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalExadataStorageConnector", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/externalListener", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/managedDatabaseGroup", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/managedDatabasesChangeDatabaseParameter", _module)
pulumi.runtime.registerResourceModule("oci", "DatabaseManagement/managedDatabasesResetDatabaseParameter", _module)
