// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Pluggabledatabase Pluggable Database Dbm Features Management resource in Oracle Cloud Infrastructure Database Management service.
 *
 * Enables a Database Management feature for the specified Oracle cloud pluggable database.
 */
export class PluggabledatabasePluggableDatabaseDbmFeaturesManagement extends pulumi.CustomResource {
    /**
     * Get an existing PluggabledatabasePluggableDatabaseDbmFeaturesManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PluggabledatabasePluggableDatabaseDbmFeaturesManagementState, opts?: pulumi.CustomResourceOptions): PluggabledatabasePluggableDatabaseDbmFeaturesManagement {
        return new PluggabledatabasePluggableDatabaseDbmFeaturesManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DatabaseManagement/pluggabledatabasePluggableDatabaseDbmFeaturesManagement:PluggabledatabasePluggableDatabaseDbmFeaturesManagement';

    /**
     * Returns true if the given object is an instance of PluggabledatabasePluggableDatabaseDbmFeaturesManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PluggabledatabasePluggableDatabaseDbmFeaturesManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PluggabledatabasePluggableDatabaseDbmFeaturesManagement.__pulumiType;
    }

    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly enablePluggableDatabaseDbmFeature!: pulumi.Output<boolean>;
    /**
     * The details required to enable the specified Database Management feature.
     */
    public readonly featureDetails!: pulumi.Output<outputs.DatabaseManagement.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails | undefined>;
    public readonly modifyPluggableDatabaseDbmFeature!: pulumi.Output<boolean | undefined>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
     */
    public readonly pluggableDatabaseId!: pulumi.Output<string>;

    /**
     * Create a PluggabledatabasePluggableDatabaseDbmFeaturesManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs | PluggabledatabasePluggableDatabaseDbmFeaturesManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PluggabledatabasePluggableDatabaseDbmFeaturesManagementState | undefined;
            resourceInputs["enablePluggableDatabaseDbmFeature"] = state ? state.enablePluggableDatabaseDbmFeature : undefined;
            resourceInputs["featureDetails"] = state ? state.featureDetails : undefined;
            resourceInputs["modifyPluggableDatabaseDbmFeature"] = state ? state.modifyPluggableDatabaseDbmFeature : undefined;
            resourceInputs["pluggableDatabaseId"] = state ? state.pluggableDatabaseId : undefined;
        } else {
            const args = argsOrState as PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs | undefined;
            if ((!args || args.enablePluggableDatabaseDbmFeature === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enablePluggableDatabaseDbmFeature'");
            }
            if ((!args || args.pluggableDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pluggableDatabaseId'");
            }
            resourceInputs["enablePluggableDatabaseDbmFeature"] = args ? args.enablePluggableDatabaseDbmFeature : undefined;
            resourceInputs["featureDetails"] = args ? args.featureDetails : undefined;
            resourceInputs["modifyPluggableDatabaseDbmFeature"] = args ? args.modifyPluggableDatabaseDbmFeature : undefined;
            resourceInputs["pluggableDatabaseId"] = args ? args.pluggableDatabaseId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PluggabledatabasePluggableDatabaseDbmFeaturesManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PluggabledatabasePluggableDatabaseDbmFeaturesManagement resources.
 */
export interface PluggabledatabasePluggableDatabaseDbmFeaturesManagementState {
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    enablePluggableDatabaseDbmFeature?: pulumi.Input<boolean>;
    /**
     * The details required to enable the specified Database Management feature.
     */
    featureDetails?: pulumi.Input<inputs.DatabaseManagement.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails>;
    modifyPluggableDatabaseDbmFeature?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
     */
    pluggableDatabaseId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PluggabledatabasePluggableDatabaseDbmFeaturesManagement resource.
 */
export interface PluggabledatabasePluggableDatabaseDbmFeaturesManagementArgs {
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    enablePluggableDatabaseDbmFeature: pulumi.Input<boolean>;
    /**
     * The details required to enable the specified Database Management feature.
     */
    featureDetails?: pulumi.Input<inputs.DatabaseManagement.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetails>;
    modifyPluggableDatabaseDbmFeature?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
     */
    pluggableDatabaseId: pulumi.Input<string>;
}
