// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Connection resource in Oracle Cloud Infrastructure Database Migration service.
 *
 * Create a Database Connection resource that contains the details to connect to either a Source or Target Database
 * in the migration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConnection = new oci.databasemigration.Connection("testConnection", {
 *     adminCredentials: {
 *         password: _var.connection_admin_credentials_password,
 *         username: _var.connection_admin_credentials_username,
 *     },
 *     compartmentId: _var.compartment_id,
 *     databaseType: _var.connection_database_type,
 *     vaultDetails: {
 *         compartmentId: _var.compartment_id,
 *         keyId: oci_kms_key.test_key.id,
 *         vaultId: oci_kms_vault.test_vault.id,
 *     },
 *     certificateTdn: _var.connection_certificate_tdn,
 *     connectDescriptor: {
 *         connectString: _var.connection_connect_descriptor_connect_string,
 *         databaseServiceName: oci_core_service.test_service.name,
 *         host: _var.connection_connect_descriptor_host,
 *         port: _var.connection_connect_descriptor_port,
 *     },
 *     databaseId: oci_database_database.test_database.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     displayName: _var.connection_display_name,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     privateEndpoint: {
 *         compartmentId: _var.compartment_id,
 *         subnetId: oci_core_subnet.test_subnet.id,
 *         vcnId: oci_core_vcn.test_vcn.id,
 *     },
 *     sshDetails: {
 *         host: _var.connection_ssh_details_host,
 *         sshkey: _var.connection_ssh_details_sshkey,
 *         user: _var.connection_ssh_details_user,
 *         sudoLocation: _var.connection_ssh_details_sudo_location,
 *     },
 *     tlsKeystore: _var.connection_tls_keystore,
 *     tlsWallet: _var.connection_tls_wallet,
 * });
 * ```
 *
 * ## Import
 *
 * Connections can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:DatabaseMigration/connection:Connection test_connection "id"
 * ```
 */
export class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionState, opts?: pulumi.CustomResourceOptions): Connection {
        return new Connection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DatabaseMigration/connection:Connection';

    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connection.__pulumiType;
    }

    /**
     * (Updatable) Database Administrator Credentials details.
     */
    public readonly adminCredentials!: pulumi.Output<outputs.DatabaseMigration.ConnectionAdminCredentials>;
    /**
     * (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
     */
    public readonly certificateTdn!: pulumi.Output<string>;
    /**
     * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
     */
    public readonly connectDescriptor!: pulumi.Output<outputs.DatabaseMigration.ConnectionConnectDescriptor>;
    /**
     * OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
     */
    public /*out*/ readonly credentialsSecretId!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
     */
    public readonly databaseId!: pulumi.Output<string>;
    /**
     * Database connection type.
     */
    public readonly databaseType!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Database Connection display name identifier.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
     */
    public readonly privateEndpoint!: pulumi.Output<outputs.DatabaseMigration.ConnectionPrivateEndpoint>;
    /**
     * (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
     */
    public readonly sshDetails!: pulumi.Output<outputs.DatabaseMigration.ConnectionSshDetails>;
    /**
     * The current state of the Connection resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The time the Connection resource was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time of the last Connection resource details update. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
     */
    public readonly tlsKeystore!: pulumi.Output<string>;
    /**
     * (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
     */
    public readonly tlsWallet!: pulumi.Output<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     */
    public readonly vaultDetails!: pulumi.Output<outputs.DatabaseMigration.ConnectionVaultDetails>;

    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionArgs | ConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionState | undefined;
            resourceInputs["adminCredentials"] = state ? state.adminCredentials : undefined;
            resourceInputs["certificateTdn"] = state ? state.certificateTdn : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectDescriptor"] = state ? state.connectDescriptor : undefined;
            resourceInputs["credentialsSecretId"] = state ? state.credentialsSecretId : undefined;
            resourceInputs["databaseId"] = state ? state.databaseId : undefined;
            resourceInputs["databaseType"] = state ? state.databaseType : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["privateEndpoint"] = state ? state.privateEndpoint : undefined;
            resourceInputs["sshDetails"] = state ? state.sshDetails : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["tlsKeystore"] = state ? state.tlsKeystore : undefined;
            resourceInputs["tlsWallet"] = state ? state.tlsWallet : undefined;
            resourceInputs["vaultDetails"] = state ? state.vaultDetails : undefined;
        } else {
            const args = argsOrState as ConnectionArgs | undefined;
            if ((!args || args.adminCredentials === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminCredentials'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.databaseType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseType'");
            }
            if ((!args || args.vaultDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultDetails'");
            }
            resourceInputs["adminCredentials"] = args ? args.adminCredentials : undefined;
            resourceInputs["certificateTdn"] = args ? args.certificateTdn : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["connectDescriptor"] = args ? args.connectDescriptor : undefined;
            resourceInputs["databaseId"] = args ? args.databaseId : undefined;
            resourceInputs["databaseType"] = args ? args.databaseType : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["privateEndpoint"] = args ? args.privateEndpoint : undefined;
            resourceInputs["sshDetails"] = args ? args.sshDetails : undefined;
            resourceInputs["tlsKeystore"] = args ? args.tlsKeystore : undefined;
            resourceInputs["tlsWallet"] = args ? args.tlsWallet : undefined;
            resourceInputs["vaultDetails"] = args ? args.vaultDetails : undefined;
            resourceInputs["credentialsSecretId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Connection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Connection resources.
 */
export interface ConnectionState {
    /**
     * (Updatable) Database Administrator Credentials details.
     */
    adminCredentials?: pulumi.Input<inputs.DatabaseMigration.ConnectionAdminCredentials>;
    /**
     * (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
     */
    certificateTdn?: pulumi.Input<string>;
    /**
     * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
     */
    connectDescriptor?: pulumi.Input<inputs.DatabaseMigration.ConnectionConnectDescriptor>;
    /**
     * OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
     */
    credentialsSecretId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * Database connection type.
     */
    databaseType?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Database Connection display name identifier.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
     */
    privateEndpoint?: pulumi.Input<inputs.DatabaseMigration.ConnectionPrivateEndpoint>;
    /**
     * (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
     */
    sshDetails?: pulumi.Input<inputs.DatabaseMigration.ConnectionSshDetails>;
    /**
     * The current state of the Connection resource.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The time the Connection resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time of the last Connection resource details update. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
     */
    tlsKeystore?: pulumi.Input<string>;
    /**
     * (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
     */
    tlsWallet?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     */
    vaultDetails?: pulumi.Input<inputs.DatabaseMigration.ConnectionVaultDetails>;
}

/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * (Updatable) Database Administrator Credentials details.
     */
    adminCredentials: pulumi.Input<inputs.DatabaseMigration.ConnectionAdminCredentials>;
    /**
     * (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
     */
    certificateTdn?: pulumi.Input<string>;
    /**
     * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
     */
    connectDescriptor?: pulumi.Input<inputs.DatabaseMigration.ConnectionConnectDescriptor>;
    /**
     * (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * Database connection type.
     */
    databaseType: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Database Connection display name identifier.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
     */
    privateEndpoint?: pulumi.Input<inputs.DatabaseMigration.ConnectionPrivateEndpoint>;
    /**
     * (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
     */
    sshDetails?: pulumi.Input<inputs.DatabaseMigration.ConnectionSshDetails>;
    /**
     * (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
     */
    tlsKeystore?: pulumi.Input<string>;
    /**
     * (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
     */
    tlsWallet?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     */
    vaultDetails: pulumi.Input<inputs.DatabaseMigration.ConnectionVaultDetails>;
}
