// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Database Tools Connection resource in Oracle Cloud Infrastructure Database Tools service.
 *
 * Creates a new Database Tools connection.
 *
 * ## Import
 *
 * DatabaseToolsConnections can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection test_database_tools_connection "id"
 * ```
 */
export class DatabaseToolsConnection extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseToolsConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseToolsConnectionState, opts?: pulumi.CustomResourceOptions): DatabaseToolsConnection {
        return new DatabaseToolsConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection';

    /**
     * Returns true if the given object is an instance of DatabaseToolsConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseToolsConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseToolsConnection.__pulumiType;
    }

    /**
     * (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
     */
    public readonly advancedProperties!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
     */
    public readonly connectionString!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
     */
    public readonly keyStores!: pulumi.Output<outputs.DatabaseTools.DatabaseToolsConnectionKeyStore[]>;
    /**
     * A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * Locks associated with this resource.
     */
    public readonly locks!: pulumi.Output<outputs.DatabaseTools.DatabaseToolsConnectionLock[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     */
    public readonly privateEndpointId!: pulumi.Output<string>;
    /**
     * (Updatable) The proxy client information.
     */
    public readonly proxyClient!: pulumi.Output<outputs.DatabaseTools.DatabaseToolsConnectionProxyClient>;
    /**
     * (Updatable) The related resource
     */
    public readonly relatedResource!: pulumi.Output<outputs.DatabaseTools.DatabaseToolsConnectionRelatedResource>;
    /**
     * Specifies whether this connection is supported by the Database Tools Runtime.
     */
    public readonly runtimeSupport!: pulumi.Output<string>;
    /**
     * The current state of the Database Tools connection.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The time the Database Tools connection was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) The DatabaseToolsConnection type.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * (Updatable) The JDBC URL used to connect to the Generic JDBC database system.
     */
    public readonly url!: pulumi.Output<string>;
    /**
     * (Updatable) The database user name.
     */
    public readonly userName!: pulumi.Output<string>;
    /**
     * (Updatable) The user password.
     */
    public readonly userPassword!: pulumi.Output<outputs.DatabaseTools.DatabaseToolsConnectionUserPassword>;

    /**
     * Create a DatabaseToolsConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseToolsConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseToolsConnectionArgs | DatabaseToolsConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseToolsConnectionState | undefined;
            resourceInputs["advancedProperties"] = state ? state.advancedProperties : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["keyStores"] = state ? state.keyStores : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["locks"] = state ? state.locks : undefined;
            resourceInputs["privateEndpointId"] = state ? state.privateEndpointId : undefined;
            resourceInputs["proxyClient"] = state ? state.proxyClient : undefined;
            resourceInputs["relatedResource"] = state ? state.relatedResource : undefined;
            resourceInputs["runtimeSupport"] = state ? state.runtimeSupport : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
            resourceInputs["userPassword"] = state ? state.userPassword : undefined;
        } else {
            const args = argsOrState as DatabaseToolsConnectionArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            if ((!args || args.userPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userPassword'");
            }
            resourceInputs["advancedProperties"] = args ? args.advancedProperties : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["connectionString"] = args ? args.connectionString : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["keyStores"] = args ? args.keyStores : undefined;
            resourceInputs["locks"] = args ? args.locks : undefined;
            resourceInputs["privateEndpointId"] = args ? args.privateEndpointId : undefined;
            resourceInputs["proxyClient"] = args ? args.proxyClient : undefined;
            resourceInputs["relatedResource"] = args ? args.relatedResource : undefined;
            resourceInputs["runtimeSupport"] = args ? args.runtimeSupport : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["userPassword"] = args ? args.userPassword : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseToolsConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseToolsConnection resources.
 */
export interface DatabaseToolsConnectionState {
    /**
     * (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
     */
    advancedProperties?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
     */
    keyStores?: pulumi.Input<pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionKeyStore>[]>;
    /**
     * A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Locks associated with this resource.
     */
    locks?: pulumi.Input<pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionLock>[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     */
    privateEndpointId?: pulumi.Input<string>;
    /**
     * (Updatable) The proxy client information.
     */
    proxyClient?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionProxyClient>;
    /**
     * (Updatable) The related resource
     */
    relatedResource?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionRelatedResource>;
    /**
     * Specifies whether this connection is supported by the Database Tools Runtime.
     */
    runtimeSupport?: pulumi.Input<string>;
    /**
     * The current state of the Database Tools connection.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The time the Database Tools connection was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The DatabaseToolsConnection type.
     */
    type?: pulumi.Input<string>;
    /**
     * (Updatable) The JDBC URL used to connect to the Generic JDBC database system.
     */
    url?: pulumi.Input<string>;
    /**
     * (Updatable) The database user name.
     */
    userName?: pulumi.Input<string>;
    /**
     * (Updatable) The user password.
     */
    userPassword?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionUserPassword>;
}

/**
 * The set of arguments for constructing a DatabaseToolsConnection resource.
 */
export interface DatabaseToolsConnectionArgs {
    /**
     * (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
     */
    advancedProperties?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
     */
    keyStores?: pulumi.Input<pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionKeyStore>[]>;
    /**
     * Locks associated with this resource.
     */
    locks?: pulumi.Input<pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionLock>[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     */
    privateEndpointId?: pulumi.Input<string>;
    /**
     * (Updatable) The proxy client information.
     */
    proxyClient?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionProxyClient>;
    /**
     * (Updatable) The related resource
     */
    relatedResource?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionRelatedResource>;
    /**
     * Specifies whether this connection is supported by the Database Tools Runtime.
     */
    runtimeSupport?: pulumi.Input<string>;
    /**
     * (Updatable) The DatabaseToolsConnection type.
     */
    type: pulumi.Input<string>;
    /**
     * (Updatable) The JDBC URL used to connect to the Generic JDBC database system.
     */
    url?: pulumi.Input<string>;
    /**
     * (Updatable) The database user name.
     */
    userName: pulumi.Input<string>;
    /**
     * (Updatable) The user password.
     */
    userPassword: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionUserPassword>;
}
