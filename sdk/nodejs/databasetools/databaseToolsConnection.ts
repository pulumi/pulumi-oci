// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Database Tools Connection resource in Oracle Cloud Infrastructure Database Tools service.
 *
 * Creates a new Database Tools connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseToolsConnection = new oci.databasetools.DatabaseToolsConnection("testDatabaseToolsConnection", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.database_tools_connection_display_name,
 *     type: _var.database_tools_connection_type,
 *     advancedProperties: _var.database_tools_connection_advanced_properties,
 *     connectionString: _var.database_tools_connection_connection_string,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     keyStores: [{
 *         keyStoreContent: {
 *             valueType: _var.database_tools_connection_key_stores_key_store_content_value_type,
 *             secretId: oci_vault_secret.test_secret.id,
 *         },
 *         keyStorePassword: {
 *             valueType: _var.database_tools_connection_key_stores_key_store_password_value_type,
 *             secretId: oci_vault_secret.test_secret.id,
 *         },
 *         keyStoreType: _var.database_tools_connection_key_stores_key_store_type,
 *     }],
 *     privateEndpointId: oci_dataflow_private_endpoint.test_private_endpoint.id,
 *     relatedResource: {
 *         entityType: _var.database_tools_connection_related_resource_entity_type,
 *         identifier: _var.database_tools_connection_related_resource_identifier,
 *     },
 *     userName: oci_identity_user.test_user.name,
 *     userPassword: {
 *         secretId: oci_vault_secret.test_secret.id,
 *         valueType: _var.database_tools_connection_user_password_value_type,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * DatabaseToolsConnections can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection test_database_tools_connection "id"
 * ```
 */
export class DatabaseToolsConnection extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseToolsConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseToolsConnectionState, opts?: pulumi.CustomResourceOptions): DatabaseToolsConnection {
        return new DatabaseToolsConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection';

    /**
     * Returns true if the given object is an instance of DatabaseToolsConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseToolsConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseToolsConnection.__pulumiType;
    }

    /**
     * (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
     */
    public readonly advancedProperties!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
     */
    public readonly connectionString!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
     */
    public readonly keyStores!: pulumi.Output<outputs.DatabaseTools.DatabaseToolsConnectionKeyStore[]>;
    /**
     * A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     */
    public readonly privateEndpointId!: pulumi.Output<string>;
    /**
     * (Updatable) The related resource
     */
    public readonly relatedResource!: pulumi.Output<outputs.DatabaseTools.DatabaseToolsConnectionRelatedResource>;
    /**
     * The current state of the Database Tools connection.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The time the Database Tools connection was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) The DatabaseToolsConnection type.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * (Updatable) The database user name.
     */
    public readonly userName!: pulumi.Output<string>;
    /**
     * (Updatable) The user password.
     */
    public readonly userPassword!: pulumi.Output<outputs.DatabaseTools.DatabaseToolsConnectionUserPassword>;

    /**
     * Create a DatabaseToolsConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseToolsConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseToolsConnectionArgs | DatabaseToolsConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseToolsConnectionState | undefined;
            resourceInputs["advancedProperties"] = state ? state.advancedProperties : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["keyStores"] = state ? state.keyStores : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["privateEndpointId"] = state ? state.privateEndpointId : undefined;
            resourceInputs["relatedResource"] = state ? state.relatedResource : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
            resourceInputs["userPassword"] = state ? state.userPassword : undefined;
        } else {
            const args = argsOrState as DatabaseToolsConnectionArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["advancedProperties"] = args ? args.advancedProperties : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["connectionString"] = args ? args.connectionString : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["keyStores"] = args ? args.keyStores : undefined;
            resourceInputs["privateEndpointId"] = args ? args.privateEndpointId : undefined;
            resourceInputs["relatedResource"] = args ? args.relatedResource : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["userPassword"] = args ? args.userPassword : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatabaseToolsConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseToolsConnection resources.
 */
export interface DatabaseToolsConnectionState {
    /**
     * (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
     */
    advancedProperties?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
     */
    keyStores?: pulumi.Input<pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionKeyStore>[]>;
    /**
     * A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     */
    privateEndpointId?: pulumi.Input<string>;
    /**
     * (Updatable) The related resource
     */
    relatedResource?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionRelatedResource>;
    /**
     * The current state of the Database Tools connection.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The time the Database Tools connection was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The DatabaseToolsConnection type.
     */
    type?: pulumi.Input<string>;
    /**
     * (Updatable) The database user name.
     */
    userName?: pulumi.Input<string>;
    /**
     * (Updatable) The user password.
     */
    userPassword?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionUserPassword>;
}

/**
 * The set of arguments for constructing a DatabaseToolsConnection resource.
 */
export interface DatabaseToolsConnectionArgs {
    /**
     * (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
     */
    advancedProperties?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server's public certificate and the client private key and associated certificates required for client authentication.
     */
    keyStores?: pulumi.Input<pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionKeyStore>[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     */
    privateEndpointId?: pulumi.Input<string>;
    /**
     * (Updatable) The related resource
     */
    relatedResource?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionRelatedResource>;
    /**
     * (Updatable) The DatabaseToolsConnection type.
     */
    type: pulumi.Input<string>;
    /**
     * (Updatable) The database user name.
     */
    userName?: pulumi.Input<string>;
    /**
     * (Updatable) The user password.
     */
    userPassword?: pulumi.Input<inputs.DatabaseTools.DatabaseToolsConnectionUserPassword>;
}
