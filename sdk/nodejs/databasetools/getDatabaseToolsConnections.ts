// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Database Tools Connections in Oracle Cloud Infrastructure Database Tools service.
 *
 * Returns a list of DatabaseToolsConnections.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseToolsConnections = oci.DatabaseTools.getDatabaseToolsConnections({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.database_tools_connection_display_name,
 *     state: _var.database_tools_connection_state,
 *     types: _var.database_tools_connection_type,
 * });
 * ```
 */
export function getDatabaseToolsConnections(args: GetDatabaseToolsConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseToolsConnectionsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DatabaseTools/getDatabaseToolsConnections:getDatabaseToolsConnections", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "types": args.types,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseToolsConnections.
 */
export interface GetDatabaseToolsConnectionsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.DatabaseTools.GetDatabaseToolsConnectionsFilter[];
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
    /**
     * A filter to return only resources their endpointServiceId matches the given endpointServiceId.
     */
    types?: string[];
}

/**
 * A collection of values returned by getDatabaseToolsConnections.
 */
export interface GetDatabaseToolsConnectionsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the containing Compartment.
     */
    readonly compartmentId: string;
    /**
     * The list of database_tools_connection_collection.
     */
    readonly databaseToolsConnectionCollections: outputs.DatabaseTools.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollection[];
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DatabaseTools.GetDatabaseToolsConnectionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the DatabaseToolsConnection.
     */
    readonly state?: string;
    /**
     * The DatabaseToolsConnection type.
     */
    readonly types?: string[];
}

export function getDatabaseToolsConnectionsOutput(args: GetDatabaseToolsConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseToolsConnectionsResult> {
    return pulumi.output(args).apply(a => getDatabaseToolsConnections(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseToolsConnections.
 */
export interface GetDatabaseToolsConnectionsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DatabaseTools.GetDatabaseToolsConnectionsFilterArgs>[]>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only resources their endpointServiceId matches the given endpointServiceId.
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
}
