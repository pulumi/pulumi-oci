// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Database Tools Private Endpoints in Oracle Cloud Infrastructure Database Tools service.
 *
 * Returns a list of DatabaseToolsPrivateEndpoints.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseToolsPrivateEndpoints = oci.DatabaseTools.getDatabaseToolsPrivateEndpoints({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.database_tools_private_endpoint_display_name,
 *     endpointServiceId: oci_core_service.test_service.id,
 *     state: _var.database_tools_private_endpoint_state,
 *     subnetId: oci_core_subnet.test_subnet.id,
 * });
 * ```
 */
export function getDatabaseToolsPrivateEndpoints(args: GetDatabaseToolsPrivateEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseToolsPrivateEndpointsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DatabaseTools/getDatabaseToolsPrivateEndpoints:getDatabaseToolsPrivateEndpoints", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "endpointServiceId": args.endpointServiceId,
        "filters": args.filters,
        "state": args.state,
        "subnetId": args.subnetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseToolsPrivateEndpoints.
 */
export interface GetDatabaseToolsPrivateEndpointsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    /**
     * A filter to return only resources their type matches the given type.
     */
    endpointServiceId?: string;
    filters?: inputs.DatabaseTools.GetDatabaseToolsPrivateEndpointsFilter[];
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
    /**
     * A filter to return only resources their subnetId matches the given subnetId.
     */
    subnetId?: string;
}

/**
 * A collection of values returned by getDatabaseToolsPrivateEndpoints.
 */
export interface GetDatabaseToolsPrivateEndpointsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the containing Compartment.
     */
    readonly compartmentId: string;
    /**
     * The list of database_tools_private_endpoint_collection.
     */
    readonly databaseToolsPrivateEndpointCollections: outputs.DatabaseTools.GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollection[];
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DatabaseToolsEndpointService.
     */
    readonly endpointServiceId?: string;
    readonly filters?: outputs.DatabaseTools.GetDatabaseToolsPrivateEndpointsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the DatabaseToolsPrivateEndpoint.
     */
    readonly state?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet that the private endpoint belongs to.
     */
    readonly subnetId?: string;
}

export function getDatabaseToolsPrivateEndpointsOutput(args: GetDatabaseToolsPrivateEndpointsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseToolsPrivateEndpointsResult> {
    return pulumi.output(args).apply(a => getDatabaseToolsPrivateEndpoints(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseToolsPrivateEndpoints.
 */
export interface GetDatabaseToolsPrivateEndpointsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A filter to return only resources their type matches the given type.
     */
    endpointServiceId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DatabaseTools.GetDatabaseToolsPrivateEndpointsFilterArgs>[]>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only resources their subnetId matches the given subnetId.
     */
    subnetId?: pulumi.Input<string>;
}
