// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Connections in Oracle Cloud Infrastructure Data Catalog service.
 *
 * Returns a list of all Connections for a data asset.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConnections = oci.DataCatalog.getConnections({
 *     catalogId: testCatalog.id,
 *     dataAssetKey: connectionDataAssetKey,
 *     createdById: testCreatedBy.id,
 *     displayName: connectionDisplayName,
 *     displayNameContains: connectionDisplayNameContains,
 *     externalKey: connectionExternalKey,
 *     fields: connectionFields,
 *     isDefault: connectionIsDefault,
 *     state: connectionState,
 *     timeCreated: connectionTimeCreated,
 *     timeStatusUpdated: connectionTimeStatusUpdated,
 *     timeUpdated: connectionTimeUpdated,
 *     updatedById: testUpdatedBy.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getConnections(args: GetConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataCatalog/getConnections:getConnections", {
        "catalogId": args.catalogId,
        "createdById": args.createdById,
        "dataAssetKey": args.dataAssetKey,
        "displayName": args.displayName,
        "displayNameContains": args.displayNameContains,
        "externalKey": args.externalKey,
        "fields": args.fields,
        "filters": args.filters,
        "isDefault": args.isDefault,
        "state": args.state,
        "timeCreated": args.timeCreated,
        "timeStatusUpdated": args.timeStatusUpdated,
        "timeUpdated": args.timeUpdated,
        "updatedById": args.updatedById,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsArgs {
    /**
     * Unique catalog identifier.
     */
    catalogId: string;
    /**
     * OCID of the user who created the resource.
     */
    createdById?: string;
    /**
     * Unique data asset key.
     */
    dataAssetKey: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: string;
    /**
     * A filter to return only resources that match display name pattern given. The match is not case sensitive. For Example : /folders?displayNameContains=Cu.* The above would match all folders with display name that starts with "Cu" or has the pattern "Cu" anywhere in between.
     */
    displayNameContains?: string;
    /**
     * Unique external identifier of this resource in the external source system.
     */
    externalKey?: string;
    /**
     * Specifies the fields to return in a connection summary response.
     */
    fields?: string[];
    filters?: inputs.DataCatalog.GetConnectionsFilter[];
    /**
     * Indicates whether this connection is the default connection.
     */
    isDefault?: boolean;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state?: string;
    /**
     * Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeCreated?: string;
    /**
     * Time that the resource's status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeStatusUpdated?: string;
    /**
     * Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeUpdated?: string;
    /**
     * OCID of the user who updated the resource.
     */
    updatedById?: string;
}

/**
 * A collection of values returned by getConnections.
 */
export interface GetConnectionsResult {
    readonly catalogId: string;
    /**
     * The list of connection_collection.
     */
    readonly connectionCollections: outputs.DataCatalog.GetConnectionsConnectionCollection[];
    /**
     * OCID of the user who created the connection.
     */
    readonly createdById?: string;
    /**
     * Unique key of the parent data asset.
     */
    readonly dataAssetKey: string;
    /**
     * A user-friendly display name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly displayNameContains?: string;
    /**
     * Unique external key of this object from the source system.
     */
    readonly externalKey?: string;
    readonly fields?: string[];
    readonly filters?: outputs.DataCatalog.GetConnectionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates whether this connection is the default connection.
     */
    readonly isDefault?: boolean;
    /**
     * The current state of the connection.
     */
    readonly state?: string;
    /**
     * The date and time the connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2019-03-25T21:10:29.600Z`
     */
    readonly timeCreated?: string;
    /**
     * Time that the connections status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    readonly timeStatusUpdated?: string;
    /**
     * The last time that any change was made to the connection. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    readonly timeUpdated?: string;
    /**
     * OCID of the user who modified the connection.
     */
    readonly updatedById?: string;
}
/**
 * This data source provides the list of Connections in Oracle Cloud Infrastructure Data Catalog service.
 *
 * Returns a list of all Connections for a data asset.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConnections = oci.DataCatalog.getConnections({
 *     catalogId: testCatalog.id,
 *     dataAssetKey: connectionDataAssetKey,
 *     createdById: testCreatedBy.id,
 *     displayName: connectionDisplayName,
 *     displayNameContains: connectionDisplayNameContains,
 *     externalKey: connectionExternalKey,
 *     fields: connectionFields,
 *     isDefault: connectionIsDefault,
 *     state: connectionState,
 *     timeCreated: connectionTimeCreated,
 *     timeStatusUpdated: connectionTimeStatusUpdated,
 *     timeUpdated: connectionTimeUpdated,
 *     updatedById: testUpdatedBy.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getConnectionsOutput(args: GetConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectionsResult> {
    return pulumi.output(args).apply((a: any) => getConnections(a, opts))
}

/**
 * A collection of arguments for invoking getConnections.
 */
export interface GetConnectionsOutputArgs {
    /**
     * Unique catalog identifier.
     */
    catalogId: pulumi.Input<string>;
    /**
     * OCID of the user who created the resource.
     */
    createdById?: pulumi.Input<string>;
    /**
     * Unique data asset key.
     */
    dataAssetKey: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match display name pattern given. The match is not case sensitive. For Example : /folders?displayNameContains=Cu.* The above would match all folders with display name that starts with "Cu" or has the pattern "Cu" anywhere in between.
     */
    displayNameContains?: pulumi.Input<string>;
    /**
     * Unique external identifier of this resource in the external source system.
     */
    externalKey?: pulumi.Input<string>;
    /**
     * Specifies the fields to return in a connection summary response.
     */
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataCatalog.GetConnectionsFilterArgs>[]>;
    /**
     * Indicates whether this connection is the default connection.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state?: pulumi.Input<string>;
    /**
     * Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Time that the resource's status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeStatusUpdated?: pulumi.Input<string>;
    /**
     * Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * OCID of the user who updated the resource.
     */
    updatedById?: pulumi.Input<string>;
}
