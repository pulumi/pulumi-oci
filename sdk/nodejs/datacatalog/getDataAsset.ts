// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Data Asset resource in Oracle Cloud Infrastructure Data Catalog service.
 *
 * Gets a specific data asset for the given key within a data catalog.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDataAsset = oci.DataCatalog.getDataAsset({
 *     catalogId: oci_datacatalog_catalog.test_catalog.id,
 *     dataAssetKey: _var.data_asset_data_asset_key,
 *     fields: _var.data_asset_fields,
 * });
 * ```
 */
export function getDataAsset(args: GetDataAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetDataAssetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataCatalog/getDataAsset:getDataAsset", {
        "catalogId": args.catalogId,
        "dataAssetKey": args.dataAssetKey,
        "fields": args.fields,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataAsset.
 */
export interface GetDataAssetArgs {
    /**
     * Unique catalog identifier.
     */
    catalogId: string;
    /**
     * Unique data asset key.
     */
    dataAssetKey: string;
    /**
     * Specifies the fields to return in a data asset response.
     */
    fields?: string[];
}

/**
 * A collection of values returned by getDataAsset.
 */
export interface GetDataAssetResult {
    /**
     * The data catalog's OCID.
     */
    readonly catalogId: string;
    /**
     * OCID of the user who created the data asset.
     */
    readonly createdById: string;
    readonly dataAssetKey: string;
    /**
     * Detailed description of the data asset.
     */
    readonly description: string;
    /**
     * A user-friendly display name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * External URI that can be used to reference the object. Format will differ based on the type of object.
     */
    readonly externalKey: string;
    readonly fields?: string[];
    readonly id: string;
    /**
     * Unique data asset key that is immutable.
     */
    readonly key: string;
    /**
     * A map of maps that contains the properties which are specific to the asset type. Each data asset type definition defines it's set of required and optional properties. The map keys are category names and the values are maps of property name to property value. Every property is contained inside of a category. Most data assets have required properties within the "default" category. Example: `{"properties": { "default": { "host": "host1", "port": "1521", "database": "orcl"}}}`
     */
    readonly properties: {[key: string]: any};
    /**
     * The current state of the data asset.
     */
    readonly state: string;
    /**
     * The date and time the data asset was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2019-03-25T21:10:29.600Z`
     */
    readonly timeCreated: string;
    /**
     * The last time that a harvest was performed on the data asset. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    readonly timeHarvested: string;
    /**
     * The last time that any change was made to the data asset. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    readonly timeUpdated: string;
    /**
     * The key of the object type. Type key's can be found via the '/types' endpoint.
     */
    readonly typeKey: string;
    /**
     * OCID of the user who last modified the data asset.
     */
    readonly updatedById: string;
    /**
     * URI to the data asset instance in the API.
     */
    readonly uri: string;
}
/**
 * This data source provides details about a specific Data Asset resource in Oracle Cloud Infrastructure Data Catalog service.
 *
 * Gets a specific data asset for the given key within a data catalog.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDataAsset = oci.DataCatalog.getDataAsset({
 *     catalogId: oci_datacatalog_catalog.test_catalog.id,
 *     dataAssetKey: _var.data_asset_data_asset_key,
 *     fields: _var.data_asset_fields,
 * });
 * ```
 */
export function getDataAssetOutput(args: GetDataAssetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataAssetResult> {
    return pulumi.output(args).apply((a: any) => getDataAsset(a, opts))
}

/**
 * A collection of arguments for invoking getDataAsset.
 */
export interface GetDataAssetOutputArgs {
    /**
     * Unique catalog identifier.
     */
    catalogId: pulumi.Input<string>;
    /**
     * Unique data asset key.
     */
    dataAssetKey: pulumi.Input<string>;
    /**
     * Specifies the fields to return in a data asset response.
     */
    fields?: pulumi.Input<pulumi.Input<string>[]>;
}
