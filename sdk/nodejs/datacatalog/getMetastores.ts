// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Metastores in Oracle Cloud Infrastructure Data Catalog service.
 *
 * Returns a list of all metastores in the specified compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMetastores = oci.DataCatalog.getMetastores({
 *     compartmentId: compartmentId,
 *     displayName: metastoreDisplayName,
 *     state: metastoreState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMetastores(args: GetMetastoresArgs, opts?: pulumi.InvokeOptions): Promise<GetMetastoresResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataCatalog/getMetastores:getMetastores", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetastores.
 */
export interface GetMetastoresArgs {
    /**
     * The OCID of the compartment where you want to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: string;
    filters?: inputs.DataCatalog.GetMetastoresFilter[];
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getMetastores.
 */
export interface GetMetastoresResult {
    /**
     * OCID of the compartment which holds the metastore.
     */
    readonly compartmentId: string;
    /**
     * Mutable name of the metastore.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataCatalog.GetMetastoresFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of metastores.
     */
    readonly metastores: outputs.DataCatalog.GetMetastoresMetastore[];
    /**
     * The current state of the metastore.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Metastores in Oracle Cloud Infrastructure Data Catalog service.
 *
 * Returns a list of all metastores in the specified compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMetastores = oci.DataCatalog.getMetastores({
 *     compartmentId: compartmentId,
 *     displayName: metastoreDisplayName,
 *     state: metastoreState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMetastoresOutput(args: GetMetastoresOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetastoresResult> {
    return pulumi.output(args).apply((a: any) => getMetastores(a, opts))
}

/**
 * A collection of arguments for invoking getMetastores.
 */
export interface GetMetastoresOutputArgs {
    /**
     * The OCID of the compartment where you want to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataCatalog.GetMetastoresFilterArgs>[]>;
    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     */
    state?: pulumi.Input<string>;
}
