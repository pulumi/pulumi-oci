// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CatalogArgs, CatalogState } from "./catalog";
export type Catalog = import("./catalog").Catalog;
export const Catalog: typeof import("./catalog").Catalog = null as any;
utilities.lazyLoad(exports, ["Catalog"], () => require("./catalog"));

export { CatalogPrivateEndpointArgs, CatalogPrivateEndpointState } from "./catalogPrivateEndpoint";
export type CatalogPrivateEndpoint = import("./catalogPrivateEndpoint").CatalogPrivateEndpoint;
export const CatalogPrivateEndpoint: typeof import("./catalogPrivateEndpoint").CatalogPrivateEndpoint = null as any;
utilities.lazyLoad(exports, ["CatalogPrivateEndpoint"], () => require("./catalogPrivateEndpoint"));

export { ConnectionArgs, ConnectionState } from "./connection";
export type Connection = import("./connection").Connection;
export const Connection: typeof import("./connection").Connection = null as any;
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));

export { DataAssetArgs, DataAssetState } from "./dataAsset";
export type DataAsset = import("./dataAsset").DataAsset;
export const DataAsset: typeof import("./dataAsset").DataAsset = null as any;
utilities.lazyLoad(exports, ["DataAsset"], () => require("./dataAsset"));

export { GetCatalogArgs, GetCatalogResult, GetCatalogOutputArgs } from "./getCatalog";
export const getCatalog: typeof import("./getCatalog").getCatalog = null as any;
export const getCatalogOutput: typeof import("./getCatalog").getCatalogOutput = null as any;
utilities.lazyLoad(exports, ["getCatalog","getCatalogOutput"], () => require("./getCatalog"));

export { GetCatalogPrivateEndpointArgs, GetCatalogPrivateEndpointResult, GetCatalogPrivateEndpointOutputArgs } from "./getCatalogPrivateEndpoint";
export const getCatalogPrivateEndpoint: typeof import("./getCatalogPrivateEndpoint").getCatalogPrivateEndpoint = null as any;
export const getCatalogPrivateEndpointOutput: typeof import("./getCatalogPrivateEndpoint").getCatalogPrivateEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getCatalogPrivateEndpoint","getCatalogPrivateEndpointOutput"], () => require("./getCatalogPrivateEndpoint"));

export { GetCatalogPrivateEndpointsArgs, GetCatalogPrivateEndpointsResult, GetCatalogPrivateEndpointsOutputArgs } from "./getCatalogPrivateEndpoints";
export const getCatalogPrivateEndpoints: typeof import("./getCatalogPrivateEndpoints").getCatalogPrivateEndpoints = null as any;
export const getCatalogPrivateEndpointsOutput: typeof import("./getCatalogPrivateEndpoints").getCatalogPrivateEndpointsOutput = null as any;
utilities.lazyLoad(exports, ["getCatalogPrivateEndpoints","getCatalogPrivateEndpointsOutput"], () => require("./getCatalogPrivateEndpoints"));

export { GetCatalogTypeArgs, GetCatalogTypeResult, GetCatalogTypeOutputArgs } from "./getCatalogType";
export const getCatalogType: typeof import("./getCatalogType").getCatalogType = null as any;
export const getCatalogTypeOutput: typeof import("./getCatalogType").getCatalogTypeOutput = null as any;
utilities.lazyLoad(exports, ["getCatalogType","getCatalogTypeOutput"], () => require("./getCatalogType"));

export { GetCatalogTypesArgs, GetCatalogTypesResult, GetCatalogTypesOutputArgs } from "./getCatalogTypes";
export const getCatalogTypes: typeof import("./getCatalogTypes").getCatalogTypes = null as any;
export const getCatalogTypesOutput: typeof import("./getCatalogTypes").getCatalogTypesOutput = null as any;
utilities.lazyLoad(exports, ["getCatalogTypes","getCatalogTypesOutput"], () => require("./getCatalogTypes"));

export { GetCatalogsArgs, GetCatalogsResult, GetCatalogsOutputArgs } from "./getCatalogs";
export const getCatalogs: typeof import("./getCatalogs").getCatalogs = null as any;
export const getCatalogsOutput: typeof import("./getCatalogs").getCatalogsOutput = null as any;
utilities.lazyLoad(exports, ["getCatalogs","getCatalogsOutput"], () => require("./getCatalogs"));

export { GetConnectionArgs, GetConnectionResult, GetConnectionOutputArgs } from "./getConnection";
export const getConnection: typeof import("./getConnection").getConnection = null as any;
export const getConnectionOutput: typeof import("./getConnection").getConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getConnection","getConnectionOutput"], () => require("./getConnection"));

export { GetConnectionsArgs, GetConnectionsResult, GetConnectionsOutputArgs } from "./getConnections";
export const getConnections: typeof import("./getConnections").getConnections = null as any;
export const getConnectionsOutput: typeof import("./getConnections").getConnectionsOutput = null as any;
utilities.lazyLoad(exports, ["getConnections","getConnectionsOutput"], () => require("./getConnections"));

export { GetDataAssetArgs, GetDataAssetResult, GetDataAssetOutputArgs } from "./getDataAsset";
export const getDataAsset: typeof import("./getDataAsset").getDataAsset = null as any;
export const getDataAssetOutput: typeof import("./getDataAsset").getDataAssetOutput = null as any;
utilities.lazyLoad(exports, ["getDataAsset","getDataAssetOutput"], () => require("./getDataAsset"));

export { GetDataAssetsArgs, GetDataAssetsResult, GetDataAssetsOutputArgs } from "./getDataAssets";
export const getDataAssets: typeof import("./getDataAssets").getDataAssets = null as any;
export const getDataAssetsOutput: typeof import("./getDataAssets").getDataAssetsOutput = null as any;
utilities.lazyLoad(exports, ["getDataAssets","getDataAssetsOutput"], () => require("./getDataAssets"));

export { GetMetastoreArgs, GetMetastoreResult, GetMetastoreOutputArgs } from "./getMetastore";
export const getMetastore: typeof import("./getMetastore").getMetastore = null as any;
export const getMetastoreOutput: typeof import("./getMetastore").getMetastoreOutput = null as any;
utilities.lazyLoad(exports, ["getMetastore","getMetastoreOutput"], () => require("./getMetastore"));

export { GetMetastoresArgs, GetMetastoresResult, GetMetastoresOutputArgs } from "./getMetastores";
export const getMetastores: typeof import("./getMetastores").getMetastores = null as any;
export const getMetastoresOutput: typeof import("./getMetastores").getMetastoresOutput = null as any;
utilities.lazyLoad(exports, ["getMetastores","getMetastoresOutput"], () => require("./getMetastores"));

export { MetastoreArgs, MetastoreState } from "./metastore";
export type Metastore = import("./metastore").Metastore;
export const Metastore: typeof import("./metastore").Metastore = null as any;
utilities.lazyLoad(exports, ["Metastore"], () => require("./metastore"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:DataCatalog/catalog:Catalog":
                return new Catalog(name, <any>undefined, { urn })
            case "oci:DataCatalog/catalogPrivateEndpoint:CatalogPrivateEndpoint":
                return new CatalogPrivateEndpoint(name, <any>undefined, { urn })
            case "oci:DataCatalog/connection:Connection":
                return new Connection(name, <any>undefined, { urn })
            case "oci:DataCatalog/dataAsset:DataAsset":
                return new DataAsset(name, <any>undefined, { urn })
            case "oci:DataCatalog/metastore:Metastore":
                return new Metastore(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "DataCatalog/catalog", _module)
pulumi.runtime.registerResourceModule("oci", "DataCatalog/catalogPrivateEndpoint", _module)
pulumi.runtime.registerResourceModule("oci", "DataCatalog/connection", _module)
pulumi.runtime.registerResourceModule("oci", "DataCatalog/dataAsset", _module)
pulumi.runtime.registerResourceModule("oci", "DataCatalog/metastore", _module)
