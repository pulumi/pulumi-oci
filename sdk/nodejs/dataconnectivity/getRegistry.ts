// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Registry resource in Oracle Cloud Infrastructure Data Connectivity service.
 *
 * Retrieves a Data Connectivity Management registry using the specified identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRegistry = oci.DataConnectivity.getRegistry({
 *     registryId: oci_data_connectivity_registry.test_registry.id,
 * });
 * ```
 */
export function getRegistry(args: GetRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataConnectivity/getRegistry:getRegistry", {
        "registryId": args.registryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegistry.
 */
export interface GetRegistryArgs {
    /**
     * The registry OCID.
     */
    registryId: string;
}

/**
 * A collection of values returned by getRegistry.
 */
export interface GetRegistryResult {
    /**
     * Compartment Identifier
     */
    readonly compartmentId: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * Registry description
     */
    readonly description: string;
    /**
     * Data Connectivity Management registry display name; registries can be renamed.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope. Exists only for cross-compatibility. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * A unique identifier that is immutable on creation.
     */
    readonly id: string;
    readonly registryId: string;
    /**
     * Lifecycle states for registries in the Data Connectivity Management Service CREATING - The resource is being created and may not be usable until the entire metadata is defined. UPDATING - The resource is being updated and may not be usable until all changes are commited. DELETING - The resource is being deleted and might require deep cleanup of children. ACTIVE   - The resource is valid and available for access. INACTIVE - The resource might be incomplete in its definition or might have been made unavailable for administrative reasons. DELETED  - The resource has been deleted and isn't available. FAILED   - The resource is in a failed state due to validation or other errors.
     */
    readonly state: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly stateMessage: string;
    /**
     * Time when the Data Connectivity Management registry was created. An RFC3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * Time when the Data Connectivity Management registry was updated. An RFC3339 formatted datetime string.
     */
    readonly timeUpdated: string;
    /**
     * Name of the user who updated the DCMS registry.
     */
    readonly updatedBy: string;
}
/**
 * This data source provides details about a specific Registry resource in Oracle Cloud Infrastructure Data Connectivity service.
 *
 * Retrieves a Data Connectivity Management registry using the specified identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRegistry = oci.DataConnectivity.getRegistry({
 *     registryId: oci_data_connectivity_registry.test_registry.id,
 * });
 * ```
 */
export function getRegistryOutput(args: GetRegistryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistryResult> {
    return pulumi.output(args).apply((a: any) => getRegistry(a, opts))
}

/**
 * A collection of arguments for invoking getRegistry.
 */
export interface GetRegistryOutputArgs {
    /**
     * The registry OCID.
     */
    registryId: pulumi.Input<string>;
}
