// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Registry Connections in Oracle Cloud Infrastructure Data Connectivity service.
 *
 * Retrieves a list of all connections.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRegistryConnections = oci.DataConnectivity.getRegistryConnections({
 *     dataAssetKey: _var.registry_connection_data_asset_key,
 *     registryId: oci_data_connectivity_registry.test_registry.id,
 *     favoritesQueryParam: _var.registry_connection_favorites_query_param,
 *     fields: _var.registry_connection_fields,
 *     name: _var.registry_connection_name,
 *     type: _var.registry_connection_type,
 * });
 * ```
 */
export function getRegistryConnections(args: GetRegistryConnectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryConnectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataConnectivity/getRegistryConnections:getRegistryConnections", {
        "dataAssetKey": args.dataAssetKey,
        "favoritesQueryParam": args.favoritesQueryParam,
        "fields": args.fields,
        "filters": args.filters,
        "name": args.name,
        "registryId": args.registryId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegistryConnections.
 */
export interface GetRegistryConnectionsArgs {
    /**
     * Used to filter by the data asset key of the object.
     */
    dataAssetKey: string;
    /**
     * If value is FAVORITES_ONLY, then only objects marked as favorite by the requesting user will be included in result. If value is NON_FAVORITES_ONLY, then objects marked as favorites by the requesting user will be skipped. If value is ALL or if not specified, all objects, irrespective of favorites or not will be returned. Default is ALL.
     */
    favoritesQueryParam?: string;
    /**
     * Specifies the fields to get for an object.
     */
    fields?: string[];
    filters?: inputs.DataConnectivity.GetRegistryConnectionsFilter[];
    /**
     * Used to filter by the name of the object.
     */
    name?: string;
    /**
     * The registry OCID.
     */
    registryId: string;
    /**
     * Type of the object to filter the results with.
     */
    type?: string;
}

/**
 * A collection of values returned by getRegistryConnections.
 */
export interface GetRegistryConnectionsResult {
    /**
     * The list of connection_summary_collection.
     */
    readonly connectionSummaryCollections: outputs.DataConnectivity.GetRegistryConnectionsConnectionSummaryCollection[];
    readonly dataAssetKey: string;
    readonly favoritesQueryParam?: string;
    readonly fields?: string[];
    readonly filters?: outputs.DataConnectivity.GetRegistryConnectionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    readonly name?: string;
    readonly registryId: string;
    /**
     * Specific Connection Type
     */
    readonly type?: string;
}
/**
 * This data source provides the list of Registry Connections in Oracle Cloud Infrastructure Data Connectivity service.
 *
 * Retrieves a list of all connections.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRegistryConnections = oci.DataConnectivity.getRegistryConnections({
 *     dataAssetKey: _var.registry_connection_data_asset_key,
 *     registryId: oci_data_connectivity_registry.test_registry.id,
 *     favoritesQueryParam: _var.registry_connection_favorites_query_param,
 *     fields: _var.registry_connection_fields,
 *     name: _var.registry_connection_name,
 *     type: _var.registry_connection_type,
 * });
 * ```
 */
export function getRegistryConnectionsOutput(args: GetRegistryConnectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistryConnectionsResult> {
    return pulumi.output(args).apply((a: any) => getRegistryConnections(a, opts))
}

/**
 * A collection of arguments for invoking getRegistryConnections.
 */
export interface GetRegistryConnectionsOutputArgs {
    /**
     * Used to filter by the data asset key of the object.
     */
    dataAssetKey: pulumi.Input<string>;
    /**
     * If value is FAVORITES_ONLY, then only objects marked as favorite by the requesting user will be included in result. If value is NON_FAVORITES_ONLY, then objects marked as favorites by the requesting user will be skipped. If value is ALL or if not specified, all objects, irrespective of favorites or not will be returned. Default is ALL.
     */
    favoritesQueryParam?: pulumi.Input<string>;
    /**
     * Specifies the fields to get for an object.
     */
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataConnectivity.GetRegistryConnectionsFilterArgs>[]>;
    /**
     * Used to filter by the name of the object.
     */
    name?: pulumi.Input<string>;
    /**
     * The registry OCID.
     */
    registryId: pulumi.Input<string>;
    /**
     * Type of the object to filter the results with.
     */
    type?: pulumi.Input<string>;
}
