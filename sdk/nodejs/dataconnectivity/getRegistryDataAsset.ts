// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Registry Data Asset resource in Oracle Cloud Infrastructure Data Connectivity service.
 *
 * Retrieves details of a data asset using the specified identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRegistryDataAsset = oci.DataConnectivity.getRegistryDataAsset({
 *     dataAssetKey: _var.registry_data_asset_data_asset_key,
 *     registryId: oci_data_connectivity_registry.test_registry.id,
 * });
 * ```
 */
export function getRegistryDataAsset(args: GetRegistryDataAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryDataAssetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DataConnectivity/getRegistryDataAsset:getRegistryDataAsset", {
        "dataAssetKey": args.dataAssetKey,
        "registryId": args.registryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegistryDataAsset.
 */
export interface GetRegistryDataAssetArgs {
    /**
     * The data asset key.
     */
    dataAssetKey: string;
    /**
     * The registry OCID.
     */
    registryId: string;
}

/**
 * A collection of values returned by getRegistryDataAsset.
 */
export interface GetRegistryDataAssetResult {
    /**
     * Additional properties for the data asset.
     */
    readonly assetProperties: {[key: string]: any};
    readonly dataAssetKey: string;
    /**
     * The default connection key.
     */
    readonly defaultConnections: outputs.DataConnectivity.GetRegistryDataAssetDefaultConnection[];
    /**
     * A user-defined description for the object.
     */
    readonly description: string;
    /**
     * The list of endpoints with which this data asset is associated.
     */
    readonly endPoints: string[];
    /**
     * The external key of the object.
     */
    readonly externalKey: string;
    readonly id: string;
    /**
     * Value can only contain upper case letters, underscore, and numbers. It should begin with an upper case letter or underscore. The value can be modified.
     */
    readonly identifier: string;
    /**
     * The identifying key for the object.
     */
    readonly key: string;
    /**
     * A summary type containing information about the object including its key, name, the time that it was created or updated, and the user who created or updated it.
     */
    readonly metadatas: outputs.DataConnectivity.GetRegistryDataAssetMetadata[];
    /**
     * The property which differentiates the subtypes.
     */
    readonly modelType: string;
    /**
     * The model version of an object.
     */
    readonly modelVersion: string;
    /**
     * Free form text without any restriction on the permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    readonly name: string;
    /**
     * The type system maps from and to a type.
     */
    readonly nativeTypeSystems: outputs.DataConnectivity.GetRegistryDataAssetNativeTypeSystem[];
    /**
     * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     */
    readonly objectStatus: number;
    /**
     * The version of the object that is used to track changes in the object instance.
     */
    readonly objectVersion: number;
    /**
     * All the properties for the data asset in a key-value map format.
     */
    readonly properties: {[key: string]: any};
    readonly registryId: string;
    /**
     * Information about the object and its parent.
     */
    readonly registryMetadatas: outputs.DataConnectivity.GetRegistryDataAssetRegistryMetadata[];
    /**
     * Specific DataAsset Type
     */
    readonly type: string;
}

export function getRegistryDataAssetOutput(args: GetRegistryDataAssetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistryDataAssetResult> {
    return pulumi.output(args).apply(a => getRegistryDataAsset(a, opts))
}

/**
 * A collection of arguments for invoking getRegistryDataAsset.
 */
export interface GetRegistryDataAssetOutputArgs {
    /**
     * The data asset key.
     */
    dataAssetKey: pulumi.Input<string>;
    /**
     * The registry OCID.
     */
    registryId: pulumi.Input<string>;
}
