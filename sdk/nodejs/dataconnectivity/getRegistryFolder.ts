// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Registry Folder resource in Oracle Cloud Infrastructure Data Connectivity service.
 *
 * Retrieves the folder details using the specified identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRegistryFolder = oci.DataConnectivity.getRegistryFolder({
 *     folderKey: _var.registry_folder_folder_key,
 *     registryId: oci_data_connectivity_registry.test_registry.id,
 * });
 * ```
 */
export function getRegistryFolder(args: GetRegistryFolderArgs, opts?: pulumi.InvokeOptions): Promise<GetRegistryFolderResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DataConnectivity/getRegistryFolder:getRegistryFolder", {
        "folderKey": args.folderKey,
        "registryId": args.registryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegistryFolder.
 */
export interface GetRegistryFolderArgs {
    /**
     * The folder ID.
     */
    folderKey: string;
    /**
     * The registry Ocid.
     */
    registryId: string;
}

/**
 * A collection of values returned by getRegistryFolder.
 */
export interface GetRegistryFolderResult {
    /**
     * List of data assets which belongs to this folder
     */
    readonly dataAssets: outputs.DataConnectivity.GetRegistryFolderDataAsset[];
    /**
     * User-defined description for the folder.
     */
    readonly description: string;
    readonly folderKey: string;
    readonly id: string;
    /**
     * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     */
    readonly identifier: string;
    /**
     * Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
     */
    readonly key: string;
    /**
     * The type of the folder.
     */
    readonly modelType: string;
    /**
     * The model version of an object.
     */
    readonly modelVersion: string;
    /**
     * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    readonly name: string;
    /**
     * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     */
    readonly objectStatus: number;
    /**
     * The version of the object that is used to track changes in the object instance.
     */
    readonly objectVersion: number;
    /**
     * A reference to the object's parent.
     */
    readonly parentReves: outputs.DataConnectivity.GetRegistryFolderParentRef[];
    readonly registryId: string;
}

export function getRegistryFolderOutput(args: GetRegistryFolderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRegistryFolderResult> {
    return pulumi.output(args).apply(a => getRegistryFolder(a, opts))
}

/**
 * A collection of arguments for invoking getRegistryFolder.
 */
export interface GetRegistryFolderOutputArgs {
    /**
     * The folder ID.
     */
    folderKey: pulumi.Input<string>;
    /**
     * The registry Ocid.
     */
    registryId: pulumi.Input<string>;
}
