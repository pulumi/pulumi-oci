// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Workspace Application resource in Oracle Cloud Infrastructure Data Integration service.
 *
 * Retrieves an application using the specified identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceApplication = oci.DataIntegration.getWorkspaceApplication({
 *     applicationKey: workspaceApplicationApplicationKey,
 *     workspaceId: testWorkspace.id,
 * });
 * ```
 */
export function getWorkspaceApplication(args: GetWorkspaceApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataIntegration/getWorkspaceApplication:getWorkspaceApplication", {
        "applicationKey": args.applicationKey,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspaceApplication.
 */
export interface GetWorkspaceApplicationArgs {
    /**
     * The application key.
     */
    applicationKey: string;
    /**
     * The workspace ID.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getWorkspaceApplication.
 */
export interface GetWorkspaceApplicationResult {
    /**
     * The source application key to use when creating the application.
     */
    readonly applicationKey: string;
    /**
     * The source application version of the application.
     */
    readonly applicationVersion: number;
    /**
     * OCID of the compartment that this resource belongs to. Defaults to compartment of the Workspace.
     */
    readonly compartmentId: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * A list of dependent objects in this patch.
     */
    readonly dependentObjectMetadatas: outputs.DataIntegration.GetWorkspaceApplicationDependentObjectMetadata[];
    /**
     * The description of the aggregator.
     */
    readonly description: string;
    /**
     * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * OCID of the resource that is used to uniquely identify the application
     */
    readonly id: string;
    /**
     * Value can only contain upper case letters, underscore and numbers. It should begin with upper case letter or underscore. The value can be modified.
     */
    readonly identifier: string;
    /**
     * The key of the object.
     */
    readonly key: string;
    /**
     * A key map. If provided, key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     */
    readonly keyMap: {[key: string]: string};
    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     */
    readonly metadatas: outputs.DataIntegration.GetWorkspaceApplicationMetadata[];
    /**
     * The object type.
     */
    readonly modelType: string;
    /**
     * The object's model version.
     */
    readonly modelVersion: string;
    /**
     * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    readonly name: string;
    /**
     * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     */
    readonly objectStatus: number;
    /**
     * The object version.
     */
    readonly objectVersion: number;
    /**
     * A reference to the object's parent.
     */
    readonly parentReves: outputs.DataIntegration.GetWorkspaceApplicationParentRef[];
    /**
     * A list of objects that are published or unpublished in this patch.
     */
    readonly publishedObjectMetadatas: outputs.DataIntegration.GetWorkspaceApplicationPublishedObjectMetadata[];
    readonly registryMetadatas: outputs.DataIntegration.GetWorkspaceApplicationRegistryMetadata[];
    /**
     * The information about the application.
     */
    readonly sourceApplicationInfos: outputs.DataIntegration.GetWorkspaceApplicationSourceApplicationInfo[];
    /**
     * The current state of the workspace.
     */
    readonly state: string;
    /**
     * The date and time the application was created, in the timestamp format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the application was patched, in the timestamp format defined by RFC3339.
     */
    readonly timePatched: string;
    /**
     * The date and time the application was updated, in the timestamp format defined by RFC3339. example: 2019-08-25T21:10:29.41Z
     */
    readonly timeUpdated: string;
    /**
     * The OCID of the workspace containing the application. This allows cross workspace deployment to publish an application from a different workspace into the current workspace specified in this operation.
     */
    readonly workspaceId: string;
}
/**
 * This data source provides details about a specific Workspace Application resource in Oracle Cloud Infrastructure Data Integration service.
 *
 * Retrieves an application using the specified identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceApplication = oci.DataIntegration.getWorkspaceApplication({
 *     applicationKey: workspaceApplicationApplicationKey,
 *     workspaceId: testWorkspace.id,
 * });
 * ```
 */
export function getWorkspaceApplicationOutput(args: GetWorkspaceApplicationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceApplicationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataIntegration/getWorkspaceApplication:getWorkspaceApplication", {
        "applicationKey": args.applicationKey,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspaceApplication.
 */
export interface GetWorkspaceApplicationOutputArgs {
    /**
     * The application key.
     */
    applicationKey: pulumi.Input<string>;
    /**
     * The workspace ID.
     */
    workspaceId: pulumi.Input<string>;
}
