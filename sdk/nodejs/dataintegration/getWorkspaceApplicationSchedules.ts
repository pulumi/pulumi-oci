// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Workspace Application Schedules in Oracle Cloud Infrastructure Data Integration service.
 *
 * Use this endpoint to list schedules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceApplicationSchedules = oci.DataIntegration.getWorkspaceApplicationSchedules({
 *     applicationKey: workspaceApplicationScheduleApplicationKey,
 *     workspaceId: testWorkspace.id,
 *     identifiers: workspaceApplicationScheduleIdentifier,
 *     keys: workspaceApplicationScheduleKey,
 *     name: workspaceApplicationScheduleName,
 *     types: workspaceApplicationScheduleType,
 * });
 * ```
 */
export function getWorkspaceApplicationSchedules(args: GetWorkspaceApplicationSchedulesArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceApplicationSchedulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataIntegration/getWorkspaceApplicationSchedules:getWorkspaceApplicationSchedules", {
        "applicationKey": args.applicationKey,
        "filters": args.filters,
        "identifiers": args.identifiers,
        "keys": args.keys,
        "name": args.name,
        "types": args.types,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspaceApplicationSchedules.
 */
export interface GetWorkspaceApplicationSchedulesArgs {
    /**
     * The application key.
     */
    applicationKey: string;
    filters?: inputs.DataIntegration.GetWorkspaceApplicationSchedulesFilter[];
    /**
     * Used to filter by the identifier of the object.
     */
    identifiers?: string[];
    /**
     * Used to filter by the key of the object.
     */
    keys?: string[];
    /**
     * Used to filter by the name of the object.
     */
    name?: string;
    /**
     * Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. <br><br><B>Examples:</B><br> <ul> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=false</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=true</B> returns all objects of type data loader task</li> </ul>
     */
    types?: string[];
    /**
     * The workspace ID.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getWorkspaceApplicationSchedules.
 */
export interface GetWorkspaceApplicationSchedulesResult {
    readonly applicationKey: string;
    readonly filters?: outputs.DataIntegration.GetWorkspaceApplicationSchedulesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The identifier of the aggregator.
     */
    readonly identifiers?: string[];
    /**
     * The key of the aggregator object.
     */
    readonly keys?: string[];
    /**
     * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    readonly name?: string;
    /**
     * The list of schedule_summary_collection.
     */
    readonly scheduleSummaryCollections: outputs.DataIntegration.GetWorkspaceApplicationSchedulesScheduleSummaryCollection[];
    /**
     * The type of the aggregator.
     */
    readonly types?: string[];
    readonly workspaceId: string;
}
/**
 * This data source provides the list of Workspace Application Schedules in Oracle Cloud Infrastructure Data Integration service.
 *
 * Use this endpoint to list schedules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceApplicationSchedules = oci.DataIntegration.getWorkspaceApplicationSchedules({
 *     applicationKey: workspaceApplicationScheduleApplicationKey,
 *     workspaceId: testWorkspace.id,
 *     identifiers: workspaceApplicationScheduleIdentifier,
 *     keys: workspaceApplicationScheduleKey,
 *     name: workspaceApplicationScheduleName,
 *     types: workspaceApplicationScheduleType,
 * });
 * ```
 */
export function getWorkspaceApplicationSchedulesOutput(args: GetWorkspaceApplicationSchedulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWorkspaceApplicationSchedulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataIntegration/getWorkspaceApplicationSchedules:getWorkspaceApplicationSchedules", {
        "applicationKey": args.applicationKey,
        "filters": args.filters,
        "identifiers": args.identifiers,
        "keys": args.keys,
        "name": args.name,
        "types": args.types,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspaceApplicationSchedules.
 */
export interface GetWorkspaceApplicationSchedulesOutputArgs {
    /**
     * The application key.
     */
    applicationKey: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataIntegration.GetWorkspaceApplicationSchedulesFilterArgs>[]>;
    /**
     * Used to filter by the identifier of the object.
     */
    identifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to filter by the key of the object.
     */
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to filter by the name of the object.
     */
    name?: pulumi.Input<string>;
    /**
     * Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. <br><br><B>Examples:</B><br> <ul> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=false</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=true</B> returns all objects of type data loader task</li> </ul>
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The workspace ID.
     */
    workspaceId: pulumi.Input<string>;
}
