// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Workspace Project resource in Oracle Cloud Infrastructure Data Integration service.
 *
 * Retrieves a project using the specified identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceProject = oci.DataIntegration.getWorkspaceProject({
 *     projectKey: _var.workspace_project_project_key,
 *     workspaceId: oci_dataintegration_workspace.test_workspace.id,
 * });
 * ```
 */
export function getWorkspaceProject(args: GetWorkspaceProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceProjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataIntegration/getWorkspaceProject:getWorkspaceProject", {
        "projectKey": args.projectKey,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspaceProject.
 */
export interface GetWorkspaceProjectArgs {
    /**
     * The project key.
     */
    projectKey: string;
    /**
     * The workspace ID.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getWorkspaceProject.
 */
export interface GetWorkspaceProjectResult {
    /**
     * The description of the aggregator.
     */
    readonly description: string;
    readonly id: string;
    /**
     * The identifier of the aggregator.
     */
    readonly identifier: string;
    /**
     * The key of the aggregator object.
     */
    readonly key: string;
    /**
     * A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     */
    readonly keyMap: {[key: string]: any};
    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     */
    readonly metadatas: outputs.DataIntegration.GetWorkspaceProjectMetadata[];
    /**
     * The type of the object.
     */
    readonly modelType: string;
    /**
     * The model version of an object.
     */
    readonly modelVersion: string;
    /**
     * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    readonly name: string;
    /**
     * The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     */
    readonly objectStatus: number;
    /**
     * The version of the object that is used to track changes in the object instance.
     */
    readonly objectVersion: number;
    /**
     * A reference to the object's parent.
     */
    readonly parentReves: outputs.DataIntegration.GetWorkspaceProjectParentRef[];
    readonly projectKey: string;
    readonly registryMetadatas: outputs.DataIntegration.GetWorkspaceProjectRegistryMetadata[];
    readonly workspaceId: string;
}
/**
 * This data source provides details about a specific Workspace Project resource in Oracle Cloud Infrastructure Data Integration service.
 *
 * Retrieves a project using the specified identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceProject = oci.DataIntegration.getWorkspaceProject({
 *     projectKey: _var.workspace_project_project_key,
 *     workspaceId: oci_dataintegration_workspace.test_workspace.id,
 * });
 * ```
 */
export function getWorkspaceProjectOutput(args: GetWorkspaceProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceProjectResult> {
    return pulumi.output(args).apply((a: any) => getWorkspaceProject(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspaceProject.
 */
export interface GetWorkspaceProjectOutputArgs {
    /**
     * The project key.
     */
    projectKey: pulumi.Input<string>;
    /**
     * The workspace ID.
     */
    workspaceId: pulumi.Input<string>;
}
