// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Workspace Tasks in Oracle Cloud Infrastructure Data Integration service.
 *
 * Retrieves a list of all tasks in a specified project or folder.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceTasks = oci.DataIntegration.getWorkspaceTasks({
 *     workspaceId: testWorkspace.id,
 *     fields: workspaceTaskFields,
 *     folderId: testFolder.id,
 *     identifiers: workspaceTaskIdentifier,
 *     keys: workspaceTaskKey,
 *     name: workspaceTaskName,
 *     types: workspaceTaskType,
 * });
 * ```
 */
export function getWorkspaceTasks(args: GetWorkspaceTasksArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceTasksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataIntegration/getWorkspaceTasks:getWorkspaceTasks", {
        "fields": args.fields,
        "filters": args.filters,
        "folderId": args.folderId,
        "identifiers": args.identifiers,
        "keys": args.keys,
        "name": args.name,
        "types": args.types,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspaceTasks.
 */
export interface GetWorkspaceTasksArgs {
    /**
     * Specifies the fields to get for an object.
     */
    fields?: string[];
    filters?: inputs.DataIntegration.GetWorkspaceTasksFilter[];
    /**
     * Unique key of the folder.
     */
    folderId?: string;
    /**
     * Used to filter by the identifier of the object.
     */
    identifiers?: string[];
    /**
     * Used to filter by the key of the object.
     */
    keys?: string[];
    /**
     * Used to filter by the name of the object.
     */
    name?: string;
    /**
     * Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. <br><br><B>Examples:</B><br> <ul> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=false</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=true</B> returns all objects of type data loader task</li> </ul>
     */
    types?: string[];
    /**
     * The workspace ID.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getWorkspaceTasks.
 */
export interface GetWorkspaceTasksResult {
    /**
     * An array of fields.
     */
    readonly fields?: string[];
    readonly filters?: outputs.DataIntegration.GetWorkspaceTasksFilter[];
    readonly folderId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     */
    readonly identifiers?: string[];
    /**
     * The key of the object.
     */
    readonly keys?: string[];
    /**
     * Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    readonly name?: string;
    /**
     * The list of task_summary_collection.
     */
    readonly taskSummaryCollections: outputs.DataIntegration.GetWorkspaceTasksTaskSummaryCollection[];
    /**
     * The object type.
     */
    readonly types?: string[];
    readonly workspaceId: string;
}
/**
 * This data source provides the list of Workspace Tasks in Oracle Cloud Infrastructure Data Integration service.
 *
 * Retrieves a list of all tasks in a specified project or folder.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceTasks = oci.DataIntegration.getWorkspaceTasks({
 *     workspaceId: testWorkspace.id,
 *     fields: workspaceTaskFields,
 *     folderId: testFolder.id,
 *     identifiers: workspaceTaskIdentifier,
 *     keys: workspaceTaskKey,
 *     name: workspaceTaskName,
 *     types: workspaceTaskType,
 * });
 * ```
 */
export function getWorkspaceTasksOutput(args: GetWorkspaceTasksOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWorkspaceTasksResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataIntegration/getWorkspaceTasks:getWorkspaceTasks", {
        "fields": args.fields,
        "filters": args.filters,
        "folderId": args.folderId,
        "identifiers": args.identifiers,
        "keys": args.keys,
        "name": args.name,
        "types": args.types,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspaceTasks.
 */
export interface GetWorkspaceTasksOutputArgs {
    /**
     * Specifies the fields to get for an object.
     */
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataIntegration.GetWorkspaceTasksFilterArgs>[]>;
    /**
     * Unique key of the folder.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Used to filter by the identifier of the object.
     */
    identifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to filter by the key of the object.
     */
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Used to filter by the name of the object.
     */
    name?: pulumi.Input<string>;
    /**
     * Used to filter by the object type of the object. It can be suffixed with an optional filter operator InSubtree. If this operator is not specified, then exact match is considered. <br><br><B>Examples:</B><br> <ul> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=false</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK</B> returns all objects of type data loader task</li> <li><B>?type=DATA_LOADER_TASK&typeInSubtree=true</B> returns all objects of type data loader task</li> </ul>
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The workspace ID.
     */
    workspaceId: pulumi.Input<string>;
}
