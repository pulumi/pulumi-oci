// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Workspace Import Request resource in Oracle Cloud Infrastructure Data Integration service.
 *
 * Import Metadata Object
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceImportRequest = new oci.dataintegration.WorkspaceImportRequest("test_workspace_import_request", {
 *     bucket: workspaceImportRequestBucket,
 *     fileName: workspaceImportRequestFileName,
 *     workspaceId: testWorkspace.id,
 *     areDataAssetReferencesIncluded: workspaceImportRequestAreDataAssetReferencesIncluded,
 *     importConflictResolution: {
 *         importConflictResolutionType: workspaceImportRequestImportConflictResolutionImportConflictResolutionType,
 *         duplicatePrefix: workspaceImportRequestImportConflictResolutionDuplicatePrefix,
 *         duplicateSuffix: workspaceImportRequestImportConflictResolutionDuplicateSuffix,
 *     },
 *     objectKeyForImport: workspaceImportRequestObjectKeyForImport,
 *     objectStorageRegion: workspaceImportRequestObjectStorageRegion,
 *     objectStorageTenancyId: testTenancy.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * WorkspaceImportRequests can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DataIntegration/workspaceImportRequest:WorkspaceImportRequest test_workspace_import_request "workspaces/{workspaceId}/importRequests/{importRequestKey}"
 * ```
 */
export class WorkspaceImportRequest extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceImportRequest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceImportRequestState, opts?: pulumi.CustomResourceOptions): WorkspaceImportRequest {
        return new WorkspaceImportRequest(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataIntegration/workspaceImportRequest:WorkspaceImportRequest';

    /**
     * Returns true if the given object is an instance of WorkspaceImportRequest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceImportRequest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceImportRequest.__pulumiType;
    }

    /**
     * This field controls if the data asset references will be included during import.
     */
    public readonly areDataAssetReferencesIncluded!: pulumi.Output<boolean>;
    /**
     * Name of the Object Storage bucket where the object will be imported from.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * Name of the user who initiated import request.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Contains key of the error
     */
    public /*out*/ readonly errorMessages!: pulumi.Output<{[key: string]: any}>;
    /**
     * Name of the zip file to be imported.
     */
    public readonly fileName!: pulumi.Output<string>;
    /**
     * Import Objects Conflict resolution.
     */
    public readonly importConflictResolution!: pulumi.Output<outputs.DataIntegration.WorkspaceImportRequestImportConflictResolution>;
    /**
     * The array of imported object details.
     */
    public /*out*/ readonly importedObjects!: pulumi.Output<outputs.DataIntegration.WorkspaceImportRequestImportedObject[]>;
    /**
     * Import object request key
     */
    public /*out*/ readonly key!: pulumi.Output<string>;
    /**
     * Name of the import request.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Key of the object inside which all the objects will be imported
     */
    public readonly objectKeyForImport!: pulumi.Output<string>;
    /**
     * Region of the object storage (if using object storage of different region)
     */
    public readonly objectStorageRegion!: pulumi.Output<string>;
    /**
     * Optional parameter to point to object storage tenancy (if using Object Storage of different tenancy)
     */
    public readonly objectStorageTenancyId!: pulumi.Output<string>;
    /**
     * Import Objects request status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Time at which the request was completely processed.
     */
    public /*out*/ readonly timeEndedInMillis!: pulumi.Output<string>;
    /**
     * Time at which the request started getting processed.
     */
    public /*out*/ readonly timeStartedInMillis!: pulumi.Output<string>;
    /**
     * Number of objects that are imported.
     */
    public /*out*/ readonly totalImportedObjectCount!: pulumi.Output<number>;
    /**
     * The workspace ID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a WorkspaceImportRequest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceImportRequestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceImportRequestArgs | WorkspaceImportRequestState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceImportRequestState | undefined;
            resourceInputs["areDataAssetReferencesIncluded"] = state ? state.areDataAssetReferencesIncluded : undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["errorMessages"] = state ? state.errorMessages : undefined;
            resourceInputs["fileName"] = state ? state.fileName : undefined;
            resourceInputs["importConflictResolution"] = state ? state.importConflictResolution : undefined;
            resourceInputs["importedObjects"] = state ? state.importedObjects : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectKeyForImport"] = state ? state.objectKeyForImport : undefined;
            resourceInputs["objectStorageRegion"] = state ? state.objectStorageRegion : undefined;
            resourceInputs["objectStorageTenancyId"] = state ? state.objectStorageTenancyId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["timeEndedInMillis"] = state ? state.timeEndedInMillis : undefined;
            resourceInputs["timeStartedInMillis"] = state ? state.timeStartedInMillis : undefined;
            resourceInputs["totalImportedObjectCount"] = state ? state.totalImportedObjectCount : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as WorkspaceImportRequestArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.fileName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileName'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["areDataAssetReferencesIncluded"] = args ? args.areDataAssetReferencesIncluded : undefined;
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["fileName"] = args ? args.fileName : undefined;
            resourceInputs["importConflictResolution"] = args ? args.importConflictResolution : undefined;
            resourceInputs["objectKeyForImport"] = args ? args.objectKeyForImport : undefined;
            resourceInputs["objectStorageRegion"] = args ? args.objectStorageRegion : undefined;
            resourceInputs["objectStorageTenancyId"] = args ? args.objectStorageTenancyId : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["errorMessages"] = undefined /*out*/;
            resourceInputs["importedObjects"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["timeEndedInMillis"] = undefined /*out*/;
            resourceInputs["timeStartedInMillis"] = undefined /*out*/;
            resourceInputs["totalImportedObjectCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceImportRequest.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceImportRequest resources.
 */
export interface WorkspaceImportRequestState {
    /**
     * This field controls if the data asset references will be included during import.
     */
    areDataAssetReferencesIncluded?: pulumi.Input<boolean>;
    /**
     * Name of the Object Storage bucket where the object will be imported from.
     */
    bucket?: pulumi.Input<string>;
    /**
     * Name of the user who initiated import request.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Contains key of the error
     */
    errorMessages?: pulumi.Input<{[key: string]: any}>;
    /**
     * Name of the zip file to be imported.
     */
    fileName?: pulumi.Input<string>;
    /**
     * Import Objects Conflict resolution.
     */
    importConflictResolution?: pulumi.Input<inputs.DataIntegration.WorkspaceImportRequestImportConflictResolution>;
    /**
     * The array of imported object details.
     */
    importedObjects?: pulumi.Input<pulumi.Input<inputs.DataIntegration.WorkspaceImportRequestImportedObject>[]>;
    /**
     * Import object request key
     */
    key?: pulumi.Input<string>;
    /**
     * Name of the import request.
     */
    name?: pulumi.Input<string>;
    /**
     * Key of the object inside which all the objects will be imported
     */
    objectKeyForImport?: pulumi.Input<string>;
    /**
     * Region of the object storage (if using object storage of different region)
     */
    objectStorageRegion?: pulumi.Input<string>;
    /**
     * Optional parameter to point to object storage tenancy (if using Object Storage of different tenancy)
     */
    objectStorageTenancyId?: pulumi.Input<string>;
    /**
     * Import Objects request status.
     */
    status?: pulumi.Input<string>;
    /**
     * Time at which the request was completely processed.
     */
    timeEndedInMillis?: pulumi.Input<string>;
    /**
     * Time at which the request started getting processed.
     */
    timeStartedInMillis?: pulumi.Input<string>;
    /**
     * Number of objects that are imported.
     */
    totalImportedObjectCount?: pulumi.Input<number>;
    /**
     * The workspace ID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceImportRequest resource.
 */
export interface WorkspaceImportRequestArgs {
    /**
     * This field controls if the data asset references will be included during import.
     */
    areDataAssetReferencesIncluded?: pulumi.Input<boolean>;
    /**
     * Name of the Object Storage bucket where the object will be imported from.
     */
    bucket: pulumi.Input<string>;
    /**
     * Name of the zip file to be imported.
     */
    fileName: pulumi.Input<string>;
    /**
     * Import Objects Conflict resolution.
     */
    importConflictResolution?: pulumi.Input<inputs.DataIntegration.WorkspaceImportRequestImportConflictResolution>;
    /**
     * Key of the object inside which all the objects will be imported
     */
    objectKeyForImport?: pulumi.Input<string>;
    /**
     * Region of the object storage (if using object storage of different region)
     */
    objectStorageRegion?: pulumi.Input<string>;
    /**
     * Optional parameter to point to object storage tenancy (if using Object Storage of different tenancy)
     */
    objectStorageTenancyId?: pulumi.Input<string>;
    /**
     * The workspace ID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    workspaceId: pulumi.Input<string>;
}
