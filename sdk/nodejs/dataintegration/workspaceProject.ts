// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Workspace Project resource in Oracle Cloud Infrastructure Data Integration service.
 *
 * Creates a project. Projects are organizational constructs within a workspace that you use to organize your design-time resources, such as tasks or data flows. Projects can be organized into folders.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testWorkspaceProject = new oci.dataintegration.WorkspaceProject("test_workspace_project", {
 *     identifier: workspaceProjectIdentifier,
 *     name: workspaceProjectName,
 *     workspaceId: testWorkspace.id,
 *     description: workspaceProjectDescription,
 *     key: workspaceProjectKey,
 *     modelVersion: workspaceProjectModelVersion,
 *     objectStatus: workspaceProjectObjectStatus,
 *     registryMetadata: {
 *         aggregatorKey: workspaceProjectRegistryMetadataAggregatorKey,
 *         isFavorite: workspaceProjectRegistryMetadataIsFavorite,
 *         key: workspaceProjectRegistryMetadataKey,
 *         labels: workspaceProjectRegistryMetadataLabels,
 *         registryVersion: workspaceProjectRegistryMetadataRegistryVersion,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * WorkspaceProjects can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DataIntegration/workspaceProject:WorkspaceProject test_workspace_project "workspaces/{workspaceId}/projects/{projectKey}"
 * ```
 */
export class WorkspaceProject extends pulumi.CustomResource {
    /**
     * Get an existing WorkspaceProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceProjectState, opts?: pulumi.CustomResourceOptions): WorkspaceProject {
        return new WorkspaceProject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataIntegration/workspaceProject:WorkspaceProject';

    /**
     * Returns true if the given object is an instance of WorkspaceProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkspaceProject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkspaceProject.__pulumiType;
    }

    /**
     * (Updatable) A user defined description for the project.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     */
    public readonly identifier!: pulumi.Output<string>;
    /**
     * (Updatable) Generated key that can be used in API calls to identify project.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     */
    public /*out*/ readonly keyMap!: pulumi.Output<{[key: string]: string}>;
    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     */
    public /*out*/ readonly metadatas!: pulumi.Output<outputs.DataIntegration.WorkspaceProjectMetadata[]>;
    /**
     * The type of the object.
     */
    public /*out*/ readonly modelType!: pulumi.Output<string>;
    /**
     * (Updatable) The model version of an object.
     */
    public readonly modelVersion!: pulumi.Output<string>;
    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     */
    public readonly objectStatus!: pulumi.Output<number>;
    /**
     * The version of the object that is used to track changes in the object instance.
     */
    public /*out*/ readonly objectVersion!: pulumi.Output<number>;
    /**
     * A reference to the object's parent.
     */
    public /*out*/ readonly parentReves!: pulumi.Output<outputs.DataIntegration.WorkspaceProjectParentRef[]>;
    public readonly projectKey!: pulumi.Output<string>;
    /**
     * (Updatable) Information about the object and its parent.
     */
    public readonly registryMetadata!: pulumi.Output<outputs.DataIntegration.WorkspaceProjectRegistryMetadata>;
    /**
     * The workspace ID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a WorkspaceProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceProjectArgs | WorkspaceProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceProjectState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["keyMap"] = state ? state.keyMap : undefined;
            resourceInputs["metadatas"] = state ? state.metadatas : undefined;
            resourceInputs["modelType"] = state ? state.modelType : undefined;
            resourceInputs["modelVersion"] = state ? state.modelVersion : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objectStatus"] = state ? state.objectStatus : undefined;
            resourceInputs["objectVersion"] = state ? state.objectVersion : undefined;
            resourceInputs["parentReves"] = state ? state.parentReves : undefined;
            resourceInputs["projectKey"] = state ? state.projectKey : undefined;
            resourceInputs["registryMetadata"] = state ? state.registryMetadata : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as WorkspaceProjectArgs | undefined;
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["modelVersion"] = args ? args.modelVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["objectStatus"] = args ? args.objectStatus : undefined;
            resourceInputs["projectKey"] = args ? args.projectKey : undefined;
            resourceInputs["registryMetadata"] = args ? args.registryMetadata : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["keyMap"] = undefined /*out*/;
            resourceInputs["metadatas"] = undefined /*out*/;
            resourceInputs["modelType"] = undefined /*out*/;
            resourceInputs["objectVersion"] = undefined /*out*/;
            resourceInputs["parentReves"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkspaceProject.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkspaceProject resources.
 */
export interface WorkspaceProjectState {
    /**
     * (Updatable) A user defined description for the project.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     */
    identifier?: pulumi.Input<string>;
    /**
     * (Updatable) Generated key that can be used in API calls to identify project.
     */
    key?: pulumi.Input<string>;
    /**
     * A key map. If provided, the key is replaced with generated key. This structure provides mapping between user provided key and generated key.
     */
    keyMap?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A summary type containing information about the object including its key, name and when/who created/updated it.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.DataIntegration.WorkspaceProjectMetadata>[]>;
    /**
     * The type of the object.
     */
    modelType?: pulumi.Input<string>;
    /**
     * (Updatable) The model version of an object.
     */
    modelVersion?: pulumi.Input<string>;
    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     */
    objectStatus?: pulumi.Input<number>;
    /**
     * The version of the object that is used to track changes in the object instance.
     */
    objectVersion?: pulumi.Input<number>;
    /**
     * A reference to the object's parent.
     */
    parentReves?: pulumi.Input<pulumi.Input<inputs.DataIntegration.WorkspaceProjectParentRef>[]>;
    projectKey?: pulumi.Input<string>;
    /**
     * (Updatable) Information about the object and its parent.
     */
    registryMetadata?: pulumi.Input<inputs.DataIntegration.WorkspaceProjectRegistryMetadata>;
    /**
     * The workspace ID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkspaceProject resource.
 */
export interface WorkspaceProjectArgs {
    /**
     * (Updatable) A user defined description for the project.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     */
    identifier: pulumi.Input<string>;
    /**
     * (Updatable) Generated key that can be used in API calls to identify project.
     */
    key?: pulumi.Input<string>;
    /**
     * (Updatable) The model version of an object.
     */
    modelVersion?: pulumi.Input<string>;
    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     */
    objectStatus?: pulumi.Input<number>;
    projectKey?: pulumi.Input<string>;
    /**
     * (Updatable) Information about the object and its parent.
     */
    registryMetadata?: pulumi.Input<inputs.DataIntegration.WorkspaceProjectRegistryMetadata>;
    /**
     * The workspace ID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    workspaceId: pulumi.Input<string>;
}
