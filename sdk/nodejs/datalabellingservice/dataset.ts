// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Dataset resource in Oracle Cloud Infrastructure Data Labeling Service service.
 *
 * Creates a new Dataset.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDataset = new oci.datalabellingservice.Dataset("test_dataset", {
 *     annotationFormat: datasetAnnotationFormat,
 *     compartmentId: compartmentId,
 *     datasetFormatDetails: {
 *         formatType: datasetDatasetFormatDetailsFormatType,
 *         textFileTypeMetadata: {
 *             columnIndex: datasetDatasetFormatDetailsTextFileTypeMetadataColumnIndex,
 *             formatType: datasetDatasetFormatDetailsTextFileTypeMetadataFormatType,
 *             columnDelimiter: datasetDatasetFormatDetailsTextFileTypeMetadataColumnDelimiter,
 *             columnName: datasetDatasetFormatDetailsTextFileTypeMetadataColumnName,
 *             escapeCharacter: datasetDatasetFormatDetailsTextFileTypeMetadataEscapeCharacter,
 *             lineDelimiter: datasetDatasetFormatDetailsTextFileTypeMetadataLineDelimiter,
 *         },
 *     },
 *     datasetSourceDetails: {
 *         bucket: datasetDatasetSourceDetailsBucket,
 *         namespace: datasetDatasetSourceDetailsNamespace,
 *         sourceType: datasetDatasetSourceDetailsSourceType,
 *         prefix: datasetDatasetSourceDetailsPrefix,
 *     },
 *     labelSet: {
 *         items: [{
 *             name: datasetLabelSetItemsName,
 *         }],
 *     },
 *     definedTags: datasetDefinedTags,
 *     description: datasetDescription,
 *     displayName: datasetDisplayName,
 *     freeformTags: datasetFreeformTags,
 *     initialImportDatasetConfiguration: {
 *         importFormat: {
 *             name: datasetInitialImportDatasetConfigurationImportFormatName,
 *             version: datasetInitialImportDatasetConfigurationImportFormatVersion,
 *         },
 *         importMetadataPath: {
 *             bucket: datasetInitialImportDatasetConfigurationImportMetadataPathBucket,
 *             namespace: datasetInitialImportDatasetConfigurationImportMetadataPathNamespace,
 *             path: datasetInitialImportDatasetConfigurationImportMetadataPathPath,
 *             sourceType: datasetInitialImportDatasetConfigurationImportMetadataPathSourceType,
 *         },
 *     },
 *     initialRecordGenerationConfiguration: {},
 *     labelingInstructions: datasetLabelingInstructions,
 * });
 * ```
 *
 * ## Import
 *
 * Datasets can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DataLabellingService/dataset:Dataset test_dataset "id"
 * ```
 */
export class Dataset extends pulumi.CustomResource {
    /**
     * Get an existing Dataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatasetState, opts?: pulumi.CustomResourceOptions): Dataset {
        return new Dataset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataLabellingService/dataset:Dataset';

    /**
     * Returns true if the given object is an instance of Dataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Dataset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Dataset.__pulumiType;
    }

    /**
     * A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    public /*out*/ readonly additionalProperties!: pulumi.Output<{[key: string]: string}>;
    /**
     * The annotation format name required for labeling records.
     */
    public readonly annotationFormat!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the compartment of the resource.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
     */
    public readonly datasetFormatDetails!: pulumi.Output<outputs.DataLabellingService.DatasetDatasetFormatDetails>;
    /**
     * This allows the customer to specify the source of the dataset.
     */
    public readonly datasetSourceDetails!: pulumi.Output<outputs.DataLabellingService.DatasetDatasetSourceDetails>;
    /**
     * (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A user provided description of the dataset
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly display name for the resource.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * Initial import dataset configuration. Allows user to create dataset from existing dataset files.
     */
    public readonly initialImportDatasetConfiguration!: pulumi.Output<outputs.DataLabellingService.DatasetInitialImportDatasetConfiguration>;
    /**
     * The initial generate records configuration. It generates records from the dataset's source.
     */
    public readonly initialRecordGenerationConfiguration!: pulumi.Output<outputs.DataLabellingService.DatasetInitialRecordGenerationConfiguration>;
    /**
     * An ordered collection of labels that are unique by name.
     */
    public readonly labelSet!: pulumi.Output<outputs.DataLabellingService.DatasetLabelSet>;
    /**
     * (Updatable) The labeling instructions for human labelers in rich text format
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly labelingInstructions!: pulumi.Output<string>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
     */
    public /*out*/ readonly lifecycleSubstate!: pulumi.Output<string>;
    /**
     * The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the resource was created, in the timestamp format defined by RFC3339.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time the resource was last updated, in the timestamp format defined by RFC3339.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a Dataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatasetArgs | DatasetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatasetState | undefined;
            resourceInputs["additionalProperties"] = state ? state.additionalProperties : undefined;
            resourceInputs["annotationFormat"] = state ? state.annotationFormat : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["datasetFormatDetails"] = state ? state.datasetFormatDetails : undefined;
            resourceInputs["datasetSourceDetails"] = state ? state.datasetSourceDetails : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["initialImportDatasetConfiguration"] = state ? state.initialImportDatasetConfiguration : undefined;
            resourceInputs["initialRecordGenerationConfiguration"] = state ? state.initialRecordGenerationConfiguration : undefined;
            resourceInputs["labelSet"] = state ? state.labelSet : undefined;
            resourceInputs["labelingInstructions"] = state ? state.labelingInstructions : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["lifecycleSubstate"] = state ? state.lifecycleSubstate : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as DatasetArgs | undefined;
            if ((!args || args.annotationFormat === undefined) && !opts.urn) {
                throw new Error("Missing required property 'annotationFormat'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.datasetFormatDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasetFormatDetails'");
            }
            if ((!args || args.datasetSourceDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datasetSourceDetails'");
            }
            if ((!args || args.labelSet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'labelSet'");
            }
            resourceInputs["annotationFormat"] = args ? args.annotationFormat : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["datasetFormatDetails"] = args ? args.datasetFormatDetails : undefined;
            resourceInputs["datasetSourceDetails"] = args ? args.datasetSourceDetails : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["initialImportDatasetConfiguration"] = args ? args.initialImportDatasetConfiguration : undefined;
            resourceInputs["initialRecordGenerationConfiguration"] = args ? args.initialRecordGenerationConfiguration : undefined;
            resourceInputs["labelSet"] = args ? args.labelSet : undefined;
            resourceInputs["labelingInstructions"] = args ? args.labelingInstructions : undefined;
            resourceInputs["additionalProperties"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["lifecycleSubstate"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Dataset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Dataset resources.
 */
export interface DatasetState {
    /**
     * A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    additionalProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The annotation format name required for labeling records.
     */
    annotationFormat?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment of the resource.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
     */
    datasetFormatDetails?: pulumi.Input<inputs.DataLabellingService.DatasetDatasetFormatDetails>;
    /**
     * This allows the customer to specify the source of the dataset.
     */
    datasetSourceDetails?: pulumi.Input<inputs.DataLabellingService.DatasetDatasetSourceDetails>;
    /**
     * (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user provided description of the dataset
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly display name for the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Initial import dataset configuration. Allows user to create dataset from existing dataset files.
     */
    initialImportDatasetConfiguration?: pulumi.Input<inputs.DataLabellingService.DatasetInitialImportDatasetConfiguration>;
    /**
     * The initial generate records configuration. It generates records from the dataset's source.
     */
    initialRecordGenerationConfiguration?: pulumi.Input<inputs.DataLabellingService.DatasetInitialRecordGenerationConfiguration>;
    /**
     * An ordered collection of labels that are unique by name.
     */
    labelSet?: pulumi.Input<inputs.DataLabellingService.DatasetLabelSet>;
    /**
     * (Updatable) The labeling instructions for human labelers in rich text format
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    labelingInstructions?: pulumi.Input<string>;
    /**
     * A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in FAILED or NEEDS_ATTENTION state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The sub-state of the dataset. IMPORT_DATASET - The dataset is being imported.
     */
    lifecycleSubstate?: pulumi.Input<string>;
    /**
     * The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the resource was created, in the timestamp format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the resource was last updated, in the timestamp format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Dataset resource.
 */
export interface DatasetArgs {
    /**
     * The annotation format name required for labeling records.
     */
    annotationFormat: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment of the resource.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * It specifies how to process the data. Supported formats include DOCUMENT, IMAGE, and TEXT.
     */
    datasetFormatDetails: pulumi.Input<inputs.DataLabellingService.DatasetDatasetFormatDetails>;
    /**
     * This allows the customer to specify the source of the dataset.
     */
    datasetSourceDetails: pulumi.Input<inputs.DataLabellingService.DatasetDatasetSourceDetails>;
    /**
     * (Updatable) The defined tags for this resource. Each key is predefined and scoped to a namespace. For example: `{"foo-namespace": {"bar-key": "value"}}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user provided description of the dataset
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly display name for the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. It exists for cross-compatibility only. For example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Initial import dataset configuration. Allows user to create dataset from existing dataset files.
     */
    initialImportDatasetConfiguration?: pulumi.Input<inputs.DataLabellingService.DatasetInitialImportDatasetConfiguration>;
    /**
     * The initial generate records configuration. It generates records from the dataset's source.
     */
    initialRecordGenerationConfiguration?: pulumi.Input<inputs.DataLabellingService.DatasetInitialRecordGenerationConfiguration>;
    /**
     * An ordered collection of labels that are unique by name.
     */
    labelSet: pulumi.Input<inputs.DataLabellingService.DatasetLabelSet>;
    /**
     * (Updatable) The labeling instructions for human labelers in rich text format
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    labelingInstructions?: pulumi.Input<string>;
}
