// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Calculate Audit Volume Collected resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Calculates the volume of audit events collected by data safe.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCalculateAuditVolumeCollected = new oci.datasafe.CalculateAuditVolumeCollected("test_calculate_audit_volume_collected", {
 *     auditProfileId: testAuditProfile.id,
 *     timeFromMonth: calculateAuditVolumeCollectedTimeFromMonth,
 *     timeToMonth: calculateAuditVolumeCollectedTimeToMonth,
 * });
 * ```
 *
 * ## Import
 *
 * CalculateAuditVolumeCollected can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DataSafe/calculateAuditVolumeCollected:CalculateAuditVolumeCollected test_calculate_audit_volume_collected "id"
 * ```
 */
export class CalculateAuditVolumeCollected extends pulumi.CustomResource {
    /**
     * Get an existing CalculateAuditVolumeCollected resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CalculateAuditVolumeCollectedState, opts?: pulumi.CustomResourceOptions): CalculateAuditVolumeCollected {
        return new CalculateAuditVolumeCollected(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataSafe/calculateAuditVolumeCollected:CalculateAuditVolumeCollected';

    /**
     * Returns true if the given object is an instance of CalculateAuditVolumeCollected.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CalculateAuditVolumeCollected {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CalculateAuditVolumeCollected.__pulumiType;
    }

    /**
     * The OCID of the audit.
     */
    declare public readonly auditProfileId: pulumi.Output<string>;
    /**
     * List of collected audit volumes.
     */
    declare public /*out*/ readonly collectedAuditVolumes: pulumi.Output<outputs.DataSafe.CalculateAuditVolumeCollectedCollectedAuditVolume[]>;
    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
     */
    declare public readonly timeFromMonth: pulumi.Output<string>;
    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly timeToMonth: pulumi.Output<string>;

    /**
     * Create a CalculateAuditVolumeCollected resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CalculateAuditVolumeCollectedArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CalculateAuditVolumeCollectedArgs | CalculateAuditVolumeCollectedState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CalculateAuditVolumeCollectedState | undefined;
            resourceInputs["auditProfileId"] = state?.auditProfileId;
            resourceInputs["collectedAuditVolumes"] = state?.collectedAuditVolumes;
            resourceInputs["timeFromMonth"] = state?.timeFromMonth;
            resourceInputs["timeToMonth"] = state?.timeToMonth;
        } else {
            const args = argsOrState as CalculateAuditVolumeCollectedArgs | undefined;
            if (args?.auditProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'auditProfileId'");
            }
            if (args?.timeFromMonth === undefined && !opts.urn) {
                throw new Error("Missing required property 'timeFromMonth'");
            }
            resourceInputs["auditProfileId"] = args?.auditProfileId;
            resourceInputs["timeFromMonth"] = args?.timeFromMonth;
            resourceInputs["timeToMonth"] = args?.timeToMonth;
            resourceInputs["collectedAuditVolumes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CalculateAuditVolumeCollected.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CalculateAuditVolumeCollected resources.
 */
export interface CalculateAuditVolumeCollectedState {
    /**
     * The OCID of the audit.
     */
    auditProfileId?: pulumi.Input<string>;
    /**
     * List of collected audit volumes.
     */
    collectedAuditVolumes?: pulumi.Input<pulumi.Input<inputs.DataSafe.CalculateAuditVolumeCollectedCollectedAuditVolume>[]>;
    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
     */
    timeFromMonth?: pulumi.Input<string>;
    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeToMonth?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CalculateAuditVolumeCollected resource.
 */
export interface CalculateAuditVolumeCollectedArgs {
    /**
     * The OCID of the audit.
     */
    auditProfileId: pulumi.Input<string>;
    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339.
     */
    timeFromMonth: pulumi.Input<string>;
    /**
     * The date from which the audit volume collected by data safe has to be calculated, in the format defined by RFC3339. If not specified, this will default to the current date.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeToMonth?: pulumi.Input<string>;
}
