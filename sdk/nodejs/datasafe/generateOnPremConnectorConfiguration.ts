// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Generate On Prem Connector Configuration resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Creates and downloads the configuration of the specified on-premises connector.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testGenerateOnPremConnectorConfiguration = new oci.datasafe.GenerateOnPremConnectorConfiguration("test_generate_on_prem_connector_configuration", {
 *     onPremConnectorId: testOnPremConnector.id,
 *     password: generateOnPremConnectorConfigurationPassword,
 * });
 * ```
 *
 * ## Import
 *
 * GenerateOnPremConnectorConfiguration can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DataSafe/generateOnPremConnectorConfiguration:GenerateOnPremConnectorConfiguration test_generate_on_prem_connector_configuration "id"
 * ```
 */
export class GenerateOnPremConnectorConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing GenerateOnPremConnectorConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GenerateOnPremConnectorConfigurationState, opts?: pulumi.CustomResourceOptions): GenerateOnPremConnectorConfiguration {
        return new GenerateOnPremConnectorConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataSafe/generateOnPremConnectorConfiguration:GenerateOnPremConnectorConfiguration';

    /**
     * Returns true if the given object is an instance of GenerateOnPremConnectorConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GenerateOnPremConnectorConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GenerateOnPremConnectorConfiguration.__pulumiType;
    }

    /**
     * The OCID of the on-premises connector.
     */
    declare public readonly onPremConnectorId: pulumi.Output<string>;
    /**
     * The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly password: pulumi.Output<string>;

    /**
     * Create a GenerateOnPremConnectorConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GenerateOnPremConnectorConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GenerateOnPremConnectorConfigurationArgs | GenerateOnPremConnectorConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GenerateOnPremConnectorConfigurationState | undefined;
            resourceInputs["onPremConnectorId"] = state?.onPremConnectorId;
            resourceInputs["password"] = state?.password;
        } else {
            const args = argsOrState as GenerateOnPremConnectorConfigurationArgs | undefined;
            if (args?.onPremConnectorId === undefined && !opts.urn) {
                throw new Error("Missing required property 'onPremConnectorId'");
            }
            if (args?.password === undefined && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            resourceInputs["onPremConnectorId"] = args?.onPremConnectorId;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(GenerateOnPremConnectorConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GenerateOnPremConnectorConfiguration resources.
 */
export interface GenerateOnPremConnectorConfigurationState {
    /**
     * The OCID of the on-premises connector.
     */
    onPremConnectorId?: pulumi.Input<string>;
    /**
     * The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    password?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GenerateOnPremConnectorConfiguration resource.
 */
export interface GenerateOnPremConnectorConfigurationArgs {
    /**
     * The OCID of the on-premises connector.
     */
    onPremConnectorId: pulumi.Input<string>;
    /**
     * The password to encrypt the keys inside the wallet included as part of the configuration. The password must be between 12 and 30 characters long and must contain atleast 1 uppercase, 1 lowercase, 1 numeric, and 1 special character.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    password: pulumi.Input<string>;
}
