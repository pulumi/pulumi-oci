// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Audit Archive Retrievals in Oracle Cloud Infrastructure Data Safe service.
 *
 * Returns the list of audit archive retrieval.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAuditArchiveRetrievals = oci.DataSafe.getAuditArchiveRetrievals({
 *     compartmentId: compartmentId,
 *     accessLevel: auditArchiveRetrievalAccessLevel,
 *     auditArchiveRetrievalId: testAuditArchiveRetrieval.id,
 *     compartmentIdInSubtree: auditArchiveRetrievalCompartmentIdInSubtree,
 *     displayName: auditArchiveRetrievalDisplayName,
 *     state: auditArchiveRetrievalState,
 *     targetId: testTarget.id,
 *     timeOfExpiry: auditArchiveRetrievalTimeOfExpiry,
 * });
 * ```
 */
export function getAuditArchiveRetrievals(args: GetAuditArchiveRetrievalsArgs, opts?: pulumi.InvokeOptions): Promise<GetAuditArchiveRetrievalsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getAuditArchiveRetrievals:getAuditArchiveRetrievals", {
        "accessLevel": args.accessLevel,
        "auditArchiveRetrievalId": args.auditArchiveRetrievalId,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "targetId": args.targetId,
        "timeOfExpiry": args.timeOfExpiry,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuditArchiveRetrievals.
 */
export interface GetAuditArchiveRetrievalsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * OCID of the archive retrieval.
     */
    auditArchiveRetrievalId?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: string;
    filters?: inputs.DataSafe.GetAuditArchiveRetrievalsFilter[];
    /**
     * A filter to return only resources that matches the specified lifecycle state.
     */
    state?: string;
    /**
     * The OCID of the target associated with the archive retrieval.
     */
    targetId?: string;
    /**
     * The date time when retrieved archive data will be deleted from Data Safe and unloaded back into archival.
     */
    timeOfExpiry?: string;
}

/**
 * A collection of values returned by getAuditArchiveRetrievals.
 */
export interface GetAuditArchiveRetrievalsResult {
    readonly accessLevel?: string;
    /**
     * The list of audit_archive_retrieval_collection.
     */
    readonly auditArchiveRetrievalCollections: outputs.DataSafe.GetAuditArchiveRetrievalsAuditArchiveRetrievalCollection[];
    readonly auditArchiveRetrievalId?: string;
    /**
     * The OCID of the compartment that contains archive retrieval.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * The display name of the archive retrieval. The name does not have to be unique, and is changeable.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataSafe.GetAuditArchiveRetrievalsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the archive retrieval.
     */
    readonly state?: string;
    /**
     * The OCID of the target associated with the archive retrieval.
     */
    readonly targetId?: string;
    /**
     * The date time when retrieved archive data will be deleted from Data Safe and unloaded back into archival.
     */
    readonly timeOfExpiry?: string;
}
/**
 * This data source provides the list of Audit Archive Retrievals in Oracle Cloud Infrastructure Data Safe service.
 *
 * Returns the list of audit archive retrieval.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAuditArchiveRetrievals = oci.DataSafe.getAuditArchiveRetrievals({
 *     compartmentId: compartmentId,
 *     accessLevel: auditArchiveRetrievalAccessLevel,
 *     auditArchiveRetrievalId: testAuditArchiveRetrieval.id,
 *     compartmentIdInSubtree: auditArchiveRetrievalCompartmentIdInSubtree,
 *     displayName: auditArchiveRetrievalDisplayName,
 *     state: auditArchiveRetrievalState,
 *     targetId: testTarget.id,
 *     timeOfExpiry: auditArchiveRetrievalTimeOfExpiry,
 * });
 * ```
 */
export function getAuditArchiveRetrievalsOutput(args: GetAuditArchiveRetrievalsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuditArchiveRetrievalsResult> {
    return pulumi.output(args).apply((a: any) => getAuditArchiveRetrievals(a, opts))
}

/**
 * A collection of arguments for invoking getAuditArchiveRetrievals.
 */
export interface GetAuditArchiveRetrievalsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * OCID of the archive retrieval.
     */
    auditArchiveRetrievalId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetAuditArchiveRetrievalsFilterArgs>[]>;
    /**
     * A filter to return only resources that matches the specified lifecycle state.
     */
    state?: pulumi.Input<string>;
    /**
     * The OCID of the target associated with the archive retrieval.
     */
    targetId?: pulumi.Input<string>;
    /**
     * The date time when retrieved archive data will be deleted from Data Safe and unloaded back into archival.
     */
    timeOfExpiry?: pulumi.Input<string>;
}
