// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Audit Policies in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all audited targets with their corresponding provisioned audit policies, and their provisioning conditions.
 *
 * The ListAuditPolicies operation returns only the audit policies in the specified `compartmentId`.
 * The list does not include any subcompartments of the compartmentId passed.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListAuditPolicies on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAuditPolicies = oci.DataSafe.getAuditPolicies({
 *     compartmentId: _var.compartment_id,
 *     accessLevel: _var.audit_policy_access_level,
 *     auditPolicyId: oci_data_safe_audit_policy.test_audit_policy.id,
 *     compartmentIdInSubtree: _var.audit_policy_compartment_id_in_subtree,
 *     displayName: _var.audit_policy_display_name,
 *     state: _var.audit_policy_state,
 *     targetId: oci_cloud_guard_target.test_target.id,
 * });
 * ```
 */
export function getAuditPolicies(args: GetAuditPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetAuditPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getAuditPolicies:getAuditPolicies", {
        "accessLevel": args.accessLevel,
        "auditPolicyId": args.auditPolicyId,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuditPolicies.
 */
export interface GetAuditPoliciesArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * An optional filter to return only resources that match the specified id.
     */
    auditPolicyId?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: string;
    filters?: inputs.DataSafe.GetAuditPoliciesFilter[];
    /**
     * The current state of the audit policy.
     */
    state?: string;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: string;
}

/**
 * A collection of values returned by getAuditPolicies.
 */
export interface GetAuditPoliciesResult {
    readonly accessLevel?: string;
    /**
     * The list of audit_policy_collection.
     */
    readonly auditPolicyCollections?: outputs.DataSafe.GetAuditPoliciesAuditPolicyCollection[];
    readonly auditPolicyId?: string;
    /**
     * The OCID of the compartment containing the audit policy.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * The display name of the audit policy.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataSafe.GetAuditPoliciesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * The current state of the audit policy.
     */
    readonly state?: string;
    /**
     * The OCID of the target for which the audit policy is created.
     */
    readonly targetId?: string;
}
/**
 * This data source provides the list of Audit Policies in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all audited targets with their corresponding provisioned audit policies, and their provisioning conditions.
 *
 * The ListAuditPolicies operation returns only the audit policies in the specified `compartmentId`.
 * The list does not include any subcompartments of the compartmentId passed.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListAuditPolicies on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAuditPolicies = oci.DataSafe.getAuditPolicies({
 *     compartmentId: _var.compartment_id,
 *     accessLevel: _var.audit_policy_access_level,
 *     auditPolicyId: oci_data_safe_audit_policy.test_audit_policy.id,
 *     compartmentIdInSubtree: _var.audit_policy_compartment_id_in_subtree,
 *     displayName: _var.audit_policy_display_name,
 *     state: _var.audit_policy_state,
 *     targetId: oci_cloud_guard_target.test_target.id,
 * });
 * ```
 */
export function getAuditPoliciesOutput(args: GetAuditPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuditPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getAuditPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getAuditPolicies.
 */
export interface GetAuditPoliciesOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * An optional filter to return only resources that match the specified id.
     */
    auditPolicyId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetAuditPoliciesFilterArgs>[]>;
    /**
     * The current state of the audit policy.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: pulumi.Input<string>;
}
