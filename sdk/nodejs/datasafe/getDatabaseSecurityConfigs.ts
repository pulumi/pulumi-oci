// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Database Security Configs in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all database security configurations in Data Safe.
 *
 * The ListDatabaseSecurityConfigs operation returns only the database security configurations in the specified `compartmentId`.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListDatabaseSecurityConfigs on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseSecurityConfigs = oci.DataSafe.getDatabaseSecurityConfigs({
 *     compartmentId: _var.compartment_id,
 *     accessLevel: _var.database_security_config_access_level,
 *     compartmentIdInSubtree: _var.database_security_config_compartment_id_in_subtree,
 *     databaseSecurityConfigId: oci_data_safe_database_security_config.test_database_security_config.id,
 *     displayName: _var.database_security_config_display_name,
 *     state: _var.database_security_config_state,
 *     targetId: oci_cloud_guard_target.test_target.id,
 *     timeCreatedGreaterThanOrEqualTo: _var.database_security_config_time_created_greater_than_or_equal_to,
 *     timeCreatedLessThan: _var.database_security_config_time_created_less_than,
 * });
 * ```
 */
export function getDatabaseSecurityConfigs(args: GetDatabaseSecurityConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseSecurityConfigsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getDatabaseSecurityConfigs:getDatabaseSecurityConfigs", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "databaseSecurityConfigId": args.databaseSecurityConfigId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
        "targetId": args.targetId,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabaseSecurityConfigs.
 */
export interface GetDatabaseSecurityConfigsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * An optional filter to return only resources that match the specified OCID of the database security configuration resource.
     */
    databaseSecurityConfigId?: string;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: string;
    filters?: inputs.DataSafe.GetDatabaseSecurityConfigsFilter[];
    /**
     * The current state of the database security configuration.
     */
    state?: string;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: string;
    /**
     * A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedGreaterThanOrEqualTo?: string;
    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedLessThan?: string;
}

/**
 * A collection of values returned by getDatabaseSecurityConfigs.
 */
export interface GetDatabaseSecurityConfigsResult {
    readonly accessLevel?: string;
    /**
     * The OCID of the compartment containing the database security config.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * The list of database_security_config_collection.
     */
    readonly databaseSecurityConfigCollections: outputs.DataSafe.GetDatabaseSecurityConfigsDatabaseSecurityConfigCollection[];
    readonly databaseSecurityConfigId?: string;
    /**
     * The display name of the database security config.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataSafe.GetDatabaseSecurityConfigsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the database security config.
     */
    readonly state?: string;
    /**
     * The target OCID corresponding to the database security config.
     */
    readonly targetId?: string;
    readonly timeCreatedGreaterThanOrEqualTo?: string;
    readonly timeCreatedLessThan?: string;
}
/**
 * This data source provides the list of Database Security Configs in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all database security configurations in Data Safe.
 *
 * The ListDatabaseSecurityConfigs operation returns only the database security configurations in the specified `compartmentId`.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListDatabaseSecurityConfigs on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseSecurityConfigs = oci.DataSafe.getDatabaseSecurityConfigs({
 *     compartmentId: _var.compartment_id,
 *     accessLevel: _var.database_security_config_access_level,
 *     compartmentIdInSubtree: _var.database_security_config_compartment_id_in_subtree,
 *     databaseSecurityConfigId: oci_data_safe_database_security_config.test_database_security_config.id,
 *     displayName: _var.database_security_config_display_name,
 *     state: _var.database_security_config_state,
 *     targetId: oci_cloud_guard_target.test_target.id,
 *     timeCreatedGreaterThanOrEqualTo: _var.database_security_config_time_created_greater_than_or_equal_to,
 *     timeCreatedLessThan: _var.database_security_config_time_created_less_than,
 * });
 * ```
 */
export function getDatabaseSecurityConfigsOutput(args: GetDatabaseSecurityConfigsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseSecurityConfigsResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseSecurityConfigs(a, opts))
}

/**
 * A collection of arguments for invoking getDatabaseSecurityConfigs.
 */
export interface GetDatabaseSecurityConfigsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * An optional filter to return only resources that match the specified OCID of the database security configuration resource.
     */
    databaseSecurityConfigId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetDatabaseSecurityConfigsFilterArgs>[]>;
    /**
     * The current state of the database security configuration.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: pulumi.Input<string>;
    /**
     * A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedLessThan?: pulumi.Input<string>;
}
