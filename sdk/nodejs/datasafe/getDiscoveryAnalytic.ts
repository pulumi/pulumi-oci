// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Discovery Analytic resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets consolidated discovery analytics data based on the specified query parameters.
 * If CompartmentIdInSubtreeQueryParam is specified as true, the behaviour
 * is equivalent to accessLevel "ACCESSIBLE" by default.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDiscoveryAnalytic = oci.DataSafe.getDiscoveryAnalytic({
 *     compartmentId: compartmentId,
 *     compartmentIdInSubtree: discoveryAnalyticCompartmentIdInSubtree,
 *     groupBy: discoveryAnalyticGroupBy,
 *     sensitiveDataModelId: testSensitiveDataModel.id,
 *     targetId: testTarget.id,
 * });
 * ```
 */
export function getDiscoveryAnalytic(args: GetDiscoveryAnalyticArgs, opts?: pulumi.InvokeOptions): Promise<GetDiscoveryAnalyticResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getDiscoveryAnalytic:getDiscoveryAnalytic", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "groupBy": args.groupBy,
        "sensitiveDataModelId": args.sensitiveDataModelId,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoveryAnalytic.
 */
export interface GetDiscoveryAnalyticArgs {
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * Attribute by which the discovery analytics data should be grouped.
     */
    groupBy?: string;
    /**
     * A filter to return only the resources that match the specified sensitive data model OCID.
     */
    sensitiveDataModelId?: string;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: string;
}

/**
 * A collection of values returned by getDiscoveryAnalytic.
 */
export interface GetDiscoveryAnalyticResult {
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly groupBy?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An array of discovery analytics summary objects.
     */
    readonly items: outputs.DataSafe.GetDiscoveryAnalyticItem[];
    /**
     * The OCID of the sensitive data model.
     */
    readonly sensitiveDataModelId?: string;
    /**
     * The OCID of the target database.
     */
    readonly targetId?: string;
}
/**
 * This data source provides details about a specific Discovery Analytic resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets consolidated discovery analytics data based on the specified query parameters.
 * If CompartmentIdInSubtreeQueryParam is specified as true, the behaviour
 * is equivalent to accessLevel "ACCESSIBLE" by default.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDiscoveryAnalytic = oci.DataSafe.getDiscoveryAnalytic({
 *     compartmentId: compartmentId,
 *     compartmentIdInSubtree: discoveryAnalyticCompartmentIdInSubtree,
 *     groupBy: discoveryAnalyticGroupBy,
 *     sensitiveDataModelId: testSensitiveDataModel.id,
 *     targetId: testTarget.id,
 * });
 * ```
 */
export function getDiscoveryAnalyticOutput(args: GetDiscoveryAnalyticOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDiscoveryAnalyticResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getDiscoveryAnalytic:getDiscoveryAnalytic", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "groupBy": args.groupBy,
        "sensitiveDataModelId": args.sensitiveDataModelId,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoveryAnalytic.
 */
export interface GetDiscoveryAnalyticOutputArgs {
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * Attribute by which the discovery analytics data should be grouped.
     */
    groupBy?: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the specified sensitive data model OCID.
     */
    sensitiveDataModelId?: pulumi.Input<string>;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: pulumi.Input<string>;
}
