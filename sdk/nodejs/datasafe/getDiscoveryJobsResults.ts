// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Discovery Jobs Results in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of discovery results based on the specified query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDiscoveryJobsResults = oci.DataSafe.getDiscoveryJobsResults({
 *     discoveryJobId: testDiscoveryJob.id,
 *     columnNames: discoveryJobsResultColumnName,
 *     confidenceLevels: discoveryJobsResultConfidenceLevel,
 *     discoveryType: discoveryJobsResultDiscoveryType,
 *     isResultApplied: discoveryJobsResultIsResultApplied,
 *     objects: discoveryJobsResultObject,
 *     plannedAction: discoveryJobsResultPlannedAction,
 *     schemaNames: discoveryJobsResultSchemaName,
 * });
 * ```
 */
export function getDiscoveryJobsResults(args: GetDiscoveryJobsResultsArgs, opts?: pulumi.InvokeOptions): Promise<GetDiscoveryJobsResultsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getDiscoveryJobsResults:getDiscoveryJobsResults", {
        "columnNames": args.columnNames,
        "confidenceLevels": args.confidenceLevels,
        "discoveryJobId": args.discoveryJobId,
        "discoveryType": args.discoveryType,
        "filters": args.filters,
        "isResultApplied": args.isResultApplied,
        "objects": args.objects,
        "plannedAction": args.plannedAction,
        "schemaNames": args.schemaNames,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoveryJobsResults.
 */
export interface GetDiscoveryJobsResultsArgs {
    /**
     * A filter to return only a specific column based on column name.
     */
    columnNames?: string[];
    /**
     * A filter to return the discovery job results with the specified confidence level.  Confidence level of discovery job result associated with a seeded sensitive type can either be HIGH or LOW.  While the confidence level of discovery job result associated with a user defined sensitive will be NONE.
     */
    confidenceLevels?: string[];
    /**
     * The OCID of the discovery job.
     */
    discoveryJobId: string;
    /**
     * A filter to return only the resources that match the specified discovery type.
     */
    discoveryType?: string;
    filters?: inputs.DataSafe.GetDiscoveryJobsResultsFilter[];
    /**
     * A filter to return the discovery result resources based on the value of their isResultApplied attribute.
     */
    isResultApplied?: boolean;
    /**
     * A filter to return only items related to a specific object name.
     */
    objects?: string[];
    /**
     * A filter to return only the resources that match the specified planned action.
     */
    plannedAction?: string;
    /**
     * A filter to return only items related to specific schema name.
     */
    schemaNames?: string[];
}

/**
 * A collection of values returned by getDiscoveryJobsResults.
 */
export interface GetDiscoveryJobsResultsResult {
    /**
     * The name of the sensitive column.
     */
    readonly columnNames?: string[];
    /**
     * The confidence level of the discovery job result associated with the sensitive type. The confidence level for discovery job results can be either HIGH, MEDIUM or LOW.
     */
    readonly confidenceLevels?: string[];
    /**
     * The OCID of the discovery job.
     */
    readonly discoveryJobId: string;
    /**
     * The list of discovery_job_result_collection.
     */
    readonly discoveryJobResultCollections: outputs.DataSafe.GetDiscoveryJobsResultsDiscoveryJobResultCollection[];
    /**
     * The type of the discovery result. It can be one of the following three types: NEW: A new sensitive column in the target database that is not in the sensitive data model. DELETED: A column that is present in the sensitive data model but has been deleted from the target database. MODIFIED: A column that is present in the target database as well as the sensitive data model but some of its attributes have been modified.
     */
    readonly discoveryType?: string;
    readonly filters?: outputs.DataSafe.GetDiscoveryJobsResultsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates whether the discovery result has been processed. You can update this attribute using the PatchDiscoveryJobResults operation to track whether the discovery result has already been processed and applied to the sensitive data model.
     */
    readonly isResultApplied?: boolean;
    /**
     * The database object that contains the sensitive column.
     */
    readonly objects?: string[];
    /**
     * Specifies how to process the discovery result. It's set to NONE by default. Use the PatchDiscoveryJobResults operation to update this attribute. You can choose one of the following options: ACCEPT: To accept the discovery result and update the sensitive data model to reflect the changes. REJECT: To reject the discovery result so that it doesn't change the sensitive data model. INVALIDATE: To invalidate a newly discovered column. It adds the column to the sensitive data model but marks it as invalid. It helps track false positives and ensure that they aren't reported by future discovery jobs. After specifying the planned action, you can use the ApplyDiscoveryJobResults operation to automatically process the discovery results.
     */
    readonly plannedAction?: string;
    /**
     * The database schema that contains the sensitive column.
     */
    readonly schemaNames?: string[];
}
/**
 * This data source provides the list of Discovery Jobs Results in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of discovery results based on the specified query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDiscoveryJobsResults = oci.DataSafe.getDiscoveryJobsResults({
 *     discoveryJobId: testDiscoveryJob.id,
 *     columnNames: discoveryJobsResultColumnName,
 *     confidenceLevels: discoveryJobsResultConfidenceLevel,
 *     discoveryType: discoveryJobsResultDiscoveryType,
 *     isResultApplied: discoveryJobsResultIsResultApplied,
 *     objects: discoveryJobsResultObject,
 *     plannedAction: discoveryJobsResultPlannedAction,
 *     schemaNames: discoveryJobsResultSchemaName,
 * });
 * ```
 */
export function getDiscoveryJobsResultsOutput(args: GetDiscoveryJobsResultsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDiscoveryJobsResultsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getDiscoveryJobsResults:getDiscoveryJobsResults", {
        "columnNames": args.columnNames,
        "confidenceLevels": args.confidenceLevels,
        "discoveryJobId": args.discoveryJobId,
        "discoveryType": args.discoveryType,
        "filters": args.filters,
        "isResultApplied": args.isResultApplied,
        "objects": args.objects,
        "plannedAction": args.plannedAction,
        "schemaNames": args.schemaNames,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoveryJobsResults.
 */
export interface GetDiscoveryJobsResultsOutputArgs {
    /**
     * A filter to return only a specific column based on column name.
     */
    columnNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return the discovery job results with the specified confidence level.  Confidence level of discovery job result associated with a seeded sensitive type can either be HIGH or LOW.  While the confidence level of discovery job result associated with a user defined sensitive will be NONE.
     */
    confidenceLevels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OCID of the discovery job.
     */
    discoveryJobId: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the specified discovery type.
     */
    discoveryType?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetDiscoveryJobsResultsFilterArgs>[]>;
    /**
     * A filter to return the discovery result resources based on the value of their isResultApplied attribute.
     */
    isResultApplied?: pulumi.Input<boolean>;
    /**
     * A filter to return only items related to a specific object name.
     */
    objects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return only the resources that match the specified planned action.
     */
    plannedAction?: pulumi.Input<string>;
    /**
     * A filter to return only items related to specific schema name.
     */
    schemaNames?: pulumi.Input<pulumi.Input<string>[]>;
}
