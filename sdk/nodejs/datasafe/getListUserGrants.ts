// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of List User Grants in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of grants for a particular user in the specified user assessment. A user grant contains details such as the
 * privilege name, type, category, and depth level. The depth level indicates how deep in the hierarchy of roles granted to
 * roles a privilege grant is. The userKey in this operation is a system-generated identifier. Perform the operation ListUsers
 * to get the userKey for a particular user.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testListUserGrants = oci.DataSafe.getListUserGrants({
 *     userAssessmentId: oci_data_safe_user_assessment.test_user_assessment.id,
 *     userKey: _var.list_user_grant_user_key,
 *     depthLevel: _var.list_user_grant_depth_level,
 *     depthLevelGreaterThanOrEqualTo: _var.list_user_grant_depth_level_greater_than_or_equal_to,
 *     depthLevelLessThan: _var.list_user_grant_depth_level_less_than,
 *     grantKey: _var.list_user_grant_grant_key,
 *     grantName: _var.list_user_grant_grant_name,
 *     privilegeCategory: _var.list_user_grant_privilege_category,
 *     privilegeType: _var.list_user_grant_privilege_type,
 * });
 * ```
 */
export function getListUserGrants(args: GetListUserGrantsArgs, opts?: pulumi.InvokeOptions): Promise<GetListUserGrantsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DataSafe/getListUserGrants:getListUserGrants", {
        "depthLevel": args.depthLevel,
        "depthLevelGreaterThanOrEqualTo": args.depthLevelGreaterThanOrEqualTo,
        "depthLevelLessThan": args.depthLevelLessThan,
        "filters": args.filters,
        "grantKey": args.grantKey,
        "grantName": args.grantName,
        "privilegeCategory": args.privilegeCategory,
        "privilegeType": args.privilegeType,
        "userAssessmentId": args.userAssessmentId,
        "userKey": args.userKey,
    }, opts);
}

/**
 * A collection of arguments for invoking getListUserGrants.
 */
export interface GetListUserGrantsArgs {
    /**
     * A filter to return only items that match the specified user grant depth level.
     */
    depthLevel?: number;
    /**
     * A filter to return only items that are at a level greater than or equal to the specified user grant depth level.
     */
    depthLevelGreaterThanOrEqualTo?: number;
    /**
     * A filter to return only items that are at a level less than the specified user grant depth level.
     */
    depthLevelLessThan?: number;
    filters?: inputs.DataSafe.GetListUserGrantsFilter[];
    /**
     * A filter to return only items that match the specified user grant key.
     */
    grantKey?: string;
    /**
     * A filter to return only items that match the specified user grant name.
     */
    grantName?: string;
    /**
     * A filter to return only items that match the specified user privilege category.
     */
    privilegeCategory?: string;
    /**
     * A filter to return only items that match the specified privilege grant type.
     */
    privilegeType?: string;
    /**
     * The OCID of the user assessment.
     */
    userAssessmentId: string;
    /**
     * The unique user key. This is a system-generated identifier. ListUsers gets the user key for a user.
     */
    userKey: string;
}

/**
 * A collection of values returned by getListUserGrants.
 */
export interface GetListUserGrantsResult {
    /**
     * The grant depth level of the indirect grant. An indirectly granted role/privilege is granted to the user through another role. The depth level indicates how deep a privilege is within the grant hierarchy.
     */
    readonly depthLevel?: number;
    readonly depthLevelGreaterThanOrEqualTo?: number;
    readonly depthLevelLessThan?: number;
    readonly filters?: outputs.DataSafe.GetListUserGrantsFilter[];
    readonly grantKey?: string;
    /**
     * The name of a user grant.
     */
    readonly grantName?: string;
    /**
     * The list of grants.
     */
    readonly grants: outputs.DataSafe.GetListUserGrantsGrant[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The privilege category.
     */
    readonly privilegeCategory?: string;
    /**
     * The type of a user grant.
     */
    readonly privilegeType?: string;
    readonly userAssessmentId: string;
    readonly userKey: string;
}

export function getListUserGrantsOutput(args: GetListUserGrantsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetListUserGrantsResult> {
    return pulumi.output(args).apply(a => getListUserGrants(a, opts))
}

/**
 * A collection of arguments for invoking getListUserGrants.
 */
export interface GetListUserGrantsOutputArgs {
    /**
     * A filter to return only items that match the specified user grant depth level.
     */
    depthLevel?: pulumi.Input<number>;
    /**
     * A filter to return only items that are at a level greater than or equal to the specified user grant depth level.
     */
    depthLevelGreaterThanOrEqualTo?: pulumi.Input<number>;
    /**
     * A filter to return only items that are at a level less than the specified user grant depth level.
     */
    depthLevelLessThan?: pulumi.Input<number>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetListUserGrantsFilterArgs>[]>;
    /**
     * A filter to return only items that match the specified user grant key.
     */
    grantKey?: pulumi.Input<string>;
    /**
     * A filter to return only items that match the specified user grant name.
     */
    grantName?: pulumi.Input<string>;
    /**
     * A filter to return only items that match the specified user privilege category.
     */
    privilegeCategory?: pulumi.Input<string>;
    /**
     * A filter to return only items that match the specified privilege grant type.
     */
    privilegeType?: pulumi.Input<string>;
    /**
     * The OCID of the user assessment.
     */
    userAssessmentId: pulumi.Input<string>;
    /**
     * The unique user key. This is a system-generated identifier. ListUsers gets the user key for a user.
     */
    userKey: pulumi.Input<string>;
}
