// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Masking Policies Masking Column resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets the details of the specified masking column.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingPoliciesMaskingColumn = oci.DataSafe.getMaskingPoliciesMaskingColumn({
 *     maskingColumnKey: _var.masking_policies_masking_column_masking_column_key,
 *     maskingPolicyId: oci_data_safe_masking_policy.test_masking_policy.id,
 * });
 * ```
 */
export function getMaskingPoliciesMaskingColumn(args: GetMaskingPoliciesMaskingColumnArgs, opts?: pulumi.InvokeOptions): Promise<GetMaskingPoliciesMaskingColumnResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DataSafe/getMaskingPoliciesMaskingColumn:getMaskingPoliciesMaskingColumn", {
        "maskingColumnKey": args.maskingColumnKey,
        "maskingPolicyId": args.maskingPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaskingPoliciesMaskingColumn.
 */
export interface GetMaskingPoliciesMaskingColumnArgs {
    /**
     * The unique key that identifies the masking column. It's numeric and unique within a masking policy.
     */
    maskingColumnKey: string;
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId: string;
}

/**
 * A collection of values returned by getMaskingPoliciesMaskingColumn.
 */
export interface GetMaskingPoliciesMaskingColumnResult {
    /**
     * An array of child columns that are in referential relationship with the masking column.
     */
    readonly childColumns: string[];
    /**
     * The name of the substitution column.
     */
    readonly columnName: string;
    /**
     * The data type of the masking column.
     */
    readonly dataType: string;
    readonly id: string;
    /**
     * Indicates if data masking is enabled for the masking column.
     */
    readonly isMaskingEnabled: boolean;
    /**
     * The unique key that identifies the masking column. It's numeric and unique within a masking policy.
     */
    readonly key: string;
    /**
     * Details about the current state of the masking column.
     */
    readonly lifecycleDetails: string;
    /**
     * The group of the masking column. All the columns in a group are masked together to ensure  that the masked data across these columns continue to retain the same logical relationship.  For more details, check <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
     */
    readonly maskingColumnGroup: string;
    readonly maskingColumnKey: string;
    /**
     * An array of masking formats assigned to the masking column.
     */
    readonly maskingFormats: outputs.DataSafe.GetMaskingPoliciesMaskingColumnMaskingFormat[];
    /**
     * The OCID of the masking policy that contains the masking column.
     */
    readonly maskingPolicyId: string;
    /**
     * The name of the object (table or editioning view) that contains the database column.
     */
    readonly object: string;
    /**
     * The type of the object that contains the database column.
     */
    readonly objectType: string;
    /**
     * The name of the schema that contains the database column.
     */
    readonly schemaName: string;
    /**
     * The OCID of the sensitive type associated with the masking column.
     */
    readonly sensitiveTypeId: string;
    /**
     * The current state of the masking column.
     */
    readonly state: string;
    /**
     * The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    readonly timeCreated: string;
    /**
     * The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    readonly timeUpdated: string;
}

export function getMaskingPoliciesMaskingColumnOutput(args: GetMaskingPoliciesMaskingColumnOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMaskingPoliciesMaskingColumnResult> {
    return pulumi.output(args).apply(a => getMaskingPoliciesMaskingColumn(a, opts))
}

/**
 * A collection of arguments for invoking getMaskingPoliciesMaskingColumn.
 */
export interface GetMaskingPoliciesMaskingColumnOutputArgs {
    /**
     * The unique key that identifies the masking column. It's numeric and unique within a masking policy.
     */
    maskingColumnKey: pulumi.Input<string>;
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId: pulumi.Input<string>;
}
