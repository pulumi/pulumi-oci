// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Masking Policy Health Report Logs in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of errors and warnings from a masking policy health check.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingPolicyHealthReportLogs = oci.DataSafe.getMaskingPolicyHealthReportLogs({
 *     maskingPolicyHealthReportId: testMaskingPolicyHealthReport.id,
 *     messageType: maskingPolicyHealthReportLogMessageType,
 * });
 * ```
 */
export function getMaskingPolicyHealthReportLogs(args: GetMaskingPolicyHealthReportLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetMaskingPolicyHealthReportLogsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getMaskingPolicyHealthReportLogs:getMaskingPolicyHealthReportLogs", {
        "filters": args.filters,
        "maskingPolicyHealthReportId": args.maskingPolicyHealthReportId,
        "messageType": args.messageType,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaskingPolicyHealthReportLogs.
 */
export interface GetMaskingPolicyHealthReportLogsArgs {
    filters?: inputs.DataSafe.GetMaskingPolicyHealthReportLogsFilter[];
    /**
     * The OCID of the masking health report.
     */
    maskingPolicyHealthReportId: string;
    /**
     * A filter to return only the resources that match the specified log message type.
     */
    messageType?: string;
}

/**
 * A collection of values returned by getMaskingPolicyHealthReportLogs.
 */
export interface GetMaskingPolicyHealthReportLogsResult {
    readonly filters?: outputs.DataSafe.GetMaskingPolicyHealthReportLogsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maskingPolicyHealthReportId: string;
    /**
     * The list of masking_policy_health_report_log_collection.
     */
    readonly maskingPolicyHealthReportLogCollections: outputs.DataSafe.GetMaskingPolicyHealthReportLogsMaskingPolicyHealthReportLogCollection[];
    /**
     * The log entry type.
     */
    readonly messageType?: string;
}
/**
 * This data source provides the list of Masking Policy Health Report Logs in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of errors and warnings from a masking policy health check.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingPolicyHealthReportLogs = oci.DataSafe.getMaskingPolicyHealthReportLogs({
 *     maskingPolicyHealthReportId: testMaskingPolicyHealthReport.id,
 *     messageType: maskingPolicyHealthReportLogMessageType,
 * });
 * ```
 */
export function getMaskingPolicyHealthReportLogsOutput(args: GetMaskingPolicyHealthReportLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMaskingPolicyHealthReportLogsResult> {
    return pulumi.output(args).apply((a: any) => getMaskingPolicyHealthReportLogs(a, opts))
}

/**
 * A collection of arguments for invoking getMaskingPolicyHealthReportLogs.
 */
export interface GetMaskingPolicyHealthReportLogsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetMaskingPolicyHealthReportLogsFilterArgs>[]>;
    /**
     * The OCID of the masking health report.
     */
    maskingPolicyHealthReportId: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the specified log message type.
     */
    messageType?: pulumi.Input<string>;
}
