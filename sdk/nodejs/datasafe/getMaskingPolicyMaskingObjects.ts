// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Masking Policy Masking Objects in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of masking objects present in the specified masking policy and based on the specified query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingPolicyMaskingObjects = oci.DataSafe.getMaskingPolicyMaskingObjects({
 *     maskingPolicyId: testMaskingPolicy.id,
 *     objects: maskingPolicyMaskingObjectObject,
 *     objectTypes: maskingPolicyMaskingObjectObjectType,
 *     schemaNames: maskingPolicyMaskingObjectSchemaName,
 * });
 * ```
 */
export function getMaskingPolicyMaskingObjects(args: GetMaskingPolicyMaskingObjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetMaskingPolicyMaskingObjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getMaskingPolicyMaskingObjects:getMaskingPolicyMaskingObjects", {
        "filters": args.filters,
        "maskingPolicyId": args.maskingPolicyId,
        "objectTypes": args.objectTypes,
        "objects": args.objects,
        "schemaNames": args.schemaNames,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaskingPolicyMaskingObjects.
 */
export interface GetMaskingPolicyMaskingObjectsArgs {
    filters?: inputs.DataSafe.GetMaskingPolicyMaskingObjectsFilter[];
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId: string;
    /**
     * A filter to return only items related to a specific object type.
     */
    objectTypes?: string[];
    /**
     * A filter to return only items related to a specific object name.
     */
    objects?: string[];
    /**
     * A filter to return only items related to specific schema name.
     */
    schemaNames?: string[];
}

/**
 * A collection of values returned by getMaskingPolicyMaskingObjects.
 */
export interface GetMaskingPolicyMaskingObjectsResult {
    readonly filters?: outputs.DataSafe.GetMaskingPolicyMaskingObjectsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of masking_object_collection.
     */
    readonly maskingObjectCollections: outputs.DataSafe.GetMaskingPolicyMaskingObjectsMaskingObjectCollection[];
    readonly maskingPolicyId: string;
    /**
     * The type of the database object that contains the masking column.
     */
    readonly objectTypes?: string[];
    /**
     * The database object that contains the masking column.
     */
    readonly objects?: string[];
    /**
     * The database schema that contains the masking column.
     */
    readonly schemaNames?: string[];
}
/**
 * This data source provides the list of Masking Policy Masking Objects in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of masking objects present in the specified masking policy and based on the specified query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingPolicyMaskingObjects = oci.DataSafe.getMaskingPolicyMaskingObjects({
 *     maskingPolicyId: testMaskingPolicy.id,
 *     objects: maskingPolicyMaskingObjectObject,
 *     objectTypes: maskingPolicyMaskingObjectObjectType,
 *     schemaNames: maskingPolicyMaskingObjectSchemaName,
 * });
 * ```
 */
export function getMaskingPolicyMaskingObjectsOutput(args: GetMaskingPolicyMaskingObjectsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMaskingPolicyMaskingObjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getMaskingPolicyMaskingObjects:getMaskingPolicyMaskingObjects", {
        "filters": args.filters,
        "maskingPolicyId": args.maskingPolicyId,
        "objectTypes": args.objectTypes,
        "objects": args.objects,
        "schemaNames": args.schemaNames,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaskingPolicyMaskingObjects.
 */
export interface GetMaskingPolicyMaskingObjectsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetMaskingPolicyMaskingObjectsFilterArgs>[]>;
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId: pulumi.Input<string>;
    /**
     * A filter to return only items related to a specific object type.
     */
    objectTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return only items related to a specific object name.
     */
    objects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return only items related to specific schema name.
     */
    schemaNames?: pulumi.Input<pulumi.Input<string>[]>;
}
