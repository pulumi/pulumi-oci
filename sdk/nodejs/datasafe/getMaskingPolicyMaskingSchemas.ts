// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Masking Policy Masking Schemas in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of masking schemas present in the specified masking policy and based on the specified query parameters.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingPolicyMaskingSchemas = oci.DataSafe.getMaskingPolicyMaskingSchemas({
 *     maskingPolicyId: testMaskingPolicy.id,
 *     schemaNames: maskingPolicyMaskingSchemaSchemaName,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMaskingPolicyMaskingSchemas(args: GetMaskingPolicyMaskingSchemasArgs, opts?: pulumi.InvokeOptions): Promise<GetMaskingPolicyMaskingSchemasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getMaskingPolicyMaskingSchemas:getMaskingPolicyMaskingSchemas", {
        "filters": args.filters,
        "maskingPolicyId": args.maskingPolicyId,
        "schemaNames": args.schemaNames,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaskingPolicyMaskingSchemas.
 */
export interface GetMaskingPolicyMaskingSchemasArgs {
    filters?: inputs.DataSafe.GetMaskingPolicyMaskingSchemasFilter[];
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId: string;
    /**
     * A filter to return only items related to specific schema name.
     */
    schemaNames?: string[];
}

/**
 * A collection of values returned by getMaskingPolicyMaskingSchemas.
 */
export interface GetMaskingPolicyMaskingSchemasResult {
    readonly filters?: outputs.DataSafe.GetMaskingPolicyMaskingSchemasFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly maskingPolicyId: string;
    /**
     * The list of masking_schema_collection.
     */
    readonly maskingSchemaCollections: outputs.DataSafe.GetMaskingPolicyMaskingSchemasMaskingSchemaCollection[];
    /**
     * The database schema that contains the masking column.
     */
    readonly schemaNames?: string[];
}
/**
 * This data source provides the list of Masking Policy Masking Schemas in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of masking schemas present in the specified masking policy and based on the specified query parameters.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingPolicyMaskingSchemas = oci.DataSafe.getMaskingPolicyMaskingSchemas({
 *     maskingPolicyId: testMaskingPolicy.id,
 *     schemaNames: maskingPolicyMaskingSchemaSchemaName,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMaskingPolicyMaskingSchemasOutput(args: GetMaskingPolicyMaskingSchemasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMaskingPolicyMaskingSchemasResult> {
    return pulumi.output(args).apply((a: any) => getMaskingPolicyMaskingSchemas(a, opts))
}

/**
 * A collection of arguments for invoking getMaskingPolicyMaskingSchemas.
 */
export interface GetMaskingPolicyMaskingSchemasOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetMaskingPolicyMaskingSchemasFilterArgs>[]>;
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId: pulumi.Input<string>;
    /**
     * A filter to return only items related to specific schema name.
     */
    schemaNames?: pulumi.Input<pulumi.Input<string>[]>;
}
