// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Masking Report Masking Errors in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of masking errors in a masking run based on the specified query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingReportMaskingErrors = oci.DataSafe.getMaskingReportMaskingErrors({
 *     maskingReportId: testMaskingReport.id,
 *     stepName: maskingReportMaskingErrorStepName,
 * });
 * ```
 */
export function getMaskingReportMaskingErrors(args: GetMaskingReportMaskingErrorsArgs, opts?: pulumi.InvokeOptions): Promise<GetMaskingReportMaskingErrorsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getMaskingReportMaskingErrors:getMaskingReportMaskingErrors", {
        "filters": args.filters,
        "maskingReportId": args.maskingReportId,
        "stepName": args.stepName,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaskingReportMaskingErrors.
 */
export interface GetMaskingReportMaskingErrorsArgs {
    filters?: inputs.DataSafe.GetMaskingReportMaskingErrorsFilter[];
    /**
     * The OCID of the masking report.
     */
    maskingReportId: string;
    /**
     * A filter to return only masking errors that match the specified step name.
     */
    stepName?: string;
}

/**
 * A collection of values returned by getMaskingReportMaskingErrors.
 */
export interface GetMaskingReportMaskingErrorsResult {
    readonly filters?: outputs.DataSafe.GetMaskingReportMaskingErrorsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of masking_error_collection.
     */
    readonly maskingErrorCollections: outputs.DataSafe.GetMaskingReportMaskingErrorsMaskingErrorCollection[];
    readonly maskingReportId: string;
    /**
     * The stepName of the masking error.
     */
    readonly stepName?: string;
}
/**
 * This data source provides the list of Masking Report Masking Errors in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of masking errors in a masking run based on the specified query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingReportMaskingErrors = oci.DataSafe.getMaskingReportMaskingErrors({
 *     maskingReportId: testMaskingReport.id,
 *     stepName: maskingReportMaskingErrorStepName,
 * });
 * ```
 */
export function getMaskingReportMaskingErrorsOutput(args: GetMaskingReportMaskingErrorsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMaskingReportMaskingErrorsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getMaskingReportMaskingErrors:getMaskingReportMaskingErrors", {
        "filters": args.filters,
        "maskingReportId": args.maskingReportId,
        "stepName": args.stepName,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaskingReportMaskingErrors.
 */
export interface GetMaskingReportMaskingErrorsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetMaskingReportMaskingErrorsFilterArgs>[]>;
    /**
     * The OCID of the masking report.
     */
    maskingReportId: pulumi.Input<string>;
    /**
     * A filter to return only masking errors that match the specified step name.
     */
    stepName?: pulumi.Input<string>;
}
