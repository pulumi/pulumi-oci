// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Report Definitions in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of report definitions.
 * The ListReportDefinitions operation returns only the report definitions in the specified `compartmentId`.
 * It also returns the seeded report definitions which are available to all the compartments.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReportDefinitions = oci.DataSafe.getReportDefinitions({
 *     compartmentId: _var.compartment_id,
 *     accessLevel: _var.report_definition_access_level,
 *     category: _var.report_definition_category,
 *     compartmentIdInSubtree: _var.report_definition_compartment_id_in_subtree,
 *     dataSource: _var.report_definition_data_source,
 *     displayName: _var.report_definition_display_name,
 *     isSeeded: _var.report_definition_is_seeded,
 *     state: _var.report_definition_state,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getReportDefinitions(args: GetReportDefinitionsArgs, opts?: pulumi.InvokeOptions): Promise<GetReportDefinitionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getReportDefinitions:getReportDefinitions", {
        "accessLevel": args.accessLevel,
        "category": args.category,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "dataSource": args.dataSource,
        "displayName": args.displayName,
        "filters": args.filters,
        "isSeeded": args.isSeeded,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getReportDefinitions.
 */
export interface GetReportDefinitionsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * An optional filter to return only resources that match the specified category.
     */
    category?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * Specifies the name of a resource that provides data for the report. For example  alerts, events.
     */
    dataSource?: string;
    /**
     * The name of the report definition to query.
     */
    displayName?: string;
    filters?: inputs.DataSafe.GetReportDefinitionsFilter[];
    /**
     * A boolean flag indicating to list seeded report definitions. Set this parameter to get list of seeded report definitions.
     */
    isSeeded?: boolean;
    /**
     * An optional filter to return only resources that match the specified lifecycle state.
     */
    state?: string;
}

/**
 * A collection of values returned by getReportDefinitions.
 */
export interface GetReportDefinitionsResult {
    readonly accessLevel?: string;
    /**
     * Specifies the name of the category that this report belongs to.
     */
    readonly category?: string;
    /**
     * The OCID of the compartment containing the report definition.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * Specifies the name of a resource that provides data for the report. For example alerts, events.
     */
    readonly dataSource?: string;
    /**
     * Name of the report definition.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataSafe.GetReportDefinitionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Signifies whether the definition is seeded or user defined. Values can either be 'true' or 'false'.
     */
    readonly isSeeded?: boolean;
    /**
     * The list of report_definition_collection.
     */
    readonly reportDefinitionCollections: outputs.DataSafe.GetReportDefinitionsReportDefinitionCollection[];
    /**
     * The current state of the report.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Report Definitions in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of report definitions.
 * The ListReportDefinitions operation returns only the report definitions in the specified `compartmentId`.
 * It also returns the seeded report definitions which are available to all the compartments.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReportDefinitions = oci.DataSafe.getReportDefinitions({
 *     compartmentId: _var.compartment_id,
 *     accessLevel: _var.report_definition_access_level,
 *     category: _var.report_definition_category,
 *     compartmentIdInSubtree: _var.report_definition_compartment_id_in_subtree,
 *     dataSource: _var.report_definition_data_source,
 *     displayName: _var.report_definition_display_name,
 *     isSeeded: _var.report_definition_is_seeded,
 *     state: _var.report_definition_state,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getReportDefinitionsOutput(args: GetReportDefinitionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReportDefinitionsResult> {
    return pulumi.output(args).apply((a: any) => getReportDefinitions(a, opts))
}

/**
 * A collection of arguments for invoking getReportDefinitions.
 */
export interface GetReportDefinitionsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * An optional filter to return only resources that match the specified category.
     */
    category?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * Specifies the name of a resource that provides data for the report. For example  alerts, events.
     */
    dataSource?: pulumi.Input<string>;
    /**
     * The name of the report definition to query.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetReportDefinitionsFilterArgs>[]>;
    /**
     * A boolean flag indicating to list seeded report definitions. Set this parameter to get list of seeded report definitions.
     */
    isSeeded?: pulumi.Input<boolean>;
    /**
     * An optional filter to return only resources that match the specified lifecycle state.
     */
    state?: pulumi.Input<string>;
}
