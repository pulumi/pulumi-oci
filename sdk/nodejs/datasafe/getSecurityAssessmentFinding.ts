// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getSecurityAssessmentFinding(args: GetSecurityAssessmentFindingArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityAssessmentFindingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getSecurityAssessmentFinding:getSecurityAssessmentFinding", {
        "accessLevel": args.accessLevel,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "findingKey": args.findingKey,
        "references": args.references,
        "securityAssessmentId": args.securityAssessmentId,
        "severity": args.severity,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityAssessmentFinding.
 */
export interface GetSecurityAssessmentFindingArgs {
    accessLevel?: string;
    compartmentIdInSubtree?: boolean;
    filters?: inputs.DataSafe.GetSecurityAssessmentFindingFilter[];
    findingKey?: string;
    references?: string;
    securityAssessmentId: string;
    severity?: string;
}

/**
 * A collection of values returned by getSecurityAssessmentFinding.
 */
export interface GetSecurityAssessmentFindingResult {
    readonly accessLevel?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.DataSafe.GetSecurityAssessmentFindingFilter[];
    readonly findingKey?: string;
    readonly findings?: outputs.DataSafe.GetSecurityAssessmentFindingFinding[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    readonly references?: string;
    readonly securityAssessmentId: string;
    readonly severity?: string;
}
export function getSecurityAssessmentFindingOutput(args: GetSecurityAssessmentFindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityAssessmentFindingResult> {
    return pulumi.output(args).apply((a: any) => getSecurityAssessmentFinding(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityAssessmentFinding.
 */
export interface GetSecurityAssessmentFindingOutputArgs {
    accessLevel?: pulumi.Input<string>;
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetSecurityAssessmentFindingFilterArgs>[]>;
    findingKey?: pulumi.Input<string>;
    references?: pulumi.Input<string>;
    securityAssessmentId: pulumi.Input<string>;
    severity?: pulumi.Input<string>;
}
