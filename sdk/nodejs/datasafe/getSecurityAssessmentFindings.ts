// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service.
 *
 * List all the findings from all the targets in the specified assessment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityAssessmentFindings = oci.DataSafe.getSecurityAssessmentFindings({
 *     securityAssessmentId: oci_data_safe_security_assessment.test_security_assessment.id,
 *     accessLevel: _var.security_assessment_finding_access_level,
 *     compartmentIdInSubtree: _var.security_assessment_finding_compartment_id_in_subtree,
 *     findingKey: _var.security_assessment_finding_finding_key,
 *     severity: _var.security_assessment_finding_severity,
 * });
 * ```
 */
export function getSecurityAssessmentFindings(args: GetSecurityAssessmentFindingsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityAssessmentFindingsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DataSafe/getSecurityAssessmentFindings:getSecurityAssessmentFindings", {
        "accessLevel": args.accessLevel,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "findingKey": args.findingKey,
        "securityAssessmentId": args.securityAssessmentId,
        "severity": args.severity,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityAssessmentFindings.
 */
export interface GetSecurityAssessmentFindingsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    filters?: inputs.DataSafe.GetSecurityAssessmentFindingsFilter[];
    /**
     * Each finding has a key. This key is same for the finding across targets
     */
    findingKey?: string;
    /**
     * The OCID of the security assessment.
     */
    securityAssessmentId: string;
    /**
     * A filter to return only findings of a particular risk level.
     */
    severity?: string;
}

/**
 * A collection of values returned by getSecurityAssessmentFindings.
 */
export interface GetSecurityAssessmentFindingsResult {
    readonly accessLevel?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.DataSafe.GetSecurityAssessmentFindingsFilter[];
    readonly findingKey?: string;
    /**
     * The list of findings.
     */
    readonly findings: outputs.DataSafe.GetSecurityAssessmentFindingsFinding[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly securityAssessmentId: string;
    /**
     * The severity of the finding.
     */
    readonly severity?: string;
}

export function getSecurityAssessmentFindingsOutput(args: GetSecurityAssessmentFindingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityAssessmentFindingsResult> {
    return pulumi.output(args).apply(a => getSecurityAssessmentFindings(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityAssessmentFindings.
 */
export interface GetSecurityAssessmentFindingsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetSecurityAssessmentFindingsFilterArgs>[]>;
    /**
     * Each finding has a key. This key is same for the finding across targets
     */
    findingKey?: pulumi.Input<string>;
    /**
     * The OCID of the security assessment.
     */
    securityAssessmentId: pulumi.Input<string>;
    /**
     * A filter to return only findings of a particular risk level.
     */
    severity?: pulumi.Input<string>;
}
