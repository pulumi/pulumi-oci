// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service.
 *
 * List all the findings from all the targets in the specified compartment.
 */
export function getSecurityAssessmentFindings(args: GetSecurityAssessmentFindingsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityAssessmentFindingsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getSecurityAssessmentFindings:getSecurityAssessmentFindings", {
        "accessLevel": args.accessLevel,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "findingKey": args.findingKey,
        "references": args.references,
        "securityAssessmentId": args.securityAssessmentId,
        "severity": args.severity,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityAssessmentFindings.
 */
export interface GetSecurityAssessmentFindingsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    filters?: inputs.DataSafe.GetSecurityAssessmentFindingsFilter[];
    /**
     * Each finding in security assessment has an associated key (think of key as a finding's name). For a given finding, the key will be the same across targets. The user can use these keys to filter the findings.
     */
    findingKey?: string;
    /**
     * An optional filter to return only findings that match the specified reference.
     */
    references?: string;
    /**
     * The OCID of the security assessment.
     */
    securityAssessmentId: string;
    /**
     * A filter to return only findings of a particular risk level.
     */
    severity?: string;
}

/**
 * A collection of values returned by getSecurityAssessmentFindings.
 */
export interface GetSecurityAssessmentFindingsResult {
    readonly accessLevel?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.DataSafe.GetSecurityAssessmentFindingsFilter[];
    readonly findingKey?: string;
    /**
     * The list of findings.
     */
    readonly findings: outputs.DataSafe.GetSecurityAssessmentFindingsFinding[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Provides information on whether the finding is related to a CIS Oracle Database Benchmark recommendation, a STIG rule, or a GDPR Article/Recital.
     */
    readonly references?: string;
    readonly securityAssessmentId: string;
    /**
     * The severity of the finding.
     */
    readonly severity?: string;
}
/**
 * This data source provides the list of Security Assessment Findings in Oracle Cloud Infrastructure Data Safe service.
 *
 * List all the findings from all the targets in the specified compartment.
 */
export function getSecurityAssessmentFindingsOutput(args: GetSecurityAssessmentFindingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityAssessmentFindingsResult> {
    return pulumi.output(args).apply((a: any) => getSecurityAssessmentFindings(a, opts))
}

/**
 * A collection of arguments for invoking getSecurityAssessmentFindings.
 */
export interface GetSecurityAssessmentFindingsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetSecurityAssessmentFindingsFilterArgs>[]>;
    /**
     * Each finding in security assessment has an associated key (think of key as a finding's name). For a given finding, the key will be the same across targets. The user can use these keys to filter the findings.
     */
    findingKey?: pulumi.Input<string>;
    /**
     * An optional filter to return only findings that match the specified reference.
     */
    references?: pulumi.Input<string>;
    /**
     * The OCID of the security assessment.
     */
    securityAssessmentId: pulumi.Input<string>;
    /**
     * A filter to return only findings of a particular risk level.
     */
    severity?: pulumi.Input<string>;
}
