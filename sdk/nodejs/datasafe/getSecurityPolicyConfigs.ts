// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Security Policy Configs in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all security policy configurations in Data Safe.
 *
 * The ListSecurityPolicyConfigs operation returns only the security policy configurations in the specified `compartmentId`.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListSecurityPolicyConfigs on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityPolicyConfigs = oci.DataSafe.getSecurityPolicyConfigs({
 *     compartmentId: compartmentId,
 *     accessLevel: securityPolicyConfigAccessLevel,
 *     compartmentIdInSubtree: securityPolicyConfigCompartmentIdInSubtree,
 *     displayName: securityPolicyConfigDisplayName,
 *     securityPolicyConfigId: testSecurityPolicyConfig.id,
 *     securityPolicyId: testSecurityPolicy.id,
 *     state: securityPolicyConfigState,
 *     timeCreatedGreaterThanOrEqualTo: securityPolicyConfigTimeCreatedGreaterThanOrEqualTo,
 *     timeCreatedLessThan: securityPolicyConfigTimeCreatedLessThan,
 * });
 * ```
 */
export function getSecurityPolicyConfigs(args: GetSecurityPolicyConfigsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityPolicyConfigsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getSecurityPolicyConfigs:getSecurityPolicyConfigs", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "securityPolicyConfigId": args.securityPolicyConfigId,
        "securityPolicyId": args.securityPolicyId,
        "state": args.state,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityPolicyConfigs.
 */
export interface GetSecurityPolicyConfigsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: string;
    filters?: inputs.DataSafe.GetSecurityPolicyConfigsFilter[];
    /**
     * An optional filter to return only resources that match the specified OCID of the security policy configuration resource.
     */
    securityPolicyConfigId?: string;
    /**
     * An optional filter to return only resources that match the specified OCID of the security policy resource.
     */
    securityPolicyId?: string;
    /**
     * The current state of the security policy configuration resource.
     */
    state?: string;
    /**
     * A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedGreaterThanOrEqualTo?: string;
    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedLessThan?: string;
}

/**
 * A collection of values returned by getSecurityPolicyConfigs.
 */
export interface GetSecurityPolicyConfigsResult {
    readonly accessLevel?: string;
    /**
     * The OCID of the compartment containing the security policy configuration.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * The display name of the security policy configuration.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataSafe.GetSecurityPolicyConfigsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of security_policy_config_collection.
     */
    readonly securityPolicyConfigCollections: outputs.DataSafe.GetSecurityPolicyConfigsSecurityPolicyConfigCollection[];
    readonly securityPolicyConfigId?: string;
    /**
     * The OCID of the security policy corresponding to the security policy configuration.
     */
    readonly securityPolicyId?: string;
    /**
     * The current state of the security policy configuration.
     */
    readonly state?: string;
    readonly timeCreatedGreaterThanOrEqualTo?: string;
    readonly timeCreatedLessThan?: string;
}
/**
 * This data source provides the list of Security Policy Configs in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all security policy configurations in Data Safe.
 *
 * The ListSecurityPolicyConfigs operation returns only the security policy configurations in the specified `compartmentId`.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListSecurityPolicyConfigs on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityPolicyConfigs = oci.DataSafe.getSecurityPolicyConfigs({
 *     compartmentId: compartmentId,
 *     accessLevel: securityPolicyConfigAccessLevel,
 *     compartmentIdInSubtree: securityPolicyConfigCompartmentIdInSubtree,
 *     displayName: securityPolicyConfigDisplayName,
 *     securityPolicyConfigId: testSecurityPolicyConfig.id,
 *     securityPolicyId: testSecurityPolicy.id,
 *     state: securityPolicyConfigState,
 *     timeCreatedGreaterThanOrEqualTo: securityPolicyConfigTimeCreatedGreaterThanOrEqualTo,
 *     timeCreatedLessThan: securityPolicyConfigTimeCreatedLessThan,
 * });
 * ```
 */
export function getSecurityPolicyConfigsOutput(args: GetSecurityPolicyConfigsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecurityPolicyConfigsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getSecurityPolicyConfigs:getSecurityPolicyConfigs", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "securityPolicyConfigId": args.securityPolicyConfigId,
        "securityPolicyId": args.securityPolicyId,
        "state": args.state,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityPolicyConfigs.
 */
export interface GetSecurityPolicyConfigsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetSecurityPolicyConfigsFilterArgs>[]>;
    /**
     * An optional filter to return only resources that match the specified OCID of the security policy configuration resource.
     */
    securityPolicyConfigId?: pulumi.Input<string>;
    /**
     * An optional filter to return only resources that match the specified OCID of the security policy resource.
     */
    securityPolicyId?: pulumi.Input<string>;
    /**
     * The current state of the security policy configuration resource.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedLessThan?: pulumi.Input<string>;
}
