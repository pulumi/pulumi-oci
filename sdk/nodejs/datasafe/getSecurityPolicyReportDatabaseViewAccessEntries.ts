// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Security Policy Report Database View Access Entries in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all database view access entries in Data Safe.
 *
 * The ListDatabaseViewAccessEntries operation returns only the database view access objects for the specified security policy report.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityPolicyReportDatabaseViewAccessEntries = oci.DataSafe.getSecurityPolicyReportDatabaseViewAccessEntries({
 *     securityPolicyReportId: testSecurityPolicyReport.id,
 *     scimQuery: securityPolicyReportDatabaseViewAccessEntryScimQuery,
 *     targetId: testTarget.id,
 * });
 * ```
 */
export function getSecurityPolicyReportDatabaseViewAccessEntries(args: GetSecurityPolicyReportDatabaseViewAccessEntriesArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityPolicyReportDatabaseViewAccessEntriesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getSecurityPolicyReportDatabaseViewAccessEntries:getSecurityPolicyReportDatabaseViewAccessEntries", {
        "filters": args.filters,
        "scimQuery": args.scimQuery,
        "securityPolicyReportId": args.securityPolicyReportId,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityPolicyReportDatabaseViewAccessEntries.
 */
export interface GetSecurityPolicyReportDatabaseViewAccessEntriesArgs {
    filters?: inputs.DataSafe.GetSecurityPolicyReportDatabaseViewAccessEntriesFilter[];
    /**
     * The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
     *
     * **Example:** query=(accessType eq 'SELECT') and (grantee eq 'ADMIN')
     */
    scimQuery?: string;
    /**
     * The OCID of the security policy report resource.
     */
    securityPolicyReportId: string;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: string;
}

/**
 * A collection of values returned by getSecurityPolicyReportDatabaseViewAccessEntries.
 */
export interface GetSecurityPolicyReportDatabaseViewAccessEntriesResult {
    /**
     * The list of database_view_access_entry_collection.
     */
    readonly databaseViewAccessEntryCollections: outputs.DataSafe.GetSecurityPolicyReportDatabaseViewAccessEntriesDatabaseViewAccessEntryCollection[];
    readonly filters?: outputs.DataSafe.GetSecurityPolicyReportDatabaseViewAccessEntriesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly scimQuery?: string;
    readonly securityPolicyReportId: string;
    /**
     * The OCID of the of the  target database.
     */
    readonly targetId?: string;
}
/**
 * This data source provides the list of Security Policy Report Database View Access Entries in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all database view access entries in Data Safe.
 *
 * The ListDatabaseViewAccessEntries operation returns only the database view access objects for the specified security policy report.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityPolicyReportDatabaseViewAccessEntries = oci.DataSafe.getSecurityPolicyReportDatabaseViewAccessEntries({
 *     securityPolicyReportId: testSecurityPolicyReport.id,
 *     scimQuery: securityPolicyReportDatabaseViewAccessEntryScimQuery,
 *     targetId: testTarget.id,
 * });
 * ```
 */
export function getSecurityPolicyReportDatabaseViewAccessEntriesOutput(args: GetSecurityPolicyReportDatabaseViewAccessEntriesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityPolicyReportDatabaseViewAccessEntriesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getSecurityPolicyReportDatabaseViewAccessEntries:getSecurityPolicyReportDatabaseViewAccessEntries", {
        "filters": args.filters,
        "scimQuery": args.scimQuery,
        "securityPolicyReportId": args.securityPolicyReportId,
        "targetId": args.targetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityPolicyReportDatabaseViewAccessEntries.
 */
export interface GetSecurityPolicyReportDatabaseViewAccessEntriesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetSecurityPolicyReportDatabaseViewAccessEntriesFilterArgs>[]>;
    /**
     * The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
     *
     * **Example:** query=(accessType eq 'SELECT') and (grantee eq 'ADMIN')
     */
    scimQuery?: pulumi.Input<string>;
    /**
     * The OCID of the security policy report resource.
     */
    securityPolicyReportId: pulumi.Input<string>;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: pulumi.Input<string>;
}
