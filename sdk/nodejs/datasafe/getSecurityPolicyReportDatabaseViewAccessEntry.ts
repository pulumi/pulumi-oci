// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Security Policy Report Database View Access Entry resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a database view access object by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityPolicyReportDatabaseViewAccessEntry = oci.DataSafe.getSecurityPolicyReportDatabaseViewAccessEntry({
 *     databaseViewAccessEntryKey: securityPolicyReportDatabaseViewAccessEntryDatabaseViewAccessEntryKey,
 *     securityPolicyReportId: testSecurityPolicyReport.id,
 * });
 * ```
 */
export function getSecurityPolicyReportDatabaseViewAccessEntry(args: GetSecurityPolicyReportDatabaseViewAccessEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityPolicyReportDatabaseViewAccessEntryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getSecurityPolicyReportDatabaseViewAccessEntry:getSecurityPolicyReportDatabaseViewAccessEntry", {
        "databaseViewAccessEntryKey": args.databaseViewAccessEntryKey,
        "securityPolicyReportId": args.securityPolicyReportId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityPolicyReportDatabaseViewAccessEntry.
 */
export interface GetSecurityPolicyReportDatabaseViewAccessEntryArgs {
    /**
     * The unique key that identifies the view access object. This is a system-generated identifier.
     */
    databaseViewAccessEntryKey: string;
    /**
     * The OCID of the security policy report resource.
     */
    securityPolicyReportId: string;
}

/**
 * A collection of values returned by getSecurityPolicyReportDatabaseViewAccessEntry.
 */
export interface GetSecurityPolicyReportDatabaseViewAccessEntryResult {
    /**
     * The type of the access the user has on the table, there can be one or more from SELECT, UPDATE, INSERT or DELETE.
     */
    readonly accessType: string;
    /**
     * If there are column level privileges on a table or view.
     */
    readonly columnName: string;
    readonly databaseViewAccessEntryKey: string;
    /**
     * This can be empty in case of direct grant, in case of indirect grant, this attribute displays the name of the  role which is granted to the user though which the user has access to the table.
     */
    readonly grantFromRole: string;
    /**
     * Grantee is the user who can access the table or view
     */
    readonly grantee: string;
    /**
     * The user who granted the privilege.
     */
    readonly grantor: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates whether the table access is constrained via Oracle Database Vault.
     */
    readonly isAccessConstrainedByDatabaseVault: boolean;
    /**
     * Indicates whether the view access is constrained via Real Application Security.
     */
    readonly isAccessConstrainedByRealApplicationSecurity: boolean;
    /**
     * Indicates whether the view access is constrained via Oracle Data Redaction.
     */
    readonly isAccessConstrainedByRedaction: boolean;
    /**
     * Indicates whether the view access is constrained via Oracle Database SQL Firewall.
     */
    readonly isAccessConstrainedBySqlFirewall: boolean;
    /**
     * Indicates whether the view access is constrained via Virtual Private Database.
     */
    readonly isAccessConstrainedByVirtualPrivateDatabase: boolean;
    /**
     * The unique key that identifies the table access report. It is numeric and unique within a security policy report.
     */
    readonly key: string;
    /**
     * The name of the privilege.
     */
    readonly privilege: string;
    /**
     * Indicates whether the grantee can grant this privilege to other users. Privileges can be granted to a user or role with  GRANT_OPTION or ADMIN_OPTION
     */
    readonly privilegeGrantable: string;
    /**
     * Type of the privilege user has, this includes System Privilege, Schema Privilege, Object Privilege, Column Privilege, Owner or Schema Privilege on a schema.
     */
    readonly privilegeType: string;
    readonly securityPolicyReportId: string;
    /**
     * The name of the database table the user has access to.
     */
    readonly tableName: string;
    /**
     * The name of the schema the table belongs to.
     */
    readonly tableSchema: string;
    /**
     * The OCID of the of the  target database.
     */
    readonly targetId: string;
    /**
     * The name of the view.
     */
    readonly viewName: string;
    /**
     * The name of the schema.
     */
    readonly viewSchema: string;
    /**
     * Definition of the view.
     */
    readonly viewText: string;
}
/**
 * This data source provides details about a specific Security Policy Report Database View Access Entry resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a database view access object by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityPolicyReportDatabaseViewAccessEntry = oci.DataSafe.getSecurityPolicyReportDatabaseViewAccessEntry({
 *     databaseViewAccessEntryKey: securityPolicyReportDatabaseViewAccessEntryDatabaseViewAccessEntryKey,
 *     securityPolicyReportId: testSecurityPolicyReport.id,
 * });
 * ```
 */
export function getSecurityPolicyReportDatabaseViewAccessEntryOutput(args: GetSecurityPolicyReportDatabaseViewAccessEntryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecurityPolicyReportDatabaseViewAccessEntryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getSecurityPolicyReportDatabaseViewAccessEntry:getSecurityPolicyReportDatabaseViewAccessEntry", {
        "databaseViewAccessEntryKey": args.databaseViewAccessEntryKey,
        "securityPolicyReportId": args.securityPolicyReportId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityPolicyReportDatabaseViewAccessEntry.
 */
export interface GetSecurityPolicyReportDatabaseViewAccessEntryOutputArgs {
    /**
     * The unique key that identifies the view access object. This is a system-generated identifier.
     */
    databaseViewAccessEntryKey: pulumi.Input<string>;
    /**
     * The OCID of the security policy report resource.
     */
    securityPolicyReportId: pulumi.Input<string>;
}
