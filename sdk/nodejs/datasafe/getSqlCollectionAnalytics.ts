// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Sql Collection Analytics in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all SQL collection analytics in Data Safe.
 *
 * The ListSqlCollectionAnalytics operation returns only the analytics for the SQL collections in the specified `compartmentId`.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListSqlCollections on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSqlCollectionAnalytics = oci.DataSafe.getSqlCollectionAnalytics({
 *     compartmentId: _var.compartment_id,
 *     accessLevel: _var.sql_collection_analytic_access_level,
 *     compartmentIdInSubtree: _var.sql_collection_analytic_compartment_id_in_subtree,
 *     groupBies: _var.sql_collection_analytic_group_by,
 *     state: _var.sql_collection_analytic_state,
 *     targetId: oci_cloud_guard_target.test_target.id,
 *     timeEnded: _var.sql_collection_analytic_time_ended,
 *     timeStarted: _var.sql_collection_analytic_time_started,
 * });
 * ```
 */
export function getSqlCollectionAnalytics(args: GetSqlCollectionAnalyticsArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlCollectionAnalyticsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getSqlCollectionAnalytics:getSqlCollectionAnalytics", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "groupBies": args.groupBies,
        "state": args.state,
        "targetId": args.targetId,
        "timeEnded": args.timeEnded,
        "timeStarted": args.timeStarted,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlCollectionAnalytics.
 */
export interface GetSqlCollectionAnalyticsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    filters?: inputs.DataSafe.GetSqlCollectionAnalyticsFilter[];
    /**
     * The group by parameter to summarize SQL collection aggregation.
     */
    groupBies?: string[];
    /**
     * The current state of the SQL collection.
     */
    state?: string;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: string;
    /**
     * An optional filter to return the stats of the SQL collection logs collected before the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeEnded?: string;
    /**
     * An optional filter to return the stats of the SQL collection logs collected after the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeStarted?: string;
}

/**
 * A collection of values returned by getSqlCollectionAnalytics.
 */
export interface GetSqlCollectionAnalyticsResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.DataSafe.GetSqlCollectionAnalyticsFilter[];
    readonly groupBies?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * The list of sql_collection_analytics_collection.
     */
    readonly sqlCollectionAnalyticsCollections?: outputs.DataSafe.GetSqlCollectionAnalyticsSqlCollectionAnalyticsCollection[];
    /**
     * The current state of the SQL collection.
     */
    readonly state?: string;
    /**
     * The OCID of the target corresponding to the security policy deployment.
     */
    readonly targetId?: string;
    readonly timeEnded?: string;
    readonly timeStarted?: string;
}
/**
 * This data source provides the list of Sql Collection Analytics in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all SQL collection analytics in Data Safe.
 *
 * The ListSqlCollectionAnalytics operation returns only the analytics for the SQL collections in the specified `compartmentId`.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListSqlCollections on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSqlCollectionAnalytics = oci.DataSafe.getSqlCollectionAnalytics({
 *     compartmentId: _var.compartment_id,
 *     accessLevel: _var.sql_collection_analytic_access_level,
 *     compartmentIdInSubtree: _var.sql_collection_analytic_compartment_id_in_subtree,
 *     groupBies: _var.sql_collection_analytic_group_by,
 *     state: _var.sql_collection_analytic_state,
 *     targetId: oci_cloud_guard_target.test_target.id,
 *     timeEnded: _var.sql_collection_analytic_time_ended,
 *     timeStarted: _var.sql_collection_analytic_time_started,
 * });
 * ```
 */
export function getSqlCollectionAnalyticsOutput(args: GetSqlCollectionAnalyticsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlCollectionAnalyticsResult> {
    return pulumi.output(args).apply((a: any) => getSqlCollectionAnalytics(a, opts))
}

/**
 * A collection of arguments for invoking getSqlCollectionAnalytics.
 */
export interface GetSqlCollectionAnalyticsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetSqlCollectionAnalyticsFilterArgs>[]>;
    /**
     * The group by parameter to summarize SQL collection aggregation.
     */
    groupBies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The current state of the SQL collection.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: pulumi.Input<string>;
    /**
     * An optional filter to return the stats of the SQL collection logs collected before the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeEnded?: pulumi.Input<string>;
    /**
     * An optional filter to return the stats of the SQL collection logs collected after the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeStarted?: pulumi.Input<string>;
}
