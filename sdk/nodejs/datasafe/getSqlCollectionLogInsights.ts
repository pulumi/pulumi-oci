// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Sql Collection Log Insights in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of the SQL collection log analytics.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSqlCollectionLogInsights = oci.DataSafe.getSqlCollectionLogInsights({
 *     sqlCollectionId: testSqlCollection.id,
 *     timeEnded: sqlCollectionLogInsightTimeEnded,
 *     timeStarted: sqlCollectionLogInsightTimeStarted,
 *     groupBy: sqlCollectionLogInsightGroupBy,
 * });
 * ```
 */
export function getSqlCollectionLogInsights(args: GetSqlCollectionLogInsightsArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlCollectionLogInsightsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getSqlCollectionLogInsights:getSqlCollectionLogInsights", {
        "filters": args.filters,
        "groupBy": args.groupBy,
        "sqlCollectionId": args.sqlCollectionId,
        "timeEnded": args.timeEnded,
        "timeStarted": args.timeStarted,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlCollectionLogInsights.
 */
export interface GetSqlCollectionLogInsightsArgs {
    filters?: inputs.DataSafe.GetSqlCollectionLogInsightsFilter[];
    /**
     * The group by parameter to summarize SQL collection log insights aggregation.
     */
    groupBy?: string;
    /**
     * The OCID of the SQL collection resource.
     */
    sqlCollectionId: string;
    /**
     * An optional filter to return the stats of the SQL collection logs collected before the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeEnded: string;
    /**
     * An optional filter to return the stats of the SQL collection logs collected after the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeStarted: string;
}

/**
 * A collection of values returned by getSqlCollectionLogInsights.
 */
export interface GetSqlCollectionLogInsightsResult {
    readonly filters?: outputs.DataSafe.GetSqlCollectionLogInsightsFilter[];
    readonly groupBy?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly sqlCollectionId: string;
    /**
     * The list of sql_collection_log_insights_collection.
     */
    readonly sqlCollectionLogInsightsCollections: outputs.DataSafe.GetSqlCollectionLogInsightsSqlCollectionLogInsightsCollection[];
    /**
     * The time at which the aggregation ended.
     */
    readonly timeEnded: string;
    /**
     * The time at which the aggregation started.
     */
    readonly timeStarted: string;
}
/**
 * This data source provides the list of Sql Collection Log Insights in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of the SQL collection log analytics.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSqlCollectionLogInsights = oci.DataSafe.getSqlCollectionLogInsights({
 *     sqlCollectionId: testSqlCollection.id,
 *     timeEnded: sqlCollectionLogInsightTimeEnded,
 *     timeStarted: sqlCollectionLogInsightTimeStarted,
 *     groupBy: sqlCollectionLogInsightGroupBy,
 * });
 * ```
 */
export function getSqlCollectionLogInsightsOutput(args: GetSqlCollectionLogInsightsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlCollectionLogInsightsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getSqlCollectionLogInsights:getSqlCollectionLogInsights", {
        "filters": args.filters,
        "groupBy": args.groupBy,
        "sqlCollectionId": args.sqlCollectionId,
        "timeEnded": args.timeEnded,
        "timeStarted": args.timeStarted,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlCollectionLogInsights.
 */
export interface GetSqlCollectionLogInsightsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetSqlCollectionLogInsightsFilterArgs>[]>;
    /**
     * The group by parameter to summarize SQL collection log insights aggregation.
     */
    groupBy?: pulumi.Input<string>;
    /**
     * The OCID of the SQL collection resource.
     */
    sqlCollectionId: pulumi.Input<string>;
    /**
     * An optional filter to return the stats of the SQL collection logs collected before the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeEnded: pulumi.Input<string>;
    /**
     * An optional filter to return the stats of the SQL collection logs collected after the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeStarted: pulumi.Input<string>;
}
