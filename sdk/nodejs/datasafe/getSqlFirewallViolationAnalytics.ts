// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Sql Firewall Violation Analytics in Oracle Cloud Infrastructure Data Safe service.
 *
 * Returns the aggregation details of the SQL Firewall violations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSqlFirewallViolationAnalytics = oci.DataSafe.getSqlFirewallViolationAnalytics({
 *     compartmentId: compartmentId,
 *     accessLevel: sqlFirewallViolationAnalyticAccessLevel,
 *     compartmentIdInSubtree: sqlFirewallViolationAnalyticCompartmentIdInSubtree,
 *     groupBies: sqlFirewallViolationAnalyticGroupBy,
 *     queryTimeZone: sqlFirewallViolationAnalyticQueryTimeZone,
 *     scimQuery: sqlFirewallViolationAnalyticScimQuery,
 *     summaryFields: sqlFirewallViolationAnalyticSummaryField,
 *     timeEnded: sqlFirewallViolationAnalyticTimeEnded,
 *     timeStarted: sqlFirewallViolationAnalyticTimeStarted,
 * });
 * ```
 */
export function getSqlFirewallViolationAnalytics(args: GetSqlFirewallViolationAnalyticsArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlFirewallViolationAnalyticsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getSqlFirewallViolationAnalytics:getSqlFirewallViolationAnalytics", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "groupBies": args.groupBies,
        "queryTimeZone": args.queryTimeZone,
        "scimQuery": args.scimQuery,
        "summaryFields": args.summaryFields,
        "timeEnded": args.timeEnded,
        "timeStarted": args.timeStarted,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlFirewallViolationAnalytics.
 */
export interface GetSqlFirewallViolationAnalyticsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    filters?: inputs.DataSafe.GetSqlFirewallViolationAnalyticsFilter[];
    /**
     * A groupBy can only be used in combination with summaryField parameter. A groupBy value has to be a subset of the values mentioned in summaryField parameter.
     */
    groupBies?: string[];
    /**
     * Default time zone is UTC if no time zone provided. The date-time considerations of the resource will be in accordance with the specified time zone.
     */
    queryTimeZone?: string;
    /**
     * The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
     *
     * **Example:** query=(operationTime ge '2021-06-04T01-00-26') and (violationAction eq 'BLOCKED')
     */
    scimQuery?: string;
    /**
     * Specifies a subset of summarized fields to be returned in the response.
     */
    summaryFields?: string[];
    /**
     * An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeEnded?: string;
    /**
     * An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeStarted?: string;
}

/**
 * A collection of values returned by getSqlFirewallViolationAnalytics.
 */
export interface GetSqlFirewallViolationAnalyticsResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.DataSafe.GetSqlFirewallViolationAnalyticsFilter[];
    readonly groupBies?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly queryTimeZone?: string;
    readonly scimQuery?: string;
    /**
     * The list of sql_firewall_violation_analytics_collection.
     */
    readonly sqlFirewallViolationAnalyticsCollections: outputs.DataSafe.GetSqlFirewallViolationAnalyticsSqlFirewallViolationAnalyticsCollection[];
    readonly summaryFields?: string[];
    /**
     * The time at which the aggregation ended.
     */
    readonly timeEnded?: string;
    /**
     * The time at which the aggregation started.
     */
    readonly timeStarted?: string;
}
/**
 * This data source provides the list of Sql Firewall Violation Analytics in Oracle Cloud Infrastructure Data Safe service.
 *
 * Returns the aggregation details of the SQL Firewall violations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSqlFirewallViolationAnalytics = oci.DataSafe.getSqlFirewallViolationAnalytics({
 *     compartmentId: compartmentId,
 *     accessLevel: sqlFirewallViolationAnalyticAccessLevel,
 *     compartmentIdInSubtree: sqlFirewallViolationAnalyticCompartmentIdInSubtree,
 *     groupBies: sqlFirewallViolationAnalyticGroupBy,
 *     queryTimeZone: sqlFirewallViolationAnalyticQueryTimeZone,
 *     scimQuery: sqlFirewallViolationAnalyticScimQuery,
 *     summaryFields: sqlFirewallViolationAnalyticSummaryField,
 *     timeEnded: sqlFirewallViolationAnalyticTimeEnded,
 *     timeStarted: sqlFirewallViolationAnalyticTimeStarted,
 * });
 * ```
 */
export function getSqlFirewallViolationAnalyticsOutput(args: GetSqlFirewallViolationAnalyticsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSqlFirewallViolationAnalyticsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getSqlFirewallViolationAnalytics:getSqlFirewallViolationAnalytics", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "groupBies": args.groupBies,
        "queryTimeZone": args.queryTimeZone,
        "scimQuery": args.scimQuery,
        "summaryFields": args.summaryFields,
        "timeEnded": args.timeEnded,
        "timeStarted": args.timeStarted,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlFirewallViolationAnalytics.
 */
export interface GetSqlFirewallViolationAnalyticsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetSqlFirewallViolationAnalyticsFilterArgs>[]>;
    /**
     * A groupBy can only be used in combination with summaryField parameter. A groupBy value has to be a subset of the values mentioned in summaryField parameter.
     */
    groupBies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Default time zone is UTC if no time zone provided. The date-time considerations of the resource will be in accordance with the specified time zone.
     */
    queryTimeZone?: pulumi.Input<string>;
    /**
     * The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2 of the System for Cross-Domain Identity Management (SCIM) specification, which is available at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions, text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format. (Numeric and boolean values should not be quoted.)
     *
     * **Example:** query=(operationTime ge '2021-06-04T01-00-26') and (violationAction eq 'BLOCKED')
     */
    scimQuery?: pulumi.Input<string>;
    /**
     * Specifies a subset of summarized fields to be returned in the response.
     */
    summaryFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An optional filter to return audit events whose creation time in the database is less than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeEnded?: pulumi.Input<string>;
    /**
     * An optional filter to return audit events whose creation time in the database is greater than and equal to the date-time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeStarted?: pulumi.Input<string>;
}
