// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Target Alert Policy Association resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets the details of target-alert policy association by its ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTargetAlertPolicyAssociation = oci.DataSafe.getTargetAlertPolicyAssociation({
 *     targetAlertPolicyAssociationId: oci_data_safe_target_alert_policy_association.test_target_alert_policy_association.id,
 * });
 * ```
 */
export function getTargetAlertPolicyAssociation(args: GetTargetAlertPolicyAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetTargetAlertPolicyAssociationResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DataSafe/getTargetAlertPolicyAssociation:getTargetAlertPolicyAssociation", {
        "targetAlertPolicyAssociationId": args.targetAlertPolicyAssociationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTargetAlertPolicyAssociation.
 */
export interface GetTargetAlertPolicyAssociationArgs {
    /**
     * The OCID of the target-alert policy association.
     */
    targetAlertPolicyAssociationId: string;
}

/**
 * A collection of values returned by getTargetAlertPolicyAssociation.
 */
export interface GetTargetAlertPolicyAssociationResult {
    /**
     * The OCID of the compartment that contains the policy.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * Describes the target-alert policy association.
     */
    readonly description: string;
    /**
     * The display name of the target-alert policy association.
     */
    readonly displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The OCID of the target-alert policy association.
     */
    readonly id: string;
    /**
     * Indicates if the target-alert policy association is enabled or disabled.
     */
    readonly isEnabled: boolean;
    /**
     * The OCID of the alert policy.
     */
    readonly policyId: string;
    /**
     * The current state of the target-alert policy association.
     */
    readonly state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    readonly targetAlertPolicyAssociationId: string;
    /**
     * The OCID of the target on which alert policy is to be applied.
     */
    readonly targetId: string;
    /**
     * Creation date and time of the alert policy, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    readonly timeCreated: string;
    /**
     * Last date and time the alert policy was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    readonly timeUpdated: string;
}

export function getTargetAlertPolicyAssociationOutput(args: GetTargetAlertPolicyAssociationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTargetAlertPolicyAssociationResult> {
    return pulumi.output(args).apply(a => getTargetAlertPolicyAssociation(a, opts))
}

/**
 * A collection of arguments for invoking getTargetAlertPolicyAssociation.
 */
export interface GetTargetAlertPolicyAssociationOutputArgs {
    /**
     * The OCID of the target-alert policy association.
     */
    targetAlertPolicyAssociationId: pulumi.Input<string>;
}
