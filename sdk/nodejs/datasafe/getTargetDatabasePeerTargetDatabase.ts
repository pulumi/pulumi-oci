// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Target Database Peer Target Database resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Returns the details of the specified Data Safe peer target database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTargetDatabasePeerTargetDatabase = oci.DataSafe.getTargetDatabasePeerTargetDatabase({
 *     peerTargetDatabaseId: testTargetDatabase.id,
 *     targetDatabaseId: testTargetDatabase.id,
 * });
 * ```
 */
export function getTargetDatabasePeerTargetDatabase(args: GetTargetDatabasePeerTargetDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetTargetDatabasePeerTargetDatabaseResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getTargetDatabasePeerTargetDatabase:getTargetDatabasePeerTargetDatabase", {
        "peerTargetDatabaseId": args.peerTargetDatabaseId,
        "targetDatabaseId": args.targetDatabaseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTargetDatabasePeerTargetDatabase.
 */
export interface GetTargetDatabasePeerTargetDatabaseArgs {
    /**
     * The unique id of the peer target database.
     */
    peerTargetDatabaseId: string;
    /**
     * The OCID of the Data Safe target database.
     */
    targetDatabaseId: string;
}

/**
 * A collection of values returned by getTargetDatabasePeerTargetDatabase.
 */
export interface GetTargetDatabasePeerTargetDatabaseResult {
    /**
     * Details of the database for the registration in Data Safe.
     */
    readonly databaseDetails: outputs.DataSafe.GetTargetDatabasePeerTargetDatabaseDatabaseDetail[];
    /**
     * Unique name of the database associated to the peer target database.
     */
    readonly databaseUniqueName: string;
    /**
     * The OCID of the Data Guard Association resource in which the database associated to the peer target database is considered as peer database to the primary database.
     */
    readonly dataguardAssociationId: string;
    /**
     * The description of the peer target database in Data Safe.
     */
    readonly description: string;
    /**
     * The display name of the peer target database in Data Safe.
     */
    readonly displayName: string;
    readonly id: string;
    /**
     * The secondary key assigned for the peer target database in Data Safe.
     */
    readonly key: number;
    /**
     * Details about the current state of the peer target database in Data Safe.
     */
    readonly lifecycleDetails: string;
    readonly peerTargetDatabaseId: string;
    /**
     * Role of the database associated to the peer target database.
     */
    readonly role: string;
    /**
     * The current state of the peer target database in Data Safe.
     */
    readonly state: string;
    readonly targetDatabaseId: string;
    /**
     * The date and time of the peer target database registration in Data Safe.
     */
    readonly timeCreated: string;
    /**
     * The details required to establish a TLS enabled connection.
     */
    readonly tlsConfigs: outputs.DataSafe.GetTargetDatabasePeerTargetDatabaseTlsConfig[];
}
/**
 * This data source provides details about a specific Target Database Peer Target Database resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Returns the details of the specified Data Safe peer target database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTargetDatabasePeerTargetDatabase = oci.DataSafe.getTargetDatabasePeerTargetDatabase({
 *     peerTargetDatabaseId: testTargetDatabase.id,
 *     targetDatabaseId: testTargetDatabase.id,
 * });
 * ```
 */
export function getTargetDatabasePeerTargetDatabaseOutput(args: GetTargetDatabasePeerTargetDatabaseOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTargetDatabasePeerTargetDatabaseResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getTargetDatabasePeerTargetDatabase:getTargetDatabasePeerTargetDatabase", {
        "peerTargetDatabaseId": args.peerTargetDatabaseId,
        "targetDatabaseId": args.targetDatabaseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTargetDatabasePeerTargetDatabase.
 */
export interface GetTargetDatabasePeerTargetDatabaseOutputArgs {
    /**
     * The unique id of the peer target database.
     */
    peerTargetDatabaseId: pulumi.Input<string>;
    /**
     * The OCID of the Data Safe target database.
     */
    targetDatabaseId: pulumi.Input<string>;
}
