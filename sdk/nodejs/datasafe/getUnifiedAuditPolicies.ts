// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Unified Audit Policies in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all Unified Audit policies.
 *
 * The ListUnifiedAuditPolicies operation returns only the Unified Audit policies in the specified `compartmentId`.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requester has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a sub-compartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicies on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and sub-compartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUnifiedAuditPolicies = oci.DataSafe.getUnifiedAuditPolicies({
 *     compartmentId: compartmentId,
 *     accessLevel: unifiedAuditPolicyAccessLevel,
 *     compartmentIdInSubtree: unifiedAuditPolicyCompartmentIdInSubtree,
 *     displayName: unifiedAuditPolicyDisplayName,
 *     isSeeded: unifiedAuditPolicyIsSeeded,
 *     securityPolicyId: testSecurityPolicy.id,
 *     state: unifiedAuditPolicyState,
 *     timeCreatedGreaterThanOrEqualTo: unifiedAuditPolicyTimeCreatedGreaterThanOrEqualTo,
 *     timeCreatedLessThan: unifiedAuditPolicyTimeCreatedLessThan,
 *     unifiedAuditPolicyDefinitionId: testUnifiedAuditPolicyDefinition.id,
 *     unifiedAuditPolicyId: testUnifiedAuditPolicy.id,
 * });
 * ```
 */
export function getUnifiedAuditPolicies(args: GetUnifiedAuditPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetUnifiedAuditPoliciesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getUnifiedAuditPolicies:getUnifiedAuditPolicies", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "isSeeded": args.isSeeded,
        "securityPolicyId": args.securityPolicyId,
        "state": args.state,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
        "unifiedAuditPolicyDefinitionId": args.unifiedAuditPolicyDefinitionId,
        "unifiedAuditPolicyId": args.unifiedAuditPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUnifiedAuditPolicies.
 */
export interface GetUnifiedAuditPoliciesArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: string;
    filters?: inputs.DataSafe.GetUnifiedAuditPoliciesFilter[];
    /**
     * A boolean flag indicating to list seeded unified audit policies. Set this parameter to get list of seeded unified audit policies.
     */
    isSeeded?: boolean;
    /**
     * An optional filter to return only resources that match the specified OCID of the security policy resource.
     */
    securityPolicyId?: string;
    /**
     * The current state of the Unified Audit policy.
     */
    state?: string;
    /**
     * A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedGreaterThanOrEqualTo?: string;
    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedLessThan?: string;
    /**
     * An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
     */
    unifiedAuditPolicyDefinitionId?: string;
    /**
     * An optional filter to return only resources that match the specified OCID of the Unified Audit policy resource.
     */
    unifiedAuditPolicyId?: string;
}

/**
 * A collection of values returned by getUnifiedAuditPolicies.
 */
export interface GetUnifiedAuditPoliciesResult {
    readonly accessLevel?: string;
    /**
     * The OCID of the compartment containing the unified audit policy.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * The display name of the unified audit policy.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataSafe.GetUnifiedAuditPoliciesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates whether the unified audit policy is seeded or not.
     */
    readonly isSeeded?: boolean;
    /**
     * The OCID of the security policy corresponding to the unified audit policy.
     */
    readonly securityPolicyId?: string;
    /**
     * The current state of the unified audit policy.
     */
    readonly state?: string;
    readonly timeCreatedGreaterThanOrEqualTo?: string;
    readonly timeCreatedLessThan?: string;
    /**
     * The list of unified_audit_policy_collection.
     */
    readonly unifiedAuditPolicyCollections: outputs.DataSafe.GetUnifiedAuditPoliciesUnifiedAuditPolicyCollection[];
    /**
     * The OCID of the associated unified audit policy definition.
     */
    readonly unifiedAuditPolicyDefinitionId?: string;
    readonly unifiedAuditPolicyId?: string;
}
/**
 * This data source provides the list of Unified Audit Policies in Oracle Cloud Infrastructure Data Safe service.
 *
 * Retrieves a list of all Unified Audit policies.
 *
 * The ListUnifiedAuditPolicies operation returns only the Unified Audit policies in the specified `compartmentId`.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requester has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a sub-compartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListUnifiedAuditPolicies on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and sub-compartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUnifiedAuditPolicies = oci.DataSafe.getUnifiedAuditPolicies({
 *     compartmentId: compartmentId,
 *     accessLevel: unifiedAuditPolicyAccessLevel,
 *     compartmentIdInSubtree: unifiedAuditPolicyCompartmentIdInSubtree,
 *     displayName: unifiedAuditPolicyDisplayName,
 *     isSeeded: unifiedAuditPolicyIsSeeded,
 *     securityPolicyId: testSecurityPolicy.id,
 *     state: unifiedAuditPolicyState,
 *     timeCreatedGreaterThanOrEqualTo: unifiedAuditPolicyTimeCreatedGreaterThanOrEqualTo,
 *     timeCreatedLessThan: unifiedAuditPolicyTimeCreatedLessThan,
 *     unifiedAuditPolicyDefinitionId: testUnifiedAuditPolicyDefinition.id,
 *     unifiedAuditPolicyId: testUnifiedAuditPolicy.id,
 * });
 * ```
 */
export function getUnifiedAuditPoliciesOutput(args: GetUnifiedAuditPoliciesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUnifiedAuditPoliciesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getUnifiedAuditPolicies:getUnifiedAuditPolicies", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "isSeeded": args.isSeeded,
        "securityPolicyId": args.securityPolicyId,
        "state": args.state,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
        "unifiedAuditPolicyDefinitionId": args.unifiedAuditPolicyDefinitionId,
        "unifiedAuditPolicyId": args.unifiedAuditPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUnifiedAuditPolicies.
 */
export interface GetUnifiedAuditPoliciesOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetUnifiedAuditPoliciesFilterArgs>[]>;
    /**
     * A boolean flag indicating to list seeded unified audit policies. Set this parameter to get list of seeded unified audit policies.
     */
    isSeeded?: pulumi.Input<boolean>;
    /**
     * An optional filter to return only resources that match the specified OCID of the security policy resource.
     */
    securityPolicyId?: pulumi.Input<string>;
    /**
     * The current state of the Unified Audit policy.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedLessThan?: pulumi.Input<string>;
    /**
     * An optional filter to return only resources that match the specified OCID of the unified audit policy definition resource.
     */
    unifiedAuditPolicyDefinitionId?: pulumi.Input<string>;
    /**
     * An optional filter to return only resources that match the specified OCID of the Unified Audit policy resource.
     */
    unifiedAuditPolicyId?: pulumi.Input<string>;
}
