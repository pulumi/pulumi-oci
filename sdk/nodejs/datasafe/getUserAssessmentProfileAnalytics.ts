// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of User Assessment Profile Analytics in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of aggregated user profile details in the specified compartment. This provides information about the
 * overall profiles available. For example, the user profile details include how many users have the profile assigned
 * and do how many use password verification function. This data is especially useful content for dashboards or to support analytics.
 *
 * When you perform the ListProfileAnalytics operation, if the parameter compartmentIdInSubtree is set to "true," and if the
 * parameter accessLevel is set to ACCESSIBLE, then the operation returns compartments in which the requestor has INSPECT
 * permissions on at least one resource, directly or indirectly (in subcompartments). If the operation is performed at the
 * root compartment and the requestor does not have access to at least one subcompartment of the compartment specified by
 * compartmentId, then "Not Authorized" is returned.
 *
 * The parameter compartmentIdInSubtree applies when you perform ListProfileAnalytics on the compartmentId passed and when it is
 * set to true, the entire hierarchy of compartments can be returned.
 *
 * To use ListProfileAnalytics to get a full list of all compartments and subcompartments in the tenancy from the root compartment,
 * set the parameter compartmentIdInSubtree to true and accessLevel to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUserAssessmentProfileAnalytics = oci.DataSafe.getUserAssessmentProfileAnalytics({
 *     compartmentId: _var.compartment_id,
 *     userAssessmentId: oci_data_safe_user_assessment.test_user_assessment.id,
 *     accessLevel: _var.user_assessment_profile_analytic_access_level,
 *     compartmentIdInSubtree: _var.user_assessment_profile_analytic_compartment_id_in_subtree,
 *     profileName: oci_optimizer_profile.test_profile.name,
 *     targetId: oci_cloud_guard_target.test_target.id,
 * });
 * ```
 */
export function getUserAssessmentProfileAnalytics(args: GetUserAssessmentProfileAnalyticsArgs, opts?: pulumi.InvokeOptions): Promise<GetUserAssessmentProfileAnalyticsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getUserAssessmentProfileAnalytics:getUserAssessmentProfileAnalytics", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "profileName": args.profileName,
        "targetId": args.targetId,
        "userAssessmentId": args.userAssessmentId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserAssessmentProfileAnalytics.
 */
export interface GetUserAssessmentProfileAnalyticsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    filters?: inputs.DataSafe.GetUserAssessmentProfileAnalyticsFilter[];
    /**
     * A filter to return only items that match the specified profile name.
     */
    profileName?: string;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: string;
    /**
     * The OCID of the user assessment.
     */
    userAssessmentId: string;
}

/**
 * A collection of values returned by getUserAssessmentProfileAnalytics.
 */
export interface GetUserAssessmentProfileAnalyticsResult {
    readonly accessLevel?: string;
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.DataSafe.GetUserAssessmentProfileAnalyticsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of profile_aggregations.
     */
    readonly profileAggregations: outputs.DataSafe.GetUserAssessmentProfileAnalyticsProfileAggregation[];
    readonly profileName?: string;
    readonly targetId?: string;
    readonly userAssessmentId: string;
}
/**
 * This data source provides the list of User Assessment Profile Analytics in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of aggregated user profile details in the specified compartment. This provides information about the
 * overall profiles available. For example, the user profile details include how many users have the profile assigned
 * and do how many use password verification function. This data is especially useful content for dashboards or to support analytics.
 *
 * When you perform the ListProfileAnalytics operation, if the parameter compartmentIdInSubtree is set to "true," and if the
 * parameter accessLevel is set to ACCESSIBLE, then the operation returns compartments in which the requestor has INSPECT
 * permissions on at least one resource, directly or indirectly (in subcompartments). If the operation is performed at the
 * root compartment and the requestor does not have access to at least one subcompartment of the compartment specified by
 * compartmentId, then "Not Authorized" is returned.
 *
 * The parameter compartmentIdInSubtree applies when you perform ListProfileAnalytics on the compartmentId passed and when it is
 * set to true, the entire hierarchy of compartments can be returned.
 *
 * To use ListProfileAnalytics to get a full list of all compartments and subcompartments in the tenancy from the root compartment,
 * set the parameter compartmentIdInSubtree to true and accessLevel to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUserAssessmentProfileAnalytics = oci.DataSafe.getUserAssessmentProfileAnalytics({
 *     compartmentId: _var.compartment_id,
 *     userAssessmentId: oci_data_safe_user_assessment.test_user_assessment.id,
 *     accessLevel: _var.user_assessment_profile_analytic_access_level,
 *     compartmentIdInSubtree: _var.user_assessment_profile_analytic_compartment_id_in_subtree,
 *     profileName: oci_optimizer_profile.test_profile.name,
 *     targetId: oci_cloud_guard_target.test_target.id,
 * });
 * ```
 */
export function getUserAssessmentProfileAnalyticsOutput(args: GetUserAssessmentProfileAnalyticsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserAssessmentProfileAnalyticsResult> {
    return pulumi.output(args).apply((a: any) => getUserAssessmentProfileAnalytics(a, opts))
}

/**
 * A collection of arguments for invoking getUserAssessmentProfileAnalytics.
 */
export interface GetUserAssessmentProfileAnalyticsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetUserAssessmentProfileAnalyticsFilterArgs>[]>;
    /**
     * A filter to return only items that match the specified profile name.
     */
    profileName?: pulumi.Input<string>;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: pulumi.Input<string>;
    /**
     * The OCID of the user assessment.
     */
    userAssessmentId: pulumi.Input<string>;
}
