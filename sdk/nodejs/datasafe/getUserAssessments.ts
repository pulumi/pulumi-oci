// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of User Assessments in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of user assessments.
 *
 * The ListUserAssessments operation returns only the assessments in the specified `compartmentId`.
 * The list does not include any subcompartments of the compartmentId passed.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListUserAssessments on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUserAssessments = oci.DataSafe.getUserAssessments({
 *     compartmentId: compartmentId,
 *     accessLevel: userAssessmentAccessLevel,
 *     compartmentIdInSubtree: userAssessmentCompartmentIdInSubtree,
 *     displayName: userAssessmentDisplayName,
 *     isBaseline: userAssessmentIsBaseline,
 *     isScheduleAssessment: userAssessmentIsScheduleAssessment,
 *     scheduleUserAssessmentId: testUserAssessment.id,
 *     state: userAssessmentState,
 *     targetId: testTarget.id,
 *     timeCreatedGreaterThanOrEqualTo: userAssessmentTimeCreatedGreaterThanOrEqualTo,
 *     timeCreatedLessThan: userAssessmentTimeCreatedLessThan,
 *     triggeredBy: userAssessmentTriggeredBy,
 *     type: userAssessmentType,
 * });
 * ```
 */
export function getUserAssessments(args: GetUserAssessmentsArgs, opts?: pulumi.InvokeOptions): Promise<GetUserAssessmentsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataSafe/getUserAssessments:getUserAssessments", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "isBaseline": args.isBaseline,
        "isScheduleAssessment": args.isScheduleAssessment,
        "scheduleUserAssessmentId": args.scheduleUserAssessmentId,
        "state": args.state,
        "targetId": args.targetId,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
        "triggeredBy": args.triggeredBy,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserAssessments.
 */
export interface GetUserAssessmentsArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: string;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: string;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: string;
    filters?: inputs.DataSafe.GetUserAssessmentsFilter[];
    /**
     * A filter to return only user assessments that are set as baseline.
     */
    isBaseline?: boolean;
    /**
     * A filter to return only user assessments of type SAVE_SCHEDULE.
     */
    isScheduleAssessment?: boolean;
    /**
     * The OCID of the user assessment of type SAVE_SCHEDULE.
     */
    scheduleUserAssessmentId?: string;
    /**
     * The current state of the user assessment.
     */
    state?: string;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: string;
    /**
     * A filter to return only user assessments that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using timeCreatedGreaterThanOrEqualTo parameter retrieves all assessments created after that date.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedGreaterThanOrEqualTo?: string;
    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedLessThan?: string;
    /**
     * A filter to return user assessments that were created by either the system or by a user only.
     */
    triggeredBy?: string;
    /**
     * A filter to return only items that match the specified assessment type.
     */
    type?: string;
}

/**
 * A collection of values returned by getUserAssessments.
 */
export interface GetUserAssessmentsResult {
    readonly accessLevel?: string;
    /**
     * The OCID of the compartment that contains the user assessment.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * The display name of the user assessment.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataSafe.GetUserAssessmentsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List containing maps as values. Example: `{"Operations": [ {"CostCenter": "42"} ] }`
     */
    readonly ignoredTargets: outputs.DataSafe.GetUserAssessmentsIgnoredTarget[];
    /**
     * Indicates if the user assessment is set as a baseline. This is applicable only to saved user assessments.
     */
    readonly isBaseline?: boolean;
    readonly isScheduleAssessment?: boolean;
    readonly scheduleUserAssessmentId?: string;
    /**
     * The current state of the user assessment.
     */
    readonly state?: string;
    readonly targetId?: string;
    readonly timeCreatedGreaterThanOrEqualTo?: string;
    readonly timeCreatedLessThan?: string;
    /**
     * Indicates whether the user assessment was created by the system or the user.
     */
    readonly triggeredBy?: string;
    /**
     * The type of the user assessment. The possible types are:
     */
    readonly type?: string;
    /**
     * The list of user_assessments.
     */
    readonly userAssessments: outputs.DataSafe.GetUserAssessmentsUserAssessment[];
}
/**
 * This data source provides the list of User Assessments in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets a list of user assessments.
 *
 * The ListUserAssessments operation returns only the assessments in the specified `compartmentId`.
 * The list does not include any subcompartments of the compartmentId passed.
 *
 * The parameter `accessLevel` specifies whether to return only those compartments for which the
 * requestor has INSPECT permissions on at least one resource directly
 * or indirectly (ACCESSIBLE) (the resource can be in a subcompartment) or to return Not Authorized if
 * Principal doesn't have access to even one of the child compartments. This is valid only when
 * `compartmentIdInSubtree` is set to `true`.
 *
 * The parameter `compartmentIdInSubtree` applies when you perform ListUserAssessments on the
 * `compartmentId` passed and when it is set to true, the entire hierarchy of compartments can be returned.
 * To get a full list of all compartments and subcompartments in the tenancy (root compartment),
 * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ACCESSIBLE.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUserAssessments = oci.DataSafe.getUserAssessments({
 *     compartmentId: compartmentId,
 *     accessLevel: userAssessmentAccessLevel,
 *     compartmentIdInSubtree: userAssessmentCompartmentIdInSubtree,
 *     displayName: userAssessmentDisplayName,
 *     isBaseline: userAssessmentIsBaseline,
 *     isScheduleAssessment: userAssessmentIsScheduleAssessment,
 *     scheduleUserAssessmentId: testUserAssessment.id,
 *     state: userAssessmentState,
 *     targetId: testTarget.id,
 *     timeCreatedGreaterThanOrEqualTo: userAssessmentTimeCreatedGreaterThanOrEqualTo,
 *     timeCreatedLessThan: userAssessmentTimeCreatedLessThan,
 *     triggeredBy: userAssessmentTriggeredBy,
 *     type: userAssessmentType,
 * });
 * ```
 */
export function getUserAssessmentsOutput(args: GetUserAssessmentsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserAssessmentsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataSafe/getUserAssessments:getUserAssessments", {
        "accessLevel": args.accessLevel,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "displayName": args.displayName,
        "filters": args.filters,
        "isBaseline": args.isBaseline,
        "isScheduleAssessment": args.isScheduleAssessment,
        "scheduleUserAssessmentId": args.scheduleUserAssessmentId,
        "state": args.state,
        "targetId": args.targetId,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
        "triggeredBy": args.triggeredBy,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserAssessments.
 */
export interface GetUserAssessmentsOutputArgs {
    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the specified compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * A filter to return only resources that match the specified display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataSafe.GetUserAssessmentsFilterArgs>[]>;
    /**
     * A filter to return only user assessments that are set as baseline.
     */
    isBaseline?: pulumi.Input<boolean>;
    /**
     * A filter to return only user assessments of type SAVE_SCHEDULE.
     */
    isScheduleAssessment?: pulumi.Input<boolean>;
    /**
     * The OCID of the user assessment of type SAVE_SCHEDULE.
     */
    scheduleUserAssessmentId?: pulumi.Input<string>;
    /**
     * The current state of the user assessment.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only items related to a specific target OCID.
     */
    targetId?: pulumi.Input<string>;
    /**
     * A filter to return only user assessments that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using timeCreatedGreaterThanOrEqualTo parameter retrieves all assessments created after that date.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in "YYYY-MM-ddThh:mmZ" format with a Z offset, as defined by RFC 3339.
     *
     * **Example:** 2016-12-19T16:39:57.600Z
     */
    timeCreatedLessThan?: pulumi.Input<string>;
    /**
     * A filter to return user assessments that were created by either the system or by a user only.
     */
    triggeredBy?: pulumi.Input<string>;
    /**
     * A filter to return only items that match the specified assessment type.
     */
    type?: pulumi.Input<string>;
}
