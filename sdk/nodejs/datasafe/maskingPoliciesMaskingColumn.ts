// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Masking Policies Masking Column resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Creates a new masking column in the specified masking policy. Use this operation
 * to add parent columns only. It automatically adds the child columns from the
 * associated sensitive data model or target database. If you provide the
 * sensitiveTypeId attribute but not the maskingFormats attribute, it automatically
 * assigns the default masking format associated with the specified sensitive type.
 * Alternatively, if you provide the maskingFormats attribute, the specified masking
 * formats are assigned to the column.
 *
 * Using the maskingFormats attribute, you can assign one or more masking formats
 * to a column. You need to specify a condition as part of each masking format. It
 * enables you to do <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>
 * so that you can mask the column data values differently using different
 * masking conditions. A masking format can have one or more format entries. The
 * combined output of all the format entries is used for masking. It provides the
 * flexibility to define a masking format that can generate different parts of a data
 * value separately and then combine them to get the final data value for masking.
 *
 * You can use the maskingColumnGroup attribute to group the columns that you would
 * like to mask together. It enables you to do <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037">group or compound masking</a> that ensures that the
 * masked data across the columns in a group continue to retain the same logical relationship.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaskingPoliciesMaskingColumn = new oci.datasafe.MaskingPoliciesMaskingColumn("testMaskingPoliciesMaskingColumn", {
 *     columnName: _var.masking_policies_masking_column_column_name,
 *     maskingPolicyId: oci_data_safe_masking_policy.test_masking_policy.id,
 *     object: _var.masking_policies_masking_column_object,
 *     schemaName: _var.masking_policies_masking_column_schema_name,
 *     isMaskingEnabled: _var.masking_policies_masking_column_is_masking_enabled,
 *     maskingColumnGroup: _var.masking_policies_masking_column_masking_column_group,
 *     maskingFormats: [{
 *         formatEntries: [{
 *             type: _var.masking_policies_masking_column_masking_formats_format_entries_type,
 *             columnName: _var.masking_policies_masking_column_masking_formats_format_entries_column_name,
 *             description: _var.masking_policies_masking_column_masking_formats_format_entries_description,
 *             endDate: _var.masking_policies_masking_column_masking_formats_format_entries_end_date,
 *             endLength: _var.masking_policies_masking_column_masking_formats_format_entries_end_length,
 *             endValue: _var.masking_policies_masking_column_masking_formats_format_entries_end_value,
 *             fixedNumber: _var.masking_policies_masking_column_masking_formats_format_entries_fixed_number,
 *             fixedString: _var.masking_policies_masking_column_masking_formats_format_entries_fixed_string,
 *             groupingColumns: _var.masking_policies_masking_column_masking_formats_format_entries_grouping_columns,
 *             length: _var.masking_policies_masking_column_masking_formats_format_entries_length,
 *             libraryMaskingFormatId: oci_data_safe_library_masking_format.test_library_masking_format.id,
 *             postProcessingFunction: _var.masking_policies_masking_column_masking_formats_format_entries_post_processing_function,
 *             randomLists: _var.masking_policies_masking_column_masking_formats_format_entries_random_list,
 *             regularExpression: _var.masking_policies_masking_column_masking_formats_format_entries_regular_expression,
 *             replaceWith: _var.masking_policies_masking_column_masking_formats_format_entries_replace_with,
 *             schemaName: _var.masking_policies_masking_column_masking_formats_format_entries_schema_name,
 *             sqlExpression: _var.masking_policies_masking_column_masking_formats_format_entries_sql_expression,
 *             startDate: _var.masking_policies_masking_column_masking_formats_format_entries_start_date,
 *             startLength: _var.masking_policies_masking_column_masking_formats_format_entries_start_length,
 *             startPosition: _var.masking_policies_masking_column_masking_formats_format_entries_start_position,
 *             startValue: _var.masking_policies_masking_column_masking_formats_format_entries_start_value,
 *             tableName: oci_nosql_table.test_table.name,
 *             userDefinedFunction: _var.masking_policies_masking_column_masking_formats_format_entries_user_defined_function,
 *         }],
 *         condition: _var.masking_policies_masking_column_masking_formats_condition,
 *         description: _var.masking_policies_masking_column_masking_formats_description,
 *     }],
 *     objectType: _var.masking_policies_masking_column_object_type,
 *     sensitiveTypeId: oci_data_safe_sensitive_type.test_sensitive_type.id,
 * });
 * ```
 *
 * ## Import
 *
 * MaskingPoliciesMaskingColumns can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn test_masking_policies_masking_column "maskingPolicies/{maskingPolicyId}/maskingColumns/{maskingColumnKey}"
 * ```
 */
export class MaskingPoliciesMaskingColumn extends pulumi.CustomResource {
    /**
     * Get an existing MaskingPoliciesMaskingColumn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MaskingPoliciesMaskingColumnState, opts?: pulumi.CustomResourceOptions): MaskingPoliciesMaskingColumn {
        return new MaskingPoliciesMaskingColumn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataSafe/maskingPoliciesMaskingColumn:MaskingPoliciesMaskingColumn';

    /**
     * Returns true if the given object is an instance of MaskingPoliciesMaskingColumn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MaskingPoliciesMaskingColumn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MaskingPoliciesMaskingColumn.__pulumiType;
    }

    /**
     * An array of child columns that are in referential relationship with the masking column.
     */
    public /*out*/ readonly childColumns!: pulumi.Output<string[]>;
    /**
     * (Updatable) The name of the substitution column.
     */
    public readonly columnName!: pulumi.Output<string>;
    /**
     * The data type of the masking column.
     */
    public /*out*/ readonly dataType!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates if data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
     */
    public readonly isMaskingEnabled!: pulumi.Output<boolean>;
    /**
     * The unique key that identifies the masking column. It's numeric and unique within a masking policy.
     */
    public /*out*/ readonly key!: pulumi.Output<string>;
    /**
     * Details about the current state of the masking column.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
     */
    public readonly maskingColumnGroup!: pulumi.Output<string>;
    /**
     * (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
     */
    public readonly maskingFormats!: pulumi.Output<outputs.DataSafe.MaskingPoliciesMaskingColumnMaskingFormat[]>;
    /**
     * The OCID of the masking policy.
     */
    public readonly maskingPolicyId!: pulumi.Output<string>;
    /**
     * The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
     */
    public readonly object!: pulumi.Output<string>;
    /**
     * (Updatable) The type of the object that contains the database column.
     */
    public readonly objectType!: pulumi.Output<string>;
    /**
     * The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
     */
    public readonly schemaName!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.  
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly sensitiveTypeId!: pulumi.Output<string>;
    /**
     * The current state of the masking column.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a MaskingPoliciesMaskingColumn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MaskingPoliciesMaskingColumnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MaskingPoliciesMaskingColumnArgs | MaskingPoliciesMaskingColumnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MaskingPoliciesMaskingColumnState | undefined;
            resourceInputs["childColumns"] = state ? state.childColumns : undefined;
            resourceInputs["columnName"] = state ? state.columnName : undefined;
            resourceInputs["dataType"] = state ? state.dataType : undefined;
            resourceInputs["isMaskingEnabled"] = state ? state.isMaskingEnabled : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["maskingColumnGroup"] = state ? state.maskingColumnGroup : undefined;
            resourceInputs["maskingFormats"] = state ? state.maskingFormats : undefined;
            resourceInputs["maskingPolicyId"] = state ? state.maskingPolicyId : undefined;
            resourceInputs["object"] = state ? state.object : undefined;
            resourceInputs["objectType"] = state ? state.objectType : undefined;
            resourceInputs["schemaName"] = state ? state.schemaName : undefined;
            resourceInputs["sensitiveTypeId"] = state ? state.sensitiveTypeId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as MaskingPoliciesMaskingColumnArgs | undefined;
            if ((!args || args.columnName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'columnName'");
            }
            if ((!args || args.maskingPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maskingPolicyId'");
            }
            if ((!args || args.object === undefined) && !opts.urn) {
                throw new Error("Missing required property 'object'");
            }
            if ((!args || args.schemaName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemaName'");
            }
            resourceInputs["columnName"] = args ? args.columnName : undefined;
            resourceInputs["isMaskingEnabled"] = args ? args.isMaskingEnabled : undefined;
            resourceInputs["maskingColumnGroup"] = args ? args.maskingColumnGroup : undefined;
            resourceInputs["maskingFormats"] = args ? args.maskingFormats : undefined;
            resourceInputs["maskingPolicyId"] = args ? args.maskingPolicyId : undefined;
            resourceInputs["object"] = args ? args.object : undefined;
            resourceInputs["objectType"] = args ? args.objectType : undefined;
            resourceInputs["schemaName"] = args ? args.schemaName : undefined;
            resourceInputs["sensitiveTypeId"] = args ? args.sensitiveTypeId : undefined;
            resourceInputs["childColumns"] = undefined /*out*/;
            resourceInputs["dataType"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MaskingPoliciesMaskingColumn.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MaskingPoliciesMaskingColumn resources.
 */
export interface MaskingPoliciesMaskingColumnState {
    /**
     * An array of child columns that are in referential relationship with the masking column.
     */
    childColumns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The name of the substitution column.
     */
    columnName?: pulumi.Input<string>;
    /**
     * The data type of the masking column.
     */
    dataType?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates if data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
     */
    isMaskingEnabled?: pulumi.Input<boolean>;
    /**
     * The unique key that identifies the masking column. It's numeric and unique within a masking policy.
     */
    key?: pulumi.Input<string>;
    /**
     * Details about the current state of the masking column.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
     */
    maskingColumnGroup?: pulumi.Input<string>;
    /**
     * (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
     */
    maskingFormats?: pulumi.Input<pulumi.Input<inputs.DataSafe.MaskingPoliciesMaskingColumnMaskingFormat>[]>;
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId?: pulumi.Input<string>;
    /**
     * The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
     */
    object?: pulumi.Input<string>;
    /**
     * (Updatable) The type of the object that contains the database column.
     */
    objectType?: pulumi.Input<string>;
    /**
     * The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
     */
    schemaName?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.  
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    sensitiveTypeId?: pulumi.Input<string>;
    /**
     * The current state of the masking column.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MaskingPoliciesMaskingColumn resource.
 */
export interface MaskingPoliciesMaskingColumnArgs {
    /**
     * (Updatable) The name of the substitution column.
     */
    columnName: pulumi.Input<string>;
    /**
     * (Updatable) Indicates if data masking is enabled for the masking column. Set it to false if  you don't want to mask the column.
     */
    isMaskingEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) The group of the masking column. It's a masking group identifier and can be any string  of acceptable length. All the columns in a group are masked together to ensure that  the masked data across these columns continue to retain the same logical relationship.  For more details, check  <a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037>Group Masking in the Data Safe documentation.</a>
     */
    maskingColumnGroup?: pulumi.Input<string>;
    /**
     * (Updatable) The masking formats to be assigned to the masking column. You can specify a condition  as part of each masking format. It enables you to do  <a href="https://docs.oracle.com/en/cloud/paas/data-safe/udscs/conditional-masking.html">conditional masking</a>  so that you can mask the column data values differently using different masking  formats and the associated conditions. A masking format can have one or more format  entries. The combined output of all the format entries is used for masking. It  provides the flexibility to define a masking format that can generate different parts  of a data value separately and then combine them to get the final data value for masking.
     */
    maskingFormats?: pulumi.Input<pulumi.Input<inputs.DataSafe.MaskingPoliciesMaskingColumnMaskingFormat>[]>;
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId: pulumi.Input<string>;
    /**
     * The name of the object (table or editioning view) that contains the database column. This attribute cannot be updated for an existing masking column.
     */
    object: pulumi.Input<string>;
    /**
     * (Updatable) The type of the object that contains the database column.
     */
    objectType?: pulumi.Input<string>;
    /**
     * The name of the schema that contains the database column. This attribute cannot be updated for an existing masking column.
     */
    schemaName: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the sensitive type to be associated with the masking column. Note that  if the maskingFormats attribute isn't provided while creating a masking column,   the default masking format associated with the specified sensitive type is assigned  to the masking column.  
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    sensitiveTypeId?: pulumi.Input<string>;
}
