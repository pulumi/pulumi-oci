// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides Pre-masking Report Management resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Gets the details of the specified pre-masking health report.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPreMaskingReportManagement = new oci.datasafe.MaskingPolicyHealthReportManagement("test_pre_masking_report_management", {
 *     targetId: testTargetDatabase.id,
 *     maskingPolicyId: testMaskingPolicy.id,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class MaskingPolicyHealthReportManagement extends pulumi.CustomResource {
    /**
     * Get an existing MaskingPolicyHealthReportManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MaskingPolicyHealthReportManagementState, opts?: pulumi.CustomResourceOptions): MaskingPolicyHealthReportManagement {
        return new MaskingPolicyHealthReportManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataSafe/maskingPolicyHealthReportManagement:MaskingPolicyHealthReportManagement';

    /**
     * Returns true if the given object is an instance of MaskingPolicyHealthReportManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MaskingPolicyHealthReportManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MaskingPolicyHealthReportManagement.__pulumiType;
    }

    /**
     * The OCID of the compartment that contains the masking report.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    declare public /*out*/ readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Description for the pre-masking report,
     */
    declare public /*out*/ readonly description: pulumi.Output<string>;
    /**
     * The display name of the pre-masking report,
     */
    declare public /*out*/ readonly displayName: pulumi.Output<string>;
    declare public /*out*/ readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The OCID of the masking policy.
     */
    declare public readonly maskingPolicyId: pulumi.Output<string>;
    /**
     * The current state of the pre-masking report.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The OCID of the target database masked.
     */
    declare public readonly targetId: pulumi.Output<string>;
    /**
     * The date and time the pre-masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339),
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the pre-masking report was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339),
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a MaskingPolicyHealthReportManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MaskingPolicyHealthReportManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MaskingPolicyHealthReportManagementArgs | MaskingPolicyHealthReportManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MaskingPolicyHealthReportManagementState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["maskingPolicyId"] = state?.maskingPolicyId;
            resourceInputs["state"] = state?.state;
            resourceInputs["targetId"] = state?.targetId;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as MaskingPolicyHealthReportManagementArgs | undefined;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["maskingPolicyId"] = args?.maskingPolicyId;
            resourceInputs["targetId"] = args?.targetId;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MaskingPolicyHealthReportManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MaskingPolicyHealthReportManagement resources.
 */
export interface MaskingPolicyHealthReportManagementState {
    /**
     * The OCID of the compartment that contains the masking report.
     */
    compartmentId?: pulumi.Input<string>;
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Description for the pre-masking report,
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the pre-masking report,
     */
    displayName?: pulumi.Input<string>;
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId?: pulumi.Input<string>;
    /**
     * The current state of the pre-masking report.
     */
    state?: pulumi.Input<string>;
    /**
     * The OCID of the target database masked.
     */
    targetId?: pulumi.Input<string>;
    /**
     * The date and time the pre-masking report was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339),
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the pre-masking report was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339),
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MaskingPolicyHealthReportManagement resource.
 */
export interface MaskingPolicyHealthReportManagementArgs {
    /**
     * The OCID of the compartment that contains the masking report.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The OCID of the masking policy.
     */
    maskingPolicyId?: pulumi.Input<string>;
    /**
     * The OCID of the target database masked.
     */
    targetId?: pulumi.Input<string>;
}
