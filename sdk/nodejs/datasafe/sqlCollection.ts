// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Sql Collection resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Creates a new SQL collection resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSqlCollection = new oci.datasafe.SqlCollection("testSqlCollection", {
 *     compartmentId: _var.compartment_id,
 *     dbUserName: oci_identity_user.test_user.name,
 *     targetId: oci_cloud_guard_target.test_target.id,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     description: _var.sql_collection_description,
 *     displayName: _var.sql_collection_display_name,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     sqlLevel: _var.sql_collection_sql_level,
 *     status: _var.sql_collection_status,
 * });
 * ```
 *
 * ## Import
 *
 * SqlCollections can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:DataSafe/sqlCollection:SqlCollection test_sql_collection "id"
 * ```
 */
export class SqlCollection extends pulumi.CustomResource {
    /**
     * Get an existing SqlCollection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqlCollectionState, opts?: pulumi.CustomResourceOptions): SqlCollection {
        return new SqlCollection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataSafe/sqlCollection:SqlCollection';

    /**
     * Returns true if the given object is an instance of SqlCollection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqlCollection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlCollection.__pulumiType;
    }

    /**
     * (Updatable) The OCID of the compartment containing the SQL collection.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The database user name.
     */
    public readonly dbUserName!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The description of the SQL collection.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
     */
    public readonly generateSqlFirewallPolicyTrigger!: pulumi.Output<boolean | undefined>;
    /**
     * Details about the current state of the SQL collection in Data Safe.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
     */
    public readonly purgeLogsTrigger!: pulumi.Output<boolean | undefined>;
    /**
     * (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
     */
    public readonly refreshLogInsightsTrigger!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     */
    public readonly sqlLevel!: pulumi.Output<string>;
    /**
     * (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
     */
    public readonly startTrigger!: pulumi.Output<boolean | undefined>;
    /**
     * The current state of the SQL collection.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly stopTrigger!: pulumi.Output<boolean | undefined>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The OCID of the target corresponding to the security policy deployment.
     */
    public readonly targetId!: pulumi.Output<string>;
    /**
     * The time that the SQL collection was created, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeLastStarted!: pulumi.Output<string>;
    /**
     * The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeLastStopped!: pulumi.Output<string>;
    /**
     * The last date and time the SQL collection was updated, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a SqlCollection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlCollectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SqlCollectionArgs | SqlCollectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SqlCollectionState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["dbUserName"] = state ? state.dbUserName : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["generateSqlFirewallPolicyTrigger"] = state ? state.generateSqlFirewallPolicyTrigger : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["purgeLogsTrigger"] = state ? state.purgeLogsTrigger : undefined;
            resourceInputs["refreshLogInsightsTrigger"] = state ? state.refreshLogInsightsTrigger : undefined;
            resourceInputs["sqlLevel"] = state ? state.sqlLevel : undefined;
            resourceInputs["startTrigger"] = state ? state.startTrigger : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["stopTrigger"] = state ? state.stopTrigger : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["targetId"] = state ? state.targetId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastStarted"] = state ? state.timeLastStarted : undefined;
            resourceInputs["timeLastStopped"] = state ? state.timeLastStopped : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as SqlCollectionArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.dbUserName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbUserName'");
            }
            if ((!args || args.targetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["dbUserName"] = args ? args.dbUserName : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["generateSqlFirewallPolicyTrigger"] = args ? args.generateSqlFirewallPolicyTrigger : undefined;
            resourceInputs["purgeLogsTrigger"] = args ? args.purgeLogsTrigger : undefined;
            resourceInputs["refreshLogInsightsTrigger"] = args ? args.refreshLogInsightsTrigger : undefined;
            resourceInputs["sqlLevel"] = args ? args.sqlLevel : undefined;
            resourceInputs["startTrigger"] = args ? args.startTrigger : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["stopTrigger"] = args ? args.stopTrigger : undefined;
            resourceInputs["targetId"] = args ? args.targetId : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastStarted"] = undefined /*out*/;
            resourceInputs["timeLastStopped"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SqlCollection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SqlCollection resources.
 */
export interface SqlCollectionState {
    /**
     * (Updatable) The OCID of the compartment containing the SQL collection.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The database user name.
     */
    dbUserName?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The description of the SQL collection.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
     */
    generateSqlFirewallPolicyTrigger?: pulumi.Input<boolean>;
    /**
     * Details about the current state of the SQL collection in Data Safe.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
     */
    purgeLogsTrigger?: pulumi.Input<boolean>;
    /**
     * (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
     */
    refreshLogInsightsTrigger?: pulumi.Input<boolean>;
    /**
     * Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     */
    sqlLevel?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
     */
    startTrigger?: pulumi.Input<boolean>;
    /**
     * The current state of the SQL collection.
     */
    state?: pulumi.Input<string>;
    /**
     * Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
     */
    status?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    stopTrigger?: pulumi.Input<boolean>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The OCID of the target corresponding to the security policy deployment.
     */
    targetId?: pulumi.Input<string>;
    /**
     * The time that the SQL collection was created, in the format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The timestamp of the most recent SqlCollection start operation, in the format defined by RFC3339.
     */
    timeLastStarted?: pulumi.Input<string>;
    /**
     * The timestamp of the most recent SqlCollection stop operation, in the format defined by RFC3339.
     */
    timeLastStopped?: pulumi.Input<string>;
    /**
     * The last date and time the SQL collection was updated, in the format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SqlCollection resource.
 */
export interface SqlCollectionArgs {
    /**
     * (Updatable) The OCID of the compartment containing the SQL collection.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The database user name.
     */
    dbUserName: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The description of the SQL collection.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name of the SQL collection. The name does not have to be unique, and it is changeable.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) An optional property when incremented triggers Generate Sql Firewall Policy. Could be set to any integer value.
     */
    generateSqlFirewallPolicyTrigger?: pulumi.Input<boolean>;
    /**
     * (Updatable) An optional property when incremented triggers Purge Logs. Could be set to any integer value.
     */
    purgeLogsTrigger?: pulumi.Input<boolean>;
    /**
     * (Updatable) An optional property when incremented triggers Refresh Log Insights. Could be set to any integer value.
     */
    refreshLogInsightsTrigger?: pulumi.Input<boolean>;
    /**
     * Specifies the level of SQL that will be collected. USER_ISSUED_SQL - User issued SQL statements only. ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
     */
    sqlLevel?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when incremented triggers Start. Could be set to any integer value.
     */
    startTrigger?: pulumi.Input<boolean>;
    /**
     * Specifies if the SqlCollection has to be started after creation. Enabled indicates that the SqlCollection will be started after creation.
     */
    status?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property when incremented triggers Stop. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    stopTrigger?: pulumi.Input<boolean>;
    /**
     * The OCID of the target corresponding to the security policy deployment.
     */
    targetId: pulumi.Input<string>;
}
