// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Target Database Peer Target Database resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Creates the peer target database under the primary target database in Data Safe.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTargetDatabasePeerTargetDatabase = new oci.datasafe.TargetDatabasePeerTargetDatabase("test_target_database_peer_target_database", {
 *     databaseDetails: {
 *         databaseType: targetDatabasePeerTargetDatabaseDatabaseDetailsDatabaseType,
 *         infrastructureType: targetDatabasePeerTargetDatabaseDatabaseDetailsInfrastructureType,
 *         autonomousDatabaseId: testAutonomousDatabase.id,
 *         dbSystemId: testDbSystem.id,
 *         instanceId: testInstance.id,
 *         ipAddresses: targetDatabasePeerTargetDatabaseDatabaseDetailsIpAddresses,
 *         listenerPort: targetDatabasePeerTargetDatabaseDatabaseDetailsListenerPort,
 *         serviceName: testService.name,
 *         vmClusterId: testVmCluster.id,
 *     },
 *     targetDatabaseId: testTargetDatabase.id,
 *     dataguardAssociationId: testAssociation.id,
 *     description: targetDatabasePeerTargetDatabaseDescription,
 *     displayName: targetDatabasePeerTargetDatabaseDisplayName,
 *     tlsConfig: {
 *         status: targetDatabasePeerTargetDatabaseTlsConfigStatus,
 *         certificateStoreType: targetDatabasePeerTargetDatabaseTlsConfigCertificateStoreType,
 *         keyStoreContent: targetDatabasePeerTargetDatabaseTlsConfigKeyStoreContent,
 *         storePassword: targetDatabasePeerTargetDatabaseTlsConfigStorePassword,
 *         trustStoreContent: targetDatabasePeerTargetDatabaseTlsConfigTrustStoreContent,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * TargetDatabasePeerTargetDatabases can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DataSafe/targetDatabasePeerTargetDatabase:TargetDatabasePeerTargetDatabase test_target_database_peer_target_database "targetDatabases/{targetDatabaseId}/peerTargetDatabases/{peerTargetDatabaseId}"
 * ```
 */
export class TargetDatabasePeerTargetDatabase extends pulumi.CustomResource {
    /**
     * Get an existing TargetDatabasePeerTargetDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TargetDatabasePeerTargetDatabaseState, opts?: pulumi.CustomResourceOptions): TargetDatabasePeerTargetDatabase {
        return new TargetDatabasePeerTargetDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataSafe/targetDatabasePeerTargetDatabase:TargetDatabasePeerTargetDatabase';

    /**
     * Returns true if the given object is an instance of TargetDatabasePeerTargetDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TargetDatabasePeerTargetDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TargetDatabasePeerTargetDatabase.__pulumiType;
    }

    /**
     * (Updatable) Details of the database for the registration in Data Safe.
     */
    public readonly databaseDetails!: pulumi.Output<outputs.DataSafe.TargetDatabasePeerTargetDatabaseDatabaseDetails>;
    /**
     * Unique name of the database associated to the peer target database.
     */
    public /*out*/ readonly databaseUniqueName!: pulumi.Output<string>;
    /**
     * The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     */
    public readonly dataguardAssociationId!: pulumi.Output<string>;
    /**
     * (Updatable) The description of the peer target database in Data Safe.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The secondary key assigned for the peer target database in Data Safe.
     */
    public /*out*/ readonly key!: pulumi.Output<number>;
    /**
     * Details about the current state of the peer target database in Data Safe.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * Role of the database associated to the peer target database.
     */
    public /*out*/ readonly role!: pulumi.Output<string>;
    /**
     * The current state of the peer target database in Data Safe.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The OCID of the Data Safe target database.
     */
    public readonly targetDatabaseId!: pulumi.Output<string>;
    /**
     * The date and time of the peer target database registration in Data Safe.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * (Updatable) The details required to establish a TLS enabled connection.
     */
    public readonly tlsConfig!: pulumi.Output<outputs.DataSafe.TargetDatabasePeerTargetDatabaseTlsConfig>;

    /**
     * Create a TargetDatabasePeerTargetDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TargetDatabasePeerTargetDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TargetDatabasePeerTargetDatabaseArgs | TargetDatabasePeerTargetDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TargetDatabasePeerTargetDatabaseState | undefined;
            resourceInputs["databaseDetails"] = state ? state.databaseDetails : undefined;
            resourceInputs["databaseUniqueName"] = state ? state.databaseUniqueName : undefined;
            resourceInputs["dataguardAssociationId"] = state ? state.dataguardAssociationId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["targetDatabaseId"] = state ? state.targetDatabaseId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["tlsConfig"] = state ? state.tlsConfig : undefined;
        } else {
            const args = argsOrState as TargetDatabasePeerTargetDatabaseArgs | undefined;
            if ((!args || args.databaseDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseDetails'");
            }
            if ((!args || args.targetDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetDatabaseId'");
            }
            resourceInputs["databaseDetails"] = args ? args.databaseDetails : undefined;
            resourceInputs["dataguardAssociationId"] = args ? args.dataguardAssociationId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["targetDatabaseId"] = args ? args.targetDatabaseId : undefined;
            resourceInputs["tlsConfig"] = args ? args.tlsConfig : undefined;
            resourceInputs["databaseUniqueName"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TargetDatabasePeerTargetDatabase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TargetDatabasePeerTargetDatabase resources.
 */
export interface TargetDatabasePeerTargetDatabaseState {
    /**
     * (Updatable) Details of the database for the registration in Data Safe.
     */
    databaseDetails?: pulumi.Input<inputs.DataSafe.TargetDatabasePeerTargetDatabaseDatabaseDetails>;
    /**
     * Unique name of the database associated to the peer target database.
     */
    databaseUniqueName?: pulumi.Input<string>;
    /**
     * The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     */
    dataguardAssociationId?: pulumi.Input<string>;
    /**
     * (Updatable) The description of the peer target database in Data Safe.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The secondary key assigned for the peer target database in Data Safe.
     */
    key?: pulumi.Input<number>;
    /**
     * Details about the current state of the peer target database in Data Safe.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Role of the database associated to the peer target database.
     */
    role?: pulumi.Input<string>;
    /**
     * The current state of the peer target database in Data Safe.
     */
    state?: pulumi.Input<string>;
    /**
     * The OCID of the Data Safe target database.
     */
    targetDatabaseId?: pulumi.Input<string>;
    /**
     * The date and time of the peer target database registration in Data Safe.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) The details required to establish a TLS enabled connection.
     */
    tlsConfig?: pulumi.Input<inputs.DataSafe.TargetDatabasePeerTargetDatabaseTlsConfig>;
}

/**
 * The set of arguments for constructing a TargetDatabasePeerTargetDatabase resource.
 */
export interface TargetDatabasePeerTargetDatabaseArgs {
    /**
     * (Updatable) Details of the database for the registration in Data Safe.
     */
    databaseDetails: pulumi.Input<inputs.DataSafe.TargetDatabasePeerTargetDatabaseDatabaseDetails>;
    /**
     * The OCID of the Data Guard Association resource in which the database being registered is considered as peer database to the primary database.
     */
    dataguardAssociationId?: pulumi.Input<string>;
    /**
     * (Updatable) The description of the peer target database in Data Safe.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name of the peer target database in Data Safe. The name is modifiable and does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The OCID of the Data Safe target database.
     */
    targetDatabaseId: pulumi.Input<string>;
    /**
     * (Updatable) The details required to establish a TLS enabled connection.
     */
    tlsConfig?: pulumi.Input<inputs.DataSafe.TargetDatabasePeerTargetDatabaseTlsConfig>;
}
