// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Unified Audit Policy resource in Oracle Cloud Infrastructure Data Safe service.
 *
 * Creates the specified unified audit policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUnifiedAuditPolicy = new oci.datasafe.UnifiedAuditPolicy("test_unified_audit_policy", {
 *     compartmentId: compartmentId,
 *     conditions: [{
 *         entitySelection: unifiedAuditPolicyConditionsEntitySelection,
 *         entityType: unifiedAuditPolicyConditionsEntityType,
 *         operationStatus: unifiedAuditPolicyConditionsOperationStatus,
 *         attributeSetId: testAttributeSet.id,
 *         roleNames: unifiedAuditPolicyConditionsRoleNames,
 *         userNames: unifiedAuditPolicyConditionsUserNames,
 *     }],
 *     securityPolicyId: testSecurityPolicy.id,
 *     status: unifiedAuditPolicyStatus,
 *     unifiedAuditPolicyDefinitionId: testUnifiedAuditPolicyDefinition.id,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     description: unifiedAuditPolicyDescription,
 *     displayName: unifiedAuditPolicyDisplayName,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * UnifiedAuditPolicies can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy test_unified_audit_policy "id"
 * ```
 */
export class UnifiedAuditPolicy extends pulumi.CustomResource {
    /**
     * Get an existing UnifiedAuditPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UnifiedAuditPolicyState, opts?: pulumi.CustomResourceOptions): UnifiedAuditPolicy {
        return new UnifiedAuditPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataSafe/unifiedAuditPolicy:UnifiedAuditPolicy';

    /**
     * Returns true if the given object is an instance of UnifiedAuditPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UnifiedAuditPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UnifiedAuditPolicy.__pulumiType;
    }

    /**
     * (Updatable) The OCID of the compartment in which to create the unified audit policy.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Lists the audit policy provisioning conditions.
     */
    public readonly conditions!: pulumi.Output<outputs.DataSafe.UnifiedAuditPolicyCondition[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The description of the unified audit policy in Data Safe.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Indicates on whom the audit policy is enabled.
     */
    public /*out*/ readonly enabledEntities!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * Indicates whether the unified audit policy is seeded or not.
     */
    public /*out*/ readonly isSeeded!: pulumi.Output<boolean>;
    /**
     * The details of the current state of the unified audit policy in Data Safe.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * The OCID of the security policy corresponding to the unified audit policy.
     */
    public readonly securityPolicyId!: pulumi.Output<string>;
    /**
     * The current state of the unified audit policy.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The time the the unified audit policy was created, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The last date and time the unified audit policy was updated, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * The OCID of the associated unified audit policy definition.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly unifiedAuditPolicyDefinitionId!: pulumi.Output<string>;

    /**
     * Create a UnifiedAuditPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UnifiedAuditPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UnifiedAuditPolicyArgs | UnifiedAuditPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UnifiedAuditPolicyState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["conditions"] = state ? state.conditions : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enabledEntities"] = state ? state.enabledEntities : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isSeeded"] = state ? state.isSeeded : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["unifiedAuditPolicyDefinitionId"] = state ? state.unifiedAuditPolicyDefinitionId : undefined;
        } else {
            const args = argsOrState as UnifiedAuditPolicyArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.conditions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'conditions'");
            }
            if ((!args || args.securityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyId'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            if ((!args || args.unifiedAuditPolicyDefinitionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'unifiedAuditPolicyDefinitionId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["conditions"] = args ? args.conditions : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["unifiedAuditPolicyDefinitionId"] = args ? args.unifiedAuditPolicyDefinitionId : undefined;
            resourceInputs["enabledEntities"] = undefined /*out*/;
            resourceInputs["isSeeded"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UnifiedAuditPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UnifiedAuditPolicy resources.
 */
export interface UnifiedAuditPolicyState {
    /**
     * (Updatable) The OCID of the compartment in which to create the unified audit policy.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Lists the audit policy provisioning conditions.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.DataSafe.UnifiedAuditPolicyCondition>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The description of the unified audit policy in Data Safe.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Indicates on whom the audit policy is enabled.
     */
    enabledEntities?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates whether the unified audit policy is seeded or not.
     */
    isSeeded?: pulumi.Input<boolean>;
    /**
     * The details of the current state of the unified audit policy in Data Safe.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The OCID of the security policy corresponding to the unified audit policy.
     */
    securityPolicyId?: pulumi.Input<string>;
    /**
     * The current state of the unified audit policy.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time the the unified audit policy was created, in the format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The last date and time the unified audit policy was updated, in the format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The OCID of the associated unified audit policy definition.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    unifiedAuditPolicyDefinitionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UnifiedAuditPolicy resource.
 */
export interface UnifiedAuditPolicyArgs {
    /**
     * (Updatable) The OCID of the compartment in which to create the unified audit policy.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Lists the audit policy provisioning conditions.
     */
    conditions: pulumi.Input<pulumi.Input<inputs.DataSafe.UnifiedAuditPolicyCondition>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm) Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The description of the unified audit policy in Data Safe.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The display name of the unified audit policy in Data Safe. The name is modifiable and does not need to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The OCID of the security policy corresponding to the unified audit policy.
     */
    securityPolicyId: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether the unified audit policy has been enabled or disabled.
     */
    status: pulumi.Input<string>;
    /**
     * The OCID of the associated unified audit policy definition.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    unifiedAuditPolicyDefinitionId: pulumi.Input<string>;
}
