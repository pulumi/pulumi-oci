// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Jobs in Oracle Cloud Infrastructure Data Science service.
 *
 * List jobs in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testJobs = oci.DataScience.getJobs({
 *     compartmentId: compartmentId,
 *     createdBy: jobCreatedBy,
 *     displayName: jobDisplayName,
 *     id: jobId,
 *     projectId: testProject.id,
 *     state: jobState,
 * });
 * ```
 */
export function getJobs(args: GetJobsArgs, opts?: pulumi.InvokeOptions): Promise<GetJobsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataScience/getJobs:getJobs", {
        "compartmentId": args.compartmentId,
        "createdBy": args.createdBy,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "projectId": args.projectId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getJobs.
 */
export interface GetJobsArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
     */
    createdBy?: string;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: string;
    filters?: inputs.DataScience.GetJobsFilter[];
    /**
     * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
     */
    id?: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId?: string;
    /**
     * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state?: string;
}

/**
 * A collection of values returned by getJobs.
 */
export interface GetJobsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job.
     */
    readonly compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the project.
     */
    readonly createdBy?: string;
    /**
     * A user-friendly display name for the resource.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataScience.GetJobsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the job.
     */
    readonly id?: string;
    /**
     * The list of jobs.
     */
    readonly jobs: outputs.DataScience.GetJobsJob[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project to associate the job with.
     */
    readonly projectId?: string;
    /**
     * The state of the job.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Jobs in Oracle Cloud Infrastructure Data Science service.
 *
 * List jobs in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testJobs = oci.DataScience.getJobs({
 *     compartmentId: compartmentId,
 *     createdBy: jobCreatedBy,
 *     displayName: jobDisplayName,
 *     id: jobId,
 *     projectId: testProject.id,
 *     state: jobState,
 * });
 * ```
 */
export function getJobsOutput(args: GetJobsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetJobsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataScience/getJobs:getJobs", {
        "compartmentId": args.compartmentId,
        "createdBy": args.createdBy,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "projectId": args.projectId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getJobs.
 */
export interface GetJobsOutputArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataScience.GetJobsFilterArgs>[]>;
    /**
     * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
     */
    id?: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state?: pulumi.Input<string>;
}
