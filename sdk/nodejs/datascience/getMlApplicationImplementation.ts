// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Ml Application Implementation resource in Oracle Cloud Infrastructure Data Science service.
 *
 * Gets a MlApplicationImplementation by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMlApplicationImplementation = oci.DataScience.getMlApplicationImplementation({
 *     mlApplicationImplementationId: testMlApplicationImplementationOciDatascienceMlApplicationImplementation.id,
 * });
 * ```
 */
export function getMlApplicationImplementation(args: GetMlApplicationImplementationArgs, opts?: pulumi.InvokeOptions): Promise<GetMlApplicationImplementationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataScience/getMlApplicationImplementation:getMlApplicationImplementation", {
        "mlApplicationImplementationId": args.mlApplicationImplementationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMlApplicationImplementation.
 */
export interface GetMlApplicationImplementationArgs {
    /**
     * unique MlApplicationImplementation identifier
     */
    mlApplicationImplementationId: string;
}

/**
 * A collection of values returned by getMlApplicationImplementation.
 */
export interface GetMlApplicationImplementationResult {
    /**
     * List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
     */
    readonly allowedMigrationDestinations: string[];
    /**
     * List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
     */
    readonly applicationComponents: outputs.DataScience.GetMlApplicationImplementationApplicationComponent[];
    /**
     * The OCID of the compartment where ML Application Implementation is created.
     */
    readonly compartmentId: string;
    /**
     * Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
     */
    readonly configurationSchemas: outputs.DataScience.GetMlApplicationImplementationConfigurationSchema[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * short description of the argument
     */
    readonly description: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The OCID of the MlApplicationImplementation. Unique identifier that is immutable after creation.
     */
    readonly id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * Configuration of Logging for ML Application Implementation.
     */
    readonly loggings: outputs.DataScience.GetMlApplicationImplementationLogging[];
    /**
     * The OCID of the ML Application implemented by this ML Application Implementation.
     */
    readonly mlApplicationId: string;
    readonly mlApplicationImplementationId: string;
    /**
     * The name of ML Application (based on mlApplicationId)
     */
    readonly mlApplicationName: string;
    readonly mlApplicationPackage: {[key: string]: string};
    /**
     * List of ML Application package arguments provided during ML Application package upload.
     */
    readonly mlApplicationPackageArguments: outputs.DataScience.GetMlApplicationImplementationMlApplicationPackageArgument[];
    /**
     * ML Application Implementation name which is unique for given ML Application.
     */
    readonly name: string;
    readonly opcMlAppPackageArgs: {[key: string]: string};
    /**
     * The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
     */
    readonly packageVersion: string;
    /**
     * The current state of the MlApplicationImplementation.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
     */
    readonly timeCreated: string;
    /**
     * Time of last MlApplicationImplementation update in the format defined by RFC 3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Ml Application Implementation resource in Oracle Cloud Infrastructure Data Science service.
 *
 * Gets a MlApplicationImplementation by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMlApplicationImplementation = oci.DataScience.getMlApplicationImplementation({
 *     mlApplicationImplementationId: testMlApplicationImplementationOciDatascienceMlApplicationImplementation.id,
 * });
 * ```
 */
export function getMlApplicationImplementationOutput(args: GetMlApplicationImplementationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMlApplicationImplementationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataScience/getMlApplicationImplementation:getMlApplicationImplementation", {
        "mlApplicationImplementationId": args.mlApplicationImplementationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMlApplicationImplementation.
 */
export interface GetMlApplicationImplementationOutputArgs {
    /**
     * unique MlApplicationImplementation identifier
     */
    mlApplicationImplementationId: pulumi.Input<string>;
}
