// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Ml Application Instance resource in Oracle Cloud Infrastructure Data Science service.
 *
 * Gets a MlApplicationInstance by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMlApplicationInstance = oci.DataScience.getMlApplicationInstance({
 *     mlApplicationInstanceId: testMlApplicationInstanceOciDatascienceMlApplicationInstance.id,
 * });
 * ```
 */
export function getMlApplicationInstance(args: GetMlApplicationInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetMlApplicationInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataScience/getMlApplicationInstance:getMlApplicationInstance", {
        "mlApplicationInstanceId": args.mlApplicationInstanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMlApplicationInstance.
 */
export interface GetMlApplicationInstanceArgs {
    /**
     * unique MlApplicationInstance identifier
     */
    mlApplicationInstanceId: string;
}

/**
 * A collection of values returned by getMlApplicationInstance.
 */
export interface GetMlApplicationInstanceResult {
    /**
     * AuthN/Z configuration for online prediction
     */
    readonly authConfigurations: outputs.DataScience.GetMlApplicationInstanceAuthConfiguration[];
    /**
     * The OCID of the compartment where the MlApplicationInstance is created.
     */
    readonly compartmentId: string;
    /**
     * Data that are used for provisioning of the given MlApplicationInstance. These are validated against configurationSchema defined in referenced MlApplicationImplementation.
     */
    readonly configurations: outputs.DataScience.GetMlApplicationInstanceConfiguration[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * The name of MlApplicationInstance. System will generate displayName when not provided during creation.
     */
    readonly displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The OCID of the MlApplicationInstance. Unique identifier that is immutable after creation
     */
    readonly id: string;
    /**
     * States whether the MlApplicationInstance is supposed to be in ACTIVE lifecycle state.
     */
    readonly isEnabled: boolean;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * The current substate of the MlApplicationInstance. The substate has MlApplicationInstance specific values in comparison with lifecycleState which has standard values common for all Oracle Cloud Infrastructure resources. The NEEDS_ATTENTION and FAILED substates are deprecated in favor of (NON_)?RECOVERABLE_(PROVIDER|SERVICE)_ISSUE and will be removed in next release.
     */
    readonly lifecycleSubstate: string;
    /**
     * The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
     */
    readonly mlApplicationId: string;
    /**
     * The OCID of ML Application Implementation selected as a certain solution for a given ML problem (ML Application)
     */
    readonly mlApplicationImplementationId: string;
    /**
     * The name of Ml Application Implementation (based on mlApplicationImplementationId)
     */
    readonly mlApplicationImplementationName: string;
    readonly mlApplicationInstanceId: string;
    /**
     * The name of ML Application (based on mlApplicationId).
     */
    readonly mlApplicationName: string;
    /**
     * Prediction endpoint related information.
     */
    readonly predictionEndpointDetails: outputs.DataScience.GetMlApplicationInstancePredictionEndpointDetail[];
    /**
     * The current state of the MlApplicationInstance.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The time the the MlApplication was created. An RFC3339 formatted datetime string
     */
    readonly timeCreated: string;
    /**
     * Time of last MlApplicationInstance update in the format defined by RFC 3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Ml Application Instance resource in Oracle Cloud Infrastructure Data Science service.
 *
 * Gets a MlApplicationInstance by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMlApplicationInstance = oci.DataScience.getMlApplicationInstance({
 *     mlApplicationInstanceId: testMlApplicationInstanceOciDatascienceMlApplicationInstance.id,
 * });
 * ```
 */
export function getMlApplicationInstanceOutput(args: GetMlApplicationInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMlApplicationInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataScience/getMlApplicationInstance:getMlApplicationInstance", {
        "mlApplicationInstanceId": args.mlApplicationInstanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMlApplicationInstance.
 */
export interface GetMlApplicationInstanceOutputArgs {
    /**
     * unique MlApplicationInstance identifier
     */
    mlApplicationInstanceId: pulumi.Input<string>;
}
