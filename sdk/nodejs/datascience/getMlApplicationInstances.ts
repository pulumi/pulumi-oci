// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Ml Application Instances in Oracle Cloud Infrastructure Data Science service.
 *
 * Returns a list of MlApplicationsInstances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMlApplicationInstances = oci.DataScience.getMlApplicationInstances({
 *     compartmentId: compartmentId,
 *     displayName: mlApplicationInstanceDisplayName,
 *     mlApplicationId: testMlApplication.id,
 *     state: mlApplicationInstanceState,
 * });
 * ```
 */
export function getMlApplicationInstances(args: GetMlApplicationInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetMlApplicationInstancesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataScience/getMlApplicationInstances:getMlApplicationInstances", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "mlApplicationId": args.mlApplicationId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMlApplicationInstances.
 */
export interface GetMlApplicationInstancesArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: string;
    filters?: inputs.DataScience.GetMlApplicationInstancesFilter[];
    /**
     * unique MlApplication identifier
     */
    mlApplicationId?: string;
    /**
     * A filter to return only resources matching the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getMlApplicationInstances.
 */
export interface GetMlApplicationInstancesResult {
    /**
     * The OCID of the compartment where the MlApplicationInstance is created.
     */
    readonly compartmentId: string;
    /**
     * The name of MlApplicationInstance. System will generate displayName when not provided during creation.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataScience.GetMlApplicationInstancesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The OCID of ML Application. This resource is an instance of ML Application referenced by this OCID.
     */
    readonly mlApplicationId?: string;
    /**
     * The list of ml_application_instance_collection.
     */
    readonly mlApplicationInstanceCollections: outputs.DataScience.GetMlApplicationInstancesMlApplicationInstanceCollection[];
    /**
     * The current state of the MlApplicationInstance.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Ml Application Instances in Oracle Cloud Infrastructure Data Science service.
 *
 * Returns a list of MlApplicationsInstances.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMlApplicationInstances = oci.DataScience.getMlApplicationInstances({
 *     compartmentId: compartmentId,
 *     displayName: mlApplicationInstanceDisplayName,
 *     mlApplicationId: testMlApplication.id,
 *     state: mlApplicationInstanceState,
 * });
 * ```
 */
export function getMlApplicationInstancesOutput(args: GetMlApplicationInstancesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMlApplicationInstancesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataScience/getMlApplicationInstances:getMlApplicationInstances", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "mlApplicationId": args.mlApplicationId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMlApplicationInstances.
 */
export interface GetMlApplicationInstancesOutputArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataScience.GetMlApplicationInstancesFilterArgs>[]>;
    /**
     * unique MlApplication identifier
     */
    mlApplicationId?: pulumi.Input<string>;
    /**
     * A filter to return only resources matching the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
