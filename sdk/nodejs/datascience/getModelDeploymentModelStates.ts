// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Model Deployment Model States in Oracle Cloud Infrastructure Data Science service.
 *
 * Lists the status of models in a model group deployment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testModelDeploymentModelStates = oci.DataScience.getModelDeploymentModelStates({
 *     compartmentId: compartmentId,
 *     modelDeploymentId: testModelDeployment.id,
 *     displayName: modelDeploymentModelStateDisplayName,
 *     inferenceKey: modelDeploymentModelStateInferenceKey,
 *     modelId: testModel.id,
 *     projectId: testProject.id,
 * });
 * ```
 */
export function getModelDeploymentModelStates(args: GetModelDeploymentModelStatesArgs, opts?: pulumi.InvokeOptions): Promise<GetModelDeploymentModelStatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataScience/getModelDeploymentModelStates:getModelDeploymentModelStates", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "inferenceKey": args.inferenceKey,
        "modelDeploymentId": args.modelDeploymentId,
        "modelId": args.modelId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getModelDeploymentModelStates.
 */
export interface GetModelDeploymentModelStatesArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: string;
    filters?: inputs.DataScience.GetModelDeploymentModelStatesFilter[];
    /**
     * <b>Filter</b> results by the inference key.
     */
    inferenceKey?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model deployment.
     */
    modelDeploymentId: string;
    /**
     * <b>Filter</b> results by the model ocid.
     */
    modelId?: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId?: string;
}

/**
 * A collection of values returned by getModelDeploymentModelStates.
 */
export interface GetModelDeploymentModelStatesResult {
    readonly compartmentId: string;
    /**
     * A user-friendly display name for the resource.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataScience.GetModelDeploymentModelStatesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * SaaS friendly name for the model OCID.
     */
    readonly inferenceKey?: string;
    readonly modelDeploymentId: string;
    /**
     * The list of model_deployment_model_states.
     */
    readonly modelDeploymentModelStates: outputs.DataScience.GetModelDeploymentModelStatesModelDeploymentModelState[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployed model in model deployment.
     */
    readonly modelId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the model.
     */
    readonly projectId?: string;
}
/**
 * This data source provides the list of Model Deployment Model States in Oracle Cloud Infrastructure Data Science service.
 *
 * Lists the status of models in a model group deployment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testModelDeploymentModelStates = oci.DataScience.getModelDeploymentModelStates({
 *     compartmentId: compartmentId,
 *     modelDeploymentId: testModelDeployment.id,
 *     displayName: modelDeploymentModelStateDisplayName,
 *     inferenceKey: modelDeploymentModelStateInferenceKey,
 *     modelId: testModel.id,
 *     projectId: testProject.id,
 * });
 * ```
 */
export function getModelDeploymentModelStatesOutput(args: GetModelDeploymentModelStatesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetModelDeploymentModelStatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataScience/getModelDeploymentModelStates:getModelDeploymentModelStates", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "inferenceKey": args.inferenceKey,
        "modelDeploymentId": args.modelDeploymentId,
        "modelId": args.modelId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getModelDeploymentModelStates.
 */
export interface GetModelDeploymentModelStatesOutputArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataScience.GetModelDeploymentModelStatesFilterArgs>[]>;
    /**
     * <b>Filter</b> results by the inference key.
     */
    inferenceKey?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model deployment.
     */
    modelDeploymentId: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by the model ocid.
     */
    modelId?: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId?: pulumi.Input<string>;
}
