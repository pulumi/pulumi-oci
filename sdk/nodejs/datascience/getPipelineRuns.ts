// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Pipeline Runs in Oracle Cloud Infrastructure Data Science service.
 *
 * Returns a list of PipelineRuns.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPipelineRuns = oci.DataScience.getPipelineRuns({
 *     compartmentId: compartmentId,
 *     createdBy: pipelineRunCreatedBy,
 *     displayName: pipelineRunDisplayName,
 *     id: pipelineRunId,
 *     pipelineId: testPipeline.id,
 *     state: pipelineRunState,
 * });
 * ```
 */
export function getPipelineRuns(args: GetPipelineRunsArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineRunsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataScience/getPipelineRuns:getPipelineRuns", {
        "compartmentId": args.compartmentId,
        "createdBy": args.createdBy,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "pipelineId": args.pipelineId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelineRuns.
 */
export interface GetPipelineRunsArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
     */
    createdBy?: string;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: string;
    filters?: inputs.DataScience.GetPipelineRunsFilter[];
    /**
     * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
     */
    id?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline.
     */
    pipelineId?: string;
    /**
     * The current state of the PipelineRun.
     */
    state?: string;
}

/**
 * A collection of values returned by getPipelineRuns.
 */
export interface GetPipelineRunsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the pipeline run.
     */
    readonly compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the pipeline run.
     */
    readonly createdBy?: string;
    /**
     * A user-friendly display name for the resource.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataScience.GetPipelineRunsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline run.
     */
    readonly id?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline for which pipeline run is created.
     */
    readonly pipelineId?: string;
    /**
     * The list of pipeline_runs.
     */
    readonly pipelineRuns: outputs.DataScience.GetPipelineRunsPipelineRun[];
    /**
     * The state of the step run.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Pipeline Runs in Oracle Cloud Infrastructure Data Science service.
 *
 * Returns a list of PipelineRuns.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPipelineRuns = oci.DataScience.getPipelineRuns({
 *     compartmentId: compartmentId,
 *     createdBy: pipelineRunCreatedBy,
 *     displayName: pipelineRunDisplayName,
 *     id: pipelineRunId,
 *     pipelineId: testPipeline.id,
 *     state: pipelineRunState,
 * });
 * ```
 */
export function getPipelineRunsOutput(args: GetPipelineRunsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPipelineRunsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataScience/getPipelineRuns:getPipelineRuns", {
        "compartmentId": args.compartmentId,
        "createdBy": args.createdBy,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "pipelineId": args.pipelineId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelineRuns.
 */
export interface GetPipelineRunsOutputArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the resource.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataScience.GetPipelineRunsFilterArgs>[]>;
    /**
     * <b>Filter</b> results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resource type.
     */
    id?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline.
     */
    pipelineId?: pulumi.Input<string>;
    /**
     * The current state of the PipelineRun.
     */
    state?: pulumi.Input<string>;
}
