// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Schedules in Oracle Cloud Infrastructure Data Science service.
 *
 * Returns a list of Schedules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSchedules = oci.DataScience.getSchedules({
 *     compartmentId: compartmentId,
 *     displayName: scheduleDisplayName,
 *     id: scheduleId,
 *     projectId: testProject.id,
 *     state: scheduleState,
 * });
 * ```
 */
export function getSchedules(args: GetSchedulesArgs, opts?: pulumi.InvokeOptions): Promise<GetSchedulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DataScience/getSchedules:getSchedules", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "projectId": args.projectId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchedules.
 */
export interface GetSchedulesArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: string;
    filters?: inputs.DataScience.GetSchedulesFilter[];
    /**
     * unique Schedule identifier
     */
    id?: string;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getSchedules.
 */
export interface GetSchedulesResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the schedule.
     */
    readonly compartmentId: string;
    /**
     * A user-friendly display name for the resource. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DataScience.GetSchedulesFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the schedule.
     */
    readonly id?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project associated with the schedule.
     */
    readonly projectId?: string;
    /**
     * The list of schedules.
     */
    readonly schedules: outputs.DataScience.GetSchedulesSchedule[];
    /**
     * The current state of the schedule.           Example: `ACTIVE`
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Schedules in Oracle Cloud Infrastructure Data Science service.
 *
 * Returns a list of Schedules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSchedules = oci.DataScience.getSchedules({
 *     compartmentId: compartmentId,
 *     displayName: scheduleDisplayName,
 *     id: scheduleId,
 *     projectId: testProject.id,
 *     state: scheduleState,
 * });
 * ```
 */
export function getSchedulesOutput(args: GetSchedulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSchedulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DataScience/getSchedules:getSchedules", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "projectId": args.projectId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchedules.
 */
export interface GetSchedulesOutputArgs {
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by its user-friendly name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DataScience.GetSchedulesFilterArgs>[]>;
    /**
     * unique Schedule identifier
     */
    id?: pulumi.Input<string>;
    /**
     * <b>Filter</b> results by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
