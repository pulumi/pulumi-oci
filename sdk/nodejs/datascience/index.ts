// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetContainersArgs, GetContainersResult, GetContainersOutputArgs } from "./getContainers";
export const getContainers: typeof import("./getContainers").getContainers = null as any;
export const getContainersOutput: typeof import("./getContainers").getContainersOutput = null as any;
utilities.lazyLoad(exports, ["getContainers","getContainersOutput"], () => require("./getContainers"));

export { GetFastLaunchJobConfigsArgs, GetFastLaunchJobConfigsResult, GetFastLaunchJobConfigsOutputArgs } from "./getFastLaunchJobConfigs";
export const getFastLaunchJobConfigs: typeof import("./getFastLaunchJobConfigs").getFastLaunchJobConfigs = null as any;
export const getFastLaunchJobConfigsOutput: typeof import("./getFastLaunchJobConfigs").getFastLaunchJobConfigsOutput = null as any;
utilities.lazyLoad(exports, ["getFastLaunchJobConfigs","getFastLaunchJobConfigsOutput"], () => require("./getFastLaunchJobConfigs"));

export { GetJobArgs, GetJobResult, GetJobOutputArgs } from "./getJob";
export const getJob: typeof import("./getJob").getJob = null as any;
export const getJobOutput: typeof import("./getJob").getJobOutput = null as any;
utilities.lazyLoad(exports, ["getJob","getJobOutput"], () => require("./getJob"));

export { GetJobRunArgs, GetJobRunResult, GetJobRunOutputArgs } from "./getJobRun";
export const getJobRun: typeof import("./getJobRun").getJobRun = null as any;
export const getJobRunOutput: typeof import("./getJobRun").getJobRunOutput = null as any;
utilities.lazyLoad(exports, ["getJobRun","getJobRunOutput"], () => require("./getJobRun"));

export { GetJobRunsArgs, GetJobRunsResult, GetJobRunsOutputArgs } from "./getJobRuns";
export const getJobRuns: typeof import("./getJobRuns").getJobRuns = null as any;
export const getJobRunsOutput: typeof import("./getJobRuns").getJobRunsOutput = null as any;
utilities.lazyLoad(exports, ["getJobRuns","getJobRunsOutput"], () => require("./getJobRuns"));

export { GetJobShapesArgs, GetJobShapesResult, GetJobShapesOutputArgs } from "./getJobShapes";
export const getJobShapes: typeof import("./getJobShapes").getJobShapes = null as any;
export const getJobShapesOutput: typeof import("./getJobShapes").getJobShapesOutput = null as any;
utilities.lazyLoad(exports, ["getJobShapes","getJobShapesOutput"], () => require("./getJobShapes"));

export { GetJobsArgs, GetJobsResult, GetJobsOutputArgs } from "./getJobs";
export const getJobs: typeof import("./getJobs").getJobs = null as any;
export const getJobsOutput: typeof import("./getJobs").getJobsOutput = null as any;
utilities.lazyLoad(exports, ["getJobs","getJobsOutput"], () => require("./getJobs"));

export { GetMlApplicationArgs, GetMlApplicationResult, GetMlApplicationOutputArgs } from "./getMlApplication";
export const getMlApplication: typeof import("./getMlApplication").getMlApplication = null as any;
export const getMlApplicationOutput: typeof import("./getMlApplication").getMlApplicationOutput = null as any;
utilities.lazyLoad(exports, ["getMlApplication","getMlApplicationOutput"], () => require("./getMlApplication"));

export { GetMlApplicationImplementationArgs, GetMlApplicationImplementationResult, GetMlApplicationImplementationOutputArgs } from "./getMlApplicationImplementation";
export const getMlApplicationImplementation: typeof import("./getMlApplicationImplementation").getMlApplicationImplementation = null as any;
export const getMlApplicationImplementationOutput: typeof import("./getMlApplicationImplementation").getMlApplicationImplementationOutput = null as any;
utilities.lazyLoad(exports, ["getMlApplicationImplementation","getMlApplicationImplementationOutput"], () => require("./getMlApplicationImplementation"));

export { GetMlApplicationImplementationsArgs, GetMlApplicationImplementationsResult, GetMlApplicationImplementationsOutputArgs } from "./getMlApplicationImplementations";
export const getMlApplicationImplementations: typeof import("./getMlApplicationImplementations").getMlApplicationImplementations = null as any;
export const getMlApplicationImplementationsOutput: typeof import("./getMlApplicationImplementations").getMlApplicationImplementationsOutput = null as any;
utilities.lazyLoad(exports, ["getMlApplicationImplementations","getMlApplicationImplementationsOutput"], () => require("./getMlApplicationImplementations"));

export { GetMlApplicationInstanceArgs, GetMlApplicationInstanceResult, GetMlApplicationInstanceOutputArgs } from "./getMlApplicationInstance";
export const getMlApplicationInstance: typeof import("./getMlApplicationInstance").getMlApplicationInstance = null as any;
export const getMlApplicationInstanceOutput: typeof import("./getMlApplicationInstance").getMlApplicationInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getMlApplicationInstance","getMlApplicationInstanceOutput"], () => require("./getMlApplicationInstance"));

export { GetMlApplicationInstancesArgs, GetMlApplicationInstancesResult, GetMlApplicationInstancesOutputArgs } from "./getMlApplicationInstances";
export const getMlApplicationInstances: typeof import("./getMlApplicationInstances").getMlApplicationInstances = null as any;
export const getMlApplicationInstancesOutput: typeof import("./getMlApplicationInstances").getMlApplicationInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getMlApplicationInstances","getMlApplicationInstancesOutput"], () => require("./getMlApplicationInstances"));

export { GetMlApplicationsArgs, GetMlApplicationsResult, GetMlApplicationsOutputArgs } from "./getMlApplications";
export const getMlApplications: typeof import("./getMlApplications").getMlApplications = null as any;
export const getMlApplicationsOutput: typeof import("./getMlApplications").getMlApplicationsOutput = null as any;
utilities.lazyLoad(exports, ["getMlApplications","getMlApplicationsOutput"], () => require("./getMlApplications"));

export { GetModelArgs, GetModelResult, GetModelOutputArgs } from "./getModel";
export const getModel: typeof import("./getModel").getModel = null as any;
export const getModelOutput: typeof import("./getModel").getModelOutput = null as any;
utilities.lazyLoad(exports, ["getModel","getModelOutput"], () => require("./getModel"));

export { GetModelCustomMetadataArtifactContentArgs, GetModelCustomMetadataArtifactContentResult, GetModelCustomMetadataArtifactContentOutputArgs } from "./getModelCustomMetadataArtifactContent";
export const getModelCustomMetadataArtifactContent: typeof import("./getModelCustomMetadataArtifactContent").getModelCustomMetadataArtifactContent = null as any;
export const getModelCustomMetadataArtifactContentOutput: typeof import("./getModelCustomMetadataArtifactContent").getModelCustomMetadataArtifactContentOutput = null as any;
utilities.lazyLoad(exports, ["getModelCustomMetadataArtifactContent","getModelCustomMetadataArtifactContentOutput"], () => require("./getModelCustomMetadataArtifactContent"));

export { GetModelDefinedMetadataArtifactContentArgs, GetModelDefinedMetadataArtifactContentResult, GetModelDefinedMetadataArtifactContentOutputArgs } from "./getModelDefinedMetadataArtifactContent";
export const getModelDefinedMetadataArtifactContent: typeof import("./getModelDefinedMetadataArtifactContent").getModelDefinedMetadataArtifactContent = null as any;
export const getModelDefinedMetadataArtifactContentOutput: typeof import("./getModelDefinedMetadataArtifactContent").getModelDefinedMetadataArtifactContentOutput = null as any;
utilities.lazyLoad(exports, ["getModelDefinedMetadataArtifactContent","getModelDefinedMetadataArtifactContentOutput"], () => require("./getModelDefinedMetadataArtifactContent"));

export { GetModelDeploymentArgs, GetModelDeploymentResult, GetModelDeploymentOutputArgs } from "./getModelDeployment";
export const getModelDeployment: typeof import("./getModelDeployment").getModelDeployment = null as any;
export const getModelDeploymentOutput: typeof import("./getModelDeployment").getModelDeploymentOutput = null as any;
utilities.lazyLoad(exports, ["getModelDeployment","getModelDeploymentOutput"], () => require("./getModelDeployment"));

export { GetModelDeploymentModelStatesArgs, GetModelDeploymentModelStatesResult, GetModelDeploymentModelStatesOutputArgs } from "./getModelDeploymentModelStates";
export const getModelDeploymentModelStates: typeof import("./getModelDeploymentModelStates").getModelDeploymentModelStates = null as any;
export const getModelDeploymentModelStatesOutput: typeof import("./getModelDeploymentModelStates").getModelDeploymentModelStatesOutput = null as any;
utilities.lazyLoad(exports, ["getModelDeploymentModelStates","getModelDeploymentModelStatesOutput"], () => require("./getModelDeploymentModelStates"));

export { GetModelDeploymentShapesArgs, GetModelDeploymentShapesResult, GetModelDeploymentShapesOutputArgs } from "./getModelDeploymentShapes";
export const getModelDeploymentShapes: typeof import("./getModelDeploymentShapes").getModelDeploymentShapes = null as any;
export const getModelDeploymentShapesOutput: typeof import("./getModelDeploymentShapes").getModelDeploymentShapesOutput = null as any;
utilities.lazyLoad(exports, ["getModelDeploymentShapes","getModelDeploymentShapesOutput"], () => require("./getModelDeploymentShapes"));

export { GetModelDeploymentsArgs, GetModelDeploymentsResult, GetModelDeploymentsOutputArgs } from "./getModelDeployments";
export const getModelDeployments: typeof import("./getModelDeployments").getModelDeployments = null as any;
export const getModelDeploymentsOutput: typeof import("./getModelDeployments").getModelDeploymentsOutput = null as any;
utilities.lazyLoad(exports, ["getModelDeployments","getModelDeploymentsOutput"], () => require("./getModelDeployments"));

export { GetModelGroupArgs, GetModelGroupResult, GetModelGroupOutputArgs } from "./getModelGroup";
export const getModelGroup: typeof import("./getModelGroup").getModelGroup = null as any;
export const getModelGroupOutput: typeof import("./getModelGroup").getModelGroupOutput = null as any;
utilities.lazyLoad(exports, ["getModelGroup","getModelGroupOutput"], () => require("./getModelGroup"));

export { GetModelGroupArtifactContentArgs, GetModelGroupArtifactContentResult, GetModelGroupArtifactContentOutputArgs } from "./getModelGroupArtifactContent";
export const getModelGroupArtifactContent: typeof import("./getModelGroupArtifactContent").getModelGroupArtifactContent = null as any;
export const getModelGroupArtifactContentOutput: typeof import("./getModelGroupArtifactContent").getModelGroupArtifactContentOutput = null as any;
utilities.lazyLoad(exports, ["getModelGroupArtifactContent","getModelGroupArtifactContentOutput"], () => require("./getModelGroupArtifactContent"));

export { GetModelGroupModelsArgs, GetModelGroupModelsResult, GetModelGroupModelsOutputArgs } from "./getModelGroupModels";
export const getModelGroupModels: typeof import("./getModelGroupModels").getModelGroupModels = null as any;
export const getModelGroupModelsOutput: typeof import("./getModelGroupModels").getModelGroupModelsOutput = null as any;
utilities.lazyLoad(exports, ["getModelGroupModels","getModelGroupModelsOutput"], () => require("./getModelGroupModels"));

export { GetModelGroupVersionHistoriesArgs, GetModelGroupVersionHistoriesResult, GetModelGroupVersionHistoriesOutputArgs } from "./getModelGroupVersionHistories";
export const getModelGroupVersionHistories: typeof import("./getModelGroupVersionHistories").getModelGroupVersionHistories = null as any;
export const getModelGroupVersionHistoriesOutput: typeof import("./getModelGroupVersionHistories").getModelGroupVersionHistoriesOutput = null as any;
utilities.lazyLoad(exports, ["getModelGroupVersionHistories","getModelGroupVersionHistoriesOutput"], () => require("./getModelGroupVersionHistories"));

export { GetModelGroupVersionHistoryArgs, GetModelGroupVersionHistoryResult, GetModelGroupVersionHistoryOutputArgs } from "./getModelGroupVersionHistory";
export const getModelGroupVersionHistory: typeof import("./getModelGroupVersionHistory").getModelGroupVersionHistory = null as any;
export const getModelGroupVersionHistoryOutput: typeof import("./getModelGroupVersionHistory").getModelGroupVersionHistoryOutput = null as any;
utilities.lazyLoad(exports, ["getModelGroupVersionHistory","getModelGroupVersionHistoryOutput"], () => require("./getModelGroupVersionHistory"));

export { GetModelGroupsArgs, GetModelGroupsResult, GetModelGroupsOutputArgs } from "./getModelGroups";
export const getModelGroups: typeof import("./getModelGroups").getModelGroups = null as any;
export const getModelGroupsOutput: typeof import("./getModelGroups").getModelGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getModelGroups","getModelGroupsOutput"], () => require("./getModelGroups"));

export { GetModelProvenanceArgs, GetModelProvenanceResult, GetModelProvenanceOutputArgs } from "./getModelProvenance";
export const getModelProvenance: typeof import("./getModelProvenance").getModelProvenance = null as any;
export const getModelProvenanceOutput: typeof import("./getModelProvenance").getModelProvenanceOutput = null as any;
utilities.lazyLoad(exports, ["getModelProvenance","getModelProvenanceOutput"], () => require("./getModelProvenance"));

export { GetModelVersionSetArgs, GetModelVersionSetResult, GetModelVersionSetOutputArgs } from "./getModelVersionSet";
export const getModelVersionSet: typeof import("./getModelVersionSet").getModelVersionSet = null as any;
export const getModelVersionSetOutput: typeof import("./getModelVersionSet").getModelVersionSetOutput = null as any;
utilities.lazyLoad(exports, ["getModelVersionSet","getModelVersionSetOutput"], () => require("./getModelVersionSet"));

export { GetModelVersionSetsArgs, GetModelVersionSetsResult, GetModelVersionSetsOutputArgs } from "./getModelVersionSets";
export const getModelVersionSets: typeof import("./getModelVersionSets").getModelVersionSets = null as any;
export const getModelVersionSetsOutput: typeof import("./getModelVersionSets").getModelVersionSetsOutput = null as any;
utilities.lazyLoad(exports, ["getModelVersionSets","getModelVersionSetsOutput"], () => require("./getModelVersionSets"));

export { GetModelsArgs, GetModelsResult, GetModelsOutputArgs } from "./getModels";
export const getModels: typeof import("./getModels").getModels = null as any;
export const getModelsOutput: typeof import("./getModels").getModelsOutput = null as any;
utilities.lazyLoad(exports, ["getModels","getModelsOutput"], () => require("./getModels"));

export { GetNotebookSessionArgs, GetNotebookSessionResult, GetNotebookSessionOutputArgs } from "./getNotebookSession";
export const getNotebookSession: typeof import("./getNotebookSession").getNotebookSession = null as any;
export const getNotebookSessionOutput: typeof import("./getNotebookSession").getNotebookSessionOutput = null as any;
utilities.lazyLoad(exports, ["getNotebookSession","getNotebookSessionOutput"], () => require("./getNotebookSession"));

export { GetNotebookSessionShapesArgs, GetNotebookSessionShapesResult, GetNotebookSessionShapesOutputArgs } from "./getNotebookSessionShapes";
export const getNotebookSessionShapes: typeof import("./getNotebookSessionShapes").getNotebookSessionShapes = null as any;
export const getNotebookSessionShapesOutput: typeof import("./getNotebookSessionShapes").getNotebookSessionShapesOutput = null as any;
utilities.lazyLoad(exports, ["getNotebookSessionShapes","getNotebookSessionShapesOutput"], () => require("./getNotebookSessionShapes"));

export { GetNotebookSessionsArgs, GetNotebookSessionsResult, GetNotebookSessionsOutputArgs } from "./getNotebookSessions";
export const getNotebookSessions: typeof import("./getNotebookSessions").getNotebookSessions = null as any;
export const getNotebookSessionsOutput: typeof import("./getNotebookSessions").getNotebookSessionsOutput = null as any;
utilities.lazyLoad(exports, ["getNotebookSessions","getNotebookSessionsOutput"], () => require("./getNotebookSessions"));

export { GetPipelineArgs, GetPipelineResult, GetPipelineOutputArgs } from "./getPipeline";
export const getPipeline: typeof import("./getPipeline").getPipeline = null as any;
export const getPipelineOutput: typeof import("./getPipeline").getPipelineOutput = null as any;
utilities.lazyLoad(exports, ["getPipeline","getPipelineOutput"], () => require("./getPipeline"));

export { GetPipelineRunArgs, GetPipelineRunResult, GetPipelineRunOutputArgs } from "./getPipelineRun";
export const getPipelineRun: typeof import("./getPipelineRun").getPipelineRun = null as any;
export const getPipelineRunOutput: typeof import("./getPipelineRun").getPipelineRunOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineRun","getPipelineRunOutput"], () => require("./getPipelineRun"));

export { GetPipelineRunsArgs, GetPipelineRunsResult, GetPipelineRunsOutputArgs } from "./getPipelineRuns";
export const getPipelineRuns: typeof import("./getPipelineRuns").getPipelineRuns = null as any;
export const getPipelineRunsOutput: typeof import("./getPipelineRuns").getPipelineRunsOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineRuns","getPipelineRunsOutput"], () => require("./getPipelineRuns"));

export { GetPipelinesArgs, GetPipelinesResult, GetPipelinesOutputArgs } from "./getPipelines";
export const getPipelines: typeof import("./getPipelines").getPipelines = null as any;
export const getPipelinesOutput: typeof import("./getPipelines").getPipelinesOutput = null as any;
utilities.lazyLoad(exports, ["getPipelines","getPipelinesOutput"], () => require("./getPipelines"));

export { GetPrivateEndpointArgs, GetPrivateEndpointResult, GetPrivateEndpointOutputArgs } from "./getPrivateEndpoint";
export const getPrivateEndpoint: typeof import("./getPrivateEndpoint").getPrivateEndpoint = null as any;
export const getPrivateEndpointOutput: typeof import("./getPrivateEndpoint").getPrivateEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateEndpoint","getPrivateEndpointOutput"], () => require("./getPrivateEndpoint"));

export { GetPrivateEndpointsArgs, GetPrivateEndpointsResult, GetPrivateEndpointsOutputArgs } from "./getPrivateEndpoints";
export const getPrivateEndpoints: typeof import("./getPrivateEndpoints").getPrivateEndpoints = null as any;
export const getPrivateEndpointsOutput: typeof import("./getPrivateEndpoints").getPrivateEndpointsOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateEndpoints","getPrivateEndpointsOutput"], () => require("./getPrivateEndpoints"));

export { GetProjectArgs, GetProjectResult, GetProjectOutputArgs } from "./getProject";
export const getProject: typeof import("./getProject").getProject = null as any;
export const getProjectOutput: typeof import("./getProject").getProjectOutput = null as any;
utilities.lazyLoad(exports, ["getProject","getProjectOutput"], () => require("./getProject"));

export { GetProjectsArgs, GetProjectsResult, GetProjectsOutputArgs } from "./getProjects";
export const getProjects: typeof import("./getProjects").getProjects = null as any;
export const getProjectsOutput: typeof import("./getProjects").getProjectsOutput = null as any;
utilities.lazyLoad(exports, ["getProjects","getProjectsOutput"], () => require("./getProjects"));

export { GetScheduleArgs, GetScheduleResult, GetScheduleOutputArgs } from "./getSchedule";
export const getSchedule: typeof import("./getSchedule").getSchedule = null as any;
export const getScheduleOutput: typeof import("./getSchedule").getScheduleOutput = null as any;
utilities.lazyLoad(exports, ["getSchedule","getScheduleOutput"], () => require("./getSchedule"));

export { GetSchedulesArgs, GetSchedulesResult, GetSchedulesOutputArgs } from "./getSchedules";
export const getSchedules: typeof import("./getSchedules").getSchedules = null as any;
export const getSchedulesOutput: typeof import("./getSchedules").getSchedulesOutput = null as any;
utilities.lazyLoad(exports, ["getSchedules","getSchedulesOutput"], () => require("./getSchedules"));

export { JobArgs, JobState } from "./job";
export type Job = import("./job").Job;
export const Job: typeof import("./job").Job = null as any;
utilities.lazyLoad(exports, ["Job"], () => require("./job"));

export { JobRunArgs, JobRunState } from "./jobRun";
export type JobRun = import("./jobRun").JobRun;
export const JobRun: typeof import("./jobRun").JobRun = null as any;
utilities.lazyLoad(exports, ["JobRun"], () => require("./jobRun"));

export { MlApplicationArgs, MlApplicationState } from "./mlApplication";
export type MlApplication = import("./mlApplication").MlApplication;
export const MlApplication: typeof import("./mlApplication").MlApplication = null as any;
utilities.lazyLoad(exports, ["MlApplication"], () => require("./mlApplication"));

export { MlApplicationImplementationArgs, MlApplicationImplementationState } from "./mlApplicationImplementation";
export type MlApplicationImplementation = import("./mlApplicationImplementation").MlApplicationImplementation;
export const MlApplicationImplementation: typeof import("./mlApplicationImplementation").MlApplicationImplementation = null as any;
utilities.lazyLoad(exports, ["MlApplicationImplementation"], () => require("./mlApplicationImplementation"));

export { MlApplicationInstanceArgs, MlApplicationInstanceState } from "./mlApplicationInstance";
export type MlApplicationInstance = import("./mlApplicationInstance").MlApplicationInstance;
export const MlApplicationInstance: typeof import("./mlApplicationInstance").MlApplicationInstance = null as any;
utilities.lazyLoad(exports, ["MlApplicationInstance"], () => require("./mlApplicationInstance"));

export { ModelArgs, ModelState } from "./model";
export type Model = import("./model").Model;
export const Model: typeof import("./model").Model = null as any;
utilities.lazyLoad(exports, ["Model"], () => require("./model"));

export { ModelArtifactExportArgs, ModelArtifactExportState } from "./modelArtifactExport";
export type ModelArtifactExport = import("./modelArtifactExport").ModelArtifactExport;
export const ModelArtifactExport: typeof import("./modelArtifactExport").ModelArtifactExport = null as any;
utilities.lazyLoad(exports, ["ModelArtifactExport"], () => require("./modelArtifactExport"));

export { ModelArtifactImportArgs, ModelArtifactImportState } from "./modelArtifactImport";
export type ModelArtifactImport = import("./modelArtifactImport").ModelArtifactImport;
export const ModelArtifactImport: typeof import("./modelArtifactImport").ModelArtifactImport = null as any;
utilities.lazyLoad(exports, ["ModelArtifactImport"], () => require("./modelArtifactImport"));

export { ModelCustomMetadataArtifactArgs, ModelCustomMetadataArtifactState } from "./modelCustomMetadataArtifact";
export type ModelCustomMetadataArtifact = import("./modelCustomMetadataArtifact").ModelCustomMetadataArtifact;
export const ModelCustomMetadataArtifact: typeof import("./modelCustomMetadataArtifact").ModelCustomMetadataArtifact = null as any;
utilities.lazyLoad(exports, ["ModelCustomMetadataArtifact"], () => require("./modelCustomMetadataArtifact"));

export { ModelDefinedMetadataArtifactArgs, ModelDefinedMetadataArtifactState } from "./modelDefinedMetadataArtifact";
export type ModelDefinedMetadataArtifact = import("./modelDefinedMetadataArtifact").ModelDefinedMetadataArtifact;
export const ModelDefinedMetadataArtifact: typeof import("./modelDefinedMetadataArtifact").ModelDefinedMetadataArtifact = null as any;
utilities.lazyLoad(exports, ["ModelDefinedMetadataArtifact"], () => require("./modelDefinedMetadataArtifact"));

export { ModelDeploymentArgs, ModelDeploymentState } from "./modelDeployment";
export type ModelDeployment = import("./modelDeployment").ModelDeployment;
export const ModelDeployment: typeof import("./modelDeployment").ModelDeployment = null as any;
utilities.lazyLoad(exports, ["ModelDeployment"], () => require("./modelDeployment"));

export { ModelGroupArgs, ModelGroupState } from "./modelGroup";
export type ModelGroup = import("./modelGroup").ModelGroup;
export const ModelGroup: typeof import("./modelGroup").ModelGroup = null as any;
utilities.lazyLoad(exports, ["ModelGroup"], () => require("./modelGroup"));

export { ModelGroupArtifactArgs, ModelGroupArtifactState } from "./modelGroupArtifact";
export type ModelGroupArtifact = import("./modelGroupArtifact").ModelGroupArtifact;
export const ModelGroupArtifact: typeof import("./modelGroupArtifact").ModelGroupArtifact = null as any;
utilities.lazyLoad(exports, ["ModelGroupArtifact"], () => require("./modelGroupArtifact"));

export { ModelGroupVersionHistoryArgs, ModelGroupVersionHistoryState } from "./modelGroupVersionHistory";
export type ModelGroupVersionHistory = import("./modelGroupVersionHistory").ModelGroupVersionHistory;
export const ModelGroupVersionHistory: typeof import("./modelGroupVersionHistory").ModelGroupVersionHistory = null as any;
utilities.lazyLoad(exports, ["ModelGroupVersionHistory"], () => require("./modelGroupVersionHistory"));

export { ModelProvenanceArgs, ModelProvenanceState } from "./modelProvenance";
export type ModelProvenance = import("./modelProvenance").ModelProvenance;
export const ModelProvenance: typeof import("./modelProvenance").ModelProvenance = null as any;
utilities.lazyLoad(exports, ["ModelProvenance"], () => require("./modelProvenance"));

export { ModelVersionSetArgs, ModelVersionSetState } from "./modelVersionSet";
export type ModelVersionSet = import("./modelVersionSet").ModelVersionSet;
export const ModelVersionSet: typeof import("./modelVersionSet").ModelVersionSet = null as any;
utilities.lazyLoad(exports, ["ModelVersionSet"], () => require("./modelVersionSet"));

export { NotebookSessionArgs, NotebookSessionState } from "./notebookSession";
export type NotebookSession = import("./notebookSession").NotebookSession;
export const NotebookSession: typeof import("./notebookSession").NotebookSession = null as any;
utilities.lazyLoad(exports, ["NotebookSession"], () => require("./notebookSession"));

export { PipelineArgs, PipelineState } from "./pipeline";
export type Pipeline = import("./pipeline").Pipeline;
export const Pipeline: typeof import("./pipeline").Pipeline = null as any;
utilities.lazyLoad(exports, ["Pipeline"], () => require("./pipeline"));

export { PipelineRunArgs, PipelineRunState } from "./pipelineRun";
export type PipelineRun = import("./pipelineRun").PipelineRun;
export const PipelineRun: typeof import("./pipelineRun").PipelineRun = null as any;
utilities.lazyLoad(exports, ["PipelineRun"], () => require("./pipelineRun"));

export { PrivateEndpointArgs, PrivateEndpointState } from "./privateEndpoint";
export type PrivateEndpoint = import("./privateEndpoint").PrivateEndpoint;
export const PrivateEndpoint: typeof import("./privateEndpoint").PrivateEndpoint = null as any;
utilities.lazyLoad(exports, ["PrivateEndpoint"], () => require("./privateEndpoint"));

export { ProjectArgs, ProjectState } from "./project";
export type Project = import("./project").Project;
export const Project: typeof import("./project").Project = null as any;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));

export { ScheduleArgs, ScheduleState } from "./schedule";
export type Schedule = import("./schedule").Schedule;
export const Schedule: typeof import("./schedule").Schedule = null as any;
utilities.lazyLoad(exports, ["Schedule"], () => require("./schedule"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:DataScience/job:Job":
                return new Job(name, <any>undefined, { urn })
            case "oci:DataScience/jobRun:JobRun":
                return new JobRun(name, <any>undefined, { urn })
            case "oci:DataScience/mlApplication:MlApplication":
                return new MlApplication(name, <any>undefined, { urn })
            case "oci:DataScience/mlApplicationImplementation:MlApplicationImplementation":
                return new MlApplicationImplementation(name, <any>undefined, { urn })
            case "oci:DataScience/mlApplicationInstance:MlApplicationInstance":
                return new MlApplicationInstance(name, <any>undefined, { urn })
            case "oci:DataScience/model:Model":
                return new Model(name, <any>undefined, { urn })
            case "oci:DataScience/modelArtifactExport:ModelArtifactExport":
                return new ModelArtifactExport(name, <any>undefined, { urn })
            case "oci:DataScience/modelArtifactImport:ModelArtifactImport":
                return new ModelArtifactImport(name, <any>undefined, { urn })
            case "oci:DataScience/modelCustomMetadataArtifact:ModelCustomMetadataArtifact":
                return new ModelCustomMetadataArtifact(name, <any>undefined, { urn })
            case "oci:DataScience/modelDefinedMetadataArtifact:ModelDefinedMetadataArtifact":
                return new ModelDefinedMetadataArtifact(name, <any>undefined, { urn })
            case "oci:DataScience/modelDeployment:ModelDeployment":
                return new ModelDeployment(name, <any>undefined, { urn })
            case "oci:DataScience/modelGroup:ModelGroup":
                return new ModelGroup(name, <any>undefined, { urn })
            case "oci:DataScience/modelGroupArtifact:ModelGroupArtifact":
                return new ModelGroupArtifact(name, <any>undefined, { urn })
            case "oci:DataScience/modelGroupVersionHistory:ModelGroupVersionHistory":
                return new ModelGroupVersionHistory(name, <any>undefined, { urn })
            case "oci:DataScience/modelProvenance:ModelProvenance":
                return new ModelProvenance(name, <any>undefined, { urn })
            case "oci:DataScience/modelVersionSet:ModelVersionSet":
                return new ModelVersionSet(name, <any>undefined, { urn })
            case "oci:DataScience/notebookSession:NotebookSession":
                return new NotebookSession(name, <any>undefined, { urn })
            case "oci:DataScience/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            case "oci:DataScience/pipelineRun:PipelineRun":
                return new PipelineRun(name, <any>undefined, { urn })
            case "oci:DataScience/privateEndpoint:PrivateEndpoint":
                return new PrivateEndpoint(name, <any>undefined, { urn })
            case "oci:DataScience/project:Project":
                return new Project(name, <any>undefined, { urn })
            case "oci:DataScience/schedule:Schedule":
                return new Schedule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "DataScience/job", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/jobRun", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/mlApplication", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/mlApplicationImplementation", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/mlApplicationInstance", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/model", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelArtifactExport", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelArtifactImport", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelCustomMetadataArtifact", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelDefinedMetadataArtifact", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelDeployment", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelGroup", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelGroupArtifact", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelGroupVersionHistory", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelProvenance", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelVersionSet", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/notebookSession", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/pipeline", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/pipelineRun", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/privateEndpoint", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/project", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/schedule", _module)
