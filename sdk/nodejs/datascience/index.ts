// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetFastLaunchJobConfigsArgs, GetFastLaunchJobConfigsResult, GetFastLaunchJobConfigsOutputArgs } from "./getFastLaunchJobConfigs";
export const getFastLaunchJobConfigs: typeof import("./getFastLaunchJobConfigs").getFastLaunchJobConfigs = null as any;
export const getFastLaunchJobConfigsOutput: typeof import("./getFastLaunchJobConfigs").getFastLaunchJobConfigsOutput = null as any;
utilities.lazyLoad(exports, ["getFastLaunchJobConfigs","getFastLaunchJobConfigsOutput"], () => require("./getFastLaunchJobConfigs"));

export { GetJobArgs, GetJobResult, GetJobOutputArgs } from "./getJob";
export const getJob: typeof import("./getJob").getJob = null as any;
export const getJobOutput: typeof import("./getJob").getJobOutput = null as any;
utilities.lazyLoad(exports, ["getJob","getJobOutput"], () => require("./getJob"));

export { GetJobRunArgs, GetJobRunResult, GetJobRunOutputArgs } from "./getJobRun";
export const getJobRun: typeof import("./getJobRun").getJobRun = null as any;
export const getJobRunOutput: typeof import("./getJobRun").getJobRunOutput = null as any;
utilities.lazyLoad(exports, ["getJobRun","getJobRunOutput"], () => require("./getJobRun"));

export { GetJobRunsArgs, GetJobRunsResult, GetJobRunsOutputArgs } from "./getJobRuns";
export const getJobRuns: typeof import("./getJobRuns").getJobRuns = null as any;
export const getJobRunsOutput: typeof import("./getJobRuns").getJobRunsOutput = null as any;
utilities.lazyLoad(exports, ["getJobRuns","getJobRunsOutput"], () => require("./getJobRuns"));

export { GetJobShapesArgs, GetJobShapesResult, GetJobShapesOutputArgs } from "./getJobShapes";
export const getJobShapes: typeof import("./getJobShapes").getJobShapes = null as any;
export const getJobShapesOutput: typeof import("./getJobShapes").getJobShapesOutput = null as any;
utilities.lazyLoad(exports, ["getJobShapes","getJobShapesOutput"], () => require("./getJobShapes"));

export { GetJobsArgs, GetJobsResult, GetJobsOutputArgs } from "./getJobs";
export const getJobs: typeof import("./getJobs").getJobs = null as any;
export const getJobsOutput: typeof import("./getJobs").getJobsOutput = null as any;
utilities.lazyLoad(exports, ["getJobs","getJobsOutput"], () => require("./getJobs"));

export { GetModelArgs, GetModelResult, GetModelOutputArgs } from "./getModel";
export const getModel: typeof import("./getModel").getModel = null as any;
export const getModelOutput: typeof import("./getModel").getModelOutput = null as any;
utilities.lazyLoad(exports, ["getModel","getModelOutput"], () => require("./getModel"));

export { GetModelDeploymentArgs, GetModelDeploymentResult, GetModelDeploymentOutputArgs } from "./getModelDeployment";
export const getModelDeployment: typeof import("./getModelDeployment").getModelDeployment = null as any;
export const getModelDeploymentOutput: typeof import("./getModelDeployment").getModelDeploymentOutput = null as any;
utilities.lazyLoad(exports, ["getModelDeployment","getModelDeploymentOutput"], () => require("./getModelDeployment"));

export { GetModelDeploymentShapesArgs, GetModelDeploymentShapesResult, GetModelDeploymentShapesOutputArgs } from "./getModelDeploymentShapes";
export const getModelDeploymentShapes: typeof import("./getModelDeploymentShapes").getModelDeploymentShapes = null as any;
export const getModelDeploymentShapesOutput: typeof import("./getModelDeploymentShapes").getModelDeploymentShapesOutput = null as any;
utilities.lazyLoad(exports, ["getModelDeploymentShapes","getModelDeploymentShapesOutput"], () => require("./getModelDeploymentShapes"));

export { GetModelDeploymentsArgs, GetModelDeploymentsResult, GetModelDeploymentsOutputArgs } from "./getModelDeployments";
export const getModelDeployments: typeof import("./getModelDeployments").getModelDeployments = null as any;
export const getModelDeploymentsOutput: typeof import("./getModelDeployments").getModelDeploymentsOutput = null as any;
utilities.lazyLoad(exports, ["getModelDeployments","getModelDeploymentsOutput"], () => require("./getModelDeployments"));

export { GetModelProvenanceArgs, GetModelProvenanceResult, GetModelProvenanceOutputArgs } from "./getModelProvenance";
export const getModelProvenance: typeof import("./getModelProvenance").getModelProvenance = null as any;
export const getModelProvenanceOutput: typeof import("./getModelProvenance").getModelProvenanceOutput = null as any;
utilities.lazyLoad(exports, ["getModelProvenance","getModelProvenanceOutput"], () => require("./getModelProvenance"));

export { GetModelVersionSetArgs, GetModelVersionSetResult, GetModelVersionSetOutputArgs } from "./getModelVersionSet";
export const getModelVersionSet: typeof import("./getModelVersionSet").getModelVersionSet = null as any;
export const getModelVersionSetOutput: typeof import("./getModelVersionSet").getModelVersionSetOutput = null as any;
utilities.lazyLoad(exports, ["getModelVersionSet","getModelVersionSetOutput"], () => require("./getModelVersionSet"));

export { GetModelVersionSetsArgs, GetModelVersionSetsResult, GetModelVersionSetsOutputArgs } from "./getModelVersionSets";
export const getModelVersionSets: typeof import("./getModelVersionSets").getModelVersionSets = null as any;
export const getModelVersionSetsOutput: typeof import("./getModelVersionSets").getModelVersionSetsOutput = null as any;
utilities.lazyLoad(exports, ["getModelVersionSets","getModelVersionSetsOutput"], () => require("./getModelVersionSets"));

export { GetModelsArgs, GetModelsResult, GetModelsOutputArgs } from "./getModels";
export const getModels: typeof import("./getModels").getModels = null as any;
export const getModelsOutput: typeof import("./getModels").getModelsOutput = null as any;
utilities.lazyLoad(exports, ["getModels","getModelsOutput"], () => require("./getModels"));

export { GetNotebookSessionArgs, GetNotebookSessionResult, GetNotebookSessionOutputArgs } from "./getNotebookSession";
export const getNotebookSession: typeof import("./getNotebookSession").getNotebookSession = null as any;
export const getNotebookSessionOutput: typeof import("./getNotebookSession").getNotebookSessionOutput = null as any;
utilities.lazyLoad(exports, ["getNotebookSession","getNotebookSessionOutput"], () => require("./getNotebookSession"));

export { GetNotebookSessionShapesArgs, GetNotebookSessionShapesResult, GetNotebookSessionShapesOutputArgs } from "./getNotebookSessionShapes";
export const getNotebookSessionShapes: typeof import("./getNotebookSessionShapes").getNotebookSessionShapes = null as any;
export const getNotebookSessionShapesOutput: typeof import("./getNotebookSessionShapes").getNotebookSessionShapesOutput = null as any;
utilities.lazyLoad(exports, ["getNotebookSessionShapes","getNotebookSessionShapesOutput"], () => require("./getNotebookSessionShapes"));

export { GetNotebookSessionsArgs, GetNotebookSessionsResult, GetNotebookSessionsOutputArgs } from "./getNotebookSessions";
export const getNotebookSessions: typeof import("./getNotebookSessions").getNotebookSessions = null as any;
export const getNotebookSessionsOutput: typeof import("./getNotebookSessions").getNotebookSessionsOutput = null as any;
utilities.lazyLoad(exports, ["getNotebookSessions","getNotebookSessionsOutput"], () => require("./getNotebookSessions"));

export { GetPipelineArgs, GetPipelineResult, GetPipelineOutputArgs } from "./getPipeline";
export const getPipeline: typeof import("./getPipeline").getPipeline = null as any;
export const getPipelineOutput: typeof import("./getPipeline").getPipelineOutput = null as any;
utilities.lazyLoad(exports, ["getPipeline","getPipelineOutput"], () => require("./getPipeline"));

export { GetPipelineRunArgs, GetPipelineRunResult, GetPipelineRunOutputArgs } from "./getPipelineRun";
export const getPipelineRun: typeof import("./getPipelineRun").getPipelineRun = null as any;
export const getPipelineRunOutput: typeof import("./getPipelineRun").getPipelineRunOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineRun","getPipelineRunOutput"], () => require("./getPipelineRun"));

export { GetPipelineRunsArgs, GetPipelineRunsResult, GetPipelineRunsOutputArgs } from "./getPipelineRuns";
export const getPipelineRuns: typeof import("./getPipelineRuns").getPipelineRuns = null as any;
export const getPipelineRunsOutput: typeof import("./getPipelineRuns").getPipelineRunsOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineRuns","getPipelineRunsOutput"], () => require("./getPipelineRuns"));

export { GetPipelinesArgs, GetPipelinesResult, GetPipelinesOutputArgs } from "./getPipelines";
export const getPipelines: typeof import("./getPipelines").getPipelines = null as any;
export const getPipelinesOutput: typeof import("./getPipelines").getPipelinesOutput = null as any;
utilities.lazyLoad(exports, ["getPipelines","getPipelinesOutput"], () => require("./getPipelines"));

export { GetProjectArgs, GetProjectResult, GetProjectOutputArgs } from "./getProject";
export const getProject: typeof import("./getProject").getProject = null as any;
export const getProjectOutput: typeof import("./getProject").getProjectOutput = null as any;
utilities.lazyLoad(exports, ["getProject","getProjectOutput"], () => require("./getProject"));

export { GetProjectsArgs, GetProjectsResult, GetProjectsOutputArgs } from "./getProjects";
export const getProjects: typeof import("./getProjects").getProjects = null as any;
export const getProjectsOutput: typeof import("./getProjects").getProjectsOutput = null as any;
utilities.lazyLoad(exports, ["getProjects","getProjectsOutput"], () => require("./getProjects"));

export { JobArgs, JobState } from "./job";
export type Job = import("./job").Job;
export const Job: typeof import("./job").Job = null as any;
utilities.lazyLoad(exports, ["Job"], () => require("./job"));

export { JobRunArgs, JobRunState } from "./jobRun";
export type JobRun = import("./jobRun").JobRun;
export const JobRun: typeof import("./jobRun").JobRun = null as any;
utilities.lazyLoad(exports, ["JobRun"], () => require("./jobRun"));

export { ModelArgs, ModelState } from "./model";
export type Model = import("./model").Model;
export const Model: typeof import("./model").Model = null as any;
utilities.lazyLoad(exports, ["Model"], () => require("./model"));

export { ModelArtifactExportArgs, ModelArtifactExportState } from "./modelArtifactExport";
export type ModelArtifactExport = import("./modelArtifactExport").ModelArtifactExport;
export const ModelArtifactExport: typeof import("./modelArtifactExport").ModelArtifactExport = null as any;
utilities.lazyLoad(exports, ["ModelArtifactExport"], () => require("./modelArtifactExport"));

export { ModelArtifactImportArgs, ModelArtifactImportState } from "./modelArtifactImport";
export type ModelArtifactImport = import("./modelArtifactImport").ModelArtifactImport;
export const ModelArtifactImport: typeof import("./modelArtifactImport").ModelArtifactImport = null as any;
utilities.lazyLoad(exports, ["ModelArtifactImport"], () => require("./modelArtifactImport"));

export { ModelDeploymentArgs, ModelDeploymentState } from "./modelDeployment";
export type ModelDeployment = import("./modelDeployment").ModelDeployment;
export const ModelDeployment: typeof import("./modelDeployment").ModelDeployment = null as any;
utilities.lazyLoad(exports, ["ModelDeployment"], () => require("./modelDeployment"));

export { ModelProvenanceArgs, ModelProvenanceState } from "./modelProvenance";
export type ModelProvenance = import("./modelProvenance").ModelProvenance;
export const ModelProvenance: typeof import("./modelProvenance").ModelProvenance = null as any;
utilities.lazyLoad(exports, ["ModelProvenance"], () => require("./modelProvenance"));

export { ModelVersionSetArgs, ModelVersionSetState } from "./modelVersionSet";
export type ModelVersionSet = import("./modelVersionSet").ModelVersionSet;
export const ModelVersionSet: typeof import("./modelVersionSet").ModelVersionSet = null as any;
utilities.lazyLoad(exports, ["ModelVersionSet"], () => require("./modelVersionSet"));

export { NotebookSessionArgs, NotebookSessionState } from "./notebookSession";
export type NotebookSession = import("./notebookSession").NotebookSession;
export const NotebookSession: typeof import("./notebookSession").NotebookSession = null as any;
utilities.lazyLoad(exports, ["NotebookSession"], () => require("./notebookSession"));

export { PipelineArgs, PipelineState } from "./pipeline";
export type Pipeline = import("./pipeline").Pipeline;
export const Pipeline: typeof import("./pipeline").Pipeline = null as any;
utilities.lazyLoad(exports, ["Pipeline"], () => require("./pipeline"));

export { PipelineRunArgs, PipelineRunState } from "./pipelineRun";
export type PipelineRun = import("./pipelineRun").PipelineRun;
export const PipelineRun: typeof import("./pipelineRun").PipelineRun = null as any;
utilities.lazyLoad(exports, ["PipelineRun"], () => require("./pipelineRun"));

export { ProjectArgs, ProjectState } from "./project";
export type Project = import("./project").Project;
export const Project: typeof import("./project").Project = null as any;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:DataScience/job:Job":
                return new Job(name, <any>undefined, { urn })
            case "oci:DataScience/jobRun:JobRun":
                return new JobRun(name, <any>undefined, { urn })
            case "oci:DataScience/model:Model":
                return new Model(name, <any>undefined, { urn })
            case "oci:DataScience/modelArtifactExport:ModelArtifactExport":
                return new ModelArtifactExport(name, <any>undefined, { urn })
            case "oci:DataScience/modelArtifactImport:ModelArtifactImport":
                return new ModelArtifactImport(name, <any>undefined, { urn })
            case "oci:DataScience/modelDeployment:ModelDeployment":
                return new ModelDeployment(name, <any>undefined, { urn })
            case "oci:DataScience/modelProvenance:ModelProvenance":
                return new ModelProvenance(name, <any>undefined, { urn })
            case "oci:DataScience/modelVersionSet:ModelVersionSet":
                return new ModelVersionSet(name, <any>undefined, { urn })
            case "oci:DataScience/notebookSession:NotebookSession":
                return new NotebookSession(name, <any>undefined, { urn })
            case "oci:DataScience/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            case "oci:DataScience/pipelineRun:PipelineRun":
                return new PipelineRun(name, <any>undefined, { urn })
            case "oci:DataScience/project:Project":
                return new Project(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "DataScience/job", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/jobRun", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/model", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelArtifactExport", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelArtifactImport", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelDeployment", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelProvenance", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/modelVersionSet", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/notebookSession", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/pipeline", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/pipelineRun", _module)
pulumi.runtime.registerResourceModule("oci", "DataScience/project", _module)
