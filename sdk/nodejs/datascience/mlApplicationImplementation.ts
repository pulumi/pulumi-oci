// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Ml Application Implementation resource in Oracle Cloud Infrastructure Data Science service.
 *
 * Creates a new MlApplicationImplementation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMlApplicationImplementation = new oci.datascience.MlApplicationImplementation("test_ml_application_implementation", {
 *     compartmentId: compartmentId,
 *     mlApplicationId: testMlApplication.id,
 *     name: mlApplicationImplementationName,
 *     mlApplicationPackage: {
 *         source_type: mlApplicationPackageSourceType,
 *         uri: mlApplicationPackageUri,
 *     },
 *     opcMlAppPackageArgs: opcMlAppPackageArgs,
 *     allowedMigrationDestinations: mlApplicationImplementationAllowedMigrationDestinations,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     logging: {
 *         aggregatedInstanceViewLog: {
 *             enableLogging: mlApplicationImplementationLoggingAggregatedInstanceViewLogEnableLogging,
 *             logGroupId: testLogGroup.id,
 *             logId: testLog.id,
 *         },
 *         implementationLog: {
 *             enableLogging: mlApplicationImplementationLoggingImplementationLogEnableLogging,
 *             logGroupId: testLogGroup.id,
 *             logId: testLog.id,
 *         },
 *         triggerLog: {
 *             enableLogging: mlApplicationImplementationLoggingTriggerLogEnableLogging,
 *             logGroupId: testLogGroup.id,
 *             logId: testLog.id,
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * MlApplicationImplementations can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DataScience/mlApplicationImplementation:MlApplicationImplementation test_ml_application_implementation "id"
 * ```
 */
export class MlApplicationImplementation extends pulumi.CustomResource {
    /**
     * Get an existing MlApplicationImplementation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MlApplicationImplementationState, opts?: pulumi.CustomResourceOptions): MlApplicationImplementation {
        return new MlApplicationImplementation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataScience/mlApplicationImplementation:MlApplicationImplementation';

    /**
     * Returns true if the given object is an instance of MlApplicationImplementation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MlApplicationImplementation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MlApplicationImplementation.__pulumiType;
    }

    /**
     * (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
     */
    declare public readonly allowedMigrationDestinations: pulumi.Output<string[]>;
    /**
     * List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
     */
    declare public /*out*/ readonly applicationComponents: pulumi.Output<outputs.DataScience.MlApplicationImplementationApplicationComponent[]>;
    /**
     * (Updatable) The OCID of the compartment where ML Application Implementation is created.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
     */
    declare public /*out*/ readonly configurationSchemas: pulumi.Output<outputs.DataScience.MlApplicationImplementationConfigurationSchema[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * short description of the argument
     */
    declare public /*out*/ readonly description: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * (Updatable) Configuration of Logging for ML Application Implementation.
     */
    declare public readonly logging: pulumi.Output<outputs.DataScience.MlApplicationImplementationLogging>;
    /**
     * The OCID of the ML Application implemented by this ML Application Implementation
     */
    declare public readonly mlApplicationId: pulumi.Output<string>;
    /**
     * The name of ML Application (based on mlApplicationId)
     */
    declare public /*out*/ readonly mlApplicationName: pulumi.Output<string>;
    /**
     * (Updatable) Configuration of The ML Application Package to upload.
     */
    declare public readonly mlApplicationPackage: pulumi.Output<{[key: string]: string}>;
    /**
     * List of ML Application package arguments provided during ML Application package upload.
     */
    declare public /*out*/ readonly mlApplicationPackageArguments: pulumi.Output<outputs.DataScience.MlApplicationImplementationMlApplicationPackageArgument[]>;
    /**
     * ML Application Implementation name which is unique for given ML Application.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
     */
    declare public readonly opcMlAppPackageArgs: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
     */
    declare public /*out*/ readonly packageVersion: pulumi.Output<string>;
    /**
     * The current state of the MlApplicationImplementation.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * Time of last MlApplicationImplementation update in the format defined by RFC 3339.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a MlApplicationImplementation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MlApplicationImplementationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MlApplicationImplementationArgs | MlApplicationImplementationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MlApplicationImplementationState | undefined;
            resourceInputs["allowedMigrationDestinations"] = state?.allowedMigrationDestinations;
            resourceInputs["applicationComponents"] = state?.applicationComponents;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["configurationSchemas"] = state?.configurationSchemas;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["logging"] = state?.logging;
            resourceInputs["mlApplicationId"] = state?.mlApplicationId;
            resourceInputs["mlApplicationName"] = state?.mlApplicationName;
            resourceInputs["mlApplicationPackage"] = state?.mlApplicationPackage;
            resourceInputs["mlApplicationPackageArguments"] = state?.mlApplicationPackageArguments;
            resourceInputs["name"] = state?.name;
            resourceInputs["opcMlAppPackageArgs"] = state?.opcMlAppPackageArgs;
            resourceInputs["packageVersion"] = state?.packageVersion;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as MlApplicationImplementationArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.mlApplicationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'mlApplicationId'");
            }
            resourceInputs["allowedMigrationDestinations"] = args?.allowedMigrationDestinations;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["logging"] = args?.logging;
            resourceInputs["mlApplicationId"] = args?.mlApplicationId;
            resourceInputs["mlApplicationPackage"] = args?.mlApplicationPackage;
            resourceInputs["name"] = args?.name;
            resourceInputs["opcMlAppPackageArgs"] = args?.opcMlAppPackageArgs;
            resourceInputs["applicationComponents"] = undefined /*out*/;
            resourceInputs["configurationSchemas"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["mlApplicationName"] = undefined /*out*/;
            resourceInputs["mlApplicationPackageArguments"] = undefined /*out*/;
            resourceInputs["packageVersion"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MlApplicationImplementation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MlApplicationImplementation resources.
 */
export interface MlApplicationImplementationState {
    /**
     * (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
     */
    allowedMigrationDestinations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of application components (OCI resources shared for all MlApplicationInstances). These have been created automatically based on their definitions in the ML Application package.
     */
    applicationComponents?: pulumi.Input<pulumi.Input<inputs.DataScience.MlApplicationImplementationApplicationComponent>[]>;
    /**
     * (Updatable) The OCID of the compartment where ML Application Implementation is created.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Schema of configuration which needs to be provided for each ML Application Instance. It is defined in the ML Application package descriptor.
     */
    configurationSchemas?: pulumi.Input<pulumi.Input<inputs.DataScience.MlApplicationImplementationConfigurationSchema>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * short description of the argument
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Configuration of Logging for ML Application Implementation.
     */
    logging?: pulumi.Input<inputs.DataScience.MlApplicationImplementationLogging>;
    /**
     * The OCID of the ML Application implemented by this ML Application Implementation
     */
    mlApplicationId?: pulumi.Input<string>;
    /**
     * The name of ML Application (based on mlApplicationId)
     */
    mlApplicationName?: pulumi.Input<string>;
    /**
     * (Updatable) Configuration of The ML Application Package to upload.
     */
    mlApplicationPackage?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of ML Application package arguments provided during ML Application package upload.
     */
    mlApplicationPackageArguments?: pulumi.Input<pulumi.Input<inputs.DataScience.MlApplicationImplementationMlApplicationPackageArgument>[]>;
    /**
     * ML Application Implementation name which is unique for given ML Application.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
     */
    opcMlAppPackageArgs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The version of ML Application Package (e.g. "1.2" or "2.0.4") defined in ML Application package descriptor. Value is not mandatory only for CREATING state otherwise it must be always presented.
     */
    packageVersion?: pulumi.Input<string>;
    /**
     * The current state of the MlApplicationImplementation.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Creation time of MlApplicationImplementation creation in the format defined by RFC 3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Time of last MlApplicationImplementation update in the format defined by RFC 3339.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MlApplicationImplementation resource.
 */
export interface MlApplicationImplementationArgs {
    /**
     * (Updatable) List of ML Application Implementation OCIDs for which migration from this implementation is allowed. Migration means that if consumers change implementation for their instances to implementation with OCID from this list, instance components will be updated in place otherwise new instance components are created based on the new implementation and old instance components are removed.
     */
    allowedMigrationDestinations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The OCID of the compartment where ML Application Implementation is created.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Configuration of Logging for ML Application Implementation.
     */
    logging?: pulumi.Input<inputs.DataScience.MlApplicationImplementationLogging>;
    /**
     * The OCID of the ML Application implemented by this ML Application Implementation
     */
    mlApplicationId: pulumi.Input<string>;
    /**
     * (Updatable) Configuration of The ML Application Package to upload.
     */
    mlApplicationPackage?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ML Application Implementation name which is unique for given ML Application.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) ML Application package arguments required during ML Application package upload. Each argument is a simple key-value pair.
     */
    opcMlAppPackageArgs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
