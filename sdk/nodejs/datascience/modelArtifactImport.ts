// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ModelArtifactImport extends pulumi.CustomResource {
    /**
     * Get an existing ModelArtifactImport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ModelArtifactImportState, opts?: pulumi.CustomResourceOptions): ModelArtifactImport {
        return new ModelArtifactImport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DataScience/modelArtifactImport:ModelArtifactImport';

    /**
     * Returns true if the given object is an instance of ModelArtifactImport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ModelArtifactImport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ModelArtifactImport.__pulumiType;
    }

    public readonly artifactSourceType!: pulumi.Output<string>;
    public readonly destinationBucket!: pulumi.Output<string>;
    public readonly destinationObjectName!: pulumi.Output<string>;
    public readonly destinationRegion!: pulumi.Output<string>;
    public readonly modelId!: pulumi.Output<string>;
    public readonly namespace!: pulumi.Output<string>;

    /**
     * Create a ModelArtifactImport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ModelArtifactImportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ModelArtifactImportArgs | ModelArtifactImportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ModelArtifactImportState | undefined;
            resourceInputs["artifactSourceType"] = state ? state.artifactSourceType : undefined;
            resourceInputs["destinationBucket"] = state ? state.destinationBucket : undefined;
            resourceInputs["destinationObjectName"] = state ? state.destinationObjectName : undefined;
            resourceInputs["destinationRegion"] = state ? state.destinationRegion : undefined;
            resourceInputs["modelId"] = state ? state.modelId : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
        } else {
            const args = argsOrState as ModelArtifactImportArgs | undefined;
            if ((!args || args.artifactSourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'artifactSourceType'");
            }
            if ((!args || args.destinationBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationBucket'");
            }
            if ((!args || args.destinationObjectName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationObjectName'");
            }
            if ((!args || args.destinationRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationRegion'");
            }
            if ((!args || args.modelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'modelId'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["artifactSourceType"] = args ? args.artifactSourceType : undefined;
            resourceInputs["destinationBucket"] = args ? args.destinationBucket : undefined;
            resourceInputs["destinationObjectName"] = args ? args.destinationObjectName : undefined;
            resourceInputs["destinationRegion"] = args ? args.destinationRegion : undefined;
            resourceInputs["modelId"] = args ? args.modelId : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ModelArtifactImport.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ModelArtifactImport resources.
 */
export interface ModelArtifactImportState {
    artifactSourceType?: pulumi.Input<string>;
    destinationBucket?: pulumi.Input<string>;
    destinationObjectName?: pulumi.Input<string>;
    destinationRegion?: pulumi.Input<string>;
    modelId?: pulumi.Input<string>;
    namespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ModelArtifactImport resource.
 */
export interface ModelArtifactImportArgs {
    artifactSourceType: pulumi.Input<string>;
    destinationBucket: pulumi.Input<string>;
    destinationObjectName: pulumi.Input<string>;
    destinationRegion: pulumi.Input<string>;
    modelId: pulumi.Input<string>;
    namespace: pulumi.Input<string>;
}
