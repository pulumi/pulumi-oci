// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Vulnerability resource in Oracle Cloud Infrastructure Dblm service.
 *
 * Gets a Vulnerability
 */
export function getVulnerability(args: GetVulnerabilityArgs, opts?: pulumi.InvokeOptions): Promise<GetVulnerabilityResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Dblm/getVulnerability:getVulnerability", {
        "compartmentId": args.compartmentId,
        "databaseRelease": args.databaseRelease,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerability.
 */
export interface GetVulnerabilityArgs {
    /**
     * The required ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only database that match the given release version.
     */
    databaseRelease?: string;
}

/**
 * A collection of values returned by getVulnerability.
 */
export interface GetVulnerabilityResult {
    /**
     * Compartment Identifier.
     */
    readonly compartmentId: string;
    readonly databaseRelease?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A message describing the status of the feature's state.
     */
    readonly message: string;
    /**
     * Summary of the patch recommendations for databases.
     */
    readonly patchRecommendationsSummaries: outputs.Dblm.GetVulnerabilityPatchRecommendationsSummary[];
    /**
     * Resources objects.
     */
    readonly resources: outputs.Dblm.GetVulnerabilityResource[];
    /**
     * Summary of dblm registered and unregistered resources.
     */
    readonly resourcesSummaries: outputs.Dblm.GetVulnerabilityResourcesSummary[];
    /**
     * The current state of the feature.
     */
    readonly state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The time the the Vulnerability was enabled. An RFC3339 formatted datetime string.
     */
    readonly timeEnabled: string;
    /**
     * Summary of vulnerabilities found in registered resources grouped by severity.
     */
    readonly vulnerabilitiesSummaries: outputs.Dblm.GetVulnerabilityVulnerabilitiesSummary[];
}
/**
 * This data source provides details about a specific Vulnerability resource in Oracle Cloud Infrastructure Dblm service.
 *
 * Gets a Vulnerability
 */
export function getVulnerabilityOutput(args: GetVulnerabilityOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVulnerabilityResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Dblm/getVulnerability:getVulnerability", {
        "compartmentId": args.compartmentId,
        "databaseRelease": args.databaseRelease,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerability.
 */
export interface GetVulnerabilityOutputArgs {
    /**
     * The required ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only database that match the given release version.
     */
    databaseRelease?: pulumi.Input<string>;
}
