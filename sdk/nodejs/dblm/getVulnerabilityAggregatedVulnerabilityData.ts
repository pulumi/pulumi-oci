// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Vulnerability Aggregated Vulnerability Data in Oracle Cloud Infrastructure Dblm service.
 *
 * Gets an AggregatedVulnerabilityData
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityAggregatedVulnerabilityData = oci.Dblm.getVulnerabilityAggregatedVulnerabilityData({
 *     compartmentId: compartmentId,
 *     databaseRelease: vulnerabilityAggregatedVulnerabilityDataDatabaseRelease,
 *     state: vulnerabilityAggregatedVulnerabilityDataState,
 *     timeCreatedGreaterThan: vulnerabilityAggregatedVulnerabilityDataTimeCreatedGreaterThan,
 *     timeEndedLessThan: vulnerabilityAggregatedVulnerabilityDataTimeEndedLessThan,
 * });
 * ```
 */
export function getVulnerabilityAggregatedVulnerabilityData(args: GetVulnerabilityAggregatedVulnerabilityDataArgs, opts?: pulumi.InvokeOptions): Promise<GetVulnerabilityAggregatedVulnerabilityDataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Dblm/getVulnerabilityAggregatedVulnerabilityData:getVulnerabilityAggregatedVulnerabilityData", {
        "compartmentId": args.compartmentId,
        "databaseRelease": args.databaseRelease,
        "filters": args.filters,
        "state": args.state,
        "timeCreatedGreaterThan": args.timeCreatedGreaterThan,
        "timeEndedLessThan": args.timeEndedLessThan,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerabilityAggregatedVulnerabilityData.
 */
export interface GetVulnerabilityAggregatedVulnerabilityDataArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only database that match the given release version.
     */
    databaseRelease?: string;
    filters?: inputs.Dblm.GetVulnerabilityAggregatedVulnerabilityDataFilter[];
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
    /**
     * The created greater than.
     */
    timeCreatedGreaterThan?: string;
    /**
     * The time ended less than.
     */
    timeEndedLessThan?: string;
}

/**
 * A collection of values returned by getVulnerabilityAggregatedVulnerabilityData.
 */
export interface GetVulnerabilityAggregatedVulnerabilityDataResult {
    /**
     * The list of aggregated_vulnerability_collection.
     */
    readonly aggregatedVulnerabilityCollections: outputs.Dblm.GetVulnerabilityAggregatedVulnerabilityDataAggregatedVulnerabilityCollection[];
    readonly compartmentId: string;
    readonly databaseRelease?: string;
    readonly filters?: outputs.Dblm.GetVulnerabilityAggregatedVulnerabilityDataFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly state?: string;
    readonly timeCreatedGreaterThan?: string;
    readonly timeEndedLessThan?: string;
}
/**
 * This data source provides the list of Vulnerability Aggregated Vulnerability Data in Oracle Cloud Infrastructure Dblm service.
 *
 * Gets an AggregatedVulnerabilityData
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityAggregatedVulnerabilityData = oci.Dblm.getVulnerabilityAggregatedVulnerabilityData({
 *     compartmentId: compartmentId,
 *     databaseRelease: vulnerabilityAggregatedVulnerabilityDataDatabaseRelease,
 *     state: vulnerabilityAggregatedVulnerabilityDataState,
 *     timeCreatedGreaterThan: vulnerabilityAggregatedVulnerabilityDataTimeCreatedGreaterThan,
 *     timeEndedLessThan: vulnerabilityAggregatedVulnerabilityDataTimeEndedLessThan,
 * });
 * ```
 */
export function getVulnerabilityAggregatedVulnerabilityDataOutput(args: GetVulnerabilityAggregatedVulnerabilityDataOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVulnerabilityAggregatedVulnerabilityDataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Dblm/getVulnerabilityAggregatedVulnerabilityData:getVulnerabilityAggregatedVulnerabilityData", {
        "compartmentId": args.compartmentId,
        "databaseRelease": args.databaseRelease,
        "filters": args.filters,
        "state": args.state,
        "timeCreatedGreaterThan": args.timeCreatedGreaterThan,
        "timeEndedLessThan": args.timeEndedLessThan,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerabilityAggregatedVulnerabilityData.
 */
export interface GetVulnerabilityAggregatedVulnerabilityDataOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only database that match the given release version.
     */
    databaseRelease?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Dblm.GetVulnerabilityAggregatedVulnerabilityDataFilterArgs>[]>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
    /**
     * The created greater than.
     */
    timeCreatedGreaterThan?: pulumi.Input<string>;
    /**
     * The time ended less than.
     */
    timeEndedLessThan?: pulumi.Input<string>;
}
