// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Vulnerability Scans in Oracle Cloud Infrastructure Dblm service.
 *
 * Gets a list of VulnerabilityScans.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityScans = oci.Dblm.getVulnerabilityScans({
 *     compartmentId: compartmentId,
 *     displayName: vulnerabilityScanDisplayName,
 *     timeCreatedGreaterThan: vulnerabilityScanTimeCreatedGreaterThan,
 *     timeEndedLessThan: vulnerabilityScanTimeEndedLessThan,
 *     vulnerabilityScanId: testVulnerabilityScan.id,
 *     vulnerabilityScanStatuses: vulnerabilityScanVulnerabilityScanStatus,
 *     vulnerabilityScanType: vulnerabilityScanVulnerabilityScanType,
 * });
 * ```
 */
export function getVulnerabilityScans(args?: GetVulnerabilityScansArgs, opts?: pulumi.InvokeOptions): Promise<GetVulnerabilityScansResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Dblm/getVulnerabilityScans:getVulnerabilityScans", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "timeCreatedGreaterThan": args.timeCreatedGreaterThan,
        "timeEndedLessThan": args.timeEndedLessThan,
        "vulnerabilityScanId": args.vulnerabilityScanId,
        "vulnerabilityScanStatuses": args.vulnerabilityScanStatuses,
        "vulnerabilityScanType": args.vulnerabilityScanType,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerabilityScans.
 */
export interface GetVulnerabilityScansArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.Dblm.GetVulnerabilityScansFilter[];
    /**
     * The created greater than.
     */
    timeCreatedGreaterThan?: string;
    /**
     * The time ended less than.
     */
    timeEndedLessThan?: string;
    /**
     * The ID of the vulnerability scan.
     */
    vulnerabilityScanId?: string;
    /**
     * Filter by one or more vulnerability scan status. Possible values are completed, running, completed with error, aborted.
     */
    vulnerabilityScanStatuses?: string[];
    /**
     * The scan type to use is 'CVE', 'PATCH' or 'IMAGE_PATCH'.
     */
    vulnerabilityScanType?: string;
}

/**
 * A collection of values returned by getVulnerabilityScans.
 */
export interface GetVulnerabilityScansResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId?: string;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Dblm.GetVulnerabilityScansFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly timeCreatedGreaterThan?: string;
    readonly timeEndedLessThan?: string;
    /**
     * The list of vulnerability_scan_collection.
     */
    readonly vulnerabilityScanCollections: outputs.Dblm.GetVulnerabilityScansVulnerabilityScanCollection[];
    readonly vulnerabilityScanId?: string;
    /**
     * The status of the vulnerability scan.
     */
    readonly vulnerabilityScanStatuses?: string[];
    /**
     * Scan type is CVE, PATCH or IMAGE_PATCH
     */
    readonly vulnerabilityScanType?: string;
}
/**
 * This data source provides the list of Vulnerability Scans in Oracle Cloud Infrastructure Dblm service.
 *
 * Gets a list of VulnerabilityScans.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityScans = oci.Dblm.getVulnerabilityScans({
 *     compartmentId: compartmentId,
 *     displayName: vulnerabilityScanDisplayName,
 *     timeCreatedGreaterThan: vulnerabilityScanTimeCreatedGreaterThan,
 *     timeEndedLessThan: vulnerabilityScanTimeEndedLessThan,
 *     vulnerabilityScanId: testVulnerabilityScan.id,
 *     vulnerabilityScanStatuses: vulnerabilityScanVulnerabilityScanStatus,
 *     vulnerabilityScanType: vulnerabilityScanVulnerabilityScanType,
 * });
 * ```
 */
export function getVulnerabilityScansOutput(args?: GetVulnerabilityScansOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVulnerabilityScansResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Dblm/getVulnerabilityScans:getVulnerabilityScans", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "timeCreatedGreaterThan": args.timeCreatedGreaterThan,
        "timeEndedLessThan": args.timeEndedLessThan,
        "vulnerabilityScanId": args.vulnerabilityScanId,
        "vulnerabilityScanStatuses": args.vulnerabilityScanStatuses,
        "vulnerabilityScanType": args.vulnerabilityScanType,
    }, opts);
}

/**
 * A collection of arguments for invoking getVulnerabilityScans.
 */
export interface GetVulnerabilityScansOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Dblm.GetVulnerabilityScansFilterArgs>[]>;
    /**
     * The created greater than.
     */
    timeCreatedGreaterThan?: pulumi.Input<string>;
    /**
     * The time ended less than.
     */
    timeEndedLessThan?: pulumi.Input<string>;
    /**
     * The ID of the vulnerability scan.
     */
    vulnerabilityScanId?: pulumi.Input<string>;
    /**
     * Filter by one or more vulnerability scan status. Possible values are completed, running, completed with error, aborted.
     */
    vulnerabilityScanStatuses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The scan type to use is 'CVE', 'PATCH' or 'IMAGE_PATCH'.
     */
    vulnerabilityScanType?: pulumi.Input<string>;
}
