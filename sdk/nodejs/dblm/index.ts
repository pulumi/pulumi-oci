// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetPatchManagementArgs, GetPatchManagementResult, GetPatchManagementOutputArgs } from "./getPatchManagement";
export const getPatchManagement: typeof import("./getPatchManagement").getPatchManagement = null as any;
export const getPatchManagementOutput: typeof import("./getPatchManagement").getPatchManagementOutput = null as any;
utilities.lazyLoad(exports, ["getPatchManagement","getPatchManagementOutput"], () => require("./getPatchManagement"));

export { GetPatchManagementDatabasesArgs, GetPatchManagementDatabasesResult, GetPatchManagementDatabasesOutputArgs } from "./getPatchManagementDatabases";
export const getPatchManagementDatabases: typeof import("./getPatchManagementDatabases").getPatchManagementDatabases = null as any;
export const getPatchManagementDatabasesOutput: typeof import("./getPatchManagementDatabases").getPatchManagementDatabasesOutput = null as any;
utilities.lazyLoad(exports, ["getPatchManagementDatabases","getPatchManagementDatabasesOutput"], () => require("./getPatchManagementDatabases"));

export { GetVulnerabilityArgs, GetVulnerabilityResult, GetVulnerabilityOutputArgs } from "./getVulnerability";
export const getVulnerability: typeof import("./getVulnerability").getVulnerability = null as any;
export const getVulnerabilityOutput: typeof import("./getVulnerability").getVulnerabilityOutput = null as any;
utilities.lazyLoad(exports, ["getVulnerability","getVulnerabilityOutput"], () => require("./getVulnerability"));

export { GetVulnerabilityAggregatedVulnerabilityDataArgs, GetVulnerabilityAggregatedVulnerabilityDataResult, GetVulnerabilityAggregatedVulnerabilityDataOutputArgs } from "./getVulnerabilityAggregatedVulnerabilityData";
export const getVulnerabilityAggregatedVulnerabilityData: typeof import("./getVulnerabilityAggregatedVulnerabilityData").getVulnerabilityAggregatedVulnerabilityData = null as any;
export const getVulnerabilityAggregatedVulnerabilityDataOutput: typeof import("./getVulnerabilityAggregatedVulnerabilityData").getVulnerabilityAggregatedVulnerabilityDataOutput = null as any;
utilities.lazyLoad(exports, ["getVulnerabilityAggregatedVulnerabilityData","getVulnerabilityAggregatedVulnerabilityDataOutput"], () => require("./getVulnerabilityAggregatedVulnerabilityData"));

export { GetVulnerabilityNotificationsArgs, GetVulnerabilityNotificationsResult, GetVulnerabilityNotificationsOutputArgs } from "./getVulnerabilityNotifications";
export const getVulnerabilityNotifications: typeof import("./getVulnerabilityNotifications").getVulnerabilityNotifications = null as any;
export const getVulnerabilityNotificationsOutput: typeof import("./getVulnerabilityNotifications").getVulnerabilityNotificationsOutput = null as any;
utilities.lazyLoad(exports, ["getVulnerabilityNotifications","getVulnerabilityNotificationsOutput"], () => require("./getVulnerabilityNotifications"));

export { GetVulnerabilityResourcesArgs, GetVulnerabilityResourcesResult, GetVulnerabilityResourcesOutputArgs } from "./getVulnerabilityResources";
export const getVulnerabilityResources: typeof import("./getVulnerabilityResources").getVulnerabilityResources = null as any;
export const getVulnerabilityResourcesOutput: typeof import("./getVulnerabilityResources").getVulnerabilityResourcesOutput = null as any;
utilities.lazyLoad(exports, ["getVulnerabilityResources","getVulnerabilityResourcesOutput"], () => require("./getVulnerabilityResources"));

export { GetVulnerabilityScanArgs, GetVulnerabilityScanResult, GetVulnerabilityScanOutputArgs } from "./getVulnerabilityScan";
export const getVulnerabilityScan: typeof import("./getVulnerabilityScan").getVulnerabilityScan = null as any;
export const getVulnerabilityScanOutput: typeof import("./getVulnerabilityScan").getVulnerabilityScanOutput = null as any;
utilities.lazyLoad(exports, ["getVulnerabilityScan","getVulnerabilityScanOutput"], () => require("./getVulnerabilityScan"));

export { GetVulnerabilityScansArgs, GetVulnerabilityScansResult, GetVulnerabilityScansOutputArgs } from "./getVulnerabilityScans";
export const getVulnerabilityScans: typeof import("./getVulnerabilityScans").getVulnerabilityScans = null as any;
export const getVulnerabilityScansOutput: typeof import("./getVulnerabilityScans").getVulnerabilityScansOutput = null as any;
utilities.lazyLoad(exports, ["getVulnerabilityScans","getVulnerabilityScansOutput"], () => require("./getVulnerabilityScans"));

export { GetVulnerabilityVulnerabilitiesArgs, GetVulnerabilityVulnerabilitiesResult, GetVulnerabilityVulnerabilitiesOutputArgs } from "./getVulnerabilityVulnerabilities";
export const getVulnerabilityVulnerabilities: typeof import("./getVulnerabilityVulnerabilities").getVulnerabilityVulnerabilities = null as any;
export const getVulnerabilityVulnerabilitiesOutput: typeof import("./getVulnerabilityVulnerabilities").getVulnerabilityVulnerabilitiesOutput = null as any;
utilities.lazyLoad(exports, ["getVulnerabilityVulnerabilities","getVulnerabilityVulnerabilitiesOutput"], () => require("./getVulnerabilityVulnerabilities"));

export { VulnerabilityScanArgs, VulnerabilityScanState } from "./vulnerabilityScan";
export type VulnerabilityScan = import("./vulnerabilityScan").VulnerabilityScan;
export const VulnerabilityScan: typeof import("./vulnerabilityScan").VulnerabilityScan = null as any;
utilities.lazyLoad(exports, ["VulnerabilityScan"], () => require("./vulnerabilityScan"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Dblm/vulnerabilityScan:VulnerabilityScan":
                return new VulnerabilityScan(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Dblm/vulnerabilityScan", _module)
