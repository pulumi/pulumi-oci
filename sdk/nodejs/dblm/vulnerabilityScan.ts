// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Vulnerability Scan resource in Oracle Cloud Infrastructure Dblm service.
 *
 * Creates a VulnerabilityScan.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVulnerabilityScan = new oci.dblm.VulnerabilityScan("test_vulnerability_scan", {
 *     compartmentId: compartmentId,
 *     vulnerabilityScanType: vulnerabilityScanVulnerabilityScanType,
 * });
 * ```
 *
 * ## Import
 *
 * VulnerabilityScans can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Dblm/vulnerabilityScan:VulnerabilityScan test_vulnerability_scan "id"
 * ```
 */
export class VulnerabilityScan extends pulumi.CustomResource {
    /**
     * Get an existing VulnerabilityScan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VulnerabilityScanState, opts?: pulumi.CustomResourceOptions): VulnerabilityScan {
        return new VulnerabilityScan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Dblm/vulnerabilityScan:VulnerabilityScan';

    /**
     * Returns true if the given object is an instance of VulnerabilityScan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VulnerabilityScan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VulnerabilityScan.__pulumiType;
    }

    /**
     * Compartment Identifier
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public /*out*/ readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public /*out*/ readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The current state of the VulnerabilityScan.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the VulnerabilityScan was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time the VulnerabilityScan was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeEnded!: pulumi.Output<string>;
    /**
     * The message of the vulnerability scan status.
     */
    public /*out*/ readonly vulnerabilityScanMessage!: pulumi.Output<string>;
    /**
     * The status of the vulnerability scan.
     */
    public /*out*/ readonly vulnerabilityScanStatus!: pulumi.Output<string>;
    /**
     * Vulnerability Scan type is CVE, PATCH or IMAGE_PATCH
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly vulnerabilityScanType!: pulumi.Output<string>;

    /**
     * Create a VulnerabilityScan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VulnerabilityScanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VulnerabilityScanArgs | VulnerabilityScanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VulnerabilityScanState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeEnded"] = state ? state.timeEnded : undefined;
            resourceInputs["vulnerabilityScanMessage"] = state ? state.vulnerabilityScanMessage : undefined;
            resourceInputs["vulnerabilityScanStatus"] = state ? state.vulnerabilityScanStatus : undefined;
            resourceInputs["vulnerabilityScanType"] = state ? state.vulnerabilityScanType : undefined;
        } else {
            const args = argsOrState as VulnerabilityScanArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.vulnerabilityScanType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vulnerabilityScanType'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["vulnerabilityScanType"] = args ? args.vulnerabilityScanType : undefined;
            resourceInputs["definedTags"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["freeformTags"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeEnded"] = undefined /*out*/;
            resourceInputs["vulnerabilityScanMessage"] = undefined /*out*/;
            resourceInputs["vulnerabilityScanStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VulnerabilityScan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VulnerabilityScan resources.
 */
export interface VulnerabilityScanState {
    /**
     * Compartment Identifier
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current state of the VulnerabilityScan.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the VulnerabilityScan was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the VulnerabilityScan was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeEnded?: pulumi.Input<string>;
    /**
     * The message of the vulnerability scan status.
     */
    vulnerabilityScanMessage?: pulumi.Input<string>;
    /**
     * The status of the vulnerability scan.
     */
    vulnerabilityScanStatus?: pulumi.Input<string>;
    /**
     * Vulnerability Scan type is CVE, PATCH or IMAGE_PATCH
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    vulnerabilityScanType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VulnerabilityScan resource.
 */
export interface VulnerabilityScanArgs {
    /**
     * Compartment Identifier
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Vulnerability Scan type is CVE, PATCH or IMAGE_PATCH
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    vulnerabilityScanType: pulumi.Input<string>;
}
