// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Delegated Resource Access Request resource in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Gets details of a Delegated Resource Access Request.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDelegatedResourceAccessRequest = oci.DelegateAccessControl.getDelegatedResourceAccessRequest({
 *     delegatedResourceAccessRequestId: testDelegatedResourceAccessRequestOciDelegateAccessControlDelegatedResourceAccessRequest.id,
 * });
 * ```
 */
export function getDelegatedResourceAccessRequest(args: GetDelegatedResourceAccessRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegatedResourceAccessRequestResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DelegateAccessControl/getDelegatedResourceAccessRequest:getDelegatedResourceAccessRequest", {
        "delegatedResourceAccessRequestId": args.delegatedResourceAccessRequestId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDelegatedResourceAccessRequest.
 */
export interface GetDelegatedResourceAccessRequestArgs {
    /**
     * Unique Delegated Resource Access Request identifier
     */
    delegatedResourceAccessRequestId: string;
}

/**
 * A collection of values returned by getDelegatedResourceAccessRequest.
 */
export interface GetDelegatedResourceAccessRequestResult {
    /**
     * In case of single approval, this will have only one item. Else, a list of approvals.
     */
    readonly approvalInfos: outputs.DelegateAccessControl.GetDelegatedResourceAccessRequestApprovalInfo[];
    /**
     * Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level.  By default, both command-level and keystroke-level auditing are enabled, i.e. commands and key strokes issued by the support operator are logged.
     */
    readonly auditTypes: string[];
    /**
     * The comment entered by the support operator while closing the request.
     */
    readonly closureComment: string;
    /**
     * The OCID of the compartment that contains the Delegated Resource Access Request.
     */
    readonly compartmentId: string;
    /**
     * List of Database unique names for which access is requested. This parameter is required for DLGT_MGMT_SYS_MAINT_ACCESS cage when database access in needed.
     */
    readonly databaseNameLists: string[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: string};
    readonly delegatedResourceAccessRequestId: string;
    /**
     * The OCID of the Delegation Control governing the target resource.
     */
    readonly delegationControlId: string;
    /**
     * List of Delegation Subscription OCID that are associated with this Delegated Resource Access Request based on the service types being requested.
     */
    readonly delegationSubscriptionIds: string[];
    /**
     * Detailed description of this Delegated Resource Access Request.
     */
    readonly description: string;
    /**
     * Display name. This is generated by the system automatically.
     */
    readonly displayName: string;
    /**
     * Duration in hours for which access is sought on the target resource.
     */
    readonly durationInHours: number;
    /**
     * Duration in hours for which extension access is sought on the target resource.
     */
    readonly extendDurationInHours: number;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Set to true if the request is approved automatically based on preApprovedServiceProviderActionNames or isAutoApproveDuringMaintenance in the associated Delegation Control.
     */
    readonly isAutoApproved: boolean;
    /**
     * Indicates if the delegated resource access request is waiting on more information from the operator
     */
    readonly isPendingMoreInfo: boolean;
    /**
     * Description of the current lifecycle state in more detail.
     */
    readonly lifecycleStateDetails: string;
    /**
     * Number of extension approvals that have been obtained so far.
     */
    readonly numExtensionApprovals: number;
    /**
     * Number of initial approvals that have been obtained so far.
     */
    readonly numInitialApprovals: number;
    /**
     * List of Service Provider Service Types being provided by the support operator user.
     */
    readonly providedServiceTypes: string[];
    /**
     * A short description explaining why this Delegated Resource Access Request is needed by the support operator.
     */
    readonly reasonForRequest: string;
    /**
     * The current status of the Delegated Resource Access Request.
     */
    readonly requestStatus: string;
    /**
     * List of Service Provider Action names for which approval is sought by the support operator user. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API.
     */
    readonly requestedActionNames: string[];
    /**
     * Requester type
     */
    readonly requesterType: string;
    /**
     * The OCID of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
     */
    readonly resourceId: string;
    /**
     * The name of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
     */
    readonly resourceName: string;
    /**
     * Resource type for which the associated Delegation Control is applicable to.
     */
    readonly resourceType: string;
    /**
     * Priority assigned to the Delegated Resource Access Request by the support operator
     */
    readonly severity: string;
    /**
     * The current lifecycle state of the Delegated Resource Access Request.
     */
    readonly state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * A list of ticket numbers related to this Delegated Resource Access Request, e.g. Service Request (SR) number and JIRA ticket number.
     */
    readonly ticketNumbers: string[];
    /**
     * Requested access start time in UTC.
     */
    readonly timeAccessRequested: string;
    /**
     * Time when the Delegated Resource Access Request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. '2020-05-22T21:10:29.600Z'.
     */
    readonly timeCreated: string;
    /**
     * Time when the Delegated Resource Access Request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. '2020-05-22T21:10:29.600Z'.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Delegated Resource Access Request resource in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Gets details of a Delegated Resource Access Request.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDelegatedResourceAccessRequest = oci.DelegateAccessControl.getDelegatedResourceAccessRequest({
 *     delegatedResourceAccessRequestId: testDelegatedResourceAccessRequestOciDelegateAccessControlDelegatedResourceAccessRequest.id,
 * });
 * ```
 */
export function getDelegatedResourceAccessRequestOutput(args: GetDelegatedResourceAccessRequestOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDelegatedResourceAccessRequestResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DelegateAccessControl/getDelegatedResourceAccessRequest:getDelegatedResourceAccessRequest", {
        "delegatedResourceAccessRequestId": args.delegatedResourceAccessRequestId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDelegatedResourceAccessRequest.
 */
export interface GetDelegatedResourceAccessRequestOutputArgs {
    /**
     * Unique Delegated Resource Access Request identifier
     */
    delegatedResourceAccessRequestId: pulumi.Input<string>;
}
