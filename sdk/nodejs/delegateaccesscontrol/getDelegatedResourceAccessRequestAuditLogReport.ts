// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Delegated Resource Access Request Audit Log Report resource in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Gets the audit log report for the given Delegated Resource Access Request.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDelegatedResourceAccessRequestAuditLogReport = oci.DelegateAccessControl.getDelegatedResourceAccessRequestAuditLogReport({
 *     delegatedResourceAccessRequestId: testDelegatedResourceAccessRequest.id,
 *     isProcessTreeEnabled: delegatedResourceAccessRequestAuditLogReportIsProcessTreeEnabled,
 * });
 * ```
 */
export function getDelegatedResourceAccessRequestAuditLogReport(args: GetDelegatedResourceAccessRequestAuditLogReportArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegatedResourceAccessRequestAuditLogReportResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DelegateAccessControl/getDelegatedResourceAccessRequestAuditLogReport:getDelegatedResourceAccessRequestAuditLogReport", {
        "delegatedResourceAccessRequestId": args.delegatedResourceAccessRequestId,
        "isProcessTreeEnabled": args.isProcessTreeEnabled,
    }, opts);
}

/**
 * A collection of arguments for invoking getDelegatedResourceAccessRequestAuditLogReport.
 */
export interface GetDelegatedResourceAccessRequestAuditLogReportArgs {
    /**
     * Unique Delegated Resource Access Request identifier
     */
    delegatedResourceAccessRequestId: string;
    /**
     * Set to true to enable process tree computation in audit report
     */
    isProcessTreeEnabled?: boolean;
}

/**
 * A collection of values returned by getDelegatedResourceAccessRequestAuditLogReport.
 */
export interface GetDelegatedResourceAccessRequestAuditLogReportResult {
    /**
     * Status of the audit report
     */
    readonly auditReportStatus: string;
    readonly delegatedResourceAccessRequestId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isProcessTreeEnabled?: boolean;
    /**
     * The process tree data
     */
    readonly processTree: string;
    /**
     * Audit log report.
     */
    readonly report: string;
    /**
     * Time when the audit report was generated [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. '2020-05-22T21:10:29.600Z'
     */
    readonly timeReportGenerated: string;
}
/**
 * This data source provides details about a specific Delegated Resource Access Request Audit Log Report resource in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Gets the audit log report for the given Delegated Resource Access Request.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDelegatedResourceAccessRequestAuditLogReport = oci.DelegateAccessControl.getDelegatedResourceAccessRequestAuditLogReport({
 *     delegatedResourceAccessRequestId: testDelegatedResourceAccessRequest.id,
 *     isProcessTreeEnabled: delegatedResourceAccessRequestAuditLogReportIsProcessTreeEnabled,
 * });
 * ```
 */
export function getDelegatedResourceAccessRequestAuditLogReportOutput(args: GetDelegatedResourceAccessRequestAuditLogReportOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDelegatedResourceAccessRequestAuditLogReportResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DelegateAccessControl/getDelegatedResourceAccessRequestAuditLogReport:getDelegatedResourceAccessRequestAuditLogReport", {
        "delegatedResourceAccessRequestId": args.delegatedResourceAccessRequestId,
        "isProcessTreeEnabled": args.isProcessTreeEnabled,
    }, opts);
}

/**
 * A collection of arguments for invoking getDelegatedResourceAccessRequestAuditLogReport.
 */
export interface GetDelegatedResourceAccessRequestAuditLogReportOutputArgs {
    /**
     * Unique Delegated Resource Access Request identifier
     */
    delegatedResourceAccessRequestId: pulumi.Input<string>;
    /**
     * Set to true to enable process tree computation in audit report
     */
    isProcessTreeEnabled?: pulumi.Input<boolean>;
}
