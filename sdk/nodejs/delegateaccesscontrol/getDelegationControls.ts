// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Delegation Controls in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Lists the Delegation Controls in the compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDelegationControls = oci.DelegateAccessControl.getDelegationControls({
 *     compartmentId: compartmentId,
 *     displayName: delegationControlDisplayName,
 *     resourceId: testResource.id,
 *     resourceType: delegationControlResourceType,
 *     state: delegationControlState,
 * });
 * ```
 */
export function getDelegationControls(args: GetDelegationControlsArgs, opts?: pulumi.InvokeOptions): Promise<GetDelegationControlsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DelegateAccessControl/getDelegationControls:getDelegationControls", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDelegationControls.
 */
export interface GetDelegationControlsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * A filter to return Delegation Control resources that match the given display name.
     */
    displayName?: string;
    filters?: inputs.DelegateAccessControl.GetDelegationControlsFilter[];
    /**
     * A filter to return Delegation Control resources that match the given resource ID.
     */
    resourceId?: string;
    /**
     * A filter to return only resources that match the given resource type.
     */
    resourceType?: string;
    /**
     * A filter to return only Delegation Control resources whose lifecycleState matches the given Delegation Control lifecycle state.
     */
    state?: string;
}

/**
 * A collection of values returned by getDelegationControls.
 */
export interface GetDelegationControlsResult {
    /**
     * The OCID of the compartment that contains the Delegation Control.
     */
    readonly compartmentId: string;
    /**
     * The list of delegation_control_summary_collection.
     */
    readonly delegationControlSummaryCollections: outputs.DelegateAccessControl.GetDelegationControlsDelegationControlSummaryCollection[];
    /**
     * Name of the Delegation Control. The name does not need to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DelegateAccessControl.GetDelegationControlsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resourceId?: string;
    /**
     * Resource type for which the Delegation Control is applicable to.
     */
    readonly resourceType?: string;
    /**
     * The current lifecycle state of the Delegation Control.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Delegation Controls in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Lists the Delegation Controls in the compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDelegationControls = oci.DelegateAccessControl.getDelegationControls({
 *     compartmentId: compartmentId,
 *     displayName: delegationControlDisplayName,
 *     resourceId: testResource.id,
 *     resourceType: delegationControlResourceType,
 *     state: delegationControlState,
 * });
 * ```
 */
export function getDelegationControlsOutput(args: GetDelegationControlsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDelegationControlsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DelegateAccessControl/getDelegationControls:getDelegationControls", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "resourceId": args.resourceId,
        "resourceType": args.resourceType,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDelegationControls.
 */
export interface GetDelegationControlsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return Delegation Control resources that match the given display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DelegateAccessControl.GetDelegationControlsFilterArgs>[]>;
    /**
     * A filter to return Delegation Control resources that match the given resource ID.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given resource type.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * A filter to return only Delegation Control resources whose lifecycleState matches the given Delegation Control lifecycle state.
     */
    state?: pulumi.Input<string>;
}
