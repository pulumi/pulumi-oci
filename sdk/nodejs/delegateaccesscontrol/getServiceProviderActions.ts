// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Service Provider Actions in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Lists all the ServiceProviderActions available in the system.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceProviderActions = oci.DelegateAccessControl.getServiceProviderActions({
 *     compartmentId: compartmentId,
 *     name: serviceProviderActionName,
 *     resourceType: serviceProviderActionResourceType,
 *     serviceProviderServiceTypes: serviceProviderActionServiceProviderServiceType,
 *     state: serviceProviderActionState,
 * });
 * ```
 */
export function getServiceProviderActions(args: GetServiceProviderActionsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceProviderActionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DelegateAccessControl/getServiceProviderActions:getServiceProviderActions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "resourceType": args.resourceType,
        "serviceProviderServiceTypes": args.serviceProviderServiceTypes,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceProviderActions.
 */
export interface GetServiceProviderActionsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    filters?: inputs.DelegateAccessControl.GetServiceProviderActionsFilter[];
    /**
     * A filter to return only resources that match the entire name given.
     */
    name?: string;
    /**
     * A filter to return only resources that match the given resource type.
     */
    resourceType?: string;
    /**
     * A filter to return only resources that match the given Service Provider service type.
     */
    serviceProviderServiceTypes?: string[];
    /**
     * A filter to return only resources whose lifecycleState matches the given Service Provider Action lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getServiceProviderActions.
 */
export interface GetServiceProviderActionsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.DelegateAccessControl.GetServiceProviderActionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the property
     */
    readonly name?: string;
    /**
     * resourceType for which the ServiceProviderAction is applicable
     */
    readonly resourceType?: string;
    /**
     * The list of service_provider_action_summary_collection.
     */
    readonly serviceProviderActionSummaryCollections: outputs.DelegateAccessControl.GetServiceProviderActionsServiceProviderActionSummaryCollection[];
    readonly serviceProviderServiceTypes?: string[];
    /**
     * The current lifecycle state of the Service Provider Action.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Service Provider Actions in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Lists all the ServiceProviderActions available in the system.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceProviderActions = oci.DelegateAccessControl.getServiceProviderActions({
 *     compartmentId: compartmentId,
 *     name: serviceProviderActionName,
 *     resourceType: serviceProviderActionResourceType,
 *     serviceProviderServiceTypes: serviceProviderActionServiceProviderServiceType,
 *     state: serviceProviderActionState,
 * });
 * ```
 */
export function getServiceProviderActionsOutput(args: GetServiceProviderActionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceProviderActionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DelegateAccessControl/getServiceProviderActions:getServiceProviderActions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "resourceType": args.resourceType,
        "serviceProviderServiceTypes": args.serviceProviderServiceTypes,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceProviderActions.
 */
export interface GetServiceProviderActionsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DelegateAccessControl.GetServiceProviderActionsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given resource type.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given Service Provider service type.
     */
    serviceProviderServiceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return only resources whose lifecycleState matches the given Service Provider Action lifecycleState.
     */
    state?: pulumi.Input<string>;
}
