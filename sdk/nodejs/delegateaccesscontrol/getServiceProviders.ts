// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Service Providers in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Lists the Service Providers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceProviders = oci.DelegateAccessControl.getServiceProviders({
 *     compartmentId: compartmentId,
 *     name: serviceProviderName,
 *     serviceProviderType: serviceProviderServiceProviderType,
 *     state: serviceProviderState,
 *     supportedResourceType: serviceProviderSupportedResourceType,
 * });
 * ```
 */
export function getServiceProviders(args: GetServiceProvidersArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceProvidersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DelegateAccessControl/getServiceProviders:getServiceProviders", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "serviceProviderType": args.serviceProviderType,
        "state": args.state,
        "supportedResourceType": args.supportedResourceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceProviders.
 */
export interface GetServiceProvidersArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    filters?: inputs.DelegateAccessControl.GetServiceProvidersFilter[];
    /**
     * A filter to return Service Provider resources that match the given name.
     */
    name?: string;
    /**
     * A filter to return only Service Provider resources whose provider type matches the given provider type.
     */
    serviceProviderType?: string;
    /**
     * A filter to return only Service Provider resources whose lifecycleState matches the given Service Provider lifecycle state.
     */
    state?: string;
    /**
     * A filter to return only Service Provider resources whose supported resource type matches the given resource type.
     */
    supportedResourceType?: string;
}

/**
 * A collection of values returned by getServiceProviders.
 */
export interface GetServiceProvidersResult {
    /**
     * The OCID of the compartment that contains the Delegation Control.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.DelegateAccessControl.GetServiceProvidersFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique name of the Service Provider.
     */
    readonly name?: string;
    /**
     * The list of service_provider_summary_collection.
     */
    readonly serviceProviderSummaryCollections: outputs.DelegateAccessControl.GetServiceProvidersServiceProviderSummaryCollection[];
    /**
     * Service Provider type.
     */
    readonly serviceProviderType?: string;
    /**
     * The current lifecycle state of the Service Provider.
     */
    readonly state?: string;
    readonly supportedResourceType?: string;
}
/**
 * This data source provides the list of Service Providers in Oracle Cloud Infrastructure Delegate Access Control service.
 *
 * Lists the Service Providers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceProviders = oci.DelegateAccessControl.getServiceProviders({
 *     compartmentId: compartmentId,
 *     name: serviceProviderName,
 *     serviceProviderType: serviceProviderServiceProviderType,
 *     state: serviceProviderState,
 *     supportedResourceType: serviceProviderSupportedResourceType,
 * });
 * ```
 */
export function getServiceProvidersOutput(args: GetServiceProvidersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceProvidersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DelegateAccessControl/getServiceProviders:getServiceProviders", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "serviceProviderType": args.serviceProviderType,
        "state": args.state,
        "supportedResourceType": args.supportedResourceType,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceProviders.
 */
export interface GetServiceProvidersOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DelegateAccessControl.GetServiceProvidersFilterArgs>[]>;
    /**
     * A filter to return Service Provider resources that match the given name.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only Service Provider resources whose provider type matches the given provider type.
     */
    serviceProviderType?: pulumi.Input<string>;
    /**
     * A filter to return only Service Provider resources whose lifecycleState matches the given Service Provider lifecycle state.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only Service Provider resources whose supported resource type matches the given resource type.
     */
    supportedResourceType?: pulumi.Input<string>;
}
