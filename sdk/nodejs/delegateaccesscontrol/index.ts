// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DelegationControlArgs, DelegationControlState } from "./delegationControl";
export type DelegationControl = import("./delegationControl").DelegationControl;
export const DelegationControl: typeof import("./delegationControl").DelegationControl = null as any;
utilities.lazyLoad(exports, ["DelegationControl"], () => require("./delegationControl"));

export { DelegationSubscriptionArgs, DelegationSubscriptionState } from "./delegationSubscription";
export type DelegationSubscription = import("./delegationSubscription").DelegationSubscription;
export const DelegationSubscription: typeof import("./delegationSubscription").DelegationSubscription = null as any;
utilities.lazyLoad(exports, ["DelegationSubscription"], () => require("./delegationSubscription"));

export { GetDelegatedResourceAccessRequestArgs, GetDelegatedResourceAccessRequestResult, GetDelegatedResourceAccessRequestOutputArgs } from "./getDelegatedResourceAccessRequest";
export const getDelegatedResourceAccessRequest: typeof import("./getDelegatedResourceAccessRequest").getDelegatedResourceAccessRequest = null as any;
export const getDelegatedResourceAccessRequestOutput: typeof import("./getDelegatedResourceAccessRequest").getDelegatedResourceAccessRequestOutput = null as any;
utilities.lazyLoad(exports, ["getDelegatedResourceAccessRequest","getDelegatedResourceAccessRequestOutput"], () => require("./getDelegatedResourceAccessRequest"));

export { GetDelegatedResourceAccessRequestAuditLogReportArgs, GetDelegatedResourceAccessRequestAuditLogReportResult, GetDelegatedResourceAccessRequestAuditLogReportOutputArgs } from "./getDelegatedResourceAccessRequestAuditLogReport";
export const getDelegatedResourceAccessRequestAuditLogReport: typeof import("./getDelegatedResourceAccessRequestAuditLogReport").getDelegatedResourceAccessRequestAuditLogReport = null as any;
export const getDelegatedResourceAccessRequestAuditLogReportOutput: typeof import("./getDelegatedResourceAccessRequestAuditLogReport").getDelegatedResourceAccessRequestAuditLogReportOutput = null as any;
utilities.lazyLoad(exports, ["getDelegatedResourceAccessRequestAuditLogReport","getDelegatedResourceAccessRequestAuditLogReportOutput"], () => require("./getDelegatedResourceAccessRequestAuditLogReport"));

export { GetDelegatedResourceAccessRequestHistoriesArgs, GetDelegatedResourceAccessRequestHistoriesResult, GetDelegatedResourceAccessRequestHistoriesOutputArgs } from "./getDelegatedResourceAccessRequestHistories";
export const getDelegatedResourceAccessRequestHistories: typeof import("./getDelegatedResourceAccessRequestHistories").getDelegatedResourceAccessRequestHistories = null as any;
export const getDelegatedResourceAccessRequestHistoriesOutput: typeof import("./getDelegatedResourceAccessRequestHistories").getDelegatedResourceAccessRequestHistoriesOutput = null as any;
utilities.lazyLoad(exports, ["getDelegatedResourceAccessRequestHistories","getDelegatedResourceAccessRequestHistoriesOutput"], () => require("./getDelegatedResourceAccessRequestHistories"));

export { GetDelegatedResourceAccessRequestsArgs, GetDelegatedResourceAccessRequestsResult, GetDelegatedResourceAccessRequestsOutputArgs } from "./getDelegatedResourceAccessRequests";
export const getDelegatedResourceAccessRequests: typeof import("./getDelegatedResourceAccessRequests").getDelegatedResourceAccessRequests = null as any;
export const getDelegatedResourceAccessRequestsOutput: typeof import("./getDelegatedResourceAccessRequests").getDelegatedResourceAccessRequestsOutput = null as any;
utilities.lazyLoad(exports, ["getDelegatedResourceAccessRequests","getDelegatedResourceAccessRequestsOutput"], () => require("./getDelegatedResourceAccessRequests"));

export { GetDelegationControlArgs, GetDelegationControlResult, GetDelegationControlOutputArgs } from "./getDelegationControl";
export const getDelegationControl: typeof import("./getDelegationControl").getDelegationControl = null as any;
export const getDelegationControlOutput: typeof import("./getDelegationControl").getDelegationControlOutput = null as any;
utilities.lazyLoad(exports, ["getDelegationControl","getDelegationControlOutput"], () => require("./getDelegationControl"));

export { GetDelegationControlResourcesArgs, GetDelegationControlResourcesResult, GetDelegationControlResourcesOutputArgs } from "./getDelegationControlResources";
export const getDelegationControlResources: typeof import("./getDelegationControlResources").getDelegationControlResources = null as any;
export const getDelegationControlResourcesOutput: typeof import("./getDelegationControlResources").getDelegationControlResourcesOutput = null as any;
utilities.lazyLoad(exports, ["getDelegationControlResources","getDelegationControlResourcesOutput"], () => require("./getDelegationControlResources"));

export { GetDelegationControlsArgs, GetDelegationControlsResult, GetDelegationControlsOutputArgs } from "./getDelegationControls";
export const getDelegationControls: typeof import("./getDelegationControls").getDelegationControls = null as any;
export const getDelegationControlsOutput: typeof import("./getDelegationControls").getDelegationControlsOutput = null as any;
utilities.lazyLoad(exports, ["getDelegationControls","getDelegationControlsOutput"], () => require("./getDelegationControls"));

export { GetDelegationSubscriptionArgs, GetDelegationSubscriptionResult, GetDelegationSubscriptionOutputArgs } from "./getDelegationSubscription";
export const getDelegationSubscription: typeof import("./getDelegationSubscription").getDelegationSubscription = null as any;
export const getDelegationSubscriptionOutput: typeof import("./getDelegationSubscription").getDelegationSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getDelegationSubscription","getDelegationSubscriptionOutput"], () => require("./getDelegationSubscription"));

export { GetDelegationSubscriptionsArgs, GetDelegationSubscriptionsResult, GetDelegationSubscriptionsOutputArgs } from "./getDelegationSubscriptions";
export const getDelegationSubscriptions: typeof import("./getDelegationSubscriptions").getDelegationSubscriptions = null as any;
export const getDelegationSubscriptionsOutput: typeof import("./getDelegationSubscriptions").getDelegationSubscriptionsOutput = null as any;
utilities.lazyLoad(exports, ["getDelegationSubscriptions","getDelegationSubscriptionsOutput"], () => require("./getDelegationSubscriptions"));

export { GetServiceProviderArgs, GetServiceProviderResult, GetServiceProviderOutputArgs } from "./getServiceProvider";
export const getServiceProvider: typeof import("./getServiceProvider").getServiceProvider = null as any;
export const getServiceProviderOutput: typeof import("./getServiceProvider").getServiceProviderOutput = null as any;
utilities.lazyLoad(exports, ["getServiceProvider","getServiceProviderOutput"], () => require("./getServiceProvider"));

export { GetServiceProviderActionArgs, GetServiceProviderActionResult, GetServiceProviderActionOutputArgs } from "./getServiceProviderAction";
export const getServiceProviderAction: typeof import("./getServiceProviderAction").getServiceProviderAction = null as any;
export const getServiceProviderActionOutput: typeof import("./getServiceProviderAction").getServiceProviderActionOutput = null as any;
utilities.lazyLoad(exports, ["getServiceProviderAction","getServiceProviderActionOutput"], () => require("./getServiceProviderAction"));

export { GetServiceProviderActionsArgs, GetServiceProviderActionsResult, GetServiceProviderActionsOutputArgs } from "./getServiceProviderActions";
export const getServiceProviderActions: typeof import("./getServiceProviderActions").getServiceProviderActions = null as any;
export const getServiceProviderActionsOutput: typeof import("./getServiceProviderActions").getServiceProviderActionsOutput = null as any;
utilities.lazyLoad(exports, ["getServiceProviderActions","getServiceProviderActionsOutput"], () => require("./getServiceProviderActions"));

export { GetServiceProvidersArgs, GetServiceProvidersResult, GetServiceProvidersOutputArgs } from "./getServiceProviders";
export const getServiceProviders: typeof import("./getServiceProviders").getServiceProviders = null as any;
export const getServiceProvidersOutput: typeof import("./getServiceProviders").getServiceProvidersOutput = null as any;
utilities.lazyLoad(exports, ["getServiceProviders","getServiceProvidersOutput"], () => require("./getServiceProviders"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:DelegateAccessControl/delegationControl:DelegationControl":
                return new DelegationControl(name, <any>undefined, { urn })
            case "oci:DelegateAccessControl/delegationSubscription:DelegationSubscription":
                return new DelegationSubscription(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "DelegateAccessControl/delegationControl", _module)
pulumi.runtime.registerResourceModule("oci", "DelegateAccessControl/delegationSubscription", _module)
