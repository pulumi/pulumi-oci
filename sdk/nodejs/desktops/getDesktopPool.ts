// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Desktop Pool resource in Oracle Cloud Infrastructure Desktops service.
 *
 * Returns information about the desktop pool including all configuration parameters and the current state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDesktopPool = oci.Desktops.getDesktopPool({
 *     desktopPoolId: testDesktopPoolOciDesktopsDesktopPool.id,
 * });
 * ```
 */
export function getDesktopPool(args: GetDesktopPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetDesktopPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Desktops/getDesktopPool:getDesktopPool", {
        "desktopPoolId": args.desktopPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDesktopPool.
 */
export interface GetDesktopPoolArgs {
    /**
     * The OCID of the desktop pool.
     */
    desktopPoolId: string;
}

/**
 * A collection of values returned by getDesktopPool.
 */
export interface GetDesktopPoolResult {
    /**
     * The number of active desktops in the desktop pool.
     */
    readonly activeDesktops: number;
    /**
     * Indicates whether desktop pool users have administrative privileges on their desktop.
     */
    readonly arePrivilegedUsers: boolean;
    /**
     * The availability domain of the desktop pool.
     */
    readonly availabilityDomain: string;
    /**
     * Provides the start and stop schedule information for desktop availability of the desktop pool.
     */
    readonly availabilityPolicies: outputs.Desktops.GetDesktopPoolAvailabilityPolicy[];
    /**
     * The OCID of the compartment of the desktop pool.
     */
    readonly compartmentId: string;
    /**
     * Contact information of the desktop pool administrator. Avoid entering confidential information.
     */
    readonly contactDetails: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * A user friendly description providing additional information about the resource. Avoid entering confidential information.
     */
    readonly description: string;
    readonly desktopPoolId: string;
    /**
     * Provides the settings for desktop and client device options, such as audio in and out, client drive mapping, and clipboard access.
     */
    readonly devicePolicies: outputs.Desktops.GetDesktopPoolDevicePolicy[];
    /**
     * A user friendly display name. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The OCID of the desktop pool.
     */
    readonly id: string;
    /**
     * Provides information about the desktop image.
     */
    readonly images: outputs.Desktops.GetDesktopPoolImage[];
    /**
     * Indicates whether storage is enabled for the desktop pool.
     */
    readonly isStorageEnabled: boolean;
    /**
     * The maximum number of desktops permitted in the desktop pool.
     */
    readonly maximumSize: number;
    /**
     * Provides information about the network configuration of the desktop pool.
     */
    readonly networkConfigurations: outputs.Desktops.GetDesktopPoolNetworkConfiguration[];
    /**
     * A list of network security groups for the private access.
     */
    readonly nsgIds: string[];
    /**
     * The details of the desktop's private access network connectivity that were used to create the pool.
     */
    readonly privateAccessDetails: outputs.Desktops.GetDesktopPoolPrivateAccessDetail[];
    /**
     * The shape configuration used for each desktop compute instance in the desktop pool.
     */
    readonly shapeConfigs: outputs.Desktops.GetDesktopPoolShapeConfig[];
    /**
     * The shape of the desktop pool.
     */
    readonly shapeName: string;
    /**
     * The maximum number of standby desktops available in the desktop pool.
     */
    readonly standbySize: number;
    /**
     * The current state of the desktop pool.
     */
    readonly state: string;
    /**
     * The backup policy OCID of the storage.
     */
    readonly storageBackupPolicyId: string;
    /**
     * The size in GBs of the storage for the desktop pool.
     */
    readonly storageSizeInGbs: number;
    /**
     * The date and time the resource was created.
     */
    readonly timeCreated: string;
    /**
     * The start time of the desktop pool.
     */
    readonly timeStartScheduled: string;
    /**
     * The stop time of the desktop pool.
     */
    readonly timeStopScheduled: string;
    /**
     * Indicates whether the desktop pool uses dedicated virtual machine hosts.
     */
    readonly useDedicatedVmHost: string;
}
/**
 * This data source provides details about a specific Desktop Pool resource in Oracle Cloud Infrastructure Desktops service.
 *
 * Returns information about the desktop pool including all configuration parameters and the current state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDesktopPool = oci.Desktops.getDesktopPool({
 *     desktopPoolId: testDesktopPoolOciDesktopsDesktopPool.id,
 * });
 * ```
 */
export function getDesktopPoolOutput(args: GetDesktopPoolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDesktopPoolResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Desktops/getDesktopPool:getDesktopPool", {
        "desktopPoolId": args.desktopPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDesktopPool.
 */
export interface GetDesktopPoolOutputArgs {
    /**
     * The OCID of the desktop pool.
     */
    desktopPoolId: pulumi.Input<string>;
}
