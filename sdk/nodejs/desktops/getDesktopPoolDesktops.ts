// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Desktop Pool Desktops in Oracle Cloud Infrastructure Desktops service.
 *
 * Returns a list of desktops within a given desktop pool. You can limit the results to an availability domain, desktop name, or desktop state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDesktopPoolDesktops = oci.Desktops.getDesktopPoolDesktops({
 *     compartmentId: compartmentId,
 *     desktopPoolId: testDesktopPool.id,
 *     availabilityDomain: desktopPoolDesktopAvailabilityDomain,
 *     displayName: desktopPoolDesktopDisplayName,
 *     id: desktopPoolDesktopId,
 *     state: desktopPoolDesktopState,
 * });
 * ```
 */
export function getDesktopPoolDesktops(args: GetDesktopPoolDesktopsArgs, opts?: pulumi.InvokeOptions): Promise<GetDesktopPoolDesktopsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Desktops/getDesktopPoolDesktops:getDesktopPoolDesktops", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "desktopPoolId": args.desktopPoolId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDesktopPoolDesktops.
 */
export interface GetDesktopPoolDesktopsArgs {
    /**
     * The name of the availability domain.
     */
    availabilityDomain?: string;
    /**
     * The OCID of the compartment of the desktop pool.
     */
    compartmentId: string;
    /**
     * The OCID of the desktop pool.
     */
    desktopPoolId: string;
    /**
     * A filter to return only results with the given displayName.
     */
    displayName?: string;
    filters?: inputs.Desktops.GetDesktopPoolDesktopsFilter[];
    /**
     * A filter to return only results with the given OCID.
     */
    id?: string;
    /**
     * A filter to return only results with the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getDesktopPoolDesktops.
 */
export interface GetDesktopPoolDesktopsResult {
    readonly availabilityDomain?: string;
    readonly compartmentId: string;
    /**
     * The list of desktop_pool_desktop_collection.
     */
    readonly desktopPoolDesktopCollections: outputs.Desktops.GetDesktopPoolDesktopsDesktopPoolDesktopCollection[];
    readonly desktopPoolId: string;
    readonly displayName?: string;
    readonly filters?: outputs.Desktops.GetDesktopPoolDesktopsFilter[];
    readonly id?: string;
    /**
     * The state of the desktop.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Desktop Pool Desktops in Oracle Cloud Infrastructure Desktops service.
 *
 * Returns a list of desktops within a given desktop pool. You can limit the results to an availability domain, desktop name, or desktop state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDesktopPoolDesktops = oci.Desktops.getDesktopPoolDesktops({
 *     compartmentId: compartmentId,
 *     desktopPoolId: testDesktopPool.id,
 *     availabilityDomain: desktopPoolDesktopAvailabilityDomain,
 *     displayName: desktopPoolDesktopDisplayName,
 *     id: desktopPoolDesktopId,
 *     state: desktopPoolDesktopState,
 * });
 * ```
 */
export function getDesktopPoolDesktopsOutput(args: GetDesktopPoolDesktopsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDesktopPoolDesktopsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Desktops/getDesktopPoolDesktops:getDesktopPoolDesktops", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "desktopPoolId": args.desktopPoolId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDesktopPoolDesktops.
 */
export interface GetDesktopPoolDesktopsOutputArgs {
    /**
     * The name of the availability domain.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The OCID of the compartment of the desktop pool.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The OCID of the desktop pool.
     */
    desktopPoolId: pulumi.Input<string>;
    /**
     * A filter to return only results with the given displayName.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Desktops.GetDesktopPoolDesktopsFilterArgs>[]>;
    /**
     * A filter to return only results with the given OCID.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only results with the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
