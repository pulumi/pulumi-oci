// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Desktop Pool Volumes in Oracle Cloud Infrastructure Desktops service.
 *
 * Returns a list of volumes within the given desktop pool. You can limit the results to an availability domain, volume name, or volume state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDesktopPoolVolumes = oci.Desktops.getDesktopPoolVolumes({
 *     compartmentId: compartmentId,
 *     desktopPoolId: testDesktopPool.id,
 *     availabilityDomain: desktopPoolVolumeAvailabilityDomain,
 *     displayName: desktopPoolVolumeDisplayName,
 *     id: desktopPoolVolumeId,
 *     state: desktopPoolVolumeState,
 * });
 * ```
 */
export function getDesktopPoolVolumes(args: GetDesktopPoolVolumesArgs, opts?: pulumi.InvokeOptions): Promise<GetDesktopPoolVolumesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Desktops/getDesktopPoolVolumes:getDesktopPoolVolumes", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "desktopPoolId": args.desktopPoolId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDesktopPoolVolumes.
 */
export interface GetDesktopPoolVolumesArgs {
    /**
     * The name of the availability domain.
     */
    availabilityDomain?: string;
    /**
     * The OCID of the compartment of the desktop pool.
     */
    compartmentId: string;
    /**
     * The OCID of the desktop pool.
     */
    desktopPoolId: string;
    /**
     * A filter to return only results with the given displayName.
     */
    displayName?: string;
    filters?: inputs.Desktops.GetDesktopPoolVolumesFilter[];
    /**
     * A filter to return only results with the given OCID.
     */
    id?: string;
    /**
     * A filter to return only results with the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getDesktopPoolVolumes.
 */
export interface GetDesktopPoolVolumesResult {
    /**
     * The availability domain of the desktop pool.
     */
    readonly availabilityDomain?: string;
    readonly compartmentId: string;
    readonly desktopPoolId: string;
    /**
     * The list of desktop_pool_volume_collection.
     */
    readonly desktopPoolVolumeCollections: outputs.Desktops.GetDesktopPoolVolumesDesktopPoolVolumeCollection[];
    readonly displayName?: string;
    readonly filters?: outputs.Desktops.GetDesktopPoolVolumesFilter[];
    /**
     * The OCID of the desktop pool volume.
     */
    readonly id?: string;
    /**
     * The state of the desktop pool volume.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Desktop Pool Volumes in Oracle Cloud Infrastructure Desktops service.
 *
 * Returns a list of volumes within the given desktop pool. You can limit the results to an availability domain, volume name, or volume state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDesktopPoolVolumes = oci.Desktops.getDesktopPoolVolumes({
 *     compartmentId: compartmentId,
 *     desktopPoolId: testDesktopPool.id,
 *     availabilityDomain: desktopPoolVolumeAvailabilityDomain,
 *     displayName: desktopPoolVolumeDisplayName,
 *     id: desktopPoolVolumeId,
 *     state: desktopPoolVolumeState,
 * });
 * ```
 */
export function getDesktopPoolVolumesOutput(args: GetDesktopPoolVolumesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDesktopPoolVolumesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Desktops/getDesktopPoolVolumes:getDesktopPoolVolumes", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "desktopPoolId": args.desktopPoolId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDesktopPoolVolumes.
 */
export interface GetDesktopPoolVolumesOutputArgs {
    /**
     * The name of the availability domain.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The OCID of the compartment of the desktop pool.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The OCID of the desktop pool.
     */
    desktopPoolId: pulumi.Input<string>;
    /**
     * A filter to return only results with the given displayName.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Desktops.GetDesktopPoolVolumesFilterArgs>[]>;
    /**
     * A filter to return only results with the given OCID.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only results with the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
