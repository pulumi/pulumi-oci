// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Desktop Pools in Oracle Cloud Infrastructure Desktops service.
 *
 * Returns a list of desktop pools within the given compartment. You can limit the results to an availability domain, pool name, or pool state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDesktopPools = oci.Desktops.getDesktopPools({
 *     compartmentId: compartmentId,
 *     availabilityDomain: desktopPoolAvailabilityDomain,
 *     displayName: desktopPoolDisplayName,
 *     id: desktopPoolId,
 *     state: desktopPoolState,
 * });
 * ```
 */
export function getDesktopPools(args: GetDesktopPoolsArgs, opts?: pulumi.InvokeOptions): Promise<GetDesktopPoolsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Desktops/getDesktopPools:getDesktopPools", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDesktopPools.
 */
export interface GetDesktopPoolsArgs {
    /**
     * The name of the availability domain.
     */
    availabilityDomain?: string;
    /**
     * The OCID of the compartment of the desktop pool.
     */
    compartmentId: string;
    /**
     * A filter to return only results with the given displayName.
     */
    displayName?: string;
    filters?: inputs.Desktops.GetDesktopPoolsFilter[];
    /**
     * A filter to return only results with the given OCID.
     */
    id?: string;
    /**
     * A filter to return only results with the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getDesktopPools.
 */
export interface GetDesktopPoolsResult {
    /**
     * The availability domain of the desktop pool.
     */
    readonly availabilityDomain?: string;
    /**
     * The OCID of the compartment of the desktop pool.
     */
    readonly compartmentId: string;
    /**
     * The list of desktop_pool_collection.
     */
    readonly desktopPoolCollections: outputs.Desktops.GetDesktopPoolsDesktopPoolCollection[];
    /**
     * A user friendly display name. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Desktops.GetDesktopPoolsFilter[];
    /**
     * The OCID of the desktop pool.
     */
    readonly id?: string;
    /**
     * The current state of the desktop pool.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Desktop Pools in Oracle Cloud Infrastructure Desktops service.
 *
 * Returns a list of desktop pools within the given compartment. You can limit the results to an availability domain, pool name, or pool state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDesktopPools = oci.Desktops.getDesktopPools({
 *     compartmentId: compartmentId,
 *     availabilityDomain: desktopPoolAvailabilityDomain,
 *     displayName: desktopPoolDisplayName,
 *     id: desktopPoolId,
 *     state: desktopPoolState,
 * });
 * ```
 */
export function getDesktopPoolsOutput(args: GetDesktopPoolsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDesktopPoolsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Desktops/getDesktopPools:getDesktopPools", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDesktopPools.
 */
export interface GetDesktopPoolsOutputArgs {
    /**
     * The name of the availability domain.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The OCID of the compartment of the desktop pool.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only results with the given displayName.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Desktops.GetDesktopPoolsFilterArgs>[]>;
    /**
     * A filter to return only results with the given OCID.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only results with the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
