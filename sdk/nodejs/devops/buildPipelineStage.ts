// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Build Pipeline Stage resource in Oracle Cloud Infrastructure Devops service.
 *
 * Creates a new stage.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBuildPipelineStage = new oci.devops.BuildPipelineStage("test_build_pipeline_stage", {
 *     buildPipelineId: testBuildPipeline.id,
 *     buildPipelineStagePredecessorCollection: {
 *         items: [{
 *             id: buildPipelineStageBuildPipelineStagePredecessorCollectionItemsId,
 *         }],
 *     },
 *     buildPipelineStageType: buildPipelineStageBuildPipelineStageType,
 *     buildRunnerShapeConfig: {
 *         buildRunnerType: buildPipelineStageBuildRunnerShapeConfigBuildRunnerType,
 *         memoryInGbs: buildPipelineStageBuildRunnerShapeConfigMemoryInGbs,
 *         ocpus: buildPipelineStageBuildRunnerShapeConfigOcpus,
 *     },
 *     buildSourceCollection: {
 *         items: [{
 *             connectionType: buildPipelineStageBuildSourceCollectionItemsConnectionType,
 *             branch: buildPipelineStageBuildSourceCollectionItemsBranch,
 *             connectionId: testConnection.id,
 *             name: buildPipelineStageBuildSourceCollectionItemsName,
 *             repositoryId: testRepository.id,
 *             repositoryUrl: buildPipelineStageBuildSourceCollectionItemsRepositoryUrl,
 *         }],
 *     },
 *     buildSpecFile: buildPipelineStageBuildSpecFile,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     deliverArtifactCollection: {
 *         items: [{
 *             artifactId: testArtifact.id,
 *             artifactName: buildPipelineStageDeliverArtifactCollectionItemsArtifactName,
 *         }],
 *     },
 *     deployPipelineId: testDeployPipeline.id,
 *     description: buildPipelineStageDescription,
 *     displayName: buildPipelineStageDisplayName,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     image: buildPipelineStageImage,
 *     isPassAllParametersEnabled: buildPipelineStageIsPassAllParametersEnabled,
 *     primaryBuildSource: buildPipelineStagePrimaryBuildSource,
 *     privateAccessConfig: {
 *         networkChannelType: buildPipelineStagePrivateAccessConfigNetworkChannelType,
 *         subnetId: testSubnet.id,
 *         nsgIds: buildPipelineStagePrivateAccessConfigNsgIds,
 *     },
 *     stageExecutionTimeoutInSeconds: buildPipelineStageStageExecutionTimeoutInSeconds,
 *     waitCriteria: {
 *         waitDuration: buildPipelineStageWaitCriteriaWaitDuration,
 *         waitType: buildPipelineStageWaitCriteriaWaitType,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * BuildPipelineStages can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DevOps/buildPipelineStage:BuildPipelineStage test_build_pipeline_stage "id"
 * ```
 */
export class BuildPipelineStage extends pulumi.CustomResource {
    /**
     * Get an existing BuildPipelineStage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BuildPipelineStageState, opts?: pulumi.CustomResourceOptions): BuildPipelineStage {
        return new BuildPipelineStage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DevOps/buildPipelineStage:BuildPipelineStage';

    /**
     * Returns true if the given object is an instance of BuildPipelineStage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BuildPipelineStage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BuildPipelineStage.__pulumiType;
    }

    /**
     * The OCID of the build pipeline.
     */
    declare public readonly buildPipelineId: pulumi.Output<string>;
    /**
     * (Updatable) The collection containing the predecessors of a stage.
     */
    declare public readonly buildPipelineStagePredecessorCollection: pulumi.Output<outputs.DevOps.BuildPipelineStageBuildPipelineStagePredecessorCollection>;
    /**
     * (Updatable) Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
     */
    declare public readonly buildPipelineStageType: pulumi.Output<string>;
    /**
     * (Updatable) The information about build runner.
     */
    declare public readonly buildRunnerShapeConfig: pulumi.Output<outputs.DevOps.BuildPipelineStageBuildRunnerShapeConfig>;
    /**
     * (Updatable) Collection of build sources.
     */
    declare public readonly buildSourceCollection: pulumi.Output<outputs.DevOps.BuildPipelineStageBuildSourceCollection>;
    /**
     * (Updatable) The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
     */
    declare public readonly buildSpecFile: pulumi.Output<string>;
    /**
     * The OCID of the compartment where the pipeline is created.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Specifies an array of artifacts that need to be pushed to the artifactory stores.
     */
    declare public readonly deliverArtifactCollection: pulumi.Output<outputs.DevOps.BuildPipelineStageDeliverArtifactCollection>;
    /**
     * (Updatable) A target deployment pipeline OCID that will run in this stage.
     */
    declare public readonly deployPipelineId: pulumi.Output<string>;
    /**
     * (Updatable) Optional description about the stage.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Image name for the build environment
     */
    declare public readonly image: pulumi.Output<string>;
    /**
     * (Updatable) A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
     */
    declare public readonly isPassAllParametersEnabled: pulumi.Output<boolean>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * (Updatable) Name of the build source where the build_spec.yml file is located. If not specified, the first entry in the build source collection is chosen as primary build source.
     */
    declare public readonly primaryBuildSource: pulumi.Output<string>;
    /**
     * (Updatable) Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer's private network.
     */
    declare public readonly privateAccessConfig: pulumi.Output<outputs.DevOps.BuildPipelineStagePrivateAccessConfig>;
    /**
     * The OCID of the DevOps project.
     */
    declare public /*out*/ readonly projectId: pulumi.Output<string>;
    /**
     * (Updatable) Timeout for the build stage execution. Specify value in seconds.
     */
    declare public readonly stageExecutionTimeoutInSeconds: pulumi.Output<number>;
    /**
     * The current state of the stage.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * (Updatable) Specifies wait criteria for the Wait stage.
     */
    declare public readonly waitCriteria: pulumi.Output<outputs.DevOps.BuildPipelineStageWaitCriteria>;

    /**
     * Create a BuildPipelineStage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BuildPipelineStageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BuildPipelineStageArgs | BuildPipelineStageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BuildPipelineStageState | undefined;
            resourceInputs["buildPipelineId"] = state?.buildPipelineId;
            resourceInputs["buildPipelineStagePredecessorCollection"] = state?.buildPipelineStagePredecessorCollection;
            resourceInputs["buildPipelineStageType"] = state?.buildPipelineStageType;
            resourceInputs["buildRunnerShapeConfig"] = state?.buildRunnerShapeConfig;
            resourceInputs["buildSourceCollection"] = state?.buildSourceCollection;
            resourceInputs["buildSpecFile"] = state?.buildSpecFile;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["deliverArtifactCollection"] = state?.deliverArtifactCollection;
            resourceInputs["deployPipelineId"] = state?.deployPipelineId;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["image"] = state?.image;
            resourceInputs["isPassAllParametersEnabled"] = state?.isPassAllParametersEnabled;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["primaryBuildSource"] = state?.primaryBuildSource;
            resourceInputs["privateAccessConfig"] = state?.privateAccessConfig;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["stageExecutionTimeoutInSeconds"] = state?.stageExecutionTimeoutInSeconds;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["waitCriteria"] = state?.waitCriteria;
        } else {
            const args = argsOrState as BuildPipelineStageArgs | undefined;
            if (args?.buildPipelineId === undefined && !opts.urn) {
                throw new Error("Missing required property 'buildPipelineId'");
            }
            if (args?.buildPipelineStagePredecessorCollection === undefined && !opts.urn) {
                throw new Error("Missing required property 'buildPipelineStagePredecessorCollection'");
            }
            if (args?.buildPipelineStageType === undefined && !opts.urn) {
                throw new Error("Missing required property 'buildPipelineStageType'");
            }
            resourceInputs["buildPipelineId"] = args?.buildPipelineId;
            resourceInputs["buildPipelineStagePredecessorCollection"] = args?.buildPipelineStagePredecessorCollection;
            resourceInputs["buildPipelineStageType"] = args?.buildPipelineStageType;
            resourceInputs["buildRunnerShapeConfig"] = args?.buildRunnerShapeConfig;
            resourceInputs["buildSourceCollection"] = args?.buildSourceCollection;
            resourceInputs["buildSpecFile"] = args?.buildSpecFile;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["deliverArtifactCollection"] = args?.deliverArtifactCollection;
            resourceInputs["deployPipelineId"] = args?.deployPipelineId;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["image"] = args?.image;
            resourceInputs["isPassAllParametersEnabled"] = args?.isPassAllParametersEnabled;
            resourceInputs["primaryBuildSource"] = args?.primaryBuildSource;
            resourceInputs["privateAccessConfig"] = args?.privateAccessConfig;
            resourceInputs["stageExecutionTimeoutInSeconds"] = args?.stageExecutionTimeoutInSeconds;
            resourceInputs["waitCriteria"] = args?.waitCriteria;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BuildPipelineStage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BuildPipelineStage resources.
 */
export interface BuildPipelineStageState {
    /**
     * The OCID of the build pipeline.
     */
    buildPipelineId?: pulumi.Input<string>;
    /**
     * (Updatable) The collection containing the predecessors of a stage.
     */
    buildPipelineStagePredecessorCollection?: pulumi.Input<inputs.DevOps.BuildPipelineStageBuildPipelineStagePredecessorCollection>;
    /**
     * (Updatable) Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
     */
    buildPipelineStageType?: pulumi.Input<string>;
    /**
     * (Updatable) The information about build runner.
     */
    buildRunnerShapeConfig?: pulumi.Input<inputs.DevOps.BuildPipelineStageBuildRunnerShapeConfig>;
    /**
     * (Updatable) Collection of build sources.
     */
    buildSourceCollection?: pulumi.Input<inputs.DevOps.BuildPipelineStageBuildSourceCollection>;
    /**
     * (Updatable) The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
     */
    buildSpecFile?: pulumi.Input<string>;
    /**
     * The OCID of the compartment where the pipeline is created.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Specifies an array of artifacts that need to be pushed to the artifactory stores.
     */
    deliverArtifactCollection?: pulumi.Input<inputs.DevOps.BuildPipelineStageDeliverArtifactCollection>;
    /**
     * (Updatable) A target deployment pipeline OCID that will run in this stage.
     */
    deployPipelineId?: pulumi.Input<string>;
    /**
     * (Updatable) Optional description about the stage.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Image name for the build environment
     */
    image?: pulumi.Input<string>;
    /**
     * (Updatable) A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
     */
    isPassAllParametersEnabled?: pulumi.Input<boolean>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Name of the build source where the build_spec.yml file is located. If not specified, the first entry in the build source collection is chosen as primary build source.
     */
    primaryBuildSource?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer's private network.
     */
    privateAccessConfig?: pulumi.Input<inputs.DevOps.BuildPipelineStagePrivateAccessConfig>;
    /**
     * The OCID of the DevOps project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * (Updatable) Timeout for the build stage execution. Specify value in seconds.
     */
    stageExecutionTimeoutInSeconds?: pulumi.Input<number>;
    /**
     * The current state of the stage.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies wait criteria for the Wait stage.
     */
    waitCriteria?: pulumi.Input<inputs.DevOps.BuildPipelineStageWaitCriteria>;
}

/**
 * The set of arguments for constructing a BuildPipelineStage resource.
 */
export interface BuildPipelineStageArgs {
    /**
     * The OCID of the build pipeline.
     */
    buildPipelineId: pulumi.Input<string>;
    /**
     * (Updatable) The collection containing the predecessors of a stage.
     */
    buildPipelineStagePredecessorCollection: pulumi.Input<inputs.DevOps.BuildPipelineStageBuildPipelineStagePredecessorCollection>;
    /**
     * (Updatable) Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
     */
    buildPipelineStageType: pulumi.Input<string>;
    /**
     * (Updatable) The information about build runner.
     */
    buildRunnerShapeConfig?: pulumi.Input<inputs.DevOps.BuildPipelineStageBuildRunnerShapeConfig>;
    /**
     * (Updatable) Collection of build sources.
     */
    buildSourceCollection?: pulumi.Input<inputs.DevOps.BuildPipelineStageBuildSourceCollection>;
    /**
     * (Updatable) The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
     */
    buildSpecFile?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Specifies an array of artifacts that need to be pushed to the artifactory stores.
     */
    deliverArtifactCollection?: pulumi.Input<inputs.DevOps.BuildPipelineStageDeliverArtifactCollection>;
    /**
     * (Updatable) A target deployment pipeline OCID that will run in this stage.
     */
    deployPipelineId?: pulumi.Input<string>;
    /**
     * (Updatable) Optional description about the stage.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Image name for the build environment
     */
    image?: pulumi.Input<string>;
    /**
     * (Updatable) A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
     */
    isPassAllParametersEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Name of the build source where the build_spec.yml file is located. If not specified, the first entry in the build source collection is chosen as primary build source.
     */
    primaryBuildSource?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer's private network.
     */
    privateAccessConfig?: pulumi.Input<inputs.DevOps.BuildPipelineStagePrivateAccessConfig>;
    /**
     * (Updatable) Timeout for the build stage execution. Specify value in seconds.
     */
    stageExecutionTimeoutInSeconds?: pulumi.Input<number>;
    /**
     * (Updatable) Specifies wait criteria for the Wait stage.
     */
    waitCriteria?: pulumi.Input<inputs.DevOps.BuildPipelineStageWaitCriteria>;
}
