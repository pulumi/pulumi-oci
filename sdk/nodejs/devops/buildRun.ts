// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Build Run resource in Oracle Cloud Infrastructure Devops service.
 *
 * Starts a build pipeline run for a predefined build pipeline. Please ensure the completion of any work request for creation/updation of Build Pipeline before starting a Build Run.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBuildRun = new oci.devops.BuildRun("test_build_run", {
 *     buildPipelineId: testBuildPipeline.id,
 *     buildRunArguments: {
 *         items: [{
 *             name: buildRunBuildRunArgumentsItemsName,
 *             value: buildRunBuildRunArgumentsItemsValue,
 *         }],
 *     },
 *     commitInfo: {
 *         commitHash: buildRunCommitInfoCommitHash,
 *         repositoryBranch: buildRunCommitInfoRepositoryBranch,
 *         repositoryUrl: buildRunCommitInfoRepositoryUrl,
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     displayName: buildRunDisplayName,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * BuildRuns can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DevOps/buildRun:BuildRun test_build_run "id"
 * ```
 */
export class BuildRun extends pulumi.CustomResource {
    /**
     * Get an existing BuildRun resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BuildRunState, opts?: pulumi.CustomResourceOptions): BuildRun {
        return new BuildRun(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DevOps/buildRun:BuildRun';

    /**
     * Returns true if the given object is an instance of BuildRun.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BuildRun {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BuildRun.__pulumiType;
    }

    /**
     * Outputs from the build.
     */
    declare public /*out*/ readonly buildOutputs: pulumi.Output<outputs.DevOps.BuildRunBuildOutput[]>;
    /**
     * The OCID of the build pipeline.
     */
    declare public readonly buildPipelineId: pulumi.Output<string>;
    /**
     * Specifies list of arguments passed along with the build run.
     */
    declare public readonly buildRunArguments: pulumi.Output<outputs.DevOps.BuildRunBuildRunArguments>;
    /**
     * The run progress details of a build run.
     */
    declare public /*out*/ readonly buildRunProgresses: pulumi.Output<outputs.DevOps.BuildRunBuildRunProgress[]>;
    /**
     * The source from which the build run is triggered.
     */
    declare public /*out*/ readonly buildRunSources: pulumi.Output<outputs.DevOps.BuildRunBuildRunSource[]>;
    /**
     * Commit details that need to be used for the build run.
     */
    declare public readonly commitInfo: pulumi.Output<outputs.DevOps.BuildRunCommitInfo>;
    /**
     * The OCID of the compartment where the build is running.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The OCID of the DevOps project.
     */
    declare public /*out*/ readonly projectId: pulumi.Output<string>;
    /**
     * The current state of the build run.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a BuildRun resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BuildRunArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BuildRunArgs | BuildRunState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BuildRunState | undefined;
            resourceInputs["buildOutputs"] = state?.buildOutputs;
            resourceInputs["buildPipelineId"] = state?.buildPipelineId;
            resourceInputs["buildRunArguments"] = state?.buildRunArguments;
            resourceInputs["buildRunProgresses"] = state?.buildRunProgresses;
            resourceInputs["buildRunSources"] = state?.buildRunSources;
            resourceInputs["commitInfo"] = state?.commitInfo;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as BuildRunArgs | undefined;
            if (args?.buildPipelineId === undefined && !opts.urn) {
                throw new Error("Missing required property 'buildPipelineId'");
            }
            resourceInputs["buildPipelineId"] = args?.buildPipelineId;
            resourceInputs["buildRunArguments"] = args?.buildRunArguments;
            resourceInputs["commitInfo"] = args?.commitInfo;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["buildOutputs"] = undefined /*out*/;
            resourceInputs["buildRunProgresses"] = undefined /*out*/;
            resourceInputs["buildRunSources"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BuildRun.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BuildRun resources.
 */
export interface BuildRunState {
    /**
     * Outputs from the build.
     */
    buildOutputs?: pulumi.Input<pulumi.Input<inputs.DevOps.BuildRunBuildOutput>[]>;
    /**
     * The OCID of the build pipeline.
     */
    buildPipelineId?: pulumi.Input<string>;
    /**
     * Specifies list of arguments passed along with the build run.
     */
    buildRunArguments?: pulumi.Input<inputs.DevOps.BuildRunBuildRunArguments>;
    /**
     * The run progress details of a build run.
     */
    buildRunProgresses?: pulumi.Input<pulumi.Input<inputs.DevOps.BuildRunBuildRunProgress>[]>;
    /**
     * The source from which the build run is triggered.
     */
    buildRunSources?: pulumi.Input<pulumi.Input<inputs.DevOps.BuildRunBuildRunSource>[]>;
    /**
     * Commit details that need to be used for the build run.
     */
    commitInfo?: pulumi.Input<inputs.DevOps.BuildRunCommitInfo>;
    /**
     * The OCID of the compartment where the build is running.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The OCID of the DevOps project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The current state of the build run.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BuildRun resource.
 */
export interface BuildRunArgs {
    /**
     * The OCID of the build pipeline.
     */
    buildPipelineId: pulumi.Input<string>;
    /**
     * Specifies list of arguments passed along with the build run.
     */
    buildRunArguments?: pulumi.Input<inputs.DevOps.BuildRunBuildRunArguments>;
    /**
     * Commit details that need to be used for the build run.
     */
    commitInfo?: pulumi.Input<inputs.DevOps.BuildRunCommitInfo>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
