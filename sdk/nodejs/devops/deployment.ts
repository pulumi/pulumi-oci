// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Deployment resource in Oracle Cloud Infrastructure Devops service.
 *
 * Creates a new deployment.
 *
 * ## Import
 *
 * Deployments can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DevOps/deployment:Deployment test_deployment "id"
 * ```
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeploymentState, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DevOps/deployment:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * The OCID of a compartment.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Specifies the list of artifact override arguments at the time of deployment.
     */
    declare public readonly deployArtifactOverrideArguments: pulumi.Output<outputs.DevOps.DeploymentDeployArtifactOverrideArguments>;
    /**
     * List of all artifacts used in the pipeline.
     */
    declare public /*out*/ readonly deployPipelineArtifacts: pulumi.Output<outputs.DevOps.DeploymentDeployPipelineArtifact[]>;
    /**
     * List of all environments used in the pipeline.
     */
    declare public /*out*/ readonly deployPipelineEnvironments: pulumi.Output<outputs.DevOps.DeploymentDeployPipelineEnvironment[]>;
    /**
     * The OCID of a pipeline.
     */
    declare public readonly deployPipelineId: pulumi.Output<string>;
    /**
     * Specifies the OCID of the stage to be redeployed.
     */
    declare public readonly deployStageId: pulumi.Output<string>;
    /**
     * Specifies the list of arguments to be overriden per Stage at the time of deployment.
     */
    declare public readonly deployStageOverrideArguments: pulumi.Output<outputs.DevOps.DeploymentDeployStageOverrideArguments>;
    /**
     * Specifies list of arguments passed along with the deployment.
     */
    declare public readonly deploymentArguments: pulumi.Output<outputs.DevOps.DeploymentDeploymentArguments>;
    /**
     * The execution progress details of a deployment.
     */
    declare public /*out*/ readonly deploymentExecutionProgresses: pulumi.Output<outputs.DevOps.DeploymentDeploymentExecutionProgress[]>;
    /**
     * (Updatable) Specifies type for this deployment.
     */
    declare public readonly deploymentType: pulumi.Output<string>;
    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * Specifies the OCID of the previous deployment to be redeployed.
     */
    declare public readonly previousDeploymentId: pulumi.Output<string>;
    /**
     * The OCID of a project.
     */
    declare public /*out*/ readonly projectId: pulumi.Output<string>;
    /**
     * The current state of the deployment.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * A boolean specifying if a new deployment should be created on every apply. As long as this value is set to true in the config, every apply will trigger a new deployment to be created. The existing deployment resource will be replaced with the new one in the state file (deployment resources are never deleted, they persist as a store of records, but your state file will only track the latest one created with this resource block). 
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values. Additionally, while `triggerNewDevopsDeployment`
     * is set true each apply will force the destruction and recreation of the resource with the new property values.
     */
    declare public readonly triggerNewDevopsDeployment: pulumi.Output<boolean | undefined>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeploymentArgs | DeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeploymentState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["deployArtifactOverrideArguments"] = state?.deployArtifactOverrideArguments;
            resourceInputs["deployPipelineArtifacts"] = state?.deployPipelineArtifacts;
            resourceInputs["deployPipelineEnvironments"] = state?.deployPipelineEnvironments;
            resourceInputs["deployPipelineId"] = state?.deployPipelineId;
            resourceInputs["deployStageId"] = state?.deployStageId;
            resourceInputs["deployStageOverrideArguments"] = state?.deployStageOverrideArguments;
            resourceInputs["deploymentArguments"] = state?.deploymentArguments;
            resourceInputs["deploymentExecutionProgresses"] = state?.deploymentExecutionProgresses;
            resourceInputs["deploymentType"] = state?.deploymentType;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["previousDeploymentId"] = state?.previousDeploymentId;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["triggerNewDevopsDeployment"] = state?.triggerNewDevopsDeployment;
        } else {
            const args = argsOrState as DeploymentArgs | undefined;
            if (args?.deployPipelineId === undefined && !opts.urn) {
                throw new Error("Missing required property 'deployPipelineId'");
            }
            if (args?.deploymentType === undefined && !opts.urn) {
                throw new Error("Missing required property 'deploymentType'");
            }
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["deployArtifactOverrideArguments"] = args?.deployArtifactOverrideArguments;
            resourceInputs["deployPipelineId"] = args?.deployPipelineId;
            resourceInputs["deployStageId"] = args?.deployStageId;
            resourceInputs["deployStageOverrideArguments"] = args?.deployStageOverrideArguments;
            resourceInputs["deploymentArguments"] = args?.deploymentArguments;
            resourceInputs["deploymentType"] = args?.deploymentType;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["previousDeploymentId"] = args?.previousDeploymentId;
            resourceInputs["triggerNewDevopsDeployment"] = args?.triggerNewDevopsDeployment;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["deployPipelineArtifacts"] = undefined /*out*/;
            resourceInputs["deployPipelineEnvironments"] = undefined /*out*/;
            resourceInputs["deploymentExecutionProgresses"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Deployment resources.
 */
export interface DeploymentState {
    /**
     * The OCID of a compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the list of artifact override arguments at the time of deployment.
     */
    deployArtifactOverrideArguments?: pulumi.Input<inputs.DevOps.DeploymentDeployArtifactOverrideArguments>;
    /**
     * List of all artifacts used in the pipeline.
     */
    deployPipelineArtifacts?: pulumi.Input<pulumi.Input<inputs.DevOps.DeploymentDeployPipelineArtifact>[]>;
    /**
     * List of all environments used in the pipeline.
     */
    deployPipelineEnvironments?: pulumi.Input<pulumi.Input<inputs.DevOps.DeploymentDeployPipelineEnvironment>[]>;
    /**
     * The OCID of a pipeline.
     */
    deployPipelineId?: pulumi.Input<string>;
    /**
     * Specifies the OCID of the stage to be redeployed.
     */
    deployStageId?: pulumi.Input<string>;
    /**
     * Specifies the list of arguments to be overriden per Stage at the time of deployment.
     */
    deployStageOverrideArguments?: pulumi.Input<inputs.DevOps.DeploymentDeployStageOverrideArguments>;
    /**
     * Specifies list of arguments passed along with the deployment.
     */
    deploymentArguments?: pulumi.Input<inputs.DevOps.DeploymentDeploymentArguments>;
    /**
     * The execution progress details of a deployment.
     */
    deploymentExecutionProgresses?: pulumi.Input<pulumi.Input<inputs.DevOps.DeploymentDeploymentExecutionProgress>[]>;
    /**
     * (Updatable) Specifies type for this deployment.
     */
    deploymentType?: pulumi.Input<string>;
    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Specifies the OCID of the previous deployment to be redeployed.
     */
    previousDeploymentId?: pulumi.Input<string>;
    /**
     * The OCID of a project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The current state of the deployment.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * A boolean specifying if a new deployment should be created on every apply. As long as this value is set to true in the config, every apply will trigger a new deployment to be created. The existing deployment resource will be replaced with the new one in the state file (deployment resources are never deleted, they persist as a store of records, but your state file will only track the latest one created with this resource block). 
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values. Additionally, while `triggerNewDevopsDeployment`
     * is set true each apply will force the destruction and recreation of the resource with the new property values.
     */
    triggerNewDevopsDeployment?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the list of artifact override arguments at the time of deployment.
     */
    deployArtifactOverrideArguments?: pulumi.Input<inputs.DevOps.DeploymentDeployArtifactOverrideArguments>;
    /**
     * The OCID of a pipeline.
     */
    deployPipelineId: pulumi.Input<string>;
    /**
     * Specifies the OCID of the stage to be redeployed.
     */
    deployStageId?: pulumi.Input<string>;
    /**
     * Specifies the list of arguments to be overriden per Stage at the time of deployment.
     */
    deployStageOverrideArguments?: pulumi.Input<inputs.DevOps.DeploymentDeployStageOverrideArguments>;
    /**
     * Specifies list of arguments passed along with the deployment.
     */
    deploymentArguments?: pulumi.Input<inputs.DevOps.DeploymentDeploymentArguments>;
    /**
     * (Updatable) Specifies type for this deployment.
     */
    deploymentType: pulumi.Input<string>;
    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the OCID of the previous deployment to be redeployed.
     */
    previousDeploymentId?: pulumi.Input<string>;
    /**
     * A boolean specifying if a new deployment should be created on every apply. As long as this value is set to true in the config, every apply will trigger a new deployment to be created. The existing deployment resource will be replaced with the new one in the state file (deployment resources are never deleted, they persist as a store of records, but your state file will only track the latest one created with this resource block). 
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values. Additionally, while `triggerNewDevopsDeployment`
     * is set true each apply will force the destruction and recreation of the resource with the new property values.
     */
    triggerNewDevopsDeployment?: pulumi.Input<boolean>;
}
