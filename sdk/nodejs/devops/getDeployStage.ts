// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Deploy Stage resource in Oracle Cloud Infrastructure Devops service.
 *
 * Retrieves a deployment stage by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDeployStage = oci.DevOps.getDeployStage({
 *     deployStageId: oci_devops_deploy_stage.test_deploy_stage.id,
 * });
 * ```
 */
export function getDeployStage(args: GetDeployStageArgs, opts?: pulumi.InvokeOptions): Promise<GetDeployStageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DevOps/getDeployStage:getDeployStage", {
        "deployStageId": args.deployStageId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDeployStage.
 */
export interface GetDeployStageArgs {
    /**
     * Unique stage identifier.
     */
    deployStageId: string;
}

/**
 * A collection of values returned by getDeployStage.
 */
export interface GetDeployStageResult {
    /**
     * Specifies the approval policy.
     */
    readonly approvalPolicies?: outputs.DevOps.GetDeployStageApprovalPolicy[];
    /**
     * Disable pre/post upgrade hooks. Set to false by default.
     */
    readonly areHooksEnabled?: boolean;
    /**
     * Collection of backend environment IP addresses.
     */
    readonly blueBackendIps?: outputs.DevOps.GetDeployStageBlueBackendIp[];
    /**
     * Specifies the required blue green release strategy for OKE deployment.
     */
    readonly blueGreenStrategies?: outputs.DevOps.GetDeployStageBlueGreenStrategy[];
    /**
     * Specifies the required canary release strategy for OKE deployment.
     */
    readonly canaryStrategies?: outputs.DevOps.GetDeployStageCanaryStrategy[];
    /**
     * The OCID of the artifact that contains the command specification.
     */
    readonly commandSpecDeployArtifactId?: string;
    /**
     * The OCID of the compartment where the ContainerInstance will be created.
     */
    readonly compartmentId?: string;
    /**
     * The OCID of the upstream compute instance group blue-green deployment stage in this pipeline.
     */
    readonly computeInstanceGroupBlueGreenDeploymentDeployStageId?: string;
    /**
     * The OCID of an upstream compute instance group canary deployment stage ID in this pipeline.
     */
    readonly computeInstanceGroupCanaryDeployStageId?: string;
    /**
     * A compute instance group canary traffic shift stage OCID for load balancer.
     */
    readonly computeInstanceGroupCanaryTrafficShiftDeployStageId?: string;
    /**
     * A compute instance group environment OCID for rolling deployment.
     */
    readonly computeInstanceGroupDeployEnvironmentId?: string;
    /**
     * User provided key and value pair configuration, which is assigned through constants or parameter.
     */
    readonly config?: {[key: string]: any};
    /**
     * Specifies the container configuration.
     */
    readonly containerConfigs?: outputs.DevOps.GetDeployStageContainerConfig[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags?: {[key: string]: any};
    /**
     * Optional artifact OCID. The artifact will be included in the body for the function invocation during the stage's execution. If the DeployArtifact.argumentSubstituitionMode is set to SUBSTITUTE_PLACEHOLDERS, then the pipeline parameter values will be used to replace the placeholders in the artifact content.
     */
    readonly deployArtifactId?: string;
    /**
     * The list of file artifact OCIDs to deploy.
     */
    readonly deployArtifactIds?: string[];
    /**
     * First compute instance group environment OCID for deployment.
     */
    readonly deployEnvironmentIdA?: string;
    /**
     * Second compute instance group environment OCID for deployment.
     */
    readonly deployEnvironmentIdB?: string;
    /**
     * The OCID of a pipeline.
     */
    readonly deployPipelineId?: string;
    readonly deployStageId: string;
    /**
     * Collection containing the predecessors of a stage.
     */
    readonly deployStagePredecessorCollections?: outputs.DevOps.GetDeployStageDeployStagePredecessorCollection[];
    /**
     * Deployment stage type.
     */
    readonly deployStageType?: string;
    /**
     * The OCID of the artifact that contains the deployment specification.
     */
    readonly deploymentSpecDeployArtifactId?: string;
    /**
     * Optional description about the deployment stage.
     */
    readonly description?: string;
    /**
     * Deployment stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     */
    readonly displayName?: string;
    /**
     * A Docker image artifact OCID.
     */
    readonly dockerImageDeployArtifactId?: string;
    /**
     * Specifies a failure policy for a compute instance group rolling deployment stage.
     */
    readonly failurePolicies?: outputs.DevOps.GetDeployStageFailurePolicy[];
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    readonly freeformTags?: {[key: string]: any};
    /**
     * Function environment OCID.
     */
    readonly functionDeployEnvironmentId?: string;
    /**
     * Timeout for execution of the Function. Value in seconds.
     */
    readonly functionTimeoutInSeconds?: number;
    /**
     * Collection of backend environment IP addresses.
     */
    readonly greenBackendIps?: outputs.DevOps.GetDeployStageGreenBackendIp[];
    /**
     * Helm chart artifact OCID.
     */
    readonly helmChartDeployArtifactId?: string;
    /**
     * Unique identifier that is immutable on creation.
     */
    readonly id?: string;
    /**
     * A boolean flag specifies whether this stage executes asynchronously.
     */
    readonly isAsync?: boolean;
    /**
     * Enables helm --debug option to stream output to tf stdout. Set to false by default.
     */
    readonly isDebugEnabled?: boolean;
    /**
     * Force resource update through delete; or if required, recreate. Set to false by default.
     */
    readonly isForceEnabled?: boolean;
    /**
     * A boolean flag specifies whether the invoked function must be validated.
     */
    readonly isValidationEnabled?: boolean;
    /**
     * List of Kubernetes manifest artifact OCIDs.
     */
    readonly kubernetesManifestDeployArtifactIds?: string[];
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails?: string;
    /**
     * Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
     */
    readonly loadBalancerConfigs?: outputs.DevOps.GetDeployStageLoadBalancerConfig[];
    /**
     * Limit the maximum number of revisions saved per release. Use 0 for no limit. Set to 10 by default
     */
    readonly maxHistory?: number;
    /**
     * Maximum usable memory for the Function (in MB).
     */
    readonly maxMemoryInMbs?: string;
    /**
     * Default Namespace to be used for Kubernetes deployment when not specified in the manifest.
     */
    readonly namespace?: string;
    /**
     * The OCID of the upstream OKE blue-green deployment stage in this pipeline.
     */
    readonly okeBlueGreenDeployStageId?: string;
    /**
     * The OCID of an upstream OKE canary deployment stage in this pipeline.
     */
    readonly okeCanaryDeployStageId?: string;
    /**
     * The OCID of an upstream OKE canary deployment traffic shift stage in this pipeline.
     */
    readonly okeCanaryTrafficShiftDeployStageId?: string;
    /**
     * Kubernetes cluster environment OCID for deployment.
     */
    readonly okeClusterDeployEnvironmentId?: string;
    /**
     * Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
     */
    readonly productionLoadBalancerConfigs?: outputs.DevOps.GetDeployStageProductionLoadBalancerConfig[];
    /**
     * The OCID of a project.
     */
    readonly projectId?: string;
    /**
     * Release name of the Helm chart.
     */
    readonly releaseName?: string;
    /**
     * Specifies the rollback policy. This is initiated on the failure of certain stage types.
     */
    readonly rollbackPolicies?: outputs.DevOps.GetDeployStageRollbackPolicy[];
    /**
     * Description of rollout policy for load balancer traffic shift stage.
     */
    readonly rolloutPolicies?: outputs.DevOps.GetDeployStageRolloutPolicy[];
    /**
     * Specifies the name and value pairs to set helm values.
     */
    readonly setStrings?: outputs.DevOps.GetDeployStageSetString[];
    /**
     * Specifies the name and value pairs to set helm values.
     */
    readonly setValues?: outputs.DevOps.GetDeployStageSetValue[];
    /**
     * Allow deletion of new resources created during when an upgrade fails. Set to false by default.
     */
    readonly shouldCleanupOnFail?: boolean;
    /**
     * Waits until all the resources are in a ready state to mark the release as successful. Set to false by default.
     */
    readonly shouldNotWait?: boolean;
    /**
     * During upgrade, reset the values to the ones built into the chart. It overrides shouldReuseValues. Set to false by default.
     */
    readonly shouldResetValues?: boolean;
    /**
     * During upgrade, reuse the values of the last release and merge overrides from the command line. Set to false by default.
     */
    readonly shouldReuseValues?: boolean;
    /**
     * If set, no CRDs are installed. By default, CRDs are installed only if they are not present already. Set to false by default.
     */
    readonly shouldSkipCrds?: boolean;
    /**
     * If set, renders subchart notes along with the parent. Set to false by default.
     */
    readonly shouldSkipRenderSubchartNotes?: boolean;
    /**
     * The current state of the deployment stage.
     */
    readonly state?: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags?: {[key: string]: any};
    /**
     * Specifies config for load balancer traffic shift stages. The Load Balancer specified here should be an Application Load Balancer type. Network Load Balancers are not supported.
     */
    readonly testLoadBalancerConfigs?: outputs.DevOps.GetDeployStageTestLoadBalancerConfig[];
    /**
     * Time the deployment stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    readonly timeCreated?: string;
    /**
     * Time the deployment stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    readonly timeUpdated?: string;
    /**
     * Time to wait for execution of a Shell/Helm stage. Defaults to 36000 seconds for Shell and 300 seconds for Helm Stage
     */
    readonly timeoutInSeconds?: number;
    /**
     * Specifies the target or destination backend set.
     */
    readonly trafficShiftTarget?: string;
    /**
     * List of values.yaml file artifact OCIDs.
     */
    readonly valuesArtifactIds?: string[];
    /**
     * Specifies wait criteria for the Wait stage.
     */
    readonly waitCriterias?: outputs.DevOps.GetDeployStageWaitCriteria[];
}
/**
 * This data source provides details about a specific Deploy Stage resource in Oracle Cloud Infrastructure Devops service.
 *
 * Retrieves a deployment stage by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDeployStage = oci.DevOps.getDeployStage({
 *     deployStageId: oci_devops_deploy_stage.test_deploy_stage.id,
 * });
 * ```
 */
export function getDeployStageOutput(args: GetDeployStageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeployStageResult> {
    return pulumi.output(args).apply((a: any) => getDeployStage(a, opts))
}

/**
 * A collection of arguments for invoking getDeployStage.
 */
export interface GetDeployStageOutputArgs {
    /**
     * Unique stage identifier.
     */
    deployStageId: pulumi.Input<string>;
}
