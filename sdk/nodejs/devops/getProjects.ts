// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Projects in Oracle Cloud Infrastructure Devops service.
 *
 * Returns a list of projects.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProjects = oci.DevOps.getProjects({
 *     compartmentId: _var.compartment_id,
 *     id: _var.project_id,
 *     name: _var.project_name,
 *     state: _var.project_state,
 * });
 * ```
 */
export function getProjects(args: GetProjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DevOps/getProjects:getProjects", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getProjects.
 */
export interface GetProjectsArgs {
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId: string;
    filters?: inputs.DevOps.GetProjectsFilter[];
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id?: string;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name?: string;
    /**
     * A filter to return only Projects that matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getProjects.
 */
export interface GetProjectsResult {
    /**
     * The OCID of the compartment where the project is created.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.DevOps.GetProjectsFilter[];
    /**
     * Unique identifier that is immutable on creation.
     */
    readonly id?: string;
    /**
     * Project name (case-sensitive).
     */
    readonly name?: string;
    /**
     * The list of project_collection.
     */
    readonly projectCollections?: outputs.DevOps.GetProjectsProjectCollection[];
    /**
     * The current state of the project.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Projects in Oracle Cloud Infrastructure Devops service.
 *
 * Returns a list of projects.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProjects = oci.DevOps.getProjects({
 *     compartmentId: _var.compartment_id,
 *     id: _var.project_id,
 *     name: _var.project_name,
 *     state: _var.project_state,
 * });
 * ```
 */
export function getProjectsOutput(args: GetProjectsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectsResult> {
    return pulumi.output(args).apply((a: any) => getProjects(a, opts))
}

/**
 * A collection of arguments for invoking getProjects.
 */
export interface GetProjectsOutputArgs {
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DevOps.GetProjectsFilterArgs>[]>;
    /**
     * Unique identifier or OCID for listing a single resource by ID.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire name given.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only Projects that matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
