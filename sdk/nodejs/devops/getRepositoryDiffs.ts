// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Repository Diffs in Oracle Cloud Infrastructure Devops service.
 *
 * Compares two revisions and lists the differences. Supports comparison between two references or commits.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRepositoryDiffs = oci.DevOps.getRepositoryDiffs({
 *     baseVersion: _var.repository_diff_base_version,
 *     repositoryId: oci_devops_repository.test_repository.id,
 *     targetVersion: _var.repository_diff_target_version,
 *     isComparisonFromMergeBase: _var.repository_diff_is_comparison_from_merge_base,
 * });
 * ```
 */
export function getRepositoryDiffs(args: GetRepositoryDiffsArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryDiffsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:DevOps/getRepositoryDiffs:getRepositoryDiffs", {
        "baseVersion": args.baseVersion,
        "filters": args.filters,
        "isComparisonFromMergeBase": args.isComparisonFromMergeBase,
        "repositoryId": args.repositoryId,
        "targetVersion": args.targetVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositoryDiffs.
 */
export interface GetRepositoryDiffsArgs {
    /**
     * The commit or reference name to compare changes against.
     */
    baseVersion: string;
    filters?: inputs.DevOps.GetRepositoryDiffsFilter[];
    /**
     * Boolean value to indicate whether to use merge base or most recent revision.
     */
    isComparisonFromMergeBase?: boolean;
    /**
     * Unique repository identifier.
     */
    repositoryId: string;
    /**
     * The commit or reference name where changes are coming from.
     */
    targetVersion: string;
}

/**
 * A collection of values returned by getRepositoryDiffs.
 */
export interface GetRepositoryDiffsResult {
    readonly baseVersion: string;
    /**
     * The list of diff_collection.
     */
    readonly diffCollections: outputs.DevOps.GetRepositoryDiffsDiffCollection[];
    readonly filters?: outputs.DevOps.GetRepositoryDiffsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isComparisonFromMergeBase?: boolean;
    readonly repositoryId: string;
    readonly targetVersion: string;
}

export function getRepositoryDiffsOutput(args: GetRepositoryDiffsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRepositoryDiffsResult> {
    return pulumi.output(args).apply(a => getRepositoryDiffs(a, opts))
}

/**
 * A collection of arguments for invoking getRepositoryDiffs.
 */
export interface GetRepositoryDiffsOutputArgs {
    /**
     * The commit or reference name to compare changes against.
     */
    baseVersion: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DevOps.GetRepositoryDiffsFilterArgs>[]>;
    /**
     * Boolean value to indicate whether to use merge base or most recent revision.
     */
    isComparisonFromMergeBase?: pulumi.Input<boolean>;
    /**
     * Unique repository identifier.
     */
    repositoryId: pulumi.Input<string>;
    /**
     * The commit or reference name where changes are coming from.
     */
    targetVersion: pulumi.Input<string>;
}
