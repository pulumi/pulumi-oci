// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Repository Object resource in Oracle Cloud Infrastructure Devops service.
 *
 * Retrieves blob of specific branch name/commit ID and file path.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRepositoryObject = oci.DevOps.getRepositoryObject({
 *     repositoryId: testRepository.id,
 *     filePath: repositoryObjectFilePath,
 *     refName: repositoryObjectRefName,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRepositoryObject(args: GetRepositoryObjectArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryObjectResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DevOps/getRepositoryObject:getRepositoryObject", {
        "filePath": args.filePath,
        "refName": args.refName,
        "repositoryId": args.repositoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositoryObject.
 */
export interface GetRepositoryObjectArgs {
    /**
     * A filter to return only commits that affect any of the specified paths.
     */
    filePath?: string;
    /**
     * A filter to return only resources that match the given reference name.
     */
    refName?: string;
    /**
     * Unique repository identifier.
     */
    repositoryId: string;
}

/**
 * A collection of values returned by getRepositoryObject.
 */
export interface GetRepositoryObjectResult {
    readonly filePath?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Flag to determine if the object contains binary file content or not.
     */
    readonly isBinary: boolean;
    readonly refName?: string;
    readonly repositoryId: string;
    /**
     * SHA-1 hash of git object.
     */
    readonly sha: string;
    /**
     * Size in bytes.
     */
    readonly sizeInBytes: string;
    /**
     * The type of git object.
     */
    readonly type: string;
}
/**
 * This data source provides details about a specific Repository Object resource in Oracle Cloud Infrastructure Devops service.
 *
 * Retrieves blob of specific branch name/commit ID and file path.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRepositoryObject = oci.DevOps.getRepositoryObject({
 *     repositoryId: testRepository.id,
 *     filePath: repositoryObjectFilePath,
 *     refName: repositoryObjectRefName,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getRepositoryObjectOutput(args: GetRepositoryObjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRepositoryObjectResult> {
    return pulumi.output(args).apply((a: any) => getRepositoryObject(a, opts))
}

/**
 * A collection of arguments for invoking getRepositoryObject.
 */
export interface GetRepositoryObjectOutputArgs {
    /**
     * A filter to return only commits that affect any of the specified paths.
     */
    filePath?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given reference name.
     */
    refName?: pulumi.Input<string>;
    /**
     * Unique repository identifier.
     */
    repositoryId: pulumi.Input<string>;
}
