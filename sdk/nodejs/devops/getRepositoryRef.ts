// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Repository Ref resource in Oracle Cloud Infrastructure Devops service.
 *
 * This API will be deprecated on Wed, 12 June 2024 01:00:00 GMT as it does not get recognized when refName has '/'. This will be replaced by "/repositories/{repositoryId}/refs". Retrieves a repository's reference by its name with preference for branches over tags if the name is ambiguous. This can be disambiguated by using full names like "heads/<name>" or "tags/<name>".
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRepositoryRef = oci.DevOps.getRepositoryRef({
 *     refName: repositoryRefRefName,
 *     repositoryId: testRepository.id,
 * });
 * ```
 */
export function getRepositoryRef(args: GetRepositoryRefArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryRefResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DevOps/getRepositoryRef:getRepositoryRef", {
        "refName": args.refName,
        "repositoryId": args.repositoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositoryRef.
 */
export interface GetRepositoryRefArgs {
    /**
     * A filter to return only resources that match the given reference name.
     */
    refName: string;
    /**
     * Unique repository identifier.
     */
    repositoryId: string;
}

/**
 * A collection of values returned by getRepositoryRef.
 */
export interface GetRepositoryRefResult {
    /**
     * Commit ID pointed to by the new branch.
     */
    readonly commitId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * Unique full reference name inside a repository.
     */
    readonly fullRefName: string;
    readonly id: string;
    /**
     * SHA-1 hash value of the object pointed to by the tag.
     */
    readonly objectId: string;
    /**
     * Unique reference name inside a repository.
     */
    readonly refName: string;
    /**
     * The type of reference (BRANCH or TAG).
     */
    readonly refType: string;
    /**
     * The OCID of the repository containing the reference.
     */
    readonly repositoryId: string;
}
/**
 * This data source provides details about a specific Repository Ref resource in Oracle Cloud Infrastructure Devops service.
 *
 * This API will be deprecated on Wed, 12 June 2024 01:00:00 GMT as it does not get recognized when refName has '/'. This will be replaced by "/repositories/{repositoryId}/refs". Retrieves a repository's reference by its name with preference for branches over tags if the name is ambiguous. This can be disambiguated by using full names like "heads/<name>" or "tags/<name>".
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRepositoryRef = oci.DevOps.getRepositoryRef({
 *     refName: repositoryRefRefName,
 *     repositoryId: testRepository.id,
 * });
 * ```
 */
export function getRepositoryRefOutput(args: GetRepositoryRefOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRepositoryRefResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DevOps/getRepositoryRef:getRepositoryRef", {
        "refName": args.refName,
        "repositoryId": args.repositoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositoryRef.
 */
export interface GetRepositoryRefOutputArgs {
    /**
     * A filter to return only resources that match the given reference name.
     */
    refName: pulumi.Input<string>;
    /**
     * Unique repository identifier.
     */
    repositoryId: pulumi.Input<string>;
}
