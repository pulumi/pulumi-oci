// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Repository Setting resource in Oracle Cloud Infrastructure Devops service.
 *
 * Retrieves a repository's settings details.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRepositorySetting = oci.DevOps.getRepositorySetting({
 *     repositoryId: testRepository.id,
 * });
 * ```
 */
export function getRepositorySetting(args: GetRepositorySettingArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositorySettingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DevOps/getRepositorySetting:getRepositorySetting", {
        "repositoryId": args.repositoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositorySetting.
 */
export interface GetRepositorySettingArgs {
    /**
     * Unique repository identifier.
     */
    repositoryId: string;
}

/**
 * A collection of values returned by getRepositorySetting.
 */
export interface GetRepositorySettingResult {
    /**
     * List of approval rules which must be statisfied before pull requests which match the rules can be merged
     */
    readonly approvalRules: outputs.DevOps.GetRepositorySettingApprovalRule[];
    readonly id: string;
    /**
     * Criteria which must be satisfied to merge a pull request.
     */
    readonly mergeChecks: outputs.DevOps.GetRepositorySettingMergeCheck[];
    /**
     * Enabled and disabled merge strategies for a project or repository, also contains a default strategy.
     */
    readonly mergeSettings: outputs.DevOps.GetRepositorySettingMergeSetting[];
    readonly repositoryId: string;
}
/**
 * This data source provides details about a specific Repository Setting resource in Oracle Cloud Infrastructure Devops service.
 *
 * Retrieves a repository's settings details.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRepositorySetting = oci.DevOps.getRepositorySetting({
 *     repositoryId: testRepository.id,
 * });
 * ```
 */
export function getRepositorySettingOutput(args: GetRepositorySettingOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRepositorySettingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:DevOps/getRepositorySetting:getRepositorySetting", {
        "repositoryId": args.repositoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositorySetting.
 */
export interface GetRepositorySettingOutputArgs {
    /**
     * Unique repository identifier.
     */
    repositoryId: pulumi.Input<string>;
}
