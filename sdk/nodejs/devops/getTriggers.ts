// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Triggers in Oracle Cloud Infrastructure Devops service.
 *
 * Returns a list of triggers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTriggers = oci.DevOps.getTriggers({
 *     compartmentId: compartmentId,
 *     displayName: triggerDisplayName,
 *     id: triggerId,
 *     projectId: testProject.id,
 *     state: triggerState,
 * });
 * ```
 */
export function getTriggers(args?: GetTriggersArgs, opts?: pulumi.InvokeOptions): Promise<GetTriggersResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DevOps/getTriggers:getTriggers", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "projectId": args.projectId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getTriggers.
 */
export interface GetTriggersArgs {
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.DevOps.GetTriggersFilter[];
    /**
     * Unique trigger identifier.
     */
    id?: string;
    /**
     * unique project identifier
     */
    projectId?: string;
    /**
     * A filter to return only triggers that matches the given lifecycle state.
     */
    state?: string;
}

/**
 * A collection of values returned by getTriggers.
 */
export interface GetTriggersResult {
    /**
     * The OCID of the compartment that contains the trigger.
     */
    readonly compartmentId?: string;
    /**
     * Trigger display name. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.DevOps.GetTriggersFilter[];
    /**
     * Unique identifier that is immutable on creation.
     */
    readonly id?: string;
    /**
     * The OCID of the DevOps project to which the trigger belongs to.
     */
    readonly projectId?: string;
    /**
     * The current state of the trigger.
     */
    readonly state?: string;
    /**
     * The list of trigger_collection.
     */
    readonly triggerCollections: outputs.DevOps.GetTriggersTriggerCollection[];
}
/**
 * This data source provides the list of Triggers in Oracle Cloud Infrastructure Devops service.
 *
 * Returns a list of triggers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTriggers = oci.DevOps.getTriggers({
 *     compartmentId: compartmentId,
 *     displayName: triggerDisplayName,
 *     id: triggerId,
 *     projectId: testProject.id,
 *     state: triggerState,
 * });
 * ```
 */
export function getTriggersOutput(args?: GetTriggersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTriggersResult> {
    return pulumi.output(args).apply((a: any) => getTriggers(a, opts))
}

/**
 * A collection of arguments for invoking getTriggers.
 */
export interface GetTriggersOutputArgs {
    /**
     * The OCID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DevOps.GetTriggersFilterArgs>[]>;
    /**
     * Unique trigger identifier.
     */
    id?: pulumi.Input<string>;
    /**
     * unique project identifier
     */
    projectId?: pulumi.Input<string>;
    /**
     * A filter to return only triggers that matches the given lifecycle state.
     */
    state?: pulumi.Input<string>;
}
