// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./buildPipeline";
export * from "./buildPipelineStage";
export * from "./buildRun";
export * from "./connection";
export * from "./deployArtifact";
export * from "./deployEnvironment";
export * from "./deployPipeline";
export * from "./deployStage";
export * from "./deployment";
export * from "./getBuildPipeline";
export * from "./getBuildPipelineStage";
export * from "./getBuildPipelineStages";
export * from "./getBuildPipelines";
export * from "./getBuildRun";
export * from "./getBuildRuns";
export * from "./getConnection";
export * from "./getConnections";
export * from "./getDeployArtifact";
export * from "./getDeployArtifacts";
export * from "./getDeployEnvironment";
export * from "./getDeployEnvironments";
export * from "./getDeployPipeline";
export * from "./getDeployPipelines";
export * from "./getDeployStage";
export * from "./getDeployStages";
export * from "./getDeployment";
export * from "./getDeployments";
export * from "./getProject";
export * from "./getProjects";
export * from "./getRepoFileLine";
export * from "./getRepositories";
export * from "./getRepository";
export * from "./getRepositoryArchiveContent";
export * from "./getRepositoryAuthor";
export * from "./getRepositoryAuthors";
export * from "./getRepositoryCommit";
export * from "./getRepositoryCommits";
export * from "./getRepositoryDiff";
export * from "./getRepositoryDiffs";
export * from "./getRepositoryFileDiff";
export * from "./getRepositoryFileLine";
export * from "./getRepositoryMirrorRecord";
export * from "./getRepositoryMirrorRecords";
export * from "./getRepositoryObject";
export * from "./getRepositoryObjectContent";
export * from "./getRepositoryPath";
export * from "./getRepositoryPaths";
export * from "./getRepositoryRef";
export * from "./getRepositoryRefs";
export * from "./getTrigger";
export * from "./getTriggers";
export * from "./project";
export * from "./repository";
export * from "./repositoryMirror";
export * from "./repositoryRef";
export * from "./trigger";

// Import resources to register:
import { BuildPipeline } from "./buildPipeline";
import { BuildPipelineStage } from "./buildPipelineStage";
import { BuildRun } from "./buildRun";
import { Connection } from "./connection";
import { DeployArtifact } from "./deployArtifact";
import { DeployEnvironment } from "./deployEnvironment";
import { DeployPipeline } from "./deployPipeline";
import { DeployStage } from "./deployStage";
import { Deployment } from "./deployment";
import { Project } from "./project";
import { Repository } from "./repository";
import { RepositoryMirror } from "./repositoryMirror";
import { RepositoryRef } from "./repositoryRef";
import { Trigger } from "./trigger";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:DevOps/buildPipeline:BuildPipeline":
                return new BuildPipeline(name, <any>undefined, { urn })
            case "oci:DevOps/buildPipelineStage:BuildPipelineStage":
                return new BuildPipelineStage(name, <any>undefined, { urn })
            case "oci:DevOps/buildRun:BuildRun":
                return new BuildRun(name, <any>undefined, { urn })
            case "oci:DevOps/connection:Connection":
                return new Connection(name, <any>undefined, { urn })
            case "oci:DevOps/deployArtifact:DeployArtifact":
                return new DeployArtifact(name, <any>undefined, { urn })
            case "oci:DevOps/deployEnvironment:DeployEnvironment":
                return new DeployEnvironment(name, <any>undefined, { urn })
            case "oci:DevOps/deployPipeline:DeployPipeline":
                return new DeployPipeline(name, <any>undefined, { urn })
            case "oci:DevOps/deployStage:DeployStage":
                return new DeployStage(name, <any>undefined, { urn })
            case "oci:DevOps/deployment:Deployment":
                return new Deployment(name, <any>undefined, { urn })
            case "oci:DevOps/project:Project":
                return new Project(name, <any>undefined, { urn })
            case "oci:DevOps/repository:Repository":
                return new Repository(name, <any>undefined, { urn })
            case "oci:DevOps/repositoryMirror:RepositoryMirror":
                return new RepositoryMirror(name, <any>undefined, { urn })
            case "oci:DevOps/repositoryRef:RepositoryRef":
                return new RepositoryRef(name, <any>undefined, { urn })
            case "oci:DevOps/trigger:Trigger":
                return new Trigger(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "DevOps/buildPipeline", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/buildPipelineStage", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/buildRun", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/connection", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/deployArtifact", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/deployEnvironment", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/deployPipeline", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/deployStage", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/deployment", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/project", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/repository", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/repositoryMirror", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/repositoryRef", _module)
pulumi.runtime.registerResourceModule("oci", "DevOps/trigger", _module)
