// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Repository resource in Oracle Cloud Infrastructure Devops service.
 *
 * Creates a new repository.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRepository = new oci.devops.Repository("testRepository", {
 *     projectId: oci_devops_project.test_project.id,
 *     repositoryType: _var.repository_repository_type,
 *     defaultBranch: _var.repository_default_branch,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.repository_description,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     mirrorRepositoryConfig: {
 *         connectorId: oci_devops_connector.test_connector.id,
 *         repositoryUrl: _var.repository_mirror_repository_config_repository_url,
 *         triggerSchedule: {
 *             scheduleType: _var.repository_mirror_repository_config_trigger_schedule_schedule_type,
 *             customSchedule: _var.repository_mirror_repository_config_trigger_schedule_custom_schedule,
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Repositories can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:DevOps/repository:Repository test_repository "id"
 * ```
 */
export class Repository extends pulumi.CustomResource {
    /**
     * Get an existing Repository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryState, opts?: pulumi.CustomResourceOptions): Repository {
        return new Repository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DevOps/repository:Repository';

    /**
     * Returns true if the given object is an instance of Repository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Repository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Repository.__pulumiType;
    }

    /**
     * The count of the branches present in the repository.
     */
    public /*out*/ readonly branchCount!: pulumi.Output<number>;
    /**
     * The count of the commits present in the repository.
     */
    public /*out*/ readonly commitCount!: pulumi.Output<number>;
    /**
     * The OCID of the repository's compartment.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The default branch of the repository.
     */
    public readonly defaultBranch!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Details of the repository. Avoid entering confidential information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * HTTP URL that you use to git clone, pull and push.
     */
    public /*out*/ readonly httpUrl!: pulumi.Output<string>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly lifecyleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Configuration information for mirroring the repository.
     */
    public readonly mirrorRepositoryConfig!: pulumi.Output<outputs.DevOps.RepositoryMirrorRepositoryConfig>;
    /**
     * (Updatable) Unique name of a repository.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Tenancy unique namespace.
     */
    public /*out*/ readonly namespace!: pulumi.Output<string>;
    /**
     * The OCID of the DevOps project containing the repository.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Unique project name in a namespace.
     */
    public /*out*/ readonly projectName!: pulumi.Output<string>;
    /**
     * (Updatable) Type of repository.
     */
    public readonly repositoryType!: pulumi.Output<string>;
    /**
     * The size of the repository in bytes.
     */
    public /*out*/ readonly sizeInBytes!: pulumi.Output<string>;
    /**
     * SSH URL that you use to git clone, pull and push.
     */
    public /*out*/ readonly sshUrl!: pulumi.Output<string>;
    /**
     * The current state of the repository.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The time the repository was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the repository was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * Trigger build events supported for this repository: PUSH - Build is triggered when a push event occurs. COMMIT_UPDATES - Build is triggered when new commits are mirrored into a repository.
     */
    public /*out*/ readonly triggerBuildEvents!: pulumi.Output<string[]>;

    /**
     * Create a Repository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RepositoryArgs | RepositoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RepositoryState | undefined;
            resourceInputs["branchCount"] = state ? state.branchCount : undefined;
            resourceInputs["commitCount"] = state ? state.commitCount : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["defaultBranch"] = state ? state.defaultBranch : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["httpUrl"] = state ? state.httpUrl : undefined;
            resourceInputs["lifecyleDetails"] = state ? state.lifecyleDetails : undefined;
            resourceInputs["mirrorRepositoryConfig"] = state ? state.mirrorRepositoryConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["repositoryType"] = state ? state.repositoryType : undefined;
            resourceInputs["sizeInBytes"] = state ? state.sizeInBytes : undefined;
            resourceInputs["sshUrl"] = state ? state.sshUrl : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["triggerBuildEvents"] = state ? state.triggerBuildEvents : undefined;
        } else {
            const args = argsOrState as RepositoryArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.repositoryType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repositoryType'");
            }
            resourceInputs["defaultBranch"] = args ? args.defaultBranch : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["mirrorRepositoryConfig"] = args ? args.mirrorRepositoryConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["repositoryType"] = args ? args.repositoryType : undefined;
            resourceInputs["branchCount"] = undefined /*out*/;
            resourceInputs["commitCount"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["httpUrl"] = undefined /*out*/;
            resourceInputs["lifecyleDetails"] = undefined /*out*/;
            resourceInputs["namespace"] = undefined /*out*/;
            resourceInputs["projectName"] = undefined /*out*/;
            resourceInputs["sizeInBytes"] = undefined /*out*/;
            resourceInputs["sshUrl"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["triggerBuildEvents"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Repository.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Repository resources.
 */
export interface RepositoryState {
    /**
     * The count of the branches present in the repository.
     */
    branchCount?: pulumi.Input<number>;
    /**
     * The count of the commits present in the repository.
     */
    commitCount?: pulumi.Input<number>;
    /**
     * The OCID of the repository's compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The default branch of the repository.
     */
    defaultBranch?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Details of the repository. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * HTTP URL that you use to git clone, pull and push.
     */
    httpUrl?: pulumi.Input<string>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecyleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Configuration information for mirroring the repository.
     */
    mirrorRepositoryConfig?: pulumi.Input<inputs.DevOps.RepositoryMirrorRepositoryConfig>;
    /**
     * (Updatable) Unique name of a repository.
     */
    name?: pulumi.Input<string>;
    /**
     * Tenancy unique namespace.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The OCID of the DevOps project containing the repository.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Unique project name in a namespace.
     */
    projectName?: pulumi.Input<string>;
    /**
     * (Updatable) Type of repository.
     */
    repositoryType?: pulumi.Input<string>;
    /**
     * The size of the repository in bytes.
     */
    sizeInBytes?: pulumi.Input<string>;
    /**
     * SSH URL that you use to git clone, pull and push.
     */
    sshUrl?: pulumi.Input<string>;
    /**
     * The current state of the repository.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The time the repository was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the repository was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * Trigger build events supported for this repository: PUSH - Build is triggered when a push event occurs. COMMIT_UPDATES - Build is triggered when new commits are mirrored into a repository.
     */
    triggerBuildEvents?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Repository resource.
 */
export interface RepositoryArgs {
    /**
     * (Updatable) The default branch of the repository.
     */
    defaultBranch?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Details of the repository. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Configuration information for mirroring the repository.
     */
    mirrorRepositoryConfig?: pulumi.Input<inputs.DevOps.RepositoryMirrorRepositoryConfig>;
    /**
     * (Updatable) Unique name of a repository.
     */
    name?: pulumi.Input<string>;
    /**
     * The OCID of the DevOps project containing the repository.
     */
    projectId: pulumi.Input<string>;
    /**
     * (Updatable) Type of repository.
     */
    repositoryType: pulumi.Input<string>;
}
