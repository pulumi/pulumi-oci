// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Trigger resource in Oracle Cloud Infrastructure Devops service.
 *
 * Creates a new trigger.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTrigger = new oci.devops.Trigger("test_trigger", {
 *     actions: [{
 *         buildPipelineId: testBuildPipeline.id,
 *         type: triggerActionsType,
 *         filter: {
 *             triggerSource: triggerActionsFilterTriggerSource,
 *             events: triggerActionsFilterEvents,
 *             include: {
 *                 baseRef: triggerActionsFilterIncludeBaseRef,
 *                 headRef: triggerActionsFilterIncludeHeadRef,
 *                 repositoryName: testRepository.name,
 *             },
 *         },
 *     }],
 *     projectId: testProject.id,
 *     triggerSource: triggerTriggerSource,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: triggerDescription,
 *     displayName: triggerDisplayName,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     repositoryId: testRepositoryOciArtifactsRepository.id,
 * });
 * ```
 *
 * ## Import
 *
 * Triggers can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DevOps/trigger:Trigger test_trigger "id"
 * ```
 */
export class Trigger extends pulumi.CustomResource {
    /**
     * Get an existing Trigger resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TriggerState, opts?: pulumi.CustomResourceOptions): Trigger {
        return new Trigger(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DevOps/trigger:Trigger';

    /**
     * Returns true if the given object is an instance of Trigger.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Trigger {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Trigger.__pulumiType;
    }

    /**
     * (Updatable) The list of actions that are to be performed for this trigger.
     */
    declare public readonly actions: pulumi.Output<outputs.DevOps.TriggerAction[]>;
    /**
     * The OCID of the compartment that contains the trigger.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the connection resource used to get details for triggered events.
     */
    declare public readonly connectionId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Optional description about the trigger.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) Trigger display name. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The OCID of the DevOps project to which the trigger belongs to.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the DevOps code repository.
     */
    declare public readonly repositoryId: pulumi.Output<string>;
    /**
     * The current state of the trigger.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time the trigger was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the trigger was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * (Updatable) Source of the trigger. Allowed values are,  GITHUB, GITLAB, BITBUCKET_CLOUD, VBS and DEVOPS_CODE_REPOSITORY.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly triggerSource: pulumi.Output<string>;
    /**
     * The endpoint that listens to trigger events.
     */
    declare public /*out*/ readonly triggerUrl: pulumi.Output<string>;

    /**
     * Create a Trigger resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TriggerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TriggerArgs | TriggerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TriggerState | undefined;
            resourceInputs["actions"] = state?.actions;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["connectionId"] = state?.connectionId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["repositoryId"] = state?.repositoryId;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["triggerSource"] = state?.triggerSource;
            resourceInputs["triggerUrl"] = state?.triggerUrl;
        } else {
            const args = argsOrState as TriggerArgs | undefined;
            if (args?.actions === undefined && !opts.urn) {
                throw new Error("Missing required property 'actions'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if (args?.triggerSource === undefined && !opts.urn) {
                throw new Error("Missing required property 'triggerSource'");
            }
            resourceInputs["actions"] = args?.actions;
            resourceInputs["connectionId"] = args?.connectionId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["repositoryId"] = args?.repositoryId;
            resourceInputs["triggerSource"] = args?.triggerSource;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["triggerUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Trigger.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Trigger resources.
 */
export interface TriggerState {
    /**
     * (Updatable) The list of actions that are to be performed for this trigger.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.DevOps.TriggerAction>[]>;
    /**
     * The OCID of the compartment that contains the trigger.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the connection resource used to get details for triggered events.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Optional description about the trigger.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Trigger display name. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The OCID of the DevOps project to which the trigger belongs to.
     */
    projectId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the DevOps code repository.
     */
    repositoryId?: pulumi.Input<string>;
    /**
     * The current state of the trigger.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time the trigger was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the trigger was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) Source of the trigger. Allowed values are,  GITHUB, GITLAB, BITBUCKET_CLOUD, VBS and DEVOPS_CODE_REPOSITORY.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    triggerSource?: pulumi.Input<string>;
    /**
     * The endpoint that listens to trigger events.
     */
    triggerUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Trigger resource.
 */
export interface TriggerArgs {
    /**
     * (Updatable) The list of actions that are to be performed for this trigger.
     */
    actions: pulumi.Input<pulumi.Input<inputs.DevOps.TriggerAction>[]>;
    /**
     * (Updatable) The OCID of the connection resource used to get details for triggered events.
     */
    connectionId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Optional description about the trigger.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Trigger display name. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The OCID of the DevOps project to which the trigger belongs to.
     */
    projectId: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the DevOps code repository.
     */
    repositoryId?: pulumi.Input<string>;
    /**
     * (Updatable) Source of the trigger. Allowed values are,  GITHUB, GITLAB, BITBUCKET_CLOUD, VBS and DEVOPS_CODE_REPOSITORY.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    triggerSource: pulumi.Input<string>;
}
