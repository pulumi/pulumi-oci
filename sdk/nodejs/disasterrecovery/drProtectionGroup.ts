// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Dr Protection Group resource in Oracle Cloud Infrastructure Disaster Recovery service.
 *
 * Create a DR protection group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const config = new pulumi.Config();
 * const disassociateTrigger = config.getNumber("disassociateTrigger") || 0;
 * const testDrProtectionGroup = new oci.disasterrecovery.DrProtectionGroup("test_dr_protection_group", {
 *     compartmentId: compartmentId,
 *     displayName: drProtectionGroupDisplayName,
 *     logLocation: {
 *         bucket: drProtectionGroupLogLocationBucket,
 *         namespace: drProtectionGroupLogLocationNamespace,
 *     },
 *     association: {
 *         role: drProtectionGroupAssociationRole,
 *         peerId: drProtectionGroupAssociationPeerId,
 *         peerRegion: drProtectionGroupAssociationPeerRegion,
 *     },
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     disassociateTrigger: disassociateTrigger,
 *     members: [{
 *         memberId: drProtectionGroupMembersMemberId,
 *         memberType: drProtectionGroupMembersMemberType,
 *         autonomousDatabaseStandbyTypeForDrDrills: drProtectionGroupMembersAutonomousDatabaseStandbyTypeForDrDrills,
 *         backendSetMappings: [{
 *             destinationBackendSetName: testBackendSet.name,
 *             isBackendSetForNonMovable: drProtectionGroupMembersBackendSetMappingsIsBackendSetForNonMovable,
 *             sourceBackendSetName: testBackendSet.name,
 *         }],
 *         backupConfig: {
 *             backupSchedule: drProtectionGroupMembersBackupConfigBackupSchedule,
 *             excludeNamespaces: drProtectionGroupMembersBackupConfigExcludeNamespaces,
 *             imageReplicationVaultSecretId: testSecret.id,
 *             maxNumberOfBackupsRetained: drProtectionGroupMembersBackupConfigMaxNumberOfBackupsRetained,
 *             namespaces: drProtectionGroupMembersBackupConfigNamespaces,
 *             replicateImages: drProtectionGroupMembersBackupConfigReplicateImages,
 *         },
 *         backupLocation: {
 *             bucket: drProtectionGroupMembersBackupLocationBucket,
 *             namespace: drProtectionGroupMembersBackupLocationNamespace,
 *         },
 *         blockVolumeAttachAndMountOperations: {
 *             attachments: [{
 *                 blockVolumeId: testVolume.id,
 *                 volumeAttachmentReferenceInstanceId: testInstance.id,
 *             }],
 *             mounts: [{
 *                 mountPoint: drProtectionGroupMembersBlockVolumeAttachAndMountOperationsMountsMountPoint,
 *             }],
 *         },
 *         blockVolumeOperations: [{
 *             attachmentDetails: {
 *                 volumeAttachmentReferenceInstanceId: testInstance.id,
 *             },
 *             blockVolumeId: testVolume.id,
 *             mountDetails: {
 *                 mountPoint: drProtectionGroupMembersBlockVolumeOperationsMountDetailsMountPoint,
 *             },
 *         }],
 *         bucket: drProtectionGroupMembersBucket,
 *         commonDestinationKey: {
 *             encryptionKeyId: testKey.id,
 *             vaultId: testVault.id,
 *         },
 *         connectionStringType: drProtectionGroupMembersConnectionStringType,
 *         dbSystemAdminUserDetails: {
 *             passwordVaultSecretId: testSecret.id,
 *             username: drProtectionGroupMembersDbSystemAdminUserDetailsUsername,
 *         },
 *         dbSystemReplicationUserDetails: {
 *             passwordVaultSecretId: testSecret.id,
 *             username: drProtectionGroupMembersDbSystemReplicationUserDetailsUsername,
 *         },
 *         destinationAvailabilityDomain: drProtectionGroupMembersDestinationAvailabilityDomain,
 *         destinationBackupPolicyId: testPolicy.id,
 *         destinationCapacityReservationId: destinationCapacityReservationId,
 *         destinationCompartmentId: testCompartment.id,
 *         destinationDedicatedVmHostId: testDedicatedVmHost.id,
 *         destinationEncryptionKey: {
 *             encryptionKeyId: testKey.id,
 *             vaultId: testVault.id,
 *         },
 *         destinationLoadBalancerId: testLoadBalancer.id,
 *         destinationNetworkLoadBalancerId: testNetworkLoadBalancer.id,
 *         destinationSnapshotPolicyId: testPolicy.id,
 *         exportMappings: [{
 *             destinationMountTargetId: testMountTarget.id,
 *             exportId: testExport.id,
 *         }],
 *         fileSystemOperations: [{
 *             exportPath: drProtectionGroupMembersFileSystemOperationsExportPath,
 *             mountDetails: {
 *                 mountTargetId: testMountTarget.id,
 *             },
 *             mountPoint: drProtectionGroupMembersFileSystemOperationsMountPoint,
 *             mountTargetId: testMountTarget.id,
 *             unmountDetails: {
 *                 mountTargetId: testMountTarget.id,
 *             },
 *         }],
 *         gtidReconciliationTimeout: drProtectionGroupMembersGtidReconciliationTimeout,
 *         isContinueOnGtidReconciliationTimeout: drProtectionGroupMembersIsContinueOnGtidReconciliationTimeout,
 *         isMovable: drProtectionGroupMembersIsMovable,
 *         isRetainFaultDomain: drProtectionGroupMembersIsRetainFaultDomain,
 *         isStartStopEnabled: drProtectionGroupMembersIsStartStopEnabled,
 *         jumpHostId: testJumpHost.id,
 *         loadBalancerMappings: [{
 *             destinationLoadBalancerId: testLoadBalancer.id,
 *             sourceLoadBalancerId: testLoadBalancer.id,
 *         }],
 *         managedNodePoolConfigs: [{
 *             id: drProtectionGroupMembersManagedNodePoolConfigsId,
 *             maximum: drProtectionGroupMembersManagedNodePoolConfigsMaximum,
 *             minimum: drProtectionGroupMembersManagedNodePoolConfigsMinimum,
 *         }],
 *         namespace: drProtectionGroupMembersNamespace,
 *         passwordVaultSecretId: passwordVaultSecretId,
 *         networkLoadBalancerMappings: [{
 *             destinationNetworkLoadBalancerId: testNetworkLoadBalancer.id,
 *             sourceNetworkLoadBalancerId: testNetworkLoadBalancer.id,
 *         }],
 *         peerClusterId: testCluster.id,
 *         peerDbSystemId: testDbSystem.id,
 *         sourceVolumeToDestinationEncryptionKeyMappings: [{
 *             destinationEncryptionKey: {
 *                 encryptionKeyId: testKey.id,
 *                 vaultId: testVault.id,
 *             },
 *             sourceVolumeId: testVolume.id,
 *         }],
 *         vaultMappings: [{
 *             destinationVaultId: testVault.id,
 *             sourceVaultId: testVault.id,
 *         }],
 *         virtualNodePoolConfigs: [{
 *             id: drProtectionGroupMembersVirtualNodePoolConfigsId,
 *             maximum: drProtectionGroupMembersVirtualNodePoolConfigsMaximum,
 *             minimum: drProtectionGroupMembersVirtualNodePoolConfigsMinimum,
 *         }],
 *         vnicMappings: [
 *             {
 *                 destinationNsgIdLists: drProtectionGroupMembersVnicMappingDestinationNsgIdList,
 *                 destinationPrimaryPrivateIpAddress: drProtectionGroupMembersVnicMappingDestinationPrimaryPrivateIpAddress,
 *                 destinationPrimaryPrivateIpHostnameLabel: drProtectionGroupMembersVnicMappingDestinationPrimaryPrivateIpHostnameLabel,
 *                 destinationSubnetId: testSubnet.id,
 *                 sourceVnicId: testVnic.id,
 *             },
 *             {
 *                 destinationNsgIdLists: drProtectionGroupMembersVnicMappingsDestinationNsgIdList,
 *                 destinationPrimaryPrivateIpAddress: drProtectionGroupMembersVnicMappingsDestinationPrimaryPrivateIpAddress,
 *                 destinationPrimaryPrivateIpHostnameLabel: drProtectionGroupMembersVnicMappingsDestinationPrimaryPrivateIpHostnameLabel,
 *                 destinationReservedPublicIpId: testPublicIp.id,
 *                 destinationSubnetId: testSubnet.id,
 *                 sourceVnicId: testVnic.id,
 *             },
 *         ],
 *     }],
 * });
 * ```
 *
 * ## Create
 *
 * Create DR Protection Group resource with a default value of `disassociateTrigger` property, e.g.
 *
 * ## Delete
 *
 * Disassociate DR Protection Group (if associated) before deleting it. Increment value of `disassociateTrigger` property to trigger Disassociate, e.g.
 *
 * ## Import
 *
 * DrProtectionGroups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:DisasterRecovery/drProtectionGroup:DrProtectionGroup test_dr_protection_group "id"
 * ```
 */
export class DrProtectionGroup extends pulumi.CustomResource {
    /**
     * Get an existing DrProtectionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DrProtectionGroupState, opts?: pulumi.CustomResourceOptions): DrProtectionGroup {
        return new DrProtectionGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:DisasterRecovery/drProtectionGroup:DrProtectionGroup';

    /**
     * Returns true if the given object is an instance of DrProtectionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DrProtectionGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DrProtectionGroup.__pulumiType;
    }

    /**
     * The details for associating a DR protection group with a peer DR protection group.
     */
    declare public readonly association: pulumi.Output<outputs.DisasterRecovery.DrProtectionGroupAssociation>;
    /**
     * (Updatable) The OCID of the compartment in which to create the DR protection group.  Example: `ocid1.compartment.oc1..uniqueID`
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly disassociateTrigger: pulumi.Output<number | undefined>;
    /**
     * (Updatable) The display name of the DR protection group.  Example: `EBS PHX Group`
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the DR protection group's current state in more detail.
     */
    declare public /*out*/ readonly lifeCycleDetails: pulumi.Output<string>;
    /**
     * The current sub-state of the DR protection group.
     */
    declare public /*out*/ readonly lifecycleSubState: pulumi.Output<string>;
    /**
     * (Updatable) The details for creating an object storage log location for a DR protection group.
     */
    declare public readonly logLocation: pulumi.Output<outputs.DisasterRecovery.DrProtectionGroupLogLocation>;
    /**
     * (Updatable) A list of DR protection group members.
     */
    declare public readonly members: pulumi.Output<outputs.DisasterRecovery.DrProtectionGroupMember[] | undefined>;
    /**
     * The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     */
    declare public /*out*/ readonly peerId: pulumi.Output<string>;
    /**
     * The region of the peer DR protection group.  Example: `us-ashburn-1`
     */
    declare public /*out*/ readonly peerRegion: pulumi.Output<string>;
    /**
     * The role of the DR protection group.
     */
    declare public /*out*/ readonly role: pulumi.Output<string>;
    /**
     * The current state of the DR protection group.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the DR protection group was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the DR protection group was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a DrProtectionGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DrProtectionGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DrProtectionGroupArgs | DrProtectionGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DrProtectionGroupState | undefined;
            resourceInputs["association"] = state?.association;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["disassociateTrigger"] = state?.disassociateTrigger;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifeCycleDetails"] = state?.lifeCycleDetails;
            resourceInputs["lifecycleSubState"] = state?.lifecycleSubState;
            resourceInputs["logLocation"] = state?.logLocation;
            resourceInputs["members"] = state?.members;
            resourceInputs["peerId"] = state?.peerId;
            resourceInputs["peerRegion"] = state?.peerRegion;
            resourceInputs["role"] = state?.role;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as DrProtectionGroupArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.logLocation === undefined && !opts.urn) {
                throw new Error("Missing required property 'logLocation'");
            }
            resourceInputs["association"] = args?.association;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["disassociateTrigger"] = args?.disassociateTrigger;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["logLocation"] = args?.logLocation;
            resourceInputs["members"] = args?.members;
            resourceInputs["lifeCycleDetails"] = undefined /*out*/;
            resourceInputs["lifecycleSubState"] = undefined /*out*/;
            resourceInputs["peerId"] = undefined /*out*/;
            resourceInputs["peerRegion"] = undefined /*out*/;
            resourceInputs["role"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DrProtectionGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DrProtectionGroup resources.
 */
export interface DrProtectionGroupState {
    /**
     * The details for associating a DR protection group with a peer DR protection group.
     */
    association?: pulumi.Input<inputs.DisasterRecovery.DrProtectionGroupAssociation>;
    /**
     * (Updatable) The OCID of the compartment in which to create the DR protection group.  Example: `ocid1.compartment.oc1..uniqueID`
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    disassociateTrigger?: pulumi.Input<number>;
    /**
     * (Updatable) The display name of the DR protection group.  Example: `EBS PHX Group`
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the DR protection group's current state in more detail.
     */
    lifeCycleDetails?: pulumi.Input<string>;
    /**
     * The current sub-state of the DR protection group.
     */
    lifecycleSubState?: pulumi.Input<string>;
    /**
     * (Updatable) The details for creating an object storage log location for a DR protection group.
     */
    logLocation?: pulumi.Input<inputs.DisasterRecovery.DrProtectionGroupLogLocation>;
    /**
     * (Updatable) A list of DR protection group members.
     */
    members?: pulumi.Input<pulumi.Input<inputs.DisasterRecovery.DrProtectionGroupMember>[]>;
    /**
     * The OCID of the peer DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     */
    peerId?: pulumi.Input<string>;
    /**
     * The region of the peer DR protection group.  Example: `us-ashburn-1`
     */
    peerRegion?: pulumi.Input<string>;
    /**
     * The role of the DR protection group.
     */
    role?: pulumi.Input<string>;
    /**
     * The current state of the DR protection group.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the DR protection group was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the DR protection group was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DrProtectionGroup resource.
 */
export interface DrProtectionGroupArgs {
    /**
     * The details for associating a DR protection group with a peer DR protection group.
     */
    association?: pulumi.Input<inputs.DisasterRecovery.DrProtectionGroupAssociation>;
    /**
     * (Updatable) The OCID of the compartment in which to create the DR protection group.  Example: `ocid1.compartment.oc1..uniqueID`
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) An optional property when incremented triggers Disassociate. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    disassociateTrigger?: pulumi.Input<number>;
    /**
     * (Updatable) The display name of the DR protection group.  Example: `EBS PHX Group`
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The details for creating an object storage log location for a DR protection group.
     */
    logLocation: pulumi.Input<inputs.DisasterRecovery.DrProtectionGroupLogLocation>;
    /**
     * (Updatable) A list of DR protection group members.
     */
    members?: pulumi.Input<pulumi.Input<inputs.DisasterRecovery.DrProtectionGroupMember>[]>;
}
