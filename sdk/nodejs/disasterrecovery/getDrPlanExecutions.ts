// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Dr Plan Executions in Oracle Cloud Infrastructure Disaster Recovery service.
 *
 * Get a summary list of all DR Plan Executions for a DR Protection Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDrPlanExecutions = oci.DisasterRecovery.getDrPlanExecutions({
 *     drProtectionGroupId: oci_disaster_recovery_dr_protection_group.test_dr_protection_group.id,
 *     displayName: _var.dr_plan_execution_display_name,
 *     drPlanExecutionId: oci_disaster_recovery_dr_plan_execution.test_dr_plan_execution.id,
 *     drPlanExecutionType: _var.dr_plan_execution_dr_plan_execution_type,
 *     state: _var.dr_plan_execution_state,
 * });
 * ```
 */
export function getDrPlanExecutions(args: GetDrPlanExecutionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDrPlanExecutionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DisasterRecovery/getDrPlanExecutions:getDrPlanExecutions", {
        "displayName": args.displayName,
        "drPlanExecutionId": args.drPlanExecutionId,
        "drPlanExecutionType": args.drPlanExecutionType,
        "drProtectionGroupId": args.drProtectionGroupId,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDrPlanExecutions.
 */
export interface GetDrPlanExecutionsArgs {
    /**
     * A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
     */
    displayName?: string;
    /**
     * The OCID of the DR Plan Execution.  Example: `ocid1.drplanexecution.oc1.iad.exampleocid`
     */
    drPlanExecutionId?: string;
    /**
     * The DR Plan Execution type.
     */
    drPlanExecutionType?: string;
    /**
     * The OCID of the DR Protection Group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
     */
    drProtectionGroupId: string;
    filters?: inputs.DisasterRecovery.GetDrPlanExecutionsFilter[];
    /**
     * A filter to return only DR Plan Executions that match the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getDrPlanExecutions.
 */
export interface GetDrPlanExecutionsResult {
    /**
     * The display name of the step.  Example: `DATABASE_SWITCHOVER`
     */
    readonly displayName?: string;
    /**
     * The list of dr_plan_execution_collection.
     */
    readonly drPlanExecutionCollections: outputs.DisasterRecovery.GetDrPlanExecutionsDrPlanExecutionCollection[];
    readonly drPlanExecutionId?: string;
    readonly drPlanExecutionType?: string;
    /**
     * The OCID of the DR Protection Group to which this DR Plan Execution belongs.  Example: `ocid1.drprotectiongroup.oc1.iad.&lt;unique_id&gt;`
     */
    readonly drProtectionGroupId: string;
    readonly filters?: outputs.DisasterRecovery.GetDrPlanExecutionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The current state of the DR Plan Execution.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Dr Plan Executions in Oracle Cloud Infrastructure Disaster Recovery service.
 *
 * Get a summary list of all DR Plan Executions for a DR Protection Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDrPlanExecutions = oci.DisasterRecovery.getDrPlanExecutions({
 *     drProtectionGroupId: oci_disaster_recovery_dr_protection_group.test_dr_protection_group.id,
 *     displayName: _var.dr_plan_execution_display_name,
 *     drPlanExecutionId: oci_disaster_recovery_dr_plan_execution.test_dr_plan_execution.id,
 *     drPlanExecutionType: _var.dr_plan_execution_dr_plan_execution_type,
 *     state: _var.dr_plan_execution_state,
 * });
 * ```
 */
export function getDrPlanExecutionsOutput(args: GetDrPlanExecutionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDrPlanExecutionsResult> {
    return pulumi.output(args).apply((a: any) => getDrPlanExecutions(a, opts))
}

/**
 * A collection of arguments for invoking getDrPlanExecutions.
 */
export interface GetDrPlanExecutionsOutputArgs {
    /**
     * A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
     */
    displayName?: pulumi.Input<string>;
    /**
     * The OCID of the DR Plan Execution.  Example: `ocid1.drplanexecution.oc1.iad.exampleocid`
     */
    drPlanExecutionId?: pulumi.Input<string>;
    /**
     * The DR Plan Execution type.
     */
    drPlanExecutionType?: pulumi.Input<string>;
    /**
     * The OCID of the DR Protection Group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
     */
    drProtectionGroupId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DisasterRecovery.GetDrPlanExecutionsFilterArgs>[]>;
    /**
     * A filter to return only DR Plan Executions that match the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
