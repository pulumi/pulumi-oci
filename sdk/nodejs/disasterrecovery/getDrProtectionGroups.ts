// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Dr Protection Groups in Oracle Cloud Infrastructure Disaster Recovery service.
 *
 * Gets a summary list of all DR Protection Groups in a compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDrProtectionGroups = oci.DisasterRecovery.getDrProtectionGroups({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.dr_protection_group_display_name,
 *     drProtectionGroupId: oci_disaster_recovery_dr_protection_group.test_dr_protection_group.id,
 *     role: _var.dr_protection_group_role,
 *     state: _var.dr_protection_group_state,
 * });
 * ```
 */
export function getDrProtectionGroups(args: GetDrProtectionGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetDrProtectionGroupsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:DisasterRecovery/getDrProtectionGroups:getDrProtectionGroups", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "drProtectionGroupId": args.drProtectionGroupId,
        "filters": args.filters,
        "role": args.role,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDrProtectionGroups.
 */
export interface GetDrProtectionGroupsArgs {
    /**
     * The ID (OCID) of the compartment in which to list resources.  Example: `ocid1.compartment.oc1..exampleocid1`
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
     */
    displayName?: string;
    /**
     * The OCID of the DR Protection Group. Optional query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
     */
    drProtectionGroupId?: string;
    filters?: inputs.DisasterRecovery.GetDrProtectionGroupsFilter[];
    /**
     * The DR Protection Group Role.
     */
    role?: string;
    /**
     * A filter to return only DR Protection Groups that match the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getDrProtectionGroups.
 */
export interface GetDrProtectionGroupsResult {
    /**
     * The OCID of the compartment containing the DR Protection Group.  Example: `ocid1.compartment.oc1..&lt;unique_id&gt;`
     */
    readonly compartmentId: string;
    /**
     * The display name of the DR Protection Group.  Example: `EBS PHX DRPG`
     */
    readonly displayName?: string;
    /**
     * The list of dr_protection_group_collection.
     */
    readonly drProtectionGroupCollections: outputs.DisasterRecovery.GetDrProtectionGroupsDrProtectionGroupCollection[];
    readonly drProtectionGroupId?: string;
    readonly filters?: outputs.DisasterRecovery.GetDrProtectionGroupsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The role of the DR Protection Group.
     */
    readonly role?: string;
    /**
     * The current state of the DR Protection Group.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Dr Protection Groups in Oracle Cloud Infrastructure Disaster Recovery service.
 *
 * Gets a summary list of all DR Protection Groups in a compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDrProtectionGroups = oci.DisasterRecovery.getDrProtectionGroups({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.dr_protection_group_display_name,
 *     drProtectionGroupId: oci_disaster_recovery_dr_protection_group.test_dr_protection_group.id,
 *     role: _var.dr_protection_group_role,
 *     state: _var.dr_protection_group_state,
 * });
 * ```
 */
export function getDrProtectionGroupsOutput(args: GetDrProtectionGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDrProtectionGroupsResult> {
    return pulumi.output(args).apply((a: any) => getDrProtectionGroups(a, opts))
}

/**
 * A collection of arguments for invoking getDrProtectionGroups.
 */
export interface GetDrProtectionGroupsOutputArgs {
    /**
     * The ID (OCID) of the compartment in which to list resources.  Example: `ocid1.compartment.oc1..exampleocid1`
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
     */
    displayName?: pulumi.Input<string>;
    /**
     * The OCID of the DR Protection Group. Optional query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
     */
    drProtectionGroupId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.DisasterRecovery.GetDrProtectionGroupsFilterArgs>[]>;
    /**
     * The DR Protection Group Role.
     */
    role?: pulumi.Input<string>;
    /**
     * A filter to return only DR Protection Groups that match the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
