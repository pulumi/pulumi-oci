// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Resolver resource in Oracle Cloud Infrastructure DNS service.
 *
 * Gets information about a specific resolver. Note that attempting to get a
 * resolver in the DELETED lifecycleState will result in a `404` response to be
 * consistent with other operations of the API. Requires a `PRIVATE` scope query parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testResolver = oci.Dns.getResolver({
 *     resolverId: testResolverOciDnsResolver.id,
 *     scope: "PRIVATE",
 * });
 * ```
 */
export function getResolver(args: GetResolverArgs, opts?: pulumi.InvokeOptions): Promise<GetResolverResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Dns/getResolver:getResolver", {
        "resolverId": args.resolverId,
        "scope": args.scope,
    }, opts);
}

/**
 * A collection of arguments for invoking getResolver.
 */
export interface GetResolverArgs {
    /**
     * The OCID of the target resolver.
     */
    resolverId: string;
    /**
     * Value must be `PRIVATE` when listing private name resolvers.
     */
    scope?: string;
}

/**
 * A collection of values returned by getResolver.
 */
export interface GetResolverResult {
    /**
     * The OCID of the attached VCN.
     */
    readonly attachedVcnId: string;
    /**
     * The attached views. Views are evaluated in order.
     */
    readonly attachedViews: outputs.Dns.GetResolverAttachedView[];
    /**
     * The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver's compartment is changed.
     */
    readonly compartmentId: string;
    /**
     * The OCID of the default view.
     */
    readonly defaultViewId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    readonly definedTags: {[key: string]: any};
    /**
     * The display name of the resolver.
     */
    readonly displayName: string;
    /**
     * Read-only array of endpoints for the resolver.
     */
    readonly endpoints: outputs.Dns.GetResolverEndpoint[];
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The OCID of the resolver.
     */
    readonly id: string;
    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     */
    readonly isProtected: boolean;
    readonly resolverId: string;
    /**
     * Rules for the resolver. Rules are evaluated in order.
     */
    readonly rules: outputs.Dns.GetResolverRule[];
    readonly scope?: string;
    /**
     * The canonical absolute URL of the resource.
     */
    readonly self: string;
    /**
     * The current state of the resource.
     */
    readonly state: string;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the resource was last updated in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Resolver resource in Oracle Cloud Infrastructure DNS service.
 *
 * Gets information about a specific resolver. Note that attempting to get a
 * resolver in the DELETED lifecycleState will result in a `404` response to be
 * consistent with other operations of the API. Requires a `PRIVATE` scope query parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testResolver = oci.Dns.getResolver({
 *     resolverId: testResolverOciDnsResolver.id,
 *     scope: "PRIVATE",
 * });
 * ```
 */
export function getResolverOutput(args: GetResolverOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResolverResult> {
    return pulumi.output(args).apply((a: any) => getResolver(a, opts))
}

/**
 * A collection of arguments for invoking getResolver.
 */
export interface GetResolverOutputArgs {
    /**
     * The OCID of the target resolver.
     */
    resolverId: pulumi.Input<string>;
    /**
     * Value must be `PRIVATE` when listing private name resolvers.
     */
    scope?: pulumi.Input<string>;
}
