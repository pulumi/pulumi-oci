// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Resolver Endpoints in Oracle Cloud Infrastructure DNS service.
 *
 * Gets a list of all endpoints within a resolver. The collection can be filtered by name or lifecycle state.
 * It can be sorted on creation time or name both in ASC or DESC order. Note that when no lifecycleState
 * query parameter is provided, the collection does not include resolver endpoints in the DELETED
 * lifecycle state to be consistent with other operations of the API. Requires a `PRIVATE` scope query parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testResolverEndpoints = oci.Dns.getResolverEndpoints({
 *     resolverId: testResolver.id,
 *     scope: "PRIVATE",
 *     name: resolverEndpointName,
 *     state: resolverEndpointState,
 * });
 * ```
 */
export function getResolverEndpoints(args: GetResolverEndpointsArgs, opts?: pulumi.InvokeOptions): Promise<GetResolverEndpointsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Dns/getResolverEndpoints:getResolverEndpoints", {
        "filters": args.filters,
        "name": args.name,
        "resolverId": args.resolverId,
        "scope": args.scope,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getResolverEndpoints.
 */
export interface GetResolverEndpointsArgs {
    filters?: inputs.Dns.GetResolverEndpointsFilter[];
    /**
     * The name of a resource.
     */
    name?: string;
    /**
     * The OCID of the target resolver.
     */
    resolverId: string;
    /**
     * Value must be `PRIVATE` when listing private name resolver endpoints.
     */
    scope: string;
    /**
     * The state of a resource.
     */
    state?: string;
}

/**
 * A collection of values returned by getResolverEndpoints.
 */
export interface GetResolverEndpointsResult {
    readonly filters?: outputs.Dns.GetResolverEndpointsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
     */
    readonly name?: string;
    /**
     * The list of resolver_endpoints.
     */
    readonly resolverEndpoints: outputs.Dns.GetResolverEndpointsResolverEndpoint[];
    readonly resolverId: string;
    readonly scope: string;
    /**
     * The current state of the resource.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Resolver Endpoints in Oracle Cloud Infrastructure DNS service.
 *
 * Gets a list of all endpoints within a resolver. The collection can be filtered by name or lifecycle state.
 * It can be sorted on creation time or name both in ASC or DESC order. Note that when no lifecycleState
 * query parameter is provided, the collection does not include resolver endpoints in the DELETED
 * lifecycle state to be consistent with other operations of the API. Requires a `PRIVATE` scope query parameter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testResolverEndpoints = oci.Dns.getResolverEndpoints({
 *     resolverId: testResolver.id,
 *     scope: "PRIVATE",
 *     name: resolverEndpointName,
 *     state: resolverEndpointState,
 * });
 * ```
 */
export function getResolverEndpointsOutput(args: GetResolverEndpointsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResolverEndpointsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Dns/getResolverEndpoints:getResolverEndpoints", {
        "filters": args.filters,
        "name": args.name,
        "resolverId": args.resolverId,
        "scope": args.scope,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getResolverEndpoints.
 */
export interface GetResolverEndpointsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Dns.GetResolverEndpointsFilterArgs>[]>;
    /**
     * The name of a resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The OCID of the target resolver.
     */
    resolverId: pulumi.Input<string>;
    /**
     * Value must be `PRIVATE` when listing private name resolver endpoints.
     */
    scope: pulumi.Input<string>;
    /**
     * The state of a resource.
     */
    state?: pulumi.Input<string>;
}
