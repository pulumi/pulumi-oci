// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Rrset resource in Oracle Cloud Infrastructure DNS service.
 *
 * Gets a list of all records in the specified RRSet.
 *
 * The results are sorted by `recordHash` by default. When the zone name is provided as a path parameter
 * and `PRIVATE` is used for the scope query parameter then the viewId query parameter is required.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRrset = oci.Dns.getRrset({
 *     domain: rrsetDomain,
 *     rtype: rrsetRtype,
 *     zoneNameOrId: testZone.id,
 *     scope: rrsetScope,
 *     viewId: testView.id,
 * });
 * ```
 */
export function getRrset(args: GetRrsetArgs, opts?: pulumi.InvokeOptions): Promise<GetRrsetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Dns/getRrset:getRrset", {
        "compartmentId": args.compartmentId,
        "domain": args.domain,
        "rtype": args.rtype,
        "scope": args.scope,
        "viewId": args.viewId,
        "zoneNameOrId": args.zoneNameOrId,
        "zoneVersion": args.zoneVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getRrset.
 */
export interface GetRrsetArgs {
    /**
     * The OCID of the compartment the zone belongs to.
     *
     * This parameter is deprecated and should be omitted.
     */
    compartmentId?: string;
    /**
     * The target fully-qualified domain name (FQDN) within the target zone.
     */
    domain: string;
    /**
     * The type of the target RRSet within the target zone.
     */
    rtype: string;
    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     */
    scope?: string;
    /**
     * The OCID of the view the zone is associated with. Required when accessing a private zone by name.
     */
    viewId?: string;
    /**
     * The name or OCID of the target zone.
     */
    zoneNameOrId: string;
    /**
     * The version of the zone for which data is requested.
     */
    zoneVersion?: string;
}

/**
 * A collection of values returned by getRrset.
 */
export interface GetRrsetResult {
    readonly compartmentId?: string;
    /**
     * The fully qualified domain name where the record can be located.
     */
    readonly domain: string;
    readonly id: string;
    readonly items: outputs.Dns.GetRrsetItem[];
    /**
     * The type of DNS record, such as A or CNAME. For more information, see [Resource Record (RR) TYPEs](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4).
     */
    readonly rtype: string;
    readonly scope?: string;
    readonly viewId?: string;
    readonly zoneNameOrId: string;
    readonly zoneVersion?: string;
}
/**
 * This data source provides details about a specific Rrset resource in Oracle Cloud Infrastructure DNS service.
 *
 * Gets a list of all records in the specified RRSet.
 *
 * The results are sorted by `recordHash` by default. When the zone name is provided as a path parameter
 * and `PRIVATE` is used for the scope query parameter then the viewId query parameter is required.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRrset = oci.Dns.getRrset({
 *     domain: rrsetDomain,
 *     rtype: rrsetRtype,
 *     zoneNameOrId: testZone.id,
 *     scope: rrsetScope,
 *     viewId: testView.id,
 * });
 * ```
 */
export function getRrsetOutput(args: GetRrsetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRrsetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Dns/getRrset:getRrset", {
        "compartmentId": args.compartmentId,
        "domain": args.domain,
        "rtype": args.rtype,
        "scope": args.scope,
        "viewId": args.viewId,
        "zoneNameOrId": args.zoneNameOrId,
        "zoneVersion": args.zoneVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getRrset.
 */
export interface GetRrsetOutputArgs {
    /**
     * The OCID of the compartment the zone belongs to.
     *
     * This parameter is deprecated and should be omitted.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The target fully-qualified domain name (FQDN) within the target zone.
     */
    domain: pulumi.Input<string>;
    /**
     * The type of the target RRSet within the target zone.
     */
    rtype: pulumi.Input<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     */
    scope?: pulumi.Input<string>;
    /**
     * The OCID of the view the zone is associated with. Required when accessing a private zone by name.
     */
    viewId?: pulumi.Input<string>;
    /**
     * The name or OCID of the target zone.
     */
    zoneNameOrId: pulumi.Input<string>;
    /**
     * The version of the zone for which data is requested.
     */
    zoneVersion?: pulumi.Input<string>;
}
