// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Views in Oracle Cloud Infrastructure DNS service.
 *
 * Gets a list of all views within a compartment.
 *
 * The collection can be filtered by display name, id, or lifecycle state. It can be sorted
 * on creation time or displayName both in ASC or DESC order. Note that when no lifecycleState
 * query parameter is provided, the collection does not include views in the DELETED
 * lifecycleState to be consistent with other operations of the API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testViews = oci.Dns.getViews({
 *     compartmentId: compartmentId,
 *     scope: "PRIVATE",
 *     displayName: viewDisplayName,
 *     id: viewId,
 *     state: viewState,
 * });
 * ```
 */
export function getViews(args: GetViewsArgs, opts?: pulumi.InvokeOptions): Promise<GetViewsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Dns/getViews:getViews", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "scope": args.scope,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getViews.
 */
export interface GetViewsArgs {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    /**
     * The displayName of a resource.
     */
    displayName?: string;
    filters?: inputs.Dns.GetViewsFilter[];
    /**
     * The OCID of a resource.
     */
    id?: string;
    /**
     * Value must be `PRIVATE` when listing private views.
     */
    scope?: string;
    /**
     * The state of a resource.
     */
    state?: string;
}

/**
 * A collection of values returned by getViews.
 */
export interface GetViewsResult {
    /**
     * The OCID of the owning compartment.
     */
    readonly compartmentId: string;
    /**
     * The display name of the view.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Dns.GetViewsFilter[];
    /**
     * The OCID of the view.
     */
    readonly id?: string;
    readonly scope?: string;
    /**
     * The current state of the resource.
     */
    readonly state?: string;
    /**
     * The list of views.
     */
    readonly views: outputs.Dns.GetViewsView[];
}
/**
 * This data source provides the list of Views in Oracle Cloud Infrastructure DNS service.
 *
 * Gets a list of all views within a compartment.
 *
 * The collection can be filtered by display name, id, or lifecycle state. It can be sorted
 * on creation time or displayName both in ASC or DESC order. Note that when no lifecycleState
 * query parameter is provided, the collection does not include views in the DELETED
 * lifecycleState to be consistent with other operations of the API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testViews = oci.Dns.getViews({
 *     compartmentId: compartmentId,
 *     scope: "PRIVATE",
 *     displayName: viewDisplayName,
 *     id: viewId,
 *     state: viewState,
 * });
 * ```
 */
export function getViewsOutput(args: GetViewsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetViewsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Dns/getViews:getViews", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "scope": args.scope,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getViews.
 */
export interface GetViewsOutputArgs {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The displayName of a resource.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Dns.GetViewsFilterArgs>[]>;
    /**
     * The OCID of a resource.
     */
    id?: pulumi.Input<string>;
    /**
     * Value must be `PRIVATE` when listing private views.
     */
    scope?: pulumi.Input<string>;
    /**
     * The state of a resource.
     */
    state?: pulumi.Input<string>;
}
