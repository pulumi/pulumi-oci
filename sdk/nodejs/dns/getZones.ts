// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Zones in Oracle Cloud Infrastructure DNS service.
 *
 * Gets a list of all zones in the specified compartment. The collection
 * can be filtered by name, time created, scope, associated view, and zone type.
 * Additionally, for Private DNS, the `scope` query parameter is required when
 * listing private zones.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testZones = oci.Dns.getZones({
 *     compartmentId: _var.compartment_id,
 *     name: _var.zone_name,
 *     nameContains: _var.zone_name_contains,
 *     scope: _var.zone_scope,
 *     state: _var.zone_state,
 *     timeCreatedGreaterThanOrEqualTo: _var.zone_time_created_greater_than_or_equal_to,
 *     timeCreatedLessThan: _var.zone_time_created_less_than,
 *     tsigKeyId: oci_dns_tsig_key.test_tsig_key.id,
 *     viewId: oci_dns_view.test_view.id,
 *     zoneType: _var.zone_zone_type,
 * });
 * ```
 */
export function getZones(args: GetZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetZonesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Dns/getZones:getZones", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "nameContains": args.nameContains,
        "scope": args.scope,
        "sortBy": args.sortBy,
        "sortOrder": args.sortOrder,
        "state": args.state,
        "timeCreatedGreaterThanOrEqualTo": args.timeCreatedGreaterThanOrEqualTo,
        "timeCreatedLessThan": args.timeCreatedLessThan,
        "tsigKeyId": args.tsigKeyId,
        "viewId": args.viewId,
        "zoneType": args.zoneType,
    }, opts);
}

/**
 * A collection of arguments for invoking getZones.
 */
export interface GetZonesArgs {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: string;
    filters?: inputs.Dns.GetZonesFilter[];
    /**
     * A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     */
    name?: string;
    /**
     * Search by zone name. Will match any zone whose name (case-insensitive) contains the provided value.
     */
    nameContains?: string;
    /**
     * Specifies to operate only on resources that have a matching DNS scope. This value will be null 
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     */
    scope?: string;
    /**
     * The field by which to sort zones. Allowed values are: name|zoneType|timeCreated
     */
    sortBy?: string;
    /**
     * The order to sort the resources. Allowed values are: ASC|DESC
     */
    sortOrder?: string;
    /**
     * The state of a resource.
     */
    state?: string;
    /**
     * An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created on or after the indicated time.
     */
    timeCreatedGreaterThanOrEqualTo?: string;
    /**
     * An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created before the indicated time.
     */
    timeCreatedLessThan?: string;
    /**
     * Search for zones that are associated with a TSIG key.
     */
    tsigKeyId?: string;
    /**
     * The OCID of the view the resource is associated with.
     */
    viewId?: string;
    /**
     * Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     */
    zoneType?: string;
}

/**
 * A collection of values returned by getZones.
 */
export interface GetZonesResult {
    /**
     * The OCID of the compartment containing the zone.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.Dns.GetZonesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the zone.
     */
    readonly name?: string;
    readonly nameContains?: string;
    /**
     * The scope of the zone.
     */
    readonly scope?: string;
    readonly sortBy?: string;
    readonly sortOrder?: string;
    /**
     * The current state of the zone resource.
     */
    readonly state?: string;
    readonly timeCreatedGreaterThanOrEqualTo?: string;
    readonly timeCreatedLessThan?: string;
    /**
     * The OCID of the TSIG key.
     */
    readonly tsigKeyId?: string;
    /**
     * The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     */
    readonly viewId?: string;
    /**
     * The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     */
    readonly zoneType?: string;
    /**
     * The list of zones.
     */
    readonly zones: outputs.Dns.GetZonesZone[];
}
/**
 * This data source provides the list of Zones in Oracle Cloud Infrastructure DNS service.
 *
 * Gets a list of all zones in the specified compartment. The collection
 * can be filtered by name, time created, scope, associated view, and zone type.
 * Additionally, for Private DNS, the `scope` query parameter is required when
 * listing private zones.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testZones = oci.Dns.getZones({
 *     compartmentId: _var.compartment_id,
 *     name: _var.zone_name,
 *     nameContains: _var.zone_name_contains,
 *     scope: _var.zone_scope,
 *     state: _var.zone_state,
 *     timeCreatedGreaterThanOrEqualTo: _var.zone_time_created_greater_than_or_equal_to,
 *     timeCreatedLessThan: _var.zone_time_created_less_than,
 *     tsigKeyId: oci_dns_tsig_key.test_tsig_key.id,
 *     viewId: oci_dns_view.test_view.id,
 *     zoneType: _var.zone_zone_type,
 * });
 * ```
 */
export function getZonesOutput(args: GetZonesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetZonesResult> {
    return pulumi.output(args).apply((a: any) => getZones(a, opts))
}

/**
 * A collection of arguments for invoking getZones.
 */
export interface GetZonesOutputArgs {
    /**
     * The OCID of the compartment the resource belongs to.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Dns.GetZonesFilterArgs>[]>;
    /**
     * A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     */
    name?: pulumi.Input<string>;
    /**
     * Search by zone name. Will match any zone whose name (case-insensitive) contains the provided value.
     */
    nameContains?: pulumi.Input<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope. This value will be null 
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     */
    scope?: pulumi.Input<string>;
    /**
     * The field by which to sort zones. Allowed values are: name|zoneType|timeCreated
     */
    sortBy?: pulumi.Input<string>;
    /**
     * The order to sort the resources. Allowed values are: ASC|DESC
     */
    sortOrder?: pulumi.Input<string>;
    /**
     * The state of a resource.
     */
    state?: pulumi.Input<string>;
    /**
     * An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created on or after the indicated time.
     */
    timeCreatedGreaterThanOrEqualTo?: pulumi.Input<string>;
    /**
     * An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created before the indicated time.
     */
    timeCreatedLessThan?: pulumi.Input<string>;
    /**
     * Search for zones that are associated with a TSIG key.
     */
    tsigKeyId?: pulumi.Input<string>;
    /**
     * The OCID of the view the resource is associated with.
     */
    viewId?: pulumi.Input<string>;
    /**
     * Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     */
    zoneType?: pulumi.Input<string>;
}
