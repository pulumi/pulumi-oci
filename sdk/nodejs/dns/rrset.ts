// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Rrset resource in Oracle Cloud Infrastructure DNS service.
 *
 * Replaces records in the specified RRSet. When the zone name is provided as a path parameter
 * and the zone has a scope of `PRIVATE` then the viewId query parameter is required.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRrset = new oci.dns.Rrset("testRrset", {
 *     domain: _var.rrset_domain,
 *     rtype: _var.rrset_rtype,
 *     zoneNameOrId: oci_dns_zone.test_zone.id,
 *     compartmentId: _var.compartment_id,
 *     items: [{
 *         domain: _var.rrset_items_domain,
 *         rdata: _var.rrset_items_rdata,
 *         rtype: _var.rrset_items_rtype,
 *         ttl: _var.rrset_items_ttl,
 *     }],
 *     scope: _var.rrset_scope,
 *     viewId: oci_dns_view.test_view.id,
 * });
 * ```
 *
 * ## Import
 *
 * For legacy Rrsets that were created without using `scope`, these Rrsets can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Dns/rrset:Rrset test_rrset "zoneNameOrId/{zoneNameOrId}/domain/{domain}/rtype/{rtype}"
 * ```
 *  For Rrsets created using `scope` and `view_id`, these Rrsets can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Dns/rrset:Rrset test_rrset "zoneNameOrId/{zoneNameOrId}/domain/{domain}/rtype/{rtype}/scope/{scope}/viewId/{viewId}"
 * ```
 *  skip adding `{view_id}` at the end if Rrset was created without `view_id`.
 */
export class Rrset extends pulumi.CustomResource {
    /**
     * Get an existing Rrset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RrsetState, opts?: pulumi.CustomResourceOptions): Rrset {
        return new Rrset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Dns/rrset:Rrset';

    /**
     * Returns true if the given object is an instance of Rrset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Rrset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Rrset.__pulumiType;
    }

    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     */
    public readonly compartmentId!: pulumi.Output<string | undefined>;
    /**
     * The fully qualified domain name where the record can be located.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * (Updatable) 
     * **NOTE** Omitting `items` at time of create, will delete any existing records in the RRSet
     */
    public readonly items!: pulumi.Output<outputs.Dns.RrsetItem[] | undefined>;
    /**
     * The type of the target RRSet within the target zone.
     */
    public readonly rtype!: pulumi.Output<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope. 
     * This value will be null for zones in the global DNS and `PRIVATE` when creating private Rrsets.
     */
    public readonly scope!: pulumi.Output<string | undefined>;
    /**
     * The OCID of the view the resource is associated with.
     */
    public readonly viewId!: pulumi.Output<string | undefined>;
    /**
     * The name or OCID of the target zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly zoneNameOrId!: pulumi.Output<string>;

    /**
     * Create a Rrset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RrsetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RrsetArgs | RrsetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RrsetState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["items"] = state ? state.items : undefined;
            resourceInputs["rtype"] = state ? state.rtype : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["viewId"] = state ? state.viewId : undefined;
            resourceInputs["zoneNameOrId"] = state ? state.zoneNameOrId : undefined;
        } else {
            const args = argsOrState as RrsetArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.rtype === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rtype'");
            }
            if ((!args || args.zoneNameOrId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneNameOrId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["items"] = args ? args.items : undefined;
            resourceInputs["rtype"] = args ? args.rtype : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["viewId"] = args ? args.viewId : undefined;
            resourceInputs["zoneNameOrId"] = args ? args.zoneNameOrId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Rrset.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Rrset resources.
 */
export interface RrsetState {
    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The fully qualified domain name where the record can be located.
     */
    domain?: pulumi.Input<string>;
    /**
     * (Updatable) 
     * **NOTE** Omitting `items` at time of create, will delete any existing records in the RRSet
     */
    items?: pulumi.Input<pulumi.Input<inputs.Dns.RrsetItem>[]>;
    /**
     * The type of the target RRSet within the target zone.
     */
    rtype?: pulumi.Input<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope. 
     * This value will be null for zones in the global DNS and `PRIVATE` when creating private Rrsets.
     */
    scope?: pulumi.Input<string>;
    /**
     * The OCID of the view the resource is associated with.
     */
    viewId?: pulumi.Input<string>;
    /**
     * The name or OCID of the target zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    zoneNameOrId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Rrset resource.
 */
export interface RrsetArgs {
    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The fully qualified domain name where the record can be located.
     */
    domain: pulumi.Input<string>;
    /**
     * (Updatable) 
     * **NOTE** Omitting `items` at time of create, will delete any existing records in the RRSet
     */
    items?: pulumi.Input<pulumi.Input<inputs.Dns.RrsetItem>[]>;
    /**
     * The type of the target RRSet within the target zone.
     */
    rtype: pulumi.Input<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope. 
     * This value will be null for zones in the global DNS and `PRIVATE` when creating private Rrsets.
     */
    scope?: pulumi.Input<string>;
    /**
     * The OCID of the view the resource is associated with.
     */
    viewId?: pulumi.Input<string>;
    /**
     * The name or OCID of the target zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    zoneNameOrId: pulumi.Input<string>;
}
