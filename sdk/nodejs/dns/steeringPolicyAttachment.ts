// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Steering Policy Attachment resource in Oracle Cloud Infrastructure DNS service.
 *
 * Creates a new attachment between a steering policy and a domain, giving the
 * policy permission to answer queries for the specified domain. A steering policy must
 * be attached to a domain for the policy to answer DNS queries for that domain.
 *
 * For the purposes of access control, the attachment is automatically placed
 * into the same compartment as the domain's zone.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSteeringPolicyAttachment = new oci.dns.SteeringPolicyAttachment("test_steering_policy_attachment", {
 *     domainName: steeringPolicyAttachmentDomainName,
 *     steeringPolicyId: testSteeringPolicy.id,
 *     zoneId: testZone.id,
 *     displayName: steeringPolicyAttachmentDisplayName,
 * });
 * ```
 *
 * ## Import
 *
 * SteeringPolicyAttachments can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Dns/steeringPolicyAttachment:SteeringPolicyAttachment test_steering_policy_attachment "id"
 * ```
 */
export class SteeringPolicyAttachment extends pulumi.CustomResource {
    /**
     * Get an existing SteeringPolicyAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SteeringPolicyAttachmentState, opts?: pulumi.CustomResourceOptions): SteeringPolicyAttachment {
        return new SteeringPolicyAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Dns/steeringPolicyAttachment:SteeringPolicyAttachment';

    /**
     * Returns true if the given object is an instance of SteeringPolicyAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SteeringPolicyAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SteeringPolicyAttachment.__pulumiType;
    }

    /**
     * The OCID of the compartment containing the steering policy attachment.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The attached domain within the attached zone. `domainName` is case insensitive.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     */
    public /*out*/ readonly rtypes!: pulumi.Output<string[]>;
    /**
     * The canonical absolute URL of the resource.
     */
    public /*out*/ readonly self!: pulumi.Output<string>;
    /**
     * The current state of the resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The OCID of the attached steering policy.
     */
    public readonly steeringPolicyId!: pulumi.Output<string>;
    /**
     * The date and time the resource was created, expressed in RFC 3339 timestamp format.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The OCID of the attached zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a SteeringPolicyAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SteeringPolicyAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SteeringPolicyAttachmentArgs | SteeringPolicyAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SteeringPolicyAttachmentState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["rtypes"] = state ? state.rtypes : undefined;
            resourceInputs["self"] = state ? state.self : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["steeringPolicyId"] = state ? state.steeringPolicyId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as SteeringPolicyAttachmentArgs | undefined;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.steeringPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'steeringPolicyId'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["steeringPolicyId"] = args ? args.steeringPolicyId : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["rtypes"] = undefined /*out*/;
            resourceInputs["self"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SteeringPolicyAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SteeringPolicyAttachment resources.
 */
export interface SteeringPolicyAttachmentState {
    /**
     * The OCID of the compartment containing the steering policy attachment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The attached domain within the attached zone. `domainName` is case insensitive.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     */
    rtypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The canonical absolute URL of the resource.
     */
    self?: pulumi.Input<string>;
    /**
     * The current state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * The OCID of the attached steering policy.
     */
    steeringPolicyId?: pulumi.Input<string>;
    /**
     * The date and time the resource was created, expressed in RFC 3339 timestamp format.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The OCID of the attached zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SteeringPolicyAttachment resource.
 */
export interface SteeringPolicyAttachmentArgs {
    /**
     * (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The attached domain within the attached zone. `domainName` is case insensitive.
     */
    domainName: pulumi.Input<string>;
    /**
     * The OCID of the attached steering policy.
     */
    steeringPolicyId: pulumi.Input<string>;
    /**
     * The OCID of the attached zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    zoneId: pulumi.Input<string>;
}
