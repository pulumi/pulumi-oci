// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Zone resource in Oracle Cloud Infrastructure DNS service.
 *
 * Creates a new zone in the specified compartment. Additionally, for Private DNS,
 * the `scope` and `viewId` query parameters are required when creating private zones.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testZone = new oci.dns.Zone("testZone", {
 *     compartmentId: _var.compartment_id,
 *     zoneType: _var.zone_zone_type,
 *     definedTags: _var.zone_defined_tags,
 *     externalMasters: [{
 *         address: _var.zone_external_masters_address,
 *         port: _var.zone_external_masters_port,
 *         tsigKeyId: oci_dns_tsig_key.test_tsig_key.id,
 *     }],
 *     freeformTags: _var.zone_freeform_tags,
 *     scope: _var.zone_scope,
 *     viewId: oci_dns_view.test_view.id,
 * });
 * ```
 *
 * ## Import
 *
 * For legacy Zones that were created without using `scope`, these Zones can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Dns/zone:Zone test_zone "id"
 * ```
 *
 *  For Zones created using `scope` and `view_id`, these Zones can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Dns/zone:Zone test_zone "zoneNameOrId/{zoneNameOrId}/scope/{scope}/viewId/{viewId}"
 * ```
 *
 *  skip adding `{view_id}` at the end if Zone was created without `view_id`.
 */
export class Zone extends pulumi.CustomResource {
    /**
     * Get an existing Zone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneState, opts?: pulumi.CustomResourceOptions): Zone {
        return new Zone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Dns/zone:Zone';

    /**
     * Returns true if the given object is an instance of Zone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Zone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Zone.__pulumiType;
    }

    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     */
    public readonly externalMasters!: pulumi.Output<outputs.Dns.ZoneExternalMaster[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     */
    public /*out*/ readonly isProtected!: pulumi.Output<boolean>;
    /**
     * The name of the zone.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The authoritative nameservers for the zone.
     */
    public /*out*/ readonly nameservers!: pulumi.Output<outputs.Dns.ZoneNameserver[]>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope. 
     * This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
     */
    public readonly scope!: pulumi.Output<string | undefined>;
    /**
     * The canonical absolute URL of the resource.
     */
    public /*out*/ readonly self!: pulumi.Output<string>;
    /**
     * The current serial of the zone. As seen in the zone's SOA record.
     */
    public /*out*/ readonly serial!: pulumi.Output<number>;
    /**
     * The current state of the zone resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;
    /**
     * The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     */
    public readonly viewId!: pulumi.Output<string | undefined>;
    /**
     * The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     */
    public readonly zoneType!: pulumi.Output<string>;

    /**
     * Create a Zone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneArgs | ZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZoneState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["externalMasters"] = state ? state.externalMasters : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isProtected"] = state ? state.isProtected : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nameservers"] = state ? state.nameservers : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["self"] = state ? state.self : undefined;
            resourceInputs["serial"] = state ? state.serial : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["viewId"] = state ? state.viewId : undefined;
            resourceInputs["zoneType"] = state ? state.zoneType : undefined;
        } else {
            const args = argsOrState as ZoneArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.zoneType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneType'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["externalMasters"] = args ? args.externalMasters : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["viewId"] = args ? args.viewId : undefined;
            resourceInputs["zoneType"] = args ? args.zoneType : undefined;
            resourceInputs["isProtected"] = undefined /*out*/;
            resourceInputs["nameservers"] = undefined /*out*/;
            resourceInputs["self"] = undefined /*out*/;
            resourceInputs["serial"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Zone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Zone resources.
 */
export interface ZoneState {
    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     */
    externalMasters?: pulumi.Input<pulumi.Input<inputs.Dns.ZoneExternalMaster>[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     */
    isProtected?: pulumi.Input<boolean>;
    /**
     * The name of the zone.
     */
    name?: pulumi.Input<string>;
    /**
     * The authoritative nameservers for the zone.
     */
    nameservers?: pulumi.Input<pulumi.Input<inputs.Dns.ZoneNameserver>[]>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope. 
     * This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
     */
    scope?: pulumi.Input<string>;
    /**
     * The canonical absolute URL of the resource.
     */
    self?: pulumi.Input<string>;
    /**
     * The current serial of the zone. As seen in the zone's SOA record.
     */
    serial?: pulumi.Input<number>;
    /**
     * The current state of the zone resource.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the resource was created in "YYYY-MM-ddThh:mm:ssZ" format with a Z offset, as defined by RFC 3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone's SOA record is derived.
     */
    version?: pulumi.Input<string>;
    /**
     * The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     */
    viewId?: pulumi.Input<string>;
    /**
     * The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     */
    zoneType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Zone resource.
 */
export interface ZoneArgs {
    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     */
    externalMasters?: pulumi.Input<pulumi.Input<inputs.Dns.ZoneExternalMaster>[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name of the zone.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope. 
     * This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
     */
    scope?: pulumi.Input<string>;
    /**
     * The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     */
    viewId?: pulumi.Input<string>;
    /**
     * The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     */
    zoneType: pulumi.Input<string>;
}
