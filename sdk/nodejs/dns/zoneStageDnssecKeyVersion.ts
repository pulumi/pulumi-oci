// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Zone Stage Dnssec Key Version resource in Oracle Cloud Infrastructure DNS service.
 *
 * Stages a new `DnssecKeyVersion` on the zone. Staging is a process that generates a new "successor" key version
 * that replaces an existing "predecessor" key version.
 * **Note:** A new key-signing key (KSK) version is inert until you update the parent zone DS records.
 *
 * For more information, see the [DNSSEC](https://docs.cloud.oracle.com/iaas/Content/DNS/Concepts/dnssec.htm) documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testZoneStageDnssecKeyVersion = new oci.dns.ZoneStageDnssecKeyVersion("test_zone_stage_dnssec_key_version", {
 *     predecessorDnssecKeyVersionUuid: zoneStageDnssecKeyVersionPredecessorDnssecKeyVersionUuid,
 *     zoneId: testZone.id,
 *     scope: zoneStageDnssecKeyVersionScope,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class ZoneStageDnssecKeyVersion extends pulumi.CustomResource {
    /**
     * Get an existing ZoneStageDnssecKeyVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneStageDnssecKeyVersionState, opts?: pulumi.CustomResourceOptions): ZoneStageDnssecKeyVersion {
        return new ZoneStageDnssecKeyVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Dns/zoneStageDnssecKeyVersion:ZoneStageDnssecKeyVersion';

    /**
     * Returns true if the given object is an instance of ZoneStageDnssecKeyVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ZoneStageDnssecKeyVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZoneStageDnssecKeyVersion.__pulumiType;
    }

    /**
     * The UUID of the `DnssecKeyVersion` for which a new successor should be generated.
     */
    declare public readonly predecessorDnssecKeyVersionUuid: pulumi.Output<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     */
    declare public readonly scope: pulumi.Output<string>;
    /**
     * The OCID of the target zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly zoneId: pulumi.Output<string>;

    /**
     * Create a ZoneStageDnssecKeyVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneStageDnssecKeyVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneStageDnssecKeyVersionArgs | ZoneStageDnssecKeyVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZoneStageDnssecKeyVersionState | undefined;
            resourceInputs["predecessorDnssecKeyVersionUuid"] = state?.predecessorDnssecKeyVersionUuid;
            resourceInputs["scope"] = state?.scope;
            resourceInputs["zoneId"] = state?.zoneId;
        } else {
            const args = argsOrState as ZoneStageDnssecKeyVersionArgs | undefined;
            if (args?.predecessorDnssecKeyVersionUuid === undefined && !opts.urn) {
                throw new Error("Missing required property 'predecessorDnssecKeyVersionUuid'");
            }
            if (args?.zoneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["predecessorDnssecKeyVersionUuid"] = args?.predecessorDnssecKeyVersionUuid;
            resourceInputs["scope"] = args?.scope;
            resourceInputs["zoneId"] = args?.zoneId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZoneStageDnssecKeyVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ZoneStageDnssecKeyVersion resources.
 */
export interface ZoneStageDnssecKeyVersionState {
    /**
     * The UUID of the `DnssecKeyVersion` for which a new successor should be generated.
     */
    predecessorDnssecKeyVersionUuid?: pulumi.Input<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     */
    scope?: pulumi.Input<string>;
    /**
     * The OCID of the target zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ZoneStageDnssecKeyVersion resource.
 */
export interface ZoneStageDnssecKeyVersionArgs {
    /**
     * The UUID of the `DnssecKeyVersion` for which a new successor should be generated.
     */
    predecessorDnssecKeyVersionUuid: pulumi.Input<string>;
    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     */
    scope?: pulumi.Input<string>;
    /**
     * The OCID of the target zone.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    zoneId: pulumi.Input<string>;
}
