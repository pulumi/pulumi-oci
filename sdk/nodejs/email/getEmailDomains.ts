// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Email Domains in Oracle Cloud Infrastructure Email service.
 *
 * Lists email domains in the specified compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEmailDomains = oci.Email.getEmailDomains({
 *     compartmentId: compartmentId,
 *     id: emailDomainId,
 *     name: emailDomainName,
 *     state: emailDomainState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEmailDomains(args: GetEmailDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetEmailDomainsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Email/getEmailDomains:getEmailDomains", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getEmailDomains.
 */
export interface GetEmailDomainsArgs {
    /**
     * The OCID for the compartment.
     */
    compartmentId: string;
    filters?: inputs.Email.GetEmailDomainsFilter[];
    /**
     * A filter to only return resources that match the given id exactly.
     */
    id?: string;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name?: string;
    /**
     * Filter returned list by specified lifecycle state. This parameter is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getEmailDomains.
 */
export interface GetEmailDomainsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains this email domain.
     */
    readonly compartmentId: string;
    /**
     * The list of email_domain_collection.
     */
    readonly emailDomainCollections: outputs.Email.GetEmailDomainsEmailDomainCollection[];
    readonly filters?: outputs.Email.GetEmailDomainsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the email domain.
     */
    readonly id?: string;
    /**
     * The name of the email domain in the Internet Domain Name System (DNS).  Example: `mydomain.example.com`
     */
    readonly name?: string;
    /**
     * The current state of the email domain.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Email Domains in Oracle Cloud Infrastructure Email service.
 *
 * Lists email domains in the specified compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEmailDomains = oci.Email.getEmailDomains({
 *     compartmentId: compartmentId,
 *     id: emailDomainId,
 *     name: emailDomainName,
 *     state: emailDomainState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEmailDomainsOutput(args: GetEmailDomainsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmailDomainsResult> {
    return pulumi.output(args).apply((a: any) => getEmailDomains(a, opts))
}

/**
 * A collection of arguments for invoking getEmailDomains.
 */
export interface GetEmailDomainsOutputArgs {
    /**
     * The OCID for the compartment.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Email.GetEmailDomainsFilterArgs>[]>;
    /**
     * A filter to only return resources that match the given id exactly.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to only return resources that match the given name exactly.
     */
    name?: pulumi.Input<string>;
    /**
     * Filter returned list by specified lifecycle state. This parameter is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
