// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Em Warehouse resource in Oracle Cloud Infrastructure Em Warehouse service.
 *
 * Gets a EmWarehouse by identifier
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEmWarehouse = oci.EmWarehouse.getEmWarehouse({
 *     emWarehouseId: testEmWarehouseOciEmWarehouseEmWarehouse.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEmWarehouse(args: GetEmWarehouseArgs, opts?: pulumi.InvokeOptions): Promise<GetEmWarehouseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:EmWarehouse/getEmWarehouse:getEmWarehouse", {
        "emWarehouseId": args.emWarehouseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEmWarehouse.
 */
export interface GetEmWarehouseArgs {
    /**
     * unique EmWarehouse identifier
     */
    emWarehouseId: string;
}

/**
 * A collection of values returned by getEmWarehouse.
 */
export interface GetEmWarehouseResult {
    /**
     * Compartment Identifier
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * EmWarehouse Identifier, can be renamed
     */
    readonly displayName: string;
    /**
     * EMBridge Identifier
     */
    readonly emBridgeId: string;
    readonly emWarehouseId: string;
    /**
     * Type of the EmWarehouse.
     */
    readonly emWarehouseType: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * Unique identifier that is immutable on creation
     */
    readonly id: string;
    /**
     * Data Flow Run Status Message
     */
    readonly latestEtlRunMessage: string;
    /**
     * Data Flow Run Status
     */
    readonly latestEtlRunStatus: string;
    /**
     * Data Flow Run Total Time
     */
    readonly latestEtlRunTime: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * operations Insights Warehouse Identifier
     */
    readonly operationsInsightsWarehouseId: string;
    /**
     * The current state of the EmWarehouse.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The time the the EmWarehouse was created. An RFC3339 formatted datetime string
     */
    readonly timeCreated: string;
    /**
     * The time the EmWarehouse was updated. An RFC3339 formatted datetime string
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Em Warehouse resource in Oracle Cloud Infrastructure Em Warehouse service.
 *
 * Gets a EmWarehouse by identifier
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEmWarehouse = oci.EmWarehouse.getEmWarehouse({
 *     emWarehouseId: testEmWarehouseOciEmWarehouseEmWarehouse.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEmWarehouseOutput(args: GetEmWarehouseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmWarehouseResult> {
    return pulumi.output(args).apply((a: any) => getEmWarehouse(a, opts))
}

/**
 * A collection of arguments for invoking getEmWarehouse.
 */
export interface GetEmWarehouseOutputArgs {
    /**
     * unique EmWarehouse identifier
     */
    emWarehouseId: pulumi.Input<string>;
}
