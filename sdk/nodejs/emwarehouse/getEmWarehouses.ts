// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Em Warehouses in Oracle Cloud Infrastructure Em Warehouse service.
 *
 * Returns a list of EmWarehouses.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEmWarehouses = oci.EmWarehouse.getEmWarehouses({
 *     compartmentId: compartmentId,
 *     displayName: emWarehouseDisplayName,
 *     id: emWarehouseId,
 *     operationsInsightsWarehouseId: testOperationsInsightsWarehouse.id,
 *     state: emWarehouseState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEmWarehouses(args?: GetEmWarehousesArgs, opts?: pulumi.InvokeOptions): Promise<GetEmWarehousesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:EmWarehouse/getEmWarehouses:getEmWarehouses", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "operationsInsightsWarehouseId": args.operationsInsightsWarehouseId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getEmWarehouses.
 */
export interface GetEmWarehousesArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.EmWarehouse.GetEmWarehousesFilter[];
    /**
     * unique EmWarehouse identifier
     */
    id?: string;
    /**
     * unique operationsInsightsWarehouseId identifier
     */
    operationsInsightsWarehouseId?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getEmWarehouses.
 */
export interface GetEmWarehousesResult {
    /**
     * Compartment Identifier
     */
    readonly compartmentId?: string;
    /**
     * EmWarehouse Identifier, can be renamed
     */
    readonly displayName?: string;
    /**
     * The list of em_warehouse_collection.
     */
    readonly emWarehouseCollections: outputs.EmWarehouse.GetEmWarehousesEmWarehouseCollection[];
    readonly filters?: outputs.EmWarehouse.GetEmWarehousesFilter[];
    /**
     * Unique identifier that is immutable on creation
     */
    readonly id?: string;
    /**
     * operations Insights Warehouse Identifier
     */
    readonly operationsInsightsWarehouseId?: string;
    /**
     * The current state of the EmWarehouse.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Em Warehouses in Oracle Cloud Infrastructure Em Warehouse service.
 *
 * Returns a list of EmWarehouses.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEmWarehouses = oci.EmWarehouse.getEmWarehouses({
 *     compartmentId: compartmentId,
 *     displayName: emWarehouseDisplayName,
 *     id: emWarehouseId,
 *     operationsInsightsWarehouseId: testOperationsInsightsWarehouse.id,
 *     state: emWarehouseState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getEmWarehousesOutput(args?: GetEmWarehousesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEmWarehousesResult> {
    return pulumi.output(args).apply((a: any) => getEmWarehouses(a, opts))
}

/**
 * A collection of arguments for invoking getEmWarehouses.
 */
export interface GetEmWarehousesOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.EmWarehouse.GetEmWarehousesFilterArgs>[]>;
    /**
     * unique EmWarehouse identifier
     */
    id?: pulumi.Input<string>;
    /**
     * unique operationsInsightsWarehouseId identifier
     */
    operationsInsightsWarehouseId?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
