// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the File System Quota Rule resource in Oracle Cloud Infrastructure File Storage service.
 *
 * Create an FS level, user or group quota rule given the `fileSystemId`, `principalId`, `principalType` and
 * `isHardQuota` parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFileSystemQuotaRule = new oci.filestorage.FileSystemQuotaRule("test_file_system_quota_rule", {
 *     fileSystemId: testFileSystem.id,
 *     isHardQuota: fileSystemQuotaRuleIsHardQuota,
 *     principalType: fileSystemQuotaRulePrincipalType,
 *     quotaLimitInGigabytes: fileSystemQuotaRuleQuotaLimitInGigabytes,
 *     displayName: fileSystemQuotaRuleDisplayName,
 *     principalId: testPrincipal.id,
 * });
 * ```
 *
 * ## Import
 *
 * FileSystemQuotaRules can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:FileStorage/fileSystemQuotaRule:FileSystemQuotaRule test_file_system_quota_rule "fileSystems/{fileSystemId}/quotaRules/{quotaRuleId}"
 * ```
 */
export class FileSystemQuotaRule extends pulumi.CustomResource {
    /**
     * Get an existing FileSystemQuotaRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileSystemQuotaRuleState, opts?: pulumi.CustomResourceOptions): FileSystemQuotaRule {
        return new FileSystemQuotaRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:FileStorage/fileSystemQuotaRule:FileSystemQuotaRule';

    /**
     * Returns true if the given object is an instance of FileSystemQuotaRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FileSystemQuotaRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FileSystemQuotaRule.__pulumiType;
    }

    public readonly areViolatorsOnly!: pulumi.Output<boolean | undefined>;
    /**
     * (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. Example: `UserXYZ's quota`
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     */
    public readonly fileSystemId!: pulumi.Output<string>;
    /**
     * The flag is an identifier to tell whether the quota rule will be enforced. If `isHardQuota` is true, the quota rule will be enforced so the write will be blocked if usage exceeds the hard quota limit. If `isHardQuota` is false, usage can exceed the soft quota limit. An alarm or notification will be sent to the customer, if the specific usage exceeds.
     */
    public readonly isHardQuota!: pulumi.Output<boolean>;
    /**
     * An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
     */
    public readonly principalId!: pulumi.Output<number>;
    /**
     * The type of the owner of this quota rule and usage.
     */
    public readonly principalType!: pulumi.Output<string>;
    /**
     * (Updatable) The value of the quota rule. The unit is Gigabyte. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly quotaLimitInGigabytes!: pulumi.Output<number>;
    public readonly quotaRuleId!: pulumi.Output<string>;
    /**
     * The date and time the quota rule was started, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time the quota rule was last updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a FileSystemQuotaRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FileSystemQuotaRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileSystemQuotaRuleArgs | FileSystemQuotaRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileSystemQuotaRuleState | undefined;
            resourceInputs["areViolatorsOnly"] = state ? state.areViolatorsOnly : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["fileSystemId"] = state ? state.fileSystemId : undefined;
            resourceInputs["isHardQuota"] = state ? state.isHardQuota : undefined;
            resourceInputs["principalId"] = state ? state.principalId : undefined;
            resourceInputs["principalType"] = state ? state.principalType : undefined;
            resourceInputs["quotaLimitInGigabytes"] = state ? state.quotaLimitInGigabytes : undefined;
            resourceInputs["quotaRuleId"] = state ? state.quotaRuleId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as FileSystemQuotaRuleArgs | undefined;
            if ((!args || args.fileSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemId'");
            }
            if ((!args || args.isHardQuota === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isHardQuota'");
            }
            if ((!args || args.principalType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'principalType'");
            }
            if ((!args || args.quotaLimitInGigabytes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'quotaLimitInGigabytes'");
            }
            resourceInputs["areViolatorsOnly"] = args ? args.areViolatorsOnly : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["fileSystemId"] = args ? args.fileSystemId : undefined;
            resourceInputs["isHardQuota"] = args ? args.isHardQuota : undefined;
            resourceInputs["principalId"] = args ? args.principalId : undefined;
            resourceInputs["principalType"] = args ? args.principalType : undefined;
            resourceInputs["quotaLimitInGigabytes"] = args ? args.quotaLimitInGigabytes : undefined;
            resourceInputs["quotaRuleId"] = args ? args.quotaRuleId : undefined;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FileSystemQuotaRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FileSystemQuotaRule resources.
 */
export interface FileSystemQuotaRuleState {
    areViolatorsOnly?: pulumi.Input<boolean>;
    /**
     * (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. Example: `UserXYZ's quota`
     */
    displayName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     */
    fileSystemId?: pulumi.Input<string>;
    /**
     * The flag is an identifier to tell whether the quota rule will be enforced. If `isHardQuota` is true, the quota rule will be enforced so the write will be blocked if usage exceeds the hard quota limit. If `isHardQuota` is false, usage can exceed the soft quota limit. An alarm or notification will be sent to the customer, if the specific usage exceeds.
     */
    isHardQuota?: pulumi.Input<boolean>;
    /**
     * An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
     */
    principalId?: pulumi.Input<number>;
    /**
     * The type of the owner of this quota rule and usage.
     */
    principalType?: pulumi.Input<string>;
    /**
     * (Updatable) The value of the quota rule. The unit is Gigabyte. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    quotaLimitInGigabytes?: pulumi.Input<number>;
    quotaRuleId?: pulumi.Input<string>;
    /**
     * The date and time the quota rule was started, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the quota rule was last updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FileSystemQuotaRule resource.
 */
export interface FileSystemQuotaRuleArgs {
    areViolatorsOnly?: pulumi.Input<boolean>;
    /**
     * (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. Example: `UserXYZ's quota`
     */
    displayName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     */
    fileSystemId: pulumi.Input<string>;
    /**
     * The flag is an identifier to tell whether the quota rule will be enforced. If `isHardQuota` is true, the quota rule will be enforced so the write will be blocked if usage exceeds the hard quota limit. If `isHardQuota` is false, usage can exceed the soft quota limit. An alarm or notification will be sent to the customer, if the specific usage exceeds.
     */
    isHardQuota: pulumi.Input<boolean>;
    /**
     * An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
     */
    principalId?: pulumi.Input<number>;
    /**
     * The type of the owner of this quota rule and usage.
     */
    principalType: pulumi.Input<string>;
    /**
     * (Updatable) The value of the quota rule. The unit is Gigabyte. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    quotaLimitInGigabytes: pulumi.Input<number>;
    quotaRuleId?: pulumi.Input<string>;
}
