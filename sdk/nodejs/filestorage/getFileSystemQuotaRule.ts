// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific File System Quota Rule resource in Oracle Cloud Infrastructure File Storage service.
 *
 * Get an FS level, user or group quota rule given the `fileSystemId` and `quotaRuleId` parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFileSystemQuotaRule = oci.FileStorage.getFileSystemQuotaRule({
 *     fileSystemId: testFileSystem.id,
 *     quotaRuleId: testRule.id,
 * });
 * ```
 */
export function getFileSystemQuotaRule(args: GetFileSystemQuotaRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetFileSystemQuotaRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FileStorage/getFileSystemQuotaRule:getFileSystemQuotaRule", {
        "areViolatorsOnly": args.areViolatorsOnly,
        "fileSystemId": args.fileSystemId,
        "quotaRuleId": args.quotaRuleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFileSystemQuotaRule.
 */
export interface GetFileSystemQuotaRuleArgs {
    areViolatorsOnly?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     */
    fileSystemId: string;
    /**
     * The identifier of the quota rule. It is the base64 encoded string of the tuple <principalId, principalType, isHardQuota>.
     */
    quotaRuleId?: string;
}

/**
 * A collection of values returned by getFileSystemQuotaRule.
 */
export interface GetFileSystemQuotaRuleResult {
    readonly areViolatorsOnly?: string;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. Example: `UserXYZ's quota`
     */
    readonly displayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file System.
     */
    readonly fileSystemId: string;
    /**
     * The identifier of the quota rule. It is the base64 encoded string of the tuple <principalId, principalType, isHardQuota>.
     */
    readonly id: string;
    /**
     * The flag is an identifier to tell whether the quota rule will be enforced. If `isHardQuota` is false, the quota rule will be enforced so the usage cannot exceed the hard quota limit. If `isHardQuota` is true, usage can exceed the soft quota limit. An alarm or notification will be sent to the customer, if the specific usage exceeds.
     */
    readonly isHardQuota: boolean;
    /**
     * An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
     */
    readonly principalId: number;
    /**
     * The type of the owner of this quota rule and usage.
     */
    readonly principalType: string;
    /**
     * The value of the quota rule. The unit is Gigabyte.
     */
    readonly quotaLimitInGigabytes: number;
    readonly quotaRuleId?: string;
    /**
     * The date and time the quota rule was started, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    readonly timeCreated: string;
    /**
     * The date and time the quota rule was last updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific File System Quota Rule resource in Oracle Cloud Infrastructure File Storage service.
 *
 * Get an FS level, user or group quota rule given the `fileSystemId` and `quotaRuleId` parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFileSystemQuotaRule = oci.FileStorage.getFileSystemQuotaRule({
 *     fileSystemId: testFileSystem.id,
 *     quotaRuleId: testRule.id,
 * });
 * ```
 */
export function getFileSystemQuotaRuleOutput(args: GetFileSystemQuotaRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFileSystemQuotaRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FileStorage/getFileSystemQuotaRule:getFileSystemQuotaRule", {
        "areViolatorsOnly": args.areViolatorsOnly,
        "fileSystemId": args.fileSystemId,
        "quotaRuleId": args.quotaRuleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFileSystemQuotaRule.
 */
export interface GetFileSystemQuotaRuleOutputArgs {
    areViolatorsOnly?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     */
    fileSystemId: pulumi.Input<string>;
    /**
     * The identifier of the quota rule. It is the base64 encoded string of the tuple <principalId, principalType, isHardQuota>.
     */
    quotaRuleId?: pulumi.Input<string>;
}
