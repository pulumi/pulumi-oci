// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Mount Targets in Oracle Cloud Infrastructure File Storage service.
 *
 * Lists the mount target resources in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMountTargets = oci.FileStorage.getMountTargets({
 *     availabilityDomain: _var.mount_target_availability_domain,
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.mount_target_display_name,
 *     exportSetId: oci_file_storage_export_set.test_export_set.id,
 *     id: _var.mount_target_id,
 *     state: _var.mount_target_state,
 * });
 * ```
 */
export function getMountTargets(args: GetMountTargetsArgs, opts?: pulumi.InvokeOptions): Promise<GetMountTargetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FileStorage/getMountTargets:getMountTargets", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "exportSetId": args.exportSetId,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMountTargets.
 */
export interface GetMountTargetsArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     */
    displayName?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export set.
     */
    exportSetId?: string;
    filters?: inputs.FileStorage.GetMountTargetsFilter[];
    /**
     * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     */
    id?: string;
    /**
     * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state?: string;
}

/**
 * A collection of values returned by getMountTargets.
 */
export interface GetMountTargetsResult {
    /**
     * The availability domain the mount target is in. May be unset as a blank or NULL value.  Example: `Uocm:PHX-AD-1`
     */
    readonly availabilityDomain: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the mount target.
     */
    readonly compartmentId: string;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My mount target`
     */
    readonly displayName?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated export set. Controls what file systems will be exported through Network File System (NFS) protocol on this mount target.
     */
    readonly exportSetId?: string;
    readonly filters?: outputs.FileStorage.GetMountTargetsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the mount target.
     */
    readonly id?: string;
    /**
     * The list of mount_targets.
     */
    readonly mountTargets: outputs.FileStorage.GetMountTargetsMountTarget[];
    /**
     * The current state of the mount target.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Mount Targets in Oracle Cloud Infrastructure File Storage service.
 *
 * Lists the mount target resources in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMountTargets = oci.FileStorage.getMountTargets({
 *     availabilityDomain: _var.mount_target_availability_domain,
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.mount_target_display_name,
 *     exportSetId: oci_file_storage_export_set.test_export_set.id,
 *     id: _var.mount_target_id,
 *     state: _var.mount_target_state,
 * });
 * ```
 */
export function getMountTargetsOutput(args: GetMountTargetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMountTargetsResult> {
    return pulumi.output(args).apply((a: any) => getMountTargets(a, opts))
}

/**
 * A collection of arguments for invoking getMountTargets.
 */
export interface GetMountTargetsOutputArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     */
    displayName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export set.
     */
    exportSetId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FileStorage.GetMountTargetsFilterArgs>[]>;
    /**
     * Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     */
    id?: pulumi.Input<string>;
    /**
     * Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     */
    state?: pulumi.Input<string>;
}
