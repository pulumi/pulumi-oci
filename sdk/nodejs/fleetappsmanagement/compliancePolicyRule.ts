// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Compliance Policy Rule resource in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Creates a compliance policy rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCompliancePolicyRule = new oci.fleetappsmanagement.CompliancePolicyRule("test_compliance_policy_rule", {
 *     compliancePolicyId: testCompliancePolicy.id,
 *     displayName: compliancePolicyRuleDisplayName,
 *     patchSelection: {
 *         selectionType: compliancePolicyRulePatchSelectionSelectionType,
 *         daysSinceRelease: compliancePolicyRulePatchSelectionDaysSinceRelease,
 *         patchLevel: compliancePolicyRulePatchSelectionPatchLevel,
 *         patchName: testPatch.name,
 *     },
 *     patchTypeIds: testPatchType.id,
 *     productVersion: {
 *         version: compliancePolicyRuleProductVersionVersion,
 *         isApplicableForAllHigherVersions: compliancePolicyRuleProductVersionIsApplicableForAllHigherVersions,
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     gracePeriod: compliancePolicyRuleGracePeriod,
 *     severities: compliancePolicyRuleSeverity,
 * });
 * ```
 *
 * ## Import
 *
 * CompliancePolicyRules can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule test_compliance_policy_rule "id"
 * ```
 */
export class CompliancePolicyRule extends pulumi.CustomResource {
    /**
     * Get an existing CompliancePolicyRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CompliancePolicyRuleState, opts?: pulumi.CustomResourceOptions): CompliancePolicyRule {
        return new CompliancePolicyRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:FleetAppsManagement/compliancePolicyRule:CompliancePolicyRule';

    /**
     * Returns true if the given object is an instance of CompliancePolicyRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CompliancePolicyRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CompliancePolicyRule.__pulumiType;
    }

    /**
     * The OCID of the compartment the CompliancePolicyRule belongs to.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
     */
    declare public readonly compliancePolicyId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
     */
    declare public readonly gracePeriod: pulumi.Output<string>;
    /**
     * A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * (Updatable) Patch Selection Details
     */
    declare public readonly patchSelection: pulumi.Output<outputs.FleetAppsManagement.CompliancePolicyRulePatchSelection>;
    /**
     * (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
     */
    declare public readonly patchTypeIds: pulumi.Output<string[]>;
    /**
     * (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
     */
    declare public readonly productVersion: pulumi.Output<outputs.FleetAppsManagement.CompliancePolicyRuleProductVersion>;
    /**
     * (Updatable) Severity to which this CompliancePolicyRule applies.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly severities: pulumi.Output<string[]>;
    /**
     * The current state of the CompliancePolicyRule.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a CompliancePolicyRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CompliancePolicyRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CompliancePolicyRuleArgs | CompliancePolicyRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CompliancePolicyRuleState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["compliancePolicyId"] = state?.compliancePolicyId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["gracePeriod"] = state?.gracePeriod;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["patchSelection"] = state?.patchSelection;
            resourceInputs["patchTypeIds"] = state?.patchTypeIds;
            resourceInputs["productVersion"] = state?.productVersion;
            resourceInputs["severities"] = state?.severities;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as CompliancePolicyRuleArgs | undefined;
            if (args?.compliancePolicyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compliancePolicyId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.patchSelection === undefined && !opts.urn) {
                throw new Error("Missing required property 'patchSelection'");
            }
            if (args?.patchTypeIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'patchTypeIds'");
            }
            if (args?.productVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'productVersion'");
            }
            resourceInputs["compliancePolicyId"] = args?.compliancePolicyId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["gracePeriod"] = args?.gracePeriod;
            resourceInputs["patchSelection"] = args?.patchSelection;
            resourceInputs["patchTypeIds"] = args?.patchTypeIds;
            resourceInputs["productVersion"] = args?.productVersion;
            resourceInputs["severities"] = args?.severities;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CompliancePolicyRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CompliancePolicyRule resources.
 */
export interface CompliancePolicyRuleState {
    /**
     * The OCID of the compartment the CompliancePolicyRule belongs to.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
     */
    compliancePolicyId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
     */
    gracePeriod?: pulumi.Input<string>;
    /**
     * A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Patch Selection Details
     */
    patchSelection?: pulumi.Input<inputs.FleetAppsManagement.CompliancePolicyRulePatchSelection>;
    /**
     * (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
     */
    patchTypeIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
     */
    productVersion?: pulumi.Input<inputs.FleetAppsManagement.CompliancePolicyRuleProductVersion>;
    /**
     * (Updatable) Severity to which this CompliancePolicyRule applies.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    severities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The current state of the CompliancePolicyRule.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CompliancePolicyRule resource.
 */
export interface CompliancePolicyRuleArgs {
    /**
     * Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
     */
    compliancePolicyId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn't report the product as noncompliant when patch is not applied.
     */
    gracePeriod?: pulumi.Input<string>;
    /**
     * (Updatable) Patch Selection Details
     */
    patchSelection: pulumi.Input<inputs.FleetAppsManagement.CompliancePolicyRulePatchSelection>;
    /**
     * (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
     */
    patchTypeIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
     */
    productVersion: pulumi.Input<inputs.FleetAppsManagement.CompliancePolicyRuleProductVersion>;
    /**
     * (Updatable) Severity to which this CompliancePolicyRule applies.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    severities?: pulumi.Input<pulumi.Input<string>[]>;
}
