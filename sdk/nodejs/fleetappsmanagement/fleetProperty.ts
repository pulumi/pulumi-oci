// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Fleet Property resource in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Add an existing global property to a fleet in Fleet Application Management.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetProperty = new oci.fleetappsmanagement.FleetProperty("test_fleet_property", {
 *     compartmentId: compartmentId,
 *     fleetId: testFleet.id,
 *     propertyId: testProperty.id,
 *     value: fleetPropertyValue,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class FleetProperty extends pulumi.CustomResource {
    /**
     * Get an existing FleetProperty resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetPropertyState, opts?: pulumi.CustomResourceOptions): FleetProperty {
        return new FleetProperty(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:FleetAppsManagement/fleetProperty:FleetProperty';

    /**
     * Returns true if the given object is an instance of FleetProperty.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FleetProperty {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FleetProperty.__pulumiType;
    }

    /**
     * Values of the property (must be a single value if selectionType = 'SINGLE_CHOICE').
     */
    public /*out*/ readonly allowedValues!: pulumi.Output<string[]>;
    /**
     * Tenancy OCID
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * Unique Fleet identifier.
     */
    public readonly fleetId!: pulumi.Output<string>;
    /**
     * OCID referring to global level metadata property.
     */
    public readonly propertyId!: pulumi.Output<string>;
    /**
     * Text selection of the property.
     */
    public /*out*/ readonly selectionType!: pulumi.Output<string>;
    /**
     * The current state of the FleetProperty.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) Value of the Property.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly value!: pulumi.Output<string>;
    /**
     * Format of the value.
     */
    public /*out*/ readonly valueType!: pulumi.Output<string>;

    /**
     * Create a FleetProperty resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetPropertyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FleetPropertyArgs | FleetPropertyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FleetPropertyState | undefined;
            resourceInputs["allowedValues"] = state ? state.allowedValues : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["fleetId"] = state ? state.fleetId : undefined;
            resourceInputs["propertyId"] = state ? state.propertyId : undefined;
            resourceInputs["selectionType"] = state ? state.selectionType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
            resourceInputs["valueType"] = state ? state.valueType : undefined;
        } else {
            const args = argsOrState as FleetPropertyArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.fleetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fleetId'");
            }
            if ((!args || args.propertyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'propertyId'");
            }
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["fleetId"] = args ? args.fleetId : undefined;
            resourceInputs["propertyId"] = args ? args.propertyId : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["allowedValues"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["selectionType"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["valueType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FleetProperty.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FleetProperty resources.
 */
export interface FleetPropertyState {
    /**
     * Values of the property (must be a single value if selectionType = 'SINGLE_CHOICE').
     */
    allowedValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tenancy OCID
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    displayName?: pulumi.Input<string>;
    /**
     * Unique Fleet identifier.
     */
    fleetId?: pulumi.Input<string>;
    /**
     * OCID referring to global level metadata property.
     */
    propertyId?: pulumi.Input<string>;
    /**
     * Text selection of the property.
     */
    selectionType?: pulumi.Input<string>;
    /**
     * The current state of the FleetProperty.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) Value of the Property.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    value?: pulumi.Input<string>;
    /**
     * Format of the value.
     */
    valueType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FleetProperty resource.
 */
export interface FleetPropertyArgs {
    /**
     * Tenancy OCID
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Unique Fleet identifier.
     */
    fleetId: pulumi.Input<string>;
    /**
     * OCID referring to global level metadata property.
     */
    propertyId: pulumi.Input<string>;
    /**
     * (Updatable) Value of the Property.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    value: pulumi.Input<string>;
}
