// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Fleet Resource resource in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Creates a new FleetResource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetResource = new oci.fleetappsmanagement.FleetResource("test_fleet_resource", {
 *     compartmentId: compartmentId,
 *     fleetId: testFleet.id,
 *     resourceId: testResource.id,
 *     tenancyId: testTenancy.id,
 *     resourceRegion: fleetResourceResourceRegion,
 *     resourceType: fleetResourceResourceType,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class FleetResource extends pulumi.CustomResource {
    /**
     * Get an existing FleetResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetResourceState, opts?: pulumi.CustomResourceOptions): FleetResource {
        return new FleetResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:FleetAppsManagement/fleetResource:FleetResource';

    /**
     * Returns true if the given object is an instance of FleetResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FleetResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FleetResource.__pulumiType;
    }

    /**
     * Application Type associated with the resource when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
     */
    public /*out*/ readonly applicationType!: pulumi.Output<string>;
    /**
     * Resource Compartment
     */
    public /*out*/ readonly compartment!: pulumi.Output<string>;
    /**
     * (Updatable) OCID of the compartment to which the resource belongs to.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * Compliance State of the Resource
     */
    public /*out*/ readonly complianceState!: pulumi.Output<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * Environment Type associated with the Fleet when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
     */
    public /*out*/ readonly environmentType!: pulumi.Output<string>;
    /**
     * unique Fleet identifier
     */
    public readonly fleetId!: pulumi.Output<string>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * Product associated with the resource when resource type is fleet.Will only be returned for PRODUCT fleets that are part of a GROUP Fleet
     */
    public /*out*/ readonly product!: pulumi.Output<string>;
    /**
     * Count of products within the resource.
     */
    public /*out*/ readonly productCount!: pulumi.Output<number>;
    /**
     * The OCID of the resource.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * Associated region
     */
    public readonly resourceRegion!: pulumi.Output<string>;
    /**
     * Type of the Resource.
     */
    public readonly resourceType!: pulumi.Output<string>;
    /**
     * The current state of the FleetResource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * Count of targets  within the resource.
     */
    public /*out*/ readonly targetCount!: pulumi.Output<number>;
    /**
     * (Updatable) OCID of the tenancy to which the resource belongs to.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly tenancyId!: pulumi.Output<string>;
    /**
     * Resource Tenancy Name
     */
    public /*out*/ readonly tenancyName!: pulumi.Output<string>;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a FleetResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FleetResourceArgs | FleetResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FleetResourceState | undefined;
            resourceInputs["applicationType"] = state ? state.applicationType : undefined;
            resourceInputs["compartment"] = state ? state.compartment : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["complianceState"] = state ? state.complianceState : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["environmentType"] = state ? state.environmentType : undefined;
            resourceInputs["fleetId"] = state ? state.fleetId : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["product"] = state ? state.product : undefined;
            resourceInputs["productCount"] = state ? state.productCount : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["resourceRegion"] = state ? state.resourceRegion : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["targetCount"] = state ? state.targetCount : undefined;
            resourceInputs["tenancyId"] = state ? state.tenancyId : undefined;
            resourceInputs["tenancyName"] = state ? state.tenancyName : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as FleetResourceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.fleetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fleetId'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.tenancyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenancyId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["fleetId"] = args ? args.fleetId : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["resourceRegion"] = args ? args.resourceRegion : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["tenancyId"] = args ? args.tenancyId : undefined;
            resourceInputs["applicationType"] = undefined /*out*/;
            resourceInputs["compartment"] = undefined /*out*/;
            resourceInputs["complianceState"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["environmentType"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["product"] = undefined /*out*/;
            resourceInputs["productCount"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["targetCount"] = undefined /*out*/;
            resourceInputs["tenancyName"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FleetResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FleetResource resources.
 */
export interface FleetResourceState {
    /**
     * Application Type associated with the resource when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
     */
    applicationType?: pulumi.Input<string>;
    /**
     * Resource Compartment
     */
    compartment?: pulumi.Input<string>;
    /**
     * (Updatable) OCID of the compartment to which the resource belongs to.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Compliance State of the Resource
     */
    complianceState?: pulumi.Input<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    displayName?: pulumi.Input<string>;
    /**
     * Environment Type associated with the Fleet when resource type is fleet.Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
     */
    environmentType?: pulumi.Input<string>;
    /**
     * unique Fleet identifier
     */
    fleetId?: pulumi.Input<string>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Product associated with the resource when resource type is fleet.Will only be returned for PRODUCT fleets that are part of a GROUP Fleet
     */
    product?: pulumi.Input<string>;
    /**
     * Count of products within the resource.
     */
    productCount?: pulumi.Input<number>;
    /**
     * The OCID of the resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Associated region
     */
    resourceRegion?: pulumi.Input<string>;
    /**
     * Type of the Resource.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The current state of the FleetResource.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Count of targets  within the resource.
     */
    targetCount?: pulumi.Input<number>;
    /**
     * (Updatable) OCID of the tenancy to which the resource belongs to.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * Resource Tenancy Name
     */
    tenancyName?: pulumi.Input<string>;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FleetResource resource.
 */
export interface FleetResourceArgs {
    /**
     * (Updatable) OCID of the compartment to which the resource belongs to.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * unique Fleet identifier
     */
    fleetId: pulumi.Input<string>;
    /**
     * The OCID of the resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Associated region
     */
    resourceRegion?: pulumi.Input<string>;
    /**
     * Type of the Resource.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * (Updatable) OCID of the tenancy to which the resource belongs to.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    tenancyId: pulumi.Input<string>;
}
