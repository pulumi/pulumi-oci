// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Compliance Policy Rules in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Gets a list of CompliancePolicyRules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCompliancePolicyRules = oci.FleetAppsManagement.getCompliancePolicyRules({
 *     compartmentId: compartmentId,
 *     compliancePolicyId: testCompliancePolicy.id,
 *     displayName: compliancePolicyRuleDisplayName,
 *     id: compliancePolicyRuleId,
 *     patchName: testPatch.name,
 *     state: compliancePolicyRuleState,
 * });
 * ```
 */
export function getCompliancePolicyRules(args?: GetCompliancePolicyRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetCompliancePolicyRulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getCompliancePolicyRules:getCompliancePolicyRules", {
        "compartmentId": args.compartmentId,
        "compliancePolicyId": args.compliancePolicyId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "patchName": args.patchName,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getCompliancePolicyRules.
 */
export interface GetCompliancePolicyRulesArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * unique CompliancePolicy identifier.
     */
    compliancePolicyId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.FleetAppsManagement.GetCompliancePolicyRulesFilter[];
    /**
     * unique CompliancePolicyRule identifier.
     */
    id?: string;
    /**
     * A filter to return only resources that match the patch selection against the given patch name.
     */
    patchName?: string;
    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getCompliancePolicyRules.
 */
export interface GetCompliancePolicyRulesResult {
    /**
     * The OCID of the compartment the CompliancePolicyRule belongs to.
     */
    readonly compartmentId?: string;
    /**
     * Unique OCID of the CompliancePolicy.
     */
    readonly compliancePolicyId?: string;
    /**
     * The list of compliance_policy_rule_collection.
     */
    readonly compliancePolicyRuleCollections: outputs.FleetAppsManagement.GetCompliancePolicyRulesCompliancePolicyRuleCollection[];
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName?: string;
    readonly filters?: outputs.FleetAppsManagement.GetCompliancePolicyRulesFilter[];
    /**
     * Unique OCID of the CompliancePolicyRule.
     */
    readonly id?: string;
    /**
     * Patch Name.
     */
    readonly patchName?: string;
    /**
     * The current state of the CompliancePolicyRule.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Compliance Policy Rules in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Gets a list of CompliancePolicyRules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCompliancePolicyRules = oci.FleetAppsManagement.getCompliancePolicyRules({
 *     compartmentId: compartmentId,
 *     compliancePolicyId: testCompliancePolicy.id,
 *     displayName: compliancePolicyRuleDisplayName,
 *     id: compliancePolicyRuleId,
 *     patchName: testPatch.name,
 *     state: compliancePolicyRuleState,
 * });
 * ```
 */
export function getCompliancePolicyRulesOutput(args?: GetCompliancePolicyRulesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCompliancePolicyRulesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getCompliancePolicyRules:getCompliancePolicyRules", {
        "compartmentId": args.compartmentId,
        "compliancePolicyId": args.compliancePolicyId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "patchName": args.patchName,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getCompliancePolicyRules.
 */
export interface GetCompliancePolicyRulesOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * unique CompliancePolicy identifier.
     */
    compliancePolicyId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.GetCompliancePolicyRulesFilterArgs>[]>;
    /**
     * unique CompliancePolicyRule identifier.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the patch selection against the given patch name.
     */
    patchName?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
