// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Fleet Resources in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * List resources for a fleet in Fleet Application Management.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetResources = oci.FleetAppsManagement.getFleetResources({
 *     fleetId: testFleet.id,
 *     displayName: fleetResourceDisplayName,
 *     fleetResourceType: fleetResourceFleetResourceType,
 *     id: fleetResourceId,
 *     state: fleetResourceState,
 *     tenancyId: testTenancy.id,
 * });
 * ```
 */
export function getFleetResources(args: GetFleetResourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetResourcesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getFleetResources:getFleetResources", {
        "displayName": args.displayName,
        "filters": args.filters,
        "fleetId": args.fleetId,
        "fleetResourceType": args.fleetResourceType,
        "id": args.id,
        "state": args.state,
        "tenancyId": args.tenancyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleetResources.
 */
export interface GetFleetResourcesArgs {
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.FleetAppsManagement.GetFleetResourcesFilter[];
    /**
     * Unique Fleet identifier.
     */
    fleetId: string;
    /**
     * A filter to return only resources whose resourceType matches the given resourceType.
     */
    fleetResourceType?: string;
    /**
     * A filter to return only resources whose identifier matches the given identifier.
     */
    id?: string;
    /**
     * A filter to return only resources whose lifecycleState matches the given lifecycleState.
     */
    state?: string;
    /**
     * Resource Tenancy Id
     */
    tenancyId?: string;
}

/**
 * A collection of values returned by getFleetResources.
 */
export interface GetFleetResourcesResult {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName?: string;
    readonly filters?: outputs.FleetAppsManagement.GetFleetResourcesFilter[];
    readonly fleetId: string;
    /**
     * The list of fleet_resource_collection.
     */
    readonly fleetResourceCollections: outputs.FleetAppsManagement.GetFleetResourcesFleetResourceCollection[];
    readonly fleetResourceType?: string;
    /**
     * The unique id of the resource.
     */
    readonly id?: string;
    /**
     * The current state of the FleetResource.
     */
    readonly state?: string;
    /**
     * OCID of the tenancy to which the resource belongs to.
     */
    readonly tenancyId?: string;
}
/**
 * This data source provides the list of Fleet Resources in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * List resources for a fleet in Fleet Application Management.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetResources = oci.FleetAppsManagement.getFleetResources({
 *     fleetId: testFleet.id,
 *     displayName: fleetResourceDisplayName,
 *     fleetResourceType: fleetResourceFleetResourceType,
 *     id: fleetResourceId,
 *     state: fleetResourceState,
 *     tenancyId: testTenancy.id,
 * });
 * ```
 */
export function getFleetResourcesOutput(args: GetFleetResourcesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFleetResourcesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getFleetResources:getFleetResources", {
        "displayName": args.displayName,
        "filters": args.filters,
        "fleetId": args.fleetId,
        "fleetResourceType": args.fleetResourceType,
        "id": args.id,
        "state": args.state,
        "tenancyId": args.tenancyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleetResources.
 */
export interface GetFleetResourcesOutputArgs {
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.GetFleetResourcesFilterArgs>[]>;
    /**
     * Unique Fleet identifier.
     */
    fleetId: pulumi.Input<string>;
    /**
     * A filter to return only resources whose resourceType matches the given resourceType.
     */
    fleetResourceType?: pulumi.Input<string>;
    /**
     * A filter to return only resources whose identifier matches the given identifier.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources whose lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
    /**
     * Resource Tenancy Id
     */
    tenancyId?: pulumi.Input<string>;
}
