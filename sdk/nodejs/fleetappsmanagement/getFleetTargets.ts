// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Fleet Targets in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns the list of all confirmed targets within a fleet.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetTargets = oci.FleetAppsManagement.getFleetTargets({
 *     fleetId: testFleet.id,
 *     displayName: fleetTargetDisplayName,
 *     product: fleetTargetProduct,
 *     resourceDisplayName: fleetTargetResourceDisplayName,
 *     resourceId: testResource.id,
 * });
 * ```
 */
export function getFleetTargets(args: GetFleetTargetsArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetTargetsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getFleetTargets:getFleetTargets", {
        "displayName": args.displayName,
        "filters": args.filters,
        "fleetId": args.fleetId,
        "product": args.product,
        "resourceDisplayName": args.resourceDisplayName,
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleetTargets.
 */
export interface GetFleetTargetsArgs {
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.FleetAppsManagement.GetFleetTargetsFilter[];
    /**
     * Unique Fleet identifier.
     */
    fleetId: string;
    /**
     * Product Name.
     */
    product?: string;
    /**
     * Resource Display Name.
     */
    resourceDisplayName?: string;
    /**
     * Resource Identifier
     */
    resourceId?: string;
}

/**
 * A collection of values returned by getFleetTargets.
 */
export interface GetFleetTargetsResult {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName?: string;
    readonly filters?: outputs.FleetAppsManagement.GetFleetTargetsFilter[];
    readonly fleetId: string;
    /**
     * The list of fleet_target_collection.
     */
    readonly fleetTargetCollections: outputs.FleetAppsManagement.GetFleetTargetsFleetTargetCollection[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Product to which the target belongs to.
     */
    readonly product?: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly resourceDisplayName?: string;
    /**
     * The OCID of the resource.
     */
    readonly resourceId?: string;
}
/**
 * This data source provides the list of Fleet Targets in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns the list of all confirmed targets within a fleet.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetTargets = oci.FleetAppsManagement.getFleetTargets({
 *     fleetId: testFleet.id,
 *     displayName: fleetTargetDisplayName,
 *     product: fleetTargetProduct,
 *     resourceDisplayName: fleetTargetResourceDisplayName,
 *     resourceId: testResource.id,
 * });
 * ```
 */
export function getFleetTargetsOutput(args: GetFleetTargetsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFleetTargetsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getFleetTargets:getFleetTargets", {
        "displayName": args.displayName,
        "filters": args.filters,
        "fleetId": args.fleetId,
        "product": args.product,
        "resourceDisplayName": args.resourceDisplayName,
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleetTargets.
 */
export interface GetFleetTargetsOutputArgs {
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.GetFleetTargetsFilterArgs>[]>;
    /**
     * Unique Fleet identifier.
     */
    fleetId: pulumi.Input<string>;
    /**
     * Product Name.
     */
    product?: pulumi.Input<string>;
    /**
     * Resource Display Name.
     */
    resourceDisplayName?: pulumi.Input<string>;
    /**
     * Resource Identifier
     */
    resourceId?: pulumi.Input<string>;
}
