// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Fleets in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of Fleets in the specified Tenancy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleets = oci.FleetAppsManagement.getFleets({
 *     applicationType: fleetApplicationType,
 *     compartmentId: compartmentId,
 *     displayName: fleetDisplayName,
 *     environmentType: fleetEnvironmentType,
 *     fleetType: fleetFleetType,
 *     id: fleetId,
 *     product: fleetProduct,
 *     state: fleetState,
 * });
 * ```
 */
export function getFleets(args?: GetFleetsArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getFleets:getFleets", {
        "applicationType": args.applicationType,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "environmentType": args.environmentType,
        "filters": args.filters,
        "fleetType": args.fleetType,
        "id": args.id,
        "product": args.product,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleets.
 */
export interface GetFleetsArgs {
    /**
     * A filter to return resources that match the Application Type/Product Stack given..
     */
    applicationType?: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    /**
     * A filter to return resources that match the Environment Type given.
     */
    environmentType?: string;
    filters?: inputs.FleetAppsManagement.GetFleetsFilter[];
    /**
     * A filter to return fleets whose fleetType matches the given fleetType.
     */
    fleetType?: string;
    /**
     * A filter to return fleets whose id matches the given Fleet identifier
     */
    id?: string;
    /**
     * A filter to return resources that match the Product given.
     */
    product?: string;
    /**
     * A filter to return fleets whose lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getFleets.
 */
export interface GetFleetsResult {
    /**
     * Product stack associated with the Fleet. Applicable for ENVIRONMENT fleet types.
     */
    readonly applicationType?: string;
    /**
     * Tenancy Id (Root Compartment Id)for which the rule is created.
     */
    readonly compartmentId?: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName?: string;
    /**
     * Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
     */
    readonly environmentType?: string;
    readonly filters?: outputs.FleetAppsManagement.GetFleetsFilter[];
    /**
     * The list of fleet_collection.
     */
    readonly fleetCollections: outputs.FleetAppsManagement.GetFleetsFleetCollection[];
    /**
     * Type of the Fleet. PRODUCT - A fleet of product-specific resources for a product type. ENVIRONMENT - A fleet of environment-specific resources for a product stack. GROUP - A fleet of a fleet of either environment or product fleets. GENERIC - A fleet of resources selected dynamically or manually for reporting purposes
     */
    readonly fleetType?: string;
    /**
     * The OCID of the resource.
     */
    readonly id?: string;
    readonly product?: string;
    /**
     * The lifecycle state of the Fleet.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Fleets in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of Fleets in the specified Tenancy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleets = oci.FleetAppsManagement.getFleets({
 *     applicationType: fleetApplicationType,
 *     compartmentId: compartmentId,
 *     displayName: fleetDisplayName,
 *     environmentType: fleetEnvironmentType,
 *     fleetType: fleetFleetType,
 *     id: fleetId,
 *     product: fleetProduct,
 *     state: fleetState,
 * });
 * ```
 */
export function getFleetsOutput(args?: GetFleetsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFleetsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getFleets:getFleets", {
        "applicationType": args.applicationType,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "environmentType": args.environmentType,
        "filters": args.filters,
        "fleetType": args.fleetType,
        "id": args.id,
        "product": args.product,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleets.
 */
export interface GetFleetsOutputArgs {
    /**
     * A filter to return resources that match the Application Type/Product Stack given..
     */
    applicationType?: pulumi.Input<string>;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A filter to return resources that match the Environment Type given.
     */
    environmentType?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.GetFleetsFilterArgs>[]>;
    /**
     * A filter to return fleets whose fleetType matches the given fleetType.
     */
    fleetType?: pulumi.Input<string>;
    /**
     * A filter to return fleets whose id matches the given Fleet identifier
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return resources that match the Product given.
     */
    product?: pulumi.Input<string>;
    /**
     * A filter to return fleets whose lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
