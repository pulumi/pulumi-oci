// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Inventory Resources in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of Inventory Resources based on the criteria provided.
 * instance, dbsystem, cloudvmcluster resources are supported.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testInventoryResources = oci.FleetAppsManagement.getInventoryResources({
 *     compartmentId: compartmentId,
 *     resourceCompartmentId: testCompartment.id,
 *     definedTagEquals: inventoryResourceDefinedTagEquals,
 *     displayName: inventoryResourceDisplayName,
 *     freeformTagEquals: inventoryResourceFreeformTagEquals,
 *     inventoryProperties: inventoryResourceInventoryProperties,
 *     matchingCriteria: inventoryResourceMatchingCriteria,
 *     resourceRegion: inventoryResourceResourceRegion,
 *     state: inventoryResourceState,
 * });
 * ```
 */
export function getInventoryResources(args: GetInventoryResourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetInventoryResourcesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getInventoryResources:getInventoryResources", {
        "compartmentId": args.compartmentId,
        "definedTagEquals": args.definedTagEquals,
        "displayName": args.displayName,
        "filters": args.filters,
        "freeformTagEquals": args.freeformTagEquals,
        "inventoryProperties": args.inventoryProperties,
        "matchingCriteria": args.matchingCriteria,
        "resourceCompartmentId": args.resourceCompartmentId,
        "resourceRegion": args.resourceRegion,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getInventoryResources.
 */
export interface GetInventoryResourcesArgs {
    /**
     * A filter to return only resources whose base Compartment ID(TenancyId) matches the given base Compartment ID.
     */
    compartmentId: string;
    /**
     * A list of tag filters to apply.  Only resources with a defined tag matching the value will be returned. Each item in the list has the format "{namespace}.{tagName}={value}".  All inputs are case-insensitive. Multiple values for the same key (i.e. same namespace and tag name) are interpreted as "OR". Values for different keys (i.e. different namespaces, different tag names, or both) are interpreted as "AND". Example: Identification.Development=Yes
     */
    definedTagEquals?: string[];
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.FleetAppsManagement.GetInventoryResourcesFilter[];
    /**
     * A list of tag filters to apply.  Only resources with a freeform tag matching the value will be returned. The key for each tag is "{tagName}.{value}".  All inputs are case-insensitive. Multiple values for the same tag name are interpreted as "OR".  Values for different tag names are interpreted as "AND".
     */
    freeformTagEquals?: string[];
    /**
     * A list of inventory properties filters to apply. The key for each inventory property and value for each resource type is "{resourceType}.{inventoryProperty}={value}". Example: Instance.displayName=TEST_INSTANCE
     */
    inventoryProperties?: string[];
    /**
     * Fetch resources matching ANY or ALL criteria passed as params in "tags" and "inventoryProperties". Example: matchingCriteria=ANY
     */
    matchingCriteria?: string;
    /**
     * A filter to return only resources whose resource Compartment ID matches the given resource Compartment ID.
     */
    resourceCompartmentId: string;
    /**
     * Resource Region
     */
    resourceRegion?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getInventoryResources.
 */
export interface GetInventoryResourcesResult {
    /**
     * OCID of the compartment to which the resource belongs to.
     */
    readonly compartmentId: string;
    readonly definedTagEquals?: string[];
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName?: string;
    readonly filters?: outputs.FleetAppsManagement.GetInventoryResourcesFilter[];
    readonly freeformTagEquals?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly inventoryProperties?: string[];
    /**
     * The list of inventory_resource_collection.
     */
    readonly inventoryResourceCollections: outputs.FleetAppsManagement.GetInventoryResourcesInventoryResourceCollection[];
    readonly matchingCriteria?: string;
    /**
     * Compartment Id of the resource.
     */
    readonly resourceCompartmentId: string;
    /**
     * The region the resource belongs to.
     */
    readonly resourceRegion?: string;
    /**
     * The current state of the Resource.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Inventory Resources in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of Inventory Resources based on the criteria provided.
 * instance, dbsystem, cloudvmcluster resources are supported.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testInventoryResources = oci.FleetAppsManagement.getInventoryResources({
 *     compartmentId: compartmentId,
 *     resourceCompartmentId: testCompartment.id,
 *     definedTagEquals: inventoryResourceDefinedTagEquals,
 *     displayName: inventoryResourceDisplayName,
 *     freeformTagEquals: inventoryResourceFreeformTagEquals,
 *     inventoryProperties: inventoryResourceInventoryProperties,
 *     matchingCriteria: inventoryResourceMatchingCriteria,
 *     resourceRegion: inventoryResourceResourceRegion,
 *     state: inventoryResourceState,
 * });
 * ```
 */
export function getInventoryResourcesOutput(args: GetInventoryResourcesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInventoryResourcesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getInventoryResources:getInventoryResources", {
        "compartmentId": args.compartmentId,
        "definedTagEquals": args.definedTagEquals,
        "displayName": args.displayName,
        "filters": args.filters,
        "freeformTagEquals": args.freeformTagEquals,
        "inventoryProperties": args.inventoryProperties,
        "matchingCriteria": args.matchingCriteria,
        "resourceCompartmentId": args.resourceCompartmentId,
        "resourceRegion": args.resourceRegion,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getInventoryResources.
 */
export interface GetInventoryResourcesOutputArgs {
    /**
     * A filter to return only resources whose base Compartment ID(TenancyId) matches the given base Compartment ID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A list of tag filters to apply.  Only resources with a defined tag matching the value will be returned. Each item in the list has the format "{namespace}.{tagName}={value}".  All inputs are case-insensitive. Multiple values for the same key (i.e. same namespace and tag name) are interpreted as "OR". Values for different keys (i.e. different namespaces, different tag names, or both) are interpreted as "AND". Example: Identification.Development=Yes
     */
    definedTagEquals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.GetInventoryResourcesFilterArgs>[]>;
    /**
     * A list of tag filters to apply.  Only resources with a freeform tag matching the value will be returned. The key for each tag is "{tagName}.{value}".  All inputs are case-insensitive. Multiple values for the same tag name are interpreted as "OR".  Values for different tag names are interpreted as "AND".
     */
    freeformTagEquals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of inventory properties filters to apply. The key for each inventory property and value for each resource type is "{resourceType}.{inventoryProperty}={value}". Example: Instance.displayName=TEST_INSTANCE
     */
    inventoryProperties?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Fetch resources matching ANY or ALL criteria passed as params in "tags" and "inventoryProperties". Example: matchingCriteria=ANY
     */
    matchingCriteria?: pulumi.Input<string>;
    /**
     * A filter to return only resources whose resource Compartment ID matches the given resource Compartment ID.
     */
    resourceCompartmentId: pulumi.Input<string>;
    /**
     * Resource Region
     */
    resourceRegion?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
