// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Platform Configuration resource in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Gets a PlatformConfiguration by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPlatformConfiguration = oci.FleetAppsManagement.getPlatformConfiguration({
 *     platformConfigurationId: testPlatformConfigurationOciFleetAppsManagementPlatformConfiguration.id,
 * });
 * ```
 */
export function getPlatformConfiguration(args: GetPlatformConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformConfigurationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getPlatformConfiguration:getPlatformConfiguration", {
        "platformConfigurationId": args.platformConfigurationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPlatformConfiguration.
 */
export interface GetPlatformConfigurationArgs {
    /**
     * unique PlatformConfiguration identifier
     */
    platformConfigurationId: string;
}

/**
 * A collection of values returned by getPlatformConfiguration.
 */
export interface GetPlatformConfigurationResult {
    /**
     * Compartment OCID
     */
    readonly compartmentId: string;
    /**
     * Config Category Details.
     */
    readonly configCategoryDetails: outputs.FleetAppsManagement.GetPlatformConfigurationConfigCategoryDetail[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     */
    readonly description: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The OCID of the resource.
     */
    readonly id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    readonly platformConfigurationId: string;
    /**
     * Associated region
     */
    readonly resourceRegion: string;
    /**
     * The current state of the PlatformConfiguration.
     */
    readonly state: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    readonly timeUpdated: string;
    /**
     * The type of the configuration.
     */
    readonly type: string;
}
/**
 * This data source provides details about a specific Platform Configuration resource in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Gets a PlatformConfiguration by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPlatformConfiguration = oci.FleetAppsManagement.getPlatformConfiguration({
 *     platformConfigurationId: testPlatformConfigurationOciFleetAppsManagementPlatformConfiguration.id,
 * });
 * ```
 */
export function getPlatformConfigurationOutput(args: GetPlatformConfigurationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPlatformConfigurationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getPlatformConfiguration:getPlatformConfiguration", {
        "platformConfigurationId": args.platformConfigurationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPlatformConfiguration.
 */
export interface GetPlatformConfigurationOutputArgs {
    /**
     * unique PlatformConfiguration identifier
     */
    platformConfigurationId: pulumi.Input<string>;
}
