// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Platform Configurations in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of all the Platform Configurations in the specified compartment.
 * The query parameter `compartmentId` is required unless the query parameter `id` is specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPlatformConfigurations = oci.FleetAppsManagement.getPlatformConfigurations({
 *     compartmentId: compartmentId,
 *     compartmentIdInSubtree: platformConfigurationCompartmentIdInSubtree,
 *     configCategory: platformConfigurationConfigCategory,
 *     displayName: platformConfigurationDisplayName,
 *     id: platformConfigurationId,
 *     state: platformConfigurationState,
 *     type: platformConfigurationType,
 * });
 * ```
 */
export function getPlatformConfigurations(args?: GetPlatformConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetPlatformConfigurationsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getPlatformConfigurations:getPlatformConfigurations", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "configCategory": args.configCategory,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getPlatformConfigurations.
 */
export interface GetPlatformConfigurationsArgs {
    /**
     * The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     */
    compartmentId?: string;
    /**
     * If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
     */
    compartmentIdInSubtree?: boolean;
    /**
     * Config Category
     */
    configCategory?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.FleetAppsManagement.GetPlatformConfigurationsFilter[];
    /**
     * Unique identifier or OCID for listing a single Platform Configuration by id. Either compartmentId or id must be provided.
     */
    id?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
    /**
     * A filter to return Platform Configurations whose type matches the given type.
     */
    type?: string;
}

/**
 * A collection of values returned by getPlatformConfigurations.
 */
export interface GetPlatformConfigurationsResult {
    /**
     * Compartment OCID
     */
    readonly compartmentId?: string;
    readonly compartmentIdInSubtree?: boolean;
    /**
     * Category of configuration
     */
    readonly configCategory?: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName?: string;
    readonly filters?: outputs.FleetAppsManagement.GetPlatformConfigurationsFilter[];
    /**
     * The OCID of the resource.
     */
    readonly id?: string;
    /**
     * The list of platform_configuration_collection.
     */
    readonly platformConfigurationCollections: outputs.FleetAppsManagement.GetPlatformConfigurationsPlatformConfigurationCollection[];
    /**
     * The current state of the PlatformConfiguration.
     */
    readonly state?: string;
    /**
     * The type of the configuration.
     */
    readonly type?: string;
}
/**
 * This data source provides the list of Platform Configurations in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of all the Platform Configurations in the specified compartment.
 * The query parameter `compartmentId` is required unless the query parameter `id` is specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPlatformConfigurations = oci.FleetAppsManagement.getPlatformConfigurations({
 *     compartmentId: compartmentId,
 *     compartmentIdInSubtree: platformConfigurationCompartmentIdInSubtree,
 *     configCategory: platformConfigurationConfigCategory,
 *     displayName: platformConfigurationDisplayName,
 *     id: platformConfigurationId,
 *     state: platformConfigurationState,
 *     type: platformConfigurationType,
 * });
 * ```
 */
export function getPlatformConfigurationsOutput(args?: GetPlatformConfigurationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPlatformConfigurationsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getPlatformConfigurations:getPlatformConfigurations", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "configCategory": args.configCategory,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getPlatformConfigurations.
 */
export interface GetPlatformConfigurationsOutputArgs {
    /**
     * The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * Config Category
     */
    configCategory?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.GetPlatformConfigurationsFilterArgs>[]>;
    /**
     * Unique identifier or OCID for listing a single Platform Configuration by id. Either compartmentId or id must be provided.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return Platform Configurations whose type matches the given type.
     */
    type?: pulumi.Input<string>;
}
