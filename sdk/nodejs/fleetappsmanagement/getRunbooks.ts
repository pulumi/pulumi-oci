// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Runbooks in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of Runbooks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRunbooks = oci.FleetAppsManagement.getRunbooks({
 *     compartmentId: compartmentId,
 *     displayName: runbookDisplayName,
 *     id: runbookId,
 *     operation: runbookOperation,
 *     platform: runbookPlatform,
 *     runbookRelevance: runbookRunbookRelevance,
 *     state: runbookState,
 *     type: runbookType,
 * });
 * ```
 */
export function getRunbooks(args?: GetRunbooksArgs, opts?: pulumi.InvokeOptions): Promise<GetRunbooksResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getRunbooks:getRunbooks", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "operation": args.operation,
        "platform": args.platform,
        "runbookRelevance": args.runbookRelevance,
        "state": args.state,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getRunbooks.
 */
export interface GetRunbooksArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.FleetAppsManagement.GetRunbooksFilter[];
    /**
     * unique Runbook identifier
     */
    id?: string;
    /**
     * The runbook lifecycle.
     */
    operation?: string;
    /**
     * The ID of the runbook platform.
     */
    platform?: string;
    /**
     * The runbook relevance of product or full-stack.
     */
    runbookRelevance?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
    /**
     * The ID of the runbook type.
     */
    type?: string;
}

/**
 * A collection of values returned by getRunbooks.
 */
export interface GetRunbooksResult {
    readonly compartmentId?: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName?: string;
    readonly filters?: outputs.FleetAppsManagement.GetRunbooksFilter[];
    /**
     * The OCID of the resource.
     */
    readonly id?: string;
    /**
     * The lifecycle operation performed by the task.
     */
    readonly operation?: string;
    /**
     * The platform of the runbook.
     */
    readonly platform?: string;
    /**
     * The list of runbook_collection.
     */
    readonly runbookCollections: outputs.FleetAppsManagement.GetRunbooksRunbookCollection[];
    /**
     * Type of runbook structure.
     */
    readonly runbookRelevance?: string;
    /**
     * The current state of the Runbook.
     */
    readonly state?: string;
    /**
     * The type of the runbook.
     */
    readonly type?: string;
}
/**
 * This data source provides the list of Runbooks in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of Runbooks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRunbooks = oci.FleetAppsManagement.getRunbooks({
 *     compartmentId: compartmentId,
 *     displayName: runbookDisplayName,
 *     id: runbookId,
 *     operation: runbookOperation,
 *     platform: runbookPlatform,
 *     runbookRelevance: runbookRunbookRelevance,
 *     state: runbookState,
 *     type: runbookType,
 * });
 * ```
 */
export function getRunbooksOutput(args?: GetRunbooksOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRunbooksResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getRunbooks:getRunbooks", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "operation": args.operation,
        "platform": args.platform,
        "runbookRelevance": args.runbookRelevance,
        "state": args.state,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getRunbooks.
 */
export interface GetRunbooksOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.GetRunbooksFilterArgs>[]>;
    /**
     * unique Runbook identifier
     */
    id?: pulumi.Input<string>;
    /**
     * The runbook lifecycle.
     */
    operation?: pulumi.Input<string>;
    /**
     * The ID of the runbook platform.
     */
    platform?: pulumi.Input<string>;
    /**
     * The runbook relevance of product or full-stack.
     */
    runbookRelevance?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
    /**
     * The ID of the runbook type.
     */
    type?: pulumi.Input<string>;
}
