// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Task Records in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of all the task records in the specified compartment.
 * The query parameter `compartmentId` is required unless the query parameter `id` is specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTaskRecords = oci.FleetAppsManagement.getTaskRecords({
 *     compartmentId: compartmentId,
 *     displayName: taskRecordDisplayName,
 *     id: taskRecordId,
 *     operation: taskRecordOperation,
 *     platform: taskRecordPlatform,
 *     state: taskRecordState,
 *     type: taskRecordType,
 * });
 * ```
 */
export function getTaskRecords(args?: GetTaskRecordsArgs, opts?: pulumi.InvokeOptions): Promise<GetTaskRecordsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:FleetAppsManagement/getTaskRecords:getTaskRecords", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "operation": args.operation,
        "platform": args.platform,
        "state": args.state,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getTaskRecords.
 */
export interface GetTaskRecordsArgs {
    /**
     * The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.FleetAppsManagement.GetTaskRecordsFilter[];
    /**
     * Unique identifier or OCID for listing a single task record by id. Either compartmentId or id must be provided.
     */
    id?: string;
    /**
     * A filter to return task records whose operation matches the given lifecycle operation.
     */
    operation?: string;
    /**
     * The platform for the task record.
     */
    platform?: string;
    /**
     * The current state of the task record.
     */
    state?: string;
    /**
     * The type of the Task.
     */
    type?: string;
}

/**
 * A collection of values returned by getTaskRecords.
 */
export interface GetTaskRecordsResult {
    readonly compartmentId?: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.  Example: `My new resource`
     */
    readonly displayName?: string;
    readonly filters?: outputs.FleetAppsManagement.GetTaskRecordsFilter[];
    /**
     * The OCID of the resource.
     */
    readonly id?: string;
    /**
     * The lifecycle operation performed by the runbook.
     */
    readonly operation?: string;
    /**
     * The platform of the runbook.
     */
    readonly platform?: string;
    /**
     * The current state of the task record.
     */
    readonly state?: string;
    /**
     * The list of task_record_collection.
     */
    readonly taskRecordCollections: outputs.FleetAppsManagement.GetTaskRecordsTaskRecordCollection[];
    /**
     * Task type.
     */
    readonly type?: string;
}
/**
 * This data source provides the list of Task Records in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Returns a list of all the task records in the specified compartment.
 * The query parameter `compartmentId` is required unless the query parameter `id` is specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTaskRecords = oci.FleetAppsManagement.getTaskRecords({
 *     compartmentId: compartmentId,
 *     displayName: taskRecordDisplayName,
 *     id: taskRecordId,
 *     operation: taskRecordOperation,
 *     platform: taskRecordPlatform,
 *     state: taskRecordState,
 *     type: taskRecordType,
 * });
 * ```
 */
export function getTaskRecordsOutput(args?: GetTaskRecordsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTaskRecordsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:FleetAppsManagement/getTaskRecords:getTaskRecords", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "operation": args.operation,
        "platform": args.platform,
        "state": args.state,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getTaskRecords.
 */
export interface GetTaskRecordsOutputArgs {
    /**
     * The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.GetTaskRecordsFilterArgs>[]>;
    /**
     * Unique identifier or OCID for listing a single task record by id. Either compartmentId or id must be provided.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return task records whose operation matches the given lifecycle operation.
     */
    operation?: pulumi.Input<string>;
    /**
     * The platform for the task record.
     */
    platform?: pulumi.Input<string>;
    /**
     * The current state of the task record.
     */
    state?: pulumi.Input<string>;
    /**
     * The type of the Task.
     */
    type?: pulumi.Input<string>;
}
