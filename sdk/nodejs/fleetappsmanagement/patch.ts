// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Patch resource in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Creates a new Patch.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPatch = new oci.fleetappsmanagement.Patch("test_patch", {
 *     artifactDetails: {
 *         category: patchArtifactDetailsCategory,
 *         artifact: {
 *             content: {
 *                 bucket: patchArtifactDetailsArtifactContentBucket,
 *                 checksum: patchArtifactDetailsArtifactContentChecksum,
 *                 namespace: patchArtifactDetailsArtifactContentNamespace,
 *                 object: patchArtifactDetailsArtifactContentObject,
 *                 sourceType: patchArtifactDetailsArtifactContentSourceType,
 *             },
 *         },
 *         artifacts: [{
 *             architecture: patchArtifactDetailsArtifactsArchitecture,
 *             content: {
 *                 bucket: patchArtifactDetailsArtifactsContentBucket,
 *                 checksum: patchArtifactDetailsArtifactsContentChecksum,
 *                 namespace: patchArtifactDetailsArtifactsContentNamespace,
 *                 object: patchArtifactDetailsArtifactsContentObject,
 *                 sourceType: patchArtifactDetailsArtifactsContentSourceType,
 *             },
 *             osType: patchArtifactDetailsArtifactsOsType,
 *         }],
 *     },
 *     compartmentId: compartmentId,
 *     name: patchName,
 *     patchType: {
 *         platformConfigurationId: testPlatformConfiguration.id,
 *     },
 *     product: {
 *         platformConfigurationId: testPlatformConfiguration.id,
 *         version: patchProductVersion,
 *     },
 *     severity: patchSeverity,
 *     timeReleased: patchTimeReleased,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     dependentPatches: [{
 *         id: patchDependentPatchesId,
 *     }],
 *     description: patchDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Patches can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:FleetAppsManagement/patch:Patch test_patch "id"
 * ```
 */
export class Patch extends pulumi.CustomResource {
    /**
     * Get an existing Patch resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PatchState, opts?: pulumi.CustomResourceOptions): Patch {
        return new Patch(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:FleetAppsManagement/patch:Patch';

    /**
     * Returns true if the given object is an instance of Patch.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Patch {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Patch.__pulumiType;
    }

    /**
     * (Updatable) Patch artifact description and content details.
     */
    declare public readonly artifactDetails: pulumi.Output<outputs.FleetAppsManagement.PatchArtifactDetails>;
    /**
     * (Updatable)
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Dependent Patches for this patch.
     */
    declare public readonly dependentPatches: pulumi.Output<outputs.FleetAppsManagement.PatchDependentPatch[]>;
    /**
     * (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * (Updatable) Patch Type
     */
    declare public readonly patchType: pulumi.Output<outputs.FleetAppsManagement.PatchPatchType>;
    /**
     * (Updatable) Product
     */
    declare public readonly product: pulumi.Output<outputs.FleetAppsManagement.PatchProduct>;
    /**
     * Associated region
     */
    declare public /*out*/ readonly resourceRegion: pulumi.Output<string>;
    /**
     * (Updatable) Patch Severity.
     */
    declare public readonly severity: pulumi.Output<string>;
    /**
     * The current state of the Patch.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * (Updatable) Date when the patch was released.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly timeReleased: pulumi.Output<string>;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
     */
    declare public /*out*/ readonly type: pulumi.Output<string>;

    /**
     * Create a Patch resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PatchArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PatchArgs | PatchState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PatchState | undefined;
            resourceInputs["artifactDetails"] = state?.artifactDetails;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["dependentPatches"] = state?.dependentPatches;
            resourceInputs["description"] = state?.description;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["name"] = state?.name;
            resourceInputs["patchType"] = state?.patchType;
            resourceInputs["product"] = state?.product;
            resourceInputs["resourceRegion"] = state?.resourceRegion;
            resourceInputs["severity"] = state?.severity;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeReleased"] = state?.timeReleased;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as PatchArgs | undefined;
            if (args?.artifactDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'artifactDetails'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.patchType === undefined && !opts.urn) {
                throw new Error("Missing required property 'patchType'");
            }
            if (args?.product === undefined && !opts.urn) {
                throw new Error("Missing required property 'product'");
            }
            if (args?.severity === undefined && !opts.urn) {
                throw new Error("Missing required property 'severity'");
            }
            if (args?.timeReleased === undefined && !opts.urn) {
                throw new Error("Missing required property 'timeReleased'");
            }
            resourceInputs["artifactDetails"] = args?.artifactDetails;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["dependentPatches"] = args?.dependentPatches;
            resourceInputs["description"] = args?.description;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["name"] = args?.name;
            resourceInputs["patchType"] = args?.patchType;
            resourceInputs["product"] = args?.product;
            resourceInputs["severity"] = args?.severity;
            resourceInputs["timeReleased"] = args?.timeReleased;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["resourceRegion"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Patch.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Patch resources.
 */
export interface PatchState {
    /**
     * (Updatable) Patch artifact description and content details.
     */
    artifactDetails?: pulumi.Input<inputs.FleetAppsManagement.PatchArtifactDetails>;
    /**
     * (Updatable)
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Dependent Patches for this patch.
     */
    dependentPatches?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.PatchDependentPatch>[]>;
    /**
     * (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Patch Type
     */
    patchType?: pulumi.Input<inputs.FleetAppsManagement.PatchPatchType>;
    /**
     * (Updatable) Product
     */
    product?: pulumi.Input<inputs.FleetAppsManagement.PatchProduct>;
    /**
     * Associated region
     */
    resourceRegion?: pulumi.Input<string>;
    /**
     * (Updatable) Patch Severity.
     */
    severity?: pulumi.Input<string>;
    /**
     * The current state of the Patch.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) Date when the patch was released.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeReleased?: pulumi.Input<string>;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * Provide information on who defined the patch. Example: For Custom Patches the value will be USER_DEFINED For Oracle Defined Patches the value will be ORACLE_DEFINED
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Patch resource.
 */
export interface PatchArgs {
    /**
     * (Updatable) Patch artifact description and content details.
     */
    artifactDetails: pulumi.Input<inputs.FleetAppsManagement.PatchArtifactDetails>;
    /**
     * (Updatable)
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Dependent Patches for this patch.
     */
    dependentPatches?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.PatchDependentPatch>[]>;
    /**
     * (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-friendly name. Should be unique within the tenancy, and cannot be changed after creation.  Avoid entering confidential information.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Patch Type
     */
    patchType: pulumi.Input<inputs.FleetAppsManagement.PatchPatchType>;
    /**
     * (Updatable) Product
     */
    product: pulumi.Input<inputs.FleetAppsManagement.PatchProduct>;
    /**
     * (Updatable) Patch Severity.
     */
    severity: pulumi.Input<string>;
    /**
     * (Updatable) Date when the patch was released.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeReleased: pulumi.Input<string>;
}
