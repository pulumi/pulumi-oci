// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Runbook Version resource in Oracle Cloud Infrastructure Fleet Apps Management service.
 *
 * Add RunbookVersion in Fleet Application Management.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRunbookVersion = new oci.fleetappsmanagement.RunbookVersion("test_runbook_version", {
 *     executionWorkflowDetails: {
 *         workflows: [{
 *             groupName: testGroup.name,
 *             steps: [{
 *                 type: runbookVersionExecutionWorkflowDetailsWorkflowStepsType,
 *                 groupName: testGroup.name,
 *                 stepName: runbookVersionExecutionWorkflowDetailsWorkflowStepsStepName,
 *                 steps: runbookVersionExecutionWorkflowDetailsWorkflowStepsSteps,
 *             }],
 *             type: runbookVersionExecutionWorkflowDetailsWorkflowType,
 *         }],
 *     },
 *     groups: [{
 *         name: runbookVersionGroupsName,
 *         type: runbookVersionGroupsType,
 *         properties: {
 *             actionOnFailure: runbookVersionGroupsPropertiesActionOnFailure,
 *             notificationPreferences: {
 *                 shouldNotifyOnPause: runbookVersionGroupsPropertiesNotificationPreferencesShouldNotifyOnPause,
 *                 shouldNotifyOnTaskFailure: runbookVersionGroupsPropertiesNotificationPreferencesShouldNotifyOnTaskFailure,
 *                 shouldNotifyOnTaskSuccess: runbookVersionGroupsPropertiesNotificationPreferencesShouldNotifyOnTaskSuccess,
 *             },
 *             pauseDetails: {
 *                 kind: runbookVersionGroupsPropertiesPauseDetailsKind,
 *                 durationInMinutes: runbookVersionGroupsPropertiesPauseDetailsDurationInMinutes,
 *             },
 *             preCondition: runbookVersionGroupsPropertiesPreCondition,
 *             runOn: {
 *                 kind: runbookVersionGroupsPropertiesRunOnKind,
 *                 condition: runbookVersionGroupsPropertiesRunOnCondition,
 *                 host: runbookVersionGroupsPropertiesRunOnHost,
 *                 previousTaskInstanceDetails: [{
 *                     outputVariableDetails: {
 *                         outputVariableName: runbookVersionGroupsPropertiesRunOnPreviousTaskInstanceDetailsOutputVariableDetailsOutputVariableName,
 *                         stepName: runbookVersionGroupsPropertiesRunOnPreviousTaskInstanceDetailsOutputVariableDetailsStepName,
 *                     },
 *                     resourceId: testResource.id,
 *                     resourceType: runbookVersionGroupsPropertiesRunOnPreviousTaskInstanceDetailsResourceType,
 *                 }],
 *             },
 *         },
 *     }],
 *     runbookId: testRunbook.id,
 *     tasks: [{
 *         stepName: runbookVersionTasksStepName,
 *         taskRecordDetails: {
 *             scope: runbookVersionTasksTaskRecordDetailsScope,
 *             description: runbookVersionTasksTaskRecordDetailsDescription,
 *             executionDetails: {
 *                 executionType: runbookVersionTasksTaskRecordDetailsExecutionDetailsExecutionType,
 *                 catalogId: testCatalog.id,
 *                 command: runbookVersionTasksTaskRecordDetailsExecutionDetailsCommand,
 *                 configFile: runbookVersionTasksTaskRecordDetailsExecutionDetailsConfigFile,
 *                 content: {
 *                     sourceType: runbookVersionTasksTaskRecordDetailsExecutionDetailsContentSourceType,
 *                     bucket: runbookVersionTasksTaskRecordDetailsExecutionDetailsContentBucket,
 *                     catalogId: testCatalog.id,
 *                     checksum: runbookVersionTasksTaskRecordDetailsExecutionDetailsContentChecksum,
 *                     namespace: runbookVersionTasksTaskRecordDetailsExecutionDetailsContentNamespace,
 *                     object: runbookVersionTasksTaskRecordDetailsExecutionDetailsContentObject,
 *                 },
 *                 credentials: [{
 *                     displayName: runbookVersionTasksTaskRecordDetailsExecutionDetailsCredentialsDisplayName,
 *                     id: runbookVersionTasksTaskRecordDetailsExecutionDetailsCredentialsId,
 *                 }],
 *                 endpoint: runbookVersionTasksTaskRecordDetailsExecutionDetailsEndpoint,
 *                 isExecutableContent: runbookVersionTasksTaskRecordDetailsExecutionDetailsIsExecutableContent,
 *                 isLocked: runbookVersionTasksTaskRecordDetailsExecutionDetailsIsLocked,
 *                 isReadOutputVariableEnabled: runbookVersionTasksTaskRecordDetailsExecutionDetailsIsReadOutputVariableEnabled,
 *                 targetCompartmentId: testCompartment.id,
 *                 variables: {
 *                     inputVariables: [{
 *                         description: runbookVersionTasksTaskRecordDetailsExecutionDetailsVariablesInputVariablesDescription,
 *                         name: runbookVersionTasksTaskRecordDetailsExecutionDetailsVariablesInputVariablesName,
 *                         type: runbookVersionTasksTaskRecordDetailsExecutionDetailsVariablesInputVariablesType,
 *                     }],
 *                     outputVariables: runbookVersionTasksTaskRecordDetailsExecutionDetailsVariablesOutputVariables,
 *                 },
 *             },
 *             isApplySubjectTask: runbookVersionTasksTaskRecordDetailsIsApplySubjectTask,
 *             isCopyToLibraryEnabled: runbookVersionTasksTaskRecordDetailsIsCopyToLibraryEnabled,
 *             isDiscoveryOutputTask: runbookVersionTasksTaskRecordDetailsIsDiscoveryOutputTask,
 *             name: runbookVersionTasksTaskRecordDetailsName,
 *             osType: runbookVersionTasksTaskRecordDetailsOsType,
 *             platform: runbookVersionTasksTaskRecordDetailsPlatform,
 *             properties: {
 *                 numRetries: runbookVersionTasksTaskRecordDetailsPropertiesNumRetries,
 *                 timeoutInSeconds: runbookVersionTasksTaskRecordDetailsPropertiesTimeoutInSeconds,
 *             },
 *             taskRecordId: testTaskRecord.id,
 *         },
 *         outputVariableMappings: [{
 *             name: runbookVersionTasksOutputVariableMappingsName,
 *             outputVariableDetails: {
 *                 outputVariableName: runbookVersionTasksOutputVariableMappingsOutputVariableDetailsOutputVariableName,
 *                 stepName: runbookVersionTasksOutputVariableMappingsOutputVariableDetailsStepName,
 *             },
 *         }],
 *         stepProperties: {
 *             actionOnFailure: runbookVersionTasksStepPropertiesActionOnFailure,
 *             notificationPreferences: {
 *                 shouldNotifyOnPause: runbookVersionTasksStepPropertiesNotificationPreferencesShouldNotifyOnPause,
 *                 shouldNotifyOnTaskFailure: runbookVersionTasksStepPropertiesNotificationPreferencesShouldNotifyOnTaskFailure,
 *                 shouldNotifyOnTaskSuccess: runbookVersionTasksStepPropertiesNotificationPreferencesShouldNotifyOnTaskSuccess,
 *             },
 *             pauseDetails: {
 *                 kind: runbookVersionTasksStepPropertiesPauseDetailsKind,
 *                 durationInMinutes: runbookVersionTasksStepPropertiesPauseDetailsDurationInMinutes,
 *             },
 *             preCondition: runbookVersionTasksStepPropertiesPreCondition,
 *             runOn: {
 *                 kind: runbookVersionTasksStepPropertiesRunOnKind,
 *                 condition: runbookVersionTasksStepPropertiesRunOnCondition,
 *                 host: runbookVersionTasksStepPropertiesRunOnHost,
 *                 previousTaskInstanceDetails: [{
 *                     outputVariableDetails: {
 *                         outputVariableName: runbookVersionTasksStepPropertiesRunOnPreviousTaskInstanceDetailsOutputVariableDetailsOutputVariableName,
 *                         stepName: runbookVersionTasksStepPropertiesRunOnPreviousTaskInstanceDetailsOutputVariableDetailsStepName,
 *                     },
 *                     resourceId: testResource.id,
 *                     resourceType: runbookVersionTasksStepPropertiesRunOnPreviousTaskInstanceDetailsResourceType,
 *                 }],
 *             },
 *         },
 *     }],
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     rollbackWorkflowDetails: {
 *         scope: runbookVersionRollbackWorkflowDetailsScope,
 *         workflows: [{
 *             groupName: testGroup.name,
 *             steps: [{
 *                 type: runbookVersionRollbackWorkflowDetailsWorkflowStepsType,
 *                 groupName: testGroup.name,
 *                 stepName: runbookVersionRollbackWorkflowDetailsWorkflowStepsStepName,
 *                 steps: runbookVersionRollbackWorkflowDetailsWorkflowStepsSteps,
 *             }],
 *             type: runbookVersionRollbackWorkflowDetailsWorkflowType,
 *         }],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * RunbookVersions can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:FleetAppsManagement/runbookVersion:RunbookVersion test_runbook_version "id"
 * ```
 */
export class RunbookVersion extends pulumi.CustomResource {
    /**
     * Get an existing RunbookVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RunbookVersionState, opts?: pulumi.CustomResourceOptions): RunbookVersion {
        return new RunbookVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:FleetAppsManagement/runbookVersion:RunbookVersion';

    /**
     * Returns true if the given object is an instance of RunbookVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RunbookVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RunbookVersion.__pulumiType;
    }

    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example:
     * `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Execution Workflow details.
     */
    declare public readonly executionWorkflowDetails: pulumi.Output<outputs.FleetAppsManagement.RunbookVersionExecutionWorkflowDetails>;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists
     * for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The groups of the runbook.
     */
    declare public readonly groups: pulumi.Output<outputs.FleetAppsManagement.RunbookVersionGroup[]>;
    declare public /*out*/ readonly isLatest: pulumi.Output<boolean>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide
     * actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The name of the task
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * (Updatable) Rollback Workflow details.
     */
    declare public readonly rollbackWorkflowDetails: pulumi.Output<outputs.FleetAppsManagement.RunbookVersionRollbackWorkflowDetails>;
    /**
     * The OCID of the resource.
     */
    declare public readonly runbookId: pulumi.Output<string>;
    /**
     * The current state of the FleetResource.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example:
     * `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A set of tasks to execute in the runbook.
     */
    declare public readonly tasks: pulumi.Output<outputs.FleetAppsManagement.RunbookVersionTask[]>;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a RunbookVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RunbookVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RunbookVersionArgs | RunbookVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RunbookVersionState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["executionWorkflowDetails"] = state?.executionWorkflowDetails;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["groups"] = state?.groups;
            resourceInputs["isLatest"] = state?.isLatest;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["name"] = state?.name;
            resourceInputs["rollbackWorkflowDetails"] = state?.rollbackWorkflowDetails;
            resourceInputs["runbookId"] = state?.runbookId;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["tasks"] = state?.tasks;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as RunbookVersionArgs | undefined;
            if (args?.executionWorkflowDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'executionWorkflowDetails'");
            }
            if (args?.groups === undefined && !opts.urn) {
                throw new Error("Missing required property 'groups'");
            }
            if (args?.runbookId === undefined && !opts.urn) {
                throw new Error("Missing required property 'runbookId'");
            }
            if (args?.tasks === undefined && !opts.urn) {
                throw new Error("Missing required property 'tasks'");
            }
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["executionWorkflowDetails"] = args?.executionWorkflowDetails;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["groups"] = args?.groups;
            resourceInputs["rollbackWorkflowDetails"] = args?.rollbackWorkflowDetails;
            resourceInputs["runbookId"] = args?.runbookId;
            resourceInputs["tasks"] = args?.tasks;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["isLatest"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RunbookVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RunbookVersion resources.
 */
export interface RunbookVersionState {
    compartmentId?: pulumi.Input<string>;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example:
     * `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Execution Workflow details.
     */
    executionWorkflowDetails?: pulumi.Input<inputs.FleetAppsManagement.RunbookVersionExecutionWorkflowDetails>;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists
     * for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The groups of the runbook.
     */
    groups?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.RunbookVersionGroup>[]>;
    isLatest?: pulumi.Input<boolean>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide
     * actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The name of the task
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Rollback Workflow details.
     */
    rollbackWorkflowDetails?: pulumi.Input<inputs.FleetAppsManagement.RunbookVersionRollbackWorkflowDetails>;
    /**
     * The OCID of the resource.
     */
    runbookId?: pulumi.Input<string>;
    /**
     * The current state of the FleetResource.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example:
     * `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A set of tasks to execute in the runbook.
     */
    tasks?: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.RunbookVersionTask>[]>;
    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RunbookVersion resource.
 */
export interface RunbookVersionArgs {
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example:
     * `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Execution Workflow details.
     */
    executionWorkflowDetails: pulumi.Input<inputs.FleetAppsManagement.RunbookVersionExecutionWorkflowDetails>;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists
     * for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The groups of the runbook.
     */
    groups: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.RunbookVersionGroup>[]>;
    /**
     * (Updatable) Rollback Workflow details.
     */
    rollbackWorkflowDetails?: pulumi.Input<inputs.FleetAppsManagement.RunbookVersionRollbackWorkflowDetails>;
    /**
     * The OCID of the resource.
     */
    runbookId: pulumi.Input<string>;
    /**
     * (Updatable) A set of tasks to execute in the runbook.
     */
    tasks: pulumi.Input<pulumi.Input<inputs.FleetAppsManagement.RunbookVersionTask>[]>;
}
