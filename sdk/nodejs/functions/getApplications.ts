// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Applications in Oracle Cloud Infrastructure Functions service.
 *
 * Lists applications for a compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testApplications = oci.Functions.getApplications({
 *     compartmentId: compartmentId,
 *     displayName: applicationDisplayName,
 *     id: applicationId,
 *     state: applicationState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getApplications(args: GetApplicationsArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Functions/getApplications:getApplications", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplications.
 */
export interface GetApplicationsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
     */
    compartmentId: string;
    /**
     * A filter to return only applications with display names that match the display name string. Matching is exact.
     */
    displayName?: string;
    filters?: inputs.Functions.GetApplicationsFilter[];
    /**
     * A filter to return only applications with the specified OCID.
     */
    id?: string;
    /**
     * A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
     */
    state?: string;
}

/**
 * A collection of values returned by getApplications.
 */
export interface GetApplicationsResult {
    /**
     * The list of applications.
     */
    readonly applications: outputs.Functions.GetApplicationsApplication[];
    /**
     * The OCID of the compartment that contains the application.
     */
    readonly compartmentId: string;
    /**
     * The display name of the application. The display name is unique within the compartment containing the application.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Functions.GetApplicationsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application.
     */
    readonly id?: string;
    /**
     * The current state of the application.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Applications in Oracle Cloud Infrastructure Functions service.
 *
 * Lists applications for a compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testApplications = oci.Functions.getApplications({
 *     compartmentId: compartmentId,
 *     displayName: applicationDisplayName,
 *     id: applicationId,
 *     state: applicationState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getApplicationsOutput(args: GetApplicationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApplicationsResult> {
    return pulumi.output(args).apply((a: any) => getApplications(a, opts))
}

/**
 * A collection of arguments for invoking getApplications.
 */
export interface GetApplicationsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only applications with display names that match the display name string. Matching is exact.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Functions.GetApplicationsFilterArgs>[]>;
    /**
     * A filter to return only applications with the specified OCID.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
     */
    state?: pulumi.Input<string>;
}
