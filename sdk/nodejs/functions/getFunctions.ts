// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Functions in Oracle Cloud Infrastructure Functions service.
 *
 * Lists functions for an application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFunctions = oci.Functions.getFunctions({
 *     applicationId: oci_functions_application.test_application.id,
 *     displayName: _var.function_display_name,
 *     id: _var.function_id,
 *     state: _var.function_state,
 * });
 * ```
 */
export function getFunctions(args: GetFunctionsArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Functions/getFunctions:getFunctions", {
        "applicationId": args.applicationId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunctions.
 */
export interface GetFunctionsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
     */
    applicationId: string;
    /**
     * A filter to return only functions with display names that match the display name string. Matching is exact.
     */
    displayName?: string;
    filters?: inputs.Functions.GetFunctionsFilter[];
    /**
     * A filter to return only functions with the specified OCID.
     */
    id?: string;
    /**
     * A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
     */
    state?: string;
}

/**
 * A collection of values returned by getFunctions.
 */
export interface GetFunctionsResult {
    /**
     * The OCID of the application the function belongs to.
     */
    readonly applicationId: string;
    /**
     * The display name of the function. The display name is unique within the application containing the function.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Functions.GetFunctionsFilter[];
    /**
     * The list of functions.
     */
    readonly functions: outputs.Functions.GetFunctionsFunction[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the function.
     */
    readonly id?: string;
    /**
     * The current state of the function.
     */
    readonly state?: string;
}

export function getFunctionsOutput(args: GetFunctionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFunctionsResult> {
    return pulumi.output(args).apply(a => getFunctions(a, opts))
}

/**
 * A collection of arguments for invoking getFunctions.
 */
export interface GetFunctionsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application to which this function belongs.
     */
    applicationId: pulumi.Input<string>;
    /**
     * A filter to return only functions with display names that match the display name string. Matching is exact.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Functions.GetFunctionsFilterArgs>[]>;
    /**
     * A filter to return only functions with the specified OCID.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only functions that match the lifecycle state in this parameter. Example: `Creating`
     */
    state?: pulumi.Input<string>;
}
