// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Fusion Environment Family Limits And Usage resource in Oracle Cloud Infrastructure Fusion Apps service.
 *
 * Gets the number of environments (usage) of each type in the fusion environment family, as well as the limit that's allowed to be created based on the group's associated subscriptions.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFusionEnvironmentFamilyLimitsAndUsage = oci.Functions.getFusionEnvironmentFamilyLimitsAndUsage({
 *     fusionEnvironmentFamilyId: oci_fusion_apps_fusion_environment_family.test_fusion_environment_family.id,
 * });
 * ```
 */
export function getFusionEnvironmentFamilyLimitsAndUsage(args: GetFusionEnvironmentFamilyLimitsAndUsageArgs, opts?: pulumi.InvokeOptions): Promise<GetFusionEnvironmentFamilyLimitsAndUsageResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Functions/getFusionEnvironmentFamilyLimitsAndUsage:getFusionEnvironmentFamilyLimitsAndUsage", {
        "fusionEnvironmentFamilyId": args.fusionEnvironmentFamilyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFusionEnvironmentFamilyLimitsAndUsage.
 */
export interface GetFusionEnvironmentFamilyLimitsAndUsageArgs {
    /**
     * The unique identifier (OCID) of the FusionEnvironmentFamily.
     */
    fusionEnvironmentFamilyId: string;
}

/**
 * A collection of values returned by getFusionEnvironmentFamilyLimitsAndUsage.
 */
export interface GetFusionEnvironmentFamilyLimitsAndUsageResult {
    /**
     * The limit and usage for a specific environment type, for example, production, development, or test.
     */
    readonly developmentLimitAndUsages: outputs.Functions.GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage[];
    readonly fusionEnvironmentFamilyId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The limit and usage for a specific environment type, for example, production, development, or test.
     */
    readonly productionLimitAndUsages: outputs.Functions.GetFusionEnvironmentFamilyLimitsAndUsageProductionLimitAndUsage[];
    /**
     * The limit and usage for a specific environment type, for example, production, development, or test.
     */
    readonly testLimitAndUsages: outputs.Functions.GetFusionEnvironmentFamilyLimitsAndUsageTestLimitAndUsage[];
}

export function getFusionEnvironmentFamilyLimitsAndUsageOutput(args: GetFusionEnvironmentFamilyLimitsAndUsageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFusionEnvironmentFamilyLimitsAndUsageResult> {
    return pulumi.output(args).apply(a => getFusionEnvironmentFamilyLimitsAndUsage(a, opts))
}

/**
 * A collection of arguments for invoking getFusionEnvironmentFamilyLimitsAndUsage.
 */
export interface GetFusionEnvironmentFamilyLimitsAndUsageOutputArgs {
    /**
     * The unique identifier (OCID) of the FusionEnvironmentFamily.
     */
    fusionEnvironmentFamilyId: pulumi.Input<string>;
}
