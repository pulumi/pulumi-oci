// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Pbf Listing Versions in Oracle Cloud Infrastructure Functions service.
 *
 * Fetches a wrapped list of all Pre-built Function(PBF) Listing versions. Returns a PbfListingVersionCollection
 * containing an array of PbfListingVersionSummary response models.
 *
 * Note that the PbfListingIdentifier must be provided as a query parameter, otherwise an exception shall
 * be thrown.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPbfListingVersions = oci.Functions.getPbfListingVersions({
 *     pbfListingId: testPbfListing.id,
 *     isCurrentVersion: pbfListingVersionIsCurrentVersion,
 *     name: pbfListingVersionName,
 *     pbfListingVersionId: testPbfListingVersion.id,
 *     state: pbfListingVersionState,
 * });
 * ```
 */
export function getPbfListingVersions(args: GetPbfListingVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetPbfListingVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Functions/getPbfListingVersions:getPbfListingVersions", {
        "filters": args.filters,
        "isCurrentVersion": args.isCurrentVersion,
        "name": args.name,
        "pbfListingId": args.pbfListingId,
        "pbfListingVersionId": args.pbfListingVersionId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getPbfListingVersions.
 */
export interface GetPbfListingVersionsArgs {
    filters?: inputs.Functions.GetPbfListingVersionsFilter[];
    /**
     * Matches the current version (the most recently added version with an Active  lifecycleState) associated with a PbfListing.
     */
    isCurrentVersion?: boolean;
    /**
     * Matches a PbfListingVersion based on a provided semantic version name for a PbfListingVersion.  Each PbfListingVersion name is unique with respect to its associated PbfListing.
     */
    name?: string;
    /**
     * unique PbfListing identifier
     */
    pbfListingId: string;
    /**
     * unique PbfListingVersion identifier
     */
    pbfListingVersionId?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getPbfListingVersions.
 */
export interface GetPbfListingVersionsResult {
    readonly filters?: outputs.Functions.GetPbfListingVersionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isCurrentVersion?: boolean;
    /**
     * A brief descriptive name for the PBF trigger.
     */
    readonly name?: string;
    /**
     * The OCID of the PbfListing this resource version belongs to.
     */
    readonly pbfListingId: string;
    readonly pbfListingVersionId?: string;
    /**
     * The list of pbf_listing_versions_collection.
     */
    readonly pbfListingVersionsCollections: outputs.Functions.GetPbfListingVersionsPbfListingVersionsCollection[];
    /**
     * The current state of the PBF resource.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Pbf Listing Versions in Oracle Cloud Infrastructure Functions service.
 *
 * Fetches a wrapped list of all Pre-built Function(PBF) Listing versions. Returns a PbfListingVersionCollection
 * containing an array of PbfListingVersionSummary response models.
 *
 * Note that the PbfListingIdentifier must be provided as a query parameter, otherwise an exception shall
 * be thrown.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPbfListingVersions = oci.Functions.getPbfListingVersions({
 *     pbfListingId: testPbfListing.id,
 *     isCurrentVersion: pbfListingVersionIsCurrentVersion,
 *     name: pbfListingVersionName,
 *     pbfListingVersionId: testPbfListingVersion.id,
 *     state: pbfListingVersionState,
 * });
 * ```
 */
export function getPbfListingVersionsOutput(args: GetPbfListingVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPbfListingVersionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Functions/getPbfListingVersions:getPbfListingVersions", {
        "filters": args.filters,
        "isCurrentVersion": args.isCurrentVersion,
        "name": args.name,
        "pbfListingId": args.pbfListingId,
        "pbfListingVersionId": args.pbfListingVersionId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getPbfListingVersions.
 */
export interface GetPbfListingVersionsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Functions.GetPbfListingVersionsFilterArgs>[]>;
    /**
     * Matches the current version (the most recently added version with an Active  lifecycleState) associated with a PbfListing.
     */
    isCurrentVersion?: pulumi.Input<boolean>;
    /**
     * Matches a PbfListingVersion based on a provided semantic version name for a PbfListingVersion.  Each PbfListingVersion name is unique with respect to its associated PbfListing.
     */
    name?: pulumi.Input<string>;
    /**
     * unique PbfListing identifier
     */
    pbfListingId: pulumi.Input<string>;
    /**
     * unique PbfListingVersion identifier
     */
    pbfListingVersionId?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
