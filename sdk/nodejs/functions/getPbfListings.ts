// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Pbf Listings in Oracle Cloud Infrastructure Functions service.
 *
 * Fetches a wrapped list of all Pre-built Function(PBF) Listings. Returns a PbfListingCollection containing
 * an array of PbfListingSummary response models.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPbfListings = oci.Functions.getPbfListings({
 *     name: _var.pbf_listing_name,
 *     nameContains: _var.pbf_listing_name_contains,
 *     nameStartsWith: _var.pbf_listing_name_starts_with,
 *     pbfListingId: oci_functions_pbf_listing.test_pbf_listing.id,
 *     state: _var.pbf_listing_state,
 *     triggers: _var.pbf_listing_trigger,
 * });
 * ```
 */
export function getPbfListings(args?: GetPbfListingsArgs, opts?: pulumi.InvokeOptions): Promise<GetPbfListingsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Functions/getPbfListings:getPbfListings", {
        "filters": args.filters,
        "name": args.name,
        "nameContains": args.nameContains,
        "nameStartsWith": args.nameStartsWith,
        "pbfListingId": args.pbfListingId,
        "state": args.state,
        "triggers": args.triggers,
    }, opts);
}

/**
 * A collection of arguments for invoking getPbfListings.
 */
export interface GetPbfListingsArgs {
    filters?: inputs.Functions.GetPbfListingsFilter[];
    /**
     * A filter to return only resources that match the entire PBF name given.
     */
    name?: string;
    /**
     * A filter to return only resources that contain the supplied filter text in the PBF name given.
     */
    nameContains?: string;
    /**
     * A filter to return only resources that start with the supplied filter text in the PBF name given.
     */
    nameStartsWith?: string;
    /**
     * unique PbfListing identifier
     */
    pbfListingId?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
    /**
     * A filter to return only resources that match the service trigger sources of a PBF.
     */
    triggers?: string[];
}

/**
 * A collection of values returned by getPbfListings.
 */
export interface GetPbfListingsResult {
    readonly filters?: outputs.Functions.GetPbfListingsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * A brief descriptive name for the PBF trigger.
     */
    readonly name?: string;
    readonly nameContains?: string;
    readonly nameStartsWith?: string;
    readonly pbfListingId?: string;
    /**
     * The list of pbf_listings_collection.
     */
    readonly pbfListingsCollections?: outputs.Functions.GetPbfListingsPbfListingsCollection[];
    /**
     * The current state of the PBF resource.
     */
    readonly state?: string;
    readonly triggers?: string[];
}
/**
 * This data source provides the list of Pbf Listings in Oracle Cloud Infrastructure Functions service.
 *
 * Fetches a wrapped list of all Pre-built Function(PBF) Listings. Returns a PbfListingCollection containing
 * an array of PbfListingSummary response models.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPbfListings = oci.Functions.getPbfListings({
 *     name: _var.pbf_listing_name,
 *     nameContains: _var.pbf_listing_name_contains,
 *     nameStartsWith: _var.pbf_listing_name_starts_with,
 *     pbfListingId: oci_functions_pbf_listing.test_pbf_listing.id,
 *     state: _var.pbf_listing_state,
 *     triggers: _var.pbf_listing_trigger,
 * });
 * ```
 */
export function getPbfListingsOutput(args?: GetPbfListingsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPbfListingsResult> {
    return pulumi.output(args).apply((a: any) => getPbfListings(a, opts))
}

/**
 * A collection of arguments for invoking getPbfListings.
 */
export interface GetPbfListingsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Functions.GetPbfListingsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the entire PBF name given.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only resources that contain the supplied filter text in the PBF name given.
     */
    nameContains?: pulumi.Input<string>;
    /**
     * A filter to return only resources that start with the supplied filter text in the PBF name given.
     */
    nameStartsWith?: pulumi.Input<string>;
    /**
     * unique PbfListing identifier
     */
    pbfListingId?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the service trigger sources of a PBF.
     */
    triggers?: pulumi.Input<pulumi.Input<string>[]>;
}
