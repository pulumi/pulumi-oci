// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Tool resource in Oracle Cloud Infrastructure Generative Ai Agent service.
 *
 * Creates a tool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTool = new oci.generativeai.AgentTool("test_tool", {
 *     agentId: testAgent.id,
 *     compartmentId: compartmentId,
 *     description: toolDescription,
 *     toolConfig: {
 *         toolConfigType: toolToolConfigToolConfigType,
 *         agentEndpointId: testAgentEndpoint.id,
 *         apiSchema: {
 *             apiSchemaInputLocationType: toolToolConfigApiSchemaApiSchemaInputLocationType,
 *             bucket: toolToolConfigApiSchemaBucket,
 *             content: toolToolConfigApiSchemaContent,
 *             namespace: toolToolConfigApiSchemaNamespace,
 *             object: toolToolConfigApiSchemaObject,
 *         },
 *         databaseConnection: {
 *             connectionId: testConnection.id,
 *             connectionType: toolToolConfigDatabaseConnectionConnectionType,
 *         },
 *         databaseSchema: {
 *             inputLocationType: toolToolConfigDatabaseSchemaInputLocationType,
 *             bucket: toolToolConfigDatabaseSchemaBucket,
 *             content: toolToolConfigDatabaseSchemaContent,
 *             namespace: toolToolConfigDatabaseSchemaNamespace,
 *             prefix: toolToolConfigDatabaseSchemaPrefix,
 *         },
 *         dialect: toolToolConfigDialect,
 *         "function": {
 *             description: toolToolConfigFunctionDescription,
 *             name: toolToolConfigFunctionName,
 *             parameters: toolToolConfigFunctionParameters,
 *         },
 *         generationLlmCustomization: {
 *             instruction: toolToolConfigGenerationLlmCustomizationInstruction,
 *         },
 *         httpEndpointAuthConfig: {
 *             httpEndpointAuthSources: [{
 *                 httpEndpointAuthScope: toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScope,
 *                 httpEndpointAuthScopeConfig: {
 *                     httpEndpointAuthScopeConfigType: toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScopeConfigHttpEndpointAuthScopeConfigType,
 *                     clientId: testClient.id,
 *                     idcsUrl: toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScopeConfigIdcsUrl,
 *                     keyLocation: toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScopeConfigKeyLocation,
 *                     keyName: testKey.name,
 *                     scopeUrl: toolToolConfigHttpEndpointAuthConfigHttpEndpointAuthSourcesHttpEndpointAuthScopeConfigScopeUrl,
 *                     vaultSecretId: testSecret.id,
 *                 },
 *             }],
 *         },
 *         iclExamples: {
 *             inputLocationType: toolToolConfigIclExamplesInputLocationType,
 *             bucket: toolToolConfigIclExamplesBucket,
 *             content: toolToolConfigIclExamplesContent,
 *             namespace: toolToolConfigIclExamplesNamespace,
 *             prefix: toolToolConfigIclExamplesPrefix,
 *         },
 *         knowledgeBaseConfigs: [{
 *             knowledgeBaseId: testKnowledgeBase.id,
 *         }],
 *         modelSize: toolToolConfigModelSize,
 *         shouldEnableSelfCorrection: toolToolConfigShouldEnableSelfCorrection,
 *         shouldEnableSqlExecution: toolToolConfigShouldEnableSqlExecution,
 *         subnetId: testSubnet.id,
 *         tableAndColumnDescription: {
 *             inputLocationType: toolToolConfigTableAndColumnDescriptionInputLocationType,
 *             bucket: toolToolConfigTableAndColumnDescriptionBucket,
 *             content: toolToolConfigTableAndColumnDescriptionContent,
 *             namespace: toolToolConfigTableAndColumnDescriptionNamespace,
 *             prefix: toolToolConfigTableAndColumnDescriptionPrefix,
 *         },
 *     },
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     displayName: toolDisplayName,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     metadata: toolMetadata,
 * });
 * ```
 *
 * ## Import
 *
 * Tools can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:GenerativeAi/agentTool:AgentTool test_tool "id"
 * ```
 */
export class AgentTool extends pulumi.CustomResource {
    /**
     * Get an existing AgentTool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgentToolState, opts?: pulumi.CustomResourceOptions): AgentTool {
        return new AgentTool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:GenerativeAi/agentTool:AgentTool';

    /**
     * Returns true if the given object is an instance of AgentTool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentTool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentTool.__pulumiType;
    }

    /**
     * The OCID of the agent that this Tool is attached to.
     */
    declare public readonly agentId: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Description about the Tool.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Key-value pairs to allow additional configurations.
     */
    declare public readonly metadata: pulumi.Output<{[key: string]: string}>;
    /**
     * The current state of the Tool.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * (Updatable) The configuration and type of Tool.
     */
    declare public readonly toolConfig: pulumi.Output<outputs.GenerativeAi.AgentToolToolConfig>;

    /**
     * Create a AgentTool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentToolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgentToolArgs | AgentToolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgentToolState | undefined;
            resourceInputs["agentId"] = state?.agentId;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["metadata"] = state?.metadata;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["toolConfig"] = state?.toolConfig;
        } else {
            const args = argsOrState as AgentToolArgs | undefined;
            if (args?.agentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'agentId'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.toolConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'toolConfig'");
            }
            resourceInputs["agentId"] = args?.agentId;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["metadata"] = args?.metadata;
            resourceInputs["toolConfig"] = args?.toolConfig;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentTool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AgentTool resources.
 */
export interface AgentToolState {
    /**
     * The OCID of the agent that this Tool is attached to.
     */
    agentId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Description about the Tool.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Key-value pairs to allow additional configurations.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current state of the Tool.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the Tool was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the Tool was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The configuration and type of Tool.
     */
    toolConfig?: pulumi.Input<inputs.GenerativeAi.AgentToolToolConfig>;
}

/**
 * The set of arguments for constructing a AgentTool resource.
 */
export interface AgentToolArgs {
    /**
     * The OCID of the agent that this Tool is attached to.
     */
    agentId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Description about the Tool.
     */
    description: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Key-value pairs to allow additional configurations.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The configuration and type of Tool.
     */
    toolConfig: pulumi.Input<inputs.GenerativeAi.AgentToolToolConfig>;
}
