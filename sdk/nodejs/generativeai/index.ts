// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DedicatedAiClusterArgs, DedicatedAiClusterState } from "./dedicatedAiCluster";
export type DedicatedAiCluster = import("./dedicatedAiCluster").DedicatedAiCluster;
export const DedicatedAiCluster: typeof import("./dedicatedAiCluster").DedicatedAiCluster = null as any;
utilities.lazyLoad(exports, ["DedicatedAiCluster"], () => require("./dedicatedAiCluster"));

export { EndpointArgs, EndpointState } from "./endpoint";
export type Endpoint = import("./endpoint").Endpoint;
export const Endpoint: typeof import("./endpoint").Endpoint = null as any;
utilities.lazyLoad(exports, ["Endpoint"], () => require("./endpoint"));

export { GetDedicatedAiClusterArgs, GetDedicatedAiClusterResult, GetDedicatedAiClusterOutputArgs } from "./getDedicatedAiCluster";
export const getDedicatedAiCluster: typeof import("./getDedicatedAiCluster").getDedicatedAiCluster = null as any;
export const getDedicatedAiClusterOutput: typeof import("./getDedicatedAiCluster").getDedicatedAiClusterOutput = null as any;
utilities.lazyLoad(exports, ["getDedicatedAiCluster","getDedicatedAiClusterOutput"], () => require("./getDedicatedAiCluster"));

export { GetDedicatedAiClustersArgs, GetDedicatedAiClustersResult, GetDedicatedAiClustersOutputArgs } from "./getDedicatedAiClusters";
export const getDedicatedAiClusters: typeof import("./getDedicatedAiClusters").getDedicatedAiClusters = null as any;
export const getDedicatedAiClustersOutput: typeof import("./getDedicatedAiClusters").getDedicatedAiClustersOutput = null as any;
utilities.lazyLoad(exports, ["getDedicatedAiClusters","getDedicatedAiClustersOutput"], () => require("./getDedicatedAiClusters"));

export { GetEndpointArgs, GetEndpointResult, GetEndpointOutputArgs } from "./getEndpoint";
export const getEndpoint: typeof import("./getEndpoint").getEndpoint = null as any;
export const getEndpointOutput: typeof import("./getEndpoint").getEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getEndpoint","getEndpointOutput"], () => require("./getEndpoint"));

export { GetEndpointsArgs, GetEndpointsResult, GetEndpointsOutputArgs } from "./getEndpoints";
export const getEndpoints: typeof import("./getEndpoints").getEndpoints = null as any;
export const getEndpointsOutput: typeof import("./getEndpoints").getEndpointsOutput = null as any;
utilities.lazyLoad(exports, ["getEndpoints","getEndpointsOutput"], () => require("./getEndpoints"));

export { GetModelArgs, GetModelResult, GetModelOutputArgs } from "./getModel";
export const getModel: typeof import("./getModel").getModel = null as any;
export const getModelOutput: typeof import("./getModel").getModelOutput = null as any;
utilities.lazyLoad(exports, ["getModel","getModelOutput"], () => require("./getModel"));

export { GetModelsArgs, GetModelsResult, GetModelsOutputArgs } from "./getModels";
export const getModels: typeof import("./getModels").getModels = null as any;
export const getModelsOutput: typeof import("./getModels").getModelsOutput = null as any;
utilities.lazyLoad(exports, ["getModels","getModelsOutput"], () => require("./getModels"));

export { ModelArgs, ModelState } from "./model";
export type Model = import("./model").Model;
export const Model: typeof import("./model").Model = null as any;
utilities.lazyLoad(exports, ["Model"], () => require("./model"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:GenerativeAi/dedicatedAiCluster:DedicatedAiCluster":
                return new DedicatedAiCluster(name, <any>undefined, { urn })
            case "oci:GenerativeAi/endpoint:Endpoint":
                return new Endpoint(name, <any>undefined, { urn })
            case "oci:GenerativeAi/model:Model":
                return new Model(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "GenerativeAi/dedicatedAiCluster", _module)
pulumi.runtime.registerResourceModule("oci", "GenerativeAi/endpoint", _module)
pulumi.runtime.registerResourceModule("oci", "GenerativeAi/model", _module)
