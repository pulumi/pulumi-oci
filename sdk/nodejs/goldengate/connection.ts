// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Connection resource in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Creates a new Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConnection = new oci.goldengate.Connection("testConnection", {
 *     compartmentId: _var.compartment_id,
 *     connectionType: _var.connection_connection_type,
 *     displayName: _var.connection_display_name,
 *     technologyType: _var.connection_technology_type,
 *     accountKey: _var.connection_account_key,
 *     accountName: _var.connection_account_name,
 *     additionalAttributes: [{
 *         name: _var.connection_additional_attributes_name,
 *         value: _var.connection_additional_attributes_value,
 *     }],
 *     authenticationType: _var.connection_authentication_type,
 *     azureTenantId: oci_golden_gate_azure_tenant.test_azure_tenant.id,
 *     bootstrapServers: [{
 *         host: _var.connection_bootstrap_servers_host,
 *         port: _var.connection_bootstrap_servers_port,
 *         privateIp: _var.connection_bootstrap_servers_private_ip,
 *     }],
 *     clientId: oci_golden_gate_client.test_client.id,
 *     clientSecret: _var.connection_client_secret,
 *     connectionString: _var.connection_connection_string,
 *     consumerProperties: _var.connection_consumer_properties,
 *     databaseId: oci_database_database.test_database.id,
 *     databaseName: oci_database_database.test_database.name,
 *     dbSystemId: oci_database_db_system.test_db_system.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     deploymentId: oci_golden_gate_deployment.test_deployment.id,
 *     description: _var.connection_description,
 *     endpoint: _var.connection_endpoint,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     host: _var.connection_host,
 *     keyId: oci_kms_key.test_key.id,
 *     keyStore: _var.connection_key_store,
 *     keyStorePassword: _var.connection_key_store_password,
 *     nsgIds: _var.connection_nsg_ids,
 *     password: _var.connection_password,
 *     port: _var.connection_port,
 *     privateIp: _var.connection_private_ip,
 *     privateKeyFile: _var.connection_private_key_file,
 *     privateKeyPassphrase: _var.connection_private_key_passphrase,
 *     producerProperties: _var.connection_producer_properties,
 *     publicKeyFingerprint: _var.connection_public_key_fingerprint,
 *     region: _var.connection_region,
 *     sasToken: _var.connection_sas_token,
 *     securityProtocol: _var.connection_security_protocol,
 *     sessionMode: _var.connection_session_mode,
 *     sslCa: _var.connection_ssl_ca,
 *     sslCert: _var.connection_ssl_cert,
 *     sslCrl: _var.connection_ssl_crl,
 *     sslKey: _var.connection_ssl_key,
 *     sslKeyPassword: _var.connection_ssl_key_password,
 *     sslMode: _var.connection_ssl_mode,
 *     streamPoolId: oci_streaming_stream_pool.test_stream_pool.id,
 *     subnetId: oci_core_subnet.test_subnet.id,
 *     tenancyId: oci_identity_tenancy.test_tenancy.id,
 *     trustStore: _var.connection_trust_store,
 *     trustStorePassword: _var.connection_trust_store_password,
 *     url: _var.connection_url,
 *     userId: oci_identity_user.test_user.id,
 *     username: _var.connection_username,
 *     vaultId: oci_kms_vault.test_vault.id,
 *     wallet: _var.connection_wallet,
 * });
 * ```
 *
 * ## Import
 *
 * Connections can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:GoldenGate/connection:Connection test_connection "id"
 * ```
 */
export class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionState, opts?: pulumi.CustomResourceOptions): Connection {
        return new Connection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:GoldenGate/connection:Connection';

    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connection.__pulumiType;
    }

    /**
     * (Updatable) Azure storage account key. This property is required when 'authenticationType' is set to 'SHARED_KEY'. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ==
     */
    public readonly accountKey!: pulumi.Output<string>;
    /**
     * (Updatable) Sets the Azure storage account name.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
     */
    public readonly additionalAttributes!: pulumi.Output<outputs.GoldenGate.ConnectionAdditionalAttribute[]>;
    /**
     * (Updatable) Used authentication mechanism to access Azure Data Lake Storage.
     */
    public readonly authenticationType!: pulumi.Output<string>;
    /**
     * (Updatable) Azure tenant ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
     */
    public readonly azureTenantId!: pulumi.Output<string>;
    /**
     * (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `"server1.example.com:9092,server2.example.com:9092"`
     */
    public readonly bootstrapServers!: pulumi.Output<outputs.GoldenGate.ConnectionBootstrapServer[]>;
    /**
     * (Updatable) Azure client ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * (Updatable) Azure client secret (aka application password) for authentication. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) JDBC connection string. e.g.: 'jdbc:sqlserver://<synapse-workspace>.sql.azuresynapse.net:1433;database=<db-name>;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;'
     */
    public readonly connectionString!: pulumi.Output<string>;
    /**
     * (Updatable) The connection type.
     */
    public readonly connectionType!: pulumi.Output<string>;
    /**
     * (Updatable) The base64 encoded content of the consumer.properties file.
     */
    public readonly consumerProperties!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    public readonly databaseId!: pulumi.Output<string>;
    /**
     * (Updatable) The name of the database.
     */
    public readonly databaseName!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
     */
    public readonly dbSystemId!: pulumi.Output<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     */
    public readonly deploymentId!: pulumi.Output<string>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
     */
    public readonly endpoint!: pulumi.Output<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The name or address of a host.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * List of ingress IP addresses, from where the GoldenGate deployment connects to this connection's privateIp.
     */
    public /*out*/ readonly ingressIps!: pulumi.Output<outputs.GoldenGate.ConnectionIngressIp[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
     */
    public readonly keyId!: pulumi.Output<string>;
    /**
     * (Updatable) The base64 encoded content of the KeyStore file.
     */
    public readonly keyStore!: pulumi.Output<string>;
    /**
     * (Updatable) The KeyStore password.
     */
    public readonly keyStorePassword!: pulumi.Output<string>;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     */
    public readonly nsgIds!: pulumi.Output<string[]>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated RDBMS.  It must conform to the specific security requirements implemented by the database including length, case sensitivity, and so on.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * (Updatable) The port of an endpoint usually specified for a connection.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * (Updatable) The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
     */
    public readonly privateIp!: pulumi.Output<string>;
    /**
     * (Updatable) The base64 encoded content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     */
    public readonly privateKeyFile!: pulumi.Output<string>;
    /**
     * (Updatable) The passphrase of the private key.
     */
    public readonly privateKeyPassphrase!: pulumi.Output<string>;
    /**
     * (Updatable) The base64 encoded content of the producer.properties file.
     */
    public readonly producerProperties!: pulumi.Output<string>;
    /**
     * (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     */
    public readonly publicKeyFingerprint!: pulumi.Output<string>;
    /**
     * (Updatable) The name of the region. e.g.: us-ashburn-1
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when 'authenticationType' is set to 'SHARED_ACCESS_SIGNATURE'. e.g.: ?sv=2020-06-08&ss=bfqt&srt=sco&sp=rwdlacupyx&se=2020-09-10T20:27:28Z&st=2022-08-05T12:27:28Z&spr=https&sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D
     */
    public readonly sasToken!: pulumi.Output<string>;
    /**
     * (Updatable) Security protocol for PostgreSQL.
     */
    public readonly securityProtocol!: pulumi.Output<string>;
    /**
     * (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     */
    public readonly sessionMode!: pulumi.Output<string>;
    /**
     * (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
     */
    public readonly sslCa!: pulumi.Output<string>;
    /**
     * (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     */
    public readonly sslCert!: pulumi.Output<string>;
    /**
     * (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     */
    public readonly sslCrl!: pulumi.Output<string>;
    /**
     * (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     */
    public readonly sslKey!: pulumi.Output<string>;
    /**
     * (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided.
     */
    public readonly sslKeyPassword!: pulumi.Output<string>;
    /**
     * (Updatable) SSL modes for PostgreSQL.
     */
    public readonly sslMode!: pulumi.Output<string>;
    /**
     * Possible lifecycle states for connection.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
     */
    public readonly streamPoolId!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The Kafka (e.g. Confluent) Schema Registry technology type.
     */
    public readonly technologyType!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
     */
    public readonly tenancyId!: pulumi.Output<string>;
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) The base64 encoded content of the TrustStore file.
     */
    public readonly trustStore!: pulumi.Output<string>;
    /**
     * (Updatable) The TrustStore password.
     */
    public readonly trustStorePassword!: pulumi.Output<string>;
    /**
     * (Updatable) Kafka Schema Registry URL. e.g.: 'https://server1.us.oracle.com:8081'
     */
    public readonly url!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Object Storage. The user must have write access to the bucket they want to connect to.
     */
    public readonly userId!: pulumi.Output<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
     */
    public readonly vaultId!: pulumi.Output<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     */
    public readonly wallet!: pulumi.Output<string>;

    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionArgs | ConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionState | undefined;
            resourceInputs["accountKey"] = state ? state.accountKey : undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["additionalAttributes"] = state ? state.additionalAttributes : undefined;
            resourceInputs["authenticationType"] = state ? state.authenticationType : undefined;
            resourceInputs["azureTenantId"] = state ? state.azureTenantId : undefined;
            resourceInputs["bootstrapServers"] = state ? state.bootstrapServers : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectionString"] = state ? state.connectionString : undefined;
            resourceInputs["connectionType"] = state ? state.connectionType : undefined;
            resourceInputs["consumerProperties"] = state ? state.consumerProperties : undefined;
            resourceInputs["databaseId"] = state ? state.databaseId : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["dbSystemId"] = state ? state.dbSystemId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["deploymentId"] = state ? state.deploymentId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["ingressIps"] = state ? state.ingressIps : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["keyStore"] = state ? state.keyStore : undefined;
            resourceInputs["keyStorePassword"] = state ? state.keyStorePassword : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["nsgIds"] = state ? state.nsgIds : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["privateKeyFile"] = state ? state.privateKeyFile : undefined;
            resourceInputs["privateKeyPassphrase"] = state ? state.privateKeyPassphrase : undefined;
            resourceInputs["producerProperties"] = state ? state.producerProperties : undefined;
            resourceInputs["publicKeyFingerprint"] = state ? state.publicKeyFingerprint : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["sasToken"] = state ? state.sasToken : undefined;
            resourceInputs["securityProtocol"] = state ? state.securityProtocol : undefined;
            resourceInputs["sessionMode"] = state ? state.sessionMode : undefined;
            resourceInputs["sslCa"] = state ? state.sslCa : undefined;
            resourceInputs["sslCert"] = state ? state.sslCert : undefined;
            resourceInputs["sslCrl"] = state ? state.sslCrl : undefined;
            resourceInputs["sslKey"] = state ? state.sslKey : undefined;
            resourceInputs["sslKeyPassword"] = state ? state.sslKeyPassword : undefined;
            resourceInputs["sslMode"] = state ? state.sslMode : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["streamPoolId"] = state ? state.streamPoolId : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["technologyType"] = state ? state.technologyType : undefined;
            resourceInputs["tenancyId"] = state ? state.tenancyId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["trustStore"] = state ? state.trustStore : undefined;
            resourceInputs["trustStorePassword"] = state ? state.trustStorePassword : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vaultId"] = state ? state.vaultId : undefined;
            resourceInputs["wallet"] = state ? state.wallet : undefined;
        } else {
            const args = argsOrState as ConnectionArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.connectionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionType'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.technologyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'technologyType'");
            }
            resourceInputs["accountKey"] = args ? args.accountKey : undefined;
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["additionalAttributes"] = args ? args.additionalAttributes : undefined;
            resourceInputs["authenticationType"] = args ? args.authenticationType : undefined;
            resourceInputs["azureTenantId"] = args ? args.azureTenantId : undefined;
            resourceInputs["bootstrapServers"] = args ? args.bootstrapServers : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args ? args.clientSecret : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["connectionString"] = args ? args.connectionString : undefined;
            resourceInputs["connectionType"] = args ? args.connectionType : undefined;
            resourceInputs["consumerProperties"] = args ? args.consumerProperties : undefined;
            resourceInputs["databaseId"] = args ? args.databaseId : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["dbSystemId"] = args ? args.dbSystemId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["deploymentId"] = args ? args.deploymentId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["keyId"] = args ? args.keyId : undefined;
            resourceInputs["keyStore"] = args ? args.keyStore : undefined;
            resourceInputs["keyStorePassword"] = args?.keyStorePassword ? pulumi.secret(args.keyStorePassword) : undefined;
            resourceInputs["nsgIds"] = args ? args.nsgIds : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["privateIp"] = args ? args.privateIp : undefined;
            resourceInputs["privateKeyFile"] = args?.privateKeyFile ? pulumi.secret(args.privateKeyFile) : undefined;
            resourceInputs["privateKeyPassphrase"] = args?.privateKeyPassphrase ? pulumi.secret(args.privateKeyPassphrase) : undefined;
            resourceInputs["producerProperties"] = args ? args.producerProperties : undefined;
            resourceInputs["publicKeyFingerprint"] = args ? args.publicKeyFingerprint : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["sasToken"] = args ? args.sasToken : undefined;
            resourceInputs["securityProtocol"] = args ? args.securityProtocol : undefined;
            resourceInputs["sessionMode"] = args ? args.sessionMode : undefined;
            resourceInputs["sslCa"] = args ? args.sslCa : undefined;
            resourceInputs["sslCert"] = args ? args.sslCert : undefined;
            resourceInputs["sslCrl"] = args ? args.sslCrl : undefined;
            resourceInputs["sslKey"] = args ? args.sslKey : undefined;
            resourceInputs["sslKeyPassword"] = args?.sslKeyPassword ? pulumi.secret(args.sslKeyPassword) : undefined;
            resourceInputs["sslMode"] = args ? args.sslMode : undefined;
            resourceInputs["streamPoolId"] = args ? args.streamPoolId : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["technologyType"] = args ? args.technologyType : undefined;
            resourceInputs["tenancyId"] = args ? args.tenancyId : undefined;
            resourceInputs["trustStore"] = args ? args.trustStore : undefined;
            resourceInputs["trustStorePassword"] = args?.trustStorePassword ? pulumi.secret(args.trustStorePassword) : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vaultId"] = args ? args.vaultId : undefined;
            resourceInputs["wallet"] = args ? args.wallet : undefined;
            resourceInputs["ingressIps"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["keyStorePassword", "password", "privateKeyFile", "privateKeyPassphrase", "sslKeyPassword", "trustStorePassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Connection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Connection resources.
 */
export interface ConnectionState {
    /**
     * (Updatable) Azure storage account key. This property is required when 'authenticationType' is set to 'SHARED_KEY'. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ==
     */
    accountKey?: pulumi.Input<string>;
    /**
     * (Updatable) Sets the Azure storage account name.
     */
    accountName?: pulumi.Input<string>;
    /**
     * (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
     */
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.GoldenGate.ConnectionAdditionalAttribute>[]>;
    /**
     * (Updatable) Used authentication mechanism to access Azure Data Lake Storage.
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * (Updatable) Azure tenant ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
     */
    azureTenantId?: pulumi.Input<string>;
    /**
     * (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `"server1.example.com:9092,server2.example.com:9092"`
     */
    bootstrapServers?: pulumi.Input<pulumi.Input<inputs.GoldenGate.ConnectionBootstrapServer>[]>;
    /**
     * (Updatable) Azure client ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
     */
    clientId?: pulumi.Input<string>;
    /**
     * (Updatable) Azure client secret (aka application password) for authentication. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) JDBC connection string. e.g.: 'jdbc:sqlserver://<synapse-workspace>.sql.azuresynapse.net:1433;database=<db-name>;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;'
     */
    connectionString?: pulumi.Input<string>;
    /**
     * (Updatable) The connection type.
     */
    connectionType?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the consumer.properties file.
     */
    consumerProperties?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the database.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
     */
    dbSystemId?: pulumi.Input<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     */
    deploymentId?: pulumi.Input<string>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
     */
    endpoint?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The name or address of a host.
     */
    host?: pulumi.Input<string>;
    /**
     * List of ingress IP addresses, from where the GoldenGate deployment connects to this connection's privateIp.
     */
    ingressIps?: pulumi.Input<pulumi.Input<inputs.GoldenGate.ConnectionIngressIp>[]>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
     */
    keyId?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the KeyStore file.
     */
    keyStore?: pulumi.Input<string>;
    /**
     * (Updatable) The KeyStore password.
     */
    keyStorePassword?: pulumi.Input<string>;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     */
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated RDBMS.  It must conform to the specific security requirements implemented by the database including length, case sensitivity, and so on.
     */
    password?: pulumi.Input<string>;
    /**
     * (Updatable) The port of an endpoint usually specified for a connection.
     */
    port?: pulumi.Input<number>;
    /**
     * (Updatable) The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     */
    privateKeyFile?: pulumi.Input<string>;
    /**
     * (Updatable) The passphrase of the private key.
     */
    privateKeyPassphrase?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the producer.properties file.
     */
    producerProperties?: pulumi.Input<string>;
    /**
     * (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     */
    publicKeyFingerprint?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the region. e.g.: us-ashburn-1
     */
    region?: pulumi.Input<string>;
    /**
     * (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when 'authenticationType' is set to 'SHARED_ACCESS_SIGNATURE'. e.g.: ?sv=2020-06-08&ss=bfqt&srt=sco&sp=rwdlacupyx&se=2020-09-10T20:27:28Z&st=2022-08-05T12:27:28Z&spr=https&sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D
     */
    sasToken?: pulumi.Input<string>;
    /**
     * (Updatable) Security protocol for PostgreSQL.
     */
    securityProtocol?: pulumi.Input<string>;
    /**
     * (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     */
    sessionMode?: pulumi.Input<string>;
    /**
     * (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
     */
    sslCa?: pulumi.Input<string>;
    /**
     * (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     */
    sslCert?: pulumi.Input<string>;
    /**
     * (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     */
    sslCrl?: pulumi.Input<string>;
    /**
     * (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     */
    sslKey?: pulumi.Input<string>;
    /**
     * (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided.
     */
    sslKeyPassword?: pulumi.Input<string>;
    /**
     * (Updatable) SSL modes for PostgreSQL.
     */
    sslMode?: pulumi.Input<string>;
    /**
     * Possible lifecycle states for connection.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
     */
    streamPoolId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The Kafka (e.g. Confluent) Schema Registry technology type.
     */
    technologyType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the TrustStore file.
     */
    trustStore?: pulumi.Input<string>;
    /**
     * (Updatable) The TrustStore password.
     */
    trustStorePassword?: pulumi.Input<string>;
    /**
     * (Updatable) Kafka Schema Registry URL. e.g.: 'https://server1.us.oracle.com:8081'
     */
    url?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Object Storage. The user must have write access to the bucket they want to connect to.
     */
    userId?: pulumi.Input<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
     */
    username?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
     */
    vaultId?: pulumi.Input<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     */
    wallet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * (Updatable) Azure storage account key. This property is required when 'authenticationType' is set to 'SHARED_KEY'. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ==
     */
    accountKey?: pulumi.Input<string>;
    /**
     * (Updatable) Sets the Azure storage account name.
     */
    accountName?: pulumi.Input<string>;
    /**
     * (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
     */
    additionalAttributes?: pulumi.Input<pulumi.Input<inputs.GoldenGate.ConnectionAdditionalAttribute>[]>;
    /**
     * (Updatable) Used authentication mechanism to access Azure Data Lake Storage.
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * (Updatable) Azure tenant ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
     */
    azureTenantId?: pulumi.Input<string>;
    /**
     * (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `"server1.example.com:9092,server2.example.com:9092"`
     */
    bootstrapServers?: pulumi.Input<pulumi.Input<inputs.GoldenGate.ConnectionBootstrapServer>[]>;
    /**
     * (Updatable) Azure client ID of the application. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
     */
    clientId?: pulumi.Input<string>;
    /**
     * (Updatable) Azure client secret (aka application password) for authentication. This property is required when 'authenticationType' is set to 'AZURE_ACTIVE_DIRECTORY'. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) JDBC connection string. e.g.: 'jdbc:sqlserver://<synapse-workspace>.sql.azuresynapse.net:1433;database=<db-name>;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;'
     */
    connectionString?: pulumi.Input<string>;
    /**
     * (Updatable) The connection type.
     */
    connectionType: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the consumer.properties file.
     */
    consumerProperties?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the database.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
     */
    dbSystemId?: pulumi.Input<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     */
    deploymentId?: pulumi.Input<string>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
     */
    endpoint?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The name or address of a host.
     */
    host?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer "Master" key being referenced. If provided, this will reference a key which the customer will be required to ensure the policies are established to permit the GoldenGate Service to utilize this key to manage secrets.
     */
    keyId?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the KeyStore file.
     */
    keyStore?: pulumi.Input<string>;
    /**
     * (Updatable) The KeyStore password.
     */
    keyStorePassword?: pulumi.Input<string>;
    /**
     * (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     */
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated RDBMS.  It must conform to the specific security requirements implemented by the database including length, case sensitivity, and so on.
     */
    password?: pulumi.Input<string>;
    /**
     * (Updatable) The port of an endpoint usually specified for a connection.
     */
    port?: pulumi.Input<number>;
    /**
     * (Updatable) The private IP address of the connection's endpoint in the customer's VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     */
    privateKeyFile?: pulumi.Input<string>;
    /**
     * (Updatable) The passphrase of the private key.
     */
    privateKeyPassphrase?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the producer.properties file.
     */
    producerProperties?: pulumi.Input<string>;
    /**
     * (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     */
    publicKeyFingerprint?: pulumi.Input<string>;
    /**
     * (Updatable) The name of the region. e.g.: us-ashburn-1
     */
    region?: pulumi.Input<string>;
    /**
     * (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when 'authenticationType' is set to 'SHARED_ACCESS_SIGNATURE'. e.g.: ?sv=2020-06-08&ss=bfqt&srt=sco&sp=rwdlacupyx&se=2020-09-10T20:27:28Z&st=2022-08-05T12:27:28Z&spr=https&sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D
     */
    sasToken?: pulumi.Input<string>;
    /**
     * (Updatable) Security protocol for PostgreSQL.
     */
    securityProtocol?: pulumi.Input<string>;
    /**
     * (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     */
    sessionMode?: pulumi.Input<string>;
    /**
     * (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
     */
    sslCa?: pulumi.Input<string>;
    /**
     * (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     */
    sslCert?: pulumi.Input<string>;
    /**
     * (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     */
    sslCrl?: pulumi.Input<string>;
    /**
     * (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     */
    sslKey?: pulumi.Input<string>;
    /**
     * (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided.
     */
    sslKeyPassword?: pulumi.Input<string>;
    /**
     * (Updatable) SSL modes for PostgreSQL.
     */
    sslMode?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
     */
    streamPoolId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The Kafka (e.g. Confluent) Schema Registry technology type.
     */
    technologyType: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * (Updatable) The base64 encoded content of the TrustStore file.
     */
    trustStore?: pulumi.Input<string>;
    /**
     * (Updatable) The TrustStore password.
     */
    trustStorePassword?: pulumi.Input<string>;
    /**
     * (Updatable) Kafka Schema Registry URL. e.g.: 'https://server1.us.oracle.com:8081'
     */
    url?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Object Storage. The user must have write access to the bucket they want to connect to.
     */
    userId?: pulumi.Input<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated RDBMS.  This username must already exist and be available for use by the database.  It must conform to the security requirements implemented by the database including length, case sensitivity, and so on.
     */
    username?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer vault being referenced. If provided, this will reference a vault which the customer will be required to ensure the policies are established to permit the GoldenGate Service to manage secrets contained within this vault.
     */
    vaultId?: pulumi.Input<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     */
    wallet?: pulumi.Input<string>;
}
