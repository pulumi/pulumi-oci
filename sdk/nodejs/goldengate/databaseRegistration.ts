// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Database Registration resource in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Note: Deprecated. Use the /connections API instead.
 * Creates a new DatabaseRegistration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDatabaseRegistration = new oci.goldengate.DatabaseRegistration("test_database_registration", {
 *     aliasName: databaseRegistrationAliasName,
 *     compartmentId: compartmentId,
 *     displayName: databaseRegistrationDisplayName,
 *     fqdn: databaseRegistrationFqdn,
 *     password: databaseRegistrationPassword,
 *     username: databaseRegistrationUsername,
 *     connectionString: databaseRegistrationConnectionString,
 *     databaseId: testDatabase.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: databaseRegistrationDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     ipAddress: databaseRegistrationIpAddress,
 *     keyId: testKey.id,
 *     secretCompartmentId: testCompartment.id,
 *     sessionMode: databaseRegistrationSessionMode,
 *     subnetId: testSubnet.id,
 *     vaultId: testVault.id,
 *     wallet: databaseRegistrationWallet,
 * });
 * ```
 *
 * ## Import
 *
 * DatabaseRegistrations can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:GoldenGate/databaseRegistration:DatabaseRegistration test_database_registration "id"
 * ```
 */
export class DatabaseRegistration extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseRegistration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseRegistrationState, opts?: pulumi.CustomResourceOptions): DatabaseRegistration {
        return new DatabaseRegistration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:GoldenGate/databaseRegistration:DatabaseRegistration';

    /**
     * Returns true if the given object is an instance of DatabaseRegistration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseRegistration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseRegistration.__pulumiType;
    }

    /**
     * (Updatable) Credential store alias.
     */
    declare public readonly aliasName: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
     */
    declare public readonly connectionString: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    declare public readonly databaseId: pulumi.Output<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
     */
    declare public readonly fqdn: pulumi.Output<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The private IP address in the customer's VCN of the customer's endpoint, typically a database.
     */
    declare public readonly ipAddress: pulumi.Output<string>;
    /**
     * Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     */
    declare public readonly keyId: pulumi.Output<string>;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. Deprecated: This field is deprecated and replaced by "passwordSecretId". This field will be removed after February 15 2026.
     */
    declare public readonly password: pulumi.Output<string>;
    /**
     * A Private Endpoint IP address created in the customer's subnet.  A customer database can expect network traffic initiated by GoldenGate Service from this IP address.  It can also send network traffic to this IP address, typically in response to requests from GoldenGate Service.  The customer may use this IP address in Security Lists or Network Security Groups (NSG) as needed.
     */
    declare public /*out*/ readonly rcePrivateIp: pulumi.Output<string>;
    /**
     * The OCID of the compartment where the GoldenGate Secret will be created.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     */
    declare public readonly secretCompartmentId: pulumi.Output<string>;
    /**
     * The OCID of the customer's GoldenGate Service Secret.  If provided, it references a key that customers will be required to ensure the policies are established  to permit GoldenGate to use this Secret.
     */
    declare public /*out*/ readonly secretId: pulumi.Output<string>;
    /**
     * (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     */
    declare public readonly sessionMode: pulumi.Output<string>;
    /**
     * Possible lifecycle states.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
     */
    declare public readonly username: pulumi.Output<string>;
    /**
     * Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
     */
    declare public readonly vaultId: pulumi.Output<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database. This attribute is expected to be base64 encoded. Deprecated: This field is deprecated and replaced by "walletSecretId". This field will be removed after February 15 2026. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly wallet: pulumi.Output<string>;

    /**
     * Create a DatabaseRegistration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatabaseRegistrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseRegistrationArgs | DatabaseRegistrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseRegistrationState | undefined;
            resourceInputs["aliasName"] = state?.aliasName;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["connectionString"] = state?.connectionString;
            resourceInputs["databaseId"] = state?.databaseId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["fqdn"] = state?.fqdn;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["ipAddress"] = state?.ipAddress;
            resourceInputs["keyId"] = state?.keyId;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["password"] = state?.password;
            resourceInputs["rcePrivateIp"] = state?.rcePrivateIp;
            resourceInputs["secretCompartmentId"] = state?.secretCompartmentId;
            resourceInputs["secretId"] = state?.secretId;
            resourceInputs["sessionMode"] = state?.sessionMode;
            resourceInputs["state"] = state?.state;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["username"] = state?.username;
            resourceInputs["vaultId"] = state?.vaultId;
            resourceInputs["wallet"] = state?.wallet;
        } else {
            const args = argsOrState as DatabaseRegistrationArgs | undefined;
            if (args?.aliasName === undefined && !opts.urn) {
                throw new Error("Missing required property 'aliasName'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.fqdn === undefined && !opts.urn) {
                throw new Error("Missing required property 'fqdn'");
            }
            if (args?.password === undefined && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if (args?.username === undefined && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["aliasName"] = args?.aliasName;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["connectionString"] = args?.connectionString;
            resourceInputs["databaseId"] = args?.databaseId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["fqdn"] = args?.fqdn;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["ipAddress"] = args?.ipAddress;
            resourceInputs["keyId"] = args?.keyId;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["secretCompartmentId"] = args?.secretCompartmentId;
            resourceInputs["sessionMode"] = args?.sessionMode;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["username"] = args?.username;
            resourceInputs["vaultId"] = args?.vaultId;
            resourceInputs["wallet"] = args?.wallet;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["rcePrivateIp"] = undefined /*out*/;
            resourceInputs["secretId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DatabaseRegistration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseRegistration resources.
 */
export interface DatabaseRegistrationState {
    /**
     * (Updatable) Credential store alias.
     */
    aliasName?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The private IP address in the customer's VCN of the customer's endpoint, typically a database.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     */
    keyId?: pulumi.Input<string>;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. Deprecated: This field is deprecated and replaced by "passwordSecretId". This field will be removed after February 15 2026.
     */
    password?: pulumi.Input<string>;
    /**
     * A Private Endpoint IP address created in the customer's subnet.  A customer database can expect network traffic initiated by GoldenGate Service from this IP address.  It can also send network traffic to this IP address, typically in response to requests from GoldenGate Service.  The customer may use this IP address in Security Lists or Network Security Groups (NSG) as needed.
     */
    rcePrivateIp?: pulumi.Input<string>;
    /**
     * The OCID of the compartment where the GoldenGate Secret will be created.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     */
    secretCompartmentId?: pulumi.Input<string>;
    /**
     * The OCID of the customer's GoldenGate Service Secret.  If provided, it references a key that customers will be required to ensure the policies are established  to permit GoldenGate to use this Secret.
     */
    secretId?: pulumi.Input<string>;
    /**
     * (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     */
    sessionMode?: pulumi.Input<string>;
    /**
     * Possible lifecycle states.
     */
    state?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
     */
    username?: pulumi.Input<string>;
    /**
     * Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
     */
    vaultId?: pulumi.Input<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database. This attribute is expected to be base64 encoded. Deprecated: This field is deprecated and replaced by "walletSecretId". This field will be removed after February 15 2026. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    wallet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatabaseRegistration resource.
 */
export interface DatabaseRegistrationArgs {
    /**
     * (Updatable) Credential store alias.
     */
    aliasName: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
     */
    connectionString?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
     */
    fqdn: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The private IP address in the customer's VCN of the customer's endpoint, typically a database.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Refers to the customer's master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     */
    keyId?: pulumi.Input<string>;
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on. Deprecated: This field is deprecated and replaced by "passwordSecretId". This field will be removed after February 15 2026.
     */
    password: pulumi.Input<string>;
    /**
     * The OCID of the compartment where the GoldenGate Secret will be created.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     */
    secretCompartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The mode of the database connection session to be established by the data client. 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     */
    sessionMode?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
     */
    username: pulumi.Input<string>;
    /**
     * Refers to the customer's vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
     */
    vaultId?: pulumi.Input<string>;
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database. This attribute is expected to be base64 encoded. Deprecated: This field is deprecated and replaced by "walletSecretId". This field will be removed after February 15 2026. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    wallet?: pulumi.Input<string>;
}
