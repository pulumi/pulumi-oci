// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Deployment Certificates in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Returns a list of certificates from truststore.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDeploymentCertificates = oci.GoldenGate.getDeploymentCertificates({
 *     deploymentId: testDeployment.id,
 *     state: deploymentCertificateState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDeploymentCertificates(args: GetDeploymentCertificatesArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentCertificatesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:GoldenGate/getDeploymentCertificates:getDeploymentCertificates", {
        "deploymentId": args.deploymentId,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDeploymentCertificates.
 */
export interface GetDeploymentCertificatesArgs {
    /**
     * A unique Deployment identifier.
     */
    deploymentId: string;
    filters?: inputs.GoldenGate.GetDeploymentCertificatesFilter[];
    /**
     * A filter to return only connections having the 'lifecycleState' given.
     */
    state?: string;
}

/**
 * A collection of values returned by getDeploymentCertificates.
 */
export interface GetDeploymentCertificatesResult {
    /**
     * The list of certificate_collection.
     */
    readonly certificateCollections: outputs.GoldenGate.GetDeploymentCertificatesCertificateCollection[];
    readonly deploymentId: string;
    readonly filters?: outputs.GoldenGate.GetDeploymentCertificatesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Possible certificate lifecycle states.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Deployment Certificates in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Returns a list of certificates from truststore.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDeploymentCertificates = oci.GoldenGate.getDeploymentCertificates({
 *     deploymentId: testDeployment.id,
 *     state: deploymentCertificateState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getDeploymentCertificatesOutput(args: GetDeploymentCertificatesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentCertificatesResult> {
    return pulumi.output(args).apply((a: any) => getDeploymentCertificates(a, opts))
}

/**
 * A collection of arguments for invoking getDeploymentCertificates.
 */
export interface GetDeploymentCertificatesOutputArgs {
    /**
     * A unique Deployment identifier.
     */
    deploymentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GoldenGate.GetDeploymentCertificatesFilterArgs>[]>;
    /**
     * A filter to return only connections having the 'lifecycleState' given.
     */
    state?: pulumi.Input<string>;
}
