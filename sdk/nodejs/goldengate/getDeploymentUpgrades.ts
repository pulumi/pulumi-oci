// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Deployment Upgrades in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Lists the Deployment Upgrades in a compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDeploymentUpgrades = oci.GoldenGate.getDeploymentUpgrades({
 *     compartmentId: _var.compartment_id,
 *     deploymentId: oci_golden_gate_deployment.test_deployment.id,
 *     displayName: _var.deployment_upgrade_display_name,
 *     state: _var.deployment_upgrade_state,
 * });
 * ```
 */
export function getDeploymentUpgrades(args: GetDeploymentUpgradesArgs, opts?: pulumi.InvokeOptions): Promise<GetDeploymentUpgradesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:GoldenGate/getDeploymentUpgrades:getDeploymentUpgrades", {
        "compartmentId": args.compartmentId,
        "deploymentId": args.deploymentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDeploymentUpgrades.
 */
export interface GetDeploymentUpgradesArgs {
    /**
     * The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     */
    compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
     */
    deploymentId?: string;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName?: string;
    filters?: inputs.GoldenGate.GetDeploymentUpgradesFilter[];
    /**
     * A filter to return only the resources that match the 'lifecycleState' given.
     */
    state?: string;
}

/**
 * A collection of values returned by getDeploymentUpgrades.
 */
export interface GetDeploymentUpgradesResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    readonly compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     */
    readonly deploymentId?: string;
    /**
     * The list of deployment_upgrade_collection.
     */
    readonly deploymentUpgradeCollections: outputs.GoldenGate.GetDeploymentUpgradesDeploymentUpgradeCollection[];
    /**
     * An object's Display Name.
     */
    readonly displayName?: string;
    readonly filters?: outputs.GoldenGate.GetDeploymentUpgradesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Possible lifecycle states.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Deployment Upgrades in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Lists the Deployment Upgrades in a compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDeploymentUpgrades = oci.GoldenGate.getDeploymentUpgrades({
 *     compartmentId: _var.compartment_id,
 *     deploymentId: oci_golden_gate_deployment.test_deployment.id,
 *     displayName: _var.deployment_upgrade_display_name,
 *     state: _var.deployment_upgrade_state,
 * });
 * ```
 */
export function getDeploymentUpgradesOutput(args: GetDeploymentUpgradesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDeploymentUpgradesResult> {
    return pulumi.output(args).apply((a: any) => getDeploymentUpgrades(a, opts))
}

/**
 * A collection of arguments for invoking getDeploymentUpgrades.
 */
export interface GetDeploymentUpgradesOutputArgs {
    /**
     * The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
     */
    deploymentId?: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GoldenGate.GetDeploymentUpgradesFilterArgs>[]>;
    /**
     * A filter to return only the resources that match the 'lifecycleState' given.
     */
    state?: pulumi.Input<string>;
}
