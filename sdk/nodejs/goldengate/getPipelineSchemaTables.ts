// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Pipeline Schema Tables in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Returns an array of tables under the given schemas of the pipeline for given source and target schemas passed as query params.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPipelineSchemaTables = oci.GoldenGate.getPipelineSchemaTables({
 *     pipelineId: testPipeline.id,
 *     sourceSchemaName: pipelineSchemaTableSourceSchemaName,
 *     targetSchemaName: pipelineSchemaTableTargetSchemaName,
 *     displayName: pipelineSchemaTableDisplayName,
 * });
 * ```
 */
export function getPipelineSchemaTables(args: GetPipelineSchemaTablesArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineSchemaTablesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:GoldenGate/getPipelineSchemaTables:getPipelineSchemaTables", {
        "displayName": args.displayName,
        "filters": args.filters,
        "pipelineId": args.pipelineId,
        "sourceSchemaName": args.sourceSchemaName,
        "targetSchemaName": args.targetSchemaName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelineSchemaTables.
 */
export interface GetPipelineSchemaTablesArgs {
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName?: string;
    filters?: inputs.GoldenGate.GetPipelineSchemaTablesFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline created.
     */
    pipelineId: string;
    /**
     * Name of the source schema obtained from get schema endpoint of the created pipeline.
     */
    sourceSchemaName: string;
    /**
     * Name of the target schema obtained from get schema endpoint of the created pipeline.
     */
    targetSchemaName: string;
}

/**
 * A collection of values returned by getPipelineSchemaTables.
 */
export interface GetPipelineSchemaTablesResult {
    readonly displayName?: string;
    readonly filters?: outputs.GoldenGate.GetPipelineSchemaTablesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly pipelineId: string;
    /**
     * The list of pipeline_schema_table_collection.
     */
    readonly pipelineSchemaTableCollections: outputs.GoldenGate.GetPipelineSchemaTablesPipelineSchemaTableCollection[];
    /**
     * The schema name from the database connection.
     */
    readonly sourceSchemaName: string;
    /**
     * The schema name from the database connection.
     */
    readonly targetSchemaName: string;
}
/**
 * This data source provides the list of Pipeline Schema Tables in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Returns an array of tables under the given schemas of the pipeline for given source and target schemas passed as query params.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPipelineSchemaTables = oci.GoldenGate.getPipelineSchemaTables({
 *     pipelineId: testPipeline.id,
 *     sourceSchemaName: pipelineSchemaTableSourceSchemaName,
 *     targetSchemaName: pipelineSchemaTableTargetSchemaName,
 *     displayName: pipelineSchemaTableDisplayName,
 * });
 * ```
 */
export function getPipelineSchemaTablesOutput(args: GetPipelineSchemaTablesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPipelineSchemaTablesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:GoldenGate/getPipelineSchemaTables:getPipelineSchemaTables", {
        "displayName": args.displayName,
        "filters": args.filters,
        "pipelineId": args.pipelineId,
        "sourceSchemaName": args.sourceSchemaName,
        "targetSchemaName": args.targetSchemaName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelineSchemaTables.
 */
export interface GetPipelineSchemaTablesOutputArgs {
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GoldenGate.GetPipelineSchemaTablesFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline created.
     */
    pipelineId: pulumi.Input<string>;
    /**
     * Name of the source schema obtained from get schema endpoint of the created pipeline.
     */
    sourceSchemaName: pulumi.Input<string>;
    /**
     * Name of the target schema obtained from get schema endpoint of the created pipeline.
     */
    targetSchemaName: pulumi.Input<string>;
}
