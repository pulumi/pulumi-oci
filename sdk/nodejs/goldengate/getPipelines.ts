// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Pipelines in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Lists the Pipelines in the compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPipelines = oci.GoldenGate.getPipelines({
 *     compartmentId: compartmentId,
 *     displayName: pipelineDisplayName,
 *     lifecycleSubState: pipelineLifecycleSubState,
 *     state: pipelineState,
 * });
 * ```
 */
export function getPipelines(args: GetPipelinesArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelinesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:GoldenGate/getPipelines:getPipelines", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "lifecycleSubState": args.lifecycleSubState,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelines.
 */
export interface GetPipelinesArgs {
    /**
     * The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     */
    compartmentId: string;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName?: string;
    filters?: inputs.GoldenGate.GetPipelinesFilter[];
    /**
     * A filtered list of pipelines to return for a given lifecycleSubState.
     */
    lifecycleSubState?: string;
    /**
     * A filtered list of pipelines to return for a given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getPipelines.
 */
export interface GetPipelinesResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    readonly compartmentId: string;
    /**
     * An object's Display Name.
     */
    readonly displayName?: string;
    readonly filters?: outputs.GoldenGate.GetPipelinesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Possible lifecycle substates when retrieving a pipeline.
     */
    readonly lifecycleSubState?: string;
    /**
     * The list of pipeline_collection.
     */
    readonly pipelineCollections: outputs.GoldenGate.GetPipelinesPipelineCollection[];
    /**
     * Lifecycle state of the pipeline.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Pipelines in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Lists the Pipelines in the compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPipelines = oci.GoldenGate.getPipelines({
 *     compartmentId: compartmentId,
 *     displayName: pipelineDisplayName,
 *     lifecycleSubState: pipelineLifecycleSubState,
 *     state: pipelineState,
 * });
 * ```
 */
export function getPipelinesOutput(args: GetPipelinesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPipelinesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:GoldenGate/getPipelines:getPipelines", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "lifecycleSubState": args.lifecycleSubState,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getPipelines.
 */
export interface GetPipelinesOutputArgs {
    /**
     * The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GoldenGate.GetPipelinesFilterArgs>[]>;
    /**
     * A filtered list of pipelines to return for a given lifecycleSubState.
     */
    lifecycleSubState?: pulumi.Input<string>;
    /**
     * A filtered list of pipelines to return for a given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
