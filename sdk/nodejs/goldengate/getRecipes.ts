// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Recipes in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Returns an array of Recipe Summary.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRecipes = oci.GoldenGate.getRecipes({
 *     compartmentId: compartmentId,
 *     displayName: recipeDisplayName,
 *     recipeType: recipeRecipeType,
 * });
 * ```
 */
export function getRecipes(args: GetRecipesArgs, opts?: pulumi.InvokeOptions): Promise<GetRecipesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:GoldenGate/getRecipes:getRecipes", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "recipeType": args.recipeType,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecipes.
 */
export interface GetRecipesArgs {
    /**
     * The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     */
    compartmentId: string;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName?: string;
    filters?: inputs.GoldenGate.GetRecipesFilter[];
    /**
     * The pipeline's recipe type. The default value is ZERO_ETL.
     */
    recipeType?: string;
}

/**
 * A collection of values returned by getRecipes.
 */
export interface GetRecipesResult {
    readonly compartmentId: string;
    /**
     * An object's Display Name.
     */
    readonly displayName?: string;
    readonly filters?: outputs.GoldenGate.GetRecipesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of recipe_summary_collection.
     */
    readonly recipeSummaryCollections: outputs.GoldenGate.GetRecipesRecipeSummaryCollection[];
    /**
     * The type of the recipe
     */
    readonly recipeType?: string;
}
/**
 * This data source provides the list of Recipes in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Returns an array of Recipe Summary.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRecipes = oci.GoldenGate.getRecipes({
 *     compartmentId: compartmentId,
 *     displayName: recipeDisplayName,
 *     recipeType: recipeRecipeType,
 * });
 * ```
 */
export function getRecipesOutput(args: GetRecipesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRecipesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:GoldenGate/getRecipes:getRecipes", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "recipeType": args.recipeType,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecipes.
 */
export interface GetRecipesOutputArgs {
    /**
     * The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the entire 'displayName' given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.GoldenGate.GetRecipesFilterArgs>[]>;
    /**
     * The pipeline's recipe type. The default value is ZERO_ETL.
     */
    recipeType?: pulumi.Input<string>;
}
