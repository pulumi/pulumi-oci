// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConnectionArgs, ConnectionState } from "./connection";
export type Connection = import("./connection").Connection;
export const Connection: typeof import("./connection").Connection = null as any;
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));

export { ConnectionAssignmentArgs, ConnectionAssignmentState } from "./connectionAssignment";
export type ConnectionAssignment = import("./connectionAssignment").ConnectionAssignment;
export const ConnectionAssignment: typeof import("./connectionAssignment").ConnectionAssignment = null as any;
utilities.lazyLoad(exports, ["ConnectionAssignment"], () => require("./connectionAssignment"));

export { DatabaseRegistrationArgs, DatabaseRegistrationState } from "./databaseRegistration";
export type DatabaseRegistration = import("./databaseRegistration").DatabaseRegistration;
export const DatabaseRegistration: typeof import("./databaseRegistration").DatabaseRegistration = null as any;
utilities.lazyLoad(exports, ["DatabaseRegistration"], () => require("./databaseRegistration"));

export { DeploymentArgs, DeploymentState } from "./deployment";
export type Deployment = import("./deployment").Deployment;
export const Deployment: typeof import("./deployment").Deployment = null as any;
utilities.lazyLoad(exports, ["Deployment"], () => require("./deployment"));

export { DeploymentBackupArgs, DeploymentBackupState } from "./deploymentBackup";
export type DeploymentBackup = import("./deploymentBackup").DeploymentBackup;
export const DeploymentBackup: typeof import("./deploymentBackup").DeploymentBackup = null as any;
utilities.lazyLoad(exports, ["DeploymentBackup"], () => require("./deploymentBackup"));

export { DeploymentCertificateArgs, DeploymentCertificateState } from "./deploymentCertificate";
export type DeploymentCertificate = import("./deploymentCertificate").DeploymentCertificate;
export const DeploymentCertificate: typeof import("./deploymentCertificate").DeploymentCertificate = null as any;
utilities.lazyLoad(exports, ["DeploymentCertificate"], () => require("./deploymentCertificate"));

export { GetConnectionArgs, GetConnectionResult, GetConnectionOutputArgs } from "./getConnection";
export const getConnection: typeof import("./getConnection").getConnection = null as any;
export const getConnectionOutput: typeof import("./getConnection").getConnectionOutput = null as any;
utilities.lazyLoad(exports, ["getConnection","getConnectionOutput"], () => require("./getConnection"));

export { GetConnectionAssignmentArgs, GetConnectionAssignmentResult, GetConnectionAssignmentOutputArgs } from "./getConnectionAssignment";
export const getConnectionAssignment: typeof import("./getConnectionAssignment").getConnectionAssignment = null as any;
export const getConnectionAssignmentOutput: typeof import("./getConnectionAssignment").getConnectionAssignmentOutput = null as any;
utilities.lazyLoad(exports, ["getConnectionAssignment","getConnectionAssignmentOutput"], () => require("./getConnectionAssignment"));

export { GetConnectionAssignmentsArgs, GetConnectionAssignmentsResult, GetConnectionAssignmentsOutputArgs } from "./getConnectionAssignments";
export const getConnectionAssignments: typeof import("./getConnectionAssignments").getConnectionAssignments = null as any;
export const getConnectionAssignmentsOutput: typeof import("./getConnectionAssignments").getConnectionAssignmentsOutput = null as any;
utilities.lazyLoad(exports, ["getConnectionAssignments","getConnectionAssignmentsOutput"], () => require("./getConnectionAssignments"));

export { GetConnectionsArgs, GetConnectionsResult, GetConnectionsOutputArgs } from "./getConnections";
export const getConnections: typeof import("./getConnections").getConnections = null as any;
export const getConnectionsOutput: typeof import("./getConnections").getConnectionsOutput = null as any;
utilities.lazyLoad(exports, ["getConnections","getConnectionsOutput"], () => require("./getConnections"));

export { GetDatabaseRegistrationArgs, GetDatabaseRegistrationResult, GetDatabaseRegistrationOutputArgs } from "./getDatabaseRegistration";
export const getDatabaseRegistration: typeof import("./getDatabaseRegistration").getDatabaseRegistration = null as any;
export const getDatabaseRegistrationOutput: typeof import("./getDatabaseRegistration").getDatabaseRegistrationOutput = null as any;
utilities.lazyLoad(exports, ["getDatabaseRegistration","getDatabaseRegistrationOutput"], () => require("./getDatabaseRegistration"));

export { GetDatabaseRegistrationsArgs, GetDatabaseRegistrationsResult, GetDatabaseRegistrationsOutputArgs } from "./getDatabaseRegistrations";
export const getDatabaseRegistrations: typeof import("./getDatabaseRegistrations").getDatabaseRegistrations = null as any;
export const getDatabaseRegistrationsOutput: typeof import("./getDatabaseRegistrations").getDatabaseRegistrationsOutput = null as any;
utilities.lazyLoad(exports, ["getDatabaseRegistrations","getDatabaseRegistrationsOutput"], () => require("./getDatabaseRegistrations"));

export { GetDeploymentArgs, GetDeploymentResult, GetDeploymentOutputArgs } from "./getDeployment";
export const getDeployment: typeof import("./getDeployment").getDeployment = null as any;
export const getDeploymentOutput: typeof import("./getDeployment").getDeploymentOutput = null as any;
utilities.lazyLoad(exports, ["getDeployment","getDeploymentOutput"], () => require("./getDeployment"));

export { GetDeploymentBackupArgs, GetDeploymentBackupResult, GetDeploymentBackupOutputArgs } from "./getDeploymentBackup";
export const getDeploymentBackup: typeof import("./getDeploymentBackup").getDeploymentBackup = null as any;
export const getDeploymentBackupOutput: typeof import("./getDeploymentBackup").getDeploymentBackupOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentBackup","getDeploymentBackupOutput"], () => require("./getDeploymentBackup"));

export { GetDeploymentBackupsArgs, GetDeploymentBackupsResult, GetDeploymentBackupsOutputArgs } from "./getDeploymentBackups";
export const getDeploymentBackups: typeof import("./getDeploymentBackups").getDeploymentBackups = null as any;
export const getDeploymentBackupsOutput: typeof import("./getDeploymentBackups").getDeploymentBackupsOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentBackups","getDeploymentBackupsOutput"], () => require("./getDeploymentBackups"));

export { GetDeploymentCertificateArgs, GetDeploymentCertificateResult, GetDeploymentCertificateOutputArgs } from "./getDeploymentCertificate";
export const getDeploymentCertificate: typeof import("./getDeploymentCertificate").getDeploymentCertificate = null as any;
export const getDeploymentCertificateOutput: typeof import("./getDeploymentCertificate").getDeploymentCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentCertificate","getDeploymentCertificateOutput"], () => require("./getDeploymentCertificate"));

export { GetDeploymentCertificatesArgs, GetDeploymentCertificatesResult, GetDeploymentCertificatesOutputArgs } from "./getDeploymentCertificates";
export const getDeploymentCertificates: typeof import("./getDeploymentCertificates").getDeploymentCertificates = null as any;
export const getDeploymentCertificatesOutput: typeof import("./getDeploymentCertificates").getDeploymentCertificatesOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentCertificates","getDeploymentCertificatesOutput"], () => require("./getDeploymentCertificates"));

export { GetDeploymentEnvironmentsArgs, GetDeploymentEnvironmentsResult, GetDeploymentEnvironmentsOutputArgs } from "./getDeploymentEnvironments";
export const getDeploymentEnvironments: typeof import("./getDeploymentEnvironments").getDeploymentEnvironments = null as any;
export const getDeploymentEnvironmentsOutput: typeof import("./getDeploymentEnvironments").getDeploymentEnvironmentsOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentEnvironments","getDeploymentEnvironmentsOutput"], () => require("./getDeploymentEnvironments"));

export { GetDeploymentPeersArgs, GetDeploymentPeersResult, GetDeploymentPeersOutputArgs } from "./getDeploymentPeers";
export const getDeploymentPeers: typeof import("./getDeploymentPeers").getDeploymentPeers = null as any;
export const getDeploymentPeersOutput: typeof import("./getDeploymentPeers").getDeploymentPeersOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentPeers","getDeploymentPeersOutput"], () => require("./getDeploymentPeers"));

export { GetDeploymentTypeArgs, GetDeploymentTypeResult, GetDeploymentTypeOutputArgs } from "./getDeploymentType";
export const getDeploymentType: typeof import("./getDeploymentType").getDeploymentType = null as any;
export const getDeploymentTypeOutput: typeof import("./getDeploymentType").getDeploymentTypeOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentType","getDeploymentTypeOutput"], () => require("./getDeploymentType"));

export { GetDeploymentTypesArgs, GetDeploymentTypesResult, GetDeploymentTypesOutputArgs } from "./getDeploymentTypes";
export const getDeploymentTypes: typeof import("./getDeploymentTypes").getDeploymentTypes = null as any;
export const getDeploymentTypesOutput: typeof import("./getDeploymentTypes").getDeploymentTypesOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentTypes","getDeploymentTypesOutput"], () => require("./getDeploymentTypes"));

export { GetDeploymentUpgradeArgs, GetDeploymentUpgradeResult, GetDeploymentUpgradeOutputArgs } from "./getDeploymentUpgrade";
export const getDeploymentUpgrade: typeof import("./getDeploymentUpgrade").getDeploymentUpgrade = null as any;
export const getDeploymentUpgradeOutput: typeof import("./getDeploymentUpgrade").getDeploymentUpgradeOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentUpgrade","getDeploymentUpgradeOutput"], () => require("./getDeploymentUpgrade"));

export { GetDeploymentUpgradesArgs, GetDeploymentUpgradesResult, GetDeploymentUpgradesOutputArgs } from "./getDeploymentUpgrades";
export const getDeploymentUpgrades: typeof import("./getDeploymentUpgrades").getDeploymentUpgrades = null as any;
export const getDeploymentUpgradesOutput: typeof import("./getDeploymentUpgrades").getDeploymentUpgradesOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentUpgrades","getDeploymentUpgradesOutput"], () => require("./getDeploymentUpgrades"));

export { GetDeploymentVersionsArgs, GetDeploymentVersionsResult, GetDeploymentVersionsOutputArgs } from "./getDeploymentVersions";
export const getDeploymentVersions: typeof import("./getDeploymentVersions").getDeploymentVersions = null as any;
export const getDeploymentVersionsOutput: typeof import("./getDeploymentVersions").getDeploymentVersionsOutput = null as any;
utilities.lazyLoad(exports, ["getDeploymentVersions","getDeploymentVersionsOutput"], () => require("./getDeploymentVersions"));

export { GetDeploymentsArgs, GetDeploymentsResult, GetDeploymentsOutputArgs } from "./getDeployments";
export const getDeployments: typeof import("./getDeployments").getDeployments = null as any;
export const getDeploymentsOutput: typeof import("./getDeployments").getDeploymentsOutput = null as any;
utilities.lazyLoad(exports, ["getDeployments","getDeploymentsOutput"], () => require("./getDeployments"));

export { GetMessageArgs, GetMessageResult, GetMessageOutputArgs } from "./getMessage";
export const getMessage: typeof import("./getMessage").getMessage = null as any;
export const getMessageOutput: typeof import("./getMessage").getMessageOutput = null as any;
utilities.lazyLoad(exports, ["getMessage","getMessageOutput"], () => require("./getMessage"));

export { GetMessagesArgs, GetMessagesResult, GetMessagesOutputArgs } from "./getMessages";
export const getMessages: typeof import("./getMessages").getMessages = null as any;
export const getMessagesOutput: typeof import("./getMessages").getMessagesOutput = null as any;
utilities.lazyLoad(exports, ["getMessages","getMessagesOutput"], () => require("./getMessages"));

export { GetPipelineArgs, GetPipelineResult, GetPipelineOutputArgs } from "./getPipeline";
export const getPipeline: typeof import("./getPipeline").getPipeline = null as any;
export const getPipelineOutput: typeof import("./getPipeline").getPipelineOutput = null as any;
utilities.lazyLoad(exports, ["getPipeline","getPipelineOutput"], () => require("./getPipeline"));

export { GetPipelineRunningProcessesArgs, GetPipelineRunningProcessesResult, GetPipelineRunningProcessesOutputArgs } from "./getPipelineRunningProcesses";
export const getPipelineRunningProcesses: typeof import("./getPipelineRunningProcesses").getPipelineRunningProcesses = null as any;
export const getPipelineRunningProcessesOutput: typeof import("./getPipelineRunningProcesses").getPipelineRunningProcessesOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineRunningProcesses","getPipelineRunningProcessesOutput"], () => require("./getPipelineRunningProcesses"));

export { GetPipelineSchemaTablesArgs, GetPipelineSchemaTablesResult, GetPipelineSchemaTablesOutputArgs } from "./getPipelineSchemaTables";
export const getPipelineSchemaTables: typeof import("./getPipelineSchemaTables").getPipelineSchemaTables = null as any;
export const getPipelineSchemaTablesOutput: typeof import("./getPipelineSchemaTables").getPipelineSchemaTablesOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineSchemaTables","getPipelineSchemaTablesOutput"], () => require("./getPipelineSchemaTables"));

export { GetPipelineSchemasArgs, GetPipelineSchemasResult, GetPipelineSchemasOutputArgs } from "./getPipelineSchemas";
export const getPipelineSchemas: typeof import("./getPipelineSchemas").getPipelineSchemas = null as any;
export const getPipelineSchemasOutput: typeof import("./getPipelineSchemas").getPipelineSchemasOutput = null as any;
utilities.lazyLoad(exports, ["getPipelineSchemas","getPipelineSchemasOutput"], () => require("./getPipelineSchemas"));

export { GetPipelinesArgs, GetPipelinesResult, GetPipelinesOutputArgs } from "./getPipelines";
export const getPipelines: typeof import("./getPipelines").getPipelines = null as any;
export const getPipelinesOutput: typeof import("./getPipelines").getPipelinesOutput = null as any;
utilities.lazyLoad(exports, ["getPipelines","getPipelinesOutput"], () => require("./getPipelines"));

export { GetRecipesArgs, GetRecipesResult, GetRecipesOutputArgs } from "./getRecipes";
export const getRecipes: typeof import("./getRecipes").getRecipes = null as any;
export const getRecipesOutput: typeof import("./getRecipes").getRecipesOutput = null as any;
utilities.lazyLoad(exports, ["getRecipes","getRecipesOutput"], () => require("./getRecipes"));

export { GetTrailFileArgs, GetTrailFileResult, GetTrailFileOutputArgs } from "./getTrailFile";
export const getTrailFile: typeof import("./getTrailFile").getTrailFile = null as any;
export const getTrailFileOutput: typeof import("./getTrailFile").getTrailFileOutput = null as any;
utilities.lazyLoad(exports, ["getTrailFile","getTrailFileOutput"], () => require("./getTrailFile"));

export { GetTrailFilesArgs, GetTrailFilesResult, GetTrailFilesOutputArgs } from "./getTrailFiles";
export const getTrailFiles: typeof import("./getTrailFiles").getTrailFiles = null as any;
export const getTrailFilesOutput: typeof import("./getTrailFiles").getTrailFilesOutput = null as any;
utilities.lazyLoad(exports, ["getTrailFiles","getTrailFilesOutput"], () => require("./getTrailFiles"));

export { GetTrailSequenceArgs, GetTrailSequenceResult, GetTrailSequenceOutputArgs } from "./getTrailSequence";
export const getTrailSequence: typeof import("./getTrailSequence").getTrailSequence = null as any;
export const getTrailSequenceOutput: typeof import("./getTrailSequence").getTrailSequenceOutput = null as any;
utilities.lazyLoad(exports, ["getTrailSequence","getTrailSequenceOutput"], () => require("./getTrailSequence"));

export { GetTrailSequencesArgs, GetTrailSequencesResult, GetTrailSequencesOutputArgs } from "./getTrailSequences";
export const getTrailSequences: typeof import("./getTrailSequences").getTrailSequences = null as any;
export const getTrailSequencesOutput: typeof import("./getTrailSequences").getTrailSequencesOutput = null as any;
utilities.lazyLoad(exports, ["getTrailSequences","getTrailSequencesOutput"], () => require("./getTrailSequences"));

export { PipelineArgs, PipelineState } from "./pipeline";
export type Pipeline = import("./pipeline").Pipeline;
export const Pipeline: typeof import("./pipeline").Pipeline = null as any;
utilities.lazyLoad(exports, ["Pipeline"], () => require("./pipeline"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:GoldenGate/connection:Connection":
                return new Connection(name, <any>undefined, { urn })
            case "oci:GoldenGate/connectionAssignment:ConnectionAssignment":
                return new ConnectionAssignment(name, <any>undefined, { urn })
            case "oci:GoldenGate/databaseRegistration:DatabaseRegistration":
                return new DatabaseRegistration(name, <any>undefined, { urn })
            case "oci:GoldenGate/deployment:Deployment":
                return new Deployment(name, <any>undefined, { urn })
            case "oci:GoldenGate/deploymentBackup:DeploymentBackup":
                return new DeploymentBackup(name, <any>undefined, { urn })
            case "oci:GoldenGate/deploymentCertificate:DeploymentCertificate":
                return new DeploymentCertificate(name, <any>undefined, { urn })
            case "oci:GoldenGate/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "GoldenGate/connection", _module)
pulumi.runtime.registerResourceModule("oci", "GoldenGate/connectionAssignment", _module)
pulumi.runtime.registerResourceModule("oci", "GoldenGate/databaseRegistration", _module)
pulumi.runtime.registerResourceModule("oci", "GoldenGate/deployment", _module)
pulumi.runtime.registerResourceModule("oci", "GoldenGate/deploymentBackup", _module)
pulumi.runtime.registerResourceModule("oci", "GoldenGate/deploymentCertificate", _module)
pulumi.runtime.registerResourceModule("oci", "GoldenGate/pipeline", _module)
