// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Pipeline resource in Oracle Cloud Infrastructure Golden Gate service.
 *
 * Creates a new Pipeline.
 *
 * ## Import
 *
 * Pipelines can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:GoldenGate/pipeline:Pipeline test_pipeline "id"
 * ```
 */
export class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PipelineState, opts?: pulumi.CustomResourceOptions): Pipeline {
        return new Pipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:GoldenGate/pipeline:Pipeline';

    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Pipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pipeline.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * The Minimum number of OCPUs to be made available for this Deployment.
     */
    declare public /*out*/ readonly cpuCoreCount: pulumi.Output<number>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Indicates if auto scaling is enabled for the Deployment's CPU core count.
     */
    declare public /*out*/ readonly isAutoScalingEnabled: pulumi.Output<boolean>;
    /**
     * (Updatable) The Oracle license model that applies to a Deployment.
     */
    declare public readonly licenseModel: pulumi.Output<string>;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * Possible lifecycle substates when retrieving a pipeline.
     */
    declare public /*out*/ readonly lifecycleSubState: pulumi.Output<string>;
    /**
     * Locks associated with this resource.
     */
    declare public readonly locks: pulumi.Output<outputs.GoldenGate.PipelineLock[]>;
    /**
     * Mapping for source/target schema/tables for the pipeline data replication.
     */
    declare public /*out*/ readonly mappingRules: pulumi.Output<outputs.GoldenGate.PipelineMappingRule[]>;
    /**
     * Information regarding the pipeline diagnostic collection
     */
    declare public /*out*/ readonly pipelineDiagnosticDatas: pulumi.Output<outputs.GoldenGate.PipelinePipelineDiagnosticData[]>;
    /**
     * (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
     */
    declare public readonly processOptions: pulumi.Output<outputs.GoldenGate.PipelineProcessOptions>;
    /**
     * (Updatable) The type of the recipe
     */
    declare public readonly recipeType: pulumi.Output<string>;
    /**
     * The source connection details for creating a pipeline.
     */
    declare public readonly sourceConnectionDetails: pulumi.Output<outputs.GoldenGate.PipelineSourceConnectionDetails>;
    /**
     * Lifecycle state of the pipeline.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The target connection details for creating a pipeline.
     */
    declare public readonly targetConnectionDetails: pulumi.Output<outputs.GoldenGate.PipelineTargetConnectionDetails>;
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
     */
    declare public /*out*/ readonly timeLastRecorded: pulumi.Output<string>;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PipelineArgs | PipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PipelineState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["cpuCoreCount"] = state?.cpuCoreCount;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["isAutoScalingEnabled"] = state?.isAutoScalingEnabled;
            resourceInputs["licenseModel"] = state?.licenseModel;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["lifecycleSubState"] = state?.lifecycleSubState;
            resourceInputs["locks"] = state?.locks;
            resourceInputs["mappingRules"] = state?.mappingRules;
            resourceInputs["pipelineDiagnosticDatas"] = state?.pipelineDiagnosticDatas;
            resourceInputs["processOptions"] = state?.processOptions;
            resourceInputs["recipeType"] = state?.recipeType;
            resourceInputs["sourceConnectionDetails"] = state?.sourceConnectionDetails;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["targetConnectionDetails"] = state?.targetConnectionDetails;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeLastRecorded"] = state?.timeLastRecorded;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as PipelineArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.licenseModel === undefined && !opts.urn) {
                throw new Error("Missing required property 'licenseModel'");
            }
            if (args?.recipeType === undefined && !opts.urn) {
                throw new Error("Missing required property 'recipeType'");
            }
            if (args?.sourceConnectionDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceConnectionDetails'");
            }
            if (args?.targetConnectionDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetConnectionDetails'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["licenseModel"] = args?.licenseModel;
            resourceInputs["locks"] = args?.locks;
            resourceInputs["processOptions"] = args?.processOptions;
            resourceInputs["recipeType"] = args?.recipeType;
            resourceInputs["sourceConnectionDetails"] = args?.sourceConnectionDetails;
            resourceInputs["targetConnectionDetails"] = args?.targetConnectionDetails;
            resourceInputs["cpuCoreCount"] = undefined /*out*/;
            resourceInputs["isAutoScalingEnabled"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["lifecycleSubState"] = undefined /*out*/;
            resourceInputs["mappingRules"] = undefined /*out*/;
            resourceInputs["pipelineDiagnosticDatas"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastRecorded"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Pipeline.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Pipeline resources.
 */
export interface PipelineState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The Minimum number of OCPUs to be made available for this Deployment.
     */
    cpuCoreCount?: pulumi.Input<number>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Indicates if auto scaling is enabled for the Deployment's CPU core count.
     */
    isAutoScalingEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) The Oracle license model that applies to a Deployment.
     */
    licenseModel?: pulumi.Input<string>;
    /**
     * Describes the object's current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Possible lifecycle substates when retrieving a pipeline.
     */
    lifecycleSubState?: pulumi.Input<string>;
    /**
     * Locks associated with this resource.
     */
    locks?: pulumi.Input<pulumi.Input<inputs.GoldenGate.PipelineLock>[]>;
    /**
     * Mapping for source/target schema/tables for the pipeline data replication.
     */
    mappingRules?: pulumi.Input<pulumi.Input<inputs.GoldenGate.PipelineMappingRule>[]>;
    /**
     * Information regarding the pipeline diagnostic collection
     */
    pipelineDiagnosticDatas?: pulumi.Input<pulumi.Input<inputs.GoldenGate.PipelinePipelineDiagnosticData>[]>;
    /**
     * (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
     */
    processOptions?: pulumi.Input<inputs.GoldenGate.PipelineProcessOptions>;
    /**
     * (Updatable) The type of the recipe
     */
    recipeType?: pulumi.Input<string>;
    /**
     * The source connection details for creating a pipeline.
     */
    sourceConnectionDetails?: pulumi.Input<inputs.GoldenGate.PipelineSourceConnectionDetails>;
    /**
     * Lifecycle state of the pipeline.
     */
    state?: pulumi.Input<string>;
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The target connection details for creating a pipeline.
     */
    targetConnectionDetails?: pulumi.Input<inputs.GoldenGate.PipelineTargetConnectionDetails>;
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
     */
    timeLastRecorded?: pulumi.Input<string>;
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Metadata about this specific object.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) An object's Display Name.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The Oracle license model that applies to a Deployment.
     */
    licenseModel: pulumi.Input<string>;
    /**
     * Locks associated with this resource.
     */
    locks?: pulumi.Input<pulumi.Input<inputs.GoldenGate.PipelineLock>[]>;
    /**
     * (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
     */
    processOptions?: pulumi.Input<inputs.GoldenGate.PipelineProcessOptions>;
    /**
     * (Updatable) The type of the recipe
     */
    recipeType: pulumi.Input<string>;
    /**
     * The source connection details for creating a pipeline.
     */
    sourceConnectionDetails: pulumi.Input<inputs.GoldenGate.PipelineSourceConnectionDetails>;
    /**
     * The target connection details for creating a pipeline.
     */
    targetConnectionDetails: pulumi.Input<inputs.GoldenGate.PipelineTargetConnectionDetails>;
}
