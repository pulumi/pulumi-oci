// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Ping Probe Results in Oracle Cloud Infrastructure Health Checks service.
 *
 * Returns the results for the specified probe, where the `probeConfigurationId`
 * is the OCID of either a monitor or an on-demand probe.
 *
 * Results are paginated based on `page` and `limit`.  The `opc-next-page` header provides
 * a URL for fetching the next page.  Use `sortOrder` to set the order of the
 * results.  If `sortOrder` is unspecified, results are sorted in ascending order by
 * `startTime`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPingProbeResults = oci.HealthChecks.getPingProbeResults({
 *     probeConfigurationId: oci_health_checks_probe_configuration.test_probe_configuration.id,
 *     startTimeGreaterThanOrEqualTo: _var.ping_probe_result_start_time_greater_than_or_equal_to,
 *     startTimeLessThanOrEqualTo: _var.ping_probe_result_start_time_less_than_or_equal_to,
 *     target: _var.ping_probe_result_target,
 * });
 * ```
 */
export function getPingProbeResults(args: GetPingProbeResultsArgs, opts?: pulumi.InvokeOptions): Promise<GetPingProbeResultsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:HealthChecks/getPingProbeResults:getPingProbeResults", {
        "filters": args.filters,
        "probeConfigurationId": args.probeConfigurationId,
        "startTimeGreaterThanOrEqualTo": args.startTimeGreaterThanOrEqualTo,
        "startTimeLessThanOrEqualTo": args.startTimeLessThanOrEqualTo,
        "target": args.target,
    }, opts);
}

/**
 * A collection of arguments for invoking getPingProbeResults.
 */
export interface GetPingProbeResultsArgs {
    filters?: inputs.HealthChecks.GetPingProbeResultsFilter[];
    /**
     * The OCID of a monitor or on-demand probe.
     */
    probeConfigurationId: string;
    /**
     * Returns results with a `startTime` equal to or greater than the specified value.
     */
    startTimeGreaterThanOrEqualTo?: number;
    /**
     * Returns results with a `startTime` equal to or less than the specified value.
     */
    startTimeLessThanOrEqualTo?: number;
    /**
     * Filters results that match the `target`.
     */
    target?: string;
}

/**
 * A collection of values returned by getPingProbeResults.
 */
export interface GetPingProbeResultsResult {
    readonly filters?: outputs.HealthChecks.GetPingProbeResultsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of ping_probe_results.
     */
    readonly pingProbeResults: outputs.HealthChecks.GetPingProbeResultsPingProbeResult[];
    /**
     * The OCID of the monitor or on-demand probe responsible for creating this result.
     */
    readonly probeConfigurationId: string;
    readonly startTimeGreaterThanOrEqualTo?: number;
    readonly startTimeLessThanOrEqualTo?: number;
    /**
     * The target hostname or IP address of the probe.
     */
    readonly target?: string;
}
/**
 * This data source provides the list of Ping Probe Results in Oracle Cloud Infrastructure Health Checks service.
 *
 * Returns the results for the specified probe, where the `probeConfigurationId`
 * is the OCID of either a monitor or an on-demand probe.
 *
 * Results are paginated based on `page` and `limit`.  The `opc-next-page` header provides
 * a URL for fetching the next page.  Use `sortOrder` to set the order of the
 * results.  If `sortOrder` is unspecified, results are sorted in ascending order by
 * `startTime`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPingProbeResults = oci.HealthChecks.getPingProbeResults({
 *     probeConfigurationId: oci_health_checks_probe_configuration.test_probe_configuration.id,
 *     startTimeGreaterThanOrEqualTo: _var.ping_probe_result_start_time_greater_than_or_equal_to,
 *     startTimeLessThanOrEqualTo: _var.ping_probe_result_start_time_less_than_or_equal_to,
 *     target: _var.ping_probe_result_target,
 * });
 * ```
 */
export function getPingProbeResultsOutput(args: GetPingProbeResultsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPingProbeResultsResult> {
    return pulumi.output(args).apply((a: any) => getPingProbeResults(a, opts))
}

/**
 * A collection of arguments for invoking getPingProbeResults.
 */
export interface GetPingProbeResultsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.HealthChecks.GetPingProbeResultsFilterArgs>[]>;
    /**
     * The OCID of a monitor or on-demand probe.
     */
    probeConfigurationId: pulumi.Input<string>;
    /**
     * Returns results with a `startTime` equal to or greater than the specified value.
     */
    startTimeGreaterThanOrEqualTo?: pulumi.Input<number>;
    /**
     * Returns results with a `startTime` equal to or less than the specified value.
     */
    startTimeLessThanOrEqualTo?: pulumi.Input<number>;
    /**
     * Filters results that match the `target`.
     */
    target?: pulumi.Input<string>;
}
