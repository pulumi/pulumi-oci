// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Authentication Policy resource in Oracle Cloud Infrastructure Identity service.
 *
 * Updates authentication policy for the specified tenancy
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAuthenticationPolicy = new oci.identity.AuthenticationPolicy("test_authentication_policy", {
 *     compartmentId: tenancyOcid,
 *     networkPolicy: {
 *         networkSourceIds: authenticationPolicyNetworkPolicyNetworkSourceIds,
 *     },
 *     passwordPolicy: {
 *         isLowercaseCharactersRequired: authenticationPolicyPasswordPolicyIsLowercaseCharactersRequired,
 *         isNumericCharactersRequired: authenticationPolicyPasswordPolicyIsNumericCharactersRequired,
 *         isSpecialCharactersRequired: authenticationPolicyPasswordPolicyIsSpecialCharactersRequired,
 *         isUppercaseCharactersRequired: authenticationPolicyPasswordPolicyIsUppercaseCharactersRequired,
 *         isUsernameContainmentAllowed: authenticationPolicyPasswordPolicyIsUsernameContainmentAllowed,
 *         minimumPasswordLength: authenticationPolicyPasswordPolicyMinimumPasswordLength,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * AuthenticationPolicies can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Identity/authenticationPolicy:AuthenticationPolicy test_authentication_policy "authenticationPolicies/{compartmentId}"
 * ```
 */
export class AuthenticationPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AuthenticationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthenticationPolicyState, opts?: pulumi.CustomResourceOptions): AuthenticationPolicy {
        return new AuthenticationPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/authenticationPolicy:AuthenticationPolicy';

    /**
     * Returns true if the given object is an instance of AuthenticationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthenticationPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthenticationPolicy.__pulumiType;
    }

    /**
     * The OCID of the compartment.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Network policy, Consists of a list of Network Source ids.
     */
    declare public readonly networkPolicy: pulumi.Output<outputs.Identity.AuthenticationPolicyNetworkPolicy>;
    /**
     * (Updatable) Password policy, currently set for the given compartment.
     */
    declare public readonly passwordPolicy: pulumi.Output<outputs.Identity.AuthenticationPolicyPasswordPolicy>;

    /**
     * Create a AuthenticationPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthenticationPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthenticationPolicyArgs | AuthenticationPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthenticationPolicyState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["networkPolicy"] = state?.networkPolicy;
            resourceInputs["passwordPolicy"] = state?.passwordPolicy;
        } else {
            const args = argsOrState as AuthenticationPolicyArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["networkPolicy"] = args?.networkPolicy;
            resourceInputs["passwordPolicy"] = args?.passwordPolicy;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthenticationPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthenticationPolicy resources.
 */
export interface AuthenticationPolicyState {
    /**
     * The OCID of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Network policy, Consists of a list of Network Source ids.
     */
    networkPolicy?: pulumi.Input<inputs.Identity.AuthenticationPolicyNetworkPolicy>;
    /**
     * (Updatable) Password policy, currently set for the given compartment.
     */
    passwordPolicy?: pulumi.Input<inputs.Identity.AuthenticationPolicyPasswordPolicy>;
}

/**
 * The set of arguments for constructing a AuthenticationPolicy resource.
 */
export interface AuthenticationPolicyArgs {
    /**
     * The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Network policy, Consists of a list of Network Source ids.
     */
    networkPolicy?: pulumi.Input<inputs.Identity.AuthenticationPolicyNetworkPolicy>;
    /**
     * (Updatable) Password policy, currently set for the given compartment.
     */
    passwordPolicy?: pulumi.Input<inputs.Identity.AuthenticationPolicyPasswordPolicy>;
}
