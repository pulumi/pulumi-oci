// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Customer Secret Key resource in Oracle Cloud Infrastructure Identity service.
 *
 * Creates a new secret key for the specified user. Secret keys are used for authentication with the Object Storage Service's Amazon S3
 * compatible API. The secret key consists of an Access Key/Secret Key pair. For information, see
 * [Managing User Credentials](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcredentials.htm).
 *
 * You must specify a *description* for the secret key (although it can be an empty string). It does not
 * have to be unique, and you can change it anytime with
 * [UpdateCustomerSecretKey](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/CustomerSecretKeySummary/UpdateCustomerSecretKey).
 *
 * Every user has permission to create a secret key for *their own user ID*. An administrator in your organization
 * does not need to write a policy to give users this ability. To compare, administrators who have permission to the
 * tenancy can use this operation to create a secret key for any user, including themselves.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCustomerSecretKey = new oci.identity.CustomerSecretKey("testCustomerSecretKey", {
 *     displayName: _var.customer_secret_key_display_name,
 *     userId: oci_identity_user.test_user.id,
 * });
 * ```
 *
 * ## Import
 *
 * CustomerSecretKeys can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Identity/customerSecretKey:CustomerSecretKey test_customer_secret_key "users/{userId}/customerSecretKeys/{customerSecretKeyId}"
 * ```
 */
export class CustomerSecretKey extends pulumi.CustomResource {
    /**
     * Get an existing CustomerSecretKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomerSecretKeyState, opts?: pulumi.CustomResourceOptions): CustomerSecretKey {
        return new CustomerSecretKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/customerSecretKey:CustomerSecretKey';

    /**
     * Returns true if the given object is an instance of CustomerSecretKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomerSecretKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomerSecretKey.__pulumiType;
    }

    /**
     * (Updatable) The name you assign to the secret key during creation. Does not have to be unique, and it's changeable.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    public /*out*/ readonly inactiveState!: pulumi.Output<string>;
    /**
     * The secret key.
     */
    public /*out*/ readonly key!: pulumi.Output<string>;
    /**
     * The secret key's current state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Date and time the `CustomerSecretKey` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * Date and time when this password will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeExpires!: pulumi.Output<string>;
    /**
     * The OCID of the user.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly userId!: pulumi.Output<string>;

    /**
     * Create a CustomerSecretKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomerSecretKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomerSecretKeyArgs | CustomerSecretKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomerSecretKeyState | undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["inactiveState"] = state ? state.inactiveState : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeExpires"] = state ? state.timeExpires : undefined;
            resourceInputs["userId"] = state ? state.userId : undefined;
        } else {
            const args = argsOrState as CustomerSecretKeyArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.userId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userId'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["userId"] = args ? args.userId : undefined;
            resourceInputs["inactiveState"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeExpires"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomerSecretKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomerSecretKey resources.
 */
export interface CustomerSecretKeyState {
    /**
     * (Updatable) The name you assign to the secret key during creation. Does not have to be unique, and it's changeable.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState?: pulumi.Input<string>;
    /**
     * The secret key.
     */
    key?: pulumi.Input<string>;
    /**
     * The secret key's current state.
     */
    state?: pulumi.Input<string>;
    /**
     * Date and time the `CustomerSecretKey` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Date and time when this password will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeExpires?: pulumi.Input<string>;
    /**
     * The OCID of the user.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomerSecretKey resource.
 */
export interface CustomerSecretKeyArgs {
    /**
     * (Updatable) The name you assign to the secret key during creation. Does not have to be unique, and it's changeable.
     */
    displayName: pulumi.Input<string>;
    /**
     * The OCID of the user.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    userId: pulumi.Input<string>;
}
