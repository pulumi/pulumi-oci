// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Domain resource in Oracle Cloud Infrastructure Identity service.
 *
 * Creates a new domain in the tenancy with domain home in {@code homeRegion}. This is an asynchronous call - where, at start,
 * {@code lifecycleState} of this domain is set to CREATING and {@code lifecycleDetails} to UPDATING. On domain creation completion
 * this Domain's {@code lifecycleState} will be set to ACTIVE and {@code lifecycleDetails} to null.
 *
 * To track progress, HTTP GET on /iamWorkRequests/{iamWorkRequestsId} endpoint will provide
 * the async operation's status.
 *
 * After creating a `Domain`, make sure its `lifecycleState` changes from CREATING to ACTIVE
 * before using it.
 * If the domain's {@code displayName} already exists, returns 400 BAD REQUEST.
 * If any one of admin related fields are provided and one of the following 3 fields
 * - {@code adminEmail}, {@code adminLastName} and {@code adminUserName} - is not provided,
 *   returns 400 BAD REQUEST.
 * - If {@code isNotificationBypassed} is NOT provided when admin information is provided,
 *   returns 400 BAD REQUEST.
 * - If any internal error occurs, return 500 INTERNAL SERVER ERROR.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDomain = new oci.identity.Domain("test_domain", {
 *     compartmentId: compartmentId,
 *     description: domainDescription,
 *     displayName: domainDisplayName,
 *     homeRegion: domainHomeRegion,
 *     licenseType: domainLicenseType,
 *     adminEmail: domainAdminEmail,
 *     adminFirstName: domainAdminFirstName,
 *     adminLastName: domainAdminLastName,
 *     adminUserName: testUser.name,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     isHiddenOnLogin: domainIsHiddenOnLogin,
 *     isNotificationBypassed: domainIsNotificationBypassed,
 *     isPrimaryEmailRequired: domainIsPrimaryEmailRequired,
 * });
 * ```
 *
 * ## Import
 *
 * Domains can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Identity/domain:Domain test_domain "id"
 * ```
 */
export class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainState, opts?: pulumi.CustomResourceOptions): Domain {
        return new Domain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/domain:Domain';

    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Domain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }

    /**
     * The admin email address
     */
    public readonly adminEmail!: pulumi.Output<string>;
    /**
     * The admin first name
     */
    public readonly adminFirstName!: pulumi.Output<string>;
    /**
     * The admin last name
     */
    public readonly adminLastName!: pulumi.Output<string>;
    /**
     * The admin user name
     */
    public readonly adminUserName!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the Compartment where domain is created
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Domain entity description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The mutable display name of the domain.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The region's name. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
     */
    public readonly homeRegion!: pulumi.Output<string>;
    /**
     * Region specific domain URL.
     */
    public /*out*/ readonly homeRegionUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates whether domain is hidden on login screen or not.
     */
    public readonly isHiddenOnLogin!: pulumi.Output<boolean>;
    /**
     * Indicates if admin user created in IDCS stripe would like to receive notification like welcome email or not. Required field only if admin information is provided, otherwise optional.
     */
    public readonly isNotificationBypassed!: pulumi.Output<boolean>;
    /**
     * Optional field to indicate whether users in the domain are required to have a primary email address or not Defaults to true
     */
    public readonly isPrimaryEmailRequired!: pulumi.Output<boolean>;
    /**
     * The License type of Domain
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly licenseType!: pulumi.Output<string>;
    /**
     * Any additional details about the current state of the Domain.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * The regions domain is replication to.
     */
    public /*out*/ readonly replicaRegions!: pulumi.Output<outputs.Identity.DomainReplicaRegion[]>;
    /**
     * The current state.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * Date and time the domain was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The type of the domain.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Region agnostic domain URL.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainArgs | DomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainState | undefined;
            resourceInputs["adminEmail"] = state ? state.adminEmail : undefined;
            resourceInputs["adminFirstName"] = state ? state.adminFirstName : undefined;
            resourceInputs["adminLastName"] = state ? state.adminLastName : undefined;
            resourceInputs["adminUserName"] = state ? state.adminUserName : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["homeRegion"] = state ? state.homeRegion : undefined;
            resourceInputs["homeRegionUrl"] = state ? state.homeRegionUrl : undefined;
            resourceInputs["isHiddenOnLogin"] = state ? state.isHiddenOnLogin : undefined;
            resourceInputs["isNotificationBypassed"] = state ? state.isNotificationBypassed : undefined;
            resourceInputs["isPrimaryEmailRequired"] = state ? state.isPrimaryEmailRequired : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["replicaRegions"] = state ? state.replicaRegions : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as DomainArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.homeRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'homeRegion'");
            }
            if ((!args || args.licenseType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'licenseType'");
            }
            resourceInputs["adminEmail"] = args ? args.adminEmail : undefined;
            resourceInputs["adminFirstName"] = args ? args.adminFirstName : undefined;
            resourceInputs["adminLastName"] = args ? args.adminLastName : undefined;
            resourceInputs["adminUserName"] = args ? args.adminUserName : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["homeRegion"] = args ? args.homeRegion : undefined;
            resourceInputs["isHiddenOnLogin"] = args ? args.isHiddenOnLogin : undefined;
            resourceInputs["isNotificationBypassed"] = args ? args.isNotificationBypassed : undefined;
            resourceInputs["isPrimaryEmailRequired"] = args ? args.isPrimaryEmailRequired : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["homeRegionUrl"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["replicaRegions"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Domain resources.
 */
export interface DomainState {
    /**
     * The admin email address
     */
    adminEmail?: pulumi.Input<string>;
    /**
     * The admin first name
     */
    adminFirstName?: pulumi.Input<string>;
    /**
     * The admin last name
     */
    adminLastName?: pulumi.Input<string>;
    /**
     * The admin user name
     */
    adminUserName?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the Compartment where domain is created
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Domain entity description
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The mutable display name of the domain.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The region's name. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
     */
    homeRegion?: pulumi.Input<string>;
    /**
     * Region specific domain URL.
     */
    homeRegionUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether domain is hidden on login screen or not.
     */
    isHiddenOnLogin?: pulumi.Input<boolean>;
    /**
     * Indicates if admin user created in IDCS stripe would like to receive notification like welcome email or not. Required field only if admin information is provided, otherwise optional.
     */
    isNotificationBypassed?: pulumi.Input<boolean>;
    /**
     * Optional field to indicate whether users in the domain are required to have a primary email address or not Defaults to true
     */
    isPrimaryEmailRequired?: pulumi.Input<boolean>;
    /**
     * The License type of Domain
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    licenseType?: pulumi.Input<string>;
    /**
     * Any additional details about the current state of the Domain.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The regions domain is replication to.
     */
    replicaRegions?: pulumi.Input<pulumi.Input<inputs.Identity.DomainReplicaRegion>[]>;
    /**
     * The current state.
     */
    state?: pulumi.Input<string>;
    /**
     * Date and time the domain was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The type of the domain.
     */
    type?: pulumi.Input<string>;
    /**
     * Region agnostic domain URL.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Domain resource.
 */
export interface DomainArgs {
    /**
     * The admin email address
     */
    adminEmail?: pulumi.Input<string>;
    /**
     * The admin first name
     */
    adminFirstName?: pulumi.Input<string>;
    /**
     * The admin last name
     */
    adminLastName?: pulumi.Input<string>;
    /**
     * The admin user name
     */
    adminUserName?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the Compartment where domain is created
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Domain entity description
     */
    description: pulumi.Input<string>;
    /**
     * (Updatable) The mutable display name of the domain.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The region's name. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
     */
    homeRegion: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether domain is hidden on login screen or not.
     */
    isHiddenOnLogin?: pulumi.Input<boolean>;
    /**
     * Indicates if admin user created in IDCS stripe would like to receive notification like welcome email or not. Required field only if admin information is provided, otherwise optional.
     */
    isNotificationBypassed?: pulumi.Input<boolean>;
    /**
     * Optional field to indicate whether users in the domain are required to have a primary email address or not Defaults to true
     */
    isPrimaryEmailRequired?: pulumi.Input<boolean>;
    /**
     * The License type of Domain
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    licenseType: pulumi.Input<string>;
    /**
     * The current state.
     */
    state?: pulumi.Input<string>;
}
