// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Identity Propagation Trust resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Register a new Identity Propagation Trust configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIdentityPropagationTrust = new oci.identity.DomainsIdentityPropagationTrust("test_identity_propagation_trust", {
 *     idcsEndpoint: testDomain.url,
 *     issuer: identityPropagationTrustIssuer,
 *     name: identityPropagationTrustName,
 *     schemas: ["urn:ietf:params:scim:schemas:oracle:idcs:IdentityPropagationTrust"],
 *     type: identityPropagationTrustType,
 *     accountId: "accountId",
 *     active: identityPropagationTrustActive,
 *     allowImpersonation: identityPropagationTrustAllowImpersonation,
 *     attributeSets: ["all"],
 *     attributes: "",
 *     authorization: identityPropagationTrustAuthorization,
 *     clientClaimName: identityPropagationTrustClientClaimName,
 *     clientClaimValues: ["clientClaimValues"],
 *     clockSkewSeconds: identityPropagationTrustClockSkewSeconds,
 *     description: identityPropagationTrustDescription,
 *     impersonationServiceUsers: [{
 *         rule: identityPropagationTrustImpersonationServiceUsersRule,
 *         value: testIdentityPropagationTrustUser.id,
 *         ocid: identityPropagationTrustImpersonationServiceUsersOcid,
 *     }],
 *     keytab: {
 *         secretOcid: identityPropagationTrustKeytabSecretOcid,
 *         secretVersion: identityPropagationTrustKeytabSecretVersion,
 *     },
 *     oauthClients: ["oauthClients"],
 *     ocid: identityPropagationTrustOcid,
 *     publicCertificate: identityPropagationTrustPublicCertificate,
 *     publicKeyEndpoint: identityPropagationTrustPublicKeyEndpoint,
 *     resourceTypeSchemaVersion: identityPropagationTrustResourceTypeSchemaVersion,
 *     subjectClaimName: identityPropagationTrustSubjectClaimName,
 *     subjectMappingAttribute: identityPropagationTrustSubjectMappingAttribute,
 *     subjectType: identityPropagationTrustSubjectType,
 *     tags: [{
 *         key: identityPropagationTrustTagsKey,
 *         value: identityPropagationTrustTagsValue,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * IdentityPropagationTrusts can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Identity/domainsIdentityPropagationTrust:DomainsIdentityPropagationTrust test_identity_propagation_trust "idcsEndpoint/{idcsEndpoint}/identityPropagationTrusts/{identityPropagationTrustId}"
 * ```
 */
export class DomainsIdentityPropagationTrust extends pulumi.CustomResource {
    /**
     * Get an existing DomainsIdentityPropagationTrust resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainsIdentityPropagationTrustState, opts?: pulumi.CustomResourceOptions): DomainsIdentityPropagationTrust {
        return new DomainsIdentityPropagationTrust(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/domainsIdentityPropagationTrust:DomainsIdentityPropagationTrust';

    /**
     * Returns true if the given object is an instance of DomainsIdentityPropagationTrust.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainsIdentityPropagationTrust {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainsIdentityPropagationTrust.__pulumiType;
    }

    /**
     * (Updatable) The Identity cloud provider service identifier, for example, the Azure Tenancy ID, AWS Account ID, or GCP Project ID.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * caseExact: true
     * * idcsSearchable: true
     * * uniqueness: none
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * (Updatable) If true, specifies that this Identity Propagation Trust is in an enabled state. The default value is false.
     *
     * **SCIM++ Properties:**
     * * type: boolean
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: true
     */
    public readonly active!: pulumi.Output<boolean>;
    /**
     * (Updatable) Allow customers to define whether the resulting token should contain the authenticated user as the subject or whether the token should impersonate another Application Principal in IAM.
     *
     * **SCIM++ Properties:**
     * * type: boolean
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    public readonly allowImpersonation!: pulumi.Output<boolean>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    public readonly attributeSets!: pulumi.Output<string[] | undefined>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    public readonly attributes!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    public readonly authorization!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) The claim name that identifies to whom the JWT/SAML token is issued. If AWS, then \"aud\" or \"client_id\". If Azure, then \"appid\". If GCP, then \"aud\".
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    public readonly clientClaimName!: pulumi.Output<string>;
    /**
     * (Updatable) The value that corresponds to the client claim name used to identify to whom the token is issued.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: true
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: true
     * * idcsSearchable: false
     */
    public readonly clientClaimValues!: pulumi.Output<string[]>;
    /**
     * (Updatable) The clock skew (in secs) that's allowed for the token issue and expiry time.
     *
     * **Added In:** 2308181911
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly clockSkewSeconds!: pulumi.Output<number>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly compartmentOcid!: pulumi.Output<string>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    public /*out*/ readonly deleteInProgress!: pulumi.Output<boolean>;
    /**
     * (Updatable) The description of the Identity Propagation Trust.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * * idcsSearchable: false
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly domainOcid!: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who created the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     */
    public /*out*/ readonly idcsCreatedBies!: pulumi.Output<outputs.Identity.DomainsIdentityPropagationTrustIdcsCreatedBy[]>;
    /**
     * The basic endpoint for the identity domain
     */
    public readonly idcsEndpoint!: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     */
    public /*out*/ readonly idcsLastModifiedBies!: pulumi.Output<outputs.Identity.DomainsIdentityPropagationTrustIdcsLastModifiedBy[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly idcsLastUpgradedInRelease!: pulumi.Output<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly idcsPreventedOperations!: pulumi.Output<string[]>;
    /**
     * (Updatable) The Impersonating Principal.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [rule, value]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    public readonly impersonationServiceUsers!: pulumi.Output<outputs.Identity.DomainsIdentityPropagationTrustImpersonationServiceUser[]>;
    /**
     * (Updatable) The issuer claim of the Identity provider.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: true
     * * mutability: readWrite
     * * returned: always
     * * caseExact: true
     * * idcsSearchable: true
     * * uniqueness: server
     */
    public readonly issuer!: pulumi.Output<string>;
    /**
     * (Updatable) The keytab stored in the tenancy's Vault. This is required if the identity propagation type is 'SPNEGO'.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [secretOcid]
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     */
    public readonly keytab!: pulumi.Output<outputs.Identity.DomainsIdentityPropagationTrustKeytab>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     */
    public /*out*/ readonly metas!: pulumi.Output<outputs.Identity.DomainsIdentityPropagationTrustMeta[]>;
    /**
     * The name of the the Identity Propagation Trust.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * required: true
     * * mutability: immutable
     * * returned: default
     * * uniqueness: none
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) The value of all the authorized OAuth Clients.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly oauthClients!: pulumi.Output<string[]>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    public readonly ocid!: pulumi.Output<string>;
    /**
     * (Updatable) Store the public key if public key cert.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    public readonly publicCertificate!: pulumi.Output<string>;
    /**
     * (Updatable) The cloud provider's public key API of SAML and OIDC providers for signature validation.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * * idcsSearchable: false
     */
    public readonly publicKeyEndpoint!: pulumi.Output<string>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    public readonly resourceTypeSchemaVersion!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly schemas!: pulumi.Output<string[]>;
    /**
     * (Updatable) Used for locating the subject claim from the incoming token.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: true
     * * idcsSearchable: false
     */
    public readonly subjectClaimName!: pulumi.Output<string>;
    /**
     * (Updatable) Subject Mapping Attribute to which the value from subject claim name value would be used for identity lookup.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * idcsSearchable: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    public readonly subjectMappingAttribute!: pulumi.Output<string>;
    /**
     * (Updatable) The type of the resource against which lookup will be made in the identity domain in IAM for the incoming subject claim value.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly subjectType!: pulumi.Output<string>;
    /**
     * (Updatable) A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    public readonly tags!: pulumi.Output<outputs.Identity.DomainsIdentityPropagationTrustTag[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly tenancyOcid!: pulumi.Output<string>;
    /**
     * (Updatable) The type of the inbound token from the Identity cloud provider.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * required: true
     * * mutability: readWrite
     * * returned: default
     * * type: string
     * * multiValued: false
     * * uniqueness: none
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a DomainsIdentityPropagationTrust resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainsIdentityPropagationTrustArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainsIdentityPropagationTrustArgs | DomainsIdentityPropagationTrustState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainsIdentityPropagationTrustState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["allowImpersonation"] = state ? state.allowImpersonation : undefined;
            resourceInputs["attributeSets"] = state ? state.attributeSets : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["authorization"] = state ? state.authorization : undefined;
            resourceInputs["clientClaimName"] = state ? state.clientClaimName : undefined;
            resourceInputs["clientClaimValues"] = state ? state.clientClaimValues : undefined;
            resourceInputs["clockSkewSeconds"] = state ? state.clockSkewSeconds : undefined;
            resourceInputs["compartmentOcid"] = state ? state.compartmentOcid : undefined;
            resourceInputs["deleteInProgress"] = state ? state.deleteInProgress : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainOcid"] = state ? state.domainOcid : undefined;
            resourceInputs["idcsCreatedBies"] = state ? state.idcsCreatedBies : undefined;
            resourceInputs["idcsEndpoint"] = state ? state.idcsEndpoint : undefined;
            resourceInputs["idcsLastModifiedBies"] = state ? state.idcsLastModifiedBies : undefined;
            resourceInputs["idcsLastUpgradedInRelease"] = state ? state.idcsLastUpgradedInRelease : undefined;
            resourceInputs["idcsPreventedOperations"] = state ? state.idcsPreventedOperations : undefined;
            resourceInputs["impersonationServiceUsers"] = state ? state.impersonationServiceUsers : undefined;
            resourceInputs["issuer"] = state ? state.issuer : undefined;
            resourceInputs["keytab"] = state ? state.keytab : undefined;
            resourceInputs["metas"] = state ? state.metas : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oauthClients"] = state ? state.oauthClients : undefined;
            resourceInputs["ocid"] = state ? state.ocid : undefined;
            resourceInputs["publicCertificate"] = state ? state.publicCertificate : undefined;
            resourceInputs["publicKeyEndpoint"] = state ? state.publicKeyEndpoint : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = state ? state.resourceTypeSchemaVersion : undefined;
            resourceInputs["schemas"] = state ? state.schemas : undefined;
            resourceInputs["subjectClaimName"] = state ? state.subjectClaimName : undefined;
            resourceInputs["subjectMappingAttribute"] = state ? state.subjectMappingAttribute : undefined;
            resourceInputs["subjectType"] = state ? state.subjectType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenancyOcid"] = state ? state.tenancyOcid : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as DomainsIdentityPropagationTrustArgs | undefined;
            if ((!args || args.idcsEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idcsEndpoint'");
            }
            if ((!args || args.issuer === undefined) && !opts.urn) {
                throw new Error("Missing required property 'issuer'");
            }
            if ((!args || args.schemas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemas'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["allowImpersonation"] = args ? args.allowImpersonation : undefined;
            resourceInputs["attributeSets"] = args ? args.attributeSets : undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["authorization"] = args ? args.authorization : undefined;
            resourceInputs["clientClaimName"] = args ? args.clientClaimName : undefined;
            resourceInputs["clientClaimValues"] = args ? args.clientClaimValues : undefined;
            resourceInputs["clockSkewSeconds"] = args ? args.clockSkewSeconds : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["idcsEndpoint"] = args ? args.idcsEndpoint : undefined;
            resourceInputs["impersonationServiceUsers"] = args ? args.impersonationServiceUsers : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["keytab"] = args ? args.keytab : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oauthClients"] = args ? args.oauthClients : undefined;
            resourceInputs["ocid"] = args ? args.ocid : undefined;
            resourceInputs["publicCertificate"] = args ? args.publicCertificate : undefined;
            resourceInputs["publicKeyEndpoint"] = args ? args.publicKeyEndpoint : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = args ? args.resourceTypeSchemaVersion : undefined;
            resourceInputs["schemas"] = args ? args.schemas : undefined;
            resourceInputs["subjectClaimName"] = args ? args.subjectClaimName : undefined;
            resourceInputs["subjectMappingAttribute"] = args ? args.subjectMappingAttribute : undefined;
            resourceInputs["subjectType"] = args ? args.subjectType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["compartmentOcid"] = undefined /*out*/;
            resourceInputs["deleteInProgress"] = undefined /*out*/;
            resourceInputs["domainOcid"] = undefined /*out*/;
            resourceInputs["idcsCreatedBies"] = undefined /*out*/;
            resourceInputs["idcsLastModifiedBies"] = undefined /*out*/;
            resourceInputs["idcsLastUpgradedInRelease"] = undefined /*out*/;
            resourceInputs["idcsPreventedOperations"] = undefined /*out*/;
            resourceInputs["metas"] = undefined /*out*/;
            resourceInputs["tenancyOcid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainsIdentityPropagationTrust.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainsIdentityPropagationTrust resources.
 */
export interface DomainsIdentityPropagationTrustState {
    /**
     * (Updatable) The Identity cloud provider service identifier, for example, the Azure Tenancy ID, AWS Account ID, or GCP Project ID.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * caseExact: true
     * * idcsSearchable: true
     * * uniqueness: none
     */
    accountId?: pulumi.Input<string>;
    /**
     * (Updatable) If true, specifies that this Identity Propagation Trust is in an enabled state. The default value is false.
     *
     * **SCIM++ Properties:**
     * * type: boolean
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: true
     */
    active?: pulumi.Input<boolean>;
    /**
     * (Updatable) Allow customers to define whether the resulting token should contain the authenticated user as the subject or whether the token should impersonate another Application Principal in IAM.
     *
     * **SCIM++ Properties:**
     * * type: boolean
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    allowImpersonation?: pulumi.Input<boolean>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * (Updatable) The claim name that identifies to whom the JWT/SAML token is issued. If AWS, then \"aud\" or \"client_id\". If Azure, then \"appid\". If GCP, then \"aud\".
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    clientClaimName?: pulumi.Input<string>;
    /**
     * (Updatable) The value that corresponds to the client claim name used to identify to whom the token is issued.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: true
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: true
     * * idcsSearchable: false
     */
    clientClaimValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The clock skew (in secs) that's allowed for the token issue and expiry time.
     *
     * **Added In:** 2308181911
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    clockSkewSeconds?: pulumi.Input<number>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    compartmentOcid?: pulumi.Input<string>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    deleteInProgress?: pulumi.Input<boolean>;
    /**
     * (Updatable) The description of the Identity Propagation Trust.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * * idcsSearchable: false
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    domainOcid?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who created the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     */
    idcsCreatedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustIdcsCreatedBy>[]>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     */
    idcsLastModifiedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustIdcsLastModifiedBy>[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    idcsLastUpgradedInRelease?: pulumi.Input<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    idcsPreventedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The Impersonating Principal.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [rule, value]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    impersonationServiceUsers?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustImpersonationServiceUser>[]>;
    /**
     * (Updatable) The issuer claim of the Identity provider.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: true
     * * mutability: readWrite
     * * returned: always
     * * caseExact: true
     * * idcsSearchable: true
     * * uniqueness: server
     */
    issuer?: pulumi.Input<string>;
    /**
     * (Updatable) The keytab stored in the tenancy's Vault. This is required if the identity propagation type is 'SPNEGO'.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [secretOcid]
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     */
    keytab?: pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustKeytab>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     */
    metas?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustMeta>[]>;
    /**
     * The name of the the Identity Propagation Trust.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * required: true
     * * mutability: immutable
     * * returned: default
     * * uniqueness: none
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) The value of all the authorized OAuth Clients.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    oauthClients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    ocid?: pulumi.Input<string>;
    /**
     * (Updatable) Store the public key if public key cert.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    publicCertificate?: pulumi.Input<string>;
    /**
     * (Updatable) The cloud provider's public key API of SAML and OIDC providers for signature validation.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * * idcsSearchable: false
     */
    publicKeyEndpoint?: pulumi.Input<string>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Used for locating the subject claim from the incoming token.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: true
     * * idcsSearchable: false
     */
    subjectClaimName?: pulumi.Input<string>;
    /**
     * (Updatable) Subject Mapping Attribute to which the value from subject claim name value would be used for identity lookup.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * idcsSearchable: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    subjectMappingAttribute?: pulumi.Input<string>;
    /**
     * (Updatable) The type of the resource against which lookup will be made in the identity domain in IAM for the incoming subject claim value.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    subjectType?: pulumi.Input<string>;
    /**
     * (Updatable) A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustTag>[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    tenancyOcid?: pulumi.Input<string>;
    /**
     * (Updatable) The type of the inbound token from the Identity cloud provider.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * required: true
     * * mutability: readWrite
     * * returned: default
     * * type: string
     * * multiValued: false
     * * uniqueness: none
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DomainsIdentityPropagationTrust resource.
 */
export interface DomainsIdentityPropagationTrustArgs {
    /**
     * (Updatable) The Identity cloud provider service identifier, for example, the Azure Tenancy ID, AWS Account ID, or GCP Project ID.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * caseExact: true
     * * idcsSearchable: true
     * * uniqueness: none
     */
    accountId?: pulumi.Input<string>;
    /**
     * (Updatable) If true, specifies that this Identity Propagation Trust is in an enabled state. The default value is false.
     *
     * **SCIM++ Properties:**
     * * type: boolean
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: true
     */
    active?: pulumi.Input<boolean>;
    /**
     * (Updatable) Allow customers to define whether the resulting token should contain the authenticated user as the subject or whether the token should impersonate another Application Principal in IAM.
     *
     * **SCIM++ Properties:**
     * * type: boolean
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    allowImpersonation?: pulumi.Input<boolean>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * (Updatable) The claim name that identifies to whom the JWT/SAML token is issued. If AWS, then \"aud\" or \"client_id\". If Azure, then \"appid\". If GCP, then \"aud\".
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    clientClaimName?: pulumi.Input<string>;
    /**
     * (Updatable) The value that corresponds to the client claim name used to identify to whom the token is issued.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: true
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: true
     * * idcsSearchable: false
     */
    clientClaimValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The clock skew (in secs) that's allowed for the token issue and expiry time.
     *
     * **Added In:** 2308181911
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    clockSkewSeconds?: pulumi.Input<number>;
    /**
     * (Updatable) The description of the Identity Propagation Trust.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * * idcsSearchable: false
     */
    description?: pulumi.Input<string>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: pulumi.Input<string>;
    /**
     * (Updatable) The Impersonating Principal.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [rule, value]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    impersonationServiceUsers?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustImpersonationServiceUser>[]>;
    /**
     * (Updatable) The issuer claim of the Identity provider.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: true
     * * mutability: readWrite
     * * returned: always
     * * caseExact: true
     * * idcsSearchable: true
     * * uniqueness: server
     */
    issuer: pulumi.Input<string>;
    /**
     * (Updatable) The keytab stored in the tenancy's Vault. This is required if the identity propagation type is 'SPNEGO'.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [secretOcid]
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     */
    keytab?: pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustKeytab>;
    /**
     * The name of the the Identity Propagation Trust.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * required: true
     * * mutability: immutable
     * * returned: default
     * * uniqueness: none
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) The value of all the authorized OAuth Clients.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    oauthClients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    ocid?: pulumi.Input<string>;
    /**
     * (Updatable) Store the public key if public key cert.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * idcsSearchable: false
     */
    publicCertificate?: pulumi.Input<string>;
    /**
     * (Updatable) The cloud provider's public key API of SAML and OIDC providers for signature validation.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * * idcsSearchable: false
     */
    publicKeyEndpoint?: pulumi.Input<string>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    schemas: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Used for locating the subject claim from the incoming token.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: true
     * * idcsSearchable: false
     */
    subjectClaimName?: pulumi.Input<string>;
    /**
     * (Updatable) Subject Mapping Attribute to which the value from subject claim name value would be used for identity lookup.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * idcsSearchable: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    subjectMappingAttribute?: pulumi.Input<string>;
    /**
     * (Updatable) The type of the resource against which lookup will be made in the identity domain in IAM for the incoming subject claim value.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    subjectType?: pulumi.Input<string>;
    /**
     * (Updatable) A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityPropagationTrustTag>[]>;
    /**
     * (Updatable) The type of the inbound token from the Identity cloud provider.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * required: true
     * * mutability: readWrite
     * * returned: default
     * * type: string
     * * multiValued: false
     * * uniqueness: none
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    type: pulumi.Input<string>;
}
