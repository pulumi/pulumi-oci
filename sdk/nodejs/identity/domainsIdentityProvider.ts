// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Identity Provider resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Create an Identity Provider
 *
 * ## Import
 *
 * IdentityProviders can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Identity/domainsIdentityProvider:DomainsIdentityProvider test_identity_provider "idcsEndpoint/{idcsEndpoint}/identityProviders/{identityProviderId}"
 * ```
 */
export class DomainsIdentityProvider extends pulumi.CustomResource {
    /**
     * Get an existing DomainsIdentityProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainsIdentityProviderState, opts?: pulumi.CustomResourceOptions): DomainsIdentityProvider {
        return new DomainsIdentityProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/domainsIdentityProvider:DomainsIdentityProvider';

    /**
     * Returns true if the given object is an instance of DomainsIdentityProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainsIdentityProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainsIdentityProvider.__pulumiType;
    }

    /**
     * (Updatable) Assertion attribute name.
     */
    public readonly assertionAttribute!: pulumi.Output<string>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    public readonly attributeSets!: pulumi.Output<string[] | undefined>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    public readonly attributes!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) HTTP binding to use for authentication requests.
     */
    public readonly authnRequestBinding!: pulumi.Output<string>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    public readonly authorization!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     */
    public /*out*/ readonly compartmentOcid!: pulumi.Output<string>;
    /**
     * (Updatable) Correlation policy
     */
    public readonly correlationPolicy!: pulumi.Output<outputs.Identity.DomainsIdentityProviderCorrelationPolicy>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     */
    public /*out*/ readonly deleteInProgress!: pulumi.Output<boolean>;
    /**
     * (Updatable) Description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     */
    public /*out*/ readonly domainOcid!: pulumi.Output<string>;
    /**
     * (Updatable) Set to true to indicate Partner enabled.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Encryption certificate
     */
    public readonly encryptionCertificate!: pulumi.Output<string>;
    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     */
    public readonly externalId!: pulumi.Output<string>;
    /**
     * (Updatable) Identity Provider Icon URL.
     */
    public readonly iconUrl!: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who created the Resource
     */
    public /*out*/ readonly idcsCreatedBies!: pulumi.Output<outputs.Identity.DomainsIdentityProviderIdcsCreatedBy[]>;
    /**
     * The basic endpoint for the identity domain
     */
    public readonly idcsEndpoint!: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     */
    public /*out*/ readonly idcsLastModifiedBies!: pulumi.Output<outputs.Identity.DomainsIdentityProviderIdcsLastModifiedBy[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     */
    public /*out*/ readonly idcsLastUpgradedInRelease!: pulumi.Output<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     */
    public /*out*/ readonly idcsPreventedOperations!: pulumi.Output<string[]>;
    /**
     * (Updatable) Identity Provider SSO URL
     */
    public readonly idpSsoUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Set to true to include the signing certificate in the signature.
     */
    public readonly includeSigningCertInSignature!: pulumi.Output<boolean>;
    /**
     * (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
     */
    public readonly jitUserProvAssignedGroups!: pulumi.Output<outputs.Identity.DomainsIdentityProviderJitUserProvAssignedGroup[]>;
    /**
     * (Updatable) Set to true to indicate JIT User Creation is enabled
     */
    public readonly jitUserProvAttributeUpdateEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Assertion To User Mapping
     */
    public readonly jitUserProvAttributes!: pulumi.Output<outputs.Identity.DomainsIdentityProviderJitUserProvAttributes>;
    /**
     * (Updatable) Set to true to indicate JIT User Creation is enabled
     */
    public readonly jitUserProvCreateUserEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning is enabled
     */
    public readonly jitUserProvEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
     */
    public readonly jitUserProvGroupAssertionAttributeEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
     */
    public readonly jitUserProvGroupAssignmentMethod!: pulumi.Output<string>;
    /**
     * (Updatable) Property to indicate the mode of group mapping
     */
    public readonly jitUserProvGroupMappingMode!: pulumi.Output<string>;
    /**
     * (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
     */
    public readonly jitUserProvGroupMappings!: pulumi.Output<outputs.Identity.DomainsIdentityProviderJitUserProvGroupMapping[]>;
    /**
     * (Updatable) Name of the assertion attribute containing the users groups
     */
    public readonly jitUserProvGroupSamlAttributeName!: pulumi.Output<string>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
     */
    public readonly jitUserProvGroupStaticListEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Set to true to indicate ignoring absence of group while provisioning
     */
    public readonly jitUserProvIgnoreErrorOnAbsentGroups!: pulumi.Output<boolean>;
    /**
     * (Updatable) HTTP binding to use for logout.
     */
    public readonly logoutBinding!: pulumi.Output<string>;
    /**
     * (Updatable) Set to true to enable logout.
     */
    public readonly logoutEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Logout request URL
     */
    public readonly logoutRequestUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Logout response URL
     */
    public readonly logoutResponseUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Metadata
     */
    public readonly metadata!: pulumi.Output<string>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     */
    public /*out*/ readonly metas!: pulumi.Output<outputs.Identity.DomainsIdentityProviderMeta[]>;
    /**
     * (Updatable) Default authentication request name ID format.
     */
    public readonly nameIdFormat!: pulumi.Output<string>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     */
    public readonly ocid!: pulumi.Output<string>;
    /**
     * (Updatable) Unique name of the trusted Identity Provider.
     */
    public readonly partnerName!: pulumi.Output<string>;
    /**
     * (Updatable) Provider ID
     */
    public readonly partnerProviderId!: pulumi.Output<string>;
    /**
     * (Updatable) SAML SP authentication type.
     */
    public readonly requestedAuthenticationContexts!: pulumi.Output<string[]>;
    /**
     * (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
     */
    public readonly requireForceAuthn!: pulumi.Output<boolean>;
    /**
     * (Updatable) SAML SP must accept encrypted assertion only.
     */
    public readonly requiresEncryptedAssertion!: pulumi.Output<boolean>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    public readonly resourceTypeSchemaVersion!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) SAML SP HoK Enabled.
     */
    public readonly samlHoKrequired!: pulumi.Output<boolean>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    public readonly schemas!: pulumi.Output<string[]>;
    /**
     * (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
     */
    public readonly serviceInstanceIdentifier!: pulumi.Output<string>;
    /**
     * (Updatable) Set to true to indicate whether to show IdP in login page or not.
     */
    public readonly shownOnLoginPage!: pulumi.Output<boolean>;
    /**
     * (Updatable) Signature hash algorithm.
     */
    public readonly signatureHashAlgorithm!: pulumi.Output<string>;
    /**
     * (Updatable) Signing certificate
     */
    public readonly signingCertificate!: pulumi.Output<string>;
    /**
     * (Updatable) Succinct ID
     */
    public readonly succinctId!: pulumi.Output<string>;
    /**
     * (Updatable) A list of tags on this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Identity.DomainsIdentityProviderTag[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     */
    public /*out*/ readonly tenancyOcid!: pulumi.Output<string>;
    /**
     * (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
     */
    public /*out*/ readonly tenantProviderId!: pulumi.Output<string>;
    /**
     * (Updatable) Identity Provider Type
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * (Updatable) Social Identity Provider Extension Schema
     */
    public readonly urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider!: pulumi.Output<outputs.Identity.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider>;
    /**
     * (Updatable) X509 Identity Provider Extension Schema
     */
    public readonly urnietfparamsscimschemasoracleidcsextensionx509identityProvider!: pulumi.Output<outputs.Identity.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProvider>;
    /**
     * (Updatable) User mapping method.
     */
    public readonly userMappingMethod!: pulumi.Output<string>;
    /**
     * (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
     */
    public readonly userMappingStoreAttribute!: pulumi.Output<string>;

    /**
     * Create a DomainsIdentityProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainsIdentityProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainsIdentityProviderArgs | DomainsIdentityProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainsIdentityProviderState | undefined;
            resourceInputs["assertionAttribute"] = state ? state.assertionAttribute : undefined;
            resourceInputs["attributeSets"] = state ? state.attributeSets : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["authnRequestBinding"] = state ? state.authnRequestBinding : undefined;
            resourceInputs["authorization"] = state ? state.authorization : undefined;
            resourceInputs["compartmentOcid"] = state ? state.compartmentOcid : undefined;
            resourceInputs["correlationPolicy"] = state ? state.correlationPolicy : undefined;
            resourceInputs["deleteInProgress"] = state ? state.deleteInProgress : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainOcid"] = state ? state.domainOcid : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["encryptionCertificate"] = state ? state.encryptionCertificate : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["iconUrl"] = state ? state.iconUrl : undefined;
            resourceInputs["idcsCreatedBies"] = state ? state.idcsCreatedBies : undefined;
            resourceInputs["idcsEndpoint"] = state ? state.idcsEndpoint : undefined;
            resourceInputs["idcsLastModifiedBies"] = state ? state.idcsLastModifiedBies : undefined;
            resourceInputs["idcsLastUpgradedInRelease"] = state ? state.idcsLastUpgradedInRelease : undefined;
            resourceInputs["idcsPreventedOperations"] = state ? state.idcsPreventedOperations : undefined;
            resourceInputs["idpSsoUrl"] = state ? state.idpSsoUrl : undefined;
            resourceInputs["includeSigningCertInSignature"] = state ? state.includeSigningCertInSignature : undefined;
            resourceInputs["jitUserProvAssignedGroups"] = state ? state.jitUserProvAssignedGroups : undefined;
            resourceInputs["jitUserProvAttributeUpdateEnabled"] = state ? state.jitUserProvAttributeUpdateEnabled : undefined;
            resourceInputs["jitUserProvAttributes"] = state ? state.jitUserProvAttributes : undefined;
            resourceInputs["jitUserProvCreateUserEnabled"] = state ? state.jitUserProvCreateUserEnabled : undefined;
            resourceInputs["jitUserProvEnabled"] = state ? state.jitUserProvEnabled : undefined;
            resourceInputs["jitUserProvGroupAssertionAttributeEnabled"] = state ? state.jitUserProvGroupAssertionAttributeEnabled : undefined;
            resourceInputs["jitUserProvGroupAssignmentMethod"] = state ? state.jitUserProvGroupAssignmentMethod : undefined;
            resourceInputs["jitUserProvGroupMappingMode"] = state ? state.jitUserProvGroupMappingMode : undefined;
            resourceInputs["jitUserProvGroupMappings"] = state ? state.jitUserProvGroupMappings : undefined;
            resourceInputs["jitUserProvGroupSamlAttributeName"] = state ? state.jitUserProvGroupSamlAttributeName : undefined;
            resourceInputs["jitUserProvGroupStaticListEnabled"] = state ? state.jitUserProvGroupStaticListEnabled : undefined;
            resourceInputs["jitUserProvIgnoreErrorOnAbsentGroups"] = state ? state.jitUserProvIgnoreErrorOnAbsentGroups : undefined;
            resourceInputs["logoutBinding"] = state ? state.logoutBinding : undefined;
            resourceInputs["logoutEnabled"] = state ? state.logoutEnabled : undefined;
            resourceInputs["logoutRequestUrl"] = state ? state.logoutRequestUrl : undefined;
            resourceInputs["logoutResponseUrl"] = state ? state.logoutResponseUrl : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["metas"] = state ? state.metas : undefined;
            resourceInputs["nameIdFormat"] = state ? state.nameIdFormat : undefined;
            resourceInputs["ocid"] = state ? state.ocid : undefined;
            resourceInputs["partnerName"] = state ? state.partnerName : undefined;
            resourceInputs["partnerProviderId"] = state ? state.partnerProviderId : undefined;
            resourceInputs["requestedAuthenticationContexts"] = state ? state.requestedAuthenticationContexts : undefined;
            resourceInputs["requireForceAuthn"] = state ? state.requireForceAuthn : undefined;
            resourceInputs["requiresEncryptedAssertion"] = state ? state.requiresEncryptedAssertion : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = state ? state.resourceTypeSchemaVersion : undefined;
            resourceInputs["samlHoKrequired"] = state ? state.samlHoKrequired : undefined;
            resourceInputs["schemas"] = state ? state.schemas : undefined;
            resourceInputs["serviceInstanceIdentifier"] = state ? state.serviceInstanceIdentifier : undefined;
            resourceInputs["shownOnLoginPage"] = state ? state.shownOnLoginPage : undefined;
            resourceInputs["signatureHashAlgorithm"] = state ? state.signatureHashAlgorithm : undefined;
            resourceInputs["signingCertificate"] = state ? state.signingCertificate : undefined;
            resourceInputs["succinctId"] = state ? state.succinctId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenancyOcid"] = state ? state.tenancyOcid : undefined;
            resourceInputs["tenantProviderId"] = state ? state.tenantProviderId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider"] = state ? state.urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider : undefined;
            resourceInputs["urnietfparamsscimschemasoracleidcsextensionx509identityProvider"] = state ? state.urnietfparamsscimschemasoracleidcsextensionx509identityProvider : undefined;
            resourceInputs["userMappingMethod"] = state ? state.userMappingMethod : undefined;
            resourceInputs["userMappingStoreAttribute"] = state ? state.userMappingStoreAttribute : undefined;
        } else {
            const args = argsOrState as DomainsIdentityProviderArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.idcsEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idcsEndpoint'");
            }
            if ((!args || args.partnerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'partnerName'");
            }
            if ((!args || args.schemas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemas'");
            }
            resourceInputs["assertionAttribute"] = args ? args.assertionAttribute : undefined;
            resourceInputs["attributeSets"] = args ? args.attributeSets : undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["authnRequestBinding"] = args ? args.authnRequestBinding : undefined;
            resourceInputs["authorization"] = args ? args.authorization : undefined;
            resourceInputs["correlationPolicy"] = args ? args.correlationPolicy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["encryptionCertificate"] = args ? args.encryptionCertificate : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["iconUrl"] = args ? args.iconUrl : undefined;
            resourceInputs["idcsEndpoint"] = args ? args.idcsEndpoint : undefined;
            resourceInputs["idpSsoUrl"] = args ? args.idpSsoUrl : undefined;
            resourceInputs["includeSigningCertInSignature"] = args ? args.includeSigningCertInSignature : undefined;
            resourceInputs["jitUserProvAssignedGroups"] = args ? args.jitUserProvAssignedGroups : undefined;
            resourceInputs["jitUserProvAttributeUpdateEnabled"] = args ? args.jitUserProvAttributeUpdateEnabled : undefined;
            resourceInputs["jitUserProvAttributes"] = args ? args.jitUserProvAttributes : undefined;
            resourceInputs["jitUserProvCreateUserEnabled"] = args ? args.jitUserProvCreateUserEnabled : undefined;
            resourceInputs["jitUserProvEnabled"] = args ? args.jitUserProvEnabled : undefined;
            resourceInputs["jitUserProvGroupAssertionAttributeEnabled"] = args ? args.jitUserProvGroupAssertionAttributeEnabled : undefined;
            resourceInputs["jitUserProvGroupAssignmentMethod"] = args ? args.jitUserProvGroupAssignmentMethod : undefined;
            resourceInputs["jitUserProvGroupMappingMode"] = args ? args.jitUserProvGroupMappingMode : undefined;
            resourceInputs["jitUserProvGroupMappings"] = args ? args.jitUserProvGroupMappings : undefined;
            resourceInputs["jitUserProvGroupSamlAttributeName"] = args ? args.jitUserProvGroupSamlAttributeName : undefined;
            resourceInputs["jitUserProvGroupStaticListEnabled"] = args ? args.jitUserProvGroupStaticListEnabled : undefined;
            resourceInputs["jitUserProvIgnoreErrorOnAbsentGroups"] = args ? args.jitUserProvIgnoreErrorOnAbsentGroups : undefined;
            resourceInputs["logoutBinding"] = args ? args.logoutBinding : undefined;
            resourceInputs["logoutEnabled"] = args ? args.logoutEnabled : undefined;
            resourceInputs["logoutRequestUrl"] = args ? args.logoutRequestUrl : undefined;
            resourceInputs["logoutResponseUrl"] = args ? args.logoutResponseUrl : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["nameIdFormat"] = args ? args.nameIdFormat : undefined;
            resourceInputs["ocid"] = args ? args.ocid : undefined;
            resourceInputs["partnerName"] = args ? args.partnerName : undefined;
            resourceInputs["partnerProviderId"] = args ? args.partnerProviderId : undefined;
            resourceInputs["requestedAuthenticationContexts"] = args ? args.requestedAuthenticationContexts : undefined;
            resourceInputs["requireForceAuthn"] = args ? args.requireForceAuthn : undefined;
            resourceInputs["requiresEncryptedAssertion"] = args ? args.requiresEncryptedAssertion : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = args ? args.resourceTypeSchemaVersion : undefined;
            resourceInputs["samlHoKrequired"] = args ? args.samlHoKrequired : undefined;
            resourceInputs["schemas"] = args ? args.schemas : undefined;
            resourceInputs["serviceInstanceIdentifier"] = args ? args.serviceInstanceIdentifier : undefined;
            resourceInputs["shownOnLoginPage"] = args ? args.shownOnLoginPage : undefined;
            resourceInputs["signatureHashAlgorithm"] = args ? args.signatureHashAlgorithm : undefined;
            resourceInputs["signingCertificate"] = args ? args.signingCertificate : undefined;
            resourceInputs["succinctId"] = args ? args.succinctId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider"] = args ? args.urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider : undefined;
            resourceInputs["urnietfparamsscimschemasoracleidcsextensionx509identityProvider"] = args ? args.urnietfparamsscimschemasoracleidcsextensionx509identityProvider : undefined;
            resourceInputs["userMappingMethod"] = args ? args.userMappingMethod : undefined;
            resourceInputs["userMappingStoreAttribute"] = args ? args.userMappingStoreAttribute : undefined;
            resourceInputs["compartmentOcid"] = undefined /*out*/;
            resourceInputs["deleteInProgress"] = undefined /*out*/;
            resourceInputs["domainOcid"] = undefined /*out*/;
            resourceInputs["idcsCreatedBies"] = undefined /*out*/;
            resourceInputs["idcsLastModifiedBies"] = undefined /*out*/;
            resourceInputs["idcsLastUpgradedInRelease"] = undefined /*out*/;
            resourceInputs["idcsPreventedOperations"] = undefined /*out*/;
            resourceInputs["metas"] = undefined /*out*/;
            resourceInputs["tenancyOcid"] = undefined /*out*/;
            resourceInputs["tenantProviderId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainsIdentityProvider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainsIdentityProvider resources.
 */
export interface DomainsIdentityProviderState {
    /**
     * (Updatable) Assertion attribute name.
     */
    assertionAttribute?: pulumi.Input<string>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * (Updatable) HTTP binding to use for authentication requests.
     */
    authnRequestBinding?: pulumi.Input<string>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     */
    compartmentOcid?: pulumi.Input<string>;
    /**
     * (Updatable) Correlation policy
     */
    correlationPolicy?: pulumi.Input<inputs.Identity.DomainsIdentityProviderCorrelationPolicy>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     */
    deleteInProgress?: pulumi.Input<boolean>;
    /**
     * (Updatable) Description
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     */
    domainOcid?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to indicate Partner enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Encryption certificate
     */
    encryptionCertificate?: pulumi.Input<string>;
    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     */
    externalId?: pulumi.Input<string>;
    /**
     * (Updatable) Identity Provider Icon URL.
     */
    iconUrl?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who created the Resource
     */
    idcsCreatedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderIdcsCreatedBy>[]>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     */
    idcsLastModifiedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderIdcsLastModifiedBy>[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     */
    idcsLastUpgradedInRelease?: pulumi.Input<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     */
    idcsPreventedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Identity Provider SSO URL
     */
    idpSsoUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to include the signing certificate in the signature.
     */
    includeSigningCertInSignature?: pulumi.Input<boolean>;
    /**
     * (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
     */
    jitUserProvAssignedGroups?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderJitUserProvAssignedGroup>[]>;
    /**
     * (Updatable) Set to true to indicate JIT User Creation is enabled
     */
    jitUserProvAttributeUpdateEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Assertion To User Mapping
     */
    jitUserProvAttributes?: pulumi.Input<inputs.Identity.DomainsIdentityProviderJitUserProvAttributes>;
    /**
     * (Updatable) Set to true to indicate JIT User Creation is enabled
     */
    jitUserProvCreateUserEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning is enabled
     */
    jitUserProvEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
     */
    jitUserProvGroupAssertionAttributeEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
     */
    jitUserProvGroupAssignmentMethod?: pulumi.Input<string>;
    /**
     * (Updatable) Property to indicate the mode of group mapping
     */
    jitUserProvGroupMappingMode?: pulumi.Input<string>;
    /**
     * (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
     */
    jitUserProvGroupMappings?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderJitUserProvGroupMapping>[]>;
    /**
     * (Updatable) Name of the assertion attribute containing the users groups
     */
    jitUserProvGroupSamlAttributeName?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
     */
    jitUserProvGroupStaticListEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Set to true to indicate ignoring absence of group while provisioning
     */
    jitUserProvIgnoreErrorOnAbsentGroups?: pulumi.Input<boolean>;
    /**
     * (Updatable) HTTP binding to use for logout.
     */
    logoutBinding?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to enable logout.
     */
    logoutEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Logout request URL
     */
    logoutRequestUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Logout response URL
     */
    logoutResponseUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Metadata
     */
    metadata?: pulumi.Input<string>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     */
    metas?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderMeta>[]>;
    /**
     * (Updatable) Default authentication request name ID format.
     */
    nameIdFormat?: pulumi.Input<string>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     */
    ocid?: pulumi.Input<string>;
    /**
     * (Updatable) Unique name of the trusted Identity Provider.
     */
    partnerName?: pulumi.Input<string>;
    /**
     * (Updatable) Provider ID
     */
    partnerProviderId?: pulumi.Input<string>;
    /**
     * (Updatable) SAML SP authentication type.
     */
    requestedAuthenticationContexts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
     */
    requireForceAuthn?: pulumi.Input<boolean>;
    /**
     * (Updatable) SAML SP must accept encrypted assertion only.
     */
    requiresEncryptedAssertion?: pulumi.Input<boolean>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * (Updatable) SAML SP HoK Enabled.
     */
    samlHoKrequired?: pulumi.Input<boolean>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
     */
    serviceInstanceIdentifier?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to indicate whether to show IdP in login page or not.
     */
    shownOnLoginPage?: pulumi.Input<boolean>;
    /**
     * (Updatable) Signature hash algorithm.
     */
    signatureHashAlgorithm?: pulumi.Input<string>;
    /**
     * (Updatable) Signing certificate
     */
    signingCertificate?: pulumi.Input<string>;
    /**
     * (Updatable) Succinct ID
     */
    succinctId?: pulumi.Input<string>;
    /**
     * (Updatable) A list of tags on this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderTag>[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     */
    tenancyOcid?: pulumi.Input<string>;
    /**
     * (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
     */
    tenantProviderId?: pulumi.Input<string>;
    /**
     * (Updatable) Identity Provider Type
     */
    type?: pulumi.Input<string>;
    /**
     * (Updatable) Social Identity Provider Extension Schema
     */
    urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider?: pulumi.Input<inputs.Identity.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider>;
    /**
     * (Updatable) X509 Identity Provider Extension Schema
     */
    urnietfparamsscimschemasoracleidcsextensionx509identityProvider?: pulumi.Input<inputs.Identity.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProvider>;
    /**
     * (Updatable) User mapping method.
     */
    userMappingMethod?: pulumi.Input<string>;
    /**
     * (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
     */
    userMappingStoreAttribute?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DomainsIdentityProvider resource.
 */
export interface DomainsIdentityProviderArgs {
    /**
     * (Updatable) Assertion attribute name.
     */
    assertionAttribute?: pulumi.Input<string>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * (Updatable) HTTP binding to use for authentication requests.
     */
    authnRequestBinding?: pulumi.Input<string>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * (Updatable) Correlation policy
     */
    correlationPolicy?: pulumi.Input<inputs.Identity.DomainsIdentityProviderCorrelationPolicy>;
    /**
     * (Updatable) Description
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to indicate Partner enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * (Updatable) Encryption certificate
     */
    encryptionCertificate?: pulumi.Input<string>;
    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     */
    externalId?: pulumi.Input<string>;
    /**
     * (Updatable) Identity Provider Icon URL.
     */
    iconUrl?: pulumi.Input<string>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: pulumi.Input<string>;
    /**
     * (Updatable) Identity Provider SSO URL
     */
    idpSsoUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to include the signing certificate in the signature.
     */
    includeSigningCertInSignature?: pulumi.Input<boolean>;
    /**
     * (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
     */
    jitUserProvAssignedGroups?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderJitUserProvAssignedGroup>[]>;
    /**
     * (Updatable) Set to true to indicate JIT User Creation is enabled
     */
    jitUserProvAttributeUpdateEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Assertion To User Mapping
     */
    jitUserProvAttributes?: pulumi.Input<inputs.Identity.DomainsIdentityProviderJitUserProvAttributes>;
    /**
     * (Updatable) Set to true to indicate JIT User Creation is enabled
     */
    jitUserProvCreateUserEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning is enabled
     */
    jitUserProvEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
     */
    jitUserProvGroupAssertionAttributeEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) The default value is 'Overwrite', which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify 'Merge' if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
     */
    jitUserProvGroupAssignmentMethod?: pulumi.Input<string>;
    /**
     * (Updatable) Property to indicate the mode of group mapping
     */
    jitUserProvGroupMappingMode?: pulumi.Input<string>;
    /**
     * (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
     */
    jitUserProvGroupMappings?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderJitUserProvGroupMapping>[]>;
    /**
     * (Updatable) Name of the assertion attribute containing the users groups
     */
    jitUserProvGroupSamlAttributeName?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
     */
    jitUserProvGroupStaticListEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Set to true to indicate ignoring absence of group while provisioning
     */
    jitUserProvIgnoreErrorOnAbsentGroups?: pulumi.Input<boolean>;
    /**
     * (Updatable) HTTP binding to use for logout.
     */
    logoutBinding?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to enable logout.
     */
    logoutEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Logout request URL
     */
    logoutRequestUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Logout response URL
     */
    logoutResponseUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Metadata
     */
    metadata?: pulumi.Input<string>;
    /**
     * (Updatable) Default authentication request name ID format.
     */
    nameIdFormat?: pulumi.Input<string>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     */
    ocid?: pulumi.Input<string>;
    /**
     * (Updatable) Unique name of the trusted Identity Provider.
     */
    partnerName: pulumi.Input<string>;
    /**
     * (Updatable) Provider ID
     */
    partnerProviderId?: pulumi.Input<string>;
    /**
     * (Updatable) SAML SP authentication type.
     */
    requestedAuthenticationContexts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
     */
    requireForceAuthn?: pulumi.Input<boolean>;
    /**
     * (Updatable) SAML SP must accept encrypted assertion only.
     */
    requiresEncryptedAssertion?: pulumi.Input<boolean>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * (Updatable) SAML SP HoK Enabled.
     */
    samlHoKrequired?: pulumi.Input<boolean>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    schemas: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
     */
    serviceInstanceIdentifier?: pulumi.Input<string>;
    /**
     * (Updatable) Set to true to indicate whether to show IdP in login page or not.
     */
    shownOnLoginPage?: pulumi.Input<boolean>;
    /**
     * (Updatable) Signature hash algorithm.
     */
    signatureHashAlgorithm?: pulumi.Input<string>;
    /**
     * (Updatable) Signing certificate
     */
    signingCertificate?: pulumi.Input<string>;
    /**
     * (Updatable) Succinct ID
     */
    succinctId?: pulumi.Input<string>;
    /**
     * (Updatable) A list of tags on this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsIdentityProviderTag>[]>;
    /**
     * (Updatable) Identity Provider Type
     */
    type?: pulumi.Input<string>;
    /**
     * (Updatable) Social Identity Provider Extension Schema
     */
    urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider?: pulumi.Input<inputs.Identity.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider>;
    /**
     * (Updatable) X509 Identity Provider Extension Schema
     */
    urnietfparamsscimschemasoracleidcsextensionx509identityProvider?: pulumi.Input<inputs.Identity.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProvider>;
    /**
     * (Updatable) User mapping method.
     */
    userMappingMethod?: pulumi.Input<string>;
    /**
     * (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.<br>You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the <b>Example of a Request Body</b> section of the Examples tab for the <a href='./op-admin-v1-identityproviders-post.html'>POST</a> and <a href='./op-admin-v1-identityproviders-id-put.html'>PUT</a> methods of the /IdentityProviders endpoint.
     */
    userMappingStoreAttribute?: pulumi.Input<string>;
}
