// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the O Auth2 Client Credential resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Add a user's oauth2 client credential
 *
 * ## Import
 *
 * OAuth2ClientCredentials can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Identity/domainsOauth2clientCredential:DomainsOauth2clientCredential test_oauth2client_credential "idcsEndpoint/{idcsEndpoint}/oAuth2ClientCredentials/{oAuth2ClientCredentialId}"
 * ```
 */
export class DomainsOauth2clientCredential extends pulumi.CustomResource {
    /**
     * Get an existing DomainsOauth2clientCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainsOauth2clientCredentialState, opts?: pulumi.CustomResourceOptions): DomainsOauth2clientCredential {
        return new DomainsOauth2clientCredential(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/domainsOauth2clientCredential:DomainsOauth2clientCredential';

    /**
     * Returns true if the given object is an instance of DomainsOauth2clientCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainsOauth2clientCredential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainsOauth2clientCredential.__pulumiType;
    }

    /**
     * A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    public readonly attributeSets!: pulumi.Output<string[] | undefined>;
    /**
     * A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    public readonly attributes!: pulumi.Output<string | undefined>;
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    public readonly authorization!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     */
    public /*out*/ readonly compartmentOcid!: pulumi.Output<string>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     */
    public /*out*/ readonly deleteInProgress!: pulumi.Output<boolean>;
    /**
     * Description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     */
    public /*out*/ readonly domainOcid!: pulumi.Output<string>;
    /**
     * User credential expires on
     */
    public readonly expiresOn!: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who created the Resource
     */
    public /*out*/ readonly idcsCreatedBies!: pulumi.Output<outputs.Identity.DomainsOauth2clientCredentialIdcsCreatedBy[]>;
    /**
     * The basic endpoint for the identity domain
     */
    public readonly idcsEndpoint!: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     */
    public /*out*/ readonly idcsLastModifiedBies!: pulumi.Output<outputs.Identity.DomainsOauth2clientCredentialIdcsLastModifiedBy[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     */
    public /*out*/ readonly idcsLastUpgradedInRelease!: pulumi.Output<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     */
    public /*out*/ readonly idcsPreventedOperations!: pulumi.Output<string[]>;
    /**
     * Specifies if secret need to be reset
     */
    public readonly isResetSecret!: pulumi.Output<boolean>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     */
    public /*out*/ readonly metas!: pulumi.Output<outputs.Identity.DomainsOauth2clientCredentialMeta[]>;
    /**
     * (Updatable) User name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * User's ocid
     */
    public readonly ocid!: pulumi.Output<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    public readonly resourceTypeSchemaVersion!: pulumi.Output<string | undefined>;
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    public readonly schemas!: pulumi.Output<string[]>;
    /**
     * Scopes
     */
    public readonly scopes!: pulumi.Output<outputs.Identity.DomainsOauth2clientCredentialScope[]>;
    /**
     * User credential status
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * A list of tags on this resource.
     */
    public readonly tags!: pulumi.Output<outputs.Identity.DomainsOauth2clientCredentialTag[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     */
    public /*out*/ readonly tenancyOcid!: pulumi.Output<string>;
    /**
     * Controls whether a user can update themselves or not via User related APIs
     */
    public readonly urnietfparamsscimschemasoracleidcsextensionselfChangeUser!: pulumi.Output<outputs.Identity.DomainsOauth2clientCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser>;
    /**
     * User linked to oauth2 client credential
     */
    public readonly user!: pulumi.Output<outputs.Identity.DomainsOauth2clientCredentialUser>;

    /**
     * Create a DomainsOauth2clientCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainsOauth2clientCredentialArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainsOauth2clientCredentialArgs | DomainsOauth2clientCredentialState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainsOauth2clientCredentialState | undefined;
            resourceInputs["attributeSets"] = state ? state.attributeSets : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["authorization"] = state ? state.authorization : undefined;
            resourceInputs["compartmentOcid"] = state ? state.compartmentOcid : undefined;
            resourceInputs["deleteInProgress"] = state ? state.deleteInProgress : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domainOcid"] = state ? state.domainOcid : undefined;
            resourceInputs["expiresOn"] = state ? state.expiresOn : undefined;
            resourceInputs["idcsCreatedBies"] = state ? state.idcsCreatedBies : undefined;
            resourceInputs["idcsEndpoint"] = state ? state.idcsEndpoint : undefined;
            resourceInputs["idcsLastModifiedBies"] = state ? state.idcsLastModifiedBies : undefined;
            resourceInputs["idcsLastUpgradedInRelease"] = state ? state.idcsLastUpgradedInRelease : undefined;
            resourceInputs["idcsPreventedOperations"] = state ? state.idcsPreventedOperations : undefined;
            resourceInputs["isResetSecret"] = state ? state.isResetSecret : undefined;
            resourceInputs["metas"] = state ? state.metas : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ocid"] = state ? state.ocid : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = state ? state.resourceTypeSchemaVersion : undefined;
            resourceInputs["schemas"] = state ? state.schemas : undefined;
            resourceInputs["scopes"] = state ? state.scopes : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenancyOcid"] = state ? state.tenancyOcid : undefined;
            resourceInputs["urnietfparamsscimschemasoracleidcsextensionselfChangeUser"] = state ? state.urnietfparamsscimschemasoracleidcsextensionselfChangeUser : undefined;
            resourceInputs["user"] = state ? state.user : undefined;
        } else {
            const args = argsOrState as DomainsOauth2clientCredentialArgs | undefined;
            if ((!args || args.idcsEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idcsEndpoint'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.schemas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemas'");
            }
            if ((!args || args.scopes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scopes'");
            }
            resourceInputs["attributeSets"] = args ? args.attributeSets : undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["authorization"] = args ? args.authorization : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expiresOn"] = args ? args.expiresOn : undefined;
            resourceInputs["idcsEndpoint"] = args ? args.idcsEndpoint : undefined;
            resourceInputs["isResetSecret"] = args ? args.isResetSecret : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ocid"] = args ? args.ocid : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = args ? args.resourceTypeSchemaVersion : undefined;
            resourceInputs["schemas"] = args ? args.schemas : undefined;
            resourceInputs["scopes"] = args ? args.scopes : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["urnietfparamsscimschemasoracleidcsextensionselfChangeUser"] = args ? args.urnietfparamsscimschemasoracleidcsextensionselfChangeUser : undefined;
            resourceInputs["user"] = args ? args.user : undefined;
            resourceInputs["compartmentOcid"] = undefined /*out*/;
            resourceInputs["deleteInProgress"] = undefined /*out*/;
            resourceInputs["domainOcid"] = undefined /*out*/;
            resourceInputs["idcsCreatedBies"] = undefined /*out*/;
            resourceInputs["idcsLastModifiedBies"] = undefined /*out*/;
            resourceInputs["idcsLastUpgradedInRelease"] = undefined /*out*/;
            resourceInputs["idcsPreventedOperations"] = undefined /*out*/;
            resourceInputs["metas"] = undefined /*out*/;
            resourceInputs["tenancyOcid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainsOauth2clientCredential.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainsOauth2clientCredential resources.
 */
export interface DomainsOauth2clientCredentialState {
    /**
     * A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     */
    compartmentOcid?: pulumi.Input<string>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     */
    deleteInProgress?: pulumi.Input<boolean>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     */
    domainOcid?: pulumi.Input<string>;
    /**
     * User credential expires on
     */
    expiresOn?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who created the Resource
     */
    idcsCreatedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialIdcsCreatedBy>[]>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     */
    idcsLastModifiedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialIdcsLastModifiedBy>[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     */
    idcsLastUpgradedInRelease?: pulumi.Input<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     */
    idcsPreventedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies if secret need to be reset
     */
    isResetSecret?: pulumi.Input<boolean>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     */
    metas?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialMeta>[]>;
    /**
     * (Updatable) User name
     */
    name?: pulumi.Input<string>;
    /**
     * User's ocid
     */
    ocid?: pulumi.Input<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Scopes
     */
    scopes?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialScope>[]>;
    /**
     * User credential status
     */
    status?: pulumi.Input<string>;
    /**
     * A list of tags on this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialTag>[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     */
    tenancyOcid?: pulumi.Input<string>;
    /**
     * Controls whether a user can update themselves or not via User related APIs
     */
    urnietfparamsscimschemasoracleidcsextensionselfChangeUser?: pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser>;
    /**
     * User linked to oauth2 client credential
     */
    user?: pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialUser>;
}

/**
 * The set of arguments for constructing a DomainsOauth2clientCredential resource.
 */
export interface DomainsOauth2clientCredentialArgs {
    /**
     * A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * User credential expires on
     */
    expiresOn?: pulumi.Input<string>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: pulumi.Input<string>;
    /**
     * Specifies if secret need to be reset
     */
    isResetSecret?: pulumi.Input<boolean>;
    /**
     * (Updatable) User name
     */
    name: pulumi.Input<string>;
    /**
     * User's ocid
     */
    ocid?: pulumi.Input<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    schemas: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Scopes
     */
    scopes: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialScope>[]>;
    /**
     * User credential status
     */
    status?: pulumi.Input<string>;
    /**
     * A list of tags on this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialTag>[]>;
    /**
     * Controls whether a user can update themselves or not via User related APIs
     */
    urnietfparamsscimschemasoracleidcsextensionselfChangeUser?: pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialUrnietfparamsscimschemasoracleidcsextensionselfChangeUser>;
    /**
     * User linked to oauth2 client credential
     */
    user?: pulumi.Input<inputs.Identity.DomainsOauth2clientCredentialUser>;
}
