// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the O Auth Partner Certificate resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Create an OAuth Partner Certificate
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOauthPartnerCertificate = new oci.identity.DomainsOauthPartnerCertificate("test_oauth_partner_certificate", {
 *     certificateAlias: oauthPartnerCertificateCertificateAlias,
 *     idcsEndpoint: testDomain.url,
 *     schemas: ["urn:ietf:params:scim:schemas:oracle:idcs:OAuthPartnerCertificate"],
 *     authorization: oauthPartnerCertificateAuthorization,
 *     externalId: "externalId",
 *     keyStoreId: testKeyStore.id,
 *     keyStoreName: testKeyStore.name,
 *     keyStorePassword: oauthPartnerCertificateKeyStorePassword,
 *     map: oauthPartnerCertificateMap,
 *     ocid: oauthPartnerCertificateOcid,
 *     resourceTypeSchemaVersion: oauthPartnerCertificateResourceTypeSchemaVersion,
 *     tags: [{
 *         key: oauthPartnerCertificateTagsKey,
 *         value: oauthPartnerCertificateTagsValue,
 *     }],
 *     x509base64certificate: oauthPartnerCertificateX509base64certificate,
 * });
 * ```
 *
 * ## Import
 *
 * OAuthPartnerCertificates can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Identity/domainsOauthPartnerCertificate:DomainsOauthPartnerCertificate test_oauth_partner_certificate "idcsEndpoint/{idcsEndpoint}/oAuthPartnerCertificates/{oAuthPartnerCertificateId}"
 * ```
 */
export class DomainsOauthPartnerCertificate extends pulumi.CustomResource {
    /**
     * Get an existing DomainsOauthPartnerCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainsOauthPartnerCertificateState, opts?: pulumi.CustomResourceOptions): DomainsOauthPartnerCertificate {
        return new DomainsOauthPartnerCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/domainsOauthPartnerCertificate:DomainsOauthPartnerCertificate';

    /**
     * Returns true if the given object is an instance of DomainsOauthPartnerCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainsOauthPartnerCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainsOauthPartnerCertificate.__pulumiType;
    }

    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    declare public readonly authorization: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Certificate end date
     *
     * **SCIM++ Properties:**
     * * type: dateTime
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    declare public /*out*/ readonly certEndDate: pulumi.Output<string>;
    /**
     * (Updatable) Certificate start date
     *
     * **SCIM++ Properties:**
     * * type: dateTime
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    declare public /*out*/ readonly certStartDate: pulumi.Output<string>;
    /**
     * Certificate alias
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: true
     * * caseExact: false
     * * mutability: readWrite
     * * returned: always
     * * uniqueness: none
     * * idcsSearchable: true
     */
    declare public readonly certificateAlias: pulumi.Output<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    declare public /*out*/ readonly compartmentOcid: pulumi.Output<string>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    declare public /*out*/ readonly deleteInProgress: pulumi.Output<boolean>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    declare public /*out*/ readonly domainOcid: pulumi.Output<string>;
    /**
     * An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    declare public readonly externalId: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who created the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     */
    declare public /*out*/ readonly idcsCreatedBies: pulumi.Output<outputs.Identity.DomainsOauthPartnerCertificateIdcsCreatedBy[]>;
    /**
     * The basic endpoint for the identity domain
     */
    declare public readonly idcsEndpoint: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     */
    declare public /*out*/ readonly idcsLastModifiedBies: pulumi.Output<outputs.Identity.DomainsOauthPartnerCertificateIdcsLastModifiedBy[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    declare public /*out*/ readonly idcsLastUpgradedInRelease: pulumi.Output<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    declare public /*out*/ readonly idcsPreventedOperations: pulumi.Output<string[]>;
    /**
     * Key store ID
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * returned: never
     * * uniqueness: none
     * * idcsSearchable: true
     */
    declare public readonly keyStoreId: pulumi.Output<string>;
    /**
     * Key store name
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * returned: always
     * * uniqueness: none
     */
    declare public readonly keyStoreName: pulumi.Output<string>;
    /**
     * Key store password
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * idcsSensitive: none
     * * required: false
     * * caseExact: true
     * * returned: never
     * * uniqueness: none
     */
    declare public readonly keyStorePassword: pulumi.Output<string>;
    /**
     * Map
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * returned: always
     * * uniqueness: none
     */
    declare public readonly map: pulumi.Output<string>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     */
    declare public /*out*/ readonly metas: pulumi.Output<outputs.Identity.DomainsOauthPartnerCertificateMeta[]>;
    /**
     * Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    declare public readonly ocid: pulumi.Output<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    declare public readonly resourceTypeSchemaVersion: pulumi.Output<string | undefined>;
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    declare public readonly schemas: pulumi.Output<string[]>;
    /**
     * (Updatable) SHA-1 Thumbprint
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * returned: default
     * * idcsSearchable: true
     * * uniqueness: none
     */
    declare public /*out*/ readonly sha1thumbprint: pulumi.Output<string>;
    /**
     * (Updatable) SHA-256 Thumbprint
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * returned: default
     * * idcsSearchable: true
     * * uniqueness: none
     */
    declare public /*out*/ readonly sha256thumbprint: pulumi.Output<string>;
    /**
     * A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    declare public readonly tags: pulumi.Output<outputs.Identity.DomainsOauthPartnerCertificateTag[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    declare public /*out*/ readonly tenancyOcid: pulumi.Output<string>;
    /**
     * Base 64Key data attribute
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly x509base64certificate: pulumi.Output<string>;

    /**
     * Create a DomainsOauthPartnerCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainsOauthPartnerCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainsOauthPartnerCertificateArgs | DomainsOauthPartnerCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainsOauthPartnerCertificateState | undefined;
            resourceInputs["authorization"] = state?.authorization;
            resourceInputs["certEndDate"] = state?.certEndDate;
            resourceInputs["certStartDate"] = state?.certStartDate;
            resourceInputs["certificateAlias"] = state?.certificateAlias;
            resourceInputs["compartmentOcid"] = state?.compartmentOcid;
            resourceInputs["deleteInProgress"] = state?.deleteInProgress;
            resourceInputs["domainOcid"] = state?.domainOcid;
            resourceInputs["externalId"] = state?.externalId;
            resourceInputs["idcsCreatedBies"] = state?.idcsCreatedBies;
            resourceInputs["idcsEndpoint"] = state?.idcsEndpoint;
            resourceInputs["idcsLastModifiedBies"] = state?.idcsLastModifiedBies;
            resourceInputs["idcsLastUpgradedInRelease"] = state?.idcsLastUpgradedInRelease;
            resourceInputs["idcsPreventedOperations"] = state?.idcsPreventedOperations;
            resourceInputs["keyStoreId"] = state?.keyStoreId;
            resourceInputs["keyStoreName"] = state?.keyStoreName;
            resourceInputs["keyStorePassword"] = state?.keyStorePassword;
            resourceInputs["map"] = state?.map;
            resourceInputs["metas"] = state?.metas;
            resourceInputs["ocid"] = state?.ocid;
            resourceInputs["resourceTypeSchemaVersion"] = state?.resourceTypeSchemaVersion;
            resourceInputs["schemas"] = state?.schemas;
            resourceInputs["sha1thumbprint"] = state?.sha1thumbprint;
            resourceInputs["sha256thumbprint"] = state?.sha256thumbprint;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tenancyOcid"] = state?.tenancyOcid;
            resourceInputs["x509base64certificate"] = state?.x509base64certificate;
        } else {
            const args = argsOrState as DomainsOauthPartnerCertificateArgs | undefined;
            if (args?.certificateAlias === undefined && !opts.urn) {
                throw new Error("Missing required property 'certificateAlias'");
            }
            if (args?.idcsEndpoint === undefined && !opts.urn) {
                throw new Error("Missing required property 'idcsEndpoint'");
            }
            if (args?.schemas === undefined && !opts.urn) {
                throw new Error("Missing required property 'schemas'");
            }
            resourceInputs["authorization"] = args?.authorization;
            resourceInputs["certificateAlias"] = args?.certificateAlias;
            resourceInputs["externalId"] = args?.externalId;
            resourceInputs["idcsEndpoint"] = args?.idcsEndpoint;
            resourceInputs["keyStoreId"] = args?.keyStoreId;
            resourceInputs["keyStoreName"] = args?.keyStoreName;
            resourceInputs["keyStorePassword"] = args?.keyStorePassword ? pulumi.secret(args.keyStorePassword) : undefined;
            resourceInputs["map"] = args?.map;
            resourceInputs["ocid"] = args?.ocid;
            resourceInputs["resourceTypeSchemaVersion"] = args?.resourceTypeSchemaVersion;
            resourceInputs["schemas"] = args?.schemas;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["x509base64certificate"] = args?.x509base64certificate;
            resourceInputs["certEndDate"] = undefined /*out*/;
            resourceInputs["certStartDate"] = undefined /*out*/;
            resourceInputs["compartmentOcid"] = undefined /*out*/;
            resourceInputs["deleteInProgress"] = undefined /*out*/;
            resourceInputs["domainOcid"] = undefined /*out*/;
            resourceInputs["idcsCreatedBies"] = undefined /*out*/;
            resourceInputs["idcsLastModifiedBies"] = undefined /*out*/;
            resourceInputs["idcsLastUpgradedInRelease"] = undefined /*out*/;
            resourceInputs["idcsPreventedOperations"] = undefined /*out*/;
            resourceInputs["metas"] = undefined /*out*/;
            resourceInputs["sha1thumbprint"] = undefined /*out*/;
            resourceInputs["sha256thumbprint"] = undefined /*out*/;
            resourceInputs["tenancyOcid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["keyStorePassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DomainsOauthPartnerCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainsOauthPartnerCertificate resources.
 */
export interface DomainsOauthPartnerCertificateState {
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * (Updatable) Certificate end date
     *
     * **SCIM++ Properties:**
     * * type: dateTime
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    certEndDate?: pulumi.Input<string>;
    /**
     * (Updatable) Certificate start date
     *
     * **SCIM++ Properties:**
     * * type: dateTime
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    certStartDate?: pulumi.Input<string>;
    /**
     * Certificate alias
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: true
     * * caseExact: false
     * * mutability: readWrite
     * * returned: always
     * * uniqueness: none
     * * idcsSearchable: true
     */
    certificateAlias?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    compartmentOcid?: pulumi.Input<string>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    deleteInProgress?: pulumi.Input<boolean>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    domainOcid?: pulumi.Input<string>;
    /**
     * An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    externalId?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who created the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     */
    idcsCreatedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauthPartnerCertificateIdcsCreatedBy>[]>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     */
    idcsLastModifiedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauthPartnerCertificateIdcsLastModifiedBy>[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    idcsLastUpgradedInRelease?: pulumi.Input<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    idcsPreventedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Key store ID
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * returned: never
     * * uniqueness: none
     * * idcsSearchable: true
     */
    keyStoreId?: pulumi.Input<string>;
    /**
     * Key store name
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * returned: always
     * * uniqueness: none
     */
    keyStoreName?: pulumi.Input<string>;
    /**
     * Key store password
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * idcsSensitive: none
     * * required: false
     * * caseExact: true
     * * returned: never
     * * uniqueness: none
     */
    keyStorePassword?: pulumi.Input<string>;
    /**
     * Map
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * returned: always
     * * uniqueness: none
     */
    map?: pulumi.Input<string>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     */
    metas?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauthPartnerCertificateMeta>[]>;
    /**
     * Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    ocid?: pulumi.Input<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) SHA-1 Thumbprint
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * returned: default
     * * idcsSearchable: true
     * * uniqueness: none
     */
    sha1thumbprint?: pulumi.Input<string>;
    /**
     * (Updatable) SHA-256 Thumbprint
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * returned: default
     * * idcsSearchable: true
     * * uniqueness: none
     */
    sha256thumbprint?: pulumi.Input<string>;
    /**
     * A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauthPartnerCertificateTag>[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    tenancyOcid?: pulumi.Input<string>;
    /**
     * Base 64Key data attribute
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    x509base64certificate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DomainsOauthPartnerCertificate resource.
 */
export interface DomainsOauthPartnerCertificateArgs {
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * Certificate alias
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: true
     * * caseExact: false
     * * mutability: readWrite
     * * returned: always
     * * uniqueness: none
     * * idcsSearchable: true
     */
    certificateAlias: pulumi.Input<string>;
    /**
     * An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     */
    externalId?: pulumi.Input<string>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: pulumi.Input<string>;
    /**
     * Key store ID
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: true
     * * returned: never
     * * uniqueness: none
     * * idcsSearchable: true
     */
    keyStoreId?: pulumi.Input<string>;
    /**
     * Key store name
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * returned: always
     * * uniqueness: none
     */
    keyStoreName?: pulumi.Input<string>;
    /**
     * Key store password
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * idcsSensitive: none
     * * required: false
     * * caseExact: true
     * * returned: never
     * * uniqueness: none
     */
    keyStorePassword?: pulumi.Input<string>;
    /**
     * Map
     *
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * caseExact: false
     * * returned: always
     * * uniqueness: none
     */
    map?: pulumi.Input<string>;
    /**
     * Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    ocid?: pulumi.Input<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    schemas: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsOauthPartnerCertificateTag>[]>;
    /**
     * Base 64Key data attribute
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    x509base64certificate?: pulumi.Input<string>;
}
