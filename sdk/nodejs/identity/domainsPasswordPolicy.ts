// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Password Policy resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Create a password policy.
 *
 * ## Import
 *
 * PasswordPolicies can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Identity/domainsPasswordPolicy:DomainsPasswordPolicy test_password_policy "idcsEndpoint/{idcsEndpoint}/passwordPolicies/{passwordPolicyId}"
 * ```
 */
export class DomainsPasswordPolicy extends pulumi.CustomResource {
    /**
     * Get an existing DomainsPasswordPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainsPasswordPolicyState, opts?: pulumi.CustomResourceOptions): DomainsPasswordPolicy {
        return new DomainsPasswordPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/domainsPasswordPolicy:DomainsPasswordPolicy';

    /**
     * Returns true if the given object is an instance of DomainsPasswordPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainsPasswordPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainsPasswordPolicy.__pulumiType;
    }

    /**
     * (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly allowedChars!: pulumi.Output<string>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    public readonly attributeSets!: pulumi.Output<string[] | undefined>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    public readonly attributes!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    public readonly authorization!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly compartmentOcid!: pulumi.Output<string>;
    /**
     * (Updatable) List of password policy rules that have values set. This map of stringKey:stringValue pairs can be used to aid users while setting/resetting password
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [key]
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    public /*out*/ readonly configuredPasswordPolicyRules!: pulumi.Output<outputs.Identity.DomainsPasswordPolicyConfiguredPasswordPolicyRule[]>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    public /*out*/ readonly deleteInProgress!: pulumi.Output<boolean>;
    /**
     * (Updatable) A String that describes the password policy
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) A delimiter used to separate characters in the dictionary file
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly dictionaryDelimiter!: pulumi.Output<string>;
    /**
     * (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly dictionaryLocation!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates whether the password can match a dictionary word
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    public readonly dictionaryWordDisallowed!: pulumi.Output<boolean>;
    /**
     * (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly disallowedChars!: pulumi.Output<string>;
    /**
     * (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly disallowedSubstrings!: pulumi.Output<string[]>;
    /**
     * (Updatable) List of User attributes whose values are not allowed in the password.
     *
     * **Added In:** 2303212224
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly disallowedUserAttributeValues!: pulumi.Output<string[]>;
    /**
     * (Updatable) The number of distinct characters between old password and new password
     *
     * **Added In:** 2303212224
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly distinctCharacters!: pulumi.Output<number>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly domainOcid!: pulumi.Output<string>;
    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly externalId!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    public readonly firstNameDisallowed!: pulumi.Output<boolean>;
    /**
     * (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: writeOnly
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     */
    public readonly forcePasswordReset!: pulumi.Output<boolean>;
    /**
     * (Updatable) A list of groups that the password policy belongs to.
     *
     * **Added In:** 20.1.3
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     */
    public readonly groups!: pulumi.Output<outputs.Identity.DomainsPasswordPolicyGroup[]>;
    /**
     * (Updatable) The User or App who created the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     */
    public /*out*/ readonly idcsCreatedBies!: pulumi.Output<outputs.Identity.DomainsPasswordPolicyIdcsCreatedBy[]>;
    /**
     * The basic endpoint for the identity domain
     */
    public readonly idcsEndpoint!: pulumi.Output<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     */
    public /*out*/ readonly idcsLastModifiedBies!: pulumi.Output<outputs.Identity.DomainsPasswordPolicyIdcsLastModifiedBy[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly idcsLastUpgradedInRelease!: pulumi.Output<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly idcsPreventedOperations!: pulumi.Output<string[]>;
    /**
     * (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    public readonly lastNameDisallowed!: pulumi.Output<boolean>;
    /**
     * (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly lockoutDuration!: pulumi.Output<number>;
    /**
     * (Updatable) An integer that represents the maximum number of failed logins before an account is locked
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly maxIncorrectAttempts!: pulumi.Output<number>;
    /**
     * (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly maxLength!: pulumi.Output<number>;
    /**
     * (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly maxRepeatedChars!: pulumi.Output<number>;
    /**
     * (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly maxSpecialChars!: pulumi.Output<number>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     */
    public /*out*/ readonly metas!: pulumi.Output<outputs.Identity.DomainsPasswordPolicyMeta[]>;
    /**
     * (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minAlphaNumerals!: pulumi.Output<number>;
    /**
     * (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minAlphas!: pulumi.Output<number>;
    /**
     * (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minLength!: pulumi.Output<number>;
    /**
     * (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minLowerCase!: pulumi.Output<number>;
    /**
     * (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minNumerals!: pulumi.Output<number>;
    /**
     * (Updatable) Minimum time after which the user can resubmit the reset password request
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minPasswordAge!: pulumi.Output<number>;
    /**
     * (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minSpecialChars!: pulumi.Output<number>;
    /**
     * (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minUniqueChars!: pulumi.Output<number>;
    /**
     * (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly minUpperCase!: pulumi.Output<number>;
    /**
     * (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: server
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) The number of passwords that will be kept in history that may not be used as a password
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly numPasswordsInHistory!: pulumi.Output<number>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    public readonly ocid!: pulumi.Output<string>;
    /**
     * (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly passwordExpireWarning!: pulumi.Output<number>;
    /**
     * (Updatable) The number of days after which the password expires automatically
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    public readonly passwordExpiresAfter!: pulumi.Output<number>;
    /**
     * (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly passwordStrength!: pulumi.Output<string>;
    /**
     * (Updatable) Password policy priority
     *
     * **Added In:** 20.1.3
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * idcsMinValue: 1
     * * uniqueness: server
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly requiredChars!: pulumi.Output<string>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    public readonly resourceTypeSchemaVersion!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public readonly schemas!: pulumi.Output<string[]>;
    /**
     * (Updatable) Indicates that the password must begin with an alphabetic character
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    public readonly startsWithAlphabet!: pulumi.Output<boolean>;
    /**
     * (Updatable) A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    public readonly tags!: pulumi.Output<outputs.Identity.DomainsPasswordPolicyTag[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    public /*out*/ readonly tenancyOcid!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly userNameDisallowed!: pulumi.Output<boolean>;

    /**
     * Create a DomainsPasswordPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainsPasswordPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainsPasswordPolicyArgs | DomainsPasswordPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainsPasswordPolicyState | undefined;
            resourceInputs["allowedChars"] = state ? state.allowedChars : undefined;
            resourceInputs["attributeSets"] = state ? state.attributeSets : undefined;
            resourceInputs["attributes"] = state ? state.attributes : undefined;
            resourceInputs["authorization"] = state ? state.authorization : undefined;
            resourceInputs["compartmentOcid"] = state ? state.compartmentOcid : undefined;
            resourceInputs["configuredPasswordPolicyRules"] = state ? state.configuredPasswordPolicyRules : undefined;
            resourceInputs["deleteInProgress"] = state ? state.deleteInProgress : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dictionaryDelimiter"] = state ? state.dictionaryDelimiter : undefined;
            resourceInputs["dictionaryLocation"] = state ? state.dictionaryLocation : undefined;
            resourceInputs["dictionaryWordDisallowed"] = state ? state.dictionaryWordDisallowed : undefined;
            resourceInputs["disallowedChars"] = state ? state.disallowedChars : undefined;
            resourceInputs["disallowedSubstrings"] = state ? state.disallowedSubstrings : undefined;
            resourceInputs["disallowedUserAttributeValues"] = state ? state.disallowedUserAttributeValues : undefined;
            resourceInputs["distinctCharacters"] = state ? state.distinctCharacters : undefined;
            resourceInputs["domainOcid"] = state ? state.domainOcid : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["firstNameDisallowed"] = state ? state.firstNameDisallowed : undefined;
            resourceInputs["forcePasswordReset"] = state ? state.forcePasswordReset : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["idcsCreatedBies"] = state ? state.idcsCreatedBies : undefined;
            resourceInputs["idcsEndpoint"] = state ? state.idcsEndpoint : undefined;
            resourceInputs["idcsLastModifiedBies"] = state ? state.idcsLastModifiedBies : undefined;
            resourceInputs["idcsLastUpgradedInRelease"] = state ? state.idcsLastUpgradedInRelease : undefined;
            resourceInputs["idcsPreventedOperations"] = state ? state.idcsPreventedOperations : undefined;
            resourceInputs["lastNameDisallowed"] = state ? state.lastNameDisallowed : undefined;
            resourceInputs["lockoutDuration"] = state ? state.lockoutDuration : undefined;
            resourceInputs["maxIncorrectAttempts"] = state ? state.maxIncorrectAttempts : undefined;
            resourceInputs["maxLength"] = state ? state.maxLength : undefined;
            resourceInputs["maxRepeatedChars"] = state ? state.maxRepeatedChars : undefined;
            resourceInputs["maxSpecialChars"] = state ? state.maxSpecialChars : undefined;
            resourceInputs["metas"] = state ? state.metas : undefined;
            resourceInputs["minAlphaNumerals"] = state ? state.minAlphaNumerals : undefined;
            resourceInputs["minAlphas"] = state ? state.minAlphas : undefined;
            resourceInputs["minLength"] = state ? state.minLength : undefined;
            resourceInputs["minLowerCase"] = state ? state.minLowerCase : undefined;
            resourceInputs["minNumerals"] = state ? state.minNumerals : undefined;
            resourceInputs["minPasswordAge"] = state ? state.minPasswordAge : undefined;
            resourceInputs["minSpecialChars"] = state ? state.minSpecialChars : undefined;
            resourceInputs["minUniqueChars"] = state ? state.minUniqueChars : undefined;
            resourceInputs["minUpperCase"] = state ? state.minUpperCase : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["numPasswordsInHistory"] = state ? state.numPasswordsInHistory : undefined;
            resourceInputs["ocid"] = state ? state.ocid : undefined;
            resourceInputs["passwordExpireWarning"] = state ? state.passwordExpireWarning : undefined;
            resourceInputs["passwordExpiresAfter"] = state ? state.passwordExpiresAfter : undefined;
            resourceInputs["passwordStrength"] = state ? state.passwordStrength : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["requiredChars"] = state ? state.requiredChars : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = state ? state.resourceTypeSchemaVersion : undefined;
            resourceInputs["schemas"] = state ? state.schemas : undefined;
            resourceInputs["startsWithAlphabet"] = state ? state.startsWithAlphabet : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tenancyOcid"] = state ? state.tenancyOcid : undefined;
            resourceInputs["userNameDisallowed"] = state ? state.userNameDisallowed : undefined;
        } else {
            const args = argsOrState as DomainsPasswordPolicyArgs | undefined;
            if ((!args || args.idcsEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idcsEndpoint'");
            }
            if ((!args || args.schemas === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schemas'");
            }
            resourceInputs["allowedChars"] = args ? args.allowedChars : undefined;
            resourceInputs["attributeSets"] = args ? args.attributeSets : undefined;
            resourceInputs["attributes"] = args ? args.attributes : undefined;
            resourceInputs["authorization"] = args ? args.authorization : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dictionaryDelimiter"] = args ? args.dictionaryDelimiter : undefined;
            resourceInputs["dictionaryLocation"] = args ? args.dictionaryLocation : undefined;
            resourceInputs["dictionaryWordDisallowed"] = args ? args.dictionaryWordDisallowed : undefined;
            resourceInputs["disallowedChars"] = args ? args.disallowedChars : undefined;
            resourceInputs["disallowedSubstrings"] = args ? args.disallowedSubstrings : undefined;
            resourceInputs["disallowedUserAttributeValues"] = args ? args.disallowedUserAttributeValues : undefined;
            resourceInputs["distinctCharacters"] = args ? args.distinctCharacters : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["firstNameDisallowed"] = args ? args.firstNameDisallowed : undefined;
            resourceInputs["forcePasswordReset"] = args ? args.forcePasswordReset : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["idcsEndpoint"] = args ? args.idcsEndpoint : undefined;
            resourceInputs["lastNameDisallowed"] = args ? args.lastNameDisallowed : undefined;
            resourceInputs["lockoutDuration"] = args ? args.lockoutDuration : undefined;
            resourceInputs["maxIncorrectAttempts"] = args ? args.maxIncorrectAttempts : undefined;
            resourceInputs["maxLength"] = args ? args.maxLength : undefined;
            resourceInputs["maxRepeatedChars"] = args ? args.maxRepeatedChars : undefined;
            resourceInputs["maxSpecialChars"] = args ? args.maxSpecialChars : undefined;
            resourceInputs["minAlphaNumerals"] = args ? args.minAlphaNumerals : undefined;
            resourceInputs["minAlphas"] = args ? args.minAlphas : undefined;
            resourceInputs["minLength"] = args ? args.minLength : undefined;
            resourceInputs["minLowerCase"] = args ? args.minLowerCase : undefined;
            resourceInputs["minNumerals"] = args ? args.minNumerals : undefined;
            resourceInputs["minPasswordAge"] = args ? args.minPasswordAge : undefined;
            resourceInputs["minSpecialChars"] = args ? args.minSpecialChars : undefined;
            resourceInputs["minUniqueChars"] = args ? args.minUniqueChars : undefined;
            resourceInputs["minUpperCase"] = args ? args.minUpperCase : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["numPasswordsInHistory"] = args ? args.numPasswordsInHistory : undefined;
            resourceInputs["ocid"] = args ? args.ocid : undefined;
            resourceInputs["passwordExpireWarning"] = args ? args.passwordExpireWarning : undefined;
            resourceInputs["passwordExpiresAfter"] = args ? args.passwordExpiresAfter : undefined;
            resourceInputs["passwordStrength"] = args?.passwordStrength ? pulumi.secret(args.passwordStrength) : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["requiredChars"] = args ? args.requiredChars : undefined;
            resourceInputs["resourceTypeSchemaVersion"] = args ? args.resourceTypeSchemaVersion : undefined;
            resourceInputs["schemas"] = args ? args.schemas : undefined;
            resourceInputs["startsWithAlphabet"] = args ? args.startsWithAlphabet : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userNameDisallowed"] = args ? args.userNameDisallowed : undefined;
            resourceInputs["compartmentOcid"] = undefined /*out*/;
            resourceInputs["configuredPasswordPolicyRules"] = undefined /*out*/;
            resourceInputs["deleteInProgress"] = undefined /*out*/;
            resourceInputs["domainOcid"] = undefined /*out*/;
            resourceInputs["idcsCreatedBies"] = undefined /*out*/;
            resourceInputs["idcsLastModifiedBies"] = undefined /*out*/;
            resourceInputs["idcsLastUpgradedInRelease"] = undefined /*out*/;
            resourceInputs["idcsPreventedOperations"] = undefined /*out*/;
            resourceInputs["metas"] = undefined /*out*/;
            resourceInputs["tenancyOcid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passwordStrength"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DomainsPasswordPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainsPasswordPolicy resources.
 */
export interface DomainsPasswordPolicyState {
    /**
     * (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    allowedChars?: pulumi.Input<string>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    compartmentOcid?: pulumi.Input<string>;
    /**
     * (Updatable) List of password policy rules that have values set. This map of stringKey:stringValue pairs can be used to aid users while setting/resetting password
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [key]
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    configuredPasswordPolicyRules?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsPasswordPolicyConfiguredPasswordPolicyRule>[]>;
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    deleteInProgress?: pulumi.Input<boolean>;
    /**
     * (Updatable) A String that describes the password policy
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A delimiter used to separate characters in the dictionary file
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    dictionaryDelimiter?: pulumi.Input<string>;
    /**
     * (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    dictionaryLocation?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether the password can match a dictionary word
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    dictionaryWordDisallowed?: pulumi.Input<boolean>;
    /**
     * (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    disallowedChars?: pulumi.Input<string>;
    /**
     * (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    disallowedSubstrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) List of User attributes whose values are not allowed in the password.
     *
     * **Added In:** 2303212224
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    disallowedUserAttributeValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The number of distinct characters between old password and new password
     *
     * **Added In:** 2303212224
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    distinctCharacters?: pulumi.Input<number>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    domainOcid?: pulumi.Input<string>;
    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    externalId?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    firstNameDisallowed?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: writeOnly
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     */
    forcePasswordReset?: pulumi.Input<boolean>;
    /**
     * (Updatable) A list of groups that the password policy belongs to.
     *
     * **Added In:** 20.1.3
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     */
    groups?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsPasswordPolicyGroup>[]>;
    /**
     * (Updatable) The User or App who created the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     */
    idcsCreatedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsPasswordPolicyIdcsCreatedBy>[]>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint?: pulumi.Input<string>;
    /**
     * (Updatable) The User or App who modified the Resource
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     */
    idcsLastModifiedBies?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsPasswordPolicyIdcsLastModifiedBy>[]>;
    /**
     * (Updatable) The release number when the resource was upgraded.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    idcsLastUpgradedInRelease?: pulumi.Input<string>;
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     */
    idcsPreventedOperations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    lastNameDisallowed?: pulumi.Input<boolean>;
    /**
     * (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    lockoutDuration?: pulumi.Input<number>;
    /**
     * (Updatable) An integer that represents the maximum number of failed logins before an account is locked
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    maxIncorrectAttempts?: pulumi.Input<number>;
    /**
     * (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    maxLength?: pulumi.Input<number>;
    /**
     * (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    maxRepeatedChars?: pulumi.Input<number>;
    /**
     * (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    maxSpecialChars?: pulumi.Input<number>;
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     */
    metas?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsPasswordPolicyMeta>[]>;
    /**
     * (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minAlphaNumerals?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minAlphas?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minLength?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minLowerCase?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minNumerals?: pulumi.Input<number>;
    /**
     * (Updatable) Minimum time after which the user can resubmit the reset password request
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minPasswordAge?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minSpecialChars?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minUniqueChars?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minUpperCase?: pulumi.Input<number>;
    /**
     * (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: server
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) The number of passwords that will be kept in history that may not be used as a password
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    numPasswordsInHistory?: pulumi.Input<number>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    ocid?: pulumi.Input<string>;
    /**
     * (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    passwordExpireWarning?: pulumi.Input<number>;
    /**
     * (Updatable) The number of days after which the password expires automatically
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    passwordExpiresAfter?: pulumi.Input<number>;
    /**
     * (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    passwordStrength?: pulumi.Input<string>;
    /**
     * (Updatable) Password policy priority
     *
     * **Added In:** 20.1.3
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * idcsMinValue: 1
     * * uniqueness: server
     */
    priority?: pulumi.Input<number>;
    /**
     * (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    requiredChars?: pulumi.Input<string>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    schemas?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Indicates that the password must begin with an alphabetic character
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    startsWithAlphabet?: pulumi.Input<boolean>;
    /**
     * (Updatable) A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsPasswordPolicyTag>[]>;
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    tenancyOcid?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    userNameDisallowed?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a DomainsPasswordPolicy resource.
 */
export interface DomainsPasswordPolicyArgs {
    /**
     * (Updatable) A String value whose contents indicate a set of characters that can appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    allowedChars?: pulumi.Input<string>;
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * (Updatable) A String that describes the password policy
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A delimiter used to separate characters in the dictionary file
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    dictionaryDelimiter?: pulumi.Input<string>;
    /**
     * (Updatable) A Reference value that contains the URI of a dictionary of words not allowed to appear within a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    dictionaryLocation?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether the password can match a dictionary word
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    dictionaryWordDisallowed?: pulumi.Input<boolean>;
    /**
     * (Updatable) A String value whose contents indicate a set of characters that cannot appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    disallowedChars?: pulumi.Input<string>;
    /**
     * (Updatable) A String value whose contents indicate a set of substrings that cannot appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    disallowedSubstrings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) List of User attributes whose values are not allowed in the password.
     *
     * **Added In:** 2303212224
     *
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    disallowedUserAttributeValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The number of distinct characters between old password and new password
     *
     * **Added In:** 2303212224
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    distinctCharacters?: pulumi.Input<number>;
    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    externalId?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates a sequence of characters that match the user's first name of given name cannot be the password. Password validation against policy will be ignored if length of first name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    firstNameDisallowed?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether all of the users should be forced to reset their password on the next login (to comply with new password policy changes)
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: writeOnly
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     */
    forcePasswordReset?: pulumi.Input<boolean>;
    /**
     * (Updatable) A list of groups that the password policy belongs to.
     *
     * **Added In:** 20.1.3
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     */
    groups?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsPasswordPolicyGroup>[]>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: pulumi.Input<string>;
    /**
     * (Updatable) Indicates a sequence of characters that match the user's last name of given name cannot be the password. Password validation against policy will be ignored if length of last name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    lastNameDisallowed?: pulumi.Input<boolean>;
    /**
     * (Updatable) The time period in minutes to lock out a user account when the threshold of invalid login attempts is reached. The available range is from 5 through 1440 minutes (24 hours).
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    lockoutDuration?: pulumi.Input<number>;
    /**
     * (Updatable) An integer that represents the maximum number of failed logins before an account is locked
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    maxIncorrectAttempts?: pulumi.Input<number>;
    /**
     * (Updatable) The maximum password length (in characters). A value of 0 or no value indicates no maximum length restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    maxLength?: pulumi.Input<number>;
    /**
     * (Updatable) The maximum number of repeated characters allowed in a password.  A value of 0 or no value indicates no such restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    maxRepeatedChars?: pulumi.Input<number>;
    /**
     * (Updatable) The maximum number of special characters in a password.  A value of 0 or no value indicates no maximum special characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    maxSpecialChars?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of a combination of alphabetic and numeric characters in a password.  A value of 0 or no value indicates no minimum alphanumeric character restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minAlphaNumerals?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of alphabetic characters in a password.  A value of 0 or no value indicates no minimum alphas restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minAlphas?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum password length (in characters). A value of 0 or no value indicates no minimum length restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minLength?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of lowercase alphabetic characters in a password.  A value of 0 or no value indicates no minimum lowercase restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minLowerCase?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of numeric characters in a password.  A value of 0 or no value indicates no minimum numeric character restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minNumerals?: pulumi.Input<number>;
    /**
     * (Updatable) Minimum time after which the user can resubmit the reset password request
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minPasswordAge?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of special characters in a password. A value of 0 or no value indicates no minimum special characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minSpecialChars?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of unique characters in a password.  A value of 0 or no value indicates no minimum unique characters restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minUniqueChars?: pulumi.Input<number>;
    /**
     * (Updatable) The minimum number of uppercase alphabetic characters in a password. A value of 0 or no value indicates no minimum uppercase restriction.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    minUpperCase?: pulumi.Input<number>;
    /**
     * (Updatable) A String that is the name of the policy to display to the user. This is the only mandatory attribute for a password policy.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: server
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) The number of passwords that will be kept in history that may not be used as a password
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    numPasswordsInHistory?: pulumi.Input<number>;
    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     *
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     */
    ocid?: pulumi.Input<string>;
    /**
     * (Updatable) An integer indicating the number of days before which the user should be warned about password expiry.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    passwordExpireWarning?: pulumi.Input<number>;
    /**
     * (Updatable) The number of days after which the password expires automatically
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     */
    passwordExpiresAfter?: pulumi.Input<number>;
    /**
     * (Updatable) Indicates whether the password policy is configured as Simple, Standard, or Custom.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    passwordStrength?: pulumi.Input<string>;
    /**
     * (Updatable) Password policy priority
     *
     * **Added In:** 20.1.3
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * idcsMinValue: 1
     * * uniqueness: server
     */
    priority?: pulumi.Input<number>;
    /**
     * (Updatable) A String value whose contents indicate a set of characters that must appear, in any sequence, in a password value
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    requiredChars?: pulumi.Input<string>;
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     */
    schemas: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Indicates that the password must begin with an alphabetic character
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     */
    startsWithAlphabet?: pulumi.Input<boolean>;
    /**
     * (Updatable) A list of tags on this resource.
     *
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Identity.DomainsPasswordPolicyTag>[]>;
    /**
     * (Updatable) Indicates a sequence of characters that match the username cannot be the password. Password validation against policy will be ignored if length of user name is less than or equal to 3 characters.
     *
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    userNameDisallowed?: pulumi.Input<boolean>;
}
