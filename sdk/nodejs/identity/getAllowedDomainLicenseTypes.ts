// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Allowed Domain License Types in Oracle Cloud Infrastructure Identity service.
 *
 * List the allowed domain license types supported by Oracle Cloud Infrastructure If {@code currentLicenseTypeName} provided, returns allowed license types a domain with the specified license type name can migrate to.
 * If {@code name} is provided, it filters and returns resources that match the given license type name.
 * Otherwise, returns all valid license types that are currently supported.
 *
 * - If license type details are retrieved sucessfully, return 202 ACCEPTED.
 * - If any internal error occurs, return 500 INTERNAL SERVER ERROR.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAllowedDomainLicenseTypes = oci.Identity.getAllowedDomainLicenseTypes({
 *     currentLicenseTypeName: allowedDomainLicenseTypeCurrentLicenseTypeName,
 * });
 * ```
 */
export function getAllowedDomainLicenseTypes(args?: GetAllowedDomainLicenseTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetAllowedDomainLicenseTypesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Identity/getAllowedDomainLicenseTypes:getAllowedDomainLicenseTypes", {
        "currentLicenseTypeName": args.currentLicenseTypeName,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getAllowedDomainLicenseTypes.
 */
export interface GetAllowedDomainLicenseTypesArgs {
    /**
     * The domain license type
     */
    currentLicenseTypeName?: string;
    filters?: inputs.Identity.GetAllowedDomainLicenseTypesFilter[];
}

/**
 * A collection of values returned by getAllowedDomainLicenseTypes.
 */
export interface GetAllowedDomainLicenseTypesResult {
    /**
     * The list of allowed_domain_license_types.
     */
    readonly allowedDomainLicenseTypes: outputs.Identity.GetAllowedDomainLicenseTypesAllowedDomainLicenseType[];
    readonly currentLicenseTypeName?: string;
    readonly filters?: outputs.Identity.GetAllowedDomainLicenseTypesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * This data source provides the list of Allowed Domain License Types in Oracle Cloud Infrastructure Identity service.
 *
 * List the allowed domain license types supported by Oracle Cloud Infrastructure If {@code currentLicenseTypeName} provided, returns allowed license types a domain with the specified license type name can migrate to.
 * If {@code name} is provided, it filters and returns resources that match the given license type name.
 * Otherwise, returns all valid license types that are currently supported.
 *
 * - If license type details are retrieved sucessfully, return 202 ACCEPTED.
 * - If any internal error occurs, return 500 INTERNAL SERVER ERROR.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAllowedDomainLicenseTypes = oci.Identity.getAllowedDomainLicenseTypes({
 *     currentLicenseTypeName: allowedDomainLicenseTypeCurrentLicenseTypeName,
 * });
 * ```
 */
export function getAllowedDomainLicenseTypesOutput(args?: GetAllowedDomainLicenseTypesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAllowedDomainLicenseTypesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Identity/getAllowedDomainLicenseTypes:getAllowedDomainLicenseTypes", {
        "currentLicenseTypeName": args.currentLicenseTypeName,
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getAllowedDomainLicenseTypes.
 */
export interface GetAllowedDomainLicenseTypesOutputArgs {
    /**
     * The domain license type
     */
    currentLicenseTypeName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Identity.GetAllowedDomainLicenseTypesFilterArgs>[]>;
}
