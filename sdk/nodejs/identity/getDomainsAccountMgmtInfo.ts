// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Account Mgmt Info resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Get Account Mgmt Info
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAccountMgmtInfo = oci.Identity.getDomainsAccountMgmtInfo({
 *     accountMgmtInfoId: testAccountMgmtInfoOciIdentityDomainsAccountMgmtInfo.id,
 *     idcsEndpoint: testDomain.url,
 *     attributeSets: ["all"],
 *     attributes: "",
 *     authorization: accountMgmtInfoAuthorization,
 *     resourceTypeSchemaVersion: accountMgmtInfoResourceTypeSchemaVersion,
 * });
 * ```
 */
export function getDomainsAccountMgmtInfo(args: GetDomainsAccountMgmtInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainsAccountMgmtInfoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Identity/getDomainsAccountMgmtInfo:getDomainsAccountMgmtInfo", {
        "accountMgmtInfoId": args.accountMgmtInfoId,
        "attributeSets": args.attributeSets,
        "attributes": args.attributes,
        "authorization": args.authorization,
        "idcsEndpoint": args.idcsEndpoint,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainsAccountMgmtInfo.
 */
export interface GetDomainsAccountMgmtInfoArgs {
    /**
     * ID of the resource
     */
    accountMgmtInfoId: string;
    /**
     * A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: string[];
    /**
     * A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: string;
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: string;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: string;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: string;
}

/**
 * A collection of values returned by getDomainsAccountMgmtInfo.
 */
export interface GetDomainsAccountMgmtInfoResult {
    readonly accountMgmtInfoId: string;
    /**
     * Type of Account
     */
    readonly accountType: string;
    /**
     * If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App and only administrative operations can be performed.
     */
    readonly active: boolean;
    /**
     * Application on which the account is based
     */
    readonly apps: outputs.Identity.GetDomainsAccountMgmtInfoApp[];
    readonly attributeSets?: string[];
    readonly attributes?: string;
    readonly authorization?: string;
    /**
     * Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     */
    readonly compartmentOcid: string;
    /**
     * Unique key for this AccountMgmtInfo, which is used to prevent duplicate AccountMgmtInfo resources. Key is composed of a subset of app, owner and accountType.
     */
    readonly compositeKey: string;
    /**
     * A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     */
    readonly deleteInProgress: boolean;
    /**
     * If true, a back-fill grant will not be created for a connected managed app as part of account creation.
     */
    readonly doNotBackFillGrants: boolean;
    /**
     * If true, the operation will not be performed on the target
     */
    readonly doNotPerformActionOnTarget: boolean;
    /**
     * Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     */
    readonly domainOcid: string;
    /**
     * If true, this account has been marked as a favorite of the User who owns it
     */
    readonly favorite: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The User or App who created the Resource
     */
    readonly idcsCreatedBies: outputs.Identity.GetDomainsAccountMgmtInfoIdcsCreatedBy[];
    readonly idcsEndpoint: string;
    /**
     * The User or App who modified the Resource
     */
    readonly idcsLastModifiedBies: outputs.Identity.GetDomainsAccountMgmtInfoIdcsLastModifiedBy[];
    /**
     * The release number when the resource was upgraded.
     */
    readonly idcsLastUpgradedInRelease: string;
    /**
     * Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     */
    readonly idcsPreventedOperations: string[];
    /**
     * If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application
     */
    readonly isAccount: boolean;
    /**
     * Last accessed timestamp of an application
     */
    readonly lastAccessed: string;
    /**
     * Matching owning users of the account
     */
    readonly matchingOwners: outputs.Identity.GetDomainsAccountMgmtInfoMatchingOwner[];
    /**
     * A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     */
    readonly metas: outputs.Identity.GetDomainsAccountMgmtInfoMeta[];
    /**
     * Name of the Account
     */
    readonly name: string;
    /**
     * Object-class of the Account
     */
    readonly objectClasses: outputs.Identity.GetDomainsAccountMgmtInfoObjectClass[];
    /**
     * Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     */
    readonly ocid: string;
    /**
     * The context in which the operation is performed on the account.
     */
    readonly operationContext: string;
    /**
     * Owning user of the account
     */
    readonly owners: outputs.Identity.GetDomainsAccountMgmtInfoOwner[];
    /**
     * If true, then the response to the account creation operation on a connected managed app returns a preview of the account data that is evaluated by the attribute value generation policy. Note that an account will not be created on the target application when this attribute is set to true.
     */
    readonly previewOnly: boolean;
    readonly resourceTypeSchemaVersion?: string;
    /**
     * Resource Type of the Account
     */
    readonly resourceTypes: outputs.Identity.GetDomainsAccountMgmtInfoResourceType[];
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    readonly schemas: string[];
    /**
     * Last recorded sync response for the account
     */
    readonly syncResponse: string;
    /**
     * Last recorded sync situation for the account
     */
    readonly syncSituation: string;
    /**
     * Last sync timestamp of the account
     */
    readonly syncTimestamp: string;
    /**
     * A list of tags on this resource.
     */
    readonly tags: outputs.Identity.GetDomainsAccountMgmtInfoTag[];
    /**
     * Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     */
    readonly tenancyOcid: string;
    /**
     * Unique identifier of the Account
     */
    readonly uid: string;
    /**
     * The UserWalletArtifact that contains the credentials that the system will use when performing Secure Form-Fill to log the user in to this application
     */
    readonly userWalletArtifacts: outputs.Identity.GetDomainsAccountMgmtInfoUserWalletArtifact[];
}
/**
 * This data source provides details about a specific Account Mgmt Info resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Get Account Mgmt Info
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAccountMgmtInfo = oci.Identity.getDomainsAccountMgmtInfo({
 *     accountMgmtInfoId: testAccountMgmtInfoOciIdentityDomainsAccountMgmtInfo.id,
 *     idcsEndpoint: testDomain.url,
 *     attributeSets: ["all"],
 *     attributes: "",
 *     authorization: accountMgmtInfoAuthorization,
 *     resourceTypeSchemaVersion: accountMgmtInfoResourceTypeSchemaVersion,
 * });
 * ```
 */
export function getDomainsAccountMgmtInfoOutput(args: GetDomainsAccountMgmtInfoOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainsAccountMgmtInfoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Identity/getDomainsAccountMgmtInfo:getDomainsAccountMgmtInfo", {
        "accountMgmtInfoId": args.accountMgmtInfoId,
        "attributeSets": args.attributeSets,
        "attributes": args.attributes,
        "authorization": args.authorization,
        "idcsEndpoint": args.idcsEndpoint,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainsAccountMgmtInfo.
 */
export interface GetDomainsAccountMgmtInfoOutputArgs {
    /**
     * ID of the resource
     */
    accountMgmtInfoId: pulumi.Input<string>;
    /**
     * A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If 'attributes' query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     */
    attributeSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     */
    attributes?: pulumi.Input<string>;
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: pulumi.Input<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
}
