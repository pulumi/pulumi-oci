// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific My Completed Approval resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Get My MyCompletedApproval
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMyCompletedApproval = oci.Identity.getDomainsMyCompletedApproval({
 *     idcsEndpoint: testDomain.url,
 *     myCompletedApprovalId: testMyCompletedApprovalOciIdentityDomainsMyCompletedApproval.id,
 *     authorization: myCompletedApprovalAuthorization,
 *     resourceTypeSchemaVersion: myCompletedApprovalResourceTypeSchemaVersion,
 * });
 * ```
 */
export function getDomainsMyCompletedApproval(args: GetDomainsMyCompletedApprovalArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainsMyCompletedApprovalResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Identity/getDomainsMyCompletedApproval:getDomainsMyCompletedApproval", {
        "authorization": args.authorization,
        "idcsEndpoint": args.idcsEndpoint,
        "myCompletedApprovalId": args.myCompletedApprovalId,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainsMyCompletedApproval.
 */
export interface GetDomainsMyCompletedApprovalArgs {
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: string;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: string;
    /**
     * ID of the resource
     */
    myCompletedApprovalId: string;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: string;
}

/**
 * A collection of values returned by getDomainsMyCompletedApproval.
 */
export interface GetDomainsMyCompletedApprovalResult {
    readonly authorization?: string;
    /**
     * Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     */
    readonly compartmentOcid: string;
    /**
     * A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     */
    readonly deleteInProgress: boolean;
    /**
     * Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     */
    readonly domainOcid: string;
    /**
     * Time by when ApprovalWorkflowInstance expires
     */
    readonly expires: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The User or App who created the Resource
     */
    readonly idcsCreatedBies: outputs.Identity.GetDomainsMyCompletedApprovalIdcsCreatedBy[];
    readonly idcsEndpoint: string;
    /**
     * The User or App who modified the Resource
     */
    readonly idcsLastModifiedBies: outputs.Identity.GetDomainsMyCompletedApprovalIdcsLastModifiedBy[];
    /**
     * The release number when the resource was upgraded.
     */
    readonly idcsLastUpgradedInRelease: string;
    /**
     * Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     */
    readonly idcsPreventedOperations: string[];
    /**
     * Justification for approval
     */
    readonly justification: string;
    /**
     * A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     */
    readonly metas: outputs.Identity.GetDomainsMyCompletedApprovalMeta[];
    readonly myCompletedApprovalId: string;
    /**
     * Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     */
    readonly ocid: string;
    /**
     * The time that the Request was created
     */
    readonly requestCreatedTime: string;
    /**
     * Request Details
     */
    readonly requestDetails: string;
    /**
     * The Unique Identifier of the request.
     */
    readonly requestId: string;
    /**
     * The Oracle Cloud Infrastructure Unique Identifier of the request.
     */
    readonly requestOcid: string;
    /**
     * Requested Resource display name
     */
    readonly resourceDisplayName: string;
    /**
     * Requested Resource type
     */
    readonly resourceType: string;
    readonly resourceTypeSchemaVersion?: string;
    /**
     * The time that the user responded to the Approval
     */
    readonly responseTime: string;
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    readonly schemas: string[];
    /**
     * Status of the approver's response on the approval
     */
    readonly status: string;
    /**
     * A list of tags on this resource.
     */
    readonly tags: outputs.Identity.GetDomainsMyCompletedApprovalTag[];
    /**
     * Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     */
    readonly tenancyOcid: string;
}
/**
 * This data source provides details about a specific My Completed Approval resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Get My MyCompletedApproval
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMyCompletedApproval = oci.Identity.getDomainsMyCompletedApproval({
 *     idcsEndpoint: testDomain.url,
 *     myCompletedApprovalId: testMyCompletedApprovalOciIdentityDomainsMyCompletedApproval.id,
 *     authorization: myCompletedApprovalAuthorization,
 *     resourceTypeSchemaVersion: myCompletedApprovalResourceTypeSchemaVersion,
 * });
 * ```
 */
export function getDomainsMyCompletedApprovalOutput(args: GetDomainsMyCompletedApprovalOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDomainsMyCompletedApprovalResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Identity/getDomainsMyCompletedApproval:getDomainsMyCompletedApproval", {
        "authorization": args.authorization,
        "idcsEndpoint": args.idcsEndpoint,
        "myCompletedApprovalId": args.myCompletedApprovalId,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainsMyCompletedApproval.
 */
export interface GetDomainsMyCompletedApprovalOutputArgs {
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: pulumi.Input<string>;
    /**
     * ID of the resource
     */
    myCompletedApprovalId: pulumi.Input<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
}
