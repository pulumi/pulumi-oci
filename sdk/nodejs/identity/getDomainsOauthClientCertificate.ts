// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific O Auth Client Certificate resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Get OAuth Client Certificates
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOauthClientCertificate = oci.Identity.getDomainsOauthClientCertificate({
 *     idcsEndpoint: data.oci_identity_domain.test_domain.url,
 *     oAuthClientCertificateId: oci_apigateway_certificate.test_certificate.id,
 *     authorization: _var.oauth_client_certificate_authorization,
 *     resourceTypeSchemaVersion: _var.oauth_client_certificate_resource_type_schema_version,
 * });
 * ```
 */
export function getDomainsOauthClientCertificate(args: GetDomainsOauthClientCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainsOauthClientCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Identity/getDomainsOauthClientCertificate:getDomainsOauthClientCertificate", {
        "authorization": args.authorization,
        "idcsEndpoint": args.idcsEndpoint,
        "oAuthClientCertificateId": args.oAuthClientCertificateId,
        "resourceTypeSchemaVersion": args.resourceTypeSchemaVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomainsOauthClientCertificate.
 */
export interface GetDomainsOauthClientCertificateArgs {
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: string;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: string;
    /**
     * ID of the resource
     */
    oAuthClientCertificateId: string;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: string;
}

/**
 * A collection of values returned by getDomainsOauthClientCertificate.
 */
export interface GetDomainsOauthClientCertificateResult {
    readonly authorization?: string;
    /**
     * Certificate end date
     */
    readonly certEndDate: string;
    /**
     * Certificate start date
     */
    readonly certStartDate: string;
    /**
     * Certificate alias
     */
    readonly certificateAlias: string;
    /**
     * Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     */
    readonly compartmentOcid: string;
    /**
     * A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     */
    readonly deleteInProgress: boolean;
    /**
     * Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     */
    readonly domainOcid: string;
    /**
     * An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
     */
    readonly externalId: string;
    /**
     * Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     */
    readonly id: string;
    /**
     * The User or App who created the Resource
     */
    readonly idcsCreatedBies: outputs.Identity.GetDomainsOauthClientCertificateIdcsCreatedBy[];
    readonly idcsEndpoint: string;
    /**
     * The User or App who modified the Resource
     */
    readonly idcsLastModifiedBies: outputs.Identity.GetDomainsOauthClientCertificateIdcsLastModifiedBy[];
    /**
     * The release number when the resource was upgraded.
     */
    readonly idcsLastUpgradedInRelease: string;
    /**
     * Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     */
    readonly idcsPreventedOperations: string[];
    /**
     * Key store ID
     */
    readonly keyStoreId: string;
    /**
     * Key store name
     */
    readonly keyStoreName: string;
    /**
     * Key store password
     */
    readonly keyStorePassword: string;
    /**
     * Map
     */
    readonly map: string;
    /**
     * A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     */
    readonly metas: outputs.Identity.GetDomainsOauthClientCertificateMeta[];
    readonly oAuthClientCertificateId: string;
    /**
     * Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     */
    readonly ocid: string;
    readonly resourceTypeSchemaVersion?: string;
    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \"enterprise\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     */
    readonly schemas: string[];
    /**
     * SHA-1 Thumbprint
     */
    readonly sha1thumbprint: string;
    /**
     * SHA-256 Thumbprint
     */
    readonly sha256thumbprint: string;
    /**
     * A list of tags on this resource.
     */
    readonly tags: outputs.Identity.GetDomainsOauthClientCertificateTag[];
    /**
     * Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     */
    readonly tenancyOcid: string;
    /**
     * Base 64Key data attribute
     */
    readonly x509base64certificate: string;
}
/**
 * This data source provides details about a specific O Auth Client Certificate resource in Oracle Cloud Infrastructure Identity Domains service.
 *
 * Get OAuth Client Certificates
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOauthClientCertificate = oci.Identity.getDomainsOauthClientCertificate({
 *     idcsEndpoint: data.oci_identity_domain.test_domain.url,
 *     oAuthClientCertificateId: oci_apigateway_certificate.test_certificate.id,
 *     authorization: _var.oauth_client_certificate_authorization,
 *     resourceTypeSchemaVersion: _var.oauth_client_certificate_resource_type_schema_version,
 * });
 * ```
 */
export function getDomainsOauthClientCertificateOutput(args: GetDomainsOauthClientCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainsOauthClientCertificateResult> {
    return pulumi.output(args).apply((a: any) => getDomainsOauthClientCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getDomainsOauthClientCertificate.
 */
export interface GetDomainsOauthClientCertificateOutputArgs {
    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     */
    authorization?: pulumi.Input<string>;
    /**
     * The basic endpoint for the identity domain
     */
    idcsEndpoint: pulumi.Input<string>;
    /**
     * ID of the resource
     */
    oAuthClientCertificateId: pulumi.Input<string>;
    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     */
    resourceTypeSchemaVersion?: pulumi.Input<string>;
}
