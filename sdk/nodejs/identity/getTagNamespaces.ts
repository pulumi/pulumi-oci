// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Tag Namespaces in Oracle Cloud Infrastructure Identity service.
 *
 * Lists the tag namespaces in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTagNamespaces = oci.Identity.getTagNamespaces({
 *     compartmentId: compartmentId,
 *     includeSubcompartments: tagNamespaceIncludeSubcompartments,
 *     state: tagNamespaceState,
 * });
 * ```
 */
export function getTagNamespaces(args: GetTagNamespacesArgs, opts?: pulumi.InvokeOptions): Promise<GetTagNamespacesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Identity/getTagNamespaces:getTagNamespaces", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "includeSubcompartments": args.includeSubcompartments,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getTagNamespaces.
 */
export interface GetTagNamespacesArgs {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    filters?: inputs.Identity.GetTagNamespacesFilter[];
    /**
     * An optional boolean parameter indicating whether to retrieve all tag namespaces in subcompartments. If this parameter is not specified, only the tag namespaces defined in the specified compartment are retrieved.
     */
    includeSubcompartments?: boolean;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getTagNamespaces.
 */
export interface GetTagNamespacesResult {
    /**
     * The OCID of the compartment that contains the tag namespace.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.Identity.GetTagNamespacesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeSubcompartments?: boolean;
    /**
     * The tagnamespace's current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
     */
    readonly state?: string;
    /**
     * The list of tag_namespaces.
     */
    readonly tagNamespaces: outputs.Identity.GetTagNamespacesTagNamespace[];
}
/**
 * This data source provides the list of Tag Namespaces in Oracle Cloud Infrastructure Identity service.
 *
 * Lists the tag namespaces in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTagNamespaces = oci.Identity.getTagNamespaces({
 *     compartmentId: compartmentId,
 *     includeSubcompartments: tagNamespaceIncludeSubcompartments,
 *     state: tagNamespaceState,
 * });
 * ```
 */
export function getTagNamespacesOutput(args: GetTagNamespacesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTagNamespacesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Identity/getTagNamespaces:getTagNamespaces", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "includeSubcompartments": args.includeSubcompartments,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getTagNamespaces.
 */
export interface GetTagNamespacesOutputArgs {
    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Identity.GetTagNamespacesFilterArgs>[]>;
    /**
     * An optional boolean parameter indicating whether to retrieve all tag namespaces in subcompartments. If this parameter is not specified, only the tag namespaces defined in the specified compartment are retrieved.
     */
    includeSubcompartments?: pulumi.Input<boolean>;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
