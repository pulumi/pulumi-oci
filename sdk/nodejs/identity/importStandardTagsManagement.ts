// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Import Standard Tags Management resource in Oracle Cloud Infrastructure Identity service.
 *
 * OCI will release Tag Namespaces that our customers can import.
 * These Tag Namespaces will provide Tags for our customers and Partners to provide consistency and enable data reporting.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testImportStandardTagsManagement = new oci.identity.ImportStandardTagsManagement("testImportStandardTagsManagement", {
 *     compartmentId: _var.compartment_id,
 *     standardTagNamespaceName: oci_identity_tag_namespace.test_tag_namespace.name,
 * });
 * ```
 *
 * ## Import
 *
 * ImportStandardTagsManagement can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Identity/importStandardTagsManagement:ImportStandardTagsManagement test_import_standard_tags_management "id"
 * ```
 */
export class ImportStandardTagsManagement extends pulumi.CustomResource {
    /**
     * Get an existing ImportStandardTagsManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImportStandardTagsManagementState, opts?: pulumi.CustomResourceOptions): ImportStandardTagsManagement {
        return new ImportStandardTagsManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/importStandardTagsManagement:ImportStandardTagsManagement';

    /**
     * Returns true if the given object is an instance of ImportStandardTagsManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ImportStandardTagsManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImportStandardTagsManagement.__pulumiType;
    }

    /**
     * The OCID of the compartment where the bulk create request is submitted and where the tag namespaces will be created.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * The name of standard tag namespace that will be imported in bulk 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly standardTagNamespaceName!: pulumi.Output<string>;
    public /*out*/ readonly workRequestId!: pulumi.Output<string>;

    /**
     * Create a ImportStandardTagsManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImportStandardTagsManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ImportStandardTagsManagementArgs | ImportStandardTagsManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ImportStandardTagsManagementState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["standardTagNamespaceName"] = state ? state.standardTagNamespaceName : undefined;
            resourceInputs["workRequestId"] = state ? state.workRequestId : undefined;
        } else {
            const args = argsOrState as ImportStandardTagsManagementArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.standardTagNamespaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'standardTagNamespaceName'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["standardTagNamespaceName"] = args ? args.standardTagNamespaceName : undefined;
            resourceInputs["workRequestId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ImportStandardTagsManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ImportStandardTagsManagement resources.
 */
export interface ImportStandardTagsManagementState {
    /**
     * The OCID of the compartment where the bulk create request is submitted and where the tag namespaces will be created.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The name of standard tag namespace that will be imported in bulk 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    standardTagNamespaceName?: pulumi.Input<string>;
    workRequestId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ImportStandardTagsManagement resource.
 */
export interface ImportStandardTagsManagementArgs {
    /**
     * The OCID of the compartment where the bulk create request is submitted and where the tag namespaces will be created.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The name of standard tag namespace that will be imported in bulk 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    standardTagNamespaceName: pulumi.Input<string>;
}
