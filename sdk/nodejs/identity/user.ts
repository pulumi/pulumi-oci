// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the User resource in Oracle Cloud Infrastructure Identity service.
 *
 * Creates a new user in your tenancy. For conceptual information about users, your tenancy, and other
 * IAM Service components, see [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
 *
 * You must specify your tenancy's OCID as the compartment ID in the request object (remember that the
 * tenancy is simply the root compartment). Notice that IAM resources (users, groups, compartments, and
 * some policies) reside within the tenancy itself, unlike cloud resources such as compute instances,
 * which typically reside within compartments inside the tenancy. For information about OCIDs, see
 * [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
 *
 * You must also specify a *name* for the user, which must be unique across all users in your tenancy
 * and cannot be changed. Allowed characters: No spaces. Only letters, numerals, hyphens, periods,
 * underscores, +, and @. If you specify a name that's already in use, you'll get a 409 error.
 * This name will be the user's login to the Console. You might want to pick a
 * name that your company's own identity system (e.g., Active Directory, LDAP, etc.) already uses.
 * If you delete a user and then create a new user with the same name, they'll be considered different
 * users because they have different OCIDs.
 *
 * You must also specify a *description* for the user (although it can be an empty string).
 * It does not have to be unique, and you can change it anytime with
 * [UpdateUser](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/User/UpdateUser). You can use the field to provide the user's
 * full name, a description, a nickname, or other information to generally identify the user.
 * A new user has no permissions until you place the user in one or more groups (see
 * [AddUserToGroup](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/UserGroupMembership/AddUserToGroup)). If the user needs to
 * access the Console, you need to provide the user a password (see
 * [CreateOrResetUIPassword](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/UIPassword/CreateOrResetUIPassword)).
 * If the user needs to access the Oracle Cloud Infrastructure REST API, you need to upload a
 * public API signing key for that user (see
 * [Required Keys and OCIDs](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/apisigningkey.htm) and also
 * [UploadApiKey](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/ApiKey/UploadApiKey)).
 *
 * **Important:** Make sure to inform the new user which compartment(s) they have access to.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUser = new oci.identity.User("testUser", {
 *     compartmentId: _var.tenancy_ocid,
 *     description: _var.user_description,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     email: _var.user_email,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Users can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Identity/user:User test_user "id"
 * ```
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * Properties indicating how the user is allowed to authenticate.
     */
    public /*out*/ readonly capabilities!: pulumi.Output<outputs.Identity.UserCapability[] | undefined>;
    /**
     * The OCID of the tenancy containing the user.
     */
    public readonly compartmentId!: pulumi.Output<string | undefined>;
    /**
     * DB username of the DB credential. Has to be unique across the tenancy.
     */
    public /*out*/ readonly dbUserName!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * (Updatable) The description you assign to the user during creation. Does not have to be unique, and it's changeable.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The email you assign to the user. Has to be unique across the tenancy.
     */
    public readonly email!: pulumi.Output<string | undefined>;
    /**
     * Whether the email address has been validated.
     */
    public /*out*/ readonly emailVerified!: pulumi.Output<boolean | undefined>;
    /**
     * Identifier of the user in the identity provider
     */
    public /*out*/ readonly externalIdentifier!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The OCID of the `IdentityProvider` this user belongs to.
     */
    public /*out*/ readonly identityProviderId!: pulumi.Output<string | undefined>;
    /**
     * Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
     * * bit 0: SUSPENDED (reserved for future use)
     * * bit 1: DISABLED (reserved for future use)
     * * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
     */
    public /*out*/ readonly inactiveState!: pulumi.Output<string | undefined>;
    /**
     * The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
     */
    public /*out*/ readonly lastSuccessfulLoginTime!: pulumi.Output<string | undefined>;
    /**
     * The name you assign to the user during creation. This is the user's login for the Console. The name must be unique across all users in the tenancy and cannot be changed. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
     */
    public /*out*/ readonly previousSuccessfulLoginTime!: pulumi.Output<string | undefined>;
    /**
     * The user's current state.
     */
    public /*out*/ readonly state!: pulumi.Output<string | undefined>;
    /**
     * Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string | undefined>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["capabilities"] = state ? state.capabilities : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["dbUserName"] = state ? state.dbUserName : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["emailVerified"] = state ? state.emailVerified : undefined;
            resourceInputs["externalIdentifier"] = state ? state.externalIdentifier : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["identityProviderId"] = state ? state.identityProviderId : undefined;
            resourceInputs["inactiveState"] = state ? state.inactiveState : undefined;
            resourceInputs["lastSuccessfulLoginTime"] = state ? state.lastSuccessfulLoginTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["previousSuccessfulLoginTime"] = state ? state.previousSuccessfulLoginTime : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["capabilities"] = undefined /*out*/;
            resourceInputs["dbUserName"] = undefined /*out*/;
            resourceInputs["emailVerified"] = undefined /*out*/;
            resourceInputs["externalIdentifier"] = undefined /*out*/;
            resourceInputs["identityProviderId"] = undefined /*out*/;
            resourceInputs["inactiveState"] = undefined /*out*/;
            resourceInputs["lastSuccessfulLoginTime"] = undefined /*out*/;
            resourceInputs["previousSuccessfulLoginTime"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * Properties indicating how the user is allowed to authenticate.
     */
    capabilities?: pulumi.Input<pulumi.Input<inputs.Identity.UserCapability>[]>;
    /**
     * The OCID of the tenancy containing the user.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * DB username of the DB credential. Has to be unique across the tenancy.
     */
    dbUserName?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The description you assign to the user during creation. Does not have to be unique, and it's changeable.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The email you assign to the user. Has to be unique across the tenancy.
     */
    email?: pulumi.Input<string>;
    /**
     * Whether the email address has been validated.
     */
    emailVerified?: pulumi.Input<boolean>;
    /**
     * Identifier of the user in the identity provider
     */
    externalIdentifier?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The OCID of the `IdentityProvider` this user belongs to.
     */
    identityProviderId?: pulumi.Input<string>;
    /**
     * Returned only if the user's `lifecycleState` is INACTIVE. A 16-bit value showing the reason why the user is inactive:
     * * bit 0: SUSPENDED (reserved for future use)
     * * bit 1: DISABLED (reserved for future use)
     * * bit 2: BLOCKED (the user has exceeded the maximum number of failed login attempts for the Console)
     */
    inactiveState?: pulumi.Input<string>;
    /**
     * The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
     */
    lastSuccessfulLoginTime?: pulumi.Input<string>;
    /**
     * The name you assign to the user during creation. This is the user's login for the Console. The name must be unique across all users in the tenancy and cannot be changed. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    name?: pulumi.Input<string>;
    /**
     * The date and time of when the user most recently logged in the format defined by RFC3339 (ex. `2016-08-25T21:10:29.600Z`). If there is no login history, this field is null.
     */
    previousSuccessfulLoginTime?: pulumi.Input<string>;
    /**
     * The user's current state.
     */
    state?: pulumi.Input<string>;
    /**
     * Date and time the user was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The OCID of the tenancy containing the user.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The description you assign to the user during creation. Does not have to be unique, and it's changeable.
     */
    description: pulumi.Input<string>;
    /**
     * (Updatable) The email you assign to the user. Has to be unique across the tenancy.
     */
    email?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The name you assign to the user during creation. This is the user's login for the Console. The name must be unique across all users in the tenancy and cannot be changed. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    name?: pulumi.Input<string>;
}
