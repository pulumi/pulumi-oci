// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the User Group Membership resource in Oracle Cloud Infrastructure Identity service.
 *
 * Adds the specified user to the specified group and returns a `UserGroupMembership` object with its own OCID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUserGroupMembership = new oci.identity.UserGroupMembership("test_user_group_membership", {
 *     groupId: testGroup.id,
 *     userId: testUser.id,
 * });
 * ```
 *
 * ## Import
 *
 * UserGroupMemberships can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Identity/userGroupMembership:UserGroupMembership test_user_group_membership "id"
 * ```
 */
export class UserGroupMembership extends pulumi.CustomResource {
    /**
     * Get an existing UserGroupMembership resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserGroupMembershipState, opts?: pulumi.CustomResourceOptions): UserGroupMembership {
        return new UserGroupMembership(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Identity/userGroupMembership:UserGroupMembership';

    /**
     * Returns true if the given object is an instance of UserGroupMembership.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserGroupMembership {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserGroupMembership.__pulumiType;
    }

    /**
     * The OCID of the tenancy containing the user, group, and membership object.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * The OCID of the group.
     */
    declare public readonly groupId: pulumi.Output<string>;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    declare public /*out*/ readonly inactiveState: pulumi.Output<string>;
    /**
     * The membership's current state.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The OCID of the user.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly userId: pulumi.Output<string>;

    /**
     * Create a UserGroupMembership resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserGroupMembershipArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserGroupMembershipArgs | UserGroupMembershipState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserGroupMembershipState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["groupId"] = state?.groupId;
            resourceInputs["inactiveState"] = state?.inactiveState;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["userId"] = state?.userId;
        } else {
            const args = argsOrState as UserGroupMembershipArgs | undefined;
            if (args?.groupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if (args?.userId === undefined && !opts.urn) {
                throw new Error("Missing required property 'userId'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["groupId"] = args?.groupId;
            resourceInputs["userId"] = args?.userId;
            resourceInputs["inactiveState"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserGroupMembership.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserGroupMembership resources.
 */
export interface UserGroupMembershipState {
    /**
     * The OCID of the tenancy containing the user, group, and membership object.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The OCID of the group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The detailed status of INACTIVE lifecycleState.
     */
    inactiveState?: pulumi.Input<string>;
    /**
     * The membership's current state.
     */
    state?: pulumi.Input<string>;
    /**
     * Date and time the membership was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The OCID of the user.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    userId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UserGroupMembership resource.
 */
export interface UserGroupMembershipArgs {
    /**
     * The OCID of the tenancy containing the user, group, and membership object.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The OCID of the group.
     */
    groupId: pulumi.Input<string>;
    /**
     * The OCID of the user.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    userId: pulumi.Input<string>;
}
