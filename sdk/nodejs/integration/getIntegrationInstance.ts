// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Integration Instance resource in Oracle Cloud Infrastructure Integration service.
 *
 * Gets a IntegrationInstance by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIntegrationInstance = oci.Integration.getIntegrationInstance({
 *     integrationInstanceId: testIntegrationInstanceOciIntegrationIntegrationInstance.id,
 * });
 * ```
 */
export function getIntegrationInstance(args: GetIntegrationInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Integration/getIntegrationInstance:getIntegrationInstance", {
        "integrationInstanceId": args.integrationInstanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIntegrationInstance.
 */
export interface GetIntegrationInstanceArgs {
    /**
     * Unique Integration Instance identifier.
     */
    integrationInstanceId: string;
}

/**
 * A collection of values returned by getIntegrationInstance.
 */
export interface GetIntegrationInstanceResult {
    /**
     * A list of alternate custom endpoints used for the integration instance URL.
     */
    readonly alternateCustomEndpoints: outputs.Integration.GetIntegrationInstanceAlternateCustomEndpoint[];
    /**
     * A list of associated attachments to other services
     */
    readonly attachments: outputs.Integration.GetIntegrationInstanceAttachment[];
    /**
     * Compartment Identifier.
     */
    readonly compartmentId: string;
    /**
     * The entitlement used for billing purposes.
     */
    readonly consumptionModel: string;
    /**
     * Details for a custom endpoint for the integration instance.
     */
    readonly customEndpoints: outputs.Integration.GetIntegrationInstanceCustomEndpoint[];
    /**
     * Data retention period set for given integration instance
     */
    readonly dataRetentionPeriod: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Disaster recovery details for the integration instance created in the region.
     */
    readonly disasterRecoveryDetails: outputs.Integration.GetIntegrationInstanceDisasterRecoveryDetail[];
    /**
     * Integration Instance Identifier, can be renamed.
     */
    readonly displayName: string;
    readonly domainId: string;
    readonly enableProcessAutomationTrigger: number;
    readonly extendDataRetentionTrigger: number;
    readonly failoverTrigger: number;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The Virtual Cloud Network OCID.
     */
    readonly id: string;
    readonly idcsAt: string;
    /**
     * Information for IDCS access
     */
    readonly idcsInfos: outputs.Integration.GetIntegrationInstanceIdcsInfo[];
    readonly instanceDesignTimeUrl: string;
    /**
     * The Integration Instance URL.
     */
    readonly instanceUrl: string;
    readonly integrationInstanceId: string;
    /**
     * Standard or Enterprise type, Oracle Integration Generation 2 uses ENTERPRISE and STANDARD, Oracle Integration 3 uses ENTERPRISEX and STANDARDX
     */
    readonly integrationInstanceType: string;
    /**
     * Bring your own license.
     */
    readonly isByol: boolean;
    /**
     * Is Disaster Recovery enabled for the integrationInstance
     */
    readonly isDisasterRecoveryEnabled: boolean;
    /**
     * The file server is enabled or not.
     */
    readonly isFileServerEnabled: boolean;
    /**
     * Visual Builder is enabled or not.
     */
    readonly isVisualBuilderEnabled: boolean;
    /**
     * Additional details of lifecycleState or substates
     */
    readonly lifecycleDetails: string;
    /**
     * The number of configured message packs (if any)
     */
    readonly messagePacks: number;
    /**
     * Base representation of a network endpoint.
     */
    readonly networkEndpointDetails: outputs.Integration.GetIntegrationInstanceNetworkEndpointDetail[];
    /**
     * Base representation for Outbound Connection (Reverse Connection).
     */
    readonly privateEndpointOutboundConnections: outputs.Integration.GetIntegrationInstancePrivateEndpointOutboundConnection[];
    /**
     * Shape
     */
    readonly shape: string;
    /**
     * The current state of the integration instance.
     */
    readonly state: string;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly stateMessage: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Integration Instance resource in Oracle Cloud Infrastructure Integration service.
 *
 * Gets a IntegrationInstance by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIntegrationInstance = oci.Integration.getIntegrationInstance({
 *     integrationInstanceId: testIntegrationInstanceOciIntegrationIntegrationInstance.id,
 * });
 * ```
 */
export function getIntegrationInstanceOutput(args: GetIntegrationInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIntegrationInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Integration/getIntegrationInstance:getIntegrationInstance", {
        "integrationInstanceId": args.integrationInstanceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIntegrationInstance.
 */
export interface GetIntegrationInstanceOutputArgs {
    /**
     * Unique Integration Instance identifier.
     */
    integrationInstanceId: pulumi.Input<string>;
}
