// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Integration Instance resource in Oracle Cloud Infrastructure Integration service.
 *
 * Creates a new Integration Instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIntegrationInstance = new oci.integration.IntegrationInstance("test_integration_instance", {
 *     compartmentId: compartmentId,
 *     displayName: integrationInstanceDisplayName,
 *     integrationInstanceType: integrationInstanceIntegrationInstanceType,
 *     isByol: integrationInstanceIsByol,
 *     messagePacks: integrationInstanceMessagePacks,
 *     alternateCustomEndpoints: [{
 *         hostname: integrationInstanceAlternateCustomEndpointsHostname,
 *         certificateSecretId: testSecret.id,
 *     }],
 *     consumptionModel: integrationInstanceConsumptionModel,
 *     customEndpoint: {
 *         hostname: integrationInstanceCustomEndpointHostname,
 *         certificateSecretId: testSecret.id,
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     domainId: testDomain.id,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     idcsAt: integrationInstanceIdcsAt,
 *     isFileServerEnabled: integrationInstanceIsFileServerEnabled,
 *     isVisualBuilderEnabled: integrationInstanceIsVisualBuilderEnabled,
 *     networkEndpointDetails: {
 *         networkEndpointType: integrationInstanceNetworkEndpointDetailsNetworkEndpointType,
 *         allowlistedHttpIps: integrationInstanceNetworkEndpointDetailsAllowlistedHttpIps,
 *         allowlistedHttpVcns: [{
 *             id: integrationInstanceNetworkEndpointDetailsAllowlistedHttpVcnsId,
 *             allowlistedIps: integrationInstanceNetworkEndpointDetailsAllowlistedHttpVcnsAllowlistedIps,
 *         }],
 *         isIntegrationVcnAllowlisted: integrationInstanceNetworkEndpointDetailsIsIntegrationVcnAllowlisted,
 *     },
 *     shape: integrationInstanceShape,
 *     state: integrationInstanceTargetState,
 * });
 * ```
 *
 * ## Import
 *
 * IntegrationInstances can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Integration/integrationInstance:IntegrationInstance test_integration_instance "id"
 * ```
 */
export class IntegrationInstance extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationInstanceState, opts?: pulumi.CustomResourceOptions): IntegrationInstance {
        return new IntegrationInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Integration/integrationInstance:IntegrationInstance';

    /**
     * Returns true if the given object is an instance of IntegrationInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationInstance.__pulumiType;
    }

    /**
     * (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    public readonly alternateCustomEndpoints!: pulumi.Output<outputs.Integration.IntegrationInstanceAlternateCustomEndpoint[]>;
    /**
     * A list of associated attachments to other services
     */
    public /*out*/ readonly attachments!: pulumi.Output<outputs.Integration.IntegrationInstanceAttachment[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    public readonly consumptionModel!: pulumi.Output<string>;
    /**
     * (Updatable) Details for a custom endpoint for the integration instance (update).
     */
    public readonly customEndpoint!: pulumi.Output<outputs.Integration.IntegrationInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Integration Instance Identifier.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The OCID of the identity domain, that will be used to determine the  corresponding Idcs Stripe and create an Idcs application within the stripe.  This parameter is mutually exclusive with parameter: idcsAt, i.e only one of  two parameters should be specified.
     */
    public readonly domainId!: pulumi.Output<string | undefined>;
    public readonly enableProcessAutomationTrigger!: pulumi.Output<number | undefined>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
     */
    public readonly idcsAt!: pulumi.Output<string | undefined>;
    /**
     * Information for IDCS access
     */
    public /*out*/ readonly idcsInfos!: pulumi.Output<outputs.Integration.IntegrationInstanceIdcsInfo[]>;
    /**
     * The Integration Instance URL.
     */
    public /*out*/ readonly instanceUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
     */
    public readonly integrationInstanceType!: pulumi.Output<string>;
    /**
     * (Updatable) Bring your own license.
     */
    public readonly isByol!: pulumi.Output<boolean>;
    /**
     * (Updatable) The file server is enabled or not.
     */
    public readonly isFileServerEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    public readonly isVisualBuilderEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) The number of configured message packs
     */
    public readonly messagePacks!: pulumi.Output<number>;
    /**
     * Base representation of a network endpoint.
     */
    public readonly networkEndpointDetails!: pulumi.Output<outputs.Integration.IntegrationInstanceNetworkEndpointDetails>;
    /**
     * Base representation for Outbound Connection (Reverse Connection).
     */
    public /*out*/ readonly privateEndpointOutboundConnections!: pulumi.Output<outputs.Integration.IntegrationInstancePrivateEndpointOutboundConnection[]>;
    /**
     * Shape
     */
    public readonly shape!: pulumi.Output<string>;
    /**
     * (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a IntegrationInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationInstanceArgs | IntegrationInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationInstanceState | undefined;
            resourceInputs["alternateCustomEndpoints"] = state ? state.alternateCustomEndpoints : undefined;
            resourceInputs["attachments"] = state ? state.attachments : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["consumptionModel"] = state ? state.consumptionModel : undefined;
            resourceInputs["customEndpoint"] = state ? state.customEndpoint : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["enableProcessAutomationTrigger"] = state ? state.enableProcessAutomationTrigger : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["idcsAt"] = state ? state.idcsAt : undefined;
            resourceInputs["idcsInfos"] = state ? state.idcsInfos : undefined;
            resourceInputs["instanceUrl"] = state ? state.instanceUrl : undefined;
            resourceInputs["integrationInstanceType"] = state ? state.integrationInstanceType : undefined;
            resourceInputs["isByol"] = state ? state.isByol : undefined;
            resourceInputs["isFileServerEnabled"] = state ? state.isFileServerEnabled : undefined;
            resourceInputs["isVisualBuilderEnabled"] = state ? state.isVisualBuilderEnabled : undefined;
            resourceInputs["messagePacks"] = state ? state.messagePacks : undefined;
            resourceInputs["networkEndpointDetails"] = state ? state.networkEndpointDetails : undefined;
            resourceInputs["privateEndpointOutboundConnections"] = state ? state.privateEndpointOutboundConnections : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as IntegrationInstanceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.integrationInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationInstanceType'");
            }
            if ((!args || args.isByol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isByol'");
            }
            if ((!args || args.messagePacks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'messagePacks'");
            }
            resourceInputs["alternateCustomEndpoints"] = args ? args.alternateCustomEndpoints : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["consumptionModel"] = args ? args.consumptionModel : undefined;
            resourceInputs["customEndpoint"] = args ? args.customEndpoint : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["domainId"] = args ? args.domainId : undefined;
            resourceInputs["enableProcessAutomationTrigger"] = args ? args.enableProcessAutomationTrigger : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["idcsAt"] = args?.idcsAt ? pulumi.secret(args.idcsAt) : undefined;
            resourceInputs["integrationInstanceType"] = args ? args.integrationInstanceType : undefined;
            resourceInputs["isByol"] = args ? args.isByol : undefined;
            resourceInputs["isFileServerEnabled"] = args ? args.isFileServerEnabled : undefined;
            resourceInputs["isVisualBuilderEnabled"] = args ? args.isVisualBuilderEnabled : undefined;
            resourceInputs["messagePacks"] = args ? args.messagePacks : undefined;
            resourceInputs["networkEndpointDetails"] = args ? args.networkEndpointDetails : undefined;
            resourceInputs["shape"] = args ? args.shape : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["attachments"] = undefined /*out*/;
            resourceInputs["idcsInfos"] = undefined /*out*/;
            resourceInputs["instanceUrl"] = undefined /*out*/;
            resourceInputs["privateEndpointOutboundConnections"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["idcsAt"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IntegrationInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IntegrationInstance resources.
 */
export interface IntegrationInstanceState {
    /**
     * (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    alternateCustomEndpoints?: pulumi.Input<pulumi.Input<inputs.Integration.IntegrationInstanceAlternateCustomEndpoint>[]>;
    /**
     * A list of associated attachments to other services
     */
    attachments?: pulumi.Input<pulumi.Input<inputs.Integration.IntegrationInstanceAttachment>[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    consumptionModel?: pulumi.Input<string>;
    /**
     * (Updatable) Details for a custom endpoint for the integration instance (update).
     */
    customEndpoint?: pulumi.Input<inputs.Integration.IntegrationInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Integration Instance Identifier.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The OCID of the identity domain, that will be used to determine the  corresponding Idcs Stripe and create an Idcs application within the stripe.  This parameter is mutually exclusive with parameter: idcsAt, i.e only one of  two parameters should be specified.
     */
    domainId?: pulumi.Input<string>;
    enableProcessAutomationTrigger?: pulumi.Input<number>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
     */
    idcsAt?: pulumi.Input<string>;
    /**
     * Information for IDCS access
     */
    idcsInfos?: pulumi.Input<pulumi.Input<inputs.Integration.IntegrationInstanceIdcsInfo>[]>;
    /**
     * The Integration Instance URL.
     */
    instanceUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
     */
    integrationInstanceType?: pulumi.Input<string>;
    /**
     * (Updatable) Bring your own license.
     */
    isByol?: pulumi.Input<boolean>;
    /**
     * (Updatable) The file server is enabled or not.
     */
    isFileServerEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    isVisualBuilderEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) The number of configured message packs
     */
    messagePacks?: pulumi.Input<number>;
    /**
     * Base representation of a network endpoint.
     */
    networkEndpointDetails?: pulumi.Input<inputs.Integration.IntegrationInstanceNetworkEndpointDetails>;
    /**
     * Base representation for Outbound Connection (Reverse Connection).
     */
    privateEndpointOutboundConnections?: pulumi.Input<pulumi.Input<inputs.Integration.IntegrationInstancePrivateEndpointOutboundConnection>[]>;
    /**
     * Shape
     */
    shape?: pulumi.Input<string>;
    /**
     * (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    state?: pulumi.Input<string>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IntegrationInstance resource.
 */
export interface IntegrationInstanceArgs {
    /**
     * (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    alternateCustomEndpoints?: pulumi.Input<pulumi.Input<inputs.Integration.IntegrationInstanceAlternateCustomEndpoint>[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    consumptionModel?: pulumi.Input<string>;
    /**
     * (Updatable) Details for a custom endpoint for the integration instance (update).
     */
    customEndpoint?: pulumi.Input<inputs.Integration.IntegrationInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Integration Instance Identifier.
     */
    displayName: pulumi.Input<string>;
    /**
     * The OCID of the identity domain, that will be used to determine the  corresponding Idcs Stripe and create an Idcs application within the stripe.  This parameter is mutually exclusive with parameter: idcsAt, i.e only one of  two parameters should be specified.
     */
    domainId?: pulumi.Input<string>;
    enableProcessAutomationTrigger?: pulumi.Input<number>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
     */
    idcsAt?: pulumi.Input<string>;
    /**
     * (Updatable) Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
     */
    integrationInstanceType: pulumi.Input<string>;
    /**
     * (Updatable) Bring your own license.
     */
    isByol: pulumi.Input<boolean>;
    /**
     * (Updatable) The file server is enabled or not.
     */
    isFileServerEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    isVisualBuilderEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) The number of configured message packs
     */
    messagePacks: pulumi.Input<number>;
    /**
     * Base representation of a network endpoint.
     */
    networkEndpointDetails?: pulumi.Input<inputs.Integration.IntegrationInstanceNetworkEndpointDetails>;
    /**
     * Shape
     */
    shape?: pulumi.Input<string>;
    /**
     * (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    state?: pulumi.Input<string>;
}
