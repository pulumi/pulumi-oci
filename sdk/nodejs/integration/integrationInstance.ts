// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This resource provides the Integration Instance resource in Oracle Cloud Infrastructure Integration service.
 *
 * Creates a new Integration Instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIntegrationInstance = new oci.integration.IntegrationInstance("testIntegrationInstance", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.integration_instance_display_name,
 *     integrationInstanceType: _var.integration_instance_integration_instance_type,
 *     isByol: _var.integration_instance_is_byol,
 *     messagePacks: _var.integration_instance_message_packs,
 *     alternateCustomEndpoints: [{
 *         hostname: _var.integration_instance_alternate_custom_endpoints_hostname,
 *         certificateSecretId: oci_vault_secret.test_secret.id,
 *     }],
 *     consumptionModel: _var.integration_instance_consumption_model,
 *     customEndpoint: {
 *         hostname: _var.integration_instance_custom_endpoint_hostname,
 *         certificateSecretId: oci_vault_secret.test_secret.id,
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     idcsAt: _var.integration_instance_idcs_at,
 *     isFileServerEnabled: _var.integration_instance_is_file_server_enabled,
 *     isVisualBuilderEnabled: _var.integration_instance_is_visual_builder_enabled,
 *     networkEndpointDetails: {
 *         networkEndpointType: _var.integration_instance_network_endpoint_details_network_endpoint_type,
 *         allowlistedHttpIps: _var.integration_instance_network_endpoint_details_allowlisted_http_ips,
 *         allowlistedHttpVcns: [{
 *             id: _var.integration_instance_network_endpoint_details_allowlisted_http_vcns_id,
 *             allowlistedIps: _var.integration_instance_network_endpoint_details_allowlisted_http_vcns_allowlisted_ips,
 *         }],
 *         isIntegrationVcnAllowlisted: _var.integration_instance_network_endpoint_details_is_integration_vcn_allowlisted,
 *     },
 *     state: _var.integration_instance_target_state,
 * });
 * ```
 *
 * ## Import
 *
 * IntegrationInstances can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Integration/integrationInstance:IntegrationInstance test_integration_instance "id"
 * ```
 */
export class IntegrationInstance extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationInstanceState, opts?: pulumi.CustomResourceOptions): IntegrationInstance {
        return new IntegrationInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Integration/integrationInstance:IntegrationInstance';

    /**
     * Returns true if the given object is an instance of IntegrationInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationInstance.__pulumiType;
    }

    /**
     * (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    public readonly alternateCustomEndpoints!: pulumi.Output<outputs.Integration.IntegrationInstanceAlternateCustomEndpoint[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    public readonly consumptionModel!: pulumi.Output<string>;
    /**
     * (Updatable) Details for a custom endpoint for the integration instance (update).
     */
    public readonly customEndpoint!: pulumi.Output<outputs.Integration.IntegrationInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Integration Instance Identifier.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
     */
    public readonly idcsAt!: pulumi.Output<string | undefined>;
    /**
     * The Integration Instance URL.
     */
    public /*out*/ readonly instanceUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Standard or Enterprise type
     */
    public readonly integrationInstanceType!: pulumi.Output<string>;
    /**
     * (Updatable) Bring your own license.
     */
    public readonly isByol!: pulumi.Output<boolean>;
    /**
     * (Updatable) The file server is enabled or not.
     */
    public readonly isFileServerEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    public readonly isVisualBuilderEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) The number of configured message packs
     */
    public readonly messagePacks!: pulumi.Output<number>;
    /**
     * Base representation of a network endpoint.
     */
    public readonly networkEndpointDetails!: pulumi.Output<outputs.Integration.IntegrationInstanceNetworkEndpointDetails>;
    /**
     * (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    /**
     * The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a IntegrationInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationInstanceArgs | IntegrationInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationInstanceState | undefined;
            resourceInputs["alternateCustomEndpoints"] = state ? state.alternateCustomEndpoints : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["consumptionModel"] = state ? state.consumptionModel : undefined;
            resourceInputs["customEndpoint"] = state ? state.customEndpoint : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["idcsAt"] = state ? state.idcsAt : undefined;
            resourceInputs["instanceUrl"] = state ? state.instanceUrl : undefined;
            resourceInputs["integrationInstanceType"] = state ? state.integrationInstanceType : undefined;
            resourceInputs["isByol"] = state ? state.isByol : undefined;
            resourceInputs["isFileServerEnabled"] = state ? state.isFileServerEnabled : undefined;
            resourceInputs["isVisualBuilderEnabled"] = state ? state.isVisualBuilderEnabled : undefined;
            resourceInputs["messagePacks"] = state ? state.messagePacks : undefined;
            resourceInputs["networkEndpointDetails"] = state ? state.networkEndpointDetails : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as IntegrationInstanceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.integrationInstanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'integrationInstanceType'");
            }
            if ((!args || args.isByol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isByol'");
            }
            if ((!args || args.messagePacks === undefined) && !opts.urn) {
                throw new Error("Missing required property 'messagePacks'");
            }
            resourceInputs["alternateCustomEndpoints"] = args ? args.alternateCustomEndpoints : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["consumptionModel"] = args ? args.consumptionModel : undefined;
            resourceInputs["customEndpoint"] = args ? args.customEndpoint : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["idcsAt"] = args ? args.idcsAt : undefined;
            resourceInputs["integrationInstanceType"] = args ? args.integrationInstanceType : undefined;
            resourceInputs["isByol"] = args ? args.isByol : undefined;
            resourceInputs["isFileServerEnabled"] = args ? args.isFileServerEnabled : undefined;
            resourceInputs["isVisualBuilderEnabled"] = args ? args.isVisualBuilderEnabled : undefined;
            resourceInputs["messagePacks"] = args ? args.messagePacks : undefined;
            resourceInputs["networkEndpointDetails"] = args ? args.networkEndpointDetails : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["instanceUrl"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IntegrationInstance resources.
 */
export interface IntegrationInstanceState {
    /**
     * (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    alternateCustomEndpoints?: pulumi.Input<pulumi.Input<inputs.Integration.IntegrationInstanceAlternateCustomEndpoint>[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    consumptionModel?: pulumi.Input<string>;
    /**
     * (Updatable) Details for a custom endpoint for the integration instance (update).
     */
    customEndpoint?: pulumi.Input<inputs.Integration.IntegrationInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Integration Instance Identifier.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
     */
    idcsAt?: pulumi.Input<string>;
    /**
     * The Integration Instance URL.
     */
    instanceUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Standard or Enterprise type
     */
    integrationInstanceType?: pulumi.Input<string>;
    /**
     * (Updatable) Bring your own license.
     */
    isByol?: pulumi.Input<boolean>;
    /**
     * (Updatable) The file server is enabled or not.
     */
    isFileServerEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    isVisualBuilderEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) The number of configured message packs
     */
    messagePacks?: pulumi.Input<number>;
    /**
     * Base representation of a network endpoint.
     */
    networkEndpointDetails?: pulumi.Input<inputs.Integration.IntegrationInstanceNetworkEndpointDetails>;
    /**
     * (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
     */
    state?: pulumi.Input<string>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IntegrationInstance resource.
 */
export interface IntegrationInstanceArgs {
    /**
     * (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     */
    alternateCustomEndpoints?: pulumi.Input<pulumi.Input<inputs.Integration.IntegrationInstanceAlternateCustomEndpoint>[]>;
    /**
     * (Updatable) Compartment Identifier.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     */
    consumptionModel?: pulumi.Input<string>;
    /**
     * (Updatable) Details for a custom endpoint for the integration instance (update).
     */
    customEndpoint?: pulumi.Input<inputs.Integration.IntegrationInstanceCustomEndpoint>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Integration Instance Identifier.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
     */
    idcsAt?: pulumi.Input<string>;
    /**
     * (Updatable) Standard or Enterprise type
     */
    integrationInstanceType: pulumi.Input<string>;
    /**
     * (Updatable) Bring your own license.
     */
    isByol: pulumi.Input<boolean>;
    /**
     * (Updatable) The file server is enabled or not.
     */
    isFileServerEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Visual Builder is enabled or not.
     */
    isVisualBuilderEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) The number of configured message packs
     */
    messagePacks: pulumi.Input<number>;
    /**
     * Base representation of a network endpoint.
     */
    networkEndpointDetails?: pulumi.Input<inputs.Integration.IntegrationInstanceNetworkEndpointDetails>;
    /**
     * (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
     */
    state?: pulumi.Input<string>;
}
