// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Fleet Advanced Feature Configuration resource in Oracle Cloud Infrastructure Jms service.
 *
 * Update advanced feature configurations for the Fleet.
 * Ensure that the namespace and bucket storage are created prior to turning on the JfrRecording or CryptoEventAnalysis feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetAdvancedFeatureConfiguration = new oci.jms.FleetAdvancedFeatureConfiguration("test_fleet_advanced_feature_configuration", {
 *     fleetId: testFleet.id,
 *     advancedUsageTracking: {
 *         isEnabled: fleetAdvancedFeatureConfigurationAdvancedUsageTrackingIsEnabled,
 *     },
 *     analyticBucketName: testBucket.name,
 *     analyticNamespace: fleetAdvancedFeatureConfigurationAnalyticNamespace,
 *     cryptoEventAnalysis: {
 *         isEnabled: fleetAdvancedFeatureConfigurationCryptoEventAnalysisIsEnabled,
 *         summarizedEventsLog: {
 *             logGroupId: testLogGroup.id,
 *             logId: testLog.id,
 *         },
 *     },
 *     javaMigrationAnalysis: {
 *         isEnabled: fleetAdvancedFeatureConfigurationJavaMigrationAnalysisIsEnabled,
 *     },
 *     jfrRecording: {
 *         isEnabled: fleetAdvancedFeatureConfigurationJfrRecordingIsEnabled,
 *     },
 *     lcm: {
 *         isEnabled: fleetAdvancedFeatureConfigurationLcmIsEnabled,
 *         postInstallationActions: {
 *             addLoggingHandler: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsAddLoggingHandler,
 *             disabledTlsVersions: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsDisabledTlsVersions,
 *             globalLoggingLevel: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsGlobalLoggingLevel,
 *             minimumKeySizeSettings: {
 *                 certpaths: [{
 *                     keySize: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathKeySize,
 *                     name: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathName,
 *                 }],
 *                 jars: [{
 *                     keySize: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarKeySize,
 *                     name: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarName,
 *                 }],
 *                 tls: [{
 *                     keySize: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlsKeySize,
 *                     name: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlsName,
 *                 }],
 *             },
 *             proxies: {
 *                 ftpProxyHost: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesFtpProxyHost,
 *                 ftpProxyPort: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesFtpProxyPort,
 *                 httpProxyHost: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesHttpProxyHost,
 *                 httpProxyPort: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesHttpProxyPort,
 *                 httpsProxyHost: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesHttpsProxyHost,
 *                 httpsProxyPort: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesHttpsProxyPort,
 *                 socksProxyHost: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesSocksProxyHost,
 *                 socksProxyPort: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesSocksProxyPort,
 *                 useSystemProxies: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesUseSystemProxies,
 *             },
 *             shouldReplaceCertificatesOperatingSystem: fleetAdvancedFeatureConfigurationLcmPostInstallationActionsShouldReplaceCertificatesOperatingSystem,
 *         },
 *     },
 *     performanceTuningAnalysis: {
 *         isEnabled: fleetAdvancedFeatureConfigurationPerformanceTuningAnalysisIsEnabled,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * FleetAdvancedFeatureConfigurations can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Jms/fleetAdvancedFeatureConfiguration:FleetAdvancedFeatureConfiguration test_fleet_advanced_feature_configuration "fleets/{fleetId}/advancedFeatureConfiguration"
 * ```
 */
export class FleetAdvancedFeatureConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing FleetAdvancedFeatureConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetAdvancedFeatureConfigurationState, opts?: pulumi.CustomResourceOptions): FleetAdvancedFeatureConfiguration {
        return new FleetAdvancedFeatureConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Jms/fleetAdvancedFeatureConfiguration:FleetAdvancedFeatureConfiguration';

    /**
     * Returns true if the given object is an instance of FleetAdvancedFeatureConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FleetAdvancedFeatureConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FleetAdvancedFeatureConfiguration.__pulumiType;
    }

    /**
     * (Updatable) AdvancedUsageTracking configuration
     */
    public readonly advancedUsageTracking!: pulumi.Output<outputs.Jms.FleetAdvancedFeatureConfigurationAdvancedUsageTracking>;
    /**
     * (Updatable) Bucket name required to store JFR and related data.
     */
    public readonly analyticBucketName!: pulumi.Output<string>;
    /**
     * (Updatable) Namespace for the Fleet advanced feature.
     */
    public readonly analyticNamespace!: pulumi.Output<string>;
    /**
     * (Updatable) CryptoEventAnalysis configuration
     */
    public readonly cryptoEventAnalysis!: pulumi.Output<outputs.Jms.FleetAdvancedFeatureConfigurationCryptoEventAnalysis>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     */
    public readonly fleetId!: pulumi.Output<string>;
    /**
     * (Updatable) JavaMigrationAnalysis configuration
     */
    public readonly javaMigrationAnalysis!: pulumi.Output<outputs.Jms.FleetAdvancedFeatureConfigurationJavaMigrationAnalysis>;
    /**
     * (Updatable) JfrRecording configuration
     */
    public readonly jfrRecording!: pulumi.Output<outputs.Jms.FleetAdvancedFeatureConfigurationJfrRecording>;
    /**
     * (Updatable) Enable lifecycle management and set post action configurations.
     */
    public readonly lcm!: pulumi.Output<outputs.Jms.FleetAdvancedFeatureConfigurationLcm>;
    /**
     * (Updatable) Performance tuning analysis configuration
     */
    public readonly performanceTuningAnalysis!: pulumi.Output<outputs.Jms.FleetAdvancedFeatureConfigurationPerformanceTuningAnalysis>;
    /**
     * The date and time of the last modification to the Fleet Agent Configuration (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    public /*out*/ readonly timeLastModified!: pulumi.Output<string>;

    /**
     * Create a FleetAdvancedFeatureConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetAdvancedFeatureConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FleetAdvancedFeatureConfigurationArgs | FleetAdvancedFeatureConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FleetAdvancedFeatureConfigurationState | undefined;
            resourceInputs["advancedUsageTracking"] = state ? state.advancedUsageTracking : undefined;
            resourceInputs["analyticBucketName"] = state ? state.analyticBucketName : undefined;
            resourceInputs["analyticNamespace"] = state ? state.analyticNamespace : undefined;
            resourceInputs["cryptoEventAnalysis"] = state ? state.cryptoEventAnalysis : undefined;
            resourceInputs["fleetId"] = state ? state.fleetId : undefined;
            resourceInputs["javaMigrationAnalysis"] = state ? state.javaMigrationAnalysis : undefined;
            resourceInputs["jfrRecording"] = state ? state.jfrRecording : undefined;
            resourceInputs["lcm"] = state ? state.lcm : undefined;
            resourceInputs["performanceTuningAnalysis"] = state ? state.performanceTuningAnalysis : undefined;
            resourceInputs["timeLastModified"] = state ? state.timeLastModified : undefined;
        } else {
            const args = argsOrState as FleetAdvancedFeatureConfigurationArgs | undefined;
            if ((!args || args.fleetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fleetId'");
            }
            resourceInputs["advancedUsageTracking"] = args ? args.advancedUsageTracking : undefined;
            resourceInputs["analyticBucketName"] = args ? args.analyticBucketName : undefined;
            resourceInputs["analyticNamespace"] = args ? args.analyticNamespace : undefined;
            resourceInputs["cryptoEventAnalysis"] = args ? args.cryptoEventAnalysis : undefined;
            resourceInputs["fleetId"] = args ? args.fleetId : undefined;
            resourceInputs["javaMigrationAnalysis"] = args ? args.javaMigrationAnalysis : undefined;
            resourceInputs["jfrRecording"] = args ? args.jfrRecording : undefined;
            resourceInputs["lcm"] = args ? args.lcm : undefined;
            resourceInputs["performanceTuningAnalysis"] = args ? args.performanceTuningAnalysis : undefined;
            resourceInputs["timeLastModified"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FleetAdvancedFeatureConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FleetAdvancedFeatureConfiguration resources.
 */
export interface FleetAdvancedFeatureConfigurationState {
    /**
     * (Updatable) AdvancedUsageTracking configuration
     */
    advancedUsageTracking?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationAdvancedUsageTracking>;
    /**
     * (Updatable) Bucket name required to store JFR and related data.
     */
    analyticBucketName?: pulumi.Input<string>;
    /**
     * (Updatable) Namespace for the Fleet advanced feature.
     */
    analyticNamespace?: pulumi.Input<string>;
    /**
     * (Updatable) CryptoEventAnalysis configuration
     */
    cryptoEventAnalysis?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationCryptoEventAnalysis>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     */
    fleetId?: pulumi.Input<string>;
    /**
     * (Updatable) JavaMigrationAnalysis configuration
     */
    javaMigrationAnalysis?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationJavaMigrationAnalysis>;
    /**
     * (Updatable) JfrRecording configuration
     */
    jfrRecording?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationJfrRecording>;
    /**
     * (Updatable) Enable lifecycle management and set post action configurations.
     */
    lcm?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationLcm>;
    /**
     * (Updatable) Performance tuning analysis configuration
     */
    performanceTuningAnalysis?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationPerformanceTuningAnalysis>;
    /**
     * The date and time of the last modification to the Fleet Agent Configuration (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeLastModified?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FleetAdvancedFeatureConfiguration resource.
 */
export interface FleetAdvancedFeatureConfigurationArgs {
    /**
     * (Updatable) AdvancedUsageTracking configuration
     */
    advancedUsageTracking?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationAdvancedUsageTracking>;
    /**
     * (Updatable) Bucket name required to store JFR and related data.
     */
    analyticBucketName?: pulumi.Input<string>;
    /**
     * (Updatable) Namespace for the Fleet advanced feature.
     */
    analyticNamespace?: pulumi.Input<string>;
    /**
     * (Updatable) CryptoEventAnalysis configuration
     */
    cryptoEventAnalysis?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationCryptoEventAnalysis>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     */
    fleetId: pulumi.Input<string>;
    /**
     * (Updatable) JavaMigrationAnalysis configuration
     */
    javaMigrationAnalysis?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationJavaMigrationAnalysis>;
    /**
     * (Updatable) JfrRecording configuration
     */
    jfrRecording?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationJfrRecording>;
    /**
     * (Updatable) Enable lifecycle management and set post action configurations.
     */
    lcm?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationLcm>;
    /**
     * (Updatable) Performance tuning analysis configuration
     */
    performanceTuningAnalysis?: pulumi.Input<inputs.Jms.FleetAdvancedFeatureConfigurationPerformanceTuningAnalysis>;
}
