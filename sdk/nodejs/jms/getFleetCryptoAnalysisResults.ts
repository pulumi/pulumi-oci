// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Fleet Crypto Analysis Results in Oracle Cloud Infrastructure Jms service.
 *
 * Lists the results of a Crypto event analysis.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetCryptoAnalysisResults = oci.Jms.getFleetCryptoAnalysisResults({
 *     fleetId: testFleet.id,
 *     aggregationMode: fleetCryptoAnalysisResultAggregationMode,
 *     findingCount: fleetCryptoAnalysisResultFindingCount,
 *     findingCountGreaterThan: fleetCryptoAnalysisResultFindingCountGreaterThan,
 *     hostName: fleetCryptoAnalysisResultHostName,
 *     managedInstanceId: fleetCryptoAnalysisResultManagedInstanceOcid,
 *     nonCompliantFindingCount: fleetCryptoAnalysisResultNonCompliantFindingCount,
 *     nonCompliantFindingCountGreaterThan: fleetCryptoAnalysisResultNonCompliantFindingCountGreaterThan,
 *     timeEnd: fleetCryptoAnalysisResultTimeEnd,
 *     timeStart: fleetCryptoAnalysisResultTimeStart,
 * });
 * ```
 */
export function getFleetCryptoAnalysisResults(args: GetFleetCryptoAnalysisResultsArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetCryptoAnalysisResultsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Jms/getFleetCryptoAnalysisResults:getFleetCryptoAnalysisResults", {
        "aggregationMode": args.aggregationMode,
        "filters": args.filters,
        "findingCount": args.findingCount,
        "findingCountGreaterThan": args.findingCountGreaterThan,
        "fleetId": args.fleetId,
        "hostName": args.hostName,
        "managedInstanceId": args.managedInstanceId,
        "nonCompliantFindingCount": args.nonCompliantFindingCount,
        "nonCompliantFindingCountGreaterThan": args.nonCompliantFindingCountGreaterThan,
        "timeEnd": args.timeEnd,
        "timeStart": args.timeStart,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleetCryptoAnalysisResults.
 */
export interface GetFleetCryptoAnalysisResultsArgs {
    /**
     * The aggregation mode of the crypto event analysis result.
     */
    aggregationMode?: string;
    filters?: inputs.Jms.GetFleetCryptoAnalysisResultsFilter[];
    /**
     * FindingCount of CryptoAnalysis Report.
     */
    findingCount?: number;
    /**
     * FindingCount of CryptoAnalysis Report.
     */
    findingCountGreaterThan?: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     */
    fleetId: string;
    /**
     * The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     */
    hostName?: string;
    /**
     * The Fleet-unique identifier of the related managed instance.
     */
    managedInstanceId?: string;
    /**
     * Non Compliant Finding Count of CryptoAnalysis Report.
     */
    nonCompliantFindingCount?: number;
    /**
     * Non Compliant Finding Count of CryptoAnalysis Report.
     */
    nonCompliantFindingCountGreaterThan?: number;
    /**
     * The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeEnd?: string;
    /**
     * The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeStart?: string;
}

/**
 * A collection of values returned by getFleetCryptoAnalysisResults.
 */
export interface GetFleetCryptoAnalysisResultsResult {
    /**
     * The result aggregation mode
     */
    readonly aggregationMode?: string;
    /**
     * The list of crypto_analysis_result_collection.
     */
    readonly cryptoAnalysisResultCollections: outputs.Jms.GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollection[];
    readonly filters?: outputs.Jms.GetFleetCryptoAnalysisResultsFilter[];
    /**
     * Total number of findings with the analysis.
     */
    readonly findingCount?: number;
    readonly findingCountGreaterThan?: number;
    /**
     * The fleet OCID.
     */
    readonly fleetId: string;
    /**
     * The hostname of the managed instance.
     */
    readonly hostName?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The managed instance OCID.
     */
    readonly managedInstanceId?: string;
    /**
     * Total number of non-compliant findings with the analysis. A non-compliant finding means the application won't work properly with the changes introduced by the Crypto Roadmap version used by the analysis.
     */
    readonly nonCompliantFindingCount?: number;
    readonly nonCompliantFindingCountGreaterThan?: number;
    readonly timeEnd?: string;
    readonly timeStart?: string;
}
/**
 * This data source provides the list of Fleet Crypto Analysis Results in Oracle Cloud Infrastructure Jms service.
 *
 * Lists the results of a Crypto event analysis.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetCryptoAnalysisResults = oci.Jms.getFleetCryptoAnalysisResults({
 *     fleetId: testFleet.id,
 *     aggregationMode: fleetCryptoAnalysisResultAggregationMode,
 *     findingCount: fleetCryptoAnalysisResultFindingCount,
 *     findingCountGreaterThan: fleetCryptoAnalysisResultFindingCountGreaterThan,
 *     hostName: fleetCryptoAnalysisResultHostName,
 *     managedInstanceId: fleetCryptoAnalysisResultManagedInstanceOcid,
 *     nonCompliantFindingCount: fleetCryptoAnalysisResultNonCompliantFindingCount,
 *     nonCompliantFindingCountGreaterThan: fleetCryptoAnalysisResultNonCompliantFindingCountGreaterThan,
 *     timeEnd: fleetCryptoAnalysisResultTimeEnd,
 *     timeStart: fleetCryptoAnalysisResultTimeStart,
 * });
 * ```
 */
export function getFleetCryptoAnalysisResultsOutput(args: GetFleetCryptoAnalysisResultsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFleetCryptoAnalysisResultsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Jms/getFleetCryptoAnalysisResults:getFleetCryptoAnalysisResults", {
        "aggregationMode": args.aggregationMode,
        "filters": args.filters,
        "findingCount": args.findingCount,
        "findingCountGreaterThan": args.findingCountGreaterThan,
        "fleetId": args.fleetId,
        "hostName": args.hostName,
        "managedInstanceId": args.managedInstanceId,
        "nonCompliantFindingCount": args.nonCompliantFindingCount,
        "nonCompliantFindingCountGreaterThan": args.nonCompliantFindingCountGreaterThan,
        "timeEnd": args.timeEnd,
        "timeStart": args.timeStart,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleetCryptoAnalysisResults.
 */
export interface GetFleetCryptoAnalysisResultsOutputArgs {
    /**
     * The aggregation mode of the crypto event analysis result.
     */
    aggregationMode?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Jms.GetFleetCryptoAnalysisResultsFilterArgs>[]>;
    /**
     * FindingCount of CryptoAnalysis Report.
     */
    findingCount?: pulumi.Input<number>;
    /**
     * FindingCount of CryptoAnalysis Report.
     */
    findingCountGreaterThan?: pulumi.Input<number>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     */
    fleetId: pulumi.Input<string>;
    /**
     * The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The Fleet-unique identifier of the related managed instance.
     */
    managedInstanceId?: pulumi.Input<string>;
    /**
     * Non Compliant Finding Count of CryptoAnalysis Report.
     */
    nonCompliantFindingCount?: pulumi.Input<number>;
    /**
     * Non Compliant Finding Count of CryptoAnalysis Report.
     */
    nonCompliantFindingCountGreaterThan?: pulumi.Input<number>;
    /**
     * The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeEnd?: pulumi.Input<string>;
    /**
     * The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeStart?: pulumi.Input<string>;
}
