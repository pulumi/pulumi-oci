// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Fleet Uncorrelated Packages in Oracle Cloud Infrastructure Jms service.
 *
 * List uncorrelated package summaries in a fleet, filtered by query parameters. Uncorrelated packages are Java packages which can't be accurately correlated to a library during a library scan.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetUncorrelatedPackages = oci.Jms.getFleetUncorrelatedPackages({
 *     fleetId: testFleet.id,
 *     applicationId: testApplication.id,
 *     managedInstanceId: testManagedInstance.id,
 *     packageName: fleetUncorrelatedPackagePackageName,
 *     timeEnd: fleetUncorrelatedPackageTimeEnd,
 *     timeStart: fleetUncorrelatedPackageTimeStart,
 * });
 * ```
 */
export function getFleetUncorrelatedPackages(args: GetFleetUncorrelatedPackagesArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetUncorrelatedPackagesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Jms/getFleetUncorrelatedPackages:getFleetUncorrelatedPackages", {
        "applicationId": args.applicationId,
        "filters": args.filters,
        "fleetId": args.fleetId,
        "managedInstanceId": args.managedInstanceId,
        "packageName": args.packageName,
        "timeEnd": args.timeEnd,
        "timeStart": args.timeStart,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleetUncorrelatedPackages.
 */
export interface GetFleetUncorrelatedPackagesArgs {
    /**
     * The Fleet-unique identifier of the application.
     */
    applicationId?: string;
    filters?: inputs.Jms.GetFleetUncorrelatedPackagesFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     */
    fleetId: string;
    /**
     * The Fleet-unique identifier of the managed instance.
     */
    managedInstanceId?: string;
    /**
     * The unique identifier of a Java package.
     */
    packageName?: string;
    /**
     * The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeEnd?: string;
    /**
     * The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeStart?: string;
}

/**
 * A collection of values returned by getFleetUncorrelatedPackages.
 */
export interface GetFleetUncorrelatedPackagesResult {
    readonly applicationId?: string;
    readonly filters?: outputs.Jms.GetFleetUncorrelatedPackagesFilter[];
    readonly fleetId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedInstanceId?: string;
    /**
     * The name of the package.
     */
    readonly packageName?: string;
    readonly timeEnd?: string;
    readonly timeStart?: string;
    /**
     * The list of uncorrelated_package_usage_collection.
     */
    readonly uncorrelatedPackageUsageCollections: outputs.Jms.GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollection[];
}
/**
 * This data source provides the list of Fleet Uncorrelated Packages in Oracle Cloud Infrastructure Jms service.
 *
 * List uncorrelated package summaries in a fleet, filtered by query parameters. Uncorrelated packages are Java packages which can't be accurately correlated to a library during a library scan.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleetUncorrelatedPackages = oci.Jms.getFleetUncorrelatedPackages({
 *     fleetId: testFleet.id,
 *     applicationId: testApplication.id,
 *     managedInstanceId: testManagedInstance.id,
 *     packageName: fleetUncorrelatedPackagePackageName,
 *     timeEnd: fleetUncorrelatedPackageTimeEnd,
 *     timeStart: fleetUncorrelatedPackageTimeStart,
 * });
 * ```
 */
export function getFleetUncorrelatedPackagesOutput(args: GetFleetUncorrelatedPackagesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFleetUncorrelatedPackagesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Jms/getFleetUncorrelatedPackages:getFleetUncorrelatedPackages", {
        "applicationId": args.applicationId,
        "filters": args.filters,
        "fleetId": args.fleetId,
        "managedInstanceId": args.managedInstanceId,
        "packageName": args.packageName,
        "timeEnd": args.timeEnd,
        "timeStart": args.timeStart,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleetUncorrelatedPackages.
 */
export interface GetFleetUncorrelatedPackagesOutputArgs {
    /**
     * The Fleet-unique identifier of the application.
     */
    applicationId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Jms.GetFleetUncorrelatedPackagesFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     */
    fleetId: pulumi.Input<string>;
    /**
     * The Fleet-unique identifier of the managed instance.
     */
    managedInstanceId?: pulumi.Input<string>;
    /**
     * The unique identifier of a Java package.
     */
    packageName?: pulumi.Input<string>;
    /**
     * The end of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeEnd?: pulumi.Input<string>;
    /**
     * The start of the time period during which resources are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    timeStart?: pulumi.Input<string>;
}
