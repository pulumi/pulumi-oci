// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Fleets in Oracle Cloud Infrastructure Jms service.
 *
 * Returns a list of all the Fleets contained by a compartment. The query parameter `compartmentId`
 * is required unless the query parameter `id` is specified.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleets = oci.Jms.getFleets({
 *     compartmentId: compartmentId,
 *     displayName: fleetDisplayName,
 *     displayNameContains: fleetDisplayNameContains,
 *     id: fleetId,
 *     state: fleetState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getFleets(args?: GetFleetsArgs, opts?: pulumi.InvokeOptions): Promise<GetFleetsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Jms/getFleets:getFleets", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "displayNameContains": args.displayNameContains,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getFleets.
 */
export interface GetFleetsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * The display name.
     */
    displayName?: string;
    /**
     * Filter the list with displayName contains the given value.
     */
    displayNameContains?: string;
    filters?: inputs.Jms.GetFleetsFilter[];
    /**
     * The ID of the Fleet.
     */
    id?: string;
    /**
     * The state of the lifecycle.
     */
    state?: string;
}

/**
 * A collection of values returned by getFleets.
 */
export interface GetFleetsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the Fleet.
     */
    readonly compartmentId?: string;
    /**
     * The name of the Fleet.
     */
    readonly displayName?: string;
    readonly displayNameContains?: string;
    readonly filters?: outputs.Jms.GetFleetsFilter[];
    /**
     * The list of fleet_collection.
     */
    readonly fleetCollections: outputs.Jms.GetFleetsFleetCollection[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     */
    readonly id?: string;
    /**
     * The lifecycle state of the Fleet.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Fleets in Oracle Cloud Infrastructure Jms service.
 *
 * Returns a list of all the Fleets contained by a compartment. The query parameter `compartmentId`
 * is required unless the query parameter `id` is specified.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testFleets = oci.Jms.getFleets({
 *     compartmentId: compartmentId,
 *     displayName: fleetDisplayName,
 *     displayNameContains: fleetDisplayNameContains,
 *     id: fleetId,
 *     state: fleetState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getFleetsOutput(args?: GetFleetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFleetsResult> {
    return pulumi.output(args).apply((a: any) => getFleets(a, opts))
}

/**
 * A collection of arguments for invoking getFleets.
 */
export interface GetFleetsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Filter the list with displayName contains the given value.
     */
    displayNameContains?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Jms.GetFleetsFilterArgs>[]>;
    /**
     * The ID of the Fleet.
     */
    id?: pulumi.Input<string>;
    /**
     * The state of the lifecycle.
     */
    state?: pulumi.Input<string>;
}
