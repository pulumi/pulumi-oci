// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Subscription Acknowledgment Configuration resource in Oracle Cloud Infrastructure Jms Utils service.
 *
 * Returns the configuration for subscription acknowledgment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionAcknowledgmentConfiguration = oci.Jms.getUtilsSubscriptionAcknowledgmentConfiguration({
 *     compartmentId: compartmentId,
 * });
 * ```
 */
export function getUtilsSubscriptionAcknowledgmentConfiguration(args?: GetUtilsSubscriptionAcknowledgmentConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetUtilsSubscriptionAcknowledgmentConfigurationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Jms/getUtilsSubscriptionAcknowledgmentConfiguration:getUtilsSubscriptionAcknowledgmentConfiguration", {
        "compartmentId": args.compartmentId,
        "isAcknowledged": args.isAcknowledged,
    }, opts);
}

/**
 * A collection of arguments for invoking getUtilsSubscriptionAcknowledgmentConfiguration.
 */
export interface GetUtilsSubscriptionAcknowledgmentConfigurationArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * Flag to determine whether the subscription was acknowledged or not.
     */
    isAcknowledged?: boolean;
}

/**
 * A collection of values returned by getUtilsSubscriptionAcknowledgmentConfiguration.
 */
export interface GetUtilsSubscriptionAcknowledgmentConfigurationResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal that ackwnoledged the subscription.
     */
    readonly acknowledgedBy: string;
    readonly compartmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Flag to determine whether the subscription was acknowledged or not.
     */
    readonly isAcknowledged: boolean;
    /**
     * The date and time the subscription was acknowledged (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     */
    readonly timeAcknowledged: string;
}
/**
 * This data source provides details about a specific Subscription Acknowledgment Configuration resource in Oracle Cloud Infrastructure Jms Utils service.
 *
 * Returns the configuration for subscription acknowledgment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionAcknowledgmentConfiguration = oci.Jms.getUtilsSubscriptionAcknowledgmentConfiguration({
 *     compartmentId: compartmentId,
 * });
 * ```
 */
export function getUtilsSubscriptionAcknowledgmentConfigurationOutput(args?: GetUtilsSubscriptionAcknowledgmentConfigurationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUtilsSubscriptionAcknowledgmentConfigurationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Jms/getUtilsSubscriptionAcknowledgmentConfiguration:getUtilsSubscriptionAcknowledgmentConfiguration", {
        "compartmentId": args.compartmentId,
        "isAcknowledged": args.isAcknowledged,
    }, opts);
}

/**
 * A collection of arguments for invoking getUtilsSubscriptionAcknowledgmentConfiguration.
 */
export interface GetUtilsSubscriptionAcknowledgmentConfigurationOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Flag to determine whether the subscription was acknowledged or not.
     */
    isAcknowledged?: pulumi.Input<boolean>;
}
