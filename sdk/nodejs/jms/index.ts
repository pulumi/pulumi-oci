// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FleetArgs, FleetState } from "./fleet";
export type Fleet = import("./fleet").Fleet;
export const Fleet: typeof import("./fleet").Fleet = null as any;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));

export { FleetAdvancedFeatureConfigurationArgs, FleetAdvancedFeatureConfigurationState } from "./fleetAdvancedFeatureConfiguration";
export type FleetAdvancedFeatureConfiguration = import("./fleetAdvancedFeatureConfiguration").FleetAdvancedFeatureConfiguration;
export const FleetAdvancedFeatureConfiguration: typeof import("./fleetAdvancedFeatureConfiguration").FleetAdvancedFeatureConfiguration = null as any;
utilities.lazyLoad(exports, ["FleetAdvancedFeatureConfiguration"], () => require("./fleetAdvancedFeatureConfiguration"));

export { GetAnnouncementsArgs, GetAnnouncementsResult, GetAnnouncementsOutputArgs } from "./getAnnouncements";
export const getAnnouncements: typeof import("./getAnnouncements").getAnnouncements = null as any;
export const getAnnouncementsOutput: typeof import("./getAnnouncements").getAnnouncementsOutput = null as any;
utilities.lazyLoad(exports, ["getAnnouncements","getAnnouncementsOutput"], () => require("./getAnnouncements"));

export { GetFleetArgs, GetFleetResult, GetFleetOutputArgs } from "./getFleet";
export const getFleet: typeof import("./getFleet").getFleet = null as any;
export const getFleetOutput: typeof import("./getFleet").getFleetOutput = null as any;
utilities.lazyLoad(exports, ["getFleet","getFleetOutput"], () => require("./getFleet"));

export { GetFleetAdvancedFeatureConfigurationArgs, GetFleetAdvancedFeatureConfigurationResult, GetFleetAdvancedFeatureConfigurationOutputArgs } from "./getFleetAdvancedFeatureConfiguration";
export const getFleetAdvancedFeatureConfiguration: typeof import("./getFleetAdvancedFeatureConfiguration").getFleetAdvancedFeatureConfiguration = null as any;
export const getFleetAdvancedFeatureConfigurationOutput: typeof import("./getFleetAdvancedFeatureConfiguration").getFleetAdvancedFeatureConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getFleetAdvancedFeatureConfiguration","getFleetAdvancedFeatureConfigurationOutput"], () => require("./getFleetAdvancedFeatureConfiguration"));

export { GetFleetBlocklistsArgs, GetFleetBlocklistsResult, GetFleetBlocklistsOutputArgs } from "./getFleetBlocklists";
export const getFleetBlocklists: typeof import("./getFleetBlocklists").getFleetBlocklists = null as any;
export const getFleetBlocklistsOutput: typeof import("./getFleetBlocklists").getFleetBlocklistsOutput = null as any;
utilities.lazyLoad(exports, ["getFleetBlocklists","getFleetBlocklistsOutput"], () => require("./getFleetBlocklists"));

export { GetFleetCryptoAnalysisResultArgs, GetFleetCryptoAnalysisResultResult, GetFleetCryptoAnalysisResultOutputArgs } from "./getFleetCryptoAnalysisResult";
export const getFleetCryptoAnalysisResult: typeof import("./getFleetCryptoAnalysisResult").getFleetCryptoAnalysisResult = null as any;
export const getFleetCryptoAnalysisResultOutput: typeof import("./getFleetCryptoAnalysisResult").getFleetCryptoAnalysisResultOutput = null as any;
utilities.lazyLoad(exports, ["getFleetCryptoAnalysisResult","getFleetCryptoAnalysisResultOutput"], () => require("./getFleetCryptoAnalysisResult"));

export { GetFleetCryptoAnalysisResultsArgs, GetFleetCryptoAnalysisResultsResult, GetFleetCryptoAnalysisResultsOutputArgs } from "./getFleetCryptoAnalysisResults";
export const getFleetCryptoAnalysisResults: typeof import("./getFleetCryptoAnalysisResults").getFleetCryptoAnalysisResults = null as any;
export const getFleetCryptoAnalysisResultsOutput: typeof import("./getFleetCryptoAnalysisResults").getFleetCryptoAnalysisResultsOutput = null as any;
utilities.lazyLoad(exports, ["getFleetCryptoAnalysisResults","getFleetCryptoAnalysisResultsOutput"], () => require("./getFleetCryptoAnalysisResults"));

export { GetFleetDiagnosesArgs, GetFleetDiagnosesResult, GetFleetDiagnosesOutputArgs } from "./getFleetDiagnoses";
export const getFleetDiagnoses: typeof import("./getFleetDiagnoses").getFleetDiagnoses = null as any;
export const getFleetDiagnosesOutput: typeof import("./getFleetDiagnoses").getFleetDiagnosesOutput = null as any;
utilities.lazyLoad(exports, ["getFleetDiagnoses","getFleetDiagnosesOutput"], () => require("./getFleetDiagnoses"));

export { GetFleetDrsFileArgs, GetFleetDrsFileResult, GetFleetDrsFileOutputArgs } from "./getFleetDrsFile";
export const getFleetDrsFile: typeof import("./getFleetDrsFile").getFleetDrsFile = null as any;
export const getFleetDrsFileOutput: typeof import("./getFleetDrsFile").getFleetDrsFileOutput = null as any;
utilities.lazyLoad(exports, ["getFleetDrsFile","getFleetDrsFileOutput"], () => require("./getFleetDrsFile"));

export { GetFleetDrsFilesArgs, GetFleetDrsFilesResult, GetFleetDrsFilesOutputArgs } from "./getFleetDrsFiles";
export const getFleetDrsFiles: typeof import("./getFleetDrsFiles").getFleetDrsFiles = null as any;
export const getFleetDrsFilesOutput: typeof import("./getFleetDrsFiles").getFleetDrsFilesOutput = null as any;
utilities.lazyLoad(exports, ["getFleetDrsFiles","getFleetDrsFilesOutput"], () => require("./getFleetDrsFiles"));

export { GetFleetExportSettingArgs, GetFleetExportSettingResult, GetFleetExportSettingOutputArgs } from "./getFleetExportSetting";
export const getFleetExportSetting: typeof import("./getFleetExportSetting").getFleetExportSetting = null as any;
export const getFleetExportSettingOutput: typeof import("./getFleetExportSetting").getFleetExportSettingOutput = null as any;
utilities.lazyLoad(exports, ["getFleetExportSetting","getFleetExportSettingOutput"], () => require("./getFleetExportSetting"));

export { GetFleetExportStatusArgs, GetFleetExportStatusResult, GetFleetExportStatusOutputArgs } from "./getFleetExportStatus";
export const getFleetExportStatus: typeof import("./getFleetExportStatus").getFleetExportStatus = null as any;
export const getFleetExportStatusOutput: typeof import("./getFleetExportStatus").getFleetExportStatusOutput = null as any;
utilities.lazyLoad(exports, ["getFleetExportStatus","getFleetExportStatusOutput"], () => require("./getFleetExportStatus"));

export { GetFleetJavaMigrationAnalysisResultArgs, GetFleetJavaMigrationAnalysisResultResult, GetFleetJavaMigrationAnalysisResultOutputArgs } from "./getFleetJavaMigrationAnalysisResult";
export const getFleetJavaMigrationAnalysisResult: typeof import("./getFleetJavaMigrationAnalysisResult").getFleetJavaMigrationAnalysisResult = null as any;
export const getFleetJavaMigrationAnalysisResultOutput: typeof import("./getFleetJavaMigrationAnalysisResult").getFleetJavaMigrationAnalysisResultOutput = null as any;
utilities.lazyLoad(exports, ["getFleetJavaMigrationAnalysisResult","getFleetJavaMigrationAnalysisResultOutput"], () => require("./getFleetJavaMigrationAnalysisResult"));

export { GetFleetJavaMigrationAnalysisResultsArgs, GetFleetJavaMigrationAnalysisResultsResult, GetFleetJavaMigrationAnalysisResultsOutputArgs } from "./getFleetJavaMigrationAnalysisResults";
export const getFleetJavaMigrationAnalysisResults: typeof import("./getFleetJavaMigrationAnalysisResults").getFleetJavaMigrationAnalysisResults = null as any;
export const getFleetJavaMigrationAnalysisResultsOutput: typeof import("./getFleetJavaMigrationAnalysisResults").getFleetJavaMigrationAnalysisResultsOutput = null as any;
utilities.lazyLoad(exports, ["getFleetJavaMigrationAnalysisResults","getFleetJavaMigrationAnalysisResultsOutput"], () => require("./getFleetJavaMigrationAnalysisResults"));

export { GetFleetPerformanceTuningAnalysisResultArgs, GetFleetPerformanceTuningAnalysisResultResult, GetFleetPerformanceTuningAnalysisResultOutputArgs } from "./getFleetPerformanceTuningAnalysisResult";
export const getFleetPerformanceTuningAnalysisResult: typeof import("./getFleetPerformanceTuningAnalysisResult").getFleetPerformanceTuningAnalysisResult = null as any;
export const getFleetPerformanceTuningAnalysisResultOutput: typeof import("./getFleetPerformanceTuningAnalysisResult").getFleetPerformanceTuningAnalysisResultOutput = null as any;
utilities.lazyLoad(exports, ["getFleetPerformanceTuningAnalysisResult","getFleetPerformanceTuningAnalysisResultOutput"], () => require("./getFleetPerformanceTuningAnalysisResult"));

export { GetFleetPerformanceTuningAnalysisResultsArgs, GetFleetPerformanceTuningAnalysisResultsResult, GetFleetPerformanceTuningAnalysisResultsOutputArgs } from "./getFleetPerformanceTuningAnalysisResults";
export const getFleetPerformanceTuningAnalysisResults: typeof import("./getFleetPerformanceTuningAnalysisResults").getFleetPerformanceTuningAnalysisResults = null as any;
export const getFleetPerformanceTuningAnalysisResultsOutput: typeof import("./getFleetPerformanceTuningAnalysisResults").getFleetPerformanceTuningAnalysisResultsOutput = null as any;
utilities.lazyLoad(exports, ["getFleetPerformanceTuningAnalysisResults","getFleetPerformanceTuningAnalysisResultsOutput"], () => require("./getFleetPerformanceTuningAnalysisResults"));

export { GetFleetsArgs, GetFleetsResult, GetFleetsOutputArgs } from "./getFleets";
export const getFleets: typeof import("./getFleets").getFleets = null as any;
export const getFleetsOutput: typeof import("./getFleets").getFleetsOutput = null as any;
utilities.lazyLoad(exports, ["getFleets","getFleetsOutput"], () => require("./getFleets"));

export { GetInstallationSiteArgs, GetInstallationSiteResult, GetInstallationSiteOutputArgs } from "./getInstallationSite";
export const getInstallationSite: typeof import("./getInstallationSite").getInstallationSite = null as any;
export const getInstallationSiteOutput: typeof import("./getInstallationSite").getInstallationSiteOutput = null as any;
utilities.lazyLoad(exports, ["getInstallationSite","getInstallationSiteOutput"], () => require("./getInstallationSite"));

export { GetInstallationSitesArgs, GetInstallationSitesResult, GetInstallationSitesOutputArgs } from "./getInstallationSites";
export const getInstallationSites: typeof import("./getInstallationSites").getInstallationSites = null as any;
export const getInstallationSitesOutput: typeof import("./getInstallationSites").getInstallationSitesOutput = null as any;
utilities.lazyLoad(exports, ["getInstallationSites","getInstallationSitesOutput"], () => require("./getInstallationSites"));

export { GetJavaDownloadsJavaDownloadRecordsArgs, GetJavaDownloadsJavaDownloadRecordsResult, GetJavaDownloadsJavaDownloadRecordsOutputArgs } from "./getJavaDownloadsJavaDownloadRecords";
export const getJavaDownloadsJavaDownloadRecords: typeof import("./getJavaDownloadsJavaDownloadRecords").getJavaDownloadsJavaDownloadRecords = null as any;
export const getJavaDownloadsJavaDownloadRecordsOutput: typeof import("./getJavaDownloadsJavaDownloadRecords").getJavaDownloadsJavaDownloadRecordsOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaDownloadRecords","getJavaDownloadsJavaDownloadRecordsOutput"], () => require("./getJavaDownloadsJavaDownloadRecords"));

export { GetJavaDownloadsJavaDownloadReportArgs, GetJavaDownloadsJavaDownloadReportResult, GetJavaDownloadsJavaDownloadReportOutputArgs } from "./getJavaDownloadsJavaDownloadReport";
export const getJavaDownloadsJavaDownloadReport: typeof import("./getJavaDownloadsJavaDownloadReport").getJavaDownloadsJavaDownloadReport = null as any;
export const getJavaDownloadsJavaDownloadReportOutput: typeof import("./getJavaDownloadsJavaDownloadReport").getJavaDownloadsJavaDownloadReportOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaDownloadReport","getJavaDownloadsJavaDownloadReportOutput"], () => require("./getJavaDownloadsJavaDownloadReport"));

export { GetJavaDownloadsJavaDownloadReportContentArgs, GetJavaDownloadsJavaDownloadReportContentResult, GetJavaDownloadsJavaDownloadReportContentOutputArgs } from "./getJavaDownloadsJavaDownloadReportContent";
export const getJavaDownloadsJavaDownloadReportContent: typeof import("./getJavaDownloadsJavaDownloadReportContent").getJavaDownloadsJavaDownloadReportContent = null as any;
export const getJavaDownloadsJavaDownloadReportContentOutput: typeof import("./getJavaDownloadsJavaDownloadReportContent").getJavaDownloadsJavaDownloadReportContentOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaDownloadReportContent","getJavaDownloadsJavaDownloadReportContentOutput"], () => require("./getJavaDownloadsJavaDownloadReportContent"));

export { GetJavaDownloadsJavaDownloadReportsArgs, GetJavaDownloadsJavaDownloadReportsResult, GetJavaDownloadsJavaDownloadReportsOutputArgs } from "./getJavaDownloadsJavaDownloadReports";
export const getJavaDownloadsJavaDownloadReports: typeof import("./getJavaDownloadsJavaDownloadReports").getJavaDownloadsJavaDownloadReports = null as any;
export const getJavaDownloadsJavaDownloadReportsOutput: typeof import("./getJavaDownloadsJavaDownloadReports").getJavaDownloadsJavaDownloadReportsOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaDownloadReports","getJavaDownloadsJavaDownloadReportsOutput"], () => require("./getJavaDownloadsJavaDownloadReports"));

export { GetJavaDownloadsJavaDownloadTokenArgs, GetJavaDownloadsJavaDownloadTokenResult, GetJavaDownloadsJavaDownloadTokenOutputArgs } from "./getJavaDownloadsJavaDownloadToken";
export const getJavaDownloadsJavaDownloadToken: typeof import("./getJavaDownloadsJavaDownloadToken").getJavaDownloadsJavaDownloadToken = null as any;
export const getJavaDownloadsJavaDownloadTokenOutput: typeof import("./getJavaDownloadsJavaDownloadToken").getJavaDownloadsJavaDownloadTokenOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaDownloadToken","getJavaDownloadsJavaDownloadTokenOutput"], () => require("./getJavaDownloadsJavaDownloadToken"));

export { GetJavaDownloadsJavaDownloadTokensArgs, GetJavaDownloadsJavaDownloadTokensResult, GetJavaDownloadsJavaDownloadTokensOutputArgs } from "./getJavaDownloadsJavaDownloadTokens";
export const getJavaDownloadsJavaDownloadTokens: typeof import("./getJavaDownloadsJavaDownloadTokens").getJavaDownloadsJavaDownloadTokens = null as any;
export const getJavaDownloadsJavaDownloadTokensOutput: typeof import("./getJavaDownloadsJavaDownloadTokens").getJavaDownloadsJavaDownloadTokensOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaDownloadTokens","getJavaDownloadsJavaDownloadTokensOutput"], () => require("./getJavaDownloadsJavaDownloadTokens"));

export { GetJavaDownloadsJavaLicenseArgs, GetJavaDownloadsJavaLicenseResult, GetJavaDownloadsJavaLicenseOutputArgs } from "./getJavaDownloadsJavaLicense";
export const getJavaDownloadsJavaLicense: typeof import("./getJavaDownloadsJavaLicense").getJavaDownloadsJavaLicense = null as any;
export const getJavaDownloadsJavaLicenseOutput: typeof import("./getJavaDownloadsJavaLicense").getJavaDownloadsJavaLicenseOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaLicense","getJavaDownloadsJavaLicenseOutput"], () => require("./getJavaDownloadsJavaLicense"));

export { GetJavaDownloadsJavaLicenseAcceptanceRecordArgs, GetJavaDownloadsJavaLicenseAcceptanceRecordResult, GetJavaDownloadsJavaLicenseAcceptanceRecordOutputArgs } from "./getJavaDownloadsJavaLicenseAcceptanceRecord";
export const getJavaDownloadsJavaLicenseAcceptanceRecord: typeof import("./getJavaDownloadsJavaLicenseAcceptanceRecord").getJavaDownloadsJavaLicenseAcceptanceRecord = null as any;
export const getJavaDownloadsJavaLicenseAcceptanceRecordOutput: typeof import("./getJavaDownloadsJavaLicenseAcceptanceRecord").getJavaDownloadsJavaLicenseAcceptanceRecordOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaLicenseAcceptanceRecord","getJavaDownloadsJavaLicenseAcceptanceRecordOutput"], () => require("./getJavaDownloadsJavaLicenseAcceptanceRecord"));

export { GetJavaDownloadsJavaLicenseAcceptanceRecordsArgs, GetJavaDownloadsJavaLicenseAcceptanceRecordsResult, GetJavaDownloadsJavaLicenseAcceptanceRecordsOutputArgs } from "./getJavaDownloadsJavaLicenseAcceptanceRecords";
export const getJavaDownloadsJavaLicenseAcceptanceRecords: typeof import("./getJavaDownloadsJavaLicenseAcceptanceRecords").getJavaDownloadsJavaLicenseAcceptanceRecords = null as any;
export const getJavaDownloadsJavaLicenseAcceptanceRecordsOutput: typeof import("./getJavaDownloadsJavaLicenseAcceptanceRecords").getJavaDownloadsJavaLicenseAcceptanceRecordsOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaLicenseAcceptanceRecords","getJavaDownloadsJavaLicenseAcceptanceRecordsOutput"], () => require("./getJavaDownloadsJavaLicenseAcceptanceRecords"));

export { GetJavaDownloadsJavaLicensesArgs, GetJavaDownloadsJavaLicensesResult, GetJavaDownloadsJavaLicensesOutputArgs } from "./getJavaDownloadsJavaLicenses";
export const getJavaDownloadsJavaLicenses: typeof import("./getJavaDownloadsJavaLicenses").getJavaDownloadsJavaLicenses = null as any;
export const getJavaDownloadsJavaLicensesOutput: typeof import("./getJavaDownloadsJavaLicenses").getJavaDownloadsJavaLicensesOutput = null as any;
utilities.lazyLoad(exports, ["getJavaDownloadsJavaLicenses","getJavaDownloadsJavaLicensesOutput"], () => require("./getJavaDownloadsJavaLicenses"));

export { GetJavaFamiliesArgs, GetJavaFamiliesResult, GetJavaFamiliesOutputArgs } from "./getJavaFamilies";
export const getJavaFamilies: typeof import("./getJavaFamilies").getJavaFamilies = null as any;
export const getJavaFamiliesOutput: typeof import("./getJavaFamilies").getJavaFamiliesOutput = null as any;
utilities.lazyLoad(exports, ["getJavaFamilies","getJavaFamiliesOutput"], () => require("./getJavaFamilies"));

export { GetJavaFamilyArgs, GetJavaFamilyResult, GetJavaFamilyOutputArgs } from "./getJavaFamily";
export const getJavaFamily: typeof import("./getJavaFamily").getJavaFamily = null as any;
export const getJavaFamilyOutput: typeof import("./getJavaFamily").getJavaFamilyOutput = null as any;
utilities.lazyLoad(exports, ["getJavaFamily","getJavaFamilyOutput"], () => require("./getJavaFamily"));

export { GetJavaReleaseArgs, GetJavaReleaseResult, GetJavaReleaseOutputArgs } from "./getJavaRelease";
export const getJavaRelease: typeof import("./getJavaRelease").getJavaRelease = null as any;
export const getJavaReleaseOutput: typeof import("./getJavaRelease").getJavaReleaseOutput = null as any;
utilities.lazyLoad(exports, ["getJavaRelease","getJavaReleaseOutput"], () => require("./getJavaRelease"));

export { GetJavaReleasesArgs, GetJavaReleasesResult, GetJavaReleasesOutputArgs } from "./getJavaReleases";
export const getJavaReleases: typeof import("./getJavaReleases").getJavaReleases = null as any;
export const getJavaReleasesOutput: typeof import("./getJavaReleases").getJavaReleasesOutput = null as any;
utilities.lazyLoad(exports, ["getJavaReleases","getJavaReleasesOutput"], () => require("./getJavaReleases"));

export { GetListJreUsageArgs, GetListJreUsageResult, GetListJreUsageOutputArgs } from "./getListJreUsage";
export const getListJreUsage: typeof import("./getListJreUsage").getListJreUsage = null as any;
export const getListJreUsageOutput: typeof import("./getListJreUsage").getListJreUsageOutput = null as any;
utilities.lazyLoad(exports, ["getListJreUsage","getListJreUsageOutput"], () => require("./getListJreUsage"));

export { GetSummarizeResourceInventoryArgs, GetSummarizeResourceInventoryResult, GetSummarizeResourceInventoryOutputArgs } from "./getSummarizeResourceInventory";
export const getSummarizeResourceInventory: typeof import("./getSummarizeResourceInventory").getSummarizeResourceInventory = null as any;
export const getSummarizeResourceInventoryOutput: typeof import("./getSummarizeResourceInventory").getSummarizeResourceInventoryOutput = null as any;
utilities.lazyLoad(exports, ["getSummarizeResourceInventory","getSummarizeResourceInventoryOutput"], () => require("./getSummarizeResourceInventory"));

export { JavaDownloadsJavaDownloadReportArgs, JavaDownloadsJavaDownloadReportState } from "./javaDownloadsJavaDownloadReport";
export type JavaDownloadsJavaDownloadReport = import("./javaDownloadsJavaDownloadReport").JavaDownloadsJavaDownloadReport;
export const JavaDownloadsJavaDownloadReport: typeof import("./javaDownloadsJavaDownloadReport").JavaDownloadsJavaDownloadReport = null as any;
utilities.lazyLoad(exports, ["JavaDownloadsJavaDownloadReport"], () => require("./javaDownloadsJavaDownloadReport"));

export { JavaDownloadsJavaDownloadTokenArgs, JavaDownloadsJavaDownloadTokenState } from "./javaDownloadsJavaDownloadToken";
export type JavaDownloadsJavaDownloadToken = import("./javaDownloadsJavaDownloadToken").JavaDownloadsJavaDownloadToken;
export const JavaDownloadsJavaDownloadToken: typeof import("./javaDownloadsJavaDownloadToken").JavaDownloadsJavaDownloadToken = null as any;
utilities.lazyLoad(exports, ["JavaDownloadsJavaDownloadToken"], () => require("./javaDownloadsJavaDownloadToken"));

export { JavaDownloadsJavaLicenseAcceptanceRecordArgs, JavaDownloadsJavaLicenseAcceptanceRecordState } from "./javaDownloadsJavaLicenseAcceptanceRecord";
export type JavaDownloadsJavaLicenseAcceptanceRecord = import("./javaDownloadsJavaLicenseAcceptanceRecord").JavaDownloadsJavaLicenseAcceptanceRecord;
export const JavaDownloadsJavaLicenseAcceptanceRecord: typeof import("./javaDownloadsJavaLicenseAcceptanceRecord").JavaDownloadsJavaLicenseAcceptanceRecord = null as any;
utilities.lazyLoad(exports, ["JavaDownloadsJavaLicenseAcceptanceRecord"], () => require("./javaDownloadsJavaLicenseAcceptanceRecord"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Jms/fleet:Fleet":
                return new Fleet(name, <any>undefined, { urn })
            case "oci:Jms/fleetAdvancedFeatureConfiguration:FleetAdvancedFeatureConfiguration":
                return new FleetAdvancedFeatureConfiguration(name, <any>undefined, { urn })
            case "oci:Jms/javaDownloadsJavaDownloadReport:JavaDownloadsJavaDownloadReport":
                return new JavaDownloadsJavaDownloadReport(name, <any>undefined, { urn })
            case "oci:Jms/javaDownloadsJavaDownloadToken:JavaDownloadsJavaDownloadToken":
                return new JavaDownloadsJavaDownloadToken(name, <any>undefined, { urn })
            case "oci:Jms/javaDownloadsJavaLicenseAcceptanceRecord:JavaDownloadsJavaLicenseAcceptanceRecord":
                return new JavaDownloadsJavaLicenseAcceptanceRecord(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Jms/fleet", _module)
pulumi.runtime.registerResourceModule("oci", "Jms/fleetAdvancedFeatureConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "Jms/javaDownloadsJavaDownloadReport", _module)
pulumi.runtime.registerResourceModule("oci", "Jms/javaDownloadsJavaDownloadToken", _module)
pulumi.runtime.registerResourceModule("oci", "Jms/javaDownloadsJavaLicenseAcceptanceRecord", _module)
