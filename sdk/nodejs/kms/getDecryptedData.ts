// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The `oci.Kms.getDecryptedData` data source provides details about a specific DecryptedData
 *
 * Decrypts data using the given DecryptDataDetails resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDecryptedData = oci.Kms.getDecryptedData({
 *     ciphertext: decryptedDataCiphertext,
 *     cryptoEndpoint: decryptedDataCryptoEndpoint,
 *     keyId: testKey.id,
 *     associatedData: decryptedDataAssociatedData,
 * });
 * ```
 */
export function getDecryptedData(args: GetDecryptedDataArgs, opts?: pulumi.InvokeOptions): Promise<GetDecryptedDataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Kms/getDecryptedData:getDecryptedData", {
        "associatedData": args.associatedData,
        "ciphertext": args.ciphertext,
        "cryptoEndpoint": args.cryptoEndpoint,
        "keyId": args.keyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDecryptedData.
 */
export interface GetDecryptedDataArgs {
    /**
     * Information that can be used to provide an encryption context for the  encrypted data. The length of the string representation of the associatedData must be fewer than 4096 characters.
     */
    associatedData?: {[key: string]: string};
    /**
     * The encrypted data to decrypt.
     */
    ciphertext: string;
    /**
     * The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
     */
    cryptoEndpoint: string;
    /**
     * The OCID of the key used to encrypt the ciphertext.
     */
    keyId: string;
}

/**
 * A collection of values returned by getDecryptedData.
 */
export interface GetDecryptedDataResult {
    readonly associatedData?: {[key: string]: string};
    readonly ciphertext: string;
    readonly cryptoEndpoint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyId: string;
    /**
     * The decrypted data, in the form of a base64-encoded value.
     */
    readonly plaintext: string;
    /**
     * Checksum of the decrypted data.
     */
    readonly plaintextChecksum: string;
}
/**
 * The `oci.Kms.getDecryptedData` data source provides details about a specific DecryptedData
 *
 * Decrypts data using the given DecryptDataDetails resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDecryptedData = oci.Kms.getDecryptedData({
 *     ciphertext: decryptedDataCiphertext,
 *     cryptoEndpoint: decryptedDataCryptoEndpoint,
 *     keyId: testKey.id,
 *     associatedData: decryptedDataAssociatedData,
 * });
 * ```
 */
export function getDecryptedDataOutput(args: GetDecryptedDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDecryptedDataResult> {
    return pulumi.output(args).apply((a: any) => getDecryptedData(a, opts))
}

/**
 * A collection of arguments for invoking getDecryptedData.
 */
export interface GetDecryptedDataOutputArgs {
    /**
     * Information that can be used to provide an encryption context for the  encrypted data. The length of the string representation of the associatedData must be fewer than 4096 characters.
     */
    associatedData?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The encrypted data to decrypt.
     */
    ciphertext: pulumi.Input<string>;
    /**
     * The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
     */
    cryptoEndpoint: pulumi.Input<string>;
    /**
     * The OCID of the key used to encrypt the ciphertext.
     */
    keyId: pulumi.Input<string>;
}
