// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Ekms Private Endpoint resource in Oracle Cloud Infrastructure Kms service.
 *
 * Gets a specific EKMS private by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEkmsPrivateEndpoint = oci.Kms.getEkmsPrivateEndpoint({
 *     ekmsPrivateEndpointId: testEkmsPrivateEndpointOciKmsEkmsPrivateEndpoint.id,
 * });
 * ```
 */
export function getEkmsPrivateEndpoint(args: GetEkmsPrivateEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetEkmsPrivateEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Kms/getEkmsPrivateEndpoint:getEkmsPrivateEndpoint", {
        "ekmsPrivateEndpointId": args.ekmsPrivateEndpointId,
    }, opts);
}

/**
 * A collection of arguments for invoking getEkmsPrivateEndpoint.
 */
export interface GetEkmsPrivateEndpointArgs {
    /**
     * Unique EKMS private endpoint identifier.
     */
    ekmsPrivateEndpointId: string;
}

/**
 * A collection of values returned by getEkmsPrivateEndpoint.
 */
export interface GetEkmsPrivateEndpointResult {
    /**
     * CABundle to validate TLS certificate of the external key manager system in PEM format
     */
    readonly caBundle: string;
    /**
     * Identifier of the compartment this EKMS private endpoint belongs to
     */
    readonly compartmentId: string;
    /**
     * Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Mutable name of the EKMS private endpoint
     */
    readonly displayName: string;
    readonly ekmsPrivateEndpointId: string;
    /**
     * Private IP of the external key manager system to connect to from the EKMS private endpoint
     */
    readonly externalKeyManagerIp: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * Unique identifier that is immutable
     */
    readonly id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in 'Failed' state.
     */
    readonly lifecycleDetails: string;
    /**
     * The port of the external key manager system
     */
    readonly port: number;
    /**
     * The IP address in the customer's VCN for the EKMS private endpoint. This is taken from subnet
     */
    readonly privateEndpointIp: string;
    /**
     * The current state of the EKMS private endpoint resource.
     */
    readonly state: string;
    /**
     * Subnet Identifier
     */
    readonly subnetId: string;
    /**
     * The time the EKMS private endpoint was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time the EKMS private endpoint was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Ekms Private Endpoint resource in Oracle Cloud Infrastructure Kms service.
 *
 * Gets a specific EKMS private by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEkmsPrivateEndpoint = oci.Kms.getEkmsPrivateEndpoint({
 *     ekmsPrivateEndpointId: testEkmsPrivateEndpointOciKmsEkmsPrivateEndpoint.id,
 * });
 * ```
 */
export function getEkmsPrivateEndpointOutput(args: GetEkmsPrivateEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEkmsPrivateEndpointResult> {
    return pulumi.output(args).apply((a: any) => getEkmsPrivateEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getEkmsPrivateEndpoint.
 */
export interface GetEkmsPrivateEndpointOutputArgs {
    /**
     * Unique EKMS private endpoint identifier.
     */
    ekmsPrivateEndpointId: pulumi.Input<string>;
}
