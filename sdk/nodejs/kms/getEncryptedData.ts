// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The `oci.Kms.EncryptedData` data source provides details about a specific EncryptedData
 *
 * Encrypts data using the given EncryptDataDetails resource.
 * Plaintext included in the example request is a base64-encoded value
 * of a UTF-8 string.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEncryptedData = oci.Kms.getEncryptedData({
 *     cryptoEndpoint: encryptedDataCryptoEndpoint,
 *     keyId: testKey.id,
 *     plaintext: encryptedDataPlaintext,
 *     associatedData: encryptedDataAssociatedData,
 * });
 * ```
 */
export function getEncryptedData(args: GetEncryptedDataArgs, opts?: pulumi.InvokeOptions): Promise<GetEncryptedDataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Kms/getEncryptedData:getEncryptedData", {
        "associatedData": args.associatedData,
        "cryptoEndpoint": args.cryptoEndpoint,
        "keyId": args.keyId,
        "plaintext": args.plaintext,
    }, opts);
}

/**
 * A collection of arguments for invoking getEncryptedData.
 */
export interface GetEncryptedDataArgs {
    /**
     * Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associatedData must be fewer than 4096 characters.
     */
    associatedData?: {[key: string]: string};
    /**
     * The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
     */
    cryptoEndpoint: string;
    /**
     * The OCID of the key to encrypt with.
     */
    keyId: string;
    /**
     * The plaintext data to encrypt.
     */
    plaintext: string;
}

/**
 * A collection of values returned by getEncryptedData.
 */
export interface GetEncryptedDataResult {
    readonly associatedData?: {[key: string]: string};
    /**
     * The encrypted data.
     */
    readonly ciphertext: string;
    readonly cryptoEndpoint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyId: string;
    readonly plaintext: string;
}
/**
 * The `oci.Kms.EncryptedData` data source provides details about a specific EncryptedData
 *
 * Encrypts data using the given EncryptDataDetails resource.
 * Plaintext included in the example request is a base64-encoded value
 * of a UTF-8 string.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEncryptedData = oci.Kms.getEncryptedData({
 *     cryptoEndpoint: encryptedDataCryptoEndpoint,
 *     keyId: testKey.id,
 *     plaintext: encryptedDataPlaintext,
 *     associatedData: encryptedDataAssociatedData,
 * });
 * ```
 */
export function getEncryptedDataOutput(args: GetEncryptedDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEncryptedDataResult> {
    return pulumi.output(args).apply((a: any) => getEncryptedData(a, opts))
}

/**
 * A collection of arguments for invoking getEncryptedData.
 */
export interface GetEncryptedDataOutputArgs {
    /**
     * Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associatedData must be fewer than 4096 characters.
     */
    associatedData?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The service endpoint to perform cryptographic operations against. Cryptographic operations include 'Encrypt,' 'Decrypt,' and 'GenerateDataEncryptionKey' operations. see Vault Crypto endpoint.
     */
    cryptoEndpoint: pulumi.Input<string>;
    /**
     * The OCID of the key to encrypt with.
     */
    keyId: pulumi.Input<string>;
    /**
     * The plaintext data to encrypt.
     */
    plaintext: pulumi.Input<string>;
}
