// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Replication Status resource in Oracle Cloud Infrastructure Kms service.
 *
 * When a vault has a replica, each operation on the vault or its resources, such as
 * keys, is replicated and has an associated replicationId. Replication status provides
 * details about whether the operation associated with the given replicationId has been
 * successfully applied across replicas.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReplicationStatus = oci.Kms.getReplicationStatus({
 *     replicationId: testReplication.id,
 *     managementEndpoint: replicationStatusManagementEndpoint,
 * });
 * ```
 */
export function getReplicationStatus(args: GetReplicationStatusArgs, opts?: pulumi.InvokeOptions): Promise<GetReplicationStatusResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Kms/getReplicationStatus:getReplicationStatus", {
        "managementEndpoint": args.managementEndpoint,
        "replicationId": args.replicationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getReplicationStatus.
 */
export interface GetReplicationStatusArgs {
    /**
     * The service endpoint to perform management operations against. See Vault Management endpoint.
     */
    managementEndpoint: string;
    /**
     * replicationId associated with an operation on a resource
     */
    replicationId: string;
}

/**
 * A collection of values returned by getReplicationStatus.
 */
export interface GetReplicationStatusResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managementEndpoint: string;
    /**
     * Replica Details.
     */
    readonly replicaDetails: outputs.Kms.GetReplicationStatusReplicaDetail[];
    readonly replicationId: string;
}
/**
 * This data source provides details about a specific Replication Status resource in Oracle Cloud Infrastructure Kms service.
 *
 * When a vault has a replica, each operation on the vault or its resources, such as
 * keys, is replicated and has an associated replicationId. Replication status provides
 * details about whether the operation associated with the given replicationId has been
 * successfully applied across replicas.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReplicationStatus = oci.Kms.getReplicationStatus({
 *     replicationId: testReplication.id,
 *     managementEndpoint: replicationStatusManagementEndpoint,
 * });
 * ```
 */
export function getReplicationStatusOutput(args: GetReplicationStatusOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetReplicationStatusResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Kms/getReplicationStatus:getReplicationStatus", {
        "managementEndpoint": args.managementEndpoint,
        "replicationId": args.replicationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getReplicationStatus.
 */
export interface GetReplicationStatusOutputArgs {
    /**
     * The service endpoint to perform management operations against. See Vault Management endpoint.
     */
    managementEndpoint: pulumi.Input<string>;
    /**
     * replicationId associated with an operation on a resource
     */
    replicationId: pulumi.Input<string>;
}
