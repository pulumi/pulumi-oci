// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Key resource in Oracle Cloud Infrastructure Kms service.
 *
 * Creates a new master encryption key.
 *
 * As a management operation, this call is subject to a Key Management limit that applies to the total
 * number of requests across all management write operations. Key Management might throttle this call
 * to reject an otherwise valid request when the total rate of management write operations exceeds 10
 * requests per second for a given tenancy.
 *
 * ## Import
 *
 * Keys can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Kms/key:Key test_key "managementEndpoint/{managementEndpoint}/keys/{keyId}"
 * ```
 */
export class Key extends pulumi.CustomResource {
    /**
     * Get an existing Key resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KeyState, opts?: pulumi.CustomResourceOptions): Key {
        return new Key(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Kms/key:Key';

    /**
     * Returns true if the given object is an instance of Key.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Key {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Key.__pulumiType;
    }

    /**
     * (Updatable) The details of auto rotation schedule for the Key being create updated or imported.
     */
    declare public readonly autoKeyRotationDetails: pulumi.Output<outputs.Kms.KeyAutoKeyRotationDetails>;
    /**
     * (Updatable) The OCID of the compartment where you want to create the master encryption key.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
     */
    declare public /*out*/ readonly currentKeyVersion: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Desired state of the key. Possible values : `ENABLED` or `DISABLED`
     */
    declare public readonly desiredState: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * A reference to the key on external key manager.
     */
    declare public readonly externalKeyReference: pulumi.Output<outputs.Kms.KeyExternalKeyReference>;
    /**
     * Key reference data to be returned to the customer as a response.
     */
    declare public /*out*/ readonly externalKeyReferenceDetails: pulumi.Output<outputs.Kms.KeyExternalKeyReferenceDetail[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A parameter specifying whether the auto key rotation is enabled or not.
     */
    declare public readonly isAutoRotationEnabled: pulumi.Output<boolean>;
    /**
     * A Boolean value that indicates whether the Key belongs to primary Vault or replica vault.
     */
    declare public /*out*/ readonly isPrimary: pulumi.Output<boolean>;
    /**
     * The cryptographic properties of a key.
     */
    declare public readonly keyShape: pulumi.Output<outputs.Kms.KeyKeyShape>;
    /**
     * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
     */
    declare public readonly managementEndpoint: pulumi.Output<string>;
    /**
     * The key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default, a key's protection mode is set to `HSM`. You can't change a key's protection mode after the key is created or imported. A protection mode of `EXTERNAL` mean that the key persists on the customer's external key manager which is hosted externally outside of oracle. Oracle only hold a reference to that key. All cryptographic operations that use a key with a protection mode of `EXTERNAL` are performed by external key manager.
     */
    declare public readonly protectionMode: pulumi.Output<string>;
    /**
     * Key replica details
     */
    declare public /*out*/ readonly replicaDetails: pulumi.Output<outputs.Kms.KeyReplicaDetail[]>;
    /**
     * (Updatable) Details where key was backed up.
     */
    declare public readonly restoreFromFile: pulumi.Output<outputs.Kms.KeyRestoreFromFile | undefined>;
    /**
     * (Updatable) Details where key was backed up
     */
    declare public readonly restoreFromObjectStore: pulumi.Output<outputs.Kms.KeyRestoreFromObjectStore | undefined>;
    /**
     * (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     */
    declare public readonly restoreTrigger: pulumi.Output<boolean | undefined>;
    /**
     * The OCID of the key from which this key was restored.
     */
    declare public /*out*/ readonly restoredFromKeyId: pulumi.Output<string>;
    /**
     * The key's current lifecycle state.  Example: `ENABLED`
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * (Updatable) An optional property for the deletion time of the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly timeOfDeletion: pulumi.Output<string>;
    /**
     * The OCID of the vault that contains this key.
     */
    declare public /*out*/ readonly vaultId: pulumi.Output<string>;

    /**
     * Create a Key resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KeyArgs | KeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KeyState | undefined;
            resourceInputs["autoKeyRotationDetails"] = state?.autoKeyRotationDetails;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["currentKeyVersion"] = state?.currentKeyVersion;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["desiredState"] = state?.desiredState;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["externalKeyReference"] = state?.externalKeyReference;
            resourceInputs["externalKeyReferenceDetails"] = state?.externalKeyReferenceDetails;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["isAutoRotationEnabled"] = state?.isAutoRotationEnabled;
            resourceInputs["isPrimary"] = state?.isPrimary;
            resourceInputs["keyShape"] = state?.keyShape;
            resourceInputs["managementEndpoint"] = state?.managementEndpoint;
            resourceInputs["protectionMode"] = state?.protectionMode;
            resourceInputs["replicaDetails"] = state?.replicaDetails;
            resourceInputs["restoreFromFile"] = state?.restoreFromFile;
            resourceInputs["restoreFromObjectStore"] = state?.restoreFromObjectStore;
            resourceInputs["restoreTrigger"] = state?.restoreTrigger;
            resourceInputs["restoredFromKeyId"] = state?.restoredFromKeyId;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeOfDeletion"] = state?.timeOfDeletion;
            resourceInputs["vaultId"] = state?.vaultId;
        } else {
            const args = argsOrState as KeyArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.keyShape === undefined && !opts.urn) {
                throw new Error("Missing required property 'keyShape'");
            }
            if (args?.managementEndpoint === undefined && !opts.urn) {
                throw new Error("Missing required property 'managementEndpoint'");
            }
            resourceInputs["autoKeyRotationDetails"] = args?.autoKeyRotationDetails;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["desiredState"] = args?.desiredState;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["externalKeyReference"] = args?.externalKeyReference;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["isAutoRotationEnabled"] = args?.isAutoRotationEnabled;
            resourceInputs["keyShape"] = args?.keyShape;
            resourceInputs["managementEndpoint"] = args?.managementEndpoint;
            resourceInputs["protectionMode"] = args?.protectionMode;
            resourceInputs["restoreFromFile"] = args?.restoreFromFile;
            resourceInputs["restoreFromObjectStore"] = args?.restoreFromObjectStore;
            resourceInputs["restoreTrigger"] = args?.restoreTrigger;
            resourceInputs["timeOfDeletion"] = args?.timeOfDeletion;
            resourceInputs["currentKeyVersion"] = undefined /*out*/;
            resourceInputs["externalKeyReferenceDetails"] = undefined /*out*/;
            resourceInputs["isPrimary"] = undefined /*out*/;
            resourceInputs["replicaDetails"] = undefined /*out*/;
            resourceInputs["restoredFromKeyId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["vaultId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Key.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Key resources.
 */
export interface KeyState {
    /**
     * (Updatable) The details of auto rotation schedule for the Key being create updated or imported.
     */
    autoKeyRotationDetails?: pulumi.Input<inputs.Kms.KeyAutoKeyRotationDetails>;
    /**
     * (Updatable) The OCID of the compartment where you want to create the master encryption key.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
     */
    currentKeyVersion?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Desired state of the key. Possible values : `ENABLED` or `DISABLED`
     */
    desiredState?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A reference to the key on external key manager.
     */
    externalKeyReference?: pulumi.Input<inputs.Kms.KeyExternalKeyReference>;
    /**
     * Key reference data to be returned to the customer as a response.
     */
    externalKeyReferenceDetails?: pulumi.Input<pulumi.Input<inputs.Kms.KeyExternalKeyReferenceDetail>[]>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A parameter specifying whether the auto key rotation is enabled or not.
     */
    isAutoRotationEnabled?: pulumi.Input<boolean>;
    /**
     * A Boolean value that indicates whether the Key belongs to primary Vault or replica vault.
     */
    isPrimary?: pulumi.Input<boolean>;
    /**
     * The cryptographic properties of a key.
     */
    keyShape?: pulumi.Input<inputs.Kms.KeyKeyShape>;
    /**
     * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
     */
    managementEndpoint?: pulumi.Input<string>;
    /**
     * The key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default, a key's protection mode is set to `HSM`. You can't change a key's protection mode after the key is created or imported. A protection mode of `EXTERNAL` mean that the key persists on the customer's external key manager which is hosted externally outside of oracle. Oracle only hold a reference to that key. All cryptographic operations that use a key with a protection mode of `EXTERNAL` are performed by external key manager.
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * Key replica details
     */
    replicaDetails?: pulumi.Input<pulumi.Input<inputs.Kms.KeyReplicaDetail>[]>;
    /**
     * (Updatable) Details where key was backed up.
     */
    restoreFromFile?: pulumi.Input<inputs.Kms.KeyRestoreFromFile>;
    /**
     * (Updatable) Details where key was backed up
     */
    restoreFromObjectStore?: pulumi.Input<inputs.Kms.KeyRestoreFromObjectStore>;
    /**
     * (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     */
    restoreTrigger?: pulumi.Input<boolean>;
    /**
     * The OCID of the key from which this key was restored.
     */
    restoredFromKeyId?: pulumi.Input<string>;
    /**
     * The key's current lifecycle state.  Example: `ENABLED`
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) An optional property for the deletion time of the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeOfDeletion?: pulumi.Input<string>;
    /**
     * The OCID of the vault that contains this key.
     */
    vaultId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Key resource.
 */
export interface KeyArgs {
    /**
     * (Updatable) The details of auto rotation schedule for the Key being create updated or imported.
     */
    autoKeyRotationDetails?: pulumi.Input<inputs.Kms.KeyAutoKeyRotationDetails>;
    /**
     * (Updatable) The OCID of the compartment where you want to create the master encryption key.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Desired state of the key. Possible values : `ENABLED` or `DISABLED`
     */
    desiredState?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * A reference to the key on external key manager.
     */
    externalKeyReference?: pulumi.Input<inputs.Kms.KeyExternalKeyReference>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A parameter specifying whether the auto key rotation is enabled or not.
     */
    isAutoRotationEnabled?: pulumi.Input<boolean>;
    /**
     * The cryptographic properties of a key.
     */
    keyShape: pulumi.Input<inputs.Kms.KeyKeyShape>;
    /**
     * The service endpoint to perform management operations against. Management operations include 'Create,' 'Update,' 'List,' 'Get,' and 'Delete' operations. See Vault Management endpoint.
     */
    managementEndpoint: pulumi.Input<string>;
    /**
     * The key's protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault's RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default, a key's protection mode is set to `HSM`. You can't change a key's protection mode after the key is created or imported. A protection mode of `EXTERNAL` mean that the key persists on the customer's external key manager which is hosted externally outside of oracle. Oracle only hold a reference to that key. All cryptographic operations that use a key with a protection mode of `EXTERNAL` are performed by external key manager.
     */
    protectionMode?: pulumi.Input<string>;
    /**
     * (Updatable) Details where key was backed up.
     */
    restoreFromFile?: pulumi.Input<inputs.Kms.KeyRestoreFromFile>;
    /**
     * (Updatable) Details where key was backed up
     */
    restoreFromObjectStore?: pulumi.Input<inputs.Kms.KeyRestoreFromObjectStore>;
    /**
     * (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     */
    restoreTrigger?: pulumi.Input<boolean>;
    /**
     * (Updatable) An optional property for the deletion time of the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeOfDeletion?: pulumi.Input<string>;
}
