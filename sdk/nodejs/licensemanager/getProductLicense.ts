// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Product License resource in Oracle Cloud Infrastructure License Manager service.
 *
 * Retrieves product license details by product license ID in a given compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProductLicense = oci.LicenseManager.getProductLicense({
 *     productLicenseId: testProductLicenseOciLicenseManagerProductLicense.id,
 * });
 * ```
 */
export function getProductLicense(args: GetProductLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetProductLicenseResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:LicenseManager/getProductLicense:getProductLicense", {
        "productLicenseId": args.productLicenseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProductLicense.
 */
export interface GetProductLicenseArgs {
    /**
     * Unique product license identifier.
     */
    productLicenseId: string;
}

/**
 * A collection of values returned by getProductLicense.
 */
export interface GetProductLicenseResult {
    /**
     * The number of active license records associated with the product license.
     */
    readonly activeLicenseRecordCount: number;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the product license is created.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * License record name
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The image ID associated with the product license.
     */
    readonly id: string;
    /**
     * The images associated with the product license.
     */
    readonly images: outputs.LicenseManager.GetProductLicenseImage[];
    /**
     * Specifies whether or not the product license is oversubscribed.
     */
    readonly isOverSubscribed: boolean;
    /**
     * Specifies if the license unit count is unlimited.
     */
    readonly isUnlimited: boolean;
    /**
     * Specifies whether the vendor is Oracle or a third party.
     */
    readonly isVendorOracle: boolean;
    /**
     * The product license unit.
     */
    readonly licenseUnit: string;
    readonly productLicenseId: string;
    /**
     * The current product license state.
     */
    readonly state: string;
    /**
     * The current product license status.
     */
    readonly status: string;
    /**
     * Status description for the current product license status.
     */
    readonly statusDescription: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The time the product license was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time the product license was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     */
    readonly timeUpdated: string;
    /**
     * The total number of licenses available for the product license, calculated by adding up all the license counts for active license records associated with the product license.
     */
    readonly totalActiveLicenseUnitCount: number;
    /**
     * The number of license records associated with the product license.
     */
    readonly totalLicenseRecordCount: number;
    /**
     * The number of license units consumed. Updated after each allocation run.
     */
    readonly totalLicenseUnitsConsumed: number;
    /**
     * The vendor of the ProductLicense
     */
    readonly vendorName: string;
}
/**
 * This data source provides details about a specific Product License resource in Oracle Cloud Infrastructure License Manager service.
 *
 * Retrieves product license details by product license ID in a given compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProductLicense = oci.LicenseManager.getProductLicense({
 *     productLicenseId: testProductLicenseOciLicenseManagerProductLicense.id,
 * });
 * ```
 */
export function getProductLicenseOutput(args: GetProductLicenseOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProductLicenseResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:LicenseManager/getProductLicense:getProductLicense", {
        "productLicenseId": args.productLicenseId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProductLicense.
 */
export interface GetProductLicenseOutputArgs {
    /**
     * Unique product license identifier.
     */
    productLicenseId: pulumi.Input<string>;
}
