// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Top Utilized Resources in Oracle Cloud Infrastructure License Manager service.
 *
 * Retrieves the top utilized resources for a given compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testTopUtilizedResources = oci.LicenseManager.getTopUtilizedResources({
 *     compartmentId: _var.compartment_id,
 *     isCompartmentIdInSubtree: _var.top_utilized_resource_is_compartment_id_in_subtree,
 *     resourceUnitType: _var.top_utilized_resource_resource_unit_type,
 * });
 * ```
 */
export function getTopUtilizedResources(args: GetTopUtilizedResourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetTopUtilizedResourcesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:LicenseManager/getTopUtilizedResources:getTopUtilizedResources", {
        "compartmentId": args.compartmentId,
        "isCompartmentIdInSubtree": args.isCompartmentIdInSubtree,
        "resourceUnitType": args.resourceUnitType,
    }, opts);
}

/**
 * A collection of arguments for invoking getTopUtilizedResources.
 */
export interface GetTopUtilizedResourcesArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) used for the license record, product license, and configuration.
     */
    compartmentId: string;
    /**
     * Indicates if the given compartment is the root compartment.
     */
    isCompartmentIdInSubtree?: boolean;
    /**
     * A filter to return only resources whose unit matches the given resource unit.
     */
    resourceUnitType?: string;
}

/**
 * A collection of values returned by getTopUtilizedResources.
 */
export interface GetTopUtilizedResourcesResult {
    readonly compartmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isCompartmentIdInSubtree?: boolean;
    /**
     * The top utilized resource summary collection.
     */
    readonly items: outputs.LicenseManager.GetTopUtilizedResourcesItem[];
    readonly resourceUnitType?: string;
}

export function getTopUtilizedResourcesOutput(args: GetTopUtilizedResourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTopUtilizedResourcesResult> {
    return pulumi.output(args).apply(a => getTopUtilizedResources(a, opts))
}

/**
 * A collection of arguments for invoking getTopUtilizedResources.
 */
export interface GetTopUtilizedResourcesOutputArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) used for the license record, product license, and configuration.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Indicates if the given compartment is the root compartment.
     */
    isCompartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * A filter to return only resources whose unit matches the given resource unit.
     */
    resourceUnitType?: pulumi.Input<string>;
}
