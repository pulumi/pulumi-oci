// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the License Record resource in Oracle Cloud Infrastructure License Manager service.
 *
 * Creates a new license record for the given product license ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLicenseRecord = new oci.licensemanager.LicenseRecord("testLicenseRecord", {
 *     displayName: _var.license_record_display_name,
 *     isPerpetual: _var.license_record_is_perpetual,
 *     isUnlimited: _var.license_record_is_unlimited,
 *     productLicenseId: oci_license_manager_product_license.test_product_license.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     expirationDate: _var.license_record_expiration_date,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     licenseCount: _var.license_record_license_count,
 *     productId: oci_license_manager_product.test_product.id,
 *     supportEndDate: _var.license_record_support_end_date,
 * });
 * ```
 *
 * ## Import
 *
 * LicenseRecords can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:LicenseManager/licenseRecord:LicenseRecord test_license_record "id"
 * ```
 */
export class LicenseRecord extends pulumi.CustomResource {
    /**
     * Get an existing LicenseRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LicenseRecordState, opts?: pulumi.CustomResourceOptions): LicenseRecord {
        return new LicenseRecord(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LicenseManager/licenseRecord:LicenseRecord';

    /**
     * Returns true if the given object is an instance of LicenseRecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LicenseRecord {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LicenseRecord.__pulumiType;
    }

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the license record is created.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) License record name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     */
    public readonly expirationDate!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Specifies if the license record term is perpertual.
     */
    public readonly isPerpetual!: pulumi.Output<boolean>;
    /**
     * (Updatable) Specifies if the license count is unlimited.
     */
    public readonly isUnlimited!: pulumi.Output<boolean>;
    /**
     * (Updatable) The number of license units added by a user in a license record. Default 1
     */
    public readonly licenseCount!: pulumi.Output<number>;
    /**
     * The product license unit.
     */
    public /*out*/ readonly licenseUnit!: pulumi.Output<string>;
    /**
     * (Updatable) The license record product ID.
     */
    public readonly productId!: pulumi.Output<string>;
    /**
     * The product license name with which the license record is associated.
     */
    public /*out*/ readonly productLicense!: pulumi.Output<string>;
    /**
     * Unique product license identifier.
     */
    public readonly productLicenseId!: pulumi.Output<string>;
    /**
     * The current license record state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly supportEndDate!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The time the license record was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the license record was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a LicenseRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LicenseRecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LicenseRecordArgs | LicenseRecordState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LicenseRecordState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isPerpetual"] = state ? state.isPerpetual : undefined;
            resourceInputs["isUnlimited"] = state ? state.isUnlimited : undefined;
            resourceInputs["licenseCount"] = state ? state.licenseCount : undefined;
            resourceInputs["licenseUnit"] = state ? state.licenseUnit : undefined;
            resourceInputs["productId"] = state ? state.productId : undefined;
            resourceInputs["productLicense"] = state ? state.productLicense : undefined;
            resourceInputs["productLicenseId"] = state ? state.productLicenseId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["supportEndDate"] = state ? state.supportEndDate : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as LicenseRecordArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.isPerpetual === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isPerpetual'");
            }
            if ((!args || args.isUnlimited === undefined) && !opts.urn) {
                throw new Error("Missing required property 'isUnlimited'");
            }
            if ((!args || args.productLicenseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productLicenseId'");
            }
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["expirationDate"] = args ? args.expirationDate : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isPerpetual"] = args ? args.isPerpetual : undefined;
            resourceInputs["isUnlimited"] = args ? args.isUnlimited : undefined;
            resourceInputs["licenseCount"] = args ? args.licenseCount : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["productLicenseId"] = args ? args.productLicenseId : undefined;
            resourceInputs["supportEndDate"] = args ? args.supportEndDate : undefined;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["licenseUnit"] = undefined /*out*/;
            resourceInputs["productLicense"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LicenseRecord.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LicenseRecord resources.
 */
export interface LicenseRecordState {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the license record is created.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) License record name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Specifies if the license record term is perpertual.
     */
    isPerpetual?: pulumi.Input<boolean>;
    /**
     * (Updatable) Specifies if the license count is unlimited.
     */
    isUnlimited?: pulumi.Input<boolean>;
    /**
     * (Updatable) The number of license units added by a user in a license record. Default 1
     */
    licenseCount?: pulumi.Input<number>;
    /**
     * The product license unit.
     */
    licenseUnit?: pulumi.Input<string>;
    /**
     * (Updatable) The license record product ID.
     */
    productId?: pulumi.Input<string>;
    /**
     * The product license name with which the license record is associated.
     */
    productLicense?: pulumi.Input<string>;
    /**
     * Unique product license identifier.
     */
    productLicenseId?: pulumi.Input<string>;
    /**
     * The current license record state.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    supportEndDate?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The time the license record was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the license record was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LicenseRecord resource.
 */
export interface LicenseRecordArgs {
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) License record name.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Specifies if the license record term is perpertual.
     */
    isPerpetual: pulumi.Input<boolean>;
    /**
     * (Updatable) Specifies if the license count is unlimited.
     */
    isUnlimited: pulumi.Input<boolean>;
    /**
     * (Updatable) The number of license units added by a user in a license record. Default 1
     */
    licenseCount?: pulumi.Input<number>;
    /**
     * (Updatable) The license record product ID.
     */
    productId?: pulumi.Input<string>;
    /**
     * Unique product license identifier.
     */
    productLicenseId: pulumi.Input<string>;
    /**
     * (Updatable) The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    supportEndDate?: pulumi.Input<string>;
}
