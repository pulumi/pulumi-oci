// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Limit Values in Oracle Cloud Infrastructure Limits service.
 *
 * Includes a full list of resource limits belonging to a given service. If subscription Id is provided, limit value for subscription will be returned.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLimitValues = oci.Limits.getLimitValues({
 *     compartmentId: tenancyOcid,
 *     serviceName: testService.name,
 *     availabilityDomain: limitValueAvailabilityDomain,
 *     name: limitValueName,
 *     scopeType: limitValueScopeType,
 *     subscriptionId: subscriptionOcid,
 * });
 * ```
 */
export function getLimitValues(args: GetLimitValuesArgs, opts?: pulumi.InvokeOptions): Promise<GetLimitValuesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Limits/getLimitValues:getLimitValues", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "scopeType": args.scopeType,
        "serviceName": args.serviceName,
        "subscriptionId": args.subscriptionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLimitValues.
 */
export interface GetLimitValuesArgs {
    /**
     * Filter entries by availability domain. This implies that only AD-specific values are returned.
     */
    availabilityDomain?: string;
    /**
     * The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    filters?: inputs.Limits.GetLimitValuesFilter[];
    /**
     * Optional field, can be used to see a specific resource limit value.
     */
    name?: string;
    /**
     * Filter entries by scope type.
     */
    scopeType?: string;
    /**
     * The target service name.
     */
    serviceName: string;
    /**
     * The OCID of the subscription assigned to tenant
     */
    subscriptionId?: string;
}

/**
 * A collection of values returned by getLimitValues.
 */
export interface GetLimitValuesResult {
    /**
     * If present, the returned value is only specific to this availability domain.
     */
    readonly availabilityDomain?: string;
    readonly compartmentId: string;
    readonly filters?: outputs.Limits.GetLimitValuesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of limit_values.
     */
    readonly limitValues: outputs.Limits.GetLimitValuesLimitValue[];
    /**
     * The resource limit name. To be used for writing policies (in case of quotas) or other programmatic calls.
     */
    readonly name?: string;
    /**
     * The scope type of the limit.
     */
    readonly scopeType?: string;
    readonly serviceName: string;
    readonly subscriptionId?: string;
}
/**
 * This data source provides the list of Limit Values in Oracle Cloud Infrastructure Limits service.
 *
 * Includes a full list of resource limits belonging to a given service. If subscription Id is provided, limit value for subscription will be returned.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLimitValues = oci.Limits.getLimitValues({
 *     compartmentId: tenancyOcid,
 *     serviceName: testService.name,
 *     availabilityDomain: limitValueAvailabilityDomain,
 *     name: limitValueName,
 *     scopeType: limitValueScopeType,
 *     subscriptionId: subscriptionOcid,
 * });
 * ```
 */
export function getLimitValuesOutput(args: GetLimitValuesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLimitValuesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Limits/getLimitValues:getLimitValues", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "scopeType": args.scopeType,
        "serviceName": args.serviceName,
        "subscriptionId": args.subscriptionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLimitValues.
 */
export interface GetLimitValuesOutputArgs {
    /**
     * Filter entries by availability domain. This implies that only AD-specific values are returned.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Limits.GetLimitValuesFilterArgs>[]>;
    /**
     * Optional field, can be used to see a specific resource limit value.
     */
    name?: pulumi.Input<string>;
    /**
     * Filter entries by scope type.
     */
    scopeType?: pulumi.Input<string>;
    /**
     * The target service name.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The OCID of the subscription assigned to tenant
     */
    subscriptionId?: pulumi.Input<string>;
}
