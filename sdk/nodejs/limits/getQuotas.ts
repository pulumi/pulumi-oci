// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Quotas in Oracle Cloud Infrastructure Limits service.
 *
 * Lists all quotas on resources from the given compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testQuotas = oci.Limits.getQuotas({
 *     compartmentId: tenancyOcid,
 *     name: quotaName,
 *     state: quotaState,
 * });
 * ```
 */
export function getQuotas(args: GetQuotasArgs, opts?: pulumi.InvokeOptions): Promise<GetQuotasResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Limits/getQuotas:getQuotas", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getQuotas.
 */
export interface GetQuotasArgs {
    /**
     * The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: string;
    filters?: inputs.Limits.GetQuotasFilter[];
    /**
     * name
     */
    name?: string;
    /**
     * Filters returned quotas based on the given state.
     */
    state?: string;
}

/**
 * A collection of values returned by getQuotas.
 */
export interface GetQuotasResult {
    /**
     * The OCID of the compartment containing the resource this quota applies to.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.Limits.GetQuotasFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name you assign to the quota during creation. The name must be unique across all quotas in the tenancy and cannot be changed.
     */
    readonly name?: string;
    /**
     * The list of quotas.
     */
    readonly quotas: outputs.Limits.GetQuotasQuota[];
    /**
     * The quota's current state.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Quotas in Oracle Cloud Infrastructure Limits service.
 *
 * Lists all quotas on resources from the given compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testQuotas = oci.Limits.getQuotas({
 *     compartmentId: tenancyOcid,
 *     name: quotaName,
 *     state: quotaState,
 * });
 * ```
 */
export function getQuotasOutput(args: GetQuotasOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQuotasResult> {
    return pulumi.output(args).apply((a: any) => getQuotas(a, opts))
}

/**
 * A collection of arguments for invoking getQuotas.
 */
export interface GetQuotasOutputArgs {
    /**
     * The OCID of the parent compartment (remember that the tenancy is simply the root compartment).
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Limits.GetQuotasFilterArgs>[]>;
    /**
     * name
     */
    name?: pulumi.Input<string>;
    /**
     * Filters returned quotas based on the given state.
     */
    state?: pulumi.Input<string>;
}
