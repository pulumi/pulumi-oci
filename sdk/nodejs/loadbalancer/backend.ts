// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Backend resource in Oracle Cloud Infrastructure Load Balancer service.
 *
 * Adds a backend server to a backend set.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBackend = new oci.loadbalancer.Backend("testBackend", {
 *     backendsetName: oci_load_balancer_backend_set.test_backend_set.name,
 *     ipAddress: _var.backend_ip_address,
 *     loadBalancerId: oci_load_balancer_load_balancer.test_load_balancer.id,
 *     port: _var.backend_port,
 *     backup: _var.backend_backup,
 *     drain: _var.backend_drain,
 *     offline: _var.backend_offline,
 *     weight: _var.backend_weight,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Backends can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:LoadBalancer/backend:Backend test_backend "loadBalancers/{loadBalancerId}/backendSets/{backendSetName}/backends/{backendName}"
 * ```
 */
export class Backend extends pulumi.CustomResource {
    /**
     * Get an existing Backend resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackendState, opts?: pulumi.CustomResourceOptions): Backend {
        return new Backend(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LoadBalancer/backend:Backend';

    /**
     * Returns true if the given object is an instance of Backend.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Backend {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Backend.__pulumiType;
    }

    /**
     * The name of the backend set to add the backend server to.  Example: `exampleBackendSet`
     */
    public readonly backendsetName!: pulumi.Output<string>;
    /**
     * (Updatable) Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
     *
     * **Note:** You cannot add a backend server marked as `backup` to a backend set that uses the IP Hash policy.
     *
     * Example: `false`
     */
    public readonly backup!: pulumi.Output<boolean | undefined>;
    /**
     * (Updatable) Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
     */
    public readonly drain!: pulumi.Output<boolean>;
    /**
     * The IP address of the backend server.  Example: `10.0.0.3`
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and servers.
     */
    public readonly loadBalancerId!: pulumi.Output<string>;
    /**
     * A read-only field showing the IP address and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    public readonly offline!: pulumi.Output<boolean>;
    /**
     * The communication port for the backend server.  Example: `8080`
     */
    public readonly port!: pulumi.Output<number>;
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly weight!: pulumi.Output<number>;

    /**
     * Create a Backend resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackendArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackendArgs | BackendState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackendState | undefined;
            resourceInputs["backendsetName"] = state ? state.backendsetName : undefined;
            resourceInputs["backup"] = state ? state.backup : undefined;
            resourceInputs["drain"] = state ? state.drain : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["loadBalancerId"] = state ? state.loadBalancerId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["offline"] = state ? state.offline : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as BackendArgs | undefined;
            if ((!args || args.backendsetName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backendsetName'");
            }
            if ((!args || args.ipAddress === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipAddress'");
            }
            if ((!args || args.loadBalancerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerId'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            resourceInputs["backendsetName"] = args ? args.backendsetName : undefined;
            resourceInputs["backup"] = args ? args.backup : undefined;
            resourceInputs["drain"] = args ? args.drain : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["loadBalancerId"] = args ? args.loadBalancerId : undefined;
            resourceInputs["offline"] = args ? args.offline : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["weight"] = args ? args.weight : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Backend.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Backend resources.
 */
export interface BackendState {
    /**
     * The name of the backend set to add the backend server to.  Example: `exampleBackendSet`
     */
    backendsetName?: pulumi.Input<string>;
    /**
     * (Updatable) Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
     *
     * **Note:** You cannot add a backend server marked as `backup` to a backend set that uses the IP Hash policy.
     *
     * Example: `false`
     */
    backup?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
     */
    drain?: pulumi.Input<boolean>;
    /**
     * The IP address of the backend server.  Example: `10.0.0.3`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and servers.
     */
    loadBalancerId?: pulumi.Input<string>;
    /**
     * A read-only field showing the IP address and port that uniquely identify this backend server in the backend set.  Example: `10.0.0.3:8080`
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    offline?: pulumi.Input<boolean>;
    /**
     * The communication port for the backend server.  Example: `8080`
     */
    port?: pulumi.Input<number>;
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Backend resource.
 */
export interface BackendArgs {
    /**
     * The name of the backend set to add the backend server to.  Example: `exampleBackendSet`
     */
    backendsetName: pulumi.Input<string>;
    /**
     * (Updatable) Whether the load balancer should treat this server as a backup unit. If `true`, the load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "backup" fail the health check policy.
     *
     * **Note:** You cannot add a backend server marked as `backup` to a backend set that uses the IP Hash policy.
     *
     * Example: `false`
     */
    backup?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the load balancer should drain this server. Servers marked "drain" receive no new incoming traffic.  Example: `false`
     */
    drain?: pulumi.Input<boolean>;
    /**
     * The IP address of the backend server.  Example: `10.0.0.3`
     */
    ipAddress: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer associated with the backend set and servers.
     */
    loadBalancerId: pulumi.Input<string>;
    /**
     * (Updatable) Whether the load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    offline?: pulumi.Input<boolean>;
    /**
     * The communication port for the backend server.  Example: `8080`
     */
    port: pulumi.Input<number>;
    /**
     * (Updatable) The load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives 3 times the number of new connections as a server weighted '1'. For more information on load balancing policies, see [How Load Balancing Policies Work](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/lbpolicies.htm).  Example: `3` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    weight?: pulumi.Input<number>;
}
