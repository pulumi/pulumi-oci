// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Load Balancer Health resource in Oracle Cloud Infrastructure Load Balancer service.
 *
 * Gets the health status for the specified load balancer.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLoadBalancerHealth = oci.LoadBalancer.getHealth({
 *     loadBalancerId: oci_load_balancer_load_balancer.test_load_balancer.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getHealth(args: GetHealthArgs, opts?: pulumi.InvokeOptions): Promise<GetHealthResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:LoadBalancer/getHealth:getHealth", {
        "loadBalancerId": args.loadBalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getHealth.
 */
export interface GetHealthArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer to return health status for.
     */
    loadBalancerId: string;
}

/**
 * A collection of values returned by getHealth.
 */
export interface GetHealthResult {
    /**
     * A list of backend sets that are currently in the `CRITICAL` health state. The list identifies each backend set by the friendly name you assigned when you created it.  Example: `exampleBackendSet`
     */
    readonly criticalStateBackendSetNames: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly loadBalancerId: string;
    /**
     * The overall health status of the load balancer.
     * *  **OK:** All backend sets associated with the load balancer return a status of `OK`.
     * *  **WARNING:** At least one of the backend sets associated with the load balancer returns a status of `WARNING`, no backend sets return a status of `CRITICAL`, and the load balancer life cycle state is `ACTIVE`.
     * *  **CRITICAL:** One or more of the backend sets associated with the load balancer return a status of `CRITICAL`.
     * *  **UNKNOWN:** If any one of the following conditions is true:
     * *  The load balancer life cycle state is not `ACTIVE`.
     * *  No backend sets are defined for the load balancer.
     * *  More than half of the backend sets associated with the load balancer return a status of `UNKNOWN`, none of the backend sets return a status of `WARNING` or `CRITICAL`, and the load balancer life cycle state is `ACTIVE`.
     * *  The system could not retrieve metrics for any reason.
     */
    readonly status: string;
    /**
     * The total number of backend sets associated with this load balancer.  Example: `4`
     */
    readonly totalBackendSetCount: number;
    /**
     * A list of backend sets that are currently in the `UNKNOWN` health state. The list identifies each backend set by the friendly name you assigned when you created it.  Example: `exampleBackendSet2`
     */
    readonly unknownStateBackendSetNames: string[];
    /**
     * A list of backend sets that are currently in the `WARNING` health state. The list identifies each backend set by the friendly name you assigned when you created it.  Example: `exampleBackendSet3`
     */
    readonly warningStateBackendSetNames: string[];
}
/**
 * This data source provides details about a specific Load Balancer Health resource in Oracle Cloud Infrastructure Load Balancer service.
 *
 * Gets the health status for the specified load balancer.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLoadBalancerHealth = oci.LoadBalancer.getHealth({
 *     loadBalancerId: oci_load_balancer_load_balancer.test_load_balancer.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getHealthOutput(args: GetHealthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHealthResult> {
    return pulumi.output(args).apply((a: any) => getHealth(a, opts))
}

/**
 * A collection of arguments for invoking getHealth.
 */
export interface GetHealthOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the load balancer to return health status for.
     */
    loadBalancerId: pulumi.Input<string>;
}
