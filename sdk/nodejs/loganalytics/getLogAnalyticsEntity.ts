// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Retrieve the log analytics entity with the given id.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsEntity = oci.LogAnalytics.getLogAnalyticsEntity({
 *     logAnalyticsEntityId: oci_log_analytics_log_analytics_entity.test_log_analytics_entity.id,
 *     namespace: _var.log_analytics_entity_namespace,
 * });
 * ```
 */
export function getLogAnalyticsEntity(args: GetLogAnalyticsEntityArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsEntityResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:LogAnalytics/getLogAnalyticsEntity:getLogAnalyticsEntity", {
        "logAnalyticsEntityId": args.logAnalyticsEntityId,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogAnalyticsEntity.
 */
export interface GetLogAnalyticsEntityArgs {
    /**
     * The log analytics entity OCID.
     */
    logAnalyticsEntityId: string;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsEntity.
 */
export interface GetLogAnalyticsEntityResult {
    /**
     * The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
     */
    readonly areLogsCollected: boolean;
    /**
     * The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     */
    readonly cloudResourceId: string;
    /**
     * Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * Internal name for the log analytics entity type.
     */
    readonly entityTypeInternalName: string;
    /**
     * Log analytics entity type name.
     */
    readonly entityTypeName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
     */
    readonly hostname: string;
    /**
     * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
     */
    readonly id: string;
    /**
     * lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
     */
    readonly lifecycleDetails: string;
    readonly logAnalyticsEntityId: string;
    /**
     * Management agent (management-agents resource kind) compartment OCID
     */
    readonly managementAgentCompartmentId: string;
    /**
     * Management agent (management-agents resource kind) display name
     */
    readonly managementAgentDisplayName: string;
    /**
     * The OCID of the Management Agent.
     */
    readonly managementAgentId: string;
    /**
     * Log analytics entity name.
     */
    readonly name: string;
    readonly namespace: string;
    /**
     * The name/value pairs for parameter values to be used in file patterns specified in log sources.
     */
    readonly properties: {[key: string]: any};
    /**
     * This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     */
    readonly sourceId: string;
    /**
     * The current state of the log analytics entity.
     */
    readonly state: string;
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     */
    readonly timeUpdated: string;
    /**
     * The timezone region of the log analytics entity.
     */
    readonly timezoneRegion: string;
}

export function getLogAnalyticsEntityOutput(args: GetLogAnalyticsEntityOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsEntityResult> {
    return pulumi.output(args).apply(a => getLogAnalyticsEntity(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsEntity.
 */
export interface GetLogAnalyticsEntityOutputArgs {
    /**
     * The log analytics entity OCID.
     */
    logAnalyticsEntityId: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
}
