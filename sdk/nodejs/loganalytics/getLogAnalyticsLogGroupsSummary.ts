// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Returns the count of log groups in a compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsLogGroupsSummary = oci.LogAnalytics.getLogAnalyticsLogGroupsSummary({
 *     compartmentId: _var.compartment_id,
 *     namespace: _var.log_analytics_log_groups_summary_namespace,
 * });
 * ```
 */
export function getLogAnalyticsLogGroupsSummary(args: GetLogAnalyticsLogGroupsSummaryArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsLogGroupsSummaryResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", {
        "compartmentId": args.compartmentId,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogGroupsSummary.
 */
export interface GetLogAnalyticsLogGroupsSummaryArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsLogGroupsSummary.
 */
export interface GetLogAnalyticsLogGroupsSummaryResult {
    readonly compartmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logGroupCount: number;
    readonly namespace: string;
}

export function getLogAnalyticsLogGroupsSummaryOutput(args: GetLogAnalyticsLogGroupsSummaryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsLogGroupsSummaryResult> {
    return pulumi.output(args).apply(a => getLogAnalyticsLogGroupsSummary(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsLogGroupsSummary.
 */
export interface GetLogAnalyticsLogGroupsSummaryOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
}
