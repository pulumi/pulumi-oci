// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Lists the preferences of the tenant. Currently, only "DEFAULT_HOMEPAGE" is supported.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsPreference = oci.LogAnalytics.getLogAnalyticsPreference({
 *     namespace: _var.log_analytics_preference_namespace,
 * });
 * ```
 */
export function getLogAnalyticsPreference(args: GetLogAnalyticsPreferenceArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsPreferenceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:LogAnalytics/getLogAnalyticsPreference:getLogAnalyticsPreference", {
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogAnalyticsPreference.
 */
export interface GetLogAnalyticsPreferenceArgs {
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
}

/**
 * A collection of values returned by getLogAnalyticsPreference.
 */
export interface GetLogAnalyticsPreferenceResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An array of tenant preferences.
     */
    readonly items: outputs.LogAnalytics.GetLogAnalyticsPreferenceItem[];
    readonly namespace: string;
}

export function getLogAnalyticsPreferenceOutput(args: GetLogAnalyticsPreferenceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsPreferenceResult> {
    return pulumi.output(args).apply(a => getLogAnalyticsPreference(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsPreference.
 */
export interface GetLogAnalyticsPreferenceOutputArgs {
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
}
