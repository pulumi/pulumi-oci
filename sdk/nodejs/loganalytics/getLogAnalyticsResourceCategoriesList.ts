// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Returns a list of resources and their category assignments.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsResourceCategoriesList = oci.LogAnalytics.getLogAnalyticsResourceCategoriesList({
 *     namespace: logAnalyticsResourceCategoriesListNamespace,
 *     resourceIds: logAnalyticsResourceCategoriesListResourceIds,
 *     resourceTypes: logAnalyticsResourceCategoriesListResourceTypes,
 *     resourceCategories: logAnalyticsResourceCategoriesListResourceCategories,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getLogAnalyticsResourceCategoriesList(args: GetLogAnalyticsResourceCategoriesListArgs, opts?: pulumi.InvokeOptions): Promise<GetLogAnalyticsResourceCategoriesListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", {
        "namespace": args.namespace,
        "resourceCategories": args.resourceCategories,
        "resourceIds": args.resourceIds,
        "resourceTypes": args.resourceTypes,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogAnalyticsResourceCategoriesList.
 */
export interface GetLogAnalyticsResourceCategoriesListArgs {
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
    /**
     * A comma-separated list of category names used for filtering
     */
    resourceCategories?: string;
    /**
     * A comma-separated list of resource unique identifiers used for filtering. Only resources with matching unique identifiers will be returned.
     */
    resourceIds?: string;
    /**
     * A comma-separated list of resource types used for filtering. Only resources of the types specified will be returned. Examples include SOURCE, PARSER, LOOKUP, etc.
     */
    resourceTypes?: string;
}

/**
 * A collection of values returned by getLogAnalyticsResourceCategoriesList.
 */
export interface GetLogAnalyticsResourceCategoriesListResult {
    /**
     * An array of categories. The array contents include detailed information about the distinct set of categories assigned to all the listed resources under items.
     */
    readonly categories: outputs.LogAnalytics.GetLogAnalyticsResourceCategoriesListCategory[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of resources and their category assignments
     */
    readonly items: outputs.LogAnalytics.GetLogAnalyticsResourceCategoriesListItem[];
    readonly namespace: string;
    readonly resourceCategories?: string;
    readonly resourceIds?: string;
    readonly resourceTypes?: string;
}
/**
 * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Returns a list of resources and their category assignments.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsResourceCategoriesList = oci.LogAnalytics.getLogAnalyticsResourceCategoriesList({
 *     namespace: logAnalyticsResourceCategoriesListNamespace,
 *     resourceIds: logAnalyticsResourceCategoriesListResourceIds,
 *     resourceTypes: logAnalyticsResourceCategoriesListResourceTypes,
 *     resourceCategories: logAnalyticsResourceCategoriesListResourceCategories,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getLogAnalyticsResourceCategoriesListOutput(args: GetLogAnalyticsResourceCategoriesListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogAnalyticsResourceCategoriesListResult> {
    return pulumi.output(args).apply((a: any) => getLogAnalyticsResourceCategoriesList(a, opts))
}

/**
 * A collection of arguments for invoking getLogAnalyticsResourceCategoriesList.
 */
export interface GetLogAnalyticsResourceCategoriesListOutputArgs {
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
    /**
     * A comma-separated list of category names used for filtering
     */
    resourceCategories?: pulumi.Input<string>;
    /**
     * A comma-separated list of resource unique identifiers used for filtering. Only resources with matching unique identifiers will be returned.
     */
    resourceIds?: pulumi.Input<string>;
    /**
     * A comma-separated list of resource types used for filtering. Only resources of the types specified will be returned. Examples include SOURCE, PARSER, LOOKUP, etc.
     */
    resourceTypes?: pulumi.Input<string>;
}
