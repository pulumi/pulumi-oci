// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Gets detailed information about the lookup with the specified name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceLookup = oci.LogAnalytics.getNamespaceLookup({
 *     lookupName: namespaceLookupLookupName,
 *     namespace: namespaceLookupNamespace,
 * });
 * ```
 */
export function getNamespaceLookup(args: GetNamespaceLookupArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceLookupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", {
        "lookupName": args.lookupName,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamespaceLookup.
 */
export interface GetNamespaceLookupArgs {
    /**
     * The name of the lookup to operate on.
     */
    lookupName: string;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
}

/**
 * A collection of values returned by getNamespaceLookup.
 */
export interface GetNamespaceLookupResult {
    /**
     * The active edit version.
     */
    readonly activeEditVersion: string;
    /**
     * The canonical link.
     */
    readonly canonicalLink: string;
    /**
     * An array of categories assigned to this lookup. The isSystem flag denotes if each category assignment is user-created or Oracle-defined.
     */
    readonly categories: outputs.LogAnalytics.GetNamespaceLookupCategory[];
    readonly charEncoding: string;
    /**
     * Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly compartmentId: string;
    /**
     * The default match value.
     */
    readonly defaultMatchValue: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * The lookup description.
     */
    readonly description: string;
    /**
     * The edit version.
     */
    readonly editVersion: string;
    /**
     * The lookup fields.
     */
    readonly fields: outputs.LogAnalytics.GetNamespaceLookupField[];
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
     */
    readonly id: string;
    /**
     * A flag indicating if the lookup is custom (user-defined) or built in.
     */
    readonly isBuiltIn: string;
    /**
     * A flag indicating if the lookup is hidden or not.  A hidden lookup will not be returned in list operations by default.
     */
    readonly isHidden: boolean;
    /**
     * The lookup display name.
     */
    readonly lookupDisplayName: string;
    /**
     * The lookup OCID.
     */
    readonly lookupId: string;
    /**
     * The lookup name.
     */
    readonly lookupName: string;
    /**
     * The lookup reference as an integer.
     */
    readonly lookupReference: string;
    /**
     * The lookup reference as a string.
     */
    readonly lookupReferenceString: string;
    readonly maxMatches: string;
    readonly namespace: string;
    /**
     * AutoLookups
     */
    readonly referringSources: outputs.LogAnalytics.GetNamespaceLookupReferringSource[];
    readonly registerLookupFile: string;
    /**
     * StatusSummary
     */
    readonly statusSummaries: outputs.LogAnalytics.GetNamespaceLookupStatusSummary[];
    /**
     * The last updated date.
     */
    readonly timeUpdated: string;
    /**
     * The lookup type. Valid values are Lookup, Dictionary or Module.
     */
    readonly type: string;
}
/**
 * This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Gets detailed information about the lookup with the specified name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceLookup = oci.LogAnalytics.getNamespaceLookup({
 *     lookupName: namespaceLookupLookupName,
 *     namespace: namespaceLookupNamespace,
 * });
 * ```
 */
export function getNamespaceLookupOutput(args: GetNamespaceLookupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNamespaceLookupResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", {
        "lookupName": args.lookupName,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamespaceLookup.
 */
export interface GetNamespaceLookupOutputArgs {
    /**
     * The name of the lookup to operate on.
     */
    lookupName: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
}
