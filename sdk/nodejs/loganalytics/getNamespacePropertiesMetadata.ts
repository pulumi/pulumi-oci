// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Returns a list of properties along with their metadata.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespacePropertiesMetadata = oci.LogAnalytics.getNamespacePropertiesMetadata({
 *     namespace: _var.namespace_properties_metadata_namespace,
 *     constraints: _var.namespace_properties_metadata_constraints,
 *     displayText: _var.namespace_properties_metadata_display_text,
 *     level: _var.namespace_properties_metadata_level,
 *     name: _var.namespace_properties_metadata_name,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNamespacePropertiesMetadata(args: GetNamespacePropertiesMetadataArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespacePropertiesMetadataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", {
        "constraints": args.constraints,
        "displayText": args.displayText,
        "filters": args.filters,
        "level": args.level,
        "name": args.name,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamespacePropertiesMetadata.
 */
export interface GetNamespacePropertiesMetadataArgs {
    /**
     * The constraints that apply to the properties at a certain level.
     */
    constraints?: string;
    /**
     * The property display text used for filtering. Only properties matching the specified display name or description will be returned.
     */
    displayText?: string;
    filters?: inputs.LogAnalytics.GetNamespacePropertiesMetadataFilter[];
    /**
     * The level for which applicable properties are to be listed.
     */
    level?: string;
    /**
     * The property name used for filtering.
     */
    name?: string;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
}

/**
 * A collection of values returned by getNamespacePropertiesMetadata.
 */
export interface GetNamespacePropertiesMetadataResult {
    /**
     * A string representation of constraints that apply at this level. For example, a property defined at SOURCE level could further be applicable only for SOURCE_TYPE:database_sql.
     */
    readonly constraints?: string;
    readonly displayText?: string;
    readonly filters?: outputs.LogAnalytics.GetNamespacePropertiesMetadataFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly level?: string;
    /**
     * The property name.
     */
    readonly name?: string;
    readonly namespace: string;
    /**
     * The list of property_metadata_summary_collection.
     */
    readonly propertyMetadataSummaryCollections: outputs.LogAnalytics.GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection[];
}
/**
 * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Returns a list of properties along with their metadata.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespacePropertiesMetadata = oci.LogAnalytics.getNamespacePropertiesMetadata({
 *     namespace: _var.namespace_properties_metadata_namespace,
 *     constraints: _var.namespace_properties_metadata_constraints,
 *     displayText: _var.namespace_properties_metadata_display_text,
 *     level: _var.namespace_properties_metadata_level,
 *     name: _var.namespace_properties_metadata_name,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNamespacePropertiesMetadataOutput(args: GetNamespacePropertiesMetadataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamespacePropertiesMetadataResult> {
    return pulumi.output(args).apply((a: any) => getNamespacePropertiesMetadata(a, opts))
}

/**
 * A collection of arguments for invoking getNamespacePropertiesMetadata.
 */
export interface GetNamespacePropertiesMetadataOutputArgs {
    /**
     * The constraints that apply to the properties at a certain level.
     */
    constraints?: pulumi.Input<string>;
    /**
     * The property display text used for filtering. Only properties matching the specified display name or description will be returned.
     */
    displayText?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.GetNamespacePropertiesMetadataFilterArgs>[]>;
    /**
     * The level for which applicable properties are to be listed.
     */
    level?: pulumi.Input<string>;
    /**
     * The property name used for filtering.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
}
