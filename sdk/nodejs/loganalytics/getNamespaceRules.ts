// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceRules = oci.LogAnalytics.getNamespaceRules({
 *     compartmentId: compartmentId,
 *     namespace: namespaceRuleNamespace,
 *     displayName: namespaceRuleDisplayName,
 *     kind: namespaceRuleKind,
 *     state: namespaceRuleState,
 *     targetService: namespaceRuleTargetService,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNamespaceRules(args: GetNamespaceRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceRulesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "kind": args.kind,
        "namespace": args.namespace,
        "state": args.state,
        "targetService": args.targetService,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamespaceRules.
 */
export interface GetNamespaceRulesArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
     */
    displayName?: string;
    filters?: inputs.LogAnalytics.GetNamespaceRulesFilter[];
    /**
     * The rule kind used for filtering. Only rules of the specified kind will be returned.
     */
    kind?: string;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
    /**
     * The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
     */
    state?: string;
    /**
     * The target service to use for filtering.
     */
    targetService?: string;
}

/**
 * A collection of values returned by getNamespaceRules.
 */
export interface GetNamespaceRulesResult {
    /**
     * Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly compartmentId: string;
    /**
     * The ingest time rule or scheduled task display name.
     */
    readonly displayName?: string;
    readonly filters?: outputs.LogAnalytics.GetNamespaceRulesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The kind of rule - either an ingest time rule or a scheduled task.
     */
    readonly kind?: string;
    readonly namespace: string;
    /**
     * The list of rule_summary_collection.
     */
    readonly ruleSummaryCollections: outputs.LogAnalytics.GetNamespaceRulesRuleSummaryCollection[];
    /**
     * The current state of the logging analytics rule.
     */
    readonly state?: string;
    /**
     * The target service.
     */
    readonly targetService?: string;
}
/**
 * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceRules = oci.LogAnalytics.getNamespaceRules({
 *     compartmentId: compartmentId,
 *     namespace: namespaceRuleNamespace,
 *     displayName: namespaceRuleDisplayName,
 *     kind: namespaceRuleKind,
 *     state: namespaceRuleState,
 *     targetService: namespaceRuleTargetService,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getNamespaceRulesOutput(args: GetNamespaceRulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNamespaceRulesResult> {
    return pulumi.output(args).apply((a: any) => getNamespaceRules(a, opts))
}

/**
 * A collection of arguments for invoking getNamespaceRules.
 */
export interface GetNamespaceRulesOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.GetNamespaceRulesFilterArgs>[]>;
    /**
     * The rule kind used for filtering. Only rules of the specified kind will be returned.
     */
    kind?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
    /**
     * The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
     */
    state?: pulumi.Input<string>;
    /**
     * The target service to use for filtering.
     */
    targetService?: pulumi.Input<string>;
}
