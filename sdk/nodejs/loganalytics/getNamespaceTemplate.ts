// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Gets detailed information about the template with the specified ocid.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceTemplate = oci.LogAnalytics.getNamespaceTemplate({
 *     namespace: namespaceTemplateNamespace,
 *     templateId: testTemplate.id,
 * });
 * ```
 */
export function getNamespaceTemplate(args: GetNamespaceTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetNamespaceTemplateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", {
        "namespace": args.namespace,
        "templateId": args.templateId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamespaceTemplate.
 */
export interface GetNamespaceTemplateArgs {
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: string;
    /**
     * Unique ocid of the template.
     */
    templateId: string;
}

/**
 * A collection of values returned by getNamespaceTemplate.
 */
export interface GetNamespaceTemplateResult {
    /**
     * Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly compartmentId: string;
    /**
     * Base64 encoded template content.
     */
    readonly content: string;
    /**
     * Content format. For example - XML.
     */
    readonly contentFormat: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Description for this resource.
     */
    readonly description: string;
    /**
     * Facets of the template
     */
    readonly facets: outputs.LogAnalytics.GetNamespaceTemplateFacet[];
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The system flag.  A value of false denotes a custom, or user defined object.  A value of true denotes a built in object.
     */
    readonly isSystem: boolean;
    /**
     * The template name.
     */
    readonly name: string;
    readonly namespace: string;
    /**
     * Base64 encoded template parameters.
     */
    readonly parameters: string;
    /**
     * Parameters format.  For example - NAME_VALUE_PAIR.
     */
    readonly parametersFormat: string;
    /**
     * Base64 encoded parameters metadata definition.
     */
    readonly parametersMetadata: string;
    /**
     * The current state of the template.
     */
    readonly state: string;
    readonly templateId: string;
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     */
    readonly timeUpdated: string;
    /**
     * The template type.
     */
    readonly type: string;
}
/**
 * This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Gets detailed information about the template with the specified ocid.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceTemplate = oci.LogAnalytics.getNamespaceTemplate({
 *     namespace: namespaceTemplateNamespace,
 *     templateId: testTemplate.id,
 * });
 * ```
 */
export function getNamespaceTemplateOutput(args: GetNamespaceTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNamespaceTemplateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", {
        "namespace": args.namespace,
        "templateId": args.templateId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamespaceTemplate.
 */
export interface GetNamespaceTemplateOutputArgs {
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
    /**
     * Unique ocid of the template.
     */
    templateId: pulumi.Input<string>;
}
