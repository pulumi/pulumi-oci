// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetLogAnalyticsCategoriesListArgs, GetLogAnalyticsCategoriesListResult, GetLogAnalyticsCategoriesListOutputArgs } from "./getLogAnalyticsCategoriesList";
export const getLogAnalyticsCategoriesList: typeof import("./getLogAnalyticsCategoriesList").getLogAnalyticsCategoriesList = null as any;
export const getLogAnalyticsCategoriesListOutput: typeof import("./getLogAnalyticsCategoriesList").getLogAnalyticsCategoriesListOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsCategoriesList","getLogAnalyticsCategoriesListOutput"], () => require("./getLogAnalyticsCategoriesList"));

export { GetLogAnalyticsCategoryArgs, GetLogAnalyticsCategoryResult, GetLogAnalyticsCategoryOutputArgs } from "./getLogAnalyticsCategory";
export const getLogAnalyticsCategory: typeof import("./getLogAnalyticsCategory").getLogAnalyticsCategory = null as any;
export const getLogAnalyticsCategoryOutput: typeof import("./getLogAnalyticsCategory").getLogAnalyticsCategoryOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsCategory","getLogAnalyticsCategoryOutput"], () => require("./getLogAnalyticsCategory"));

export { GetLogAnalyticsEntitiesArgs, GetLogAnalyticsEntitiesResult, GetLogAnalyticsEntitiesOutputArgs } from "./getLogAnalyticsEntities";
export const getLogAnalyticsEntities: typeof import("./getLogAnalyticsEntities").getLogAnalyticsEntities = null as any;
export const getLogAnalyticsEntitiesOutput: typeof import("./getLogAnalyticsEntities").getLogAnalyticsEntitiesOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsEntities","getLogAnalyticsEntitiesOutput"], () => require("./getLogAnalyticsEntities"));

export { GetLogAnalyticsEntitiesSummaryArgs, GetLogAnalyticsEntitiesSummaryResult, GetLogAnalyticsEntitiesSummaryOutputArgs } from "./getLogAnalyticsEntitiesSummary";
export const getLogAnalyticsEntitiesSummary: typeof import("./getLogAnalyticsEntitiesSummary").getLogAnalyticsEntitiesSummary = null as any;
export const getLogAnalyticsEntitiesSummaryOutput: typeof import("./getLogAnalyticsEntitiesSummary").getLogAnalyticsEntitiesSummaryOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsEntitiesSummary","getLogAnalyticsEntitiesSummaryOutput"], () => require("./getLogAnalyticsEntitiesSummary"));

export { GetLogAnalyticsEntityArgs, GetLogAnalyticsEntityResult, GetLogAnalyticsEntityOutputArgs } from "./getLogAnalyticsEntity";
export const getLogAnalyticsEntity: typeof import("./getLogAnalyticsEntity").getLogAnalyticsEntity = null as any;
export const getLogAnalyticsEntityOutput: typeof import("./getLogAnalyticsEntity").getLogAnalyticsEntityOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsEntity","getLogAnalyticsEntityOutput"], () => require("./getLogAnalyticsEntity"));

export { GetLogAnalyticsEntityTopologyArgs, GetLogAnalyticsEntityTopologyResult, GetLogAnalyticsEntityTopologyOutputArgs } from "./getLogAnalyticsEntityTopology";
export const getLogAnalyticsEntityTopology: typeof import("./getLogAnalyticsEntityTopology").getLogAnalyticsEntityTopology = null as any;
export const getLogAnalyticsEntityTopologyOutput: typeof import("./getLogAnalyticsEntityTopology").getLogAnalyticsEntityTopologyOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsEntityTopology","getLogAnalyticsEntityTopologyOutput"], () => require("./getLogAnalyticsEntityTopology"));

export { GetLogAnalyticsLogGroupArgs, GetLogAnalyticsLogGroupResult, GetLogAnalyticsLogGroupOutputArgs } from "./getLogAnalyticsLogGroup";
export const getLogAnalyticsLogGroup: typeof import("./getLogAnalyticsLogGroup").getLogAnalyticsLogGroup = null as any;
export const getLogAnalyticsLogGroupOutput: typeof import("./getLogAnalyticsLogGroup").getLogAnalyticsLogGroupOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsLogGroup","getLogAnalyticsLogGroupOutput"], () => require("./getLogAnalyticsLogGroup"));

export { GetLogAnalyticsLogGroupsArgs, GetLogAnalyticsLogGroupsResult, GetLogAnalyticsLogGroupsOutputArgs } from "./getLogAnalyticsLogGroups";
export const getLogAnalyticsLogGroups: typeof import("./getLogAnalyticsLogGroups").getLogAnalyticsLogGroups = null as any;
export const getLogAnalyticsLogGroupsOutput: typeof import("./getLogAnalyticsLogGroups").getLogAnalyticsLogGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsLogGroups","getLogAnalyticsLogGroupsOutput"], () => require("./getLogAnalyticsLogGroups"));

export { GetLogAnalyticsLogGroupsSummaryArgs, GetLogAnalyticsLogGroupsSummaryResult, GetLogAnalyticsLogGroupsSummaryOutputArgs } from "./getLogAnalyticsLogGroupsSummary";
export const getLogAnalyticsLogGroupsSummary: typeof import("./getLogAnalyticsLogGroupsSummary").getLogAnalyticsLogGroupsSummary = null as any;
export const getLogAnalyticsLogGroupsSummaryOutput: typeof import("./getLogAnalyticsLogGroupsSummary").getLogAnalyticsLogGroupsSummaryOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsLogGroupsSummary","getLogAnalyticsLogGroupsSummaryOutput"], () => require("./getLogAnalyticsLogGroupsSummary"));

export { GetLogAnalyticsObjectCollectionRuleArgs, GetLogAnalyticsObjectCollectionRuleResult, GetLogAnalyticsObjectCollectionRuleOutputArgs } from "./getLogAnalyticsObjectCollectionRule";
export const getLogAnalyticsObjectCollectionRule: typeof import("./getLogAnalyticsObjectCollectionRule").getLogAnalyticsObjectCollectionRule = null as any;
export const getLogAnalyticsObjectCollectionRuleOutput: typeof import("./getLogAnalyticsObjectCollectionRule").getLogAnalyticsObjectCollectionRuleOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsObjectCollectionRule","getLogAnalyticsObjectCollectionRuleOutput"], () => require("./getLogAnalyticsObjectCollectionRule"));

export { GetLogAnalyticsObjectCollectionRulesArgs, GetLogAnalyticsObjectCollectionRulesResult, GetLogAnalyticsObjectCollectionRulesOutputArgs } from "./getLogAnalyticsObjectCollectionRules";
export const getLogAnalyticsObjectCollectionRules: typeof import("./getLogAnalyticsObjectCollectionRules").getLogAnalyticsObjectCollectionRules = null as any;
export const getLogAnalyticsObjectCollectionRulesOutput: typeof import("./getLogAnalyticsObjectCollectionRules").getLogAnalyticsObjectCollectionRulesOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsObjectCollectionRules","getLogAnalyticsObjectCollectionRulesOutput"], () => require("./getLogAnalyticsObjectCollectionRules"));

export { GetLogAnalyticsPreferenceArgs, GetLogAnalyticsPreferenceResult, GetLogAnalyticsPreferenceOutputArgs } from "./getLogAnalyticsPreference";
export const getLogAnalyticsPreference: typeof import("./getLogAnalyticsPreference").getLogAnalyticsPreference = null as any;
export const getLogAnalyticsPreferenceOutput: typeof import("./getLogAnalyticsPreference").getLogAnalyticsPreferenceOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsPreference","getLogAnalyticsPreferenceOutput"], () => require("./getLogAnalyticsPreference"));

export { GetLogAnalyticsResourceCategoriesListArgs, GetLogAnalyticsResourceCategoriesListResult, GetLogAnalyticsResourceCategoriesListOutputArgs } from "./getLogAnalyticsResourceCategoriesList";
export const getLogAnalyticsResourceCategoriesList: typeof import("./getLogAnalyticsResourceCategoriesList").getLogAnalyticsResourceCategoriesList = null as any;
export const getLogAnalyticsResourceCategoriesListOutput: typeof import("./getLogAnalyticsResourceCategoriesList").getLogAnalyticsResourceCategoriesListOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsResourceCategoriesList","getLogAnalyticsResourceCategoriesListOutput"], () => require("./getLogAnalyticsResourceCategoriesList"));

export { GetLogAnalyticsUnprocessedDataBucketArgs, GetLogAnalyticsUnprocessedDataBucketResult, GetLogAnalyticsUnprocessedDataBucketOutputArgs } from "./getLogAnalyticsUnprocessedDataBucket";
export const getLogAnalyticsUnprocessedDataBucket: typeof import("./getLogAnalyticsUnprocessedDataBucket").getLogAnalyticsUnprocessedDataBucket = null as any;
export const getLogAnalyticsUnprocessedDataBucketOutput: typeof import("./getLogAnalyticsUnprocessedDataBucket").getLogAnalyticsUnprocessedDataBucketOutput = null as any;
utilities.lazyLoad(exports, ["getLogAnalyticsUnprocessedDataBucket","getLogAnalyticsUnprocessedDataBucketOutput"], () => require("./getLogAnalyticsUnprocessedDataBucket"));

export { GetLogSetsCountArgs, GetLogSetsCountResult, GetLogSetsCountOutputArgs } from "./getLogSetsCount";
export const getLogSetsCount: typeof import("./getLogSetsCount").getLogSetsCount = null as any;
export const getLogSetsCountOutput: typeof import("./getLogSetsCount").getLogSetsCountOutput = null as any;
utilities.lazyLoad(exports, ["getLogSetsCount","getLogSetsCountOutput"], () => require("./getLogSetsCount"));

export { GetNamespaceArgs, GetNamespaceResult, GetNamespaceOutputArgs } from "./getNamespace";
export const getNamespace: typeof import("./getNamespace").getNamespace = null as any;
export const getNamespaceOutput: typeof import("./getNamespace").getNamespaceOutput = null as any;
utilities.lazyLoad(exports, ["getNamespace","getNamespaceOutput"], () => require("./getNamespace"));

export { GetNamespaceEffectivePropertiesArgs, GetNamespaceEffectivePropertiesResult, GetNamespaceEffectivePropertiesOutputArgs } from "./getNamespaceEffectiveProperties";
export const getNamespaceEffectiveProperties: typeof import("./getNamespaceEffectiveProperties").getNamespaceEffectiveProperties = null as any;
export const getNamespaceEffectivePropertiesOutput: typeof import("./getNamespaceEffectiveProperties").getNamespaceEffectivePropertiesOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceEffectiveProperties","getNamespaceEffectivePropertiesOutput"], () => require("./getNamespaceEffectiveProperties"));

export { GetNamespaceIngestTimeRuleArgs, GetNamespaceIngestTimeRuleResult, GetNamespaceIngestTimeRuleOutputArgs } from "./getNamespaceIngestTimeRule";
export const getNamespaceIngestTimeRule: typeof import("./getNamespaceIngestTimeRule").getNamespaceIngestTimeRule = null as any;
export const getNamespaceIngestTimeRuleOutput: typeof import("./getNamespaceIngestTimeRule").getNamespaceIngestTimeRuleOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceIngestTimeRule","getNamespaceIngestTimeRuleOutput"], () => require("./getNamespaceIngestTimeRule"));

export { GetNamespaceIngestTimeRulesArgs, GetNamespaceIngestTimeRulesResult, GetNamespaceIngestTimeRulesOutputArgs } from "./getNamespaceIngestTimeRules";
export const getNamespaceIngestTimeRules: typeof import("./getNamespaceIngestTimeRules").getNamespaceIngestTimeRules = null as any;
export const getNamespaceIngestTimeRulesOutput: typeof import("./getNamespaceIngestTimeRules").getNamespaceIngestTimeRulesOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceIngestTimeRules","getNamespaceIngestTimeRulesOutput"], () => require("./getNamespaceIngestTimeRules"));

export { GetNamespacePropertiesMetadataArgs, GetNamespacePropertiesMetadataResult, GetNamespacePropertiesMetadataOutputArgs } from "./getNamespacePropertiesMetadata";
export const getNamespacePropertiesMetadata: typeof import("./getNamespacePropertiesMetadata").getNamespacePropertiesMetadata = null as any;
export const getNamespacePropertiesMetadataOutput: typeof import("./getNamespacePropertiesMetadata").getNamespacePropertiesMetadataOutput = null as any;
utilities.lazyLoad(exports, ["getNamespacePropertiesMetadata","getNamespacePropertiesMetadataOutput"], () => require("./getNamespacePropertiesMetadata"));

export { GetNamespaceRulesArgs, GetNamespaceRulesResult, GetNamespaceRulesOutputArgs } from "./getNamespaceRules";
export const getNamespaceRules: typeof import("./getNamespaceRules").getNamespaceRules = null as any;
export const getNamespaceRulesOutput: typeof import("./getNamespaceRules").getNamespaceRulesOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceRules","getNamespaceRulesOutput"], () => require("./getNamespaceRules"));

export { GetNamespaceRulesSummaryArgs, GetNamespaceRulesSummaryResult, GetNamespaceRulesSummaryOutputArgs } from "./getNamespaceRulesSummary";
export const getNamespaceRulesSummary: typeof import("./getNamespaceRulesSummary").getNamespaceRulesSummary = null as any;
export const getNamespaceRulesSummaryOutput: typeof import("./getNamespaceRulesSummary").getNamespaceRulesSummaryOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceRulesSummary","getNamespaceRulesSummaryOutput"], () => require("./getNamespaceRulesSummary"));

export { GetNamespaceScheduledTaskArgs, GetNamespaceScheduledTaskResult, GetNamespaceScheduledTaskOutputArgs } from "./getNamespaceScheduledTask";
export const getNamespaceScheduledTask: typeof import("./getNamespaceScheduledTask").getNamespaceScheduledTask = null as any;
export const getNamespaceScheduledTaskOutput: typeof import("./getNamespaceScheduledTask").getNamespaceScheduledTaskOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceScheduledTask","getNamespaceScheduledTaskOutput"], () => require("./getNamespaceScheduledTask"));

export { GetNamespaceScheduledTasksArgs, GetNamespaceScheduledTasksResult, GetNamespaceScheduledTasksOutputArgs } from "./getNamespaceScheduledTasks";
export const getNamespaceScheduledTasks: typeof import("./getNamespaceScheduledTasks").getNamespaceScheduledTasks = null as any;
export const getNamespaceScheduledTasksOutput: typeof import("./getNamespaceScheduledTasks").getNamespaceScheduledTasksOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceScheduledTasks","getNamespaceScheduledTasksOutput"], () => require("./getNamespaceScheduledTasks"));

export { GetNamespaceStorageEncryptionKeyInfoArgs, GetNamespaceStorageEncryptionKeyInfoResult, GetNamespaceStorageEncryptionKeyInfoOutputArgs } from "./getNamespaceStorageEncryptionKeyInfo";
export const getNamespaceStorageEncryptionKeyInfo: typeof import("./getNamespaceStorageEncryptionKeyInfo").getNamespaceStorageEncryptionKeyInfo = null as any;
export const getNamespaceStorageEncryptionKeyInfoOutput: typeof import("./getNamespaceStorageEncryptionKeyInfo").getNamespaceStorageEncryptionKeyInfoOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceStorageEncryptionKeyInfo","getNamespaceStorageEncryptionKeyInfoOutput"], () => require("./getNamespaceStorageEncryptionKeyInfo"));

export { GetNamespaceStorageOverlappingRecallsArgs, GetNamespaceStorageOverlappingRecallsResult, GetNamespaceStorageOverlappingRecallsOutputArgs } from "./getNamespaceStorageOverlappingRecalls";
export const getNamespaceStorageOverlappingRecalls: typeof import("./getNamespaceStorageOverlappingRecalls").getNamespaceStorageOverlappingRecalls = null as any;
export const getNamespaceStorageOverlappingRecallsOutput: typeof import("./getNamespaceStorageOverlappingRecalls").getNamespaceStorageOverlappingRecallsOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceStorageOverlappingRecalls","getNamespaceStorageOverlappingRecallsOutput"], () => require("./getNamespaceStorageOverlappingRecalls"));

export { GetNamespaceStorageRecallCountArgs, GetNamespaceStorageRecallCountResult, GetNamespaceStorageRecallCountOutputArgs } from "./getNamespaceStorageRecallCount";
export const getNamespaceStorageRecallCount: typeof import("./getNamespaceStorageRecallCount").getNamespaceStorageRecallCount = null as any;
export const getNamespaceStorageRecallCountOutput: typeof import("./getNamespaceStorageRecallCount").getNamespaceStorageRecallCountOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceStorageRecallCount","getNamespaceStorageRecallCountOutput"], () => require("./getNamespaceStorageRecallCount"));

export { GetNamespaceStorageRecalledDataSizeArgs, GetNamespaceStorageRecalledDataSizeResult, GetNamespaceStorageRecalledDataSizeOutputArgs } from "./getNamespaceStorageRecalledDataSize";
export const getNamespaceStorageRecalledDataSize: typeof import("./getNamespaceStorageRecalledDataSize").getNamespaceStorageRecalledDataSize = null as any;
export const getNamespaceStorageRecalledDataSizeOutput: typeof import("./getNamespaceStorageRecalledDataSize").getNamespaceStorageRecalledDataSizeOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaceStorageRecalledDataSize","getNamespaceStorageRecalledDataSizeOutput"], () => require("./getNamespaceStorageRecalledDataSize"));

export { GetNamespacesArgs, GetNamespacesResult, GetNamespacesOutputArgs } from "./getNamespaces";
export const getNamespaces: typeof import("./getNamespaces").getNamespaces = null as any;
export const getNamespacesOutput: typeof import("./getNamespaces").getNamespacesOutput = null as any;
utilities.lazyLoad(exports, ["getNamespaces","getNamespacesOutput"], () => require("./getNamespaces"));

export { LogAnalyticsEntityArgs, LogAnalyticsEntityState } from "./logAnalyticsEntity";
export type LogAnalyticsEntity = import("./logAnalyticsEntity").LogAnalyticsEntity;
export const LogAnalyticsEntity: typeof import("./logAnalyticsEntity").LogAnalyticsEntity = null as any;
utilities.lazyLoad(exports, ["LogAnalyticsEntity"], () => require("./logAnalyticsEntity"));

export { LogAnalyticsImportCustomContentArgs, LogAnalyticsImportCustomContentState } from "./logAnalyticsImportCustomContent";
export type LogAnalyticsImportCustomContent = import("./logAnalyticsImportCustomContent").LogAnalyticsImportCustomContent;
export const LogAnalyticsImportCustomContent: typeof import("./logAnalyticsImportCustomContent").LogAnalyticsImportCustomContent = null as any;
utilities.lazyLoad(exports, ["LogAnalyticsImportCustomContent"], () => require("./logAnalyticsImportCustomContent"));

export { LogAnalyticsLogGroupArgs, LogAnalyticsLogGroupState } from "./logAnalyticsLogGroup";
export type LogAnalyticsLogGroup = import("./logAnalyticsLogGroup").LogAnalyticsLogGroup;
export const LogAnalyticsLogGroup: typeof import("./logAnalyticsLogGroup").LogAnalyticsLogGroup = null as any;
utilities.lazyLoad(exports, ["LogAnalyticsLogGroup"], () => require("./logAnalyticsLogGroup"));

export { LogAnalyticsObjectCollectionRuleArgs, LogAnalyticsObjectCollectionRuleState } from "./logAnalyticsObjectCollectionRule";
export type LogAnalyticsObjectCollectionRule = import("./logAnalyticsObjectCollectionRule").LogAnalyticsObjectCollectionRule;
export const LogAnalyticsObjectCollectionRule: typeof import("./logAnalyticsObjectCollectionRule").LogAnalyticsObjectCollectionRule = null as any;
utilities.lazyLoad(exports, ["LogAnalyticsObjectCollectionRule"], () => require("./logAnalyticsObjectCollectionRule"));

export { LogAnalyticsPreferencesManagementArgs, LogAnalyticsPreferencesManagementState } from "./logAnalyticsPreferencesManagement";
export type LogAnalyticsPreferencesManagement = import("./logAnalyticsPreferencesManagement").LogAnalyticsPreferencesManagement;
export const LogAnalyticsPreferencesManagement: typeof import("./logAnalyticsPreferencesManagement").LogAnalyticsPreferencesManagement = null as any;
utilities.lazyLoad(exports, ["LogAnalyticsPreferencesManagement"], () => require("./logAnalyticsPreferencesManagement"));

export { LogAnalyticsResourceCategoriesManagementArgs, LogAnalyticsResourceCategoriesManagementState } from "./logAnalyticsResourceCategoriesManagement";
export type LogAnalyticsResourceCategoriesManagement = import("./logAnalyticsResourceCategoriesManagement").LogAnalyticsResourceCategoriesManagement;
export const LogAnalyticsResourceCategoriesManagement: typeof import("./logAnalyticsResourceCategoriesManagement").LogAnalyticsResourceCategoriesManagement = null as any;
utilities.lazyLoad(exports, ["LogAnalyticsResourceCategoriesManagement"], () => require("./logAnalyticsResourceCategoriesManagement"));

export { LogAnalyticsUnprocessedDataBucketManagementArgs, LogAnalyticsUnprocessedDataBucketManagementState } from "./logAnalyticsUnprocessedDataBucketManagement";
export type LogAnalyticsUnprocessedDataBucketManagement = import("./logAnalyticsUnprocessedDataBucketManagement").LogAnalyticsUnprocessedDataBucketManagement;
export const LogAnalyticsUnprocessedDataBucketManagement: typeof import("./logAnalyticsUnprocessedDataBucketManagement").LogAnalyticsUnprocessedDataBucketManagement = null as any;
utilities.lazyLoad(exports, ["LogAnalyticsUnprocessedDataBucketManagement"], () => require("./logAnalyticsUnprocessedDataBucketManagement"));

export { NamespaceArgs, NamespaceState } from "./namespace";
export type Namespace = import("./namespace").Namespace;
export const Namespace: typeof import("./namespace").Namespace = null as any;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));

export { NamespaceIngestTimeRuleArgs, NamespaceIngestTimeRuleState } from "./namespaceIngestTimeRule";
export type NamespaceIngestTimeRule = import("./namespaceIngestTimeRule").NamespaceIngestTimeRule;
export const NamespaceIngestTimeRule: typeof import("./namespaceIngestTimeRule").NamespaceIngestTimeRule = null as any;
utilities.lazyLoad(exports, ["NamespaceIngestTimeRule"], () => require("./namespaceIngestTimeRule"));

export { NamespaceIngestTimeRulesManagementArgs, NamespaceIngestTimeRulesManagementState } from "./namespaceIngestTimeRulesManagement";
export type NamespaceIngestTimeRulesManagement = import("./namespaceIngestTimeRulesManagement").NamespaceIngestTimeRulesManagement;
export const NamespaceIngestTimeRulesManagement: typeof import("./namespaceIngestTimeRulesManagement").NamespaceIngestTimeRulesManagement = null as any;
utilities.lazyLoad(exports, ["NamespaceIngestTimeRulesManagement"], () => require("./namespaceIngestTimeRulesManagement"));

export { NamespaceScheduledTaskArgs, NamespaceScheduledTaskState } from "./namespaceScheduledTask";
export type NamespaceScheduledTask = import("./namespaceScheduledTask").NamespaceScheduledTask;
export const NamespaceScheduledTask: typeof import("./namespaceScheduledTask").NamespaceScheduledTask = null as any;
utilities.lazyLoad(exports, ["NamespaceScheduledTask"], () => require("./namespaceScheduledTask"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity":
                return new LogAnalyticsEntity(name, <any>undefined, { urn })
            case "oci:LogAnalytics/logAnalyticsImportCustomContent:LogAnalyticsImportCustomContent":
                return new LogAnalyticsImportCustomContent(name, <any>undefined, { urn })
            case "oci:LogAnalytics/logAnalyticsLogGroup:LogAnalyticsLogGroup":
                return new LogAnalyticsLogGroup(name, <any>undefined, { urn })
            case "oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule":
                return new LogAnalyticsObjectCollectionRule(name, <any>undefined, { urn })
            case "oci:LogAnalytics/logAnalyticsPreferencesManagement:LogAnalyticsPreferencesManagement":
                return new LogAnalyticsPreferencesManagement(name, <any>undefined, { urn })
            case "oci:LogAnalytics/logAnalyticsResourceCategoriesManagement:LogAnalyticsResourceCategoriesManagement":
                return new LogAnalyticsResourceCategoriesManagement(name, <any>undefined, { urn })
            case "oci:LogAnalytics/logAnalyticsUnprocessedDataBucketManagement:LogAnalyticsUnprocessedDataBucketManagement":
                return new LogAnalyticsUnprocessedDataBucketManagement(name, <any>undefined, { urn })
            case "oci:LogAnalytics/namespace:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            case "oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule":
                return new NamespaceIngestTimeRule(name, <any>undefined, { urn })
            case "oci:LogAnalytics/namespaceIngestTimeRulesManagement:NamespaceIngestTimeRulesManagement":
                return new NamespaceIngestTimeRulesManagement(name, <any>undefined, { urn })
            case "oci:LogAnalytics/namespaceScheduledTask:NamespaceScheduledTask":
                return new NamespaceScheduledTask(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/logAnalyticsEntity", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/logAnalyticsImportCustomContent", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/logAnalyticsLogGroup", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/logAnalyticsObjectCollectionRule", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/logAnalyticsPreferencesManagement", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/logAnalyticsResourceCategoriesManagement", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/logAnalyticsUnprocessedDataBucketManagement", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/namespace", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/namespaceIngestTimeRule", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/namespaceIngestTimeRulesManagement", _module)
pulumi.runtime.registerResourceModule("oci", "LogAnalytics/namespaceScheduledTask", _module)
