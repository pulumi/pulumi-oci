// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Create a new log analytics entity.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsEntity = new oci.loganalytics.LogAnalyticsEntity("testLogAnalyticsEntity", {
 *     compartmentId: _var.compartment_id,
 *     entityTypeName: _var.log_analytics_entity_entity_type_name,
 *     namespace: _var.log_analytics_entity_namespace,
 *     cloudResourceId: oci_log_analytics_cloud_resource.test_cloud_resource.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     hostname: _var.log_analytics_entity_hostname,
 *     managementAgentId: oci_management_agent_management_agent.test_management_agent.id,
 *     metadata: {
 *         items: [{
 *             name: _var.log_analytics_entity_metadata_items_name,
 *             type: _var.log_analytics_entity_metadata_items_type,
 *             value: _var.log_analytics_entity_metadata_items_value,
 *         }],
 *     },
 *     properties: _var.log_analytics_entity_properties,
 *     sourceId: oci_log_analytics_source.test_source.id,
 *     timeLastDiscovered: _var.log_analytics_entity_time_last_discovered,
 *     timezoneRegion: _var.log_analytics_entity_timezone_region,
 * });
 * ```
 *
 * ## Import
 *
 * LogAnalyticsEntities can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity test_log_analytics_entity "namespaces/{namespaceName}/logAnalyticsEntities/{logAnalyticsEntityId}"
 * ```
 */
export class LogAnalyticsEntity extends pulumi.CustomResource {
    /**
     * Get an existing LogAnalyticsEntity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogAnalyticsEntityState, opts?: pulumi.CustomResourceOptions): LogAnalyticsEntity {
        return new LogAnalyticsEntity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity';

    /**
     * Returns true if the given object is an instance of LogAnalyticsEntity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnalyticsEntity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnalyticsEntity.__pulumiType;
    }

    /**
     * The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
     */
    public /*out*/ readonly areLogsCollected!: pulumi.Output<boolean>;
    /**
     * The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     */
    public readonly cloudResourceId!: pulumi.Output<string>;
    /**
     * (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Internal name for the log analytics entity type.
     */
    public /*out*/ readonly entityTypeInternalName!: pulumi.Output<string>;
    /**
     * Log analytics entity type name.
     */
    public readonly entityTypeName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * Management agent (management-agents resource kind) compartment OCID
     */
    public /*out*/ readonly managementAgentCompartmentId!: pulumi.Output<string>;
    /**
     * Management agent (management-agents resource kind) display name
     */
    public /*out*/ readonly managementAgentDisplayName!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the Management Agent.
     */
    public readonly managementAgentId!: pulumi.Output<string>;
    /**
     * (Updatable) Details of Entity Metadata.
     */
    public readonly metadata!: pulumi.Output<outputs.LogAnalytics.LogAnalyticsEntityMetadata>;
    /**
     * (Updatable) Log analytics entity name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * (Updatable) The name/value pairs for parameter values to be used in file patterns specified in log sources.
     */
    public readonly properties!: pulumi.Output<{[key: string]: any}>;
    /**
     * This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     */
    public readonly sourceId!: pulumi.Output<string>;
    /**
     * The current state of the log analytics entity.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * (Updatable) The date and time the resource was last discovered, in the format defined by RFC3339.
     */
    public readonly timeLastDiscovered!: pulumi.Output<string>;
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) The timezone region of the log analytics entity. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly timezoneRegion!: pulumi.Output<string>;

    /**
     * Create a LogAnalyticsEntity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogAnalyticsEntityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogAnalyticsEntityArgs | LogAnalyticsEntityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogAnalyticsEntityState | undefined;
            resourceInputs["areLogsCollected"] = state ? state.areLogsCollected : undefined;
            resourceInputs["cloudResourceId"] = state ? state.cloudResourceId : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["entityTypeInternalName"] = state ? state.entityTypeInternalName : undefined;
            resourceInputs["entityTypeName"] = state ? state.entityTypeName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["managementAgentCompartmentId"] = state ? state.managementAgentCompartmentId : undefined;
            resourceInputs["managementAgentDisplayName"] = state ? state.managementAgentDisplayName : undefined;
            resourceInputs["managementAgentId"] = state ? state.managementAgentId : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["sourceId"] = state ? state.sourceId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastDiscovered"] = state ? state.timeLastDiscovered : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timezoneRegion"] = state ? state.timezoneRegion : undefined;
        } else {
            const args = argsOrState as LogAnalyticsEntityArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.entityTypeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityTypeName'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["cloudResourceId"] = args ? args.cloudResourceId : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["entityTypeName"] = args ? args.entityTypeName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["managementAgentId"] = args ? args.managementAgentId : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["sourceId"] = args ? args.sourceId : undefined;
            resourceInputs["timeLastDiscovered"] = args ? args.timeLastDiscovered : undefined;
            resourceInputs["timezoneRegion"] = args ? args.timezoneRegion : undefined;
            resourceInputs["areLogsCollected"] = undefined /*out*/;
            resourceInputs["entityTypeInternalName"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["managementAgentCompartmentId"] = undefined /*out*/;
            resourceInputs["managementAgentDisplayName"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogAnalyticsEntity.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogAnalyticsEntity resources.
 */
export interface LogAnalyticsEntityState {
    /**
     * The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
     */
    areLogsCollected?: pulumi.Input<boolean>;
    /**
     * The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     */
    cloudResourceId?: pulumi.Input<string>;
    /**
     * (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Internal name for the log analytics entity type.
     */
    entityTypeInternalName?: pulumi.Input<string>;
    /**
     * Log analytics entity type name.
     */
    entityTypeName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
     */
    hostname?: pulumi.Input<string>;
    /**
     * lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * Management agent (management-agents resource kind) compartment OCID
     */
    managementAgentCompartmentId?: pulumi.Input<string>;
    /**
     * Management agent (management-agents resource kind) display name
     */
    managementAgentDisplayName?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the Management Agent.
     */
    managementAgentId?: pulumi.Input<string>;
    /**
     * (Updatable) Details of Entity Metadata.
     */
    metadata?: pulumi.Input<inputs.LogAnalytics.LogAnalyticsEntityMetadata>;
    /**
     * (Updatable) Log analytics entity name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace?: pulumi.Input<string>;
    /**
     * (Updatable) The name/value pairs for parameter values to be used in file patterns specified in log sources.
     */
    properties?: pulumi.Input<{[key: string]: any}>;
    /**
     * This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * The current state of the log analytics entity.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) The date and time the resource was last discovered, in the format defined by RFC3339.
     */
    timeLastDiscovered?: pulumi.Input<string>;
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The timezone region of the log analytics entity. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timezoneRegion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogAnalyticsEntity resource.
 */
export interface LogAnalyticsEntityArgs {
    /**
     * The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     */
    cloudResourceId?: pulumi.Input<string>;
    /**
     * (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Log analytics entity type name.
     */
    entityTypeName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
     */
    hostname?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the Management Agent.
     */
    managementAgentId?: pulumi.Input<string>;
    /**
     * (Updatable) Details of Entity Metadata.
     */
    metadata?: pulumi.Input<inputs.LogAnalytics.LogAnalyticsEntityMetadata>;
    /**
     * (Updatable) Log analytics entity name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
    /**
     * (Updatable) The name/value pairs for parameter values to be used in file patterns specified in log sources.
     */
    properties?: pulumi.Input<{[key: string]: any}>;
    /**
     * This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * (Updatable) The date and time the resource was last discovered, in the format defined by RFC3339.
     */
    timeLastDiscovered?: pulumi.Input<string>;
    /**
     * (Updatable) The timezone region of the log analytics entity. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timezoneRegion?: pulumi.Input<string>;
}
