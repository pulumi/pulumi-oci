// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Log Analytics Entity Type resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Add custom log analytics entity type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsEntityType = new oci.loganalytics.LogAnalyticsEntityType("test_log_analytics_entity_type", {
 *     name: logAnalyticsEntityTypeName,
 *     namespace: logAnalyticsEntityTypeNamespace,
 *     category: logAnalyticsEntityTypeCategory,
 *     properties: [{
 *         name: logAnalyticsEntityTypePropertiesName,
 *         description: logAnalyticsEntityTypePropertiesDescription,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * LogAnalyticsEntityTypes can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:LogAnalytics/logAnalyticsEntityType:LogAnalyticsEntityType test_log_analytics_entity_type "namespaces/{namespaceName}/logAnalyticsEntityTypes"
 * ```
 */
export class LogAnalyticsEntityType extends pulumi.CustomResource {
    /**
     * Get an existing LogAnalyticsEntityType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogAnalyticsEntityTypeState, opts?: pulumi.CustomResourceOptions): LogAnalyticsEntityType {
        return new LogAnalyticsEntityType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/logAnalyticsEntityType:LogAnalyticsEntityType';

    /**
     * Returns true if the given object is an instance of LogAnalyticsEntityType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnalyticsEntityType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnalyticsEntityType.__pulumiType;
    }

    /**
     * Log analytics entity type category. Category will be used for grouping and filtering.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * Log analytics entity type group. This can be CLOUD (OCI) or NON_CLOUD otherwise.
     */
    public /*out*/ readonly cloudType!: pulumi.Output<string>;
    /**
     * Internal name for the log analytics entity type.
     */
    public /*out*/ readonly internalName!: pulumi.Output<string>;
    public /*out*/ readonly managementAgentEligibilityStatus!: pulumi.Output<string>;
    /**
     * Log analytics entity type name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * Log analytics entity type property definition.
     */
    public readonly properties!: pulumi.Output<outputs.LogAnalytics.LogAnalyticsEntityTypeProperty[]>;
    /**
     * The current lifecycle state of the log analytics entity type.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Time the log analytics entity type was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * Time the log analytics entity type was updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a LogAnalyticsEntityType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogAnalyticsEntityTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogAnalyticsEntityTypeArgs | LogAnalyticsEntityTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogAnalyticsEntityTypeState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["internalName"] = state ? state.internalName : undefined;
            resourceInputs["managementAgentEligibilityStatus"] = state ? state.managementAgentEligibilityStatus : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as LogAnalyticsEntityTypeArgs | undefined;
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["cloudType"] = undefined /*out*/;
            resourceInputs["internalName"] = undefined /*out*/;
            resourceInputs["managementAgentEligibilityStatus"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogAnalyticsEntityType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogAnalyticsEntityType resources.
 */
export interface LogAnalyticsEntityTypeState {
    /**
     * Log analytics entity type category. Category will be used for grouping and filtering.
     */
    category?: pulumi.Input<string>;
    /**
     * Log analytics entity type group. This can be CLOUD (OCI) or NON_CLOUD otherwise.
     */
    cloudType?: pulumi.Input<string>;
    /**
     * Internal name for the log analytics entity type.
     */
    internalName?: pulumi.Input<string>;
    managementAgentEligibilityStatus?: pulumi.Input<string>;
    /**
     * Log analytics entity type name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Log analytics entity type property definition.
     */
    properties?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.LogAnalyticsEntityTypeProperty>[]>;
    /**
     * The current lifecycle state of the log analytics entity type.
     */
    state?: pulumi.Input<string>;
    /**
     * Time the log analytics entity type was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * Time the log analytics entity type was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogAnalyticsEntityType resource.
 */
export interface LogAnalyticsEntityTypeArgs {
    /**
     * Log analytics entity type category. Category will be used for grouping and filtering.
     */
    category?: pulumi.Input<string>;
    /**
     * Log analytics entity type name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
    /**
     * Log analytics entity type property definition.
     */
    properties?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.LogAnalyticsEntityTypeProperty>[]>;
}
