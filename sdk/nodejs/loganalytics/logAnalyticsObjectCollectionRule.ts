// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Create a configuration to collect logs from object storage bucket.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsObjectCollectionRule = new oci.loganalytics.LogAnalyticsObjectCollectionRule("test_log_analytics_object_collection_rule", {
 *     compartmentId: compartmentId,
 *     logGroupId: testLogGroup.id,
 *     logSourceName: logAnalyticsObjectCollectionRuleLogSourceName,
 *     name: logAnalyticsObjectCollectionRuleName,
 *     namespace: logAnalyticsObjectCollectionRuleNamespace,
 *     osBucketName: testBucket.name,
 *     osNamespace: logAnalyticsObjectCollectionRuleOsNamespace,
 *     charEncoding: logAnalyticsObjectCollectionRuleCharEncoding,
 *     collectionType: logAnalyticsObjectCollectionRuleCollectionType,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: logAnalyticsObjectCollectionRuleDescription,
 *     entityId: testEntity.id,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     isEnabled: logAnalyticsObjectCollectionRuleIsEnabled,
 *     isForceHistoricCollection: logAnalyticsObjectCollectionRuleIsForceHistoricCollection,
 *     logSet: logAnalyticsObjectCollectionRuleLogSet,
 *     logSetExtRegex: logAnalyticsObjectCollectionRuleLogSetExtRegex,
 *     logSetKey: logAnalyticsObjectCollectionRuleLogSetKey,
 *     logType: logAnalyticsObjectCollectionRuleLogType,
 *     objectNameFilters: logAnalyticsObjectCollectionRuleObjectNameFilters,
 *     overrides: logAnalyticsObjectCollectionRuleOverrides,
 *     pollSince: logAnalyticsObjectCollectionRulePollSince,
 *     pollTill: logAnalyticsObjectCollectionRulePollTill,
 *     timezone: logAnalyticsObjectCollectionRuleTimezone,
 * });
 * ```
 *
 * ## Import
 *
 * LogAnalyticsObjectCollectionRules can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule test_log_analytics_object_collection_rule "namespaces/{namespaceName}/logAnalyticsObjectCollectionRules/{logAnalyticsObjectCollectionRuleId}"
 * ```
 */
export class LogAnalyticsObjectCollectionRule extends pulumi.CustomResource {
    /**
     * Get an existing LogAnalyticsObjectCollectionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogAnalyticsObjectCollectionRuleState, opts?: pulumi.CustomResourceOptions): LogAnalyticsObjectCollectionRule {
        return new LogAnalyticsObjectCollectionRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule';

    /**
     * Returns true if the given object is an instance of LogAnalyticsObjectCollectionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnalyticsObjectCollectionRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnalyticsObjectCollectionRule.__pulumiType;
    }

    /**
     * (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     */
    public readonly charEncoding!: pulumi.Output<string>;
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     */
    public readonly collectionType!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     */
    public readonly entityId!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Whether or not this rule is currently enabled.
     */
    public readonly isEnabled!: pulumi.Output<boolean>;
    /**
     * Flag to allow historic collection if poll period overlaps with existing ACTIVE collection rule
     */
    public readonly isForceHistoricCollection!: pulumi.Output<boolean>;
    /**
     * A detailed status of the life cycle state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     */
    public readonly logGroupId!: pulumi.Output<string>;
    /**
     * (Updatable) The logSet to be associated with the processed logs. The logSet feature can be used by customers with high volume of data  and this feature has to be enabled for a given tenancy prior to its usage. When logSetExtRegex value is provided, it will take precedence over this logSet value and logSet will be computed dynamically  using logSetKey and logSetExtRegex.
     */
    public readonly logSet!: pulumi.Output<string>;
    /**
     * (Updatable) The regex to be applied against given logSetKey. Regex has to be in string escaped format.
     */
    public readonly logSetExtRegex!: pulumi.Output<string>;
    /**
     * (Updatable) An optional parameter to indicate from where the logSet to be extracted using logSetExtRegex. Default value is OBJECT_PATH (e.g. /n/<namespace>/b/<bucketname>/o/<objectname>).
     */
    public readonly logSetKey!: pulumi.Output<string>;
    /**
     * (Updatable) Name of the Logging Analytics Source to use for the processing.
     */
    public readonly logSourceName!: pulumi.Output<string>;
    /**
     * Type of files/objects in this object collection rule.
     */
    public readonly logType!: pulumi.Output<string>;
    /**
     * A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     */
    public readonly objectNameFilters!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the Object Storage bucket.
     */
    public readonly osBucketName!: pulumi.Output<string>;
    /**
     * Object Storage namespace.
     */
    public readonly osNamespace!: pulumi.Output<string>;
    /**
     * (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are: logSourceName, charEncoding, entityId. Supported matchType for override are "contains".
     */
    public readonly overrides!: pulumi.Output<outputs.LogAnalytics.LogAnalyticsObjectCollectionRuleOverride[]>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC or HISTORIC_LIVE collection types. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     */
    public readonly pollSince!: pulumi.Output<string>;
    /**
     * The newest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC collection type. When collectionType is LIVE or HISTORIC_LIVE, specifying pollTill will result in error.
     */
    public readonly pollTill!: pulumi.Output<string>;
    /**
     * The current state of the rule.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The time when this rule was created. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time when this rule was last updated. An RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) Timezone to be used when processing log entries whose timestamps do not include an explicit timezone.  When this property is not specified, the timezone of the entity specified is used.  If the entity is also not specified or do not have a valid timezone then UTC is used. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly timezone!: pulumi.Output<string>;

    /**
     * Create a LogAnalyticsObjectCollectionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogAnalyticsObjectCollectionRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogAnalyticsObjectCollectionRuleArgs | LogAnalyticsObjectCollectionRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogAnalyticsObjectCollectionRuleState | undefined;
            resourceInputs["charEncoding"] = state ? state.charEncoding : undefined;
            resourceInputs["collectionType"] = state ? state.collectionType : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["entityId"] = state ? state.entityId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isEnabled"] = state ? state.isEnabled : undefined;
            resourceInputs["isForceHistoricCollection"] = state ? state.isForceHistoricCollection : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["logGroupId"] = state ? state.logGroupId : undefined;
            resourceInputs["logSet"] = state ? state.logSet : undefined;
            resourceInputs["logSetExtRegex"] = state ? state.logSetExtRegex : undefined;
            resourceInputs["logSetKey"] = state ? state.logSetKey : undefined;
            resourceInputs["logSourceName"] = state ? state.logSourceName : undefined;
            resourceInputs["logType"] = state ? state.logType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["objectNameFilters"] = state ? state.objectNameFilters : undefined;
            resourceInputs["osBucketName"] = state ? state.osBucketName : undefined;
            resourceInputs["osNamespace"] = state ? state.osNamespace : undefined;
            resourceInputs["overrides"] = state ? state.overrides : undefined;
            resourceInputs["pollSince"] = state ? state.pollSince : undefined;
            resourceInputs["pollTill"] = state ? state.pollTill : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as LogAnalyticsObjectCollectionRuleArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.logGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logGroupId'");
            }
            if ((!args || args.logSourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logSourceName'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.osBucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osBucketName'");
            }
            if ((!args || args.osNamespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osNamespace'");
            }
            resourceInputs["charEncoding"] = args ? args.charEncoding : undefined;
            resourceInputs["collectionType"] = args ? args.collectionType : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["entityId"] = args ? args.entityId : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
            resourceInputs["isForceHistoricCollection"] = args ? args.isForceHistoricCollection : undefined;
            resourceInputs["logGroupId"] = args ? args.logGroupId : undefined;
            resourceInputs["logSet"] = args ? args.logSet : undefined;
            resourceInputs["logSetExtRegex"] = args ? args.logSetExtRegex : undefined;
            resourceInputs["logSetKey"] = args ? args.logSetKey : undefined;
            resourceInputs["logSourceName"] = args ? args.logSourceName : undefined;
            resourceInputs["logType"] = args ? args.logType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["objectNameFilters"] = args ? args.objectNameFilters : undefined;
            resourceInputs["osBucketName"] = args ? args.osBucketName : undefined;
            resourceInputs["osNamespace"] = args ? args.osNamespace : undefined;
            resourceInputs["overrides"] = args ? args.overrides : undefined;
            resourceInputs["pollSince"] = args ? args.pollSince : undefined;
            resourceInputs["pollTill"] = args ? args.pollTill : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogAnalyticsObjectCollectionRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogAnalyticsObjectCollectionRule resources.
 */
export interface LogAnalyticsObjectCollectionRuleState {
    /**
     * (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     */
    charEncoding?: pulumi.Input<string>;
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     */
    collectionType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     */
    entityId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Whether or not this rule is currently enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Flag to allow historic collection if poll period overlaps with existing ACTIVE collection rule
     */
    isForceHistoricCollection?: pulumi.Input<boolean>;
    /**
     * A detailed status of the life cycle state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * (Updatable) The logSet to be associated with the processed logs. The logSet feature can be used by customers with high volume of data  and this feature has to be enabled for a given tenancy prior to its usage. When logSetExtRegex value is provided, it will take precedence over this logSet value and logSet will be computed dynamically  using logSetKey and logSetExtRegex.
     */
    logSet?: pulumi.Input<string>;
    /**
     * (Updatable) The regex to be applied against given logSetKey. Regex has to be in string escaped format.
     */
    logSetExtRegex?: pulumi.Input<string>;
    /**
     * (Updatable) An optional parameter to indicate from where the logSet to be extracted using logSetExtRegex. Default value is OBJECT_PATH (e.g. /n/<namespace>/b/<bucketname>/o/<objectname>).
     */
    logSetKey?: pulumi.Input<string>;
    /**
     * (Updatable) Name of the Logging Analytics Source to use for the processing.
     */
    logSourceName?: pulumi.Input<string>;
    /**
     * Type of files/objects in this object collection rule.
     */
    logType?: pulumi.Input<string>;
    /**
     * A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace?: pulumi.Input<string>;
    /**
     * (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     */
    objectNameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Object Storage bucket.
     */
    osBucketName?: pulumi.Input<string>;
    /**
     * Object Storage namespace.
     */
    osNamespace?: pulumi.Input<string>;
    /**
     * (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are: logSourceName, charEncoding, entityId. Supported matchType for override are "contains".
     */
    overrides?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.LogAnalyticsObjectCollectionRuleOverride>[]>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC or HISTORIC_LIVE collection types. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     */
    pollSince?: pulumi.Input<string>;
    /**
     * The newest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC collection type. When collectionType is LIVE or HISTORIC_LIVE, specifying pollTill will result in error.
     */
    pollTill?: pulumi.Input<string>;
    /**
     * The current state of the rule.
     */
    state?: pulumi.Input<string>;
    /**
     * The time when this rule was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when this rule was last updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) Timezone to be used when processing log entries whose timestamps do not include an explicit timezone.  When this property is not specified, the timezone of the entity specified is used.  If the entity is also not specified or do not have a valid timezone then UTC is used. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogAnalyticsObjectCollectionRule resource.
 */
export interface LogAnalyticsObjectCollectionRuleArgs {
    /**
     * (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     */
    charEncoding?: pulumi.Input<string>;
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     */
    collectionType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     */
    entityId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Whether or not this rule is currently enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Flag to allow historic collection if poll period overlaps with existing ACTIVE collection rule
     */
    isForceHistoricCollection?: pulumi.Input<boolean>;
    /**
     * (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     */
    logGroupId: pulumi.Input<string>;
    /**
     * (Updatable) The logSet to be associated with the processed logs. The logSet feature can be used by customers with high volume of data  and this feature has to be enabled for a given tenancy prior to its usage. When logSetExtRegex value is provided, it will take precedence over this logSet value and logSet will be computed dynamically  using logSetKey and logSetExtRegex.
     */
    logSet?: pulumi.Input<string>;
    /**
     * (Updatable) The regex to be applied against given logSetKey. Regex has to be in string escaped format.
     */
    logSetExtRegex?: pulumi.Input<string>;
    /**
     * (Updatable) An optional parameter to indicate from where the logSet to be extracted using logSetExtRegex. Default value is OBJECT_PATH (e.g. /n/<namespace>/b/<bucketname>/o/<objectname>).
     */
    logSetKey?: pulumi.Input<string>;
    /**
     * (Updatable) Name of the Logging Analytics Source to use for the processing.
     */
    logSourceName: pulumi.Input<string>;
    /**
     * Type of files/objects in this object collection rule.
     */
    logType?: pulumi.Input<string>;
    /**
     * A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     */
    name?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
    /**
     * (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard "*". For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     */
    objectNameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the Object Storage bucket.
     */
    osBucketName: pulumi.Input<string>;
    /**
     * Object Storage namespace.
     */
    osNamespace: pulumi.Input<string>;
    /**
     * (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are: logSourceName, charEncoding, entityId. Supported matchType for override are "contains".
     */
    overrides?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.LogAnalyticsObjectCollectionRuleOverride>[]>;
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC or HISTORIC_LIVE collection types. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     */
    pollSince?: pulumi.Input<string>;
    /**
     * The newest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC collection type. When collectionType is LIVE or HISTORIC_LIVE, specifying pollTill will result in error.
     */
    pollTill?: pulumi.Input<string>;
    /**
     * (Updatable) Timezone to be used when processing log entries whose timestamps do not include an explicit timezone.  When this property is not specified, the timezone of the entity specified is used.  If the entity is also not specified or do not have a valid timezone then UTC is used. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timezone?: pulumi.Input<string>;
}
