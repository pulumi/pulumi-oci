// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Log Analytics Preferences Management resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Updates the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsPreferencesManagement = new oci.loganalytics.LogAnalyticsPreferencesManagement("test_log_analytics_preferences_management", {
 *     namespace: logAnalyticsPreferencesManagementNamespace,
 *     items: [{
 *         name: logAnalyticsPreferencesManagementItemsName,
 *         value: logAnalyticsPreferencesManagementItemsValue,
 *     }],
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Import is not supported for LogAnalyticsPreferencesManagement
 */
export class LogAnalyticsPreferencesManagement extends pulumi.CustomResource {
    /**
     * Get an existing LogAnalyticsPreferencesManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogAnalyticsPreferencesManagementState, opts?: pulumi.CustomResourceOptions): LogAnalyticsPreferencesManagement {
        return new LogAnalyticsPreferencesManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/logAnalyticsPreferencesManagement:LogAnalyticsPreferencesManagement';

    /**
     * Returns true if the given object is an instance of LogAnalyticsPreferencesManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnalyticsPreferencesManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnalyticsPreferencesManagement.__pulumiType;
    }

    /**
     * An array of tenant preference details.
     */
    public readonly items!: pulumi.Output<outputs.LogAnalytics.LogAnalyticsPreferencesManagementItem[] | undefined>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly namespace!: pulumi.Output<string>;

    /**
     * Create a LogAnalyticsPreferencesManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogAnalyticsPreferencesManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogAnalyticsPreferencesManagementArgs | LogAnalyticsPreferencesManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogAnalyticsPreferencesManagementState | undefined;
            resourceInputs["items"] = state ? state.items : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
        } else {
            const args = argsOrState as LogAnalyticsPreferencesManagementArgs | undefined;
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["items"] = args ? args.items : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogAnalyticsPreferencesManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogAnalyticsPreferencesManagement resources.
 */
export interface LogAnalyticsPreferencesManagementState {
    /**
     * An array of tenant preference details.
     */
    items?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.LogAnalyticsPreferencesManagementItem>[]>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogAnalyticsPreferencesManagement resource.
 */
export interface LogAnalyticsPreferencesManagementArgs {
    /**
     * An array of tenant preference details.
     */
    items?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.LogAnalyticsPreferencesManagementItem>[]>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace: pulumi.Input<string>;
}
