// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Log Analytics Resource Categories Management resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Updates the category assignments of DASHBOARD and SAVEDSEARCH resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLogAnalyticsResourceCategoriesManagement = new oci.loganalytics.LogAnalyticsResourceCategoriesManagement("test_log_analytics_resource_categories_management", {
 *     namespace: logAnalyticsResourceCategoriesManagementNamespace,
 *     resourceId: ociLogAnalyticsResourceCategoriesManagementResourceId,
 *     resourceType: logAnalyticsResourceCategoriesManagementResourceType,
 *     resourceCategories: logAnalyticsResourceCategoriesManagementResourceCategories,
 * });
 * ```
 *
 * ## Import
 *
 * LogAnalyticsResourceCategoriesManagement cannot be imported.
 */
export class LogAnalyticsResourceCategoriesManagement extends pulumi.CustomResource {
    /**
     * Get an existing LogAnalyticsResourceCategoriesManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogAnalyticsResourceCategoriesManagementState, opts?: pulumi.CustomResourceOptions): LogAnalyticsResourceCategoriesManagement {
        return new LogAnalyticsResourceCategoriesManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/logAnalyticsResourceCategoriesManagement:LogAnalyticsResourceCategoriesManagement';

    /**
     * Returns true if the given object is an instance of LogAnalyticsResourceCategoriesManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogAnalyticsResourceCategoriesManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogAnalyticsResourceCategoriesManagement.__pulumiType;
    }

    /**
     * The Logging Analytics namespace used for the request.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * The list of categories to be assigned to the resource.
     */
    public readonly resourceCategories!: pulumi.Output<string[]>;
    /**
     * The resource unique identifier for which catagories are managed.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * The resource type of the resource for which categories are managed.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly resourceType!: pulumi.Output<string>;

    /**
     * Create a LogAnalyticsResourceCategoriesManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogAnalyticsResourceCategoriesManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogAnalyticsResourceCategoriesManagementArgs | LogAnalyticsResourceCategoriesManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogAnalyticsResourceCategoriesManagementState | undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["resourceCategories"] = state ? state.resourceCategories : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
        } else {
            const args = argsOrState as LogAnalyticsResourceCategoriesManagementArgs | undefined;
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.resourceCategories === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceCategories'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["resourceCategories"] = args ? args.resourceCategories : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogAnalyticsResourceCategoriesManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogAnalyticsResourceCategoriesManagement resources.
 */
export interface LogAnalyticsResourceCategoriesManagementState {
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The list of categories to be assigned to the resource.
     */
    resourceCategories?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource unique identifier for which catagories are managed.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The resource type of the resource for which categories are managed.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    resourceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogAnalyticsResourceCategoriesManagement resource.
 */
export interface LogAnalyticsResourceCategoriesManagementArgs {
    /**
     * The Logging Analytics namespace used for the request.
     */
    namespace: pulumi.Input<string>;
    /**
     * The list of categories to be assigned to the resource.
     */
    resourceCategories: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource unique identifier for which catagories are managed.
     */
    resourceId: pulumi.Input<string>;
    /**
     * The resource type of the resource for which categories are managed.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    resourceType: pulumi.Input<string>;
}
