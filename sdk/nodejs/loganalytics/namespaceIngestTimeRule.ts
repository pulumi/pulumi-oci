// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Creates a new ingest time rule in the specified compartment. You may also specify optional information such as description, defined tags, and free-form tags.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceIngestTimeRule = new oci.loganalytics.NamespaceIngestTimeRule("test_namespace_ingest_time_rule", {
 *     actions: [{
 *         compartmentId: compartmentId,
 *         metricName: testMetric.name,
 *         namespace: namespaceIngestTimeRuleActionsNamespace,
 *         type: namespaceIngestTimeRuleActionsType,
 *         dimensions: namespaceIngestTimeRuleActionsDimensions,
 *         resourceGroup: namespaceIngestTimeRuleActionsResourceGroup,
 *     }],
 *     compartmentId: compartmentId,
 *     conditions: {
 *         fieldName: namespaceIngestTimeRuleConditionsFieldName,
 *         fieldOperator: namespaceIngestTimeRuleConditionsFieldOperator,
 *         fieldValue: namespaceIngestTimeRuleConditionsFieldValue,
 *         kind: namespaceIngestTimeRuleConditionsKind,
 *         additionalConditions: [{
 *             conditionField: namespaceIngestTimeRuleConditionsAdditionalConditionsConditionField,
 *             conditionOperator: namespaceIngestTimeRuleConditionsAdditionalConditionsConditionOperator,
 *             conditionValue: namespaceIngestTimeRuleConditionsAdditionalConditionsConditionValue,
 *         }],
 *     },
 *     displayName: namespaceIngestTimeRuleDisplayName,
 *     namespace: namespaceIngestTimeRuleNamespace,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: namespaceIngestTimeRuleDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * NamespaceIngestTimeRules can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule test_namespace_ingest_time_rule "namespaces/{namespaceName}/ingestTimeRules/{ingestTimeRuleId}"
 * ```
 */
export class NamespaceIngestTimeRule extends pulumi.CustomResource {
    /**
     * Get an existing NamespaceIngestTimeRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamespaceIngestTimeRuleState, opts?: pulumi.CustomResourceOptions): NamespaceIngestTimeRule {
        return new NamespaceIngestTimeRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule';

    /**
     * Returns true if the given object is an instance of NamespaceIngestTimeRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NamespaceIngestTimeRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NamespaceIngestTimeRule.__pulumiType;
    }

    /**
     * (Updatable) The action(s) to be performed if the ingest time rule condition(s) are satisfied.
     */
    declare public readonly actions: pulumi.Output<outputs.LogAnalytics.NamespaceIngestTimeRuleAction[]>;
    /**
     * (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) The condition(s) to evaluate for an ingest time rule.
     */
    declare public readonly conditions: pulumi.Output<outputs.LogAnalytics.NamespaceIngestTimeRuleConditions>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Description for this resource.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) The ingest time rule display name.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    declare public /*out*/ readonly ingestTimeRuleId: pulumi.Output<string>;
    /**
     * A flag indicating whether or not the ingest time rule is enabled.
     */
    declare public /*out*/ readonly isEnabled: pulumi.Output<boolean>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly namespace: pulumi.Output<string>;
    /**
     * The current state of the ingest time rule.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a NamespaceIngestTimeRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceIngestTimeRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamespaceIngestTimeRuleArgs | NamespaceIngestTimeRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamespaceIngestTimeRuleState | undefined;
            resourceInputs["actions"] = state?.actions;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["conditions"] = state?.conditions;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["ingestTimeRuleId"] = state?.ingestTimeRuleId;
            resourceInputs["isEnabled"] = state?.isEnabled;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as NamespaceIngestTimeRuleArgs | undefined;
            if (args?.actions === undefined && !opts.urn) {
                throw new Error("Missing required property 'actions'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.conditions === undefined && !opts.urn) {
                throw new Error("Missing required property 'conditions'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.namespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["actions"] = args?.actions;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["conditions"] = args?.conditions;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["ingestTimeRuleId"] = undefined /*out*/;
            resourceInputs["isEnabled"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NamespaceIngestTimeRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NamespaceIngestTimeRule resources.
 */
export interface NamespaceIngestTimeRuleState {
    /**
     * (Updatable) The action(s) to be performed if the ingest time rule condition(s) are satisfied.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.LogAnalytics.NamespaceIngestTimeRuleAction>[]>;
    /**
     * (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The condition(s) to evaluate for an ingest time rule.
     */
    conditions?: pulumi.Input<inputs.LogAnalytics.NamespaceIngestTimeRuleConditions>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Description for this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The ingest time rule display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    ingestTimeRuleId?: pulumi.Input<string>;
    /**
     * A flag indicating whether or not the ingest time rule is enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace?: pulumi.Input<string>;
    /**
     * The current state of the ingest time rule.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NamespaceIngestTimeRule resource.
 */
export interface NamespaceIngestTimeRuleArgs {
    /**
     * (Updatable) The action(s) to be performed if the ingest time rule condition(s) are satisfied.
     */
    actions: pulumi.Input<pulumi.Input<inputs.LogAnalytics.NamespaceIngestTimeRuleAction>[]>;
    /**
     * (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) The condition(s) to evaluate for an ingest time rule.
     */
    conditions: pulumi.Input<inputs.LogAnalytics.NamespaceIngestTimeRuleConditions>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Description for this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The ingest time rule display name.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace: pulumi.Input<string>;
}
