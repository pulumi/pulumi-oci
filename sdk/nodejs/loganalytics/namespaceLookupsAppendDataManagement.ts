// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Namespace Lookups Append Data Management resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Appends data to the lookup content. The csv file containing the content to be appended is passed in as binary data in the request.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceLookupsAppendDataManagement = new oci.loganalytics.NamespaceLookupsAppendDataManagement("test_namespace_lookups_append_data_management", {
 *     appendLookupFileBody: namespaceLookupsAppendDataManagementAppendLookupFileBody,
 *     lookupName: namespaceLookupsAppendDataManagementLookupName,
 *     namespace: namespaceLookupsAppendDataManagementNamespace,
 *     charEncoding: namespaceLookupsAppendDataManagementCharEncoding,
 *     expect: namespaceLookupsAppendDataManagementExpect,
 *     isForce: namespaceLookupsAppendDataManagementIsForce,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for NamespaceLookupsAppendDataManagement
 */
export class NamespaceLookupsAppendDataManagement extends pulumi.CustomResource {
    /**
     * Get an existing NamespaceLookupsAppendDataManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamespaceLookupsAppendDataManagementState, opts?: pulumi.CustomResourceOptions): NamespaceLookupsAppendDataManagement {
        return new NamespaceLookupsAppendDataManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/namespaceLookupsAppendDataManagement:NamespaceLookupsAppendDataManagement';

    /**
     * Returns true if the given object is an instance of NamespaceLookupsAppendDataManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NamespaceLookupsAppendDataManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NamespaceLookupsAppendDataManagement.__pulumiType;
    }

    declare public readonly appendLookupFile: pulumi.Output<string>;
    /**
     * The character encoding of the uploaded file.
     */
    declare public readonly charEncoding: pulumi.Output<string>;
    /**
     * A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
     */
    declare public readonly expect: pulumi.Output<string>;
    /**
     * is force
     */
    declare public readonly isForce: pulumi.Output<boolean>;
    /**
     * The name of the lookup to operate on.
     */
    declare public readonly lookupName: pulumi.Output<string>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly namespace: pulumi.Output<string>;

    /**
     * Create a NamespaceLookupsAppendDataManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceLookupsAppendDataManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamespaceLookupsAppendDataManagementArgs | NamespaceLookupsAppendDataManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamespaceLookupsAppendDataManagementState | undefined;
            resourceInputs["appendLookupFile"] = state?.appendLookupFile;
            resourceInputs["charEncoding"] = state?.charEncoding;
            resourceInputs["expect"] = state?.expect;
            resourceInputs["isForce"] = state?.isForce;
            resourceInputs["lookupName"] = state?.lookupName;
            resourceInputs["namespace"] = state?.namespace;
        } else {
            const args = argsOrState as NamespaceLookupsAppendDataManagementArgs | undefined;
            if (args?.appendLookupFile === undefined && !opts.urn) {
                throw new Error("Missing required property 'appendLookupFile'");
            }
            if (args?.lookupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'lookupName'");
            }
            if (args?.namespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["appendLookupFile"] = args?.appendLookupFile;
            resourceInputs["charEncoding"] = args?.charEncoding;
            resourceInputs["expect"] = args?.expect;
            resourceInputs["isForce"] = args?.isForce;
            resourceInputs["lookupName"] = args?.lookupName;
            resourceInputs["namespace"] = args?.namespace;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NamespaceLookupsAppendDataManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NamespaceLookupsAppendDataManagement resources.
 */
export interface NamespaceLookupsAppendDataManagementState {
    appendLookupFile?: pulumi.Input<string>;
    /**
     * The character encoding of the uploaded file.
     */
    charEncoding?: pulumi.Input<string>;
    /**
     * A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
     */
    expect?: pulumi.Input<string>;
    /**
     * is force
     */
    isForce?: pulumi.Input<boolean>;
    /**
     * The name of the lookup to operate on.
     */
    lookupName?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NamespaceLookupsAppendDataManagement resource.
 */
export interface NamespaceLookupsAppendDataManagementArgs {
    appendLookupFile: pulumi.Input<string>;
    /**
     * The character encoding of the uploaded file.
     */
    charEncoding?: pulumi.Input<string>;
    /**
     * A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
     */
    expect?: pulumi.Input<string>;
    /**
     * is force
     */
    isForce?: pulumi.Input<boolean>;
    /**
     * The name of the lookup to operate on.
     */
    lookupName: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace: pulumi.Input<string>;
}
