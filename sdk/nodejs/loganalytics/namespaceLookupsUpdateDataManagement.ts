// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Namespace Lookups Update Data Management resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * Updates the lookup content. The csv file containing the content to be updated is passed in as binary data in the request.
 */
export class NamespaceLookupsUpdateDataManagement extends pulumi.CustomResource {
    /**
     * Get an existing NamespaceLookupsUpdateDataManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamespaceLookupsUpdateDataManagementState, opts?: pulumi.CustomResourceOptions): NamespaceLookupsUpdateDataManagement {
        return new NamespaceLookupsUpdateDataManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/namespaceLookupsUpdateDataManagement:NamespaceLookupsUpdateDataManagement';

    /**
     * Returns true if the given object is an instance of NamespaceLookupsUpdateDataManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NamespaceLookupsUpdateDataManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NamespaceLookupsUpdateDataManagement.__pulumiType;
    }

    /**
     * The character encoding of the uploaded file.
     */
    declare public readonly charEncoding: pulumi.Output<string>;
    /**
     * A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
     */
    declare public readonly expect: pulumi.Output<string>;
    /**
     * is force
     */
    declare public readonly isForce: pulumi.Output<boolean>;
    /**
     * The name of the lookup to operate on.
     */
    declare public readonly lookupName: pulumi.Output<string>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly namespace: pulumi.Output<string>;
    declare public readonly updateLookupFile: pulumi.Output<string>;

    /**
     * Create a NamespaceLookupsUpdateDataManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceLookupsUpdateDataManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamespaceLookupsUpdateDataManagementArgs | NamespaceLookupsUpdateDataManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamespaceLookupsUpdateDataManagementState | undefined;
            resourceInputs["charEncoding"] = state?.charEncoding;
            resourceInputs["expect"] = state?.expect;
            resourceInputs["isForce"] = state?.isForce;
            resourceInputs["lookupName"] = state?.lookupName;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["updateLookupFile"] = state?.updateLookupFile;
        } else {
            const args = argsOrState as NamespaceLookupsUpdateDataManagementArgs | undefined;
            if (args?.lookupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'lookupName'");
            }
            if (args?.namespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if (args?.updateLookupFile === undefined && !opts.urn) {
                throw new Error("Missing required property 'updateLookupFile'");
            }
            resourceInputs["charEncoding"] = args?.charEncoding;
            resourceInputs["expect"] = args?.expect;
            resourceInputs["isForce"] = args?.isForce;
            resourceInputs["lookupName"] = args?.lookupName;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["updateLookupFile"] = args?.updateLookupFile;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NamespaceLookupsUpdateDataManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NamespaceLookupsUpdateDataManagement resources.
 */
export interface NamespaceLookupsUpdateDataManagementState {
    /**
     * The character encoding of the uploaded file.
     */
    charEncoding?: pulumi.Input<string>;
    /**
     * A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
     */
    expect?: pulumi.Input<string>;
    /**
     * is force
     */
    isForce?: pulumi.Input<boolean>;
    /**
     * The name of the lookup to operate on.
     */
    lookupName?: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace?: pulumi.Input<string>;
    updateLookupFile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NamespaceLookupsUpdateDataManagement resource.
 */
export interface NamespaceLookupsUpdateDataManagementArgs {
    /**
     * The character encoding of the uploaded file.
     */
    charEncoding?: pulumi.Input<string>;
    /**
     * A value of `100-continue` requests preliminary verification of the request method, path, and headers before the request body is sent. If no error results from such verification, the server will send a 100 (Continue) interim response to indicate readiness for the request body. The only allowed value for this parameter is "100-Continue" (case-insensitive).
     */
    expect?: pulumi.Input<string>;
    /**
     * is force
     */
    isForce?: pulumi.Input<boolean>;
    /**
     * The name of the lookup to operate on.
     */
    lookupName: pulumi.Input<string>;
    /**
     * The Logging Analytics namespace used for the request. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace: pulumi.Input<string>;
    updateLookupFile: pulumi.Input<string>;
}
