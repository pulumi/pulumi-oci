// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
 *
 * This API updates the archiving configuration
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamespaceStorageArchivalConfig = new oci.loganalytics.NamespaceStorageArchivalConfig("test_namespace_storage_archival_config", {
 *     archivingConfiguration: {
 *         activeStorageDuration: namespaceStorageArchivalConfigArchivingConfigurationActiveStorageDuration,
 *         archivalStorageDuration: namespaceStorageArchivalConfigArchivingConfigurationArchivalStorageDuration,
 *     },
 *     namespace: namespaceStorageArchivalConfigNamespace,
 * });
 * ```
 */
export class NamespaceStorageArchivalConfig extends pulumi.CustomResource {
    /**
     * Get an existing NamespaceStorageArchivalConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamespaceStorageArchivalConfigState, opts?: pulumi.CustomResourceOptions): NamespaceStorageArchivalConfig {
        return new NamespaceStorageArchivalConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:LogAnalytics/namespaceStorageArchivalConfig:NamespaceStorageArchivalConfig';

    /**
     * Returns true if the given object is an instance of NamespaceStorageArchivalConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NamespaceStorageArchivalConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NamespaceStorageArchivalConfig.__pulumiType;
    }

    /**
     * (Updatable) This is the configuration for data archiving in object storage
     */
    public readonly archivingConfiguration!: pulumi.Output<outputs.LogAnalytics.NamespaceStorageArchivalConfigArchivingConfiguration>;
    /**
     * This indicates if old data can be archived for a tenancy
     */
    public /*out*/ readonly isArchivingEnabled!: pulumi.Output<boolean>;
    /**
     * The Logging Analytics namespace used for the request.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly namespace!: pulumi.Output<string>;

    /**
     * Create a NamespaceStorageArchivalConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceStorageArchivalConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamespaceStorageArchivalConfigArgs | NamespaceStorageArchivalConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamespaceStorageArchivalConfigState | undefined;
            resourceInputs["archivingConfiguration"] = state ? state.archivingConfiguration : undefined;
            resourceInputs["isArchivingEnabled"] = state ? state.isArchivingEnabled : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
        } else {
            const args = argsOrState as NamespaceStorageArchivalConfigArgs | undefined;
            if ((!args || args.archivingConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'archivingConfiguration'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            resourceInputs["archivingConfiguration"] = args ? args.archivingConfiguration : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["isArchivingEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NamespaceStorageArchivalConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NamespaceStorageArchivalConfig resources.
 */
export interface NamespaceStorageArchivalConfigState {
    /**
     * (Updatable) This is the configuration for data archiving in object storage
     */
    archivingConfiguration?: pulumi.Input<inputs.LogAnalytics.NamespaceStorageArchivalConfigArchivingConfiguration>;
    /**
     * This indicates if old data can be archived for a tenancy
     */
    isArchivingEnabled?: pulumi.Input<boolean>;
    /**
     * The Logging Analytics namespace used for the request.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NamespaceStorageArchivalConfig resource.
 */
export interface NamespaceStorageArchivalConfigArgs {
    /**
     * (Updatable) This is the configuration for data archiving in object storage
     */
    archivingConfiguration: pulumi.Input<inputs.LogAnalytics.NamespaceStorageArchivalConfigArchivingConfiguration>;
    /**
     * The Logging Analytics namespace used for the request.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    namespace: pulumi.Input<string>;
}
