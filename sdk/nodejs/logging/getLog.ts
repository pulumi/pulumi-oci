// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Log resource in Oracle Cloud Infrastructure Logging service.
 *
 * Gets the log object configuration for the log object OCID.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLog = oci.Logging.getLog({
 *     logGroupId: oci_logging_log_group.test_log_group.id,
 *     logId: oci_logging_log.test_log.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getLog(args: GetLogArgs, opts?: pulumi.InvokeOptions): Promise<GetLogResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Logging/getLog:getLog", {
        "logGroupId": args.logGroupId,
        "logId": args.logId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLog.
 */
export interface GetLogArgs {
    /**
     * OCID of a log group to work with.
     */
    logGroupId: string;
    /**
     * OCID of a log to work with.
     */
    logId: string;
}

/**
 * A collection of values returned by getLog.
 */
export interface GetLogResult {
    /**
     * The OCID of the compartment that the resource belongs to.
     */
    readonly compartmentId: string;
    /**
     * Log object configuration.
     */
    readonly configurations: outputs.Logging.GetLogConfiguration[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The OCID of the resource.
     */
    readonly id: string;
    /**
     * Whether or not this resource is currently enabled.
     */
    readonly isEnabled: boolean;
    /**
     * Log group OCID.
     */
    readonly logGroupId: string;
    readonly logId: string;
    /**
     * The logType that the log object is for, whether custom or service.
     */
    readonly logType: string;
    /**
     * Log retention duration in 30-day increments (30, 60, 90 and so on until 180).
     */
    readonly retentionDuration: number;
    /**
     * The pipeline state.
     */
    readonly state: string;
    /**
     * The OCID of the tenancy.
     */
    readonly tenancyId: string;
    /**
     * Time the resource was created.
     */
    readonly timeCreated: string;
    /**
     * Time the resource was last modified.
     */
    readonly timeLastModified: string;
}
/**
 * This data source provides details about a specific Log resource in Oracle Cloud Infrastructure Logging service.
 *
 * Gets the log object configuration for the log object OCID.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLog = oci.Logging.getLog({
 *     logGroupId: oci_logging_log_group.test_log_group.id,
 *     logId: oci_logging_log.test_log.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getLogOutput(args: GetLogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogResult> {
    return pulumi.output(args).apply((a: any) => getLog(a, opts))
}

/**
 * A collection of arguments for invoking getLog.
 */
export interface GetLogOutputArgs {
    /**
     * OCID of a log group to work with.
     */
    logGroupId: pulumi.Input<string>;
    /**
     * OCID of a log to work with.
     */
    logId: pulumi.Input<string>;
}
