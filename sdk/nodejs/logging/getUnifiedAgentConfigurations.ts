// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Unified Agent Configurations in Oracle Cloud Infrastructure Logging service.
 *
 * Lists all unified agent configurations in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUnifiedAgentConfigurations = oci.Logging.getUnifiedAgentConfigurations({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.unified_agent_configuration_display_name,
 *     groupId: oci_identity_group.test_group.id,
 *     isCompartmentIdInSubtree: _var.unified_agent_configuration_is_compartment_id_in_subtree,
 *     logId: oci_logging_log.test_log.id,
 *     state: _var.unified_agent_configuration_state,
 * });
 * ```
 */
export function getUnifiedAgentConfigurations(args: GetUnifiedAgentConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetUnifiedAgentConfigurationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Logging/getUnifiedAgentConfigurations:getUnifiedAgentConfigurations", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "groupId": args.groupId,
        "isCompartmentIdInSubtree": args.isCompartmentIdInSubtree,
        "logId": args.logId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getUnifiedAgentConfigurations.
 */
export interface GetUnifiedAgentConfigurationsArgs {
    /**
     * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
     */
    compartmentId: string;
    /**
     * Resource name
     */
    displayName?: string;
    filters?: inputs.Logging.GetUnifiedAgentConfigurationsFilter[];
    /**
     * The OCID of a group or a dynamic group.
     */
    groupId?: string;
    /**
     * Specifies whether or not nested compartments should be traversed. Defaults to false.
     */
    isCompartmentIdInSubtree?: boolean;
    /**
     * Custom log OCID to list resources with the log as destination.
     */
    logId?: string;
    /**
     * Lifecycle state of the log object
     */
    state?: string;
}

/**
 * A collection of values returned by getUnifiedAgentConfigurations.
 */
export interface GetUnifiedAgentConfigurationsResult {
    /**
     * The OCID of the compartment that the resource belongs to.
     */
    readonly compartmentId: string;
    /**
     * The user-friendly display name. This must be unique within the enclosing resource, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Logging.GetUnifiedAgentConfigurationsFilter[];
    readonly groupId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isCompartmentIdInSubtree?: boolean;
    readonly logId?: string;
    /**
     * The pipeline state.
     */
    readonly state?: string;
    /**
     * The list of unified_agent_configuration_collection.
     */
    readonly unifiedAgentConfigurationCollections: outputs.Logging.GetUnifiedAgentConfigurationsUnifiedAgentConfigurationCollection[];
}
/**
 * This data source provides the list of Unified Agent Configurations in Oracle Cloud Infrastructure Logging service.
 *
 * Lists all unified agent configurations in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUnifiedAgentConfigurations = oci.Logging.getUnifiedAgentConfigurations({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.unified_agent_configuration_display_name,
 *     groupId: oci_identity_group.test_group.id,
 *     isCompartmentIdInSubtree: _var.unified_agent_configuration_is_compartment_id_in_subtree,
 *     logId: oci_logging_log.test_log.id,
 *     state: _var.unified_agent_configuration_state,
 * });
 * ```
 */
export function getUnifiedAgentConfigurationsOutput(args: GetUnifiedAgentConfigurationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUnifiedAgentConfigurationsResult> {
    return pulumi.output(args).apply((a: any) => getUnifiedAgentConfigurations(a, opts))
}

/**
 * A collection of arguments for invoking getUnifiedAgentConfigurations.
 */
export interface GetUnifiedAgentConfigurationsOutputArgs {
    /**
     * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Resource name
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Logging.GetUnifiedAgentConfigurationsFilterArgs>[]>;
    /**
     * The OCID of a group or a dynamic group.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Specifies whether or not nested compartments should be traversed. Defaults to false.
     */
    isCompartmentIdInSubtree?: pulumi.Input<boolean>;
    /**
     * Custom log OCID to list resources with the log as destination.
     */
    logId?: pulumi.Input<string>;
    /**
     * Lifecycle state of the log object
     */
    state?: pulumi.Input<string>;
}
