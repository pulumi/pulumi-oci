// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FileStorageLustreFileSystemArgs, FileStorageLustreFileSystemState } from "./fileStorageLustreFileSystem";
export type FileStorageLustreFileSystem = import("./fileStorageLustreFileSystem").FileStorageLustreFileSystem;
export const FileStorageLustreFileSystem: typeof import("./fileStorageLustreFileSystem").FileStorageLustreFileSystem = null as any;
utilities.lazyLoad(exports, ["FileStorageLustreFileSystem"], () => require("./fileStorageLustreFileSystem"));

export { GetFileStorageLustreFileSystemArgs, GetFileStorageLustreFileSystemResult, GetFileStorageLustreFileSystemOutputArgs } from "./getFileStorageLustreFileSystem";
export const getFileStorageLustreFileSystem: typeof import("./getFileStorageLustreFileSystem").getFileStorageLustreFileSystem = null as any;
export const getFileStorageLustreFileSystemOutput: typeof import("./getFileStorageLustreFileSystem").getFileStorageLustreFileSystemOutput = null as any;
utilities.lazyLoad(exports, ["getFileStorageLustreFileSystem","getFileStorageLustreFileSystemOutput"], () => require("./getFileStorageLustreFileSystem"));

export { GetFileStorageLustreFileSystemsArgs, GetFileStorageLustreFileSystemsResult, GetFileStorageLustreFileSystemsOutputArgs } from "./getFileStorageLustreFileSystems";
export const getFileStorageLustreFileSystems: typeof import("./getFileStorageLustreFileSystems").getFileStorageLustreFileSystems = null as any;
export const getFileStorageLustreFileSystemsOutput: typeof import("./getFileStorageLustreFileSystems").getFileStorageLustreFileSystemsOutput = null as any;
utilities.lazyLoad(exports, ["getFileStorageLustreFileSystems","getFileStorageLustreFileSystemsOutput"], () => require("./getFileStorageLustreFileSystems"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Lustre/fileStorageLustreFileSystem:FileStorageLustreFileSystem":
                return new FileStorageLustreFileSystem(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Lustre/fileStorageLustreFileSystem", _module)
