// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Management Agent Count resource in Oracle Cloud Infrastructure Management Agent service.
 *
 * Gets count of the inventory of agents for a given compartment id, group by, and isPluginDeployed parameters.
 * Supported groupBy parameters: availabilityStatus, platformType, version
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagementAgentCount = oci.ManagementAgent.getManagementAgentCount({
 *     compartmentId: _var.compartment_id,
 *     groupBies: _var.management_agent_count_group_by,
 *     hasPlugins: _var.management_agent_count_has_plugins,
 *     installType: _var.management_agent_count_install_type,
 * });
 * ```
 */
export function getManagementAgentCount(args: GetManagementAgentCountArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementAgentCountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:ManagementAgent/getManagementAgentCount:getManagementAgentCount", {
        "compartmentId": args.compartmentId,
        "groupBies": args.groupBies,
        "hasPlugins": args.hasPlugins,
        "installType": args.installType,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagementAgentCount.
 */
export interface GetManagementAgentCountArgs {
    /**
     * The OCID of the compartment to which a request will be scoped.
     */
    compartmentId: string;
    /**
     * The field by which to group Management Agents. Currently, only one groupBy dimension is supported at a time.
     */
    groupBies: string[];
    /**
     * When set to true then agents that have at least one plugin deployed will be returned. When set to false only agents that have no plugins deployed will be returned.
     */
    hasPlugins?: boolean;
    /**
     * A filter to return either agents or gateway types depending upon install type selected by user. By default both install type will be returned.
     */
    installType?: string;
}

/**
 * A collection of values returned by getManagementAgentCount.
 */
export interface GetManagementAgentCountResult {
    readonly compartmentId: string;
    readonly groupBies: string[];
    /**
     * Whether or not a managementAgent has at least one plugin
     */
    readonly hasPlugins?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The install type, either AGENT or GATEWAY
     */
    readonly installType?: string;
    /**
     * List in which each item describes an aggregation of Managment Agents
     */
    readonly items: outputs.ManagementAgent.GetManagementAgentCountItem[];
}
/**
 * This data source provides details about a specific Management Agent Count resource in Oracle Cloud Infrastructure Management Agent service.
 *
 * Gets count of the inventory of agents for a given compartment id, group by, and isPluginDeployed parameters.
 * Supported groupBy parameters: availabilityStatus, platformType, version
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagementAgentCount = oci.ManagementAgent.getManagementAgentCount({
 *     compartmentId: _var.compartment_id,
 *     groupBies: _var.management_agent_count_group_by,
 *     hasPlugins: _var.management_agent_count_has_plugins,
 *     installType: _var.management_agent_count_install_type,
 * });
 * ```
 */
export function getManagementAgentCountOutput(args: GetManagementAgentCountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementAgentCountResult> {
    return pulumi.output(args).apply((a: any) => getManagementAgentCount(a, opts))
}

/**
 * A collection of arguments for invoking getManagementAgentCount.
 */
export interface GetManagementAgentCountOutputArgs {
    /**
     * The OCID of the compartment to which a request will be scoped.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The field by which to group Management Agents. Currently, only one groupBy dimension is supported at a time.
     */
    groupBies: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * When set to true then agents that have at least one plugin deployed will be returned. When set to false only agents that have no plugins deployed will be returned.
     */
    hasPlugins?: pulumi.Input<boolean>;
    /**
     * A filter to return either agents or gateway types depending upon install type selected by user. By default both install type will be returned.
     */
    installType?: pulumi.Input<string>;
}
