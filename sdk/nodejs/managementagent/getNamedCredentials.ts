// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Named Credentials in Oracle Cloud Infrastructure Management Agent service.
 *
 * A list of Management Agent Data Sources for the given Management Agent Id.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamedCredentials = oci.ManagementAgent.getNamedCredentials({
 *     managementAgentId: testManagementAgent.id,
 *     ids: [namedCredentialId],
 *     names: [namedCredentialName],
 *     states: [namedCredentialState],
 *     types: [namedCredentialType],
 * });
 * ```
 */
export function getNamedCredentials(args: GetNamedCredentialsArgs, opts?: pulumi.InvokeOptions): Promise<GetNamedCredentialsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:ManagementAgent/getNamedCredentials:getNamedCredentials", {
        "filters": args.filters,
        "ids": args.ids,
        "managementAgentId": args.managementAgentId,
        "names": args.names,
        "states": args.states,
        "types": args.types,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamedCredentials.
 */
export interface GetNamedCredentialsArgs {
    filters?: inputs.ManagementAgent.GetNamedCredentialsFilter[];
    /**
     * Filter list for these Named credentials identifiers (ocid) values.
     */
    ids?: string[];
    /**
     * The ManagementAgentID of the agent from which the named credentials are associated.
     */
    managementAgentId: string;
    /**
     * Filter list for these name items.
     */
    names?: string[];
    /**
     * Filter list to return only Management Agents in the particular lifecycle state.
     */
    states?: string[];
    /**
     * Filter list for these type values.
     */
    types?: string[];
}

/**
 * A collection of values returned by getNamedCredentials.
 */
export interface GetNamedCredentialsResult {
    readonly filters?: outputs.ManagementAgent.GetNamedCredentialsFilter[];
    /**
     * Identifier for Named Credential.
     */
    readonly ids?: string[];
    /**
     * The Management Agent parent resource to associated with this named credential. This is the ManagementAgent resource OCID.
     */
    readonly managementAgentId: string;
    /**
     * The list of named_credential_collection.
     */
    readonly namedCredentialCollections: outputs.ManagementAgent.GetNamedCredentialsNamedCredentialCollection[];
    /**
     * Name of the property
     */
    readonly names?: string[];
    /**
     * The current state of the named credential
     */
    readonly states?: string[];
    /**
     * The type of the Named Credential.
     */
    readonly types?: string[];
}
/**
 * This data source provides the list of Named Credentials in Oracle Cloud Infrastructure Management Agent service.
 *
 * A list of Management Agent Data Sources for the given Management Agent Id.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNamedCredentials = oci.ManagementAgent.getNamedCredentials({
 *     managementAgentId: testManagementAgent.id,
 *     ids: [namedCredentialId],
 *     names: [namedCredentialName],
 *     states: [namedCredentialState],
 *     types: [namedCredentialType],
 * });
 * ```
 */
export function getNamedCredentialsOutput(args: GetNamedCredentialsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNamedCredentialsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:ManagementAgent/getNamedCredentials:getNamedCredentials", {
        "filters": args.filters,
        "ids": args.ids,
        "managementAgentId": args.managementAgentId,
        "names": args.names,
        "states": args.states,
        "types": args.types,
    }, opts);
}

/**
 * A collection of arguments for invoking getNamedCredentials.
 */
export interface GetNamedCredentialsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.ManagementAgent.GetNamedCredentialsFilterArgs>[]>;
    /**
     * Filter list for these Named credentials identifiers (ocid) values.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ManagementAgentID of the agent from which the named credentials are associated.
     */
    managementAgentId: pulumi.Input<string>;
    /**
     * Filter list for these name items.
     */
    names?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter list to return only Management Agents in the particular lifecycle state.
     */
    states?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter list for these type values.
     */
    types?: pulumi.Input<pulumi.Input<string>[]>;
}
