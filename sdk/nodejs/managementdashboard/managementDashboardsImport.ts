// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Management Dashboards Import resource in Oracle Cloud Infrastructure Management Dashboard service.
 *
 * Imports an array of dashboards and their saved searches.
 * Here's an example of how you can use CLI to import a dashboard. For information on the details that must be passed to IMPORT, you can use the EXPORT API to obtain the Import.json file:
 * `oci management-dashboard dashboard export --query data --export-dashboard-id "{\"dashboardIds\":[\"ocid1.managementdashboard.oc1..dashboardId1\"]}"  > Import.json`.
 * Note that import API updates the resource if it already exists, and creates a new resource if it does not exist. To import to a different compartment, edit and change the compartmentId to the desired compartment OCID.
 * Here's an example of how you can use CLI to import:
 * `oci management-dashboard dashboard import --from-json file://Import.json`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagementDashboardsImport = new oci.managementdashboard.ManagementDashboardsImport("test_management_dashboards_import", {
 *     importDetails: sampleImportDetails,
 *     importDetailsFile: sampleImportDetailsFilePath,
 * });
 * ```
 *
 * ## Import
 *
 * ManagementDashboardsImport can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:ManagementDashboard/managementDashboardsImport:ManagementDashboardsImport test_management_dashboards_import "id"
 * ```
 */
export class ManagementDashboardsImport extends pulumi.CustomResource {
    /**
     * Get an existing ManagementDashboardsImport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementDashboardsImportState, opts?: pulumi.CustomResourceOptions): ManagementDashboardsImport {
        return new ManagementDashboardsImport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:ManagementDashboard/managementDashboardsImport:ManagementDashboardsImport';

    /**
     * Returns true if the given object is an instance of ManagementDashboardsImport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementDashboardsImport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementDashboardsImport.__pulumiType;
    }

    /**
     * Array of Dashboards to import. The `importDetails` is mandatory if `importDetailsPath` is not passed. Value should be stringified JSON of [ManagementDashboardImportDetails](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/managementdashboard/20200901/ManagementDashboardImportDetails/)
     */
    public readonly importDetails!: pulumi.Output<string | undefined>;
    public readonly importDetailsFile!: pulumi.Output<string | undefined>;

    /**
     * Create a ManagementDashboardsImport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementDashboardsImportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementDashboardsImportArgs | ManagementDashboardsImportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementDashboardsImportState | undefined;
            resourceInputs["importDetails"] = state ? state.importDetails : undefined;
            resourceInputs["importDetailsFile"] = state ? state.importDetailsFile : undefined;
        } else {
            const args = argsOrState as ManagementDashboardsImportArgs | undefined;
            resourceInputs["importDetails"] = args ? args.importDetails : undefined;
            resourceInputs["importDetailsFile"] = args ? args.importDetailsFile : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementDashboardsImport.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagementDashboardsImport resources.
 */
export interface ManagementDashboardsImportState {
    /**
     * Array of Dashboards to import. The `importDetails` is mandatory if `importDetailsPath` is not passed. Value should be stringified JSON of [ManagementDashboardImportDetails](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/managementdashboard/20200901/ManagementDashboardImportDetails/)
     */
    importDetails?: pulumi.Input<string>;
    importDetailsFile?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagementDashboardsImport resource.
 */
export interface ManagementDashboardsImportArgs {
    /**
     * Array of Dashboards to import. The `importDetails` is mandatory if `importDetailsPath` is not passed. Value should be stringified JSON of [ManagementDashboardImportDetails](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/managementdashboard/20200901/ManagementDashboardImportDetails/)
     */
    importDetails?: pulumi.Input<string>;
    importDetailsFile?: pulumi.Input<string>;
}
