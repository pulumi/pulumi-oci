// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Accepted Agreements in Oracle Cloud Infrastructure Marketplace service.
 *
 * Lists the terms of use agreements that have been accepted in the specified compartment.
 * You can filter results by specifying query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAcceptedAgreements = oci.Marketplace.getAcceptedAgreements({
 *     compartmentId: compartmentId,
 *     acceptedAgreementId: testAcceptedAgreement.id,
 *     displayName: acceptedAgreementDisplayName,
 *     listingId: testListing.id,
 *     packageVersion: acceptedAgreementPackageVersion,
 * });
 * ```
 */
export function getAcceptedAgreements(args: GetAcceptedAgreementsArgs, opts?: pulumi.InvokeOptions): Promise<GetAcceptedAgreementsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Marketplace/getAcceptedAgreements:getAcceptedAgreements", {
        "acceptedAgreementId": args.acceptedAgreementId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "listingId": args.listingId,
        "packageVersion": args.packageVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getAcceptedAgreements.
 */
export interface GetAcceptedAgreementsArgs {
    /**
     * The unique identifier for the accepted terms of use agreement.
     */
    acceptedAgreementId?: string;
    /**
     * The unique identifier for the compartment.
     */
    compartmentId: string;
    /**
     * The display name of the resource.
     */
    displayName?: string;
    filters?: inputs.Marketplace.GetAcceptedAgreementsFilter[];
    /**
     * The unique identifier for the listing.
     */
    listingId?: string;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion?: string;
}

/**
 * A collection of values returned by getAcceptedAgreements.
 */
export interface GetAcceptedAgreementsResult {
    readonly acceptedAgreementId?: string;
    /**
     * The list of accepted_agreements.
     */
    readonly acceptedAgreements: outputs.Marketplace.GetAcceptedAgreementsAcceptedAgreement[];
    /**
     * The unique identifier for the compartment where the agreement was accepted.
     */
    readonly compartmentId: string;
    /**
     * A display name for the accepted agreement.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Marketplace.GetAcceptedAgreementsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The unique identifier for the listing associated with the agreement.
     */
    readonly listingId?: string;
    /**
     * The package version associated with the agreement.
     */
    readonly packageVersion?: string;
}
/**
 * This data source provides the list of Accepted Agreements in Oracle Cloud Infrastructure Marketplace service.
 *
 * Lists the terms of use agreements that have been accepted in the specified compartment.
 * You can filter results by specifying query parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAcceptedAgreements = oci.Marketplace.getAcceptedAgreements({
 *     compartmentId: compartmentId,
 *     acceptedAgreementId: testAcceptedAgreement.id,
 *     displayName: acceptedAgreementDisplayName,
 *     listingId: testListing.id,
 *     packageVersion: acceptedAgreementPackageVersion,
 * });
 * ```
 */
export function getAcceptedAgreementsOutput(args: GetAcceptedAgreementsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAcceptedAgreementsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Marketplace/getAcceptedAgreements:getAcceptedAgreements", {
        "acceptedAgreementId": args.acceptedAgreementId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "listingId": args.listingId,
        "packageVersion": args.packageVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getAcceptedAgreements.
 */
export interface GetAcceptedAgreementsOutputArgs {
    /**
     * The unique identifier for the accepted terms of use agreement.
     */
    acceptedAgreementId?: pulumi.Input<string>;
    /**
     * The unique identifier for the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Marketplace.GetAcceptedAgreementsFilterArgs>[]>;
    /**
     * The unique identifier for the listing.
     */
    listingId?: pulumi.Input<string>;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion?: pulumi.Input<string>;
}
