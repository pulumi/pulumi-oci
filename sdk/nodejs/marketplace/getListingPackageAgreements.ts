// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Listing Package Agreements in Oracle Cloud Infrastructure Marketplace service.
 *
 * Returns the terms of use agreements that must be accepted before you can deploy the specified version of a package.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testListingPackageAgreements = oci.Marketplace.getListingPackageAgreements({
 *     listingId: testListing.id,
 *     packageVersion: listingPackageAgreementPackageVersion,
 *     compartmentId: compartmentId,
 * });
 * ```
 */
export function getListingPackageAgreements(args: GetListingPackageAgreementsArgs, opts?: pulumi.InvokeOptions): Promise<GetListingPackageAgreementsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Marketplace/getListingPackageAgreements:getListingPackageAgreements", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "listingId": args.listingId,
        "packageVersion": args.packageVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getListingPackageAgreements.
 */
export interface GetListingPackageAgreementsArgs {
    /**
     * The unique identifier for the compartment.
     */
    compartmentId?: string;
    filters?: inputs.Marketplace.GetListingPackageAgreementsFilter[];
    /**
     * The unique identifier for the listing.
     */
    listingId: string;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion: string;
}

/**
 * A collection of values returned by getListingPackageAgreements.
 */
export interface GetListingPackageAgreementsResult {
    /**
     * The list of agreements.
     */
    readonly agreements: outputs.Marketplace.GetListingPackageAgreementsAgreement[];
    /**
     * The unique identifier for the compartment.
     */
    readonly compartmentId?: string;
    readonly filters?: outputs.Marketplace.GetListingPackageAgreementsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly listingId: string;
    readonly packageVersion: string;
}
/**
 * This data source provides the list of Listing Package Agreements in Oracle Cloud Infrastructure Marketplace service.
 *
 * Returns the terms of use agreements that must be accepted before you can deploy the specified version of a package.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testListingPackageAgreements = oci.Marketplace.getListingPackageAgreements({
 *     listingId: testListing.id,
 *     packageVersion: listingPackageAgreementPackageVersion,
 *     compartmentId: compartmentId,
 * });
 * ```
 */
export function getListingPackageAgreementsOutput(args: GetListingPackageAgreementsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetListingPackageAgreementsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Marketplace/getListingPackageAgreements:getListingPackageAgreements", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "listingId": args.listingId,
        "packageVersion": args.packageVersion,
    }, opts);
}

/**
 * A collection of arguments for invoking getListingPackageAgreements.
 */
export interface GetListingPackageAgreementsOutputArgs {
    /**
     * The unique identifier for the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Marketplace.GetListingPackageAgreementsFilterArgs>[]>;
    /**
     * The unique identifier for the listing.
     */
    listingId: pulumi.Input<string>;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion: pulumi.Input<string>;
}
