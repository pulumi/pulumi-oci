// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Publication Packages in Oracle Cloud Infrastructure Marketplace service.
 *
 * Lists the packages in the specified publication.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPublicationPackages = oci.Marketplace.getPublicationPackages({
 *     publicationId: testPublication.id,
 *     packageType: publicationPackagePackageType,
 *     packageVersion: publicationPackagePackageVersion,
 * });
 * ```
 */
export function getPublicationPackages(args: GetPublicationPackagesArgs, opts?: pulumi.InvokeOptions): Promise<GetPublicationPackagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Marketplace/getPublicationPackages:getPublicationPackages", {
        "filters": args.filters,
        "packageType": args.packageType,
        "packageVersion": args.packageVersion,
        "publicationId": args.publicationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPublicationPackages.
 */
export interface GetPublicationPackagesArgs {
    filters?: inputs.Marketplace.GetPublicationPackagesFilter[];
    /**
     * A filter to return only packages that match the given package type exactly.
     */
    packageType?: string;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion?: string;
    /**
     * The unique identifier for the publication.
     */
    publicationId: string;
}

/**
 * A collection of values returned by getPublicationPackages.
 */
export interface GetPublicationPackagesResult {
    readonly filters?: outputs.Marketplace.GetPublicationPackagesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The specified package's type.
     */
    readonly packageType?: string;
    readonly packageVersion?: string;
    readonly publicationId: string;
    /**
     * The list of publication_packages.
     */
    readonly publicationPackages: outputs.Marketplace.GetPublicationPackagesPublicationPackage[];
}
/**
 * This data source provides the list of Publication Packages in Oracle Cloud Infrastructure Marketplace service.
 *
 * Lists the packages in the specified publication.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPublicationPackages = oci.Marketplace.getPublicationPackages({
 *     publicationId: testPublication.id,
 *     packageType: publicationPackagePackageType,
 *     packageVersion: publicationPackagePackageVersion,
 * });
 * ```
 */
export function getPublicationPackagesOutput(args: GetPublicationPackagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPublicationPackagesResult> {
    return pulumi.output(args).apply((a: any) => getPublicationPackages(a, opts))
}

/**
 * A collection of arguments for invoking getPublicationPackages.
 */
export interface GetPublicationPackagesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Marketplace.GetPublicationPackagesFilterArgs>[]>;
    /**
     * A filter to return only packages that match the given package type exactly.
     */
    packageType?: pulumi.Input<string>;
    /**
     * The version of the package. Package versions are unique within a listing.
     */
    packageVersion?: pulumi.Input<string>;
    /**
     * The unique identifier for the publication.
     */
    publicationId: pulumi.Input<string>;
}
