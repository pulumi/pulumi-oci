// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Publications in Oracle Cloud Infrastructure Marketplace service.
 *
 * Lists the publications in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPublications = oci.Marketplace.getPublications({
 *     compartmentId: compartmentId,
 *     listingType: publicationListingType,
 *     names: publicationName,
 *     operatingSystems: publicationOperatingSystems,
 *     publicationId: testPublication.id,
 * });
 * ```
 */
export function getPublications(args: GetPublicationsArgs, opts?: pulumi.InvokeOptions): Promise<GetPublicationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Marketplace/getPublications:getPublications", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "listingType": args.listingType,
        "names": args.names,
        "operatingSystems": args.operatingSystems,
        "publicationId": args.publicationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPublications.
 */
export interface GetPublicationsArgs {
    /**
     * The unique identifier for the compartment.
     */
    compartmentId: string;
    filters?: inputs.Marketplace.GetPublicationsFilter[];
    /**
     * The type of the listing.
     */
    listingType: string;
    /**
     * The name of the publication.
     */
    names?: string[];
    /**
     * The operating system of the listing.
     */
    operatingSystems?: string[];
    /**
     * The unique identifier for the publication.
     */
    publicationId?: string;
}

/**
 * A collection of values returned by getPublications.
 */
export interface GetPublicationsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the publication exists.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.Marketplace.GetPublicationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
     */
    readonly listingType: string;
    /**
     * The name of the operating system.
     */
    readonly names?: string[];
    readonly operatingSystems?: string[];
    readonly publicationId?: string;
    /**
     * The list of publications.
     */
    readonly publications: outputs.Marketplace.GetPublicationsPublication[];
}
/**
 * This data source provides the list of Publications in Oracle Cloud Infrastructure Marketplace service.
 *
 * Lists the publications in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPublications = oci.Marketplace.getPublications({
 *     compartmentId: compartmentId,
 *     listingType: publicationListingType,
 *     names: publicationName,
 *     operatingSystems: publicationOperatingSystems,
 *     publicationId: testPublication.id,
 * });
 * ```
 */
export function getPublicationsOutput(args: GetPublicationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPublicationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Marketplace/getPublications:getPublications", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "listingType": args.listingType,
        "names": args.names,
        "operatingSystems": args.operatingSystems,
        "publicationId": args.publicationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPublications.
 */
export interface GetPublicationsOutputArgs {
    /**
     * The unique identifier for the compartment.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Marketplace.GetPublicationsFilterArgs>[]>;
    /**
     * The type of the listing.
     */
    listingType: pulumi.Input<string>;
    /**
     * The name of the publication.
     */
    names?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The operating system of the listing.
     */
    operatingSystems?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique identifier for the publication.
     */
    publicationId?: pulumi.Input<string>;
}
