// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Media Asset resource in Oracle Cloud Infrastructure Media Services service.
 *
 * Gets a MediaAsset by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMediaAsset = oci.MediaServices.getMediaAsset({
 *     mediaAssetId: testMediaAssetOciMediaServicesMediaAsset.id,
 * });
 * ```
 */
export function getMediaAsset(args: GetMediaAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaAssetResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MediaServices/getMediaAsset:getMediaAsset", {
        "mediaAssetId": args.mediaAssetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaAsset.
 */
export interface GetMediaAssetArgs {
    /**
     * Unique MediaAsset identifier
     */
    mediaAssetId: string;
}

/**
 * A collection of values returned by getMediaAsset.
 */
export interface GetMediaAssetResult {
    /**
     * The name of the object storage bucket where this represented asset is located.
     */
    readonly bucket: string;
    /**
     * The compartment ID of the lock.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * Unique identifier that is immutable on creation.
     */
    readonly id: string;
    readonly isLockOverride: boolean;
    /**
     * Locks associated with this resource.
     */
    readonly locks: outputs.MediaServices.GetMediaAssetLock[];
    /**
     * The ID of the senior most asset from which this asset is derived.
     */
    readonly masterMediaAssetId: string;
    readonly mediaAssetId: string;
    /**
     * List of tags for the MediaAsset.
     */
    readonly mediaAssetTags: outputs.MediaServices.GetMediaAssetMediaAssetTag[];
    /**
     * The ID of the MediaWorkflowJob used to produce this asset.
     */
    readonly mediaWorkflowJobId: string;
    /**
     * JSON string containing the technial metadata for the media asset.
     */
    readonly metadatas: outputs.MediaServices.GetMediaAssetMetadata[];
    /**
     * The object storage namespace where this asset is located.
     */
    readonly namespace: string;
    /**
     * The object storage object name that identifies this asset.
     */
    readonly object: string;
    /**
     * eTag of the underlying object storage object.
     */
    readonly objectEtag: string;
    /**
     * The ID of the parent asset from which this asset is derived.
     */
    readonly parentMediaAssetId: string;
    /**
     * The end index of video segment files.
     */
    readonly segmentRangeEndIndex: string;
    /**
     * The start index for video segment files.
     */
    readonly segmentRangeStartIndex: string;
    /**
     * The ID of the MediaWorkflow used to produce this asset.
     */
    readonly sourceMediaWorkflowId: string;
    /**
     * The version of the MediaWorkflow used to produce this asset.
     */
    readonly sourceMediaWorkflowVersion: string;
    /**
     * The current state of the MediaAsset.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The time when the MediaAsset was created. An RFC3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time when the MediaAsset was updated. An RFC3339 formatted datetime string.
     */
    readonly timeUpdated: string;
    /**
     * The type of the media asset.
     */
    readonly type: string;
}
/**
 * This data source provides details about a specific Media Asset resource in Oracle Cloud Infrastructure Media Services service.
 *
 * Gets a MediaAsset by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMediaAsset = oci.MediaServices.getMediaAsset({
 *     mediaAssetId: testMediaAssetOciMediaServicesMediaAsset.id,
 * });
 * ```
 */
export function getMediaAssetOutput(args: GetMediaAssetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaAssetResult> {
    return pulumi.output(args).apply((a: any) => getMediaAsset(a, opts))
}

/**
 * A collection of arguments for invoking getMediaAsset.
 */
export interface GetMediaAssetOutputArgs {
    /**
     * Unique MediaAsset identifier
     */
    mediaAssetId: pulumi.Input<string>;
}
