// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Media Asset Distribution Channel Attachment resource in Oracle Cloud Infrastructure Media Services service.
 *
 * Gets a MediaAssetDistributionChannelAttachment for a MediaAsset by identifiers.
 */
export function getMediaAssetDistributionChannelAttachment(args: GetMediaAssetDistributionChannelAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaAssetDistributionChannelAttachmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MediaServices/getMediaAssetDistributionChannelAttachment:getMediaAssetDistributionChannelAttachment", {
        "distributionChannelId": args.distributionChannelId,
        "isLockOverride": args.isLockOverride,
        "locks": args.locks,
        "mediaAssetId": args.mediaAssetId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaAssetDistributionChannelAttachment.
 */
export interface GetMediaAssetDistributionChannelAttachmentArgs {
    /**
     * Unique DistributionChannel identifier.
     */
    distributionChannelId: string;
    isLockOverride?: boolean;
    /**
     * Locks associated with this resource.
     */
    locks?: inputs.MediaServices.GetMediaAssetDistributionChannelAttachmentLock[];
    /**
     * Unique MediaAsset identifier
     */
    mediaAssetId: string;
}

/**
 * A collection of values returned by getMediaAssetDistributionChannelAttachment.
 */
export interface GetMediaAssetDistributionChannelAttachmentResult {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * OCID of associated Distribution Channel.
     */
    readonly distributionChannelId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isLockOverride: boolean;
    /**
     * Locks associated with this resource.
     */
    readonly locks: outputs.MediaServices.GetMediaAssetDistributionChannelAttachmentLock[];
    readonly mediaAssetId: string;
    /**
     * The ingest MediaWorkflowJob ID that created this attachment.
     */
    readonly mediaWorkflowJobId: string;
    /**
     * The identifier for the metadata.
     */
    readonly metadataRef: string;
    /**
     * Lifecycle state of the attachment.
     */
    readonly state: string;
    /**
     * Version of the attachment.
     */
    readonly version: string;
}
/**
 * This data source provides details about a specific Media Asset Distribution Channel Attachment resource in Oracle Cloud Infrastructure Media Services service.
 *
 * Gets a MediaAssetDistributionChannelAttachment for a MediaAsset by identifiers.
 */
export function getMediaAssetDistributionChannelAttachmentOutput(args: GetMediaAssetDistributionChannelAttachmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaAssetDistributionChannelAttachmentResult> {
    return pulumi.output(args).apply((a: any) => getMediaAssetDistributionChannelAttachment(a, opts))
}

/**
 * A collection of arguments for invoking getMediaAssetDistributionChannelAttachment.
 */
export interface GetMediaAssetDistributionChannelAttachmentOutputArgs {
    /**
     * Unique DistributionChannel identifier.
     */
    distributionChannelId: pulumi.Input<string>;
    isLockOverride?: pulumi.Input<boolean>;
    /**
     * Locks associated with this resource.
     */
    locks?: pulumi.Input<pulumi.Input<inputs.MediaServices.GetMediaAssetDistributionChannelAttachmentLockArgs>[]>;
    /**
     * Unique MediaAsset identifier
     */
    mediaAssetId: pulumi.Input<string>;
}
