// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Media Workflow resource in Oracle Cloud Infrastructure Media Services service.
 *
 * Gets a MediaWorkflow by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMediaWorkflow = oci.MediaServices.getMediaWorkflow({
 *     mediaWorkflowId: oci_media_services_media_workflow.test_media_workflow.id,
 * });
 * ```
 */
export function getMediaWorkflow(args: GetMediaWorkflowArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaWorkflowResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MediaServices/getMediaWorkflow:getMediaWorkflow", {
        "mediaWorkflowId": args.mediaWorkflowId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaWorkflow.
 */
export interface GetMediaWorkflowArgs {
    /**
     * Unique MediaWorkflow identifier.
     */
    mediaWorkflowId: string;
}

/**
 * A collection of values returned by getMediaWorkflow.
 */
export interface GetMediaWorkflowResult {
    /**
     * Compartment Identifier.
     */
    readonly compartmentId?: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags?: {[key: string]: any};
    /**
     * Name of the Media Workflow. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags?: {[key: string]: any};
    /**
     * Unique identifier that is immutable on creation.
     */
    readonly id?: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecyleDetails?: string;
    /**
     * Configurations to be applied to all the runs of this workflow. Parameters in these configurations are overridden by parameters in the MediaWorkflowConfigurations of the MediaWorkflowJob and the parameters of the MediaWorkflowJob. If the same parameter appears in multiple configurations, the values that appear in the configuration at the highest index will be used.
     */
    readonly mediaWorkflowConfigurationIds?: string[];
    readonly mediaWorkflowId: string;
    /**
     * Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
     */
    readonly parameters?: string;
    /**
     * The current state of the MediaWorkflow.
     */
    readonly state?: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags?: {[key: string]: any};
    /**
     * The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array.  The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
     */
    readonly tasks?: outputs.MediaServices.GetMediaWorkflowTask[];
    /**
     * The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
     */
    readonly timeCreated?: string;
    /**
     * The time when the MediaWorkflow was updated. An RFC3339 formatted datetime string.
     */
    readonly timeUpdated?: string;
    /**
     * The version of the MediaWorkflow.
     */
    readonly version?: string;
}
/**
 * This data source provides details about a specific Media Workflow resource in Oracle Cloud Infrastructure Media Services service.
 *
 * Gets a MediaWorkflow by identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMediaWorkflow = oci.MediaServices.getMediaWorkflow({
 *     mediaWorkflowId: oci_media_services_media_workflow.test_media_workflow.id,
 * });
 * ```
 */
export function getMediaWorkflowOutput(args: GetMediaWorkflowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaWorkflowResult> {
    return pulumi.output(args).apply((a: any) => getMediaWorkflow(a, opts))
}

/**
 * A collection of arguments for invoking getMediaWorkflow.
 */
export interface GetMediaWorkflowOutputArgs {
    /**
     * Unique MediaWorkflow identifier.
     */
    mediaWorkflowId: pulumi.Input<string>;
}
