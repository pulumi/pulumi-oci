// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Media Workflow Configuration resource in Oracle Cloud Infrastructure Media Services service.
 *
 * Gets a MediaWorkflowConfiguration by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMediaWorkflowConfiguration = oci.MediaServices.getMediaWorkflowConfiguration({
 *     mediaWorkflowConfigurationId: testMediaWorkflowConfigurationOciMediaServicesMediaWorkflowConfiguration.id,
 * });
 * ```
 */
export function getMediaWorkflowConfiguration(args: GetMediaWorkflowConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaWorkflowConfigurationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MediaServices/getMediaWorkflowConfiguration:getMediaWorkflowConfiguration", {
        "mediaWorkflowConfigurationId": args.mediaWorkflowConfigurationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaWorkflowConfiguration.
 */
export interface GetMediaWorkflowConfigurationArgs {
    /**
     * Unique MediaWorkflowConfiguration identifier.
     */
    mediaWorkflowConfigurationId: string;
}

/**
 * A collection of values returned by getMediaWorkflowConfiguration.
 */
export interface GetMediaWorkflowConfigurationResult {
    /**
     * The compartment ID of the lock.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Display name for the MediaWorkflowConfiguration. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * Unique identifier that is immutable on creation.
     */
    readonly id: string;
    readonly isLockOverride: boolean;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecyleDetails: string;
    /**
     * Locks associated with this resource.
     */
    readonly locks: outputs.MediaServices.GetMediaWorkflowConfigurationLock[];
    readonly mediaWorkflowConfigurationId: string;
    /**
     * Reuseable parameter values encoded as a JSON; the top and second level JSON elements are objects. Each key of the top level object refer to a task key that is unqiue to the workflow, each of the second level objects' keys refer to the name of a parameter that is unique to the task. taskKey > parameterName > parameterValue
     */
    readonly parameters: string;
    /**
     * The current state of the MediaWorkflowConfiguration.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The time when the the MediaWorkflowConfiguration was created. An RFC3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time when the MediaWorkflowConfiguration was updated. An RFC3339 formatted datetime string.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Media Workflow Configuration resource in Oracle Cloud Infrastructure Media Services service.
 *
 * Gets a MediaWorkflowConfiguration by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMediaWorkflowConfiguration = oci.MediaServices.getMediaWorkflowConfiguration({
 *     mediaWorkflowConfigurationId: testMediaWorkflowConfigurationOciMediaServicesMediaWorkflowConfiguration.id,
 * });
 * ```
 */
export function getMediaWorkflowConfigurationOutput(args: GetMediaWorkflowConfigurationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMediaWorkflowConfigurationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:MediaServices/getMediaWorkflowConfiguration:getMediaWorkflowConfiguration", {
        "mediaWorkflowConfigurationId": args.mediaWorkflowConfigurationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaWorkflowConfiguration.
 */
export interface GetMediaWorkflowConfigurationOutputArgs {
    /**
     * Unique MediaWorkflowConfiguration identifier.
     */
    mediaWorkflowConfigurationId: pulumi.Input<string>;
}
