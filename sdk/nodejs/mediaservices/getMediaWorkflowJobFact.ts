// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getMediaWorkflowJobFact(args: GetMediaWorkflowJobFactArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaWorkflowJobFactResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MediaServices/getMediaWorkflowJobFact:getMediaWorkflowJobFact", {
        "key": args.key,
        "mediaWorkflowJobId": args.mediaWorkflowJobId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaWorkflowJobFact.
 */
export interface GetMediaWorkflowJobFactArgs {
    key: string;
    mediaWorkflowJobId: string;
}

/**
 * A collection of values returned by getMediaWorkflowJobFact.
 */
export interface GetMediaWorkflowJobFactResult {
    readonly detail: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly key: string;
    readonly mediaWorkflowJobId: string;
    readonly name: string;
    readonly type: string;
}
export function getMediaWorkflowJobFactOutput(args: GetMediaWorkflowJobFactOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaWorkflowJobFactResult> {
    return pulumi.output(args).apply((a: any) => getMediaWorkflowJobFact(a, opts))
}

/**
 * A collection of arguments for invoking getMediaWorkflowJobFact.
 */
export interface GetMediaWorkflowJobFactOutputArgs {
    key: pulumi.Input<string>;
    mediaWorkflowJobId: pulumi.Input<string>;
}
