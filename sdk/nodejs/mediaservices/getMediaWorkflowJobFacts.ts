// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getMediaWorkflowJobFacts(args: GetMediaWorkflowJobFactsArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaWorkflowJobFactsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MediaServices/getMediaWorkflowJobFacts:getMediaWorkflowJobFacts", {
        "filters": args.filters,
        "key": args.key,
        "mediaWorkflowJobId": args.mediaWorkflowJobId,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaWorkflowJobFacts.
 */
export interface GetMediaWorkflowJobFactsArgs {
    filters?: inputs.MediaServices.GetMediaWorkflowJobFactsFilter[];
    key?: string;
    mediaWorkflowJobId: string;
    type?: string;
}

/**
 * A collection of values returned by getMediaWorkflowJobFacts.
 */
export interface GetMediaWorkflowJobFactsResult {
    readonly filters?: outputs.MediaServices.GetMediaWorkflowJobFactsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly key?: string;
    readonly mediaWorkflowJobFactCollections: outputs.MediaServices.GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection[];
    readonly mediaWorkflowJobId: string;
    readonly type?: string;
}
export function getMediaWorkflowJobFactsOutput(args: GetMediaWorkflowJobFactsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaWorkflowJobFactsResult> {
    return pulumi.output(args).apply((a: any) => getMediaWorkflowJobFacts(a, opts))
}

/**
 * A collection of arguments for invoking getMediaWorkflowJobFacts.
 */
export interface GetMediaWorkflowJobFactsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.MediaServices.GetMediaWorkflowJobFactsFilterArgs>[]>;
    key?: pulumi.Input<string>;
    mediaWorkflowJobId: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
