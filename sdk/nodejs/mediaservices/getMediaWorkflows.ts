// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Media Workflows in Oracle Cloud Infrastructure Media Services service.
 *
 * Lists the MediaWorkflows.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMediaWorkflows = oci.MediaServices.getMediaWorkflows({
 *     compartmentId: compartmentId,
 *     displayName: mediaWorkflowDisplayName,
 *     id: mediaWorkflowId,
 *     state: mediaWorkflowState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMediaWorkflows(args?: GetMediaWorkflowsArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaWorkflowsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MediaServices/getMediaWorkflows:getMediaWorkflows", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaWorkflows.
 */
export interface GetMediaWorkflowsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only the resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.MediaServices.GetMediaWorkflowsFilter[];
    /**
     * Unique MediaWorkflow identifier.
     */
    id?: string;
    /**
     * A filter to return only the resources with lifecycleState matching the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getMediaWorkflows.
 */
export interface GetMediaWorkflowsResult {
    /**
     * The compartment ID of the lock.
     */
    readonly compartmentId?: string;
    /**
     * Name of the Media Workflow. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.MediaServices.GetMediaWorkflowsFilter[];
    /**
     * Unique identifier that is immutable on creation.
     */
    readonly id?: string;
    /**
     * The list of media_workflow_collection.
     */
    readonly mediaWorkflowCollections: outputs.MediaServices.GetMediaWorkflowsMediaWorkflowCollection[];
    /**
     * The current state of the MediaWorkflow.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Media Workflows in Oracle Cloud Infrastructure Media Services service.
 *
 * Lists the MediaWorkflows.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMediaWorkflows = oci.MediaServices.getMediaWorkflows({
 *     compartmentId: compartmentId,
 *     displayName: mediaWorkflowDisplayName,
 *     id: mediaWorkflowId,
 *     state: mediaWorkflowState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMediaWorkflowsOutput(args?: GetMediaWorkflowsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaWorkflowsResult> {
    return pulumi.output(args).apply((a: any) => getMediaWorkflows(a, opts))
}

/**
 * A collection of arguments for invoking getMediaWorkflows.
 */
export interface GetMediaWorkflowsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.MediaServices.GetMediaWorkflowsFilterArgs>[]>;
    /**
     * Unique MediaWorkflow identifier.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only the resources with lifecycleState matching the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
