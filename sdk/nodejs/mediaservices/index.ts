// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetMediaAssetArgs, GetMediaAssetResult, GetMediaAssetOutputArgs } from "./getMediaAsset";
export const getMediaAsset: typeof import("./getMediaAsset").getMediaAsset = null as any;
export const getMediaAssetOutput: typeof import("./getMediaAsset").getMediaAssetOutput = null as any;
utilities.lazyLoad(exports, ["getMediaAsset","getMediaAssetOutput"], () => require("./getMediaAsset"));

export { GetMediaAssetDistributionChannelAttachmentArgs, GetMediaAssetDistributionChannelAttachmentResult, GetMediaAssetDistributionChannelAttachmentOutputArgs } from "./getMediaAssetDistributionChannelAttachment";
export const getMediaAssetDistributionChannelAttachment: typeof import("./getMediaAssetDistributionChannelAttachment").getMediaAssetDistributionChannelAttachment = null as any;
export const getMediaAssetDistributionChannelAttachmentOutput: typeof import("./getMediaAssetDistributionChannelAttachment").getMediaAssetDistributionChannelAttachmentOutput = null as any;
utilities.lazyLoad(exports, ["getMediaAssetDistributionChannelAttachment","getMediaAssetDistributionChannelAttachmentOutput"], () => require("./getMediaAssetDistributionChannelAttachment"));

export { GetMediaAssetsArgs, GetMediaAssetsResult, GetMediaAssetsOutputArgs } from "./getMediaAssets";
export const getMediaAssets: typeof import("./getMediaAssets").getMediaAssets = null as any;
export const getMediaAssetsOutput: typeof import("./getMediaAssets").getMediaAssetsOutput = null as any;
utilities.lazyLoad(exports, ["getMediaAssets","getMediaAssetsOutput"], () => require("./getMediaAssets"));

export { GetMediaWorkflowArgs, GetMediaWorkflowResult, GetMediaWorkflowOutputArgs } from "./getMediaWorkflow";
export const getMediaWorkflow: typeof import("./getMediaWorkflow").getMediaWorkflow = null as any;
export const getMediaWorkflowOutput: typeof import("./getMediaWorkflow").getMediaWorkflowOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflow","getMediaWorkflowOutput"], () => require("./getMediaWorkflow"));

export { GetMediaWorkflowConfigurationArgs, GetMediaWorkflowConfigurationResult, GetMediaWorkflowConfigurationOutputArgs } from "./getMediaWorkflowConfiguration";
export const getMediaWorkflowConfiguration: typeof import("./getMediaWorkflowConfiguration").getMediaWorkflowConfiguration = null as any;
export const getMediaWorkflowConfigurationOutput: typeof import("./getMediaWorkflowConfiguration").getMediaWorkflowConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflowConfiguration","getMediaWorkflowConfigurationOutput"], () => require("./getMediaWorkflowConfiguration"));

export { GetMediaWorkflowConfigurationsArgs, GetMediaWorkflowConfigurationsResult, GetMediaWorkflowConfigurationsOutputArgs } from "./getMediaWorkflowConfigurations";
export const getMediaWorkflowConfigurations: typeof import("./getMediaWorkflowConfigurations").getMediaWorkflowConfigurations = null as any;
export const getMediaWorkflowConfigurationsOutput: typeof import("./getMediaWorkflowConfigurations").getMediaWorkflowConfigurationsOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflowConfigurations","getMediaWorkflowConfigurationsOutput"], () => require("./getMediaWorkflowConfigurations"));

export { GetMediaWorkflowJobArgs, GetMediaWorkflowJobResult, GetMediaWorkflowJobOutputArgs } from "./getMediaWorkflowJob";
export const getMediaWorkflowJob: typeof import("./getMediaWorkflowJob").getMediaWorkflowJob = null as any;
export const getMediaWorkflowJobOutput: typeof import("./getMediaWorkflowJob").getMediaWorkflowJobOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflowJob","getMediaWorkflowJobOutput"], () => require("./getMediaWorkflowJob"));

export { GetMediaWorkflowJobFactArgs, GetMediaWorkflowJobFactResult, GetMediaWorkflowJobFactOutputArgs } from "./getMediaWorkflowJobFact";
export const getMediaWorkflowJobFact: typeof import("./getMediaWorkflowJobFact").getMediaWorkflowJobFact = null as any;
export const getMediaWorkflowJobFactOutput: typeof import("./getMediaWorkflowJobFact").getMediaWorkflowJobFactOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflowJobFact","getMediaWorkflowJobFactOutput"], () => require("./getMediaWorkflowJobFact"));

export { GetMediaWorkflowJobFactsArgs, GetMediaWorkflowJobFactsResult, GetMediaWorkflowJobFactsOutputArgs } from "./getMediaWorkflowJobFacts";
export const getMediaWorkflowJobFacts: typeof import("./getMediaWorkflowJobFacts").getMediaWorkflowJobFacts = null as any;
export const getMediaWorkflowJobFactsOutput: typeof import("./getMediaWorkflowJobFacts").getMediaWorkflowJobFactsOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflowJobFacts","getMediaWorkflowJobFactsOutput"], () => require("./getMediaWorkflowJobFacts"));

export { GetMediaWorkflowJobsArgs, GetMediaWorkflowJobsResult, GetMediaWorkflowJobsOutputArgs } from "./getMediaWorkflowJobs";
export const getMediaWorkflowJobs: typeof import("./getMediaWorkflowJobs").getMediaWorkflowJobs = null as any;
export const getMediaWorkflowJobsOutput: typeof import("./getMediaWorkflowJobs").getMediaWorkflowJobsOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflowJobs","getMediaWorkflowJobsOutput"], () => require("./getMediaWorkflowJobs"));

export { GetMediaWorkflowTaskDeclarationArgs, GetMediaWorkflowTaskDeclarationResult, GetMediaWorkflowTaskDeclarationOutputArgs } from "./getMediaWorkflowTaskDeclaration";
export const getMediaWorkflowTaskDeclaration: typeof import("./getMediaWorkflowTaskDeclaration").getMediaWorkflowTaskDeclaration = null as any;
export const getMediaWorkflowTaskDeclarationOutput: typeof import("./getMediaWorkflowTaskDeclaration").getMediaWorkflowTaskDeclarationOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflowTaskDeclaration","getMediaWorkflowTaskDeclarationOutput"], () => require("./getMediaWorkflowTaskDeclaration"));

export { GetMediaWorkflowsArgs, GetMediaWorkflowsResult, GetMediaWorkflowsOutputArgs } from "./getMediaWorkflows";
export const getMediaWorkflows: typeof import("./getMediaWorkflows").getMediaWorkflows = null as any;
export const getMediaWorkflowsOutput: typeof import("./getMediaWorkflows").getMediaWorkflowsOutput = null as any;
utilities.lazyLoad(exports, ["getMediaWorkflows","getMediaWorkflowsOutput"], () => require("./getMediaWorkflows"));

export { GetStreamCdnConfigArgs, GetStreamCdnConfigResult, GetStreamCdnConfigOutputArgs } from "./getStreamCdnConfig";
export const getStreamCdnConfig: typeof import("./getStreamCdnConfig").getStreamCdnConfig = null as any;
export const getStreamCdnConfigOutput: typeof import("./getStreamCdnConfig").getStreamCdnConfigOutput = null as any;
utilities.lazyLoad(exports, ["getStreamCdnConfig","getStreamCdnConfigOutput"], () => require("./getStreamCdnConfig"));

export { GetStreamCdnConfigsArgs, GetStreamCdnConfigsResult, GetStreamCdnConfigsOutputArgs } from "./getStreamCdnConfigs";
export const getStreamCdnConfigs: typeof import("./getStreamCdnConfigs").getStreamCdnConfigs = null as any;
export const getStreamCdnConfigsOutput: typeof import("./getStreamCdnConfigs").getStreamCdnConfigsOutput = null as any;
utilities.lazyLoad(exports, ["getStreamCdnConfigs","getStreamCdnConfigsOutput"], () => require("./getStreamCdnConfigs"));

export { GetStreamDistributionChannelArgs, GetStreamDistributionChannelResult, GetStreamDistributionChannelOutputArgs } from "./getStreamDistributionChannel";
export const getStreamDistributionChannel: typeof import("./getStreamDistributionChannel").getStreamDistributionChannel = null as any;
export const getStreamDistributionChannelOutput: typeof import("./getStreamDistributionChannel").getStreamDistributionChannelOutput = null as any;
utilities.lazyLoad(exports, ["getStreamDistributionChannel","getStreamDistributionChannelOutput"], () => require("./getStreamDistributionChannel"));

export { GetStreamDistributionChannelsArgs, GetStreamDistributionChannelsResult, GetStreamDistributionChannelsOutputArgs } from "./getStreamDistributionChannels";
export const getStreamDistributionChannels: typeof import("./getStreamDistributionChannels").getStreamDistributionChannels = null as any;
export const getStreamDistributionChannelsOutput: typeof import("./getStreamDistributionChannels").getStreamDistributionChannelsOutput = null as any;
utilities.lazyLoad(exports, ["getStreamDistributionChannels","getStreamDistributionChannelsOutput"], () => require("./getStreamDistributionChannels"));

export { GetStreamPackagingConfigArgs, GetStreamPackagingConfigResult, GetStreamPackagingConfigOutputArgs } from "./getStreamPackagingConfig";
export const getStreamPackagingConfig: typeof import("./getStreamPackagingConfig").getStreamPackagingConfig = null as any;
export const getStreamPackagingConfigOutput: typeof import("./getStreamPackagingConfig").getStreamPackagingConfigOutput = null as any;
utilities.lazyLoad(exports, ["getStreamPackagingConfig","getStreamPackagingConfigOutput"], () => require("./getStreamPackagingConfig"));

export { GetStreamPackagingConfigsArgs, GetStreamPackagingConfigsResult, GetStreamPackagingConfigsOutputArgs } from "./getStreamPackagingConfigs";
export const getStreamPackagingConfigs: typeof import("./getStreamPackagingConfigs").getStreamPackagingConfigs = null as any;
export const getStreamPackagingConfigsOutput: typeof import("./getStreamPackagingConfigs").getStreamPackagingConfigsOutput = null as any;
utilities.lazyLoad(exports, ["getStreamPackagingConfigs","getStreamPackagingConfigsOutput"], () => require("./getStreamPackagingConfigs"));

export { GetSystemMediaWorkflowArgs, GetSystemMediaWorkflowResult, GetSystemMediaWorkflowOutputArgs } from "./getSystemMediaWorkflow";
export const getSystemMediaWorkflow: typeof import("./getSystemMediaWorkflow").getSystemMediaWorkflow = null as any;
export const getSystemMediaWorkflowOutput: typeof import("./getSystemMediaWorkflow").getSystemMediaWorkflowOutput = null as any;
utilities.lazyLoad(exports, ["getSystemMediaWorkflow","getSystemMediaWorkflowOutput"], () => require("./getSystemMediaWorkflow"));

export { MediaAssetArgs, MediaAssetState } from "./mediaAsset";
export type MediaAsset = import("./mediaAsset").MediaAsset;
export const MediaAsset: typeof import("./mediaAsset").MediaAsset = null as any;
utilities.lazyLoad(exports, ["MediaAsset"], () => require("./mediaAsset"));

export { MediaWorkflowArgs, MediaWorkflowState } from "./mediaWorkflow";
export type MediaWorkflow = import("./mediaWorkflow").MediaWorkflow;
export const MediaWorkflow: typeof import("./mediaWorkflow").MediaWorkflow = null as any;
utilities.lazyLoad(exports, ["MediaWorkflow"], () => require("./mediaWorkflow"));

export { MediaWorkflowConfigurationArgs, MediaWorkflowConfigurationState } from "./mediaWorkflowConfiguration";
export type MediaWorkflowConfiguration = import("./mediaWorkflowConfiguration").MediaWorkflowConfiguration;
export const MediaWorkflowConfiguration: typeof import("./mediaWorkflowConfiguration").MediaWorkflowConfiguration = null as any;
utilities.lazyLoad(exports, ["MediaWorkflowConfiguration"], () => require("./mediaWorkflowConfiguration"));

export { MediaWorkflowJobArgs, MediaWorkflowJobState } from "./mediaWorkflowJob";
export type MediaWorkflowJob = import("./mediaWorkflowJob").MediaWorkflowJob;
export const MediaWorkflowJob: typeof import("./mediaWorkflowJob").MediaWorkflowJob = null as any;
utilities.lazyLoad(exports, ["MediaWorkflowJob"], () => require("./mediaWorkflowJob"));

export { StreamCdnConfigArgs, StreamCdnConfigState } from "./streamCdnConfig";
export type StreamCdnConfig = import("./streamCdnConfig").StreamCdnConfig;
export const StreamCdnConfig: typeof import("./streamCdnConfig").StreamCdnConfig = null as any;
utilities.lazyLoad(exports, ["StreamCdnConfig"], () => require("./streamCdnConfig"));

export { StreamDistributionChannelArgs, StreamDistributionChannelState } from "./streamDistributionChannel";
export type StreamDistributionChannel = import("./streamDistributionChannel").StreamDistributionChannel;
export const StreamDistributionChannel: typeof import("./streamDistributionChannel").StreamDistributionChannel = null as any;
utilities.lazyLoad(exports, ["StreamDistributionChannel"], () => require("./streamDistributionChannel"));

export { StreamPackagingConfigArgs, StreamPackagingConfigState } from "./streamPackagingConfig";
export type StreamPackagingConfig = import("./streamPackagingConfig").StreamPackagingConfig;
export const StreamPackagingConfig: typeof import("./streamPackagingConfig").StreamPackagingConfig = null as any;
utilities.lazyLoad(exports, ["StreamPackagingConfig"], () => require("./streamPackagingConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:MediaServices/mediaAsset:MediaAsset":
                return new MediaAsset(name, <any>undefined, { urn })
            case "oci:MediaServices/mediaWorkflow:MediaWorkflow":
                return new MediaWorkflow(name, <any>undefined, { urn })
            case "oci:MediaServices/mediaWorkflowConfiguration:MediaWorkflowConfiguration":
                return new MediaWorkflowConfiguration(name, <any>undefined, { urn })
            case "oci:MediaServices/mediaWorkflowJob:MediaWorkflowJob":
                return new MediaWorkflowJob(name, <any>undefined, { urn })
            case "oci:MediaServices/streamCdnConfig:StreamCdnConfig":
                return new StreamCdnConfig(name, <any>undefined, { urn })
            case "oci:MediaServices/streamDistributionChannel:StreamDistributionChannel":
                return new StreamDistributionChannel(name, <any>undefined, { urn })
            case "oci:MediaServices/streamPackagingConfig:StreamPackagingConfig":
                return new StreamPackagingConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "MediaServices/mediaAsset", _module)
pulumi.runtime.registerResourceModule("oci", "MediaServices/mediaWorkflow", _module)
pulumi.runtime.registerResourceModule("oci", "MediaServices/mediaWorkflowConfiguration", _module)
pulumi.runtime.registerResourceModule("oci", "MediaServices/mediaWorkflowJob", _module)
pulumi.runtime.registerResourceModule("oci", "MediaServices/streamCdnConfig", _module)
pulumi.runtime.registerResourceModule("oci", "MediaServices/streamDistributionChannel", _module)
pulumi.runtime.registerResourceModule("oci", "MediaServices/streamPackagingConfig", _module)
