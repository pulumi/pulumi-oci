// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Average Carbon Emission resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Returns the average carbon emissions summary by SKU.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAverageCarbonEmission = oci.MeteringComputation.getAverageCarbonEmission({
 *     skuPartNumber: averageCarbonEmissionSkuPartNumber,
 * });
 * ```
 */
export function getAverageCarbonEmission(args: GetAverageCarbonEmissionArgs, opts?: pulumi.InvokeOptions): Promise<GetAverageCarbonEmissionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MeteringComputation/getAverageCarbonEmission:getAverageCarbonEmission", {
        "skuPartNumber": args.skuPartNumber,
    }, opts);
}

/**
 * A collection of arguments for invoking getAverageCarbonEmission.
 */
export interface GetAverageCarbonEmissionArgs {
    /**
     * The SKU part number.
     */
    skuPartNumber: string;
}

/**
 * A collection of values returned by getAverageCarbonEmission.
 */
export interface GetAverageCarbonEmissionResult {
    /**
     * The average carbon emissions by SKU.
     */
    readonly averageCarbonEmission: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The SKU part number.
     */
    readonly skuPartNumber: string;
}
/**
 * This data source provides details about a specific Average Carbon Emission resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Returns the average carbon emissions summary by SKU.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAverageCarbonEmission = oci.MeteringComputation.getAverageCarbonEmission({
 *     skuPartNumber: averageCarbonEmissionSkuPartNumber,
 * });
 * ```
 */
export function getAverageCarbonEmissionOutput(args: GetAverageCarbonEmissionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAverageCarbonEmissionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:MeteringComputation/getAverageCarbonEmission:getAverageCarbonEmission", {
        "skuPartNumber": args.skuPartNumber,
    }, opts);
}

/**
 * A collection of arguments for invoking getAverageCarbonEmission.
 */
export interface GetAverageCarbonEmissionOutputArgs {
    /**
     * The SKU part number.
     */
    skuPartNumber: pulumi.Input<string>;
}
