// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Query resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Returns the saved query.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testQuery = oci.MeteringComputation.getQuery({
 *     queryId: testQueryOciMeteringComputationQuery.id,
 * });
 * ```
 */
export function getQuery(args: GetQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetQueryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MeteringComputation/getQuery:getQuery", {
        "queryId": args.queryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getQuery.
 */
export interface GetQueryArgs {
    /**
     * The query unique OCID.
     */
    queryId: string;
}

/**
 * A collection of values returned by getQuery.
 */
export interface GetQueryResult {
    /**
     * The compartment OCID.
     */
    readonly compartmentId: string;
    /**
     * The query OCID.
     */
    readonly id: string;
    /**
     * The common fields for queries.
     */
    readonly queryDefinitions: outputs.MeteringComputation.GetQueryQueryDefinition[];
    readonly queryId: string;
}
/**
 * This data source provides details about a specific Query resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Returns the saved query.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testQuery = oci.MeteringComputation.getQuery({
 *     queryId: testQueryOciMeteringComputationQuery.id,
 * });
 * ```
 */
export function getQueryOutput(args: GetQueryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetQueryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:MeteringComputation/getQuery:getQuery", {
        "queryId": args.queryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getQuery.
 */
export interface GetQueryOutputArgs {
    /**
     * The query unique OCID.
     */
    queryId: pulumi.Input<string>;
}
