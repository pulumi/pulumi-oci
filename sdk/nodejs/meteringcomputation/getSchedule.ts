// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Returns the saved schedule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSchedule = oci.MeteringComputation.getSchedule({
 *     scheduleId: testScheduleOciMeteringComputationSchedule.id,
 * });
 * ```
 */
export function getSchedule(args: GetScheduleArgs, opts?: pulumi.InvokeOptions): Promise<GetScheduleResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MeteringComputation/getSchedule:getSchedule", {
        "scheduleId": args.scheduleId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchedule.
 */
export interface GetScheduleArgs {
    /**
     * The schedule unique OCID.
     */
    scheduleId: string;
}

/**
 * A collection of values returned by getSchedule.
 */
export interface GetScheduleResult {
    /**
     * The customer tenancy.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * The description of the schedule.
     */
    readonly description: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The OCID representing a unique shedule.
     */
    readonly id: string;
    /**
     * The unique name of the schedule created by the user.
     */
    readonly name: string;
    /**
     * Specifies the supported output file format.
     */
    readonly outputFileFormat: string;
    /**
     * The query properties.
     */
    readonly queryProperties: outputs.MeteringComputation.GetScheduleQueryProperty[];
    /**
     * The location where usage or cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
     */
    readonly resultLocations: outputs.MeteringComputation.GetScheduleResultLocation[];
    /**
     * The saved report ID which can also be used to generate a query.
     */
    readonly savedReportId: string;
    readonly scheduleId: string;
    /**
     * Specifies the frequency according to when the schedule will be run, in the x-obmcs-recurring-time format described in [RFC 5545 section 3.3.10](https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10). Supported values are : ONE_TIME, DAILY, WEEKLY and MONTHLY.
     */
    readonly scheduleRecurrences: string;
    /**
     * The schedule lifecycle state.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The date and time the schedule was created.
     */
    readonly timeCreated: string;
    /**
     * The date and time of the next job execution.
     */
    readonly timeNextRun: string;
    /**
     * The date and time of the first time job execution.
     */
    readonly timeScheduled: string;
}
/**
 * This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Returns the saved schedule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSchedule = oci.MeteringComputation.getSchedule({
 *     scheduleId: testScheduleOciMeteringComputationSchedule.id,
 * });
 * ```
 */
export function getScheduleOutput(args: GetScheduleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetScheduleResult> {
    return pulumi.output(args).apply((a: any) => getSchedule(a, opts))
}

/**
 * A collection of arguments for invoking getSchedule.
 */
export interface GetScheduleOutputArgs {
    /**
     * The schedule unique OCID.
     */
    scheduleId: pulumi.Input<string>;
}
