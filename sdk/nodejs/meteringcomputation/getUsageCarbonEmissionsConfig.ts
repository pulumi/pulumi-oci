// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Returns the configuration list for the Console's carbon emission user interface drop-down list.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUsageCarbonEmissionsConfig = oci.MeteringComputation.getUsageCarbonEmissionsConfig({
 *     tenantId: testTenant.id,
 * });
 * ```
 */
export function getUsageCarbonEmissionsConfig(args: GetUsageCarbonEmissionsConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetUsageCarbonEmissionsConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:MeteringComputation/getUsageCarbonEmissionsConfig:getUsageCarbonEmissionsConfig", {
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsageCarbonEmissionsConfig.
 */
export interface GetUsageCarbonEmissionsConfigArgs {
    /**
     * tenant id
     */
    tenantId: string;
}

/**
 * A collection of values returned by getUsageCarbonEmissionsConfig.
 */
export interface GetUsageCarbonEmissionsConfigResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of available configurations.
     */
    readonly items: outputs.MeteringComputation.GetUsageCarbonEmissionsConfigItem[];
    readonly tenantId: string;
}
/**
 * This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Returns the configuration list for the Console's carbon emission user interface drop-down list.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUsageCarbonEmissionsConfig = oci.MeteringComputation.getUsageCarbonEmissionsConfig({
 *     tenantId: testTenant.id,
 * });
 * ```
 */
export function getUsageCarbonEmissionsConfigOutput(args: GetUsageCarbonEmissionsConfigOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUsageCarbonEmissionsConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:MeteringComputation/getUsageCarbonEmissionsConfig:getUsageCarbonEmissionsConfig", {
        "tenantId": args.tenantId,
    }, opts);
}

/**
 * A collection of arguments for invoking getUsageCarbonEmissionsConfig.
 */
export interface GetUsageCarbonEmissionsConfigOutputArgs {
    /**
     * tenant id
     */
    tenantId: pulumi.Input<string>;
}
