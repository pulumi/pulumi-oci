// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CustomTableArgs, CustomTableState } from "./customTable";
export type CustomTable = import("./customTable").CustomTable;
export const CustomTable: typeof import("./customTable").CustomTable = null as any;
utilities.lazyLoad(exports, ["CustomTable"], () => require("./customTable"));

export { GetAverageCarbonEmissionArgs, GetAverageCarbonEmissionResult, GetAverageCarbonEmissionOutputArgs } from "./getAverageCarbonEmission";
export const getAverageCarbonEmission: typeof import("./getAverageCarbonEmission").getAverageCarbonEmission = null as any;
export const getAverageCarbonEmissionOutput: typeof import("./getAverageCarbonEmission").getAverageCarbonEmissionOutput = null as any;
utilities.lazyLoad(exports, ["getAverageCarbonEmission","getAverageCarbonEmissionOutput"], () => require("./getAverageCarbonEmission"));

export { GetCleanEnergyUsageArgs, GetCleanEnergyUsageResult, GetCleanEnergyUsageOutputArgs } from "./getCleanEnergyUsage";
export const getCleanEnergyUsage: typeof import("./getCleanEnergyUsage").getCleanEnergyUsage = null as any;
export const getCleanEnergyUsageOutput: typeof import("./getCleanEnergyUsage").getCleanEnergyUsageOutput = null as any;
utilities.lazyLoad(exports, ["getCleanEnergyUsage","getCleanEnergyUsageOutput"], () => require("./getCleanEnergyUsage"));

export { GetConfigurationArgs, GetConfigurationResult, GetConfigurationOutputArgs } from "./getConfiguration";
export const getConfiguration: typeof import("./getConfiguration").getConfiguration = null as any;
export const getConfigurationOutput: typeof import("./getConfiguration").getConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getConfiguration","getConfigurationOutput"], () => require("./getConfiguration"));

export { GetCustomTableArgs, GetCustomTableResult, GetCustomTableOutputArgs } from "./getCustomTable";
export const getCustomTable: typeof import("./getCustomTable").getCustomTable = null as any;
export const getCustomTableOutput: typeof import("./getCustomTable").getCustomTableOutput = null as any;
utilities.lazyLoad(exports, ["getCustomTable","getCustomTableOutput"], () => require("./getCustomTable"));

export { GetCustomTablesArgs, GetCustomTablesResult, GetCustomTablesOutputArgs } from "./getCustomTables";
export const getCustomTables: typeof import("./getCustomTables").getCustomTables = null as any;
export const getCustomTablesOutput: typeof import("./getCustomTables").getCustomTablesOutput = null as any;
utilities.lazyLoad(exports, ["getCustomTables","getCustomTablesOutput"], () => require("./getCustomTables"));

export { GetQueriesArgs, GetQueriesResult, GetQueriesOutputArgs } from "./getQueries";
export const getQueries: typeof import("./getQueries").getQueries = null as any;
export const getQueriesOutput: typeof import("./getQueries").getQueriesOutput = null as any;
utilities.lazyLoad(exports, ["getQueries","getQueriesOutput"], () => require("./getQueries"));

export { GetQueryArgs, GetQueryResult, GetQueryOutputArgs } from "./getQuery";
export const getQuery: typeof import("./getQuery").getQuery = null as any;
export const getQueryOutput: typeof import("./getQuery").getQueryOutput = null as any;
utilities.lazyLoad(exports, ["getQuery","getQueryOutput"], () => require("./getQuery"));

export { GetScheduleArgs, GetScheduleResult, GetScheduleOutputArgs } from "./getSchedule";
export const getSchedule: typeof import("./getSchedule").getSchedule = null as any;
export const getScheduleOutput: typeof import("./getSchedule").getScheduleOutput = null as any;
utilities.lazyLoad(exports, ["getSchedule","getScheduleOutput"], () => require("./getSchedule"));

export { GetScheduledRunArgs, GetScheduledRunResult, GetScheduledRunOutputArgs } from "./getScheduledRun";
export const getScheduledRun: typeof import("./getScheduledRun").getScheduledRun = null as any;
export const getScheduledRunOutput: typeof import("./getScheduledRun").getScheduledRunOutput = null as any;
utilities.lazyLoad(exports, ["getScheduledRun","getScheduledRunOutput"], () => require("./getScheduledRun"));

export { GetScheduledRunsArgs, GetScheduledRunsResult, GetScheduledRunsOutputArgs } from "./getScheduledRuns";
export const getScheduledRuns: typeof import("./getScheduledRuns").getScheduledRuns = null as any;
export const getScheduledRunsOutput: typeof import("./getScheduledRuns").getScheduledRunsOutput = null as any;
utilities.lazyLoad(exports, ["getScheduledRuns","getScheduledRunsOutput"], () => require("./getScheduledRuns"));

export { GetSchedulesArgs, GetSchedulesResult, GetSchedulesOutputArgs } from "./getSchedules";
export const getSchedules: typeof import("./getSchedules").getSchedules = null as any;
export const getSchedulesOutput: typeof import("./getSchedules").getSchedulesOutput = null as any;
utilities.lazyLoad(exports, ["getSchedules","getSchedulesOutput"], () => require("./getSchedules"));

export { GetUsageCarbonEmissionsConfigArgs, GetUsageCarbonEmissionsConfigResult, GetUsageCarbonEmissionsConfigOutputArgs } from "./getUsageCarbonEmissionsConfig";
export const getUsageCarbonEmissionsConfig: typeof import("./getUsageCarbonEmissionsConfig").getUsageCarbonEmissionsConfig = null as any;
export const getUsageCarbonEmissionsConfigOutput: typeof import("./getUsageCarbonEmissionsConfig").getUsageCarbonEmissionsConfigOutput = null as any;
utilities.lazyLoad(exports, ["getUsageCarbonEmissionsConfig","getUsageCarbonEmissionsConfigOutput"], () => require("./getUsageCarbonEmissionsConfig"));

export { GetUsageCarbonEmissionsQueriesArgs, GetUsageCarbonEmissionsQueriesResult, GetUsageCarbonEmissionsQueriesOutputArgs } from "./getUsageCarbonEmissionsQueries";
export const getUsageCarbonEmissionsQueries: typeof import("./getUsageCarbonEmissionsQueries").getUsageCarbonEmissionsQueries = null as any;
export const getUsageCarbonEmissionsQueriesOutput: typeof import("./getUsageCarbonEmissionsQueries").getUsageCarbonEmissionsQueriesOutput = null as any;
utilities.lazyLoad(exports, ["getUsageCarbonEmissionsQueries","getUsageCarbonEmissionsQueriesOutput"], () => require("./getUsageCarbonEmissionsQueries"));

export { GetUsageCarbonEmissionsQueryArgs, GetUsageCarbonEmissionsQueryResult, GetUsageCarbonEmissionsQueryOutputArgs } from "./getUsageCarbonEmissionsQuery";
export const getUsageCarbonEmissionsQuery: typeof import("./getUsageCarbonEmissionsQuery").getUsageCarbonEmissionsQuery = null as any;
export const getUsageCarbonEmissionsQueryOutput: typeof import("./getUsageCarbonEmissionsQuery").getUsageCarbonEmissionsQueryOutput = null as any;
utilities.lazyLoad(exports, ["getUsageCarbonEmissionsQuery","getUsageCarbonEmissionsQueryOutput"], () => require("./getUsageCarbonEmissionsQuery"));

export { GetUsageStatementEmailRecipientsGroupArgs, GetUsageStatementEmailRecipientsGroupResult, GetUsageStatementEmailRecipientsGroupOutputArgs } from "./getUsageStatementEmailRecipientsGroup";
export const getUsageStatementEmailRecipientsGroup: typeof import("./getUsageStatementEmailRecipientsGroup").getUsageStatementEmailRecipientsGroup = null as any;
export const getUsageStatementEmailRecipientsGroupOutput: typeof import("./getUsageStatementEmailRecipientsGroup").getUsageStatementEmailRecipientsGroupOutput = null as any;
utilities.lazyLoad(exports, ["getUsageStatementEmailRecipientsGroup","getUsageStatementEmailRecipientsGroupOutput"], () => require("./getUsageStatementEmailRecipientsGroup"));

export { GetUsageStatementEmailRecipientsGroupsArgs, GetUsageStatementEmailRecipientsGroupsResult, GetUsageStatementEmailRecipientsGroupsOutputArgs } from "./getUsageStatementEmailRecipientsGroups";
export const getUsageStatementEmailRecipientsGroups: typeof import("./getUsageStatementEmailRecipientsGroups").getUsageStatementEmailRecipientsGroups = null as any;
export const getUsageStatementEmailRecipientsGroupsOutput: typeof import("./getUsageStatementEmailRecipientsGroups").getUsageStatementEmailRecipientsGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getUsageStatementEmailRecipientsGroups","getUsageStatementEmailRecipientsGroupsOutput"], () => require("./getUsageStatementEmailRecipientsGroups"));

export { QueryArgs, QueryState } from "./query";
export type Query = import("./query").Query;
export const Query: typeof import("./query").Query = null as any;
utilities.lazyLoad(exports, ["Query"], () => require("./query"));

export { ScheduleArgs, ScheduleState } from "./schedule";
export type Schedule = import("./schedule").Schedule;
export const Schedule: typeof import("./schedule").Schedule = null as any;
utilities.lazyLoad(exports, ["Schedule"], () => require("./schedule"));

export { UsageArgs, UsageState } from "./usage";
export type Usage = import("./usage").Usage;
export const Usage: typeof import("./usage").Usage = null as any;
utilities.lazyLoad(exports, ["Usage"], () => require("./usage"));

export { UsageCarbonEmissionArgs, UsageCarbonEmissionState } from "./usageCarbonEmission";
export type UsageCarbonEmission = import("./usageCarbonEmission").UsageCarbonEmission;
export const UsageCarbonEmission: typeof import("./usageCarbonEmission").UsageCarbonEmission = null as any;
utilities.lazyLoad(exports, ["UsageCarbonEmission"], () => require("./usageCarbonEmission"));

export { UsageCarbonEmissionsQueryArgs, UsageCarbonEmissionsQueryState } from "./usageCarbonEmissionsQuery";
export type UsageCarbonEmissionsQuery = import("./usageCarbonEmissionsQuery").UsageCarbonEmissionsQuery;
export const UsageCarbonEmissionsQuery: typeof import("./usageCarbonEmissionsQuery").UsageCarbonEmissionsQuery = null as any;
utilities.lazyLoad(exports, ["UsageCarbonEmissionsQuery"], () => require("./usageCarbonEmissionsQuery"));

export { UsageStatementEmailRecipientsGroupArgs, UsageStatementEmailRecipientsGroupState } from "./usageStatementEmailRecipientsGroup";
export type UsageStatementEmailRecipientsGroup = import("./usageStatementEmailRecipientsGroup").UsageStatementEmailRecipientsGroup;
export const UsageStatementEmailRecipientsGroup: typeof import("./usageStatementEmailRecipientsGroup").UsageStatementEmailRecipientsGroup = null as any;
utilities.lazyLoad(exports, ["UsageStatementEmailRecipientsGroup"], () => require("./usageStatementEmailRecipientsGroup"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:MeteringComputation/customTable:CustomTable":
                return new CustomTable(name, <any>undefined, { urn })
            case "oci:MeteringComputation/query:Query":
                return new Query(name, <any>undefined, { urn })
            case "oci:MeteringComputation/schedule:Schedule":
                return new Schedule(name, <any>undefined, { urn })
            case "oci:MeteringComputation/usage:Usage":
                return new Usage(name, <any>undefined, { urn })
            case "oci:MeteringComputation/usageCarbonEmission:UsageCarbonEmission":
                return new UsageCarbonEmission(name, <any>undefined, { urn })
            case "oci:MeteringComputation/usageCarbonEmissionsQuery:UsageCarbonEmissionsQuery":
                return new UsageCarbonEmissionsQuery(name, <any>undefined, { urn })
            case "oci:MeteringComputation/usageStatementEmailRecipientsGroup:UsageStatementEmailRecipientsGroup":
                return new UsageStatementEmailRecipientsGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "MeteringComputation/customTable", _module)
pulumi.runtime.registerResourceModule("oci", "MeteringComputation/query", _module)
pulumi.runtime.registerResourceModule("oci", "MeteringComputation/schedule", _module)
pulumi.runtime.registerResourceModule("oci", "MeteringComputation/usage", _module)
pulumi.runtime.registerResourceModule("oci", "MeteringComputation/usageCarbonEmission", _module)
pulumi.runtime.registerResourceModule("oci", "MeteringComputation/usageCarbonEmissionsQuery", _module)
pulumi.runtime.registerResourceModule("oci", "MeteringComputation/usageStatementEmailRecipientsGroup", _module)
