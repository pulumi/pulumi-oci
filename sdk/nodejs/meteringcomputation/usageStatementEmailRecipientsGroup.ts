// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Usage Statement Email Recipients Group resource in Oracle Cloud Infrastructure Metering Computation service.
 *
 * Add a list of email recipients that can receive usage statements for the subscription.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testUsageStatementEmailRecipientsGroup = new oci.meteringcomputation.UsageStatementEmailRecipientsGroup("test_usage_statement_email_recipients_group", {
 *     compartmentId: compartmentId,
 *     recipientsLists: [{
 *         emailId: testEmail.id,
 *         state: usageStatementEmailRecipientsGroupRecipientsListState,
 *         firstName: usageStatementEmailRecipientsGroupRecipientsListFirstName,
 *         lastName: usageStatementEmailRecipientsGroupRecipientsListLastName,
 *     }],
 *     subscriptionId: testSubscription.id,
 * });
 * ```
 *
 * ## Import
 *
 * UsageStatementEmailRecipientsGroups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:MeteringComputation/usageStatementEmailRecipientsGroup:UsageStatementEmailRecipientsGroup test_usage_statement_email_recipients_group "usageStatements/{subscriptionId}/emailRecipientsGroups/{emailRecipientsGroupId}/compartmentId/{compartmentId}"
 * ```
 */
export class UsageStatementEmailRecipientsGroup extends pulumi.CustomResource {
    /**
     * Get an existing UsageStatementEmailRecipientsGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UsageStatementEmailRecipientsGroupState, opts?: pulumi.CustomResourceOptions): UsageStatementEmailRecipientsGroup {
        return new UsageStatementEmailRecipientsGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:MeteringComputation/usageStatementEmailRecipientsGroup:UsageStatementEmailRecipientsGroup';

    /**
     * Returns true if the given object is an instance of UsageStatementEmailRecipientsGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UsageStatementEmailRecipientsGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UsageStatementEmailRecipientsGroup.__pulumiType;
    }

    /**
     * (Updatable) The customer tenancy.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    public readonly emailRecipientsGroupId!: pulumi.Output<string>;
    /**
     * (Updatable) The list of recipient will receive the usage statement email.
     */
    public readonly recipientsLists!: pulumi.Output<outputs.MeteringComputation.UsageStatementEmailRecipientsGroupRecipientsList[]>;
    /**
     * (Updatable) The email recipient lifecycle state.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The UsageStatement Subscription unique OCID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly subscriptionId!: pulumi.Output<string>;

    /**
     * Create a UsageStatementEmailRecipientsGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UsageStatementEmailRecipientsGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UsageStatementEmailRecipientsGroupArgs | UsageStatementEmailRecipientsGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UsageStatementEmailRecipientsGroupState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["emailRecipientsGroupId"] = state ? state.emailRecipientsGroupId : undefined;
            resourceInputs["recipientsLists"] = state ? state.recipientsLists : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
        } else {
            const args = argsOrState as UsageStatementEmailRecipientsGroupArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.recipientsLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recipientsLists'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["emailRecipientsGroupId"] = args ? args.emailRecipientsGroupId : undefined;
            resourceInputs["recipientsLists"] = args ? args.recipientsLists : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UsageStatementEmailRecipientsGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UsageStatementEmailRecipientsGroup resources.
 */
export interface UsageStatementEmailRecipientsGroupState {
    /**
     * (Updatable) The customer tenancy.
     */
    compartmentId?: pulumi.Input<string>;
    emailRecipientsGroupId?: pulumi.Input<string>;
    /**
     * (Updatable) The list of recipient will receive the usage statement email.
     */
    recipientsLists?: pulumi.Input<pulumi.Input<inputs.MeteringComputation.UsageStatementEmailRecipientsGroupRecipientsList>[]>;
    /**
     * (Updatable) The email recipient lifecycle state.
     */
    state?: pulumi.Input<string>;
    /**
     * The UsageStatement Subscription unique OCID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    subscriptionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a UsageStatementEmailRecipientsGroup resource.
 */
export interface UsageStatementEmailRecipientsGroupArgs {
    /**
     * (Updatable) The customer tenancy.
     */
    compartmentId: pulumi.Input<string>;
    emailRecipientsGroupId?: pulumi.Input<string>;
    /**
     * (Updatable) The list of recipient will receive the usage statement email.
     */
    recipientsLists: pulumi.Input<pulumi.Input<inputs.MeteringComputation.UsageStatementEmailRecipientsGroupRecipientsList>[]>;
    /**
     * The UsageStatement Subscription unique OCID.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    subscriptionId: pulumi.Input<string>;
}
