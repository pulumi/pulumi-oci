// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AlarmArgs, AlarmState } from "./alarm";
export type Alarm = import("./alarm").Alarm;
export const Alarm: typeof import("./alarm").Alarm = null as any;
utilities.lazyLoad(exports, ["Alarm"], () => require("./alarm"));

export { AlarmSuppressionArgs, AlarmSuppressionState } from "./alarmSuppression";
export type AlarmSuppression = import("./alarmSuppression").AlarmSuppression;
export const AlarmSuppression: typeof import("./alarmSuppression").AlarmSuppression = null as any;
utilities.lazyLoad(exports, ["AlarmSuppression"], () => require("./alarmSuppression"));

export { GetAlarmArgs, GetAlarmResult, GetAlarmOutputArgs } from "./getAlarm";
export const getAlarm: typeof import("./getAlarm").getAlarm = null as any;
export const getAlarmOutput: typeof import("./getAlarm").getAlarmOutput = null as any;
utilities.lazyLoad(exports, ["getAlarm","getAlarmOutput"], () => require("./getAlarm"));

export { GetAlarmHistoryCollectionArgs, GetAlarmHistoryCollectionResult, GetAlarmHistoryCollectionOutputArgs } from "./getAlarmHistoryCollection";
export const getAlarmHistoryCollection: typeof import("./getAlarmHistoryCollection").getAlarmHistoryCollection = null as any;
export const getAlarmHistoryCollectionOutput: typeof import("./getAlarmHistoryCollection").getAlarmHistoryCollectionOutput = null as any;
utilities.lazyLoad(exports, ["getAlarmHistoryCollection","getAlarmHistoryCollectionOutput"], () => require("./getAlarmHistoryCollection"));

export { GetAlarmStatusesArgs, GetAlarmStatusesResult, GetAlarmStatusesOutputArgs } from "./getAlarmStatuses";
export const getAlarmStatuses: typeof import("./getAlarmStatuses").getAlarmStatuses = null as any;
export const getAlarmStatusesOutput: typeof import("./getAlarmStatuses").getAlarmStatusesOutput = null as any;
utilities.lazyLoad(exports, ["getAlarmStatuses","getAlarmStatusesOutput"], () => require("./getAlarmStatuses"));

export { GetAlarmSuppressionArgs, GetAlarmSuppressionResult, GetAlarmSuppressionOutputArgs } from "./getAlarmSuppression";
export const getAlarmSuppression: typeof import("./getAlarmSuppression").getAlarmSuppression = null as any;
export const getAlarmSuppressionOutput: typeof import("./getAlarmSuppression").getAlarmSuppressionOutput = null as any;
utilities.lazyLoad(exports, ["getAlarmSuppression","getAlarmSuppressionOutput"], () => require("./getAlarmSuppression"));

export { GetAlarmSuppressionsArgs, GetAlarmSuppressionsResult, GetAlarmSuppressionsOutputArgs } from "./getAlarmSuppressions";
export const getAlarmSuppressions: typeof import("./getAlarmSuppressions").getAlarmSuppressions = null as any;
export const getAlarmSuppressionsOutput: typeof import("./getAlarmSuppressions").getAlarmSuppressionsOutput = null as any;
utilities.lazyLoad(exports, ["getAlarmSuppressions","getAlarmSuppressionsOutput"], () => require("./getAlarmSuppressions"));

export { GetAlarmsArgs, GetAlarmsResult, GetAlarmsOutputArgs } from "./getAlarms";
export const getAlarms: typeof import("./getAlarms").getAlarms = null as any;
export const getAlarmsOutput: typeof import("./getAlarms").getAlarmsOutput = null as any;
utilities.lazyLoad(exports, ["getAlarms","getAlarmsOutput"], () => require("./getAlarms"));

export { GetMetricDataArgs, GetMetricDataResult, GetMetricDataOutputArgs } from "./getMetricData";
export const getMetricData: typeof import("./getMetricData").getMetricData = null as any;
export const getMetricDataOutput: typeof import("./getMetricData").getMetricDataOutput = null as any;
utilities.lazyLoad(exports, ["getMetricData","getMetricDataOutput"], () => require("./getMetricData"));

export { GetMetricsArgs, GetMetricsResult, GetMetricsOutputArgs } from "./getMetrics";
export const getMetrics: typeof import("./getMetrics").getMetrics = null as any;
export const getMetricsOutput: typeof import("./getMetrics").getMetricsOutput = null as any;
utilities.lazyLoad(exports, ["getMetrics","getMetricsOutput"], () => require("./getMetrics"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Monitoring/alarm:Alarm":
                return new Alarm(name, <any>undefined, { urn })
            case "oci:Monitoring/alarmSuppression:AlarmSuppression":
                return new AlarmSuppression(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Monitoring/alarm", _module)
pulumi.runtime.registerResourceModule("oci", "Monitoring/alarmSuppression", _module)
