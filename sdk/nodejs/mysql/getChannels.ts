// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Channels in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Lists all the Channels that match the specified filters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testChannels = oci.Mysql.getChannels({
 *     compartmentId: compartmentId,
 *     channelId: testChannel.id,
 *     dbSystemId: testDbSystem.id,
 *     displayName: channelDisplayName,
 *     isEnabled: channelIsEnabled,
 *     state: channelState,
 * });
 * ```
 */
export function getChannels(args: GetChannelsArgs, opts?: pulumi.InvokeOptions): Promise<GetChannelsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Mysql/getChannels:getChannels", {
        "channelId": args.channelId,
        "compartmentId": args.compartmentId,
        "dbSystemId": args.dbSystemId,
        "displayName": args.displayName,
        "filters": args.filters,
        "isEnabled": args.isEnabled,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getChannels.
 */
export interface GetChannelsArgs {
    /**
     * The OCID of the Channel.
     */
    channelId?: string;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId?: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.Mysql.GetChannelsFilter[];
    /**
     * If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
     */
    isEnabled?: boolean;
    /**
     * The LifecycleState of the Channel.
     */
    state?: string;
}

/**
 * A collection of values returned by getChannels.
 */
export interface GetChannelsResult {
    readonly channelId?: string;
    /**
     * The list of channels.
     */
    readonly channels: outputs.Mysql.GetChannelsChannel[];
    /**
     * The OCID of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The OCID of the source DB System.
     */
    readonly dbSystemId?: string;
    /**
     * The user-friendly name for the Channel. It does not have to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Mysql.GetChannelsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Whether the Channel has been enabled by the user.
     */
    readonly isEnabled?: boolean;
    /**
     * The state of the Channel.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Channels in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Lists all the Channels that match the specified filters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testChannels = oci.Mysql.getChannels({
 *     compartmentId: compartmentId,
 *     channelId: testChannel.id,
 *     dbSystemId: testDbSystem.id,
 *     displayName: channelDisplayName,
 *     isEnabled: channelIsEnabled,
 *     state: channelState,
 * });
 * ```
 */
export function getChannelsOutput(args: GetChannelsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetChannelsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Mysql/getChannels:getChannels", {
        "channelId": args.channelId,
        "compartmentId": args.compartmentId,
        "dbSystemId": args.dbSystemId,
        "displayName": args.displayName,
        "filters": args.filters,
        "isEnabled": args.isEnabled,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getChannels.
 */
export interface GetChannelsOutputArgs {
    /**
     * The OCID of the Channel.
     */
    channelId?: pulumi.Input<string>;
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId?: pulumi.Input<string>;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Mysql.GetChannelsFilterArgs>[]>;
    /**
     * If true, returns only Channels that are enabled. If false, returns only Channels that are disabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * The LifecycleState of the Channel.
     */
    state?: pulumi.Input<string>;
}
