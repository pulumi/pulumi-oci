// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific HeatWave cluster resource in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Gets information about the HeatWave cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testHeatWaveCluster = oci.Mysql.getHeatWaveCluster({
 *     dbSystemId: oci_database_db_system.test_db_system.id,
 * });
 * ```
 */
export function getHeatWaveCluster(args: GetHeatWaveClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetHeatWaveClusterResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Mysql/getHeatWaveCluster:getHeatWaveCluster", {
        "dbSystemId": args.dbSystemId,
    }, opts);
}

/**
 * A collection of arguments for invoking getHeatWaveCluster.
 */
export interface GetHeatWaveClusterArgs {
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: string;
}

/**
 * A collection of values returned by getHeatWaveCluster.
 */
export interface GetHeatWaveClusterResult {
    /**
     * A HeatWave node is a compute host that is part of a HeatWave cluster.
     */
    readonly clusterNodes: outputs.Mysql.GetHeatWaveClusterClusterNode[];
    /**
     * The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     */
    readonly clusterSize: number;
    /**
     * The OCID of the parent DB System this HeatWave cluster is attached to.
     */
    readonly dbSystemId: string;
    readonly id: string;
    /**
     * Additional information about the current lifecycleState.
     */
    readonly lifecycleDetails: string;
    /**
     * The shape determines resources to allocate to the HeatWave nodes - CPU cores, memory.
     */
    readonly shapeName: string;
    /**
     * The current state of the HeatWave cluster.
     */
    readonly state: string;
    /**
     * The date and time the HeatWave cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    readonly timeCreated: string;
    /**
     * The time the HeatWave cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    readonly timeUpdated: string;
}

export function getHeatWaveClusterOutput(args: GetHeatWaveClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHeatWaveClusterResult> {
    return pulumi.output(args).apply(a => getHeatWaveCluster(a, opts))
}

/**
 * A collection of arguments for invoking getHeatWaveCluster.
 */
export interface GetHeatWaveClusterOutputArgs {
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId: pulumi.Input<string>;
}
