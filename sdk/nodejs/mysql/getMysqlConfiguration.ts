// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Mysql Configuration resource in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Get the full details of the specified Configuration, including the list of MySQL Variables and their values.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMysqlConfiguration = oci.Mysql.getMysqlConfiguration({
 *     configurationId: _var.mysql_configuration_id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMysqlConfiguration(args: GetMysqlConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Mysql/getMysqlConfiguration:getMysqlConfiguration", {
        "configurationId": args.configurationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMysqlConfiguration.
 */
export interface GetMysqlConfigurationArgs {
    /**
     * The OCID of the Configuration.
     */
    configurationId: string;
}

/**
 * A collection of values returned by getMysqlConfiguration.
 */
export interface GetMysqlConfigurationResult {
    /**
     * OCID of the Compartment the Configuration exists in.
     */
    readonly compartmentId: string;
    readonly configurationId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * User-provided data about the Configuration.
     */
    readonly description: string;
    /**
     * The display name of the Configuration.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The OCID of the Configuration.
     */
    readonly id: string;
    /**
     * User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
     */
    readonly initVariables: outputs.Mysql.GetMysqlConfigurationInitVariable[];
    /**
     * The OCID of the Configuration from which this Configuration is "derived". This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
     */
    readonly parentConfigurationId: string;
    /**
     * The name of the associated Shape.
     */
    readonly shapeName: string;
    /**
     * The current state of the Configuration.
     */
    readonly state: string;
    /**
     * The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    readonly timeCreated: string;
    /**
     * The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    readonly timeUpdated: string;
    /**
     * The Configuration type, DEFAULT or CUSTOM.
     */
    readonly type: string;
    /**
     * User-defined service variables.
     */
    readonly variables: outputs.Mysql.GetMysqlConfigurationVariable[];
}
/**
 * This data source provides details about a specific Mysql Configuration resource in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Get the full details of the specified Configuration, including the list of MySQL Variables and their values.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMysqlConfiguration = oci.Mysql.getMysqlConfiguration({
 *     configurationId: _var.mysql_configuration_id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMysqlConfigurationOutput(args: GetMysqlConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getMysqlConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlConfiguration.
 */
export interface GetMysqlConfigurationOutputArgs {
    /**
     * The OCID of the Configuration.
     */
    configurationId: pulumi.Input<string>;
}
