// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Mysql Db Systems in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Get a list of DB Systems in the specified compartment.
 * The default sort order is by timeUpdated, descending.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMysqlDbSystems = oci.Mysql.getMysqlDbSystems({
 *     compartmentId: compartmentId,
 *     configurationId: mysqlConfigurationId,
 *     databaseManagements: mysqlDbSystemDatabaseManagement,
 *     dbSystemId: testDbSystem.id,
 *     displayName: mysqlDbSystemDisplayName,
 *     isHeatWaveClusterAttached: mysqlDbSystemIsHeatWaveClusterAttached,
 *     isUpToDate: mysqlDbSystemIsUpToDate,
 *     state: mysqlDbSystemState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMysqlDbSystems(args: GetMysqlDbSystemsArgs, opts?: pulumi.InvokeOptions): Promise<GetMysqlDbSystemsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Mysql/getMysqlDbSystems:getMysqlDbSystems", {
        "compartmentId": args.compartmentId,
        "configurationId": args.configurationId,
        "databaseManagements": args.databaseManagements,
        "dbSystemId": args.dbSystemId,
        "displayName": args.displayName,
        "filters": args.filters,
        "isHeatWaveClusterAttached": args.isHeatWaveClusterAttached,
        "isUpToDate": args.isUpToDate,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getMysqlDbSystems.
 */
export interface GetMysqlDbSystemsArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The requested Configuration instance.
     */
    configurationId?: string;
    /**
     * Filter DB Systems by their Database Management configuration.
     */
    databaseManagements?: string[];
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId?: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.Mysql.GetMysqlDbSystemsFilter[];
    /**
     * If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
     */
    isHeatWaveClusterAttached?: boolean;
    /**
     * Filter instances if they are using the latest revision of the Configuration they are associated with.
     */
    isUpToDate?: boolean;
    /**
     * DbSystem Lifecycle State
     */
    state?: string;
}

/**
 * A collection of values returned by getMysqlDbSystems.
 */
export interface GetMysqlDbSystemsResult {
    /**
     * The OCID of the compartment the DB System belongs in.
     */
    readonly compartmentId: string;
    /**
     * The OCID of the Configuration to be used for Instances in this DB System.
     */
    readonly configurationId?: string;
    /**
     * Whether to enable monitoring via the Database Management service.
     */
    readonly databaseManagements?: string[];
    /**
     * The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
     */
    readonly dbSystemId?: string;
    /**
     * The list of db_systems.
     */
    readonly dbSystems: outputs.Mysql.GetMysqlDbSystemsDbSystem[];
    /**
     * The user-friendly name for the DB System. It does not have to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Mysql.GetMysqlDbSystemsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * If the DB System has a HeatWave Cluster attached.
     */
    readonly isHeatWaveClusterAttached?: boolean;
    readonly isUpToDate?: boolean;
    /**
     * The current state of the DB System.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Mysql Db Systems in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Get a list of DB Systems in the specified compartment.
 * The default sort order is by timeUpdated, descending.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMysqlDbSystems = oci.Mysql.getMysqlDbSystems({
 *     compartmentId: compartmentId,
 *     configurationId: mysqlConfigurationId,
 *     databaseManagements: mysqlDbSystemDatabaseManagement,
 *     dbSystemId: testDbSystem.id,
 *     displayName: mysqlDbSystemDisplayName,
 *     isHeatWaveClusterAttached: mysqlDbSystemIsHeatWaveClusterAttached,
 *     isUpToDate: mysqlDbSystemIsUpToDate,
 *     state: mysqlDbSystemState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMysqlDbSystemsOutput(args: GetMysqlDbSystemsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMysqlDbSystemsResult> {
    return pulumi.output(args).apply((a: any) => getMysqlDbSystems(a, opts))
}

/**
 * A collection of arguments for invoking getMysqlDbSystems.
 */
export interface GetMysqlDbSystemsOutputArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The requested Configuration instance.
     */
    configurationId?: pulumi.Input<string>;
    /**
     * Filter DB Systems by their Database Management configuration.
     */
    databaseManagements?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId?: pulumi.Input<string>;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Mysql.GetMysqlDbSystemsFilterArgs>[]>;
    /**
     * If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
     */
    isHeatWaveClusterAttached?: pulumi.Input<boolean>;
    /**
     * Filter instances if they are using the latest revision of the Configuration they are associated with.
     */
    isUpToDate?: pulumi.Input<boolean>;
    /**
     * DbSystem Lifecycle State
     */
    state?: pulumi.Input<string>;
}
