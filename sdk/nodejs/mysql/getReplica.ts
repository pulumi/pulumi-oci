// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Replica resource in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Gets the full details of the specified read replica.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReplica = oci.Mysql.getReplica({
 *     replicaId: oci_mysql_replica.test_replica.id,
 * });
 * ```
 */
export function getReplica(args: GetReplicaArgs, opts?: pulumi.InvokeOptions): Promise<GetReplicaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Mysql/getReplica:getReplica", {
        "replicaId": args.replicaId,
    }, opts);
}

/**
 * A collection of arguments for invoking getReplica.
 */
export interface GetReplicaArgs {
    /**
     * The Replica [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    replicaId: string;
}

/**
 * A collection of values returned by getReplica.
 */
export interface GetReplicaResult {
    /**
     * The name of the Availability Domain the read replica is located in.
     */
    readonly availabilityDomain: string;
    /**
     * The OCID of the compartment that contains the read replica.
     */
    readonly compartmentId: string;
    /**
     * The OCID of the DB System the read replica is associated with.
     */
    readonly dbSystemId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * User provided description of the read replica.
     */
    readonly description: string;
    /**
     * The user-friendly name for the read replica. It does not have to be unique.
     */
    readonly displayName: string;
    /**
     * The name of the Fault Domain the read replica is located in.
     */
    readonly faultDomain: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The OCID of the read replica.
     */
    readonly id: string;
    /**
     * The IP address the read replica is configured to listen on.
     */
    readonly ipAddress: string;
    /**
     * Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow. Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If the DB System is delete protected, read replicas can still be deleted individually if they are not delete  protected themselves.
     */
    readonly isDeleteProtected: boolean;
    /**
     * A message describing the state of the read replica.
     */
    readonly lifecycleDetails: string;
    /**
     * The MySQL version used by the read replica.
     */
    readonly mysqlVersion: string;
    /**
     * The port the read replica is configured to listen on.
     */
    readonly port: number;
    /**
     * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
     */
    readonly portX: number;
    readonly replicaId: string;
    /**
     * The state of the read replica.
     */
    readonly state: string;
    /**
     * The date and time the read replica was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    readonly timeCreated: string;
    /**
     * The time the read replica was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Replica resource in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Gets the full details of the specified read replica.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReplica = oci.Mysql.getReplica({
 *     replicaId: oci_mysql_replica.test_replica.id,
 * });
 * ```
 */
export function getReplicaOutput(args: GetReplicaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetReplicaResult> {
    return pulumi.output(args).apply((a: any) => getReplica(a, opts))
}

/**
 * A collection of arguments for invoking getReplica.
 */
export interface GetReplicaOutputArgs {
    /**
     * The Replica [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    replicaId: pulumi.Input<string>;
}
