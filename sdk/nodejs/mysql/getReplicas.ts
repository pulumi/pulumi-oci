// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Replicas in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Lists all the read replicas that match the specified filters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReplicas = oci.Mysql.getReplicas({
 *     compartmentId: compartmentId,
 *     configurationId: testMysqlConfiguration.id,
 *     dbSystemId: testMysqlDbSystem.id,
 *     displayName: replicaDisplayName,
 *     isUpToDate: replicaIsUpToDate,
 *     replicaId: testReplica.id,
 *     state: replicaState,
 * });
 * ```
 */
export function getReplicas(args: GetReplicasArgs, opts?: pulumi.InvokeOptions): Promise<GetReplicasResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Mysql/getReplicas:getReplicas", {
        "compartmentId": args.compartmentId,
        "configurationId": args.configurationId,
        "dbSystemId": args.dbSystemId,
        "displayName": args.displayName,
        "filters": args.filters,
        "isUpToDate": args.isUpToDate,
        "replicaId": args.replicaId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getReplicas.
 */
export interface GetReplicasArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: string;
    /**
     * The requested Configuration instance.
     */
    configurationId?: string;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId?: string;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.Mysql.GetReplicasFilter[];
    /**
     * Filter instances if they are using the latest revision of the Configuration they are associated with.
     */
    isUpToDate?: boolean;
    /**
     * The read replica [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    replicaId?: string;
    /**
     * The LifecycleState of the read replica.
     */
    state?: string;
}

/**
 * A collection of values returned by getReplicas.
 */
export interface GetReplicasResult {
    /**
     * The OCID of the compartment that contains the read replica.
     */
    readonly compartmentId: string;
    /**
     * The OCID of the Configuration to be used by the read replica.
     */
    readonly configurationId?: string;
    /**
     * The OCID of the DB System the read replica is associated with.
     */
    readonly dbSystemId?: string;
    /**
     * The user-friendly name for the read replica. It does not have to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Mysql.GetReplicasFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isUpToDate?: boolean;
    readonly replicaId?: string;
    /**
     * The list of replicas.
     */
    readonly replicas: outputs.Mysql.GetReplicasReplica[];
    /**
     * The state of the read replica.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Replicas in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Lists all the read replicas that match the specified filters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReplicas = oci.Mysql.getReplicas({
 *     compartmentId: compartmentId,
 *     configurationId: testMysqlConfiguration.id,
 *     dbSystemId: testMysqlDbSystem.id,
 *     displayName: replicaDisplayName,
 *     isUpToDate: replicaIsUpToDate,
 *     replicaId: testReplica.id,
 *     state: replicaState,
 * });
 * ```
 */
export function getReplicasOutput(args: GetReplicasOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetReplicasResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Mysql/getReplicas:getReplicas", {
        "compartmentId": args.compartmentId,
        "configurationId": args.configurationId,
        "dbSystemId": args.dbSystemId,
        "displayName": args.displayName,
        "filters": args.filters,
        "isUpToDate": args.isUpToDate,
        "replicaId": args.replicaId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getReplicas.
 */
export interface GetReplicasOutputArgs {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The requested Configuration instance.
     */
    configurationId?: pulumi.Input<string>;
    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    dbSystemId?: pulumi.Input<string>;
    /**
     * A filter to return only the resource matching the given display name exactly.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Mysql.GetReplicasFilterArgs>[]>;
    /**
     * Filter instances if they are using the latest revision of the Configuration they are associated with.
     */
    isUpToDate?: pulumi.Input<boolean>;
    /**
     * The read replica [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    replicaId?: pulumi.Input<string>;
    /**
     * The LifecycleState of the read replica.
     */
    state?: pulumi.Input<string>;
}
