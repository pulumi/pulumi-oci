// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Mysql Backup resource in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Create a backup of a DB System.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMysqlBackup = new oci.mysql.MysqlBackup("test_mysql_backup", {
 *     dbSystemId: testDbSystem.id,
 *     backupType: mysqlBackupBackupType,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: mysqlBackupDescription,
 *     displayName: mysqlBackupDisplayName,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     retentionInDays: mysqlBackupRetentionInDays,
 *     softDelete: mysqlBackupSoftDelete,
 * });
 * ```
 *
 * ## Import
 *
 * MysqlBackups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Mysql/mysqlBackup:MysqlBackup test_mysql_backup "id"
 * ```
 */
export class MysqlBackup extends pulumi.CustomResource {
    /**
     * Get an existing MysqlBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MysqlBackupState, opts?: pulumi.CustomResourceOptions): MysqlBackup {
        return new MysqlBackup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Mysql/mysqlBackup:MysqlBackup';

    /**
     * Returns true if the given object is an instance of MysqlBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MysqlBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MysqlBackup.__pulumiType;
    }

    /**
     * The size of the backup in base-2 (IEC) gibibytes. (GiB).
     */
    declare public /*out*/ readonly backupSizeInGbs: pulumi.Output<number>;
    /**
     * The type of backup.
     */
    declare public readonly backupType: pulumi.Output<string>;
    /**
     * Backup validation details.
     */
    declare public /*out*/ readonly backupValidationDetails: pulumi.Output<outputs.Mysql.MysqlBackupBackupValidationDetail[]>;
    /**
     * (Updatable) The OCID of the compartment the backup exists in.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * Indicates how the backup was created: manually, automatic, or by an Operator.
     */
    declare public /*out*/ readonly creationType: pulumi.Output<string>;
    /**
     * DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
     */
    declare public /*out*/ readonly dataStorageSizeInGb: pulumi.Output<number>;
    /**
     * The OCID of the DB System the Backup is associated with.
     */
    declare public readonly dbSystemId: pulumi.Output<string>;
    declare public readonly dbSystemSnapshotSummaries: pulumi.Output<outputs.Mysql.MysqlBackupDbSystemSnapshotSummary[]>;
    /**
     * Snapshot of the DbSystem details at the time of the backup
     */
    declare public /*out*/ readonly dbSystemSnapshots: pulumi.Output<outputs.Mysql.MysqlBackupDbSystemSnapshot[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A user-supplied description for the backup.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) A user-supplied display name for the backup.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * Encrypt data details.
     */
    declare public readonly encryptData: pulumi.Output<outputs.Mysql.MysqlBackupEncryptData>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The OCID of the immediate source DB system backup from which this DB system backup was copied.
     */
    declare public /*out*/ readonly immediateSourceBackupId: pulumi.Output<string>;
    /**
     * Additional information about the current lifecycleState.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The MySQL server version of the DB System used for backup.
     */
    declare public /*out*/ readonly mysqlVersion: pulumi.Output<string>;
    /**
     * The OCID of the original source DB system backup from which this DB system backup was copied.
     */
    declare public /*out*/ readonly originalSourceBackupId: pulumi.Output<string>;
    /**
     * (Updatable) Number of days to retain this backup.
     */
    declare public readonly retentionInDays: pulumi.Output<number>;
    /**
     * The shape of the DB System instance used for backup.
     */
    declare public /*out*/ readonly shapeName: pulumi.Output<string>;
    /**
     * (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
     */
    declare public readonly softDelete: pulumi.Output<string>;
    /**
     * Details of backup source in the cloud.
     */
    declare public readonly sourceDetails: pulumi.Output<outputs.Mysql.MysqlBackupSourceDetails | undefined>;
    /**
     * The state of the backup.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    declare public /*out*/ readonly timeCopyCreated: pulumi.Output<string>;
    /**
     * The time the backup record was created.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time at which the backup was updated.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    declare public readonly validateBackupDetails: pulumi.Output<outputs.Mysql.MysqlBackupValidateBackupDetail[] | undefined>;
    /**
     * (Updatable) An optional integer property when incremented will trigger a validation of the backup. Set the integer to 1 initially and increment it by 1 to re-trigger validation.
     * * `validate-backup-details` - Details required to validate backup. **Note:** Validate action can only be called from update resource operation.
     */
    declare public readonly validateTrigger: pulumi.Output<number | undefined>;

    /**
     * Create a MysqlBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: MysqlBackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MysqlBackupArgs | MysqlBackupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MysqlBackupState | undefined;
            resourceInputs["backupSizeInGbs"] = state?.backupSizeInGbs;
            resourceInputs["backupType"] = state?.backupType;
            resourceInputs["backupValidationDetails"] = state?.backupValidationDetails;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["creationType"] = state?.creationType;
            resourceInputs["dataStorageSizeInGb"] = state?.dataStorageSizeInGb;
            resourceInputs["dbSystemId"] = state?.dbSystemId;
            resourceInputs["dbSystemSnapshotSummaries"] = state?.dbSystemSnapshotSummaries;
            resourceInputs["dbSystemSnapshots"] = state?.dbSystemSnapshots;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["encryptData"] = state?.encryptData;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["immediateSourceBackupId"] = state?.immediateSourceBackupId;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["mysqlVersion"] = state?.mysqlVersion;
            resourceInputs["originalSourceBackupId"] = state?.originalSourceBackupId;
            resourceInputs["retentionInDays"] = state?.retentionInDays;
            resourceInputs["shapeName"] = state?.shapeName;
            resourceInputs["softDelete"] = state?.softDelete;
            resourceInputs["sourceDetails"] = state?.sourceDetails;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCopyCreated"] = state?.timeCopyCreated;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["validateBackupDetails"] = state?.validateBackupDetails;
            resourceInputs["validateTrigger"] = state?.validateTrigger;
        } else {
            const args = argsOrState as MysqlBackupArgs | undefined;
            resourceInputs["backupType"] = args?.backupType;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["dbSystemId"] = args?.dbSystemId;
            resourceInputs["dbSystemSnapshotSummaries"] = args?.dbSystemSnapshotSummaries;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["encryptData"] = args?.encryptData;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["retentionInDays"] = args?.retentionInDays;
            resourceInputs["softDelete"] = args?.softDelete;
            resourceInputs["sourceDetails"] = args?.sourceDetails;
            resourceInputs["validateBackupDetails"] = args?.validateBackupDetails;
            resourceInputs["validateTrigger"] = args?.validateTrigger;
            resourceInputs["backupSizeInGbs"] = undefined /*out*/;
            resourceInputs["backupValidationDetails"] = undefined /*out*/;
            resourceInputs["creationType"] = undefined /*out*/;
            resourceInputs["dataStorageSizeInGb"] = undefined /*out*/;
            resourceInputs["dbSystemSnapshots"] = undefined /*out*/;
            resourceInputs["immediateSourceBackupId"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["mysqlVersion"] = undefined /*out*/;
            resourceInputs["originalSourceBackupId"] = undefined /*out*/;
            resourceInputs["shapeName"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCopyCreated"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MysqlBackup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MysqlBackup resources.
 */
export interface MysqlBackupState {
    /**
     * The size of the backup in base-2 (IEC) gibibytes. (GiB).
     */
    backupSizeInGbs?: pulumi.Input<number>;
    /**
     * The type of backup.
     */
    backupType?: pulumi.Input<string>;
    /**
     * Backup validation details.
     */
    backupValidationDetails?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlBackupBackupValidationDetail>[]>;
    /**
     * (Updatable) The OCID of the compartment the backup exists in.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Indicates how the backup was created: manually, automatic, or by an Operator.
     */
    creationType?: pulumi.Input<string>;
    /**
     * DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
     */
    dataStorageSizeInGb?: pulumi.Input<number>;
    /**
     * The OCID of the DB System the Backup is associated with.
     */
    dbSystemId?: pulumi.Input<string>;
    dbSystemSnapshotSummaries?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlBackupDbSystemSnapshotSummary>[]>;
    /**
     * Snapshot of the DbSystem details at the time of the backup
     */
    dbSystemSnapshots?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlBackupDbSystemSnapshot>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-supplied description for the backup.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-supplied display name for the backup.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Encrypt data details.
     */
    encryptData?: pulumi.Input<inputs.Mysql.MysqlBackupEncryptData>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The OCID of the immediate source DB system backup from which this DB system backup was copied.
     */
    immediateSourceBackupId?: pulumi.Input<string>;
    /**
     * Additional information about the current lifecycleState.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The MySQL server version of the DB System used for backup.
     */
    mysqlVersion?: pulumi.Input<string>;
    /**
     * The OCID of the original source DB system backup from which this DB system backup was copied.
     */
    originalSourceBackupId?: pulumi.Input<string>;
    /**
     * (Updatable) Number of days to retain this backup.
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * The shape of the DB System instance used for backup.
     */
    shapeName?: pulumi.Input<string>;
    /**
     * (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
     */
    softDelete?: pulumi.Input<string>;
    /**
     * Details of backup source in the cloud.
     */
    sourceDetails?: pulumi.Input<inputs.Mysql.MysqlBackupSourceDetails>;
    /**
     * The state of the backup.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeCopyCreated?: pulumi.Input<string>;
    /**
     * The time the backup record was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time at which the backup was updated.
     */
    timeUpdated?: pulumi.Input<string>;
    validateBackupDetails?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlBackupValidateBackupDetail>[]>;
    /**
     * (Updatable) An optional integer property when incremented will trigger a validation of the backup. Set the integer to 1 initially and increment it by 1 to re-trigger validation.
     * * `validate-backup-details` - Details required to validate backup. **Note:** Validate action can only be called from update resource operation.
     */
    validateTrigger?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MysqlBackup resource.
 */
export interface MysqlBackupArgs {
    /**
     * The type of backup.
     */
    backupType?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the compartment the backup exists in.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The OCID of the DB System the Backup is associated with.
     */
    dbSystemId?: pulumi.Input<string>;
    dbSystemSnapshotSummaries?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlBackupDbSystemSnapshotSummary>[]>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-supplied description for the backup.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-supplied display name for the backup.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Encrypt data details.
     */
    encryptData?: pulumi.Input<inputs.Mysql.MysqlBackupEncryptData>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Number of days to retain this backup.
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
     */
    softDelete?: pulumi.Input<string>;
    /**
     * Details of backup source in the cloud.
     */
    sourceDetails?: pulumi.Input<inputs.Mysql.MysqlBackupSourceDetails>;
    validateBackupDetails?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlBackupValidateBackupDetail>[]>;
    /**
     * (Updatable) An optional integer property when incremented will trigger a validation of the backup. Set the integer to 1 initially and increment it by 1 to re-trigger validation.
     * * `validate-backup-details` - Details required to validate backup. **Note:** Validate action can only be called from update resource operation.
     */
    validateTrigger?: pulumi.Input<number>;
}
