// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Mysql Db System resource in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Creates and launches a DB System.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMysqlDbSystem = new oci.mysql.MysqlDbSystem("test_mysql_db_system", {
 *     availabilityDomain: mysqlDbSystemAvailabilityDomain,
 *     compartmentId: compartmentId,
 *     shapeName: mysqlShapeName,
 *     subnetId: testSubnet.id,
 *     accessMode: mysqlDbSystemAccessMode,
 *     adminPassword: mysqlDbSystemAdminPassword,
 *     adminUsername: mysqlDbSystemAdminUsername,
 *     backupPolicy: {
 *         definedTags: {
 *             "foo-namespace.bar-key": "value",
 *         },
 *         freeformTags: {
 *             "bar-key": "value",
 *         },
 *         isEnabled: mysqlDbSystemBackupPolicyIsEnabled,
 *         pitrPolicy: {
 *             isEnabled: mysqlDbSystemBackupPolicyPitrPolicyIsEnabled,
 *         },
 *         retentionInDays: mysqlDbSystemBackupPolicyRetentionInDays,
 *         windowStartTime: mysqlDbSystemBackupPolicyWindowStartTime,
 *     },
 *     configurationId: testConfiguration.id,
 *     crashRecovery: mysqlDbSystemCrashRecovery,
 *     customerContacts: [{
 *         email: mysqlDbSystemCustomerContactsEmail,
 *     }],
 *     dataStorage: {
 *         isAutoExpandStorageEnabled: mysqlDbSystemDataStorageIsAutoExpandStorageEnabled,
 *         maxStorageSizeInGbs: mysqlDbSystemDataStorageMaxStorageSizeInGbs,
 *     },
 *     dataStorageSizeInGb: mysqlDbSystemDataStorageSizeInGb,
 *     databaseManagement: mysqlDbSystemDatabaseManagement,
 *     databaseMode: mysqlDbSystemDatabaseMode,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     deletionPolicies: [{
 *         automaticBackupRetention: mysqlDbSystemDeletionPolicyAutomaticBackupRetention,
 *         finalBackup: mysqlDbSystemDeletionPolicyFinalBackup,
 *         isDeleteProtected: mysqlDbSystemDeletionPolicyIsDeleteProtected,
 *     }],
 *     description: mysqlDbSystemDescription,
 *     displayName: mysqlDbSystemDisplayName,
 *     faultDomain: mysqlDbSystemFaultDomain,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     hostnameLabel: mysqlDbSystemHostnameLabel,
 *     ipAddress: mysqlDbSystemIpAddress,
 *     isHighlyAvailable: mysqlDbSystemIsHighlyAvailable,
 *     maintenance: {
 *         windowStartTime: mysqlDbSystemMaintenanceWindowStartTime,
 *     },
 *     port: mysqlDbSystemPort,
 *     portX: mysqlDbSystemPortX,
 *     readEndpoint: {
 *         excludeIps: mysqlDbSystemReadEndpointExcludeIps,
 *         isEnabled: mysqlDbSystemReadEndpointIsEnabled,
 *         readEndpointHostnameLabel: mysqlDbSystemReadEndpointReadEndpointHostnameLabel,
 *         readEndpointIpAddress: mysqlDbSystemReadEndpointReadEndpointIpAddress,
 *     },
 *     secureConnections: {
 *         certificateGenerationType: mysqlDbSystemSecureConnectionsCertificateGenerationType,
 *         certificateId: testCertificate.id,
 *     },
 *     source: {
 *         sourceType: mysqlDbSystemSourceSourceType,
 *         backupId: testBackup.id,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * MysqlDbSystems can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Mysql/mysqlDbSystem:MysqlDbSystem test_mysql_db_system "id"
 * ```
 */
export class MysqlDbSystem extends pulumi.CustomResource {
    /**
     * Get an existing MysqlDbSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MysqlDbSystemState, opts?: pulumi.CustomResourceOptions): MysqlDbSystem {
        return new MysqlDbSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Mysql/mysqlDbSystem:MysqlDbSystem';

    /**
     * Returns true if the given object is an instance of MysqlDbSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MysqlDbSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MysqlDbSystem.__pulumiType;
    }

    /**
     * (Updatable) The access mode indicating if the database access will be restricted only to administrators or not:
     * * UNRESTRICTED (default): the access to the database is not restricted;
     * * RESTRICTED: the access will be allowed only to users with specific privileges; RESTRICTED will correspond to setting the MySQL system variable  [offlineMode](https://dev.mysql.com/doc/en/server-system-variables.html#sysvar_offline_mode) to ON.
     */
    public readonly accessMode!: pulumi.Output<string>;
    /**
     * The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
     */
    public readonly adminPassword!: pulumi.Output<string>;
    /**
     * The username for the administrative user.
     */
    public readonly adminUsername!: pulumi.Output<string>;
    /**
     * The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     *
     * In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
     *
     * For a standalone DB System, this defines the availability domain in which the DB System is placed.
     */
    public readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * (Updatable) Backup policy as optionally used for DB System Creation.
     */
    public readonly backupPolicy!: pulumi.Output<outputs.Mysql.MysqlDbSystemBackupPolicy>;
    /**
     * A list with a summary of all the Channels attached to the DB System.
     */
    public /*out*/ readonly channels!: pulumi.Output<outputs.Mysql.MysqlDbSystemChannel[]>;
    /**
     * The OCID of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the Configuration to be used for this DB System.
     */
    public readonly configurationId!: pulumi.Output<string>;
    /**
     * (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
     */
    public readonly crashRecovery!: pulumi.Output<string>;
    /**
     * The availability domain and fault domain a DB System is placed in.
     */
    public /*out*/ readonly currentPlacements!: pulumi.Output<outputs.Mysql.MysqlDbSystemCurrentPlacement[]>;
    /**
     * (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
     */
    public readonly customerContacts!: pulumi.Output<outputs.Mysql.MysqlDbSystemCustomerContact[]>;
    /**
     * (Updatable) Data Storage configuration properties.
     */
    public readonly dataStorage!: pulumi.Output<outputs.Mysql.MysqlDbSystemDataStorage>;
    /**
     * (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
     */
    public readonly dataStorageSizeInGb!: pulumi.Output<number>;
    /**
     * (Updatable) Whether to enable monitoring via the Database Management service.
     */
    public readonly databaseManagement!: pulumi.Output<string>;
    /**
     * (Updatable) The database mode indicating the types of statements that will be allowed to run in the DB system. This mode will apply only to statements run by user connections. Replicated write statements will continue  to be allowed regardless of the DatabaseMode.
     * * READ_WRITE (default): allow running read and write statements on the DB system;
     * * READ_ONLY: only allow running read statements on the DB system.
     */
    public readonly databaseMode!: pulumi.Output<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
     */
    public readonly deletionPolicies!: pulumi.Output<outputs.Mysql.MysqlDbSystemDeletionPolicy[]>;
    /**
     * (Updatable) User-provided data about the DB System.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The user-friendly name for the DB System. It does not have to be unique.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The network endpoints available for this DB System.
     */
    public /*out*/ readonly endpoints!: pulumi.Output<outputs.Mysql.MysqlDbSystemEndpoint[]>;
    /**
     * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     *
     * In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
     *
     * For a standalone DB System, this defines the fault domain in which the DB System is placed.
     */
    public readonly faultDomain!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * A summary of a HeatWave cluster.
     */
    public /*out*/ readonly heatWaveClusters!: pulumi.Output<outputs.Mysql.MysqlDbSystemHeatWaveCluster[]>;
    /**
     * (Updatable) The hostname for the primary endpoint of the DB System. Used for DNS.
     *
     * The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
     *
     * Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     */
    public readonly hostnameLabel!: pulumi.Output<string>;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
     */
    public readonly ipAddress!: pulumi.Output<string>;
    /**
     * If the DB System has a HeatWave Cluster attached.
     */
    public /*out*/ readonly isHeatWaveClusterAttached!: pulumi.Output<boolean>;
    /**
     * (Updatable) Specifies if the DB System is highly available.
     *
     * When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
     */
    public readonly isHighlyAvailable!: pulumi.Output<boolean>;
    /**
     * Additional information about the current lifecycleState.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
     */
    public readonly maintenance!: pulumi.Output<outputs.Mysql.MysqlDbSystemMaintenance>;
    /**
     * The specific MySQL version identifier.
     */
    public readonly mysqlVersion!: pulumi.Output<string>;
    /**
     * Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
     */
    public /*out*/ readonly pointInTimeRecoveryDetails!: pulumi.Output<outputs.Mysql.MysqlDbSystemPointInTimeRecoveryDetail[]>;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
     */
    public readonly portX!: pulumi.Output<number>;
    /**
     * (Updatable) Details required to create a Read Endpoint.
     */
    public readonly readEndpoint!: pulumi.Output<outputs.Mysql.MysqlDbSystemReadEndpoint>;
    /**
     * (Updatable) Secure connection configuration details.
     */
    public readonly secureConnections!: pulumi.Output<outputs.Mysql.MysqlDbSystemSecureConnections>;
    /**
     * (Updatable) The name of the shape. The shape determines the resources allocated
     * * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     */
    public readonly shapeName!: pulumi.Output<string>;
    /**
     * It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly shutdownType!: pulumi.Output<string | undefined>;
    /**
     * Parameters detailing how to provision the initial data of the system.
     */
    public readonly source!: pulumi.Output<outputs.Mysql.MysqlDbSystemSource>;
    /**
     * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * The OCID of the subnet the DB System is associated with.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * The date and time the DB System was created.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the DB System was last updated.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a MysqlDbSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MysqlDbSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MysqlDbSystemArgs | MysqlDbSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MysqlDbSystemState | undefined;
            resourceInputs["accessMode"] = state ? state.accessMode : undefined;
            resourceInputs["adminPassword"] = state ? state.adminPassword : undefined;
            resourceInputs["adminUsername"] = state ? state.adminUsername : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["backupPolicy"] = state ? state.backupPolicy : undefined;
            resourceInputs["channels"] = state ? state.channels : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["configurationId"] = state ? state.configurationId : undefined;
            resourceInputs["crashRecovery"] = state ? state.crashRecovery : undefined;
            resourceInputs["currentPlacements"] = state ? state.currentPlacements : undefined;
            resourceInputs["customerContacts"] = state ? state.customerContacts : undefined;
            resourceInputs["dataStorage"] = state ? state.dataStorage : undefined;
            resourceInputs["dataStorageSizeInGb"] = state ? state.dataStorageSizeInGb : undefined;
            resourceInputs["databaseManagement"] = state ? state.databaseManagement : undefined;
            resourceInputs["databaseMode"] = state ? state.databaseMode : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["deletionPolicies"] = state ? state.deletionPolicies : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["faultDomain"] = state ? state.faultDomain : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["heatWaveClusters"] = state ? state.heatWaveClusters : undefined;
            resourceInputs["hostnameLabel"] = state ? state.hostnameLabel : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["isHeatWaveClusterAttached"] = state ? state.isHeatWaveClusterAttached : undefined;
            resourceInputs["isHighlyAvailable"] = state ? state.isHighlyAvailable : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["maintenance"] = state ? state.maintenance : undefined;
            resourceInputs["mysqlVersion"] = state ? state.mysqlVersion : undefined;
            resourceInputs["pointInTimeRecoveryDetails"] = state ? state.pointInTimeRecoveryDetails : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["portX"] = state ? state.portX : undefined;
            resourceInputs["readEndpoint"] = state ? state.readEndpoint : undefined;
            resourceInputs["secureConnections"] = state ? state.secureConnections : undefined;
            resourceInputs["shapeName"] = state ? state.shapeName : undefined;
            resourceInputs["shutdownType"] = state ? state.shutdownType : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as MysqlDbSystemArgs | undefined;
            if ((!args || args.availabilityDomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availabilityDomain'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.shapeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shapeName'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["accessMode"] = args ? args.accessMode : undefined;
            resourceInputs["adminPassword"] = args?.adminPassword ? pulumi.secret(args.adminPassword) : undefined;
            resourceInputs["adminUsername"] = args ? args.adminUsername : undefined;
            resourceInputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            resourceInputs["backupPolicy"] = args ? args.backupPolicy : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["configurationId"] = args ? args.configurationId : undefined;
            resourceInputs["crashRecovery"] = args ? args.crashRecovery : undefined;
            resourceInputs["customerContacts"] = args ? args.customerContacts : undefined;
            resourceInputs["dataStorage"] = args ? args.dataStorage : undefined;
            resourceInputs["dataStorageSizeInGb"] = args ? args.dataStorageSizeInGb : undefined;
            resourceInputs["databaseManagement"] = args ? args.databaseManagement : undefined;
            resourceInputs["databaseMode"] = args ? args.databaseMode : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["deletionPolicies"] = args ? args.deletionPolicies : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["faultDomain"] = args ? args.faultDomain : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["hostnameLabel"] = args ? args.hostnameLabel : undefined;
            resourceInputs["ipAddress"] = args ? args.ipAddress : undefined;
            resourceInputs["isHighlyAvailable"] = args ? args.isHighlyAvailable : undefined;
            resourceInputs["maintenance"] = args ? args.maintenance : undefined;
            resourceInputs["mysqlVersion"] = args ? args.mysqlVersion : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["portX"] = args ? args.portX : undefined;
            resourceInputs["readEndpoint"] = args ? args.readEndpoint : undefined;
            resourceInputs["secureConnections"] = args ? args.secureConnections : undefined;
            resourceInputs["shapeName"] = args ? args.shapeName : undefined;
            resourceInputs["shutdownType"] = args ? args.shutdownType : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["channels"] = undefined /*out*/;
            resourceInputs["currentPlacements"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["heatWaveClusters"] = undefined /*out*/;
            resourceInputs["isHeatWaveClusterAttached"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["pointInTimeRecoveryDetails"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["adminPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MysqlDbSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MysqlDbSystem resources.
 */
export interface MysqlDbSystemState {
    /**
     * (Updatable) The access mode indicating if the database access will be restricted only to administrators or not:
     * * UNRESTRICTED (default): the access to the database is not restricted;
     * * RESTRICTED: the access will be allowed only to users with specific privileges; RESTRICTED will correspond to setting the MySQL system variable  [offlineMode](https://dev.mysql.com/doc/en/server-system-variables.html#sysvar_offline_mode) to ON.
     */
    accessMode?: pulumi.Input<string>;
    /**
     * The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * The username for the administrative user.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     *
     * In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
     *
     * For a standalone DB System, this defines the availability domain in which the DB System is placed.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * (Updatable) Backup policy as optionally used for DB System Creation.
     */
    backupPolicy?: pulumi.Input<inputs.Mysql.MysqlDbSystemBackupPolicy>;
    /**
     * A list with a summary of all the Channels attached to the DB System.
     */
    channels?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemChannel>[]>;
    /**
     * The OCID of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the Configuration to be used for this DB System.
     */
    configurationId?: pulumi.Input<string>;
    /**
     * (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
     */
    crashRecovery?: pulumi.Input<string>;
    /**
     * The availability domain and fault domain a DB System is placed in.
     */
    currentPlacements?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemCurrentPlacement>[]>;
    /**
     * (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
     */
    customerContacts?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemCustomerContact>[]>;
    /**
     * (Updatable) Data Storage configuration properties.
     */
    dataStorage?: pulumi.Input<inputs.Mysql.MysqlDbSystemDataStorage>;
    /**
     * (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
     */
    dataStorageSizeInGb?: pulumi.Input<number>;
    /**
     * (Updatable) Whether to enable monitoring via the Database Management service.
     */
    databaseManagement?: pulumi.Input<string>;
    /**
     * (Updatable) The database mode indicating the types of statements that will be allowed to run in the DB system. This mode will apply only to statements run by user connections. Replicated write statements will continue  to be allowed regardless of the DatabaseMode.
     * * READ_WRITE (default): allow running read and write statements on the DB system;
     * * READ_ONLY: only allow running read statements on the DB system.
     */
    databaseMode?: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
     */
    deletionPolicies?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemDeletionPolicy>[]>;
    /**
     * (Updatable) User-provided data about the DB System.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The user-friendly name for the DB System. It does not have to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The network endpoints available for this DB System.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemEndpoint>[]>;
    /**
     * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     *
     * In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
     *
     * For a standalone DB System, this defines the fault domain in which the DB System is placed.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A summary of a HeatWave cluster.
     */
    heatWaveClusters?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemHeatWaveCluster>[]>;
    /**
     * (Updatable) The hostname for the primary endpoint of the DB System. Used for DNS.
     *
     * The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
     *
     * Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     */
    hostnameLabel?: pulumi.Input<string>;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * If the DB System has a HeatWave Cluster attached.
     */
    isHeatWaveClusterAttached?: pulumi.Input<boolean>;
    /**
     * (Updatable) Specifies if the DB System is highly available.
     *
     * When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
     */
    isHighlyAvailable?: pulumi.Input<boolean>;
    /**
     * Additional information about the current lifecycleState.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
     */
    maintenance?: pulumi.Input<inputs.Mysql.MysqlDbSystemMaintenance>;
    /**
     * The specific MySQL version identifier.
     */
    mysqlVersion?: pulumi.Input<string>;
    /**
     * Point-in-time Recovery details like earliest and latest recovery time point for the DB System.
     */
    pointInTimeRecoveryDetails?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemPointInTimeRecoveryDetail>[]>;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port?: pulumi.Input<number>;
    /**
     * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
     */
    portX?: pulumi.Input<number>;
    /**
     * (Updatable) Details required to create a Read Endpoint.
     */
    readEndpoint?: pulumi.Input<inputs.Mysql.MysqlDbSystemReadEndpoint>;
    /**
     * (Updatable) Secure connection configuration details.
     */
    secureConnections?: pulumi.Input<inputs.Mysql.MysqlDbSystemSecureConnections>;
    /**
     * (Updatable) The name of the shape. The shape determines the resources allocated
     * * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     */
    shapeName?: pulumi.Input<string>;
    /**
     * It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    shutdownType?: pulumi.Input<string>;
    /**
     * Parameters detailing how to provision the initial data of the system.
     */
    source?: pulumi.Input<inputs.Mysql.MysqlDbSystemSource>;
    /**
     * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state?: pulumi.Input<string>;
    /**
     * The OCID of the subnet the DB System is associated with.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The date and time the DB System was created.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the DB System was last updated.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MysqlDbSystem resource.
 */
export interface MysqlDbSystemArgs {
    /**
     * (Updatable) The access mode indicating if the database access will be restricted only to administrators or not:
     * * UNRESTRICTED (default): the access to the database is not restricted;
     * * RESTRICTED: the access will be allowed only to users with specific privileges; RESTRICTED will correspond to setting the MySQL system variable  [offlineMode](https://dev.mysql.com/doc/en/server-system-variables.html#sysvar_offline_mode) to ON.
     */
    accessMode?: pulumi.Input<string>;
    /**
     * The password for the administrative user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * The username for the administrative user.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * The availability domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     *
     * In a failover scenario, the Read/Write endpoint is redirected to one of the other availability domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
     *
     * For a standalone DB System, this defines the availability domain in which the DB System is placed.
     */
    availabilityDomain: pulumi.Input<string>;
    /**
     * (Updatable) Backup policy as optionally used for DB System Creation.
     */
    backupPolicy?: pulumi.Input<inputs.Mysql.MysqlDbSystemBackupPolicy>;
    /**
     * The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the Configuration to be used for this DB System.
     */
    configurationId?: pulumi.Input<string>;
    /**
     * (Updatable) Whether to run the DB System with InnoDB Redo Logs and the Double Write Buffer enabled or disabled, and whether to enable or disable syncing of the Binary Logs.
     */
    crashRecovery?: pulumi.Input<string>;
    /**
     * (Updatable) The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure DB System resource.  Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators.  Up to 10 email addresses can be added to the customer contacts for a DB System.
     */
    customerContacts?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemCustomerContact>[]>;
    /**
     * (Updatable) Data Storage configuration properties.
     */
    dataStorage?: pulumi.Input<inputs.Mysql.MysqlDbSystemDataStorage>;
    /**
     * (Updatable) Initial size of the data volume in GBs that will be created and attached. Keep in mind that this only specifies the size of the database data volume, the log volume for the database will be scaled appropriately with its shape. It is required if you are creating a new database. It cannot be set if you are creating a database from a backup.
     */
    dataStorageSizeInGb?: pulumi.Input<number>;
    /**
     * (Updatable) Whether to enable monitoring via the Database Management service.
     */
    databaseManagement?: pulumi.Input<string>;
    /**
     * (Updatable) The database mode indicating the types of statements that will be allowed to run in the DB system. This mode will apply only to statements run by user connections. Replicated write statements will continue  to be allowed regardless of the DatabaseMode.
     * * READ_WRITE (default): allow running read and write statements on the DB system;
     * * READ_ONLY: only allow running read statements on the DB system.
     */
    databaseMode?: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Policy for how the DB System and related resources should be handled at the time of its deletion.
     */
    deletionPolicies?: pulumi.Input<pulumi.Input<inputs.Mysql.MysqlDbSystemDeletionPolicy>[]>;
    /**
     * (Updatable) User-provided data about the DB System.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The user-friendly name for the DB System. It does not have to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The fault domain on which to deploy the Read/Write endpoint. This defines the preferred primary instance.
     *
     * In a failover scenario, the Read/Write endpoint is redirected to one of the other fault domains and the MySQL instance in that domain is promoted to the primary instance. This redirection does not affect the IP address of the DB System in any way.
     *
     * For a standalone DB System, this defines the fault domain in which the DB System is placed.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The hostname for the primary endpoint of the DB System. Used for DNS.
     *
     * The value is the hostname portion of the primary private IP's fully qualified domain name (FQDN) (for example, "dbsystem-1" in FQDN "dbsystem-1.subnet123.vcn1.oraclevcn.com").
     *
     * Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     */
    hostnameLabel?: pulumi.Input<string>;
    /**
     * The IP address the DB System is configured to listen on. A private IP address of your choice to assign to the primary endpoint of the DB System. Must be an available IP address within the subnet's CIDR. If you don't specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a "dotted-quad" style IPv4 address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies if the DB System is highly available.
     *
     * When creating a DB System with High Availability, three instances are created and placed according to your region- and subnet-type. The secondaries are placed automatically in the other two availability or fault domains.  You can choose the preferred location of your primary instance, only.
     */
    isHighlyAvailable?: pulumi.Input<boolean>;
    /**
     * (Updatable) The Maintenance Policy for the DB System or Read Replica that this model is included in. `maintenance` and `backupPolicy` cannot be updated in the same request.
     */
    maintenance?: pulumi.Input<inputs.Mysql.MysqlDbSystemMaintenance>;
    /**
     * The specific MySQL version identifier.
     */
    mysqlVersion?: pulumi.Input<string>;
    /**
     * The port for primary endpoint of the DB System to listen on.
     */
    port?: pulumi.Input<number>;
    /**
     * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
     */
    portX?: pulumi.Input<number>;
    /**
     * (Updatable) Details required to create a Read Endpoint.
     */
    readEndpoint?: pulumi.Input<inputs.Mysql.MysqlDbSystemReadEndpoint>;
    /**
     * (Updatable) Secure connection configuration details.
     */
    secureConnections?: pulumi.Input<inputs.Mysql.MysqlDbSystemSecureConnections>;
    /**
     * (Updatable) The name of the shape. The shape determines the resources allocated
     * * CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     */
    shapeName: pulumi.Input<string>;
    /**
     * It is applicable only for stopping a DB System. Could be set to `FAST`, `SLOW` or `IMMEDIATE`. Default value is `FAST`.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    shutdownType?: pulumi.Input<string>;
    /**
     * Parameters detailing how to provision the initial data of the system.
     */
    source?: pulumi.Input<inputs.Mysql.MysqlDbSystemSource>;
    /**
     * (Updatable) The target state for the DB System. Could be set to `ACTIVE` or `INACTIVE`.
     */
    state?: pulumi.Input<string>;
    /**
     * The OCID of the subnet the DB System is associated with.
     */
    subnetId: pulumi.Input<string>;
}
