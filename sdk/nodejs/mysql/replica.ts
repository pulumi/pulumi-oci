// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Replica resource in Oracle Cloud Infrastructure MySQL Database service.
 *
 * Creates a DB System read replica.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testReplica = new oci.mysql.Replica("test_replica", {
 *     dbSystemId: testMysqlDbSystem.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: replicaDescription,
 *     displayName: replicaDisplayName,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     isDeleteProtected: replicaIsDeleteProtected,
 *     replicaOverrides: {
 *         configurationId: testMysqlConfiguration.id,
 *         mysqlVersion: replicaReplicaOverridesMysqlVersion,
 *         shapeName: testShape.name,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Replicas can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Mysql/replica:Replica test_replica "id"
 * ```
 */
export class Replica extends pulumi.CustomResource {
    /**
     * Get an existing Replica resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReplicaState, opts?: pulumi.CustomResourceOptions): Replica {
        return new Replica(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Mysql/replica:Replica';

    /**
     * Returns true if the given object is an instance of Replica.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Replica {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Replica.__pulumiType;
    }

    /**
     * The name of the Availability Domain the read replica is located in.
     */
    public /*out*/ readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * The OCID of the compartment that contains the read replica.
     */
    public /*out*/ readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the Configuration to be used by the read replica.
     */
    public /*out*/ readonly configurationId!: pulumi.Output<string>;
    /**
     * The OCID of the DB System the read replica is associated with.
     */
    public readonly dbSystemId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) User provided description of the read replica.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) The user-friendly name for the read replica. It does not have to be unique.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The name of the Fault Domain the read replica is located in.
     */
    public /*out*/ readonly faultDomain!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The IP address the read replica is configured to listen on.
     */
    public /*out*/ readonly ipAddress!: pulumi.Output<string>;
    /**
     * (Updatable) Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow. Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If the DB System is delete protected, read replicas can still be deleted individually if they are not delete  protected themselves.
     */
    public readonly isDeleteProtected!: pulumi.Output<boolean>;
    /**
     * A message describing the state of the read replica.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) The MySQL version to be used by the read replica.
     */
    public /*out*/ readonly mysqlVersion!: pulumi.Output<string>;
    /**
     * The port the read replica is configured to listen on.
     */
    public /*out*/ readonly port!: pulumi.Output<number>;
    /**
     * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
     */
    public /*out*/ readonly portX!: pulumi.Output<number>;
    /**
     * (Updatable) By default a read replica inherits the MySQL version, shape, and configuration of the source DB system.  If you want to override any of these, provide values in the properties, mysqlVersion, shapeName,  and configurationId. If you set a property value to "", then the value is inherited from its  source DB system.
     */
    public readonly replicaOverrides!: pulumi.Output<outputs.Mysql.ReplicaReplicaOverrides>;
    /**
     * Secure connection configuration details.
     */
    public /*out*/ readonly secureConnections!: pulumi.Output<outputs.Mysql.ReplicaSecureConnection[]>;
    /**
     * (Updatable) The shape to be used by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public /*out*/ readonly shapeName!: pulumi.Output<string>;
    /**
     * The state of the read replica.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The date and time the read replica was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the read replica was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a Replica resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReplicaArgs | ReplicaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReplicaState | undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["configurationId"] = state ? state.configurationId : undefined;
            resourceInputs["dbSystemId"] = state ? state.dbSystemId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["faultDomain"] = state ? state.faultDomain : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["ipAddress"] = state ? state.ipAddress : undefined;
            resourceInputs["isDeleteProtected"] = state ? state.isDeleteProtected : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["mysqlVersion"] = state ? state.mysqlVersion : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["portX"] = state ? state.portX : undefined;
            resourceInputs["replicaOverrides"] = state ? state.replicaOverrides : undefined;
            resourceInputs["secureConnections"] = state ? state.secureConnections : undefined;
            resourceInputs["shapeName"] = state ? state.shapeName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as ReplicaArgs | undefined;
            if ((!args || args.dbSystemId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbSystemId'");
            }
            resourceInputs["dbSystemId"] = args ? args.dbSystemId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isDeleteProtected"] = args ? args.isDeleteProtected : undefined;
            resourceInputs["replicaOverrides"] = args ? args.replicaOverrides : undefined;
            resourceInputs["availabilityDomain"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["configurationId"] = undefined /*out*/;
            resourceInputs["faultDomain"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["mysqlVersion"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["portX"] = undefined /*out*/;
            resourceInputs["secureConnections"] = undefined /*out*/;
            resourceInputs["shapeName"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Replica.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Replica resources.
 */
export interface ReplicaState {
    /**
     * The name of the Availability Domain the read replica is located in.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The OCID of the compartment that contains the read replica.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the Configuration to be used by the read replica.
     */
    configurationId?: pulumi.Input<string>;
    /**
     * The OCID of the DB System the read replica is associated with.
     */
    dbSystemId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) User provided description of the read replica.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The user-friendly name for the read replica. It does not have to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the Fault Domain the read replica is located in.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The IP address the read replica is configured to listen on.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * (Updatable) Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow. Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If the DB System is delete protected, read replicas can still be deleted individually if they are not delete  protected themselves.
     */
    isDeleteProtected?: pulumi.Input<boolean>;
    /**
     * A message describing the state of the read replica.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The MySQL version to be used by the read replica.
     */
    mysqlVersion?: pulumi.Input<string>;
    /**
     * The port the read replica is configured to listen on.
     */
    port?: pulumi.Input<number>;
    /**
     * The TCP network port on which X Plugin listens for connections. This is the X Plugin equivalent of port.
     */
    portX?: pulumi.Input<number>;
    /**
     * (Updatable) By default a read replica inherits the MySQL version, shape, and configuration of the source DB system.  If you want to override any of these, provide values in the properties, mysqlVersion, shapeName,  and configurationId. If you set a property value to "", then the value is inherited from its  source DB system.
     */
    replicaOverrides?: pulumi.Input<inputs.Mysql.ReplicaReplicaOverrides>;
    /**
     * Secure connection configuration details.
     */
    secureConnections?: pulumi.Input<pulumi.Input<inputs.Mysql.ReplicaSecureConnection>[]>;
    /**
     * (Updatable) The shape to be used by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    shapeName?: pulumi.Input<string>;
    /**
     * The state of the read replica.
     */
    state?: pulumi.Input<string>;
    /**
     * The date and time the read replica was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the read replica was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Replica resource.
 */
export interface ReplicaArgs {
    /**
     * The OCID of the DB System the read replica is associated with.
     */
    dbSystemId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) User provided description of the read replica.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) The user-friendly name for the read replica. It does not have to be unique.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow. Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If the DB System is delete protected, read replicas can still be deleted individually if they are not delete  protected themselves.
     */
    isDeleteProtected?: pulumi.Input<boolean>;
    /**
     * (Updatable) By default a read replica inherits the MySQL version, shape, and configuration of the source DB system.  If you want to override any of these, provide values in the properties, mysqlVersion, shapeName,  and configurationId. If you set a property value to "", then the value is inherited from its  source DB system.
     */
    replicaOverrides?: pulumi.Input<inputs.Mysql.ReplicaReplicaOverrides>;
}
