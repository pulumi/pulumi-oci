// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Network Firewall Policy resource in Oracle Cloud Infrastructure Network Firewall service.
 *
 * Gets a NetworkFirewallPolicy given the network firewall policy identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNetworkFirewallPolicy = oci.NetworkFirewall.getNetworkFirewallPolicy({
 *     networkFirewallPolicyId: oci_network_firewall_network_firewall_policy.test_network_firewall_policy.id,
 * });
 * ```
 */
export function getNetworkFirewallPolicy(args: GetNetworkFirewallPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkFirewallPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:NetworkFirewall/getNetworkFirewallPolicy:getNetworkFirewallPolicy", {
        "networkFirewallPolicyId": args.networkFirewallPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkFirewallPolicy.
 */
export interface GetNetworkFirewallPolicyArgs {
    /**
     * Unique Network Firewall Policy identifier
     */
    networkFirewallPolicyId: string;
}

/**
 * A collection of values returned by getNetworkFirewallPolicy.
 */
export interface GetNetworkFirewallPolicyResult {
    /**
     * Map defining application lists of the policy. The value of an entry is a list of "applications", each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
     */
    readonly applicationLists: outputs.NetworkFirewall.GetNetworkFirewallPolicyApplicationList[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
     */
    readonly compartmentId: string;
    /**
     * Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
     */
    readonly decryptionProfiles: outputs.NetworkFirewall.GetNetworkFirewallPolicyDecryptionProfile[];
    /**
     * List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     */
    readonly decryptionRules: outputs.NetworkFirewall.GetNetworkFirewallPolicyDecryptionRule[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * A user-friendly optional name for the firewall policy. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource - Network Firewall Policy.
     */
    readonly id: string;
    /**
     * Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
     */
    readonly ipAddressLists: outputs.NetworkFirewall.GetNetworkFirewallPolicyIpAddressList[];
    /**
     * To determine if any Network Firewall is associated with this Network Firewall Policy.
     */
    readonly isFirewallAttached: boolean;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * Map defining secrets of the policy. The value of an entry is a "mapped secret" consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
     */
    readonly mappedSecrets: outputs.NetworkFirewall.GetNetworkFirewallPolicyMappedSecret[];
    readonly networkFirewallPolicyId: string;
    /**
     * List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     */
    readonly securityRules: outputs.NetworkFirewall.GetNetworkFirewallPolicySecurityRule[];
    /**
     * The current state of the Network Firewall Policy.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     */
    readonly timeCreated: string;
    /**
     * The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     */
    readonly timeUpdated: string;
    /**
     * Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
     */
    readonly urlLists: outputs.NetworkFirewall.GetNetworkFirewallPolicyUrlList[];
}
/**
 * This data source provides details about a specific Network Firewall Policy resource in Oracle Cloud Infrastructure Network Firewall service.
 *
 * Gets a NetworkFirewallPolicy given the network firewall policy identifier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNetworkFirewallPolicy = oci.NetworkFirewall.getNetworkFirewallPolicy({
 *     networkFirewallPolicyId: oci_network_firewall_network_firewall_policy.test_network_firewall_policy.id,
 * });
 * ```
 */
export function getNetworkFirewallPolicyOutput(args: GetNetworkFirewallPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNetworkFirewallPolicyResult> {
    return pulumi.output(args).apply((a: any) => getNetworkFirewallPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getNetworkFirewallPolicy.
 */
export interface GetNetworkFirewallPolicyOutputArgs {
    /**
     * Unique Network Firewall Policy identifier
     */
    networkFirewallPolicyId: pulumi.Input<string>;
}
