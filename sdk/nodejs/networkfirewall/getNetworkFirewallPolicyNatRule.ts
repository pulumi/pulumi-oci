// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Network Firewall Policy Nat Rule resource in Oracle Cloud Infrastructure Network Firewall service.
 *
 * Get NAT Rule by the given name in the context of network firewall policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNetworkFirewallPolicyNatRule = oci.NetworkFirewall.getNetworkFirewallPolicyNatRule({
 *     natRuleName: testRule.name,
 *     networkFirewallPolicyId: testNetworkFirewallPolicy.id,
 * });
 * ```
 */
export function getNetworkFirewallPolicyNatRule(args: GetNetworkFirewallPolicyNatRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkFirewallPolicyNatRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:NetworkFirewall/getNetworkFirewallPolicyNatRule:getNetworkFirewallPolicyNatRule", {
        "natRuleName": args.natRuleName,
        "networkFirewallPolicyId": args.networkFirewallPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkFirewallPolicyNatRule.
 */
export interface GetNetworkFirewallPolicyNatRuleArgs {
    /**
     * Unique identifier for NAT Rules in the network firewall policy.
     */
    natRuleName: string;
    /**
     * Unique Network Firewall Policy identifier
     */
    networkFirewallPolicyId: string;
}

/**
 * A collection of values returned by getNetworkFirewallPolicyNatRule.
 */
export interface GetNetworkFirewallPolicyNatRuleResult {
    /**
     * action:
     * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
     */
    readonly action: string;
    /**
     * Match criteria used in NAT Rule used on the firewall policy.
     */
    readonly conditions: outputs.NetworkFirewall.GetNetworkFirewallPolicyNatRuleCondition[];
    /**
     * Description of a NAT rule. This field can be used to add additional info.
     */
    readonly description: string;
    readonly id: string;
    /**
     * Name for the NAT rule, must be unique within the policy.
     */
    readonly name: string;
    readonly natRuleName: string;
    readonly networkFirewallPolicyId: string;
    /**
     * OCID of the Network Firewall Policy this decryption profile belongs to.
     */
    readonly parentResourceId: string;
    /**
     * An object which defines the position of the rule.
     */
    readonly positions: outputs.NetworkFirewall.GetNetworkFirewallPolicyNatRulePosition[];
    /**
     * The priority order in which this rule should be evaluated
     */
    readonly priorityOrder: string;
    /**
     * NAT type:
     * * NATV4 - NATV4 type NAT.
     */
    readonly type: string;
}
/**
 * This data source provides details about a specific Network Firewall Policy Nat Rule resource in Oracle Cloud Infrastructure Network Firewall service.
 *
 * Get NAT Rule by the given name in the context of network firewall policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNetworkFirewallPolicyNatRule = oci.NetworkFirewall.getNetworkFirewallPolicyNatRule({
 *     natRuleName: testRule.name,
 *     networkFirewallPolicyId: testNetworkFirewallPolicy.id,
 * });
 * ```
 */
export function getNetworkFirewallPolicyNatRuleOutput(args: GetNetworkFirewallPolicyNatRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkFirewallPolicyNatRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:NetworkFirewall/getNetworkFirewallPolicyNatRule:getNetworkFirewallPolicyNatRule", {
        "natRuleName": args.natRuleName,
        "networkFirewallPolicyId": args.networkFirewallPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNetworkFirewallPolicyNatRule.
 */
export interface GetNetworkFirewallPolicyNatRuleOutputArgs {
    /**
     * Unique identifier for NAT Rules in the network firewall policy.
     */
    natRuleName: pulumi.Input<string>;
    /**
     * Unique Network Firewall Policy identifier
     */
    networkFirewallPolicyId: pulumi.Input<string>;
}
