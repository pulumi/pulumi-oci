// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Network Firewall Policy Decryption Profile resource in Oracle Cloud Infrastructure Network Firewall service.
 *
 * Creates a new Decryption Profile for the Network Firewall Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNetworkFirewallPolicyDecryptionProfile = new oci.networkfirewall.NetworkFirewallPolicyDecryptionProfile("test_network_firewall_policy_decryption_profile", {
 *     name: networkFirewallPolicyDecryptionProfileName,
 *     networkFirewallPolicyId: testNetworkFirewallPolicy.id,
 *     type: networkFirewallPolicyDecryptionProfileType,
 *     areCertificateExtensionsRestricted: networkFirewallPolicyDecryptionProfileAreCertificateExtensionsRestricted,
 *     isAutoIncludeAltName: networkFirewallPolicyDecryptionProfileIsAutoIncludeAltName,
 *     isExpiredCertificateBlocked: networkFirewallPolicyDecryptionProfileIsExpiredCertificateBlocked,
 *     isOutOfCapacityBlocked: networkFirewallPolicyDecryptionProfileIsOutOfCapacityBlocked,
 *     isRevocationStatusTimeoutBlocked: networkFirewallPolicyDecryptionProfileIsRevocationStatusTimeoutBlocked,
 *     isUnknownRevocationStatusBlocked: networkFirewallPolicyDecryptionProfileIsUnknownRevocationStatusBlocked,
 *     isUnsupportedCipherBlocked: networkFirewallPolicyDecryptionProfileIsUnsupportedCipherBlocked,
 *     isUnsupportedVersionBlocked: networkFirewallPolicyDecryptionProfileIsUnsupportedVersionBlocked,
 *     isUntrustedIssuerBlocked: networkFirewallPolicyDecryptionProfileIsUntrustedIssuerBlocked,
 * });
 * ```
 *
 * ## Import
 *
 * NetworkFirewallPolicyDecryptionProfiles can be imported using the `name`, e.g.
 *
 * ```sh
 * $ pulumi import oci:NetworkFirewall/networkFirewallPolicyDecryptionProfile:NetworkFirewallPolicyDecryptionProfile test_network_firewall_policy_decryption_profile "networkFirewallPolicies/{networkFirewallPolicyId}/decryptionProfiles/{decryptionProfileName}"
 * ```
 */
export class NetworkFirewallPolicyDecryptionProfile extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFirewallPolicyDecryptionProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkFirewallPolicyDecryptionProfileState, opts?: pulumi.CustomResourceOptions): NetworkFirewallPolicyDecryptionProfile {
        return new NetworkFirewallPolicyDecryptionProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:NetworkFirewall/networkFirewallPolicyDecryptionProfile:NetworkFirewallPolicyDecryptionProfile';

    /**
     * Returns true if the given object is an instance of NetworkFirewallPolicyDecryptionProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkFirewallPolicyDecryptionProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkFirewallPolicyDecryptionProfile.__pulumiType;
    }

    /**
     * (Updatable) Whether to block sessions if the server's certificate uses extensions other than key usage and/or extended key usage.
     */
    declare public readonly areCertificateExtensionsRestricted: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
     */
    declare public readonly isAutoIncludeAltName: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether to block sessions if server's certificate is expired.
     */
    declare public readonly isExpiredCertificateBlocked: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
     */
    declare public readonly isOutOfCapacityBlocked: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether to block sessions if the revocation status check for server's certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
     */
    declare public readonly isRevocationStatusTimeoutBlocked: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether to block sessions if the revocation status check for server's certificate results in "unknown".
     */
    declare public readonly isUnknownRevocationStatusBlocked: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether to block sessions if SSL cipher suite is not supported.
     */
    declare public readonly isUnsupportedCipherBlocked: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether to block sessions if SSL version is not supported.
     */
    declare public readonly isUnsupportedVersionBlocked: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether to block sessions if server's certificate is issued by an untrusted certificate authority (CA).
     */
    declare public readonly isUntrustedIssuerBlocked: pulumi.Output<boolean>;
    /**
     * Name of the decryption profile.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Unique Network Firewall Policy identifier
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly networkFirewallPolicyId: pulumi.Output<string>;
    /**
     * OCID of the Network Firewall Policy this decryption profile belongs to.
     */
    declare public /*out*/ readonly parentResourceId: pulumi.Output<string>;
    /**
     * Describes the type of decryption profile. The accepted values are - * SSL_FORWARD_PROXY * SSL_INBOUND_INSPECTION
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a NetworkFirewallPolicyDecryptionProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkFirewallPolicyDecryptionProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkFirewallPolicyDecryptionProfileArgs | NetworkFirewallPolicyDecryptionProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkFirewallPolicyDecryptionProfileState | undefined;
            resourceInputs["areCertificateExtensionsRestricted"] = state?.areCertificateExtensionsRestricted;
            resourceInputs["isAutoIncludeAltName"] = state?.isAutoIncludeAltName;
            resourceInputs["isExpiredCertificateBlocked"] = state?.isExpiredCertificateBlocked;
            resourceInputs["isOutOfCapacityBlocked"] = state?.isOutOfCapacityBlocked;
            resourceInputs["isRevocationStatusTimeoutBlocked"] = state?.isRevocationStatusTimeoutBlocked;
            resourceInputs["isUnknownRevocationStatusBlocked"] = state?.isUnknownRevocationStatusBlocked;
            resourceInputs["isUnsupportedCipherBlocked"] = state?.isUnsupportedCipherBlocked;
            resourceInputs["isUnsupportedVersionBlocked"] = state?.isUnsupportedVersionBlocked;
            resourceInputs["isUntrustedIssuerBlocked"] = state?.isUntrustedIssuerBlocked;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkFirewallPolicyId"] = state?.networkFirewallPolicyId;
            resourceInputs["parentResourceId"] = state?.parentResourceId;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as NetworkFirewallPolicyDecryptionProfileArgs | undefined;
            if (args?.networkFirewallPolicyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkFirewallPolicyId'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["areCertificateExtensionsRestricted"] = args?.areCertificateExtensionsRestricted;
            resourceInputs["isAutoIncludeAltName"] = args?.isAutoIncludeAltName;
            resourceInputs["isExpiredCertificateBlocked"] = args?.isExpiredCertificateBlocked;
            resourceInputs["isOutOfCapacityBlocked"] = args?.isOutOfCapacityBlocked;
            resourceInputs["isRevocationStatusTimeoutBlocked"] = args?.isRevocationStatusTimeoutBlocked;
            resourceInputs["isUnknownRevocationStatusBlocked"] = args?.isUnknownRevocationStatusBlocked;
            resourceInputs["isUnsupportedCipherBlocked"] = args?.isUnsupportedCipherBlocked;
            resourceInputs["isUnsupportedVersionBlocked"] = args?.isUnsupportedVersionBlocked;
            resourceInputs["isUntrustedIssuerBlocked"] = args?.isUntrustedIssuerBlocked;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkFirewallPolicyId"] = args?.networkFirewallPolicyId;
            resourceInputs["type"] = args?.type;
            resourceInputs["parentResourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkFirewallPolicyDecryptionProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkFirewallPolicyDecryptionProfile resources.
 */
export interface NetworkFirewallPolicyDecryptionProfileState {
    /**
     * (Updatable) Whether to block sessions if the server's certificate uses extensions other than key usage and/or extended key usage.
     */
    areCertificateExtensionsRestricted?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
     */
    isAutoIncludeAltName?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if server's certificate is expired.
     */
    isExpiredCertificateBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
     */
    isOutOfCapacityBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if the revocation status check for server's certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
     */
    isRevocationStatusTimeoutBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if the revocation status check for server's certificate results in "unknown".
     */
    isUnknownRevocationStatusBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if SSL cipher suite is not supported.
     */
    isUnsupportedCipherBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if SSL version is not supported.
     */
    isUnsupportedVersionBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if server's certificate is issued by an untrusted certificate authority (CA).
     */
    isUntrustedIssuerBlocked?: pulumi.Input<boolean>;
    /**
     * Name of the decryption profile.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique Network Firewall Policy identifier
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    networkFirewallPolicyId?: pulumi.Input<string>;
    /**
     * OCID of the Network Firewall Policy this decryption profile belongs to.
     */
    parentResourceId?: pulumi.Input<string>;
    /**
     * Describes the type of decryption profile. The accepted values are - * SSL_FORWARD_PROXY * SSL_INBOUND_INSPECTION
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkFirewallPolicyDecryptionProfile resource.
 */
export interface NetworkFirewallPolicyDecryptionProfileArgs {
    /**
     * (Updatable) Whether to block sessions if the server's certificate uses extensions other than key usage and/or extended key usage.
     */
    areCertificateExtensionsRestricted?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
     */
    isAutoIncludeAltName?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if server's certificate is expired.
     */
    isExpiredCertificateBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
     */
    isOutOfCapacityBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if the revocation status check for server's certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
     */
    isRevocationStatusTimeoutBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if the revocation status check for server's certificate results in "unknown".
     */
    isUnknownRevocationStatusBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if SSL cipher suite is not supported.
     */
    isUnsupportedCipherBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if SSL version is not supported.
     */
    isUnsupportedVersionBlocked?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether to block sessions if server's certificate is issued by an untrusted certificate authority (CA).
     */
    isUntrustedIssuerBlocked?: pulumi.Input<boolean>;
    /**
     * Name of the decryption profile.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique Network Firewall Policy identifier
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    networkFirewallPolicyId: pulumi.Input<string>;
    /**
     * Describes the type of decryption profile. The accepted values are - * SSL_FORWARD_PROXY * SSL_INBOUND_INSPECTION
     */
    type: pulumi.Input<string>;
}
