// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Network Firewall Policy Nat Rule resource in Oracle Cloud Infrastructure Network Firewall service.
 *
 * Creates a new NAT Rule for the Network Firewall Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNetworkFirewallPolicyNatRule = new oci.networkfirewall.NetworkFirewallPolicyNatRule("test_network_firewall_policy_nat_rule", {
 *     action: networkFirewallPolicyNatRuleAction,
 *     condition: {
 *         destinationAddresses: networkFirewallPolicyNatRuleConditionDestinationAddress,
 *         service: networkFirewallPolicyNatRuleConditionService,
 *         sourceAddresses: networkFirewallPolicyNatRuleConditionSourceAddress,
 *     },
 *     name: networkFirewallPolicyNatRuleName,
 *     networkFirewallPolicyId: testNetworkFirewallPolicy.id,
 *     type: networkFirewallPolicyNatRuleType,
 *     description: networkFirewallPolicyNatRuleDescription,
 *     position: {
 *         afterRule: networkFirewallPolicyNatRulePositionAfterRule,
 *         beforeRule: networkFirewallPolicyNatRulePositionBeforeRule,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * NetworkFirewallPolicyNatRules can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule test_network_firewall_policy_nat_rule "networkFirewallPolicies/{networkFirewallPolicyId}/natRules/{natRuleName}"
 * ```
 */
export class NetworkFirewallPolicyNatRule extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFirewallPolicyNatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkFirewallPolicyNatRuleState, opts?: pulumi.CustomResourceOptions): NetworkFirewallPolicyNatRule {
        return new NetworkFirewallPolicyNatRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:NetworkFirewall/networkFirewallPolicyNatRule:NetworkFirewallPolicyNatRule';

    /**
     * Returns true if the given object is an instance of NetworkFirewallPolicyNatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkFirewallPolicyNatRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkFirewallPolicyNatRule.__pulumiType;
    }

    /**
     * (Updatable) action:
     * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
     */
    declare public readonly action: pulumi.Output<string>;
    /**
     * (Updatable) Match criteria used in NAT Rule used on the firewall policy.
     */
    declare public readonly condition: pulumi.Output<outputs.NetworkFirewall.NetworkFirewallPolicyNatRuleCondition>;
    /**
     * (Updatable) Description of a NAT rule. This field can be used to add additional info.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Name for the NAT rule, must be unique within the policy.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Unique Network Firewall Policy identifier
     */
    declare public readonly networkFirewallPolicyId: pulumi.Output<string>;
    /**
     * OCID of the Network Firewall Policy this decryption profile belongs to.
     */
    declare public /*out*/ readonly parentResourceId: pulumi.Output<string>;
    /**
     * (Updatable) An object which defines the position of the rule.
     */
    declare public readonly position: pulumi.Output<outputs.NetworkFirewall.NetworkFirewallPolicyNatRulePosition>;
    /**
     * The priority order in which this rule should be evaluated
     */
    declare public /*out*/ readonly priorityOrder: pulumi.Output<string>;
    /**
     * (Updatable) NAT type:
     * * NATV4 - NATV4 type NAT.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a NetworkFirewallPolicyNatRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkFirewallPolicyNatRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkFirewallPolicyNatRuleArgs | NetworkFirewallPolicyNatRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkFirewallPolicyNatRuleState | undefined;
            resourceInputs["action"] = state?.action;
            resourceInputs["condition"] = state?.condition;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkFirewallPolicyId"] = state?.networkFirewallPolicyId;
            resourceInputs["parentResourceId"] = state?.parentResourceId;
            resourceInputs["position"] = state?.position;
            resourceInputs["priorityOrder"] = state?.priorityOrder;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as NetworkFirewallPolicyNatRuleArgs | undefined;
            if (args?.action === undefined && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if (args?.condition === undefined && !opts.urn) {
                throw new Error("Missing required property 'condition'");
            }
            if (args?.networkFirewallPolicyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkFirewallPolicyId'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["action"] = args?.action;
            resourceInputs["condition"] = args?.condition;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkFirewallPolicyId"] = args?.networkFirewallPolicyId;
            resourceInputs["position"] = args?.position;
            resourceInputs["type"] = args?.type;
            resourceInputs["parentResourceId"] = undefined /*out*/;
            resourceInputs["priorityOrder"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkFirewallPolicyNatRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkFirewallPolicyNatRule resources.
 */
export interface NetworkFirewallPolicyNatRuleState {
    /**
     * (Updatable) action:
     * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
     */
    action?: pulumi.Input<string>;
    /**
     * (Updatable) Match criteria used in NAT Rule used on the firewall policy.
     */
    condition?: pulumi.Input<inputs.NetworkFirewall.NetworkFirewallPolicyNatRuleCondition>;
    /**
     * (Updatable) Description of a NAT rule. This field can be used to add additional info.
     */
    description?: pulumi.Input<string>;
    /**
     * Name for the NAT rule, must be unique within the policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique Network Firewall Policy identifier
     */
    networkFirewallPolicyId?: pulumi.Input<string>;
    /**
     * OCID of the Network Firewall Policy this decryption profile belongs to.
     */
    parentResourceId?: pulumi.Input<string>;
    /**
     * (Updatable) An object which defines the position of the rule.
     */
    position?: pulumi.Input<inputs.NetworkFirewall.NetworkFirewallPolicyNatRulePosition>;
    /**
     * The priority order in which this rule should be evaluated
     */
    priorityOrder?: pulumi.Input<string>;
    /**
     * (Updatable) NAT type:
     * * NATV4 - NATV4 type NAT.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkFirewallPolicyNatRule resource.
 */
export interface NetworkFirewallPolicyNatRuleArgs {
    /**
     * (Updatable) action:
     * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
     */
    action: pulumi.Input<string>;
    /**
     * (Updatable) Match criteria used in NAT Rule used on the firewall policy.
     */
    condition: pulumi.Input<inputs.NetworkFirewall.NetworkFirewallPolicyNatRuleCondition>;
    /**
     * (Updatable) Description of a NAT rule. This field can be used to add additional info.
     */
    description?: pulumi.Input<string>;
    /**
     * Name for the NAT rule, must be unique within the policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique Network Firewall Policy identifier
     */
    networkFirewallPolicyId: pulumi.Input<string>;
    /**
     * (Updatable) An object which defines the position of the rule.
     */
    position?: pulumi.Input<inputs.NetworkFirewall.NetworkFirewallPolicyNatRulePosition>;
    /**
     * (Updatable) NAT type:
     * * NATV4 - NATV4 type NAT.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    type: pulumi.Input<string>;
}
