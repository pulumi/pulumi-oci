// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Network Firewall Policy Security Rule resource in Oracle Cloud Infrastructure Network Firewall service.
 *
 * Creates a new Security Rule for the Network Firewall Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNetworkFirewallPolicySecurityRule = new oci.networkfirewall.NetworkFirewallPolicySecurityRule("testNetworkFirewallPolicySecurityRule", {
 *     action: _var.network_firewall_policy_security_rule_action,
 *     condition: {
 *         applications: _var.network_firewall_policy_security_rule_condition_application,
 *         destinationAddresses: _var.network_firewall_policy_security_rule_condition_destination_address,
 *         services: _var.network_firewall_policy_security_rule_condition_service,
 *         sourceAddresses: _var.network_firewall_policy_security_rule_condition_source_address,
 *         urls: _var.network_firewall_policy_security_rule_condition_url,
 *     },
 *     networkFirewallPolicyId: oci_network_firewall_network_firewall_policy.test_network_firewall_policy.id,
 *     inspection: _var.network_firewall_policy_security_rule_inspection,
 *     positions: [{
 *         afterRule: _var.network_firewall_policy_security_rule_position_after_rule,
 *         beforeRule: _var.network_firewall_policy_security_rule_position_before_rule,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * NetworkFirewallPolicySecurityRules can be imported using the `name`, e.g.
 *
 * ```sh
 * $ pulumi import oci:NetworkFirewall/networkFirewallPolicySecurityRule:NetworkFirewallPolicySecurityRule test_network_firewall_policy_security_rule "networkFirewallPolicies/{networkFirewallPolicyId}/securityRules/{securityRuleName}"
 * ```
 */
export class NetworkFirewallPolicySecurityRule extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFirewallPolicySecurityRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkFirewallPolicySecurityRuleState, opts?: pulumi.CustomResourceOptions): NetworkFirewallPolicySecurityRule {
        return new NetworkFirewallPolicySecurityRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:NetworkFirewall/networkFirewallPolicySecurityRule:NetworkFirewallPolicySecurityRule';

    /**
     * Returns true if the given object is an instance of NetworkFirewallPolicySecurityRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkFirewallPolicySecurityRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkFirewallPolicySecurityRule.__pulumiType;
    }

    /**
     * (Updatable) Types of Action on the Traffic flow.
     * * ALLOW - Allows the traffic.
     * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
     * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
     * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * (Updatable) Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic. The resources mentioned must already be present in the policy before being referenced in the rule.
     */
    public readonly condition!: pulumi.Output<outputs.NetworkFirewall.NetworkFirewallPolicySecurityRuleCondition>;
    /**
     * (Updatable) Type of inspection to affect the traffic flow. This is only applicable if action is INSPECT.
     * * INTRUSION_DETECTION - Intrusion Detection.
     * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
     */
    public readonly inspection!: pulumi.Output<string | undefined>;
    /**
     * Name for the Security rule, must be unique within the policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Unique Network Firewall Policy identifier
     */
    public readonly networkFirewallPolicyId!: pulumi.Output<string>;
    /**
     * OCID of the Network Firewall Policy this security rule belongs to.
     */
    public /*out*/ readonly parentResourceId!: pulumi.Output<string>;
    /**
     * (Updatable) An object which defines the position of the rule. Only one of the following position references should be provided.
     */
    public readonly positions!: pulumi.Output<outputs.NetworkFirewall.NetworkFirewallPolicySecurityRulePosition[]>;
    public readonly priorityOrder!: pulumi.Output<string | undefined>;

    /**
     * Create a NetworkFirewallPolicySecurityRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkFirewallPolicySecurityRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkFirewallPolicySecurityRuleArgs | NetworkFirewallPolicySecurityRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkFirewallPolicySecurityRuleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["condition"] = state ? state.condition : undefined;
            resourceInputs["inspection"] = state ? state.inspection : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkFirewallPolicyId"] = state ? state.networkFirewallPolicyId : undefined;
            resourceInputs["parentResourceId"] = state ? state.parentResourceId : undefined;
            resourceInputs["positions"] = state ? state.positions : undefined;
            resourceInputs["priorityOrder"] = state ? state.priorityOrder : undefined;
        } else {
            const args = argsOrState as NetworkFirewallPolicySecurityRuleArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.condition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'condition'");
            }
            if ((!args || args.networkFirewallPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkFirewallPolicyId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["condition"] = args ? args.condition : undefined;
            resourceInputs["inspection"] = args ? args.inspection : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkFirewallPolicyId"] = args ? args.networkFirewallPolicyId : undefined;
            resourceInputs["positions"] = args ? args.positions : undefined;
            resourceInputs["priorityOrder"] = args ? args.priorityOrder : undefined;
            resourceInputs["parentResourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkFirewallPolicySecurityRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkFirewallPolicySecurityRule resources.
 */
export interface NetworkFirewallPolicySecurityRuleState {
    /**
     * (Updatable) Types of Action on the Traffic flow.
     * * ALLOW - Allows the traffic.
     * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
     * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
     * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
     */
    action?: pulumi.Input<string>;
    /**
     * (Updatable) Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic. The resources mentioned must already be present in the policy before being referenced in the rule.
     */
    condition?: pulumi.Input<inputs.NetworkFirewall.NetworkFirewallPolicySecurityRuleCondition>;
    /**
     * (Updatable) Type of inspection to affect the traffic flow. This is only applicable if action is INSPECT.
     * * INTRUSION_DETECTION - Intrusion Detection.
     * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
     */
    inspection?: pulumi.Input<string>;
    /**
     * Name for the Security rule, must be unique within the policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique Network Firewall Policy identifier
     */
    networkFirewallPolicyId?: pulumi.Input<string>;
    /**
     * OCID of the Network Firewall Policy this security rule belongs to.
     */
    parentResourceId?: pulumi.Input<string>;
    /**
     * (Updatable) An object which defines the position of the rule. Only one of the following position references should be provided.
     */
    positions?: pulumi.Input<pulumi.Input<inputs.NetworkFirewall.NetworkFirewallPolicySecurityRulePosition>[]>;
    priorityOrder?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkFirewallPolicySecurityRule resource.
 */
export interface NetworkFirewallPolicySecurityRuleArgs {
    /**
     * (Updatable) Types of Action on the Traffic flow.
     * * ALLOW - Allows the traffic.
     * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
     * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
     * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
     */
    action: pulumi.Input<string>;
    /**
     * (Updatable) Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic. The resources mentioned must already be present in the policy before being referenced in the rule.
     */
    condition: pulumi.Input<inputs.NetworkFirewall.NetworkFirewallPolicySecurityRuleCondition>;
    /**
     * (Updatable) Type of inspection to affect the traffic flow. This is only applicable if action is INSPECT.
     * * INTRUSION_DETECTION - Intrusion Detection.
     * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
     */
    inspection?: pulumi.Input<string>;
    /**
     * Name for the Security rule, must be unique within the policy.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique Network Firewall Policy identifier
     */
    networkFirewallPolicyId: pulumi.Input<string>;
    /**
     * (Updatable) An object which defines the position of the rule. Only one of the following position references should be provided.
     */
    positions?: pulumi.Input<pulumi.Input<inputs.NetworkFirewall.NetworkFirewallPolicySecurityRulePosition>[]>;
    priorityOrder?: pulumi.Input<string>;
}
