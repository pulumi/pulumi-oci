// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Backend resource in Oracle Cloud Infrastructure Network Load Balancer service.
 *
 * Adds a backend server to a backend set.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBackend = new oci.networkloadbalancer.Backend("test_backend", {
 *     backendSetName: testBackendSet.name,
 *     networkLoadBalancerId: testNetworkLoadBalancer.id,
 *     port: backendPort,
 *     ipAddress: backendIpAddress,
 *     isBackup: backendIsBackup,
 *     isDrain: backendIsDrain,
 *     isOffline: backendIsOffline,
 *     name: backendName,
 *     targetId: testTarget.id,
 *     weight: backendWeight,
 * });
 * ```
 *
 * ## Import
 *
 * Backends can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:NetworkLoadBalancer/backend:Backend test_backend "networkLoadBalancers/{networkLoadBalancerId}/backendSets/{backendSetName}/backends/{backendName}"
 * ```
 */
export class Backend extends pulumi.CustomResource {
    /**
     * Get an existing Backend resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackendState, opts?: pulumi.CustomResourceOptions): Backend {
        return new Backend(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:NetworkLoadBalancer/backend:Backend';

    /**
     * Returns true if the given object is an instance of Backend.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Backend {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Backend.__pulumiType;
    }

    /**
     * The name of the backend set to which to add the backend server.  Example: `exampleBackendSet`
     */
    declare public readonly backendSetName: pulumi.Output<string>;
    /**
     * The IP address of the backend server. Example: `10.0.0.3`
     */
    declare public readonly ipAddress: pulumi.Output<string>;
    /**
     * (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
     */
    declare public readonly isBackup: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
     */
    declare public readonly isDrain: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    declare public readonly isOffline: pulumi.Output<boolean>;
    /**
     * Optional unique name identifying the backend within the backend set. If not specified, then one will be generated. Example: `webServer1`
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    declare public readonly networkLoadBalancerId: pulumi.Output<string>;
    /**
     * The communication port for the backend server.  Example: `8080`
     */
    declare public readonly port: pulumi.Output<number>;
    /**
     * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
     */
    declare public readonly targetId: pulumi.Output<string>;
    /**
     * (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about network load balancer policies, see [Network Load Balancer Policies](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introduction.htm#Policies).  Example: `3` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly weight: pulumi.Output<number>;

    /**
     * Create a Backend resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackendArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackendArgs | BackendState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackendState | undefined;
            resourceInputs["backendSetName"] = state?.backendSetName;
            resourceInputs["ipAddress"] = state?.ipAddress;
            resourceInputs["isBackup"] = state?.isBackup;
            resourceInputs["isDrain"] = state?.isDrain;
            resourceInputs["isOffline"] = state?.isOffline;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkLoadBalancerId"] = state?.networkLoadBalancerId;
            resourceInputs["port"] = state?.port;
            resourceInputs["targetId"] = state?.targetId;
            resourceInputs["weight"] = state?.weight;
        } else {
            const args = argsOrState as BackendArgs | undefined;
            if (args?.backendSetName === undefined && !opts.urn) {
                throw new Error("Missing required property 'backendSetName'");
            }
            if (args?.networkLoadBalancerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkLoadBalancerId'");
            }
            if (args?.port === undefined && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            resourceInputs["backendSetName"] = args?.backendSetName;
            resourceInputs["ipAddress"] = args?.ipAddress;
            resourceInputs["isBackup"] = args?.isBackup;
            resourceInputs["isDrain"] = args?.isDrain;
            resourceInputs["isOffline"] = args?.isOffline;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkLoadBalancerId"] = args?.networkLoadBalancerId;
            resourceInputs["port"] = args?.port;
            resourceInputs["targetId"] = args?.targetId;
            resourceInputs["weight"] = args?.weight;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Backend.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Backend resources.
 */
export interface BackendState {
    /**
     * The name of the backend set to which to add the backend server.  Example: `exampleBackendSet`
     */
    backendSetName?: pulumi.Input<string>;
    /**
     * The IP address of the backend server. Example: `10.0.0.3`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
     */
    isBackup?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
     */
    isDrain?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    isOffline?: pulumi.Input<boolean>;
    /**
     * Optional unique name identifying the backend within the backend set. If not specified, then one will be generated. Example: `webServer1`
     */
    name?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId?: pulumi.Input<string>;
    /**
     * The communication port for the backend server.  Example: `8080`
     */
    port?: pulumi.Input<number>;
    /**
     * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
     */
    targetId?: pulumi.Input<string>;
    /**
     * (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about network load balancer policies, see [Network Load Balancer Policies](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introduction.htm#Policies).  Example: `3` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Backend resource.
 */
export interface BackendArgs {
    /**
     * The name of the backend set to which to add the backend server.  Example: `exampleBackendSet`
     */
    backendSetName: pulumi.Input<string>;
    /**
     * The IP address of the backend server. Example: `10.0.0.3`
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * (Updatable) Whether the network load balancer should treat this server as a backup unit. If `true`, then the network load balancer forwards no ingress traffic to this backend server unless all other backend servers not marked as "isBackup" fail the health check policy.  Example: `false`
     */
    isBackup?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the network load balancer should drain this server. Servers marked "isDrain" receive no incoming traffic.  Example: `false`
     */
    isDrain?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the network load balancer should treat this server as offline. Offline servers receive no incoming traffic.  Example: `false`
     */
    isOffline?: pulumi.Input<boolean>;
    /**
     * Optional unique name identifying the backend within the backend set. If not specified, then one will be generated. Example: `webServer1`
     */
    name?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId: pulumi.Input<string>;
    /**
     * The communication port for the backend server.  Example: `8080`
     */
    port: pulumi.Input<number>;
    /**
     * The IP OCID/Instance OCID associated with the backend server. Example: `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>`
     */
    targetId?: pulumi.Input<string>;
    /**
     * (Updatable) The network load balancing policy weight assigned to the server. Backend servers with a higher weight receive a larger proportion of incoming traffic. For example, a server weighted '3' receives three times the number of new connections as a server weighted '1'. For more information about network load balancer policies, see [Network Load Balancer Policies](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/introduction.htm#Policies).  Example: `3` 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    weight?: pulumi.Input<number>;
}
