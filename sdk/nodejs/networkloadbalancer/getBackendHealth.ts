// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Backend Health resource in Oracle Cloud Infrastructure Network Load Balancer service.
 *
 * Retrieves the current health status of the specified backend server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBackendHealth = oci.NetworkLoadBalancer.getBackendHealth({
 *     backendName: testBackend.name,
 *     backendSetName: testBackendSet.name,
 *     networkLoadBalancerId: testNetworkLoadBalancer.id,
 * });
 * ```
 */
export function getBackendHealth(args: GetBackendHealthArgs, opts?: pulumi.InvokeOptions): Promise<GetBackendHealthResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:NetworkLoadBalancer/getBackendHealth:getBackendHealth", {
        "backendName": args.backendName,
        "backendSetName": args.backendSetName,
        "networkLoadBalancerId": args.networkLoadBalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackendHealth.
 */
export interface GetBackendHealthArgs {
    /**
     * The name of the backend server to retrieve health status for. If the backend was created with an explicitly specified name, that name should be used here. If the backend was created without explicitly specifying the name, but was created using ipAddress, this is specified as <ipAddress>:<port>. If the backend was created without explicitly specifying the name, but was created using targetId, this is specified as <targetId>:<port>.  Example: `10.0.0.3:8080` or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:8080`
     */
    backendName: string;
    /**
     * The name of the backend set associated with the backend server for which to retrieve the health status.  Example: `exampleBackendSet`
     */
    backendSetName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId: string;
}

/**
 * A collection of values returned by getBackendHealth.
 */
export interface GetBackendHealthResult {
    readonly backendName: string;
    readonly backendSetName: string;
    /**
     * A list of the most recent health check results returned for the specified backend server.
     */
    readonly healthCheckResults: outputs.NetworkLoadBalancer.GetBackendHealthHealthCheckResult[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly networkLoadBalancerId: string;
    /**
     * The general health status of the specified backend server.
     * *   **OK:**  All health check probes return `OK`
     * *   **WARNING:** At least one of the health check probes does not return `OK`
     * *   **CRITICAL:** None of the health check probes return `OK`. *
     * *   **UNKNOWN:** One of the health checks probes return `UNKNOWN`,
     * *   or the system is unable to retrieve metrics at this time.
     */
    readonly status: string;
}
/**
 * This data source provides details about a specific Backend Health resource in Oracle Cloud Infrastructure Network Load Balancer service.
 *
 * Retrieves the current health status of the specified backend server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBackendHealth = oci.NetworkLoadBalancer.getBackendHealth({
 *     backendName: testBackend.name,
 *     backendSetName: testBackendSet.name,
 *     networkLoadBalancerId: testNetworkLoadBalancer.id,
 * });
 * ```
 */
export function getBackendHealthOutput(args: GetBackendHealthOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBackendHealthResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:NetworkLoadBalancer/getBackendHealth:getBackendHealth", {
        "backendName": args.backendName,
        "backendSetName": args.backendSetName,
        "networkLoadBalancerId": args.networkLoadBalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackendHealth.
 */
export interface GetBackendHealthOutputArgs {
    /**
     * The name of the backend server to retrieve health status for. If the backend was created with an explicitly specified name, that name should be used here. If the backend was created without explicitly specifying the name, but was created using ipAddress, this is specified as <ipAddress>:<port>. If the backend was created without explicitly specifying the name, but was created using targetId, this is specified as <targetId>:<port>.  Example: `10.0.0.3:8080` or `ocid1.privateip..oc1.<var>&lt;unique_ID&gt;</var>:8080`
     */
    backendName: pulumi.Input<string>;
    /**
     * The name of the backend set associated with the backend server for which to retrieve the health status.  Example: `exampleBackendSet`
     */
    backendSetName: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId: pulumi.Input<string>;
}
