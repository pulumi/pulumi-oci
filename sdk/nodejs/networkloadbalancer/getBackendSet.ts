// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Backend Set resource in Oracle Cloud Infrastructure Network Load Balancer service.
 *
 * Retrieves the configuration information for the specified backend set.
 */
export function getBackendSet(args: GetBackendSetArgs, opts?: pulumi.InvokeOptions): Promise<GetBackendSetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:NetworkLoadBalancer/getBackendSet:getBackendSet", {
        "backendSetName": args.backendSetName,
        "networkLoadBalancerId": args.networkLoadBalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackendSet.
 */
export interface GetBackendSetArgs {
    /**
     * The name of the backend set to retrieve.  Example: `exampleBackendSet`
     */
    backendSetName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId: string;
}

/**
 * A collection of values returned by getBackendSet.
 */
export interface GetBackendSetResult {
    /**
     * If enabled, NLB supports active-standby backends. The standby backend takes over the traffic when the active node fails, and continues to serve the traffic even when the old active node is back healthy.
     */
    readonly areOperationallyActiveBackendsPreferred: boolean;
    readonly backendSetName: string;
    /**
     * An array of backends.
     */
    readonly backends: outputs.NetworkLoadBalancer.GetBackendSetBackend[];
    /**
     * The health check policy configuration. For more information, see [Editing Network Load Balancer Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/HealthCheckPolicies/update-health-check-management.htm).
     */
    readonly healthCheckers: outputs.NetworkLoadBalancer.GetBackendSetHealthChecker[];
    readonly id: string;
    /**
     * IP version associated with the backend set.
     */
    readonly ipVersion: string;
    /**
     * If enabled, the network load balancer will continue to distribute traffic in the configured distribution in the event all backends are unhealthy. The value is false by default.
     */
    readonly isFailOpen: boolean;
    /**
     * If enabled existing connections will be forwarded to an alternative healthy backend as soon as current backend becomes unhealthy.
     */
    readonly isInstantFailoverEnabled: boolean;
    /**
     * If enabled along with instant failover, the network load balancer will send TCP RST to the clients for the existing connections instead of failing over to a healthy backend. This only applies when using the instant failover. By default, TCP RST is enabled.
     */
    readonly isInstantFailoverTcpResetEnabled: boolean;
    /**
     * If this parameter is enabled, then the network load balancer preserves the source IP of the packet when it is forwarded to backends. Backends see the original source IP. If the isPreserveSourceDestination parameter is enabled for the network load balancer resource, then this parameter cannot be disabled. The value is true by default.
     */
    readonly isPreserveSource: boolean;
    /**
     * A user-friendly name for the backend set that must be unique and cannot be changed.
     */
    readonly name: string;
    readonly networkLoadBalancerId: string;
    /**
     * The network load balancer policy for the backend set.  Example: `FIVE_TUPLE`
     */
    readonly policy: string;
}
/**
 * This data source provides details about a specific Backend Set resource in Oracle Cloud Infrastructure Network Load Balancer service.
 *
 * Retrieves the configuration information for the specified backend set.
 */
export function getBackendSetOutput(args: GetBackendSetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBackendSetResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:NetworkLoadBalancer/getBackendSet:getBackendSet", {
        "backendSetName": args.backendSetName,
        "networkLoadBalancerId": args.networkLoadBalancerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackendSet.
 */
export interface GetBackendSetOutputArgs {
    /**
     * The name of the backend set to retrieve.  Example: `exampleBackendSet`
     */
    backendSetName: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     */
    networkLoadBalancerId: pulumi.Input<string>;
}
