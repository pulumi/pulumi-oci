// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Index resource in Oracle Cloud Infrastructure NoSQL Database service.
 *
 * Get information about a single index.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIndex = oci.Nosql.getIndex({
 *     indexName: testIndexOciNosqlIndex.name,
 *     tableNameOrId: testTableNameOr.id,
 *     compartmentId: compartmentId,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getIndex(args: GetIndexArgs, opts?: pulumi.InvokeOptions): Promise<GetIndexResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Nosql/getIndex:getIndex", {
        "compartmentId": args.compartmentId,
        "indexName": args.indexName,
        "tableNameOrId": args.tableNameOrId,
    }, opts);
}

/**
 * A collection of arguments for invoking getIndex.
 */
export interface GetIndexArgs {
    /**
     * The ID of a table's compartment. When a table is identified by name, the compartmentId is often needed to provide context for interpreting the name.
     */
    compartmentId: string;
    /**
     * The name of a table's index.
     */
    indexName: string;
    /**
     * A table name within the compartment, or a table OCID.
     */
    tableNameOrId: string;
}

/**
 * A collection of values returned by getIndex.
 */
export interface GetIndexResult {
    /**
     * Compartment Identifier.
     */
    readonly compartmentId: string;
    readonly id: string;
    readonly indexName: string;
    readonly isIfNotExists: boolean;
    /**
     * A set of keys for a secondary index.
     */
    readonly keys: outputs.Nosql.GetIndexKey[];
    /**
     * A message describing the current state in more detail.
     */
    readonly lifecycleDetails: string;
    /**
     * Index name.
     */
    readonly name: string;
    /**
     * The state of an index.
     */
    readonly state: string;
    /**
     * the OCID of the table to which this index belongs.
     */
    readonly tableId: string;
    /**
     * The name of the table to which this index belongs.
     */
    readonly tableName: string;
    readonly tableNameOrId: string;
}
/**
 * This data source provides details about a specific Index resource in Oracle Cloud Infrastructure NoSQL Database service.
 *
 * Get information about a single index.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testIndex = oci.Nosql.getIndex({
 *     indexName: testIndexOciNosqlIndex.name,
 *     tableNameOrId: testTableNameOr.id,
 *     compartmentId: compartmentId,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getIndexOutput(args: GetIndexOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIndexResult> {
    return pulumi.output(args).apply((a: any) => getIndex(a, opts))
}

/**
 * A collection of arguments for invoking getIndex.
 */
export interface GetIndexOutputArgs {
    /**
     * The ID of a table's compartment. When a table is identified by name, the compartmentId is often needed to provide context for interpreting the name.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The name of a table's index.
     */
    indexName: pulumi.Input<string>;
    /**
     * A table name within the compartment, or a table OCID.
     */
    tableNameOrId: pulumi.Input<string>;
}
