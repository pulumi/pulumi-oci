// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Buckets in Oracle Cloud Infrastructure Object Storage service.
 *
 * Gets a list of all BucketSummary items in a compartment. A BucketSummary contains only summary fields for the bucket
 * and does not contain fields like the user-defined metadata.
 *
 * ListBuckets returns a BucketSummary containing at most 1000 buckets. To paginate through more buckets, use the returned
 * `opc-next-page` value with the `page` request parameter.
 *
 * To use this and other API operations, you must be authorized in an IAM policy. If you are not authorized,
 * talk to an administrator. If you are an administrator who needs to write policies to give users access, see
 * [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBuckets = oci.ObjectStorage.getBucketSummaries({
 *     compartmentId: compartmentId,
 *     namespace: bucketNamespace,
 * });
 * ```
 */
export function getBucketSummaries(args: GetBucketSummariesArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketSummariesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:ObjectStorage/getBucketSummaries:getBucketSummaries", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "namespace": args.namespace,
    }, opts);
}

/**
 * A collection of arguments for invoking getBucketSummaries.
 */
export interface GetBucketSummariesArgs {
    /**
     * The ID of the compartment in which to list buckets.
     */
    compartmentId: string;
    filters?: inputs.ObjectStorage.GetBucketSummariesFilter[];
    /**
     * The Object Storage namespace used for the request.
     */
    namespace: string;
}

/**
 * A collection of values returned by getBucketSummaries.
 */
export interface GetBucketSummariesResult {
    /**
     * The list of bucket_summaries.
     */
    readonly bucketSummaries: outputs.ObjectStorage.GetBucketSummariesBucketSummary[];
    /**
     * The compartment ID in which the bucket is authorized.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.ObjectStorage.GetBucketSummariesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Object Storage namespace in which the bucket resides.
     */
    readonly namespace: string;
}
/**
 * This data source provides the list of Buckets in Oracle Cloud Infrastructure Object Storage service.
 *
 * Gets a list of all BucketSummary items in a compartment. A BucketSummary contains only summary fields for the bucket
 * and does not contain fields like the user-defined metadata.
 *
 * ListBuckets returns a BucketSummary containing at most 1000 buckets. To paginate through more buckets, use the returned
 * `opc-next-page` value with the `page` request parameter.
 *
 * To use this and other API operations, you must be authorized in an IAM policy. If you are not authorized,
 * talk to an administrator. If you are an administrator who needs to write policies to give users access, see
 * [Getting Started with Policies](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/policygetstarted.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBuckets = oci.ObjectStorage.getBucketSummaries({
 *     compartmentId: compartmentId,
 *     namespace: bucketNamespace,
 * });
 * ```
 */
export function getBucketSummariesOutput(args: GetBucketSummariesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketSummariesResult> {
    return pulumi.output(args).apply((a: any) => getBucketSummaries(a, opts))
}

/**
 * A collection of arguments for invoking getBucketSummaries.
 */
export interface GetBucketSummariesOutputArgs {
    /**
     * The ID of the compartment in which to list buckets.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.ObjectStorage.GetBucketSummariesFilterArgs>[]>;
    /**
     * The Object Storage namespace used for the request.
     */
    namespace: pulumi.Input<string>;
}
