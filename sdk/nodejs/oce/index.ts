// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetOceInstanceArgs, GetOceInstanceResult, GetOceInstanceOutputArgs } from "./getOceInstance";
export const getOceInstance: typeof import("./getOceInstance").getOceInstance = null as any;
export const getOceInstanceOutput: typeof import("./getOceInstance").getOceInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getOceInstance","getOceInstanceOutput"], () => require("./getOceInstance"));

export { GetOceInstancesArgs, GetOceInstancesResult, GetOceInstancesOutputArgs } from "./getOceInstances";
export const getOceInstances: typeof import("./getOceInstances").getOceInstances = null as any;
export const getOceInstancesOutput: typeof import("./getOceInstances").getOceInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getOceInstances","getOceInstancesOutput"], () => require("./getOceInstances"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Oce/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Oce/instance", _module)
