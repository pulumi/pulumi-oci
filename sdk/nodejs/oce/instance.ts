// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Oce Instance resource in Oracle Cloud Infrastructure Content and Experience service.
 *
 * Creates a new OceInstance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOceInstance = new oci.oce.Instance("test_oce_instance", {
 *     adminEmail: oceInstanceAdminEmail,
 *     compartmentId: compartmentId,
 *     idcsAccessToken: oceInstanceIdcsAccessToken,
 *     name: oceInstanceName,
 *     objectStorageNamespace: oceInstanceObjectStorageNamespace,
 *     tenancyId: testTenancy.id,
 *     tenancyName: testTenancy.name,
 *     addOnFeatures: oceInstanceAddOnFeatures,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: oceInstanceDescription,
 *     drRegion: oceInstanceDrRegion,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     instanceAccessType: oceInstanceInstanceAccessType,
 *     instanceLicenseType: oceInstanceInstanceLicenseType,
 *     instanceUsageType: oceInstanceInstanceUsageType,
 *     upgradeSchedule: oceInstanceUpgradeSchedule,
 *     wafPrimaryDomain: oceInstanceWafPrimaryDomain,
 * });
 * ```
 *
 * ## Import
 *
 * OceInstances can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Oce/instance:Instance test_oce_instance "id"
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Oce/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * (Updatable) a list of add-on features for the ocm instance
     */
    declare public readonly addOnFeatures: pulumi.Output<string[]>;
    /**
     * Admin Email for Notification
     */
    declare public readonly adminEmail: pulumi.Output<string>;
    /**
     * (Updatable) Compartment Identifier
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) OceInstance description
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) disaster recovery paired ragion name
     */
    declare public readonly drRegion: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Unique GUID identifier that is immutable on creation
     */
    declare public /*out*/ readonly guid: pulumi.Output<string>;
    /**
     * Identity Cloud Service access token identifying a stripe and service administrator user
     */
    declare public readonly idcsAccessToken: pulumi.Output<string>;
    /**
     * IDCS Tenancy Identifier
     */
    declare public /*out*/ readonly idcsTenancy: pulumi.Output<string>;
    /**
     * Flag indicating whether the instance access is private or public
     */
    declare public readonly instanceAccessType: pulumi.Output<string>;
    /**
     * (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
     */
    declare public readonly instanceLicenseType: pulumi.Output<string>;
    /**
     * (Updatable) Instance type based on its usage
     */
    declare public readonly instanceUsageType: pulumi.Output<string>;
    /**
     * Details of the current state of the instance lifecycle
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * OceInstance Name
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Object Storage Namespace of Tenancy
     */
    declare public readonly objectStorageNamespace: pulumi.Output<string>;
    /**
     * SERVICE data. Example: `{"service": {"IDCS": "value"}}`
     */
    declare public /*out*/ readonly service: pulumi.Output<{[key: string]: string}>;
    /**
     * The current state of the instance lifecycle.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly stateMessage: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Tenancy Identifier
     */
    declare public readonly tenancyId: pulumi.Output<string>;
    /**
     * Tenancy Name
     */
    declare public readonly tenancyName: pulumi.Output<string>;
    /**
     * The time the the OceInstance was created. An RFC3339 formatted datetime string
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the OceInstance was updated. An RFC3339 formatted datetime string
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;
    /**
     * Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
     */
    declare public readonly upgradeSchedule: pulumi.Output<string>;
    /**
     * (Updatable) Web Application Firewall(WAF) primary domain
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly wafPrimaryDomain: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["addOnFeatures"] = state?.addOnFeatures;
            resourceInputs["adminEmail"] = state?.adminEmail;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["drRegion"] = state?.drRegion;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["guid"] = state?.guid;
            resourceInputs["idcsAccessToken"] = state?.idcsAccessToken;
            resourceInputs["idcsTenancy"] = state?.idcsTenancy;
            resourceInputs["instanceAccessType"] = state?.instanceAccessType;
            resourceInputs["instanceLicenseType"] = state?.instanceLicenseType;
            resourceInputs["instanceUsageType"] = state?.instanceUsageType;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["name"] = state?.name;
            resourceInputs["objectStorageNamespace"] = state?.objectStorageNamespace;
            resourceInputs["service"] = state?.service;
            resourceInputs["state"] = state?.state;
            resourceInputs["stateMessage"] = state?.stateMessage;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["tenancyId"] = state?.tenancyId;
            resourceInputs["tenancyName"] = state?.tenancyName;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
            resourceInputs["upgradeSchedule"] = state?.upgradeSchedule;
            resourceInputs["wafPrimaryDomain"] = state?.wafPrimaryDomain;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (args?.adminEmail === undefined && !opts.urn) {
                throw new Error("Missing required property 'adminEmail'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.idcsAccessToken === undefined && !opts.urn) {
                throw new Error("Missing required property 'idcsAccessToken'");
            }
            if (args?.objectStorageNamespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'objectStorageNamespace'");
            }
            if (args?.tenancyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'tenancyId'");
            }
            if (args?.tenancyName === undefined && !opts.urn) {
                throw new Error("Missing required property 'tenancyName'");
            }
            resourceInputs["addOnFeatures"] = args?.addOnFeatures;
            resourceInputs["adminEmail"] = args?.adminEmail;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["drRegion"] = args?.drRegion;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["idcsAccessToken"] = args?.idcsAccessToken ? pulumi.secret(args.idcsAccessToken) : undefined;
            resourceInputs["instanceAccessType"] = args?.instanceAccessType;
            resourceInputs["instanceLicenseType"] = args?.instanceLicenseType;
            resourceInputs["instanceUsageType"] = args?.instanceUsageType;
            resourceInputs["name"] = args?.name;
            resourceInputs["objectStorageNamespace"] = args?.objectStorageNamespace;
            resourceInputs["tenancyId"] = args?.tenancyId;
            resourceInputs["tenancyName"] = args?.tenancyName;
            resourceInputs["upgradeSchedule"] = args?.upgradeSchedule;
            resourceInputs["wafPrimaryDomain"] = args?.wafPrimaryDomain;
            resourceInputs["guid"] = undefined /*out*/;
            resourceInputs["idcsTenancy"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["service"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["idcsAccessToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * (Updatable) a list of add-on features for the ocm instance
     */
    addOnFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Admin Email for Notification
     */
    adminEmail?: pulumi.Input<string>;
    /**
     * (Updatable) Compartment Identifier
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) OceInstance description
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) disaster recovery paired ragion name
     */
    drRegion?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Unique GUID identifier that is immutable on creation
     */
    guid?: pulumi.Input<string>;
    /**
     * Identity Cloud Service access token identifying a stripe and service administrator user
     */
    idcsAccessToken?: pulumi.Input<string>;
    /**
     * IDCS Tenancy Identifier
     */
    idcsTenancy?: pulumi.Input<string>;
    /**
     * Flag indicating whether the instance access is private or public
     */
    instanceAccessType?: pulumi.Input<string>;
    /**
     * (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
     */
    instanceLicenseType?: pulumi.Input<string>;
    /**
     * (Updatable) Instance type based on its usage
     */
    instanceUsageType?: pulumi.Input<string>;
    /**
     * Details of the current state of the instance lifecycle
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * OceInstance Name
     */
    name?: pulumi.Input<string>;
    /**
     * Object Storage Namespace of Tenancy
     */
    objectStorageNamespace?: pulumi.Input<string>;
    /**
     * SERVICE data. Example: `{"service": {"IDCS": "value"}}`
     */
    service?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current state of the instance lifecycle.
     */
    state?: pulumi.Input<string>;
    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Tenancy Identifier
     */
    tenancyId?: pulumi.Input<string>;
    /**
     * Tenancy Name
     */
    tenancyName?: pulumi.Input<string>;
    /**
     * The time the the OceInstance was created. An RFC3339 formatted datetime string
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the OceInstance was updated. An RFC3339 formatted datetime string
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
     */
    upgradeSchedule?: pulumi.Input<string>;
    /**
     * (Updatable) Web Application Firewall(WAF) primary domain
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    wafPrimaryDomain?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * (Updatable) a list of add-on features for the ocm instance
     */
    addOnFeatures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Admin Email for Notification
     */
    adminEmail: pulumi.Input<string>;
    /**
     * (Updatable) Compartment Identifier
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) OceInstance description
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) disaster recovery paired ragion name
     */
    drRegion?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Identity Cloud Service access token identifying a stripe and service administrator user
     */
    idcsAccessToken: pulumi.Input<string>;
    /**
     * Flag indicating whether the instance access is private or public
     */
    instanceAccessType?: pulumi.Input<string>;
    /**
     * (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
     */
    instanceLicenseType?: pulumi.Input<string>;
    /**
     * (Updatable) Instance type based on its usage
     */
    instanceUsageType?: pulumi.Input<string>;
    /**
     * OceInstance Name
     */
    name?: pulumi.Input<string>;
    /**
     * Object Storage Namespace of Tenancy
     */
    objectStorageNamespace: pulumi.Input<string>;
    /**
     * Tenancy Identifier
     */
    tenancyId: pulumi.Input<string>;
    /**
     * Tenancy Name
     */
    tenancyName: pulumi.Input<string>;
    /**
     * Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
     */
    upgradeSchedule?: pulumi.Input<string>;
    /**
     * (Updatable) Web Application Firewall(WAF) primary domain
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    wafPrimaryDomain?: pulumi.Input<string>;
}
