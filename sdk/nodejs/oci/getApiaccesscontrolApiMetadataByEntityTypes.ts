// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Api Metadata By Entity Types in Oracle Cloud Infrastructure Apiaccesscontrol service.
 *
 * Gets a list of ApiMetadata Grouped By Entity Types.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testApiMetadataByEntityTypes = oci.oci.getApiaccesscontrolApiMetadataByEntityTypes({
 *     compartmentId: compartmentId,
 *     displayName: apiMetadataByEntityTypeDisplayName,
 *     resourceType: apiMetadataByEntityTypeResourceType,
 *     state: apiMetadataByEntityTypeState,
 * });
 * ```
 */
export function getApiaccesscontrolApiMetadataByEntityTypes(args?: GetApiaccesscontrolApiMetadataByEntityTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetApiaccesscontrolApiMetadataByEntityTypesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:oci/getApiaccesscontrolApiMetadataByEntityTypes:getApiaccesscontrolApiMetadataByEntityTypes", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "resourceType": args.resourceType,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiaccesscontrolApiMetadataByEntityTypes.
 */
export interface GetApiaccesscontrolApiMetadataByEntityTypesArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.oci.GetApiaccesscontrolApiMetadataByEntityTypesFilter[];
    /**
     * A filter to return only lists of resources that match the entire given service type.
     */
    resourceType?: string;
    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getApiaccesscontrolApiMetadataByEntityTypes.
 */
export interface GetApiaccesscontrolApiMetadataByEntityTypesResult {
    /**
     * The list of api_metadata_by_entity_type_collection.
     */
    readonly apiMetadataByEntityTypeCollections: outputs.oci.GetApiaccesscontrolApiMetadataByEntityTypesApiMetadataByEntityTypeCollection[];
    readonly compartmentId?: string;
    /**
     * Name of the Api.
     */
    readonly displayName?: string;
    readonly filters?: outputs.oci.GetApiaccesscontrolApiMetadataByEntityTypesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resourceType?: string;
    /**
     * The current state of the ApiMetadata.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Api Metadata By Entity Types in Oracle Cloud Infrastructure Apiaccesscontrol service.
 *
 * Gets a list of ApiMetadata Grouped By Entity Types.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testApiMetadataByEntityTypes = oci.oci.getApiaccesscontrolApiMetadataByEntityTypes({
 *     compartmentId: compartmentId,
 *     displayName: apiMetadataByEntityTypeDisplayName,
 *     resourceType: apiMetadataByEntityTypeResourceType,
 *     state: apiMetadataByEntityTypeState,
 * });
 * ```
 */
export function getApiaccesscontrolApiMetadataByEntityTypesOutput(args?: GetApiaccesscontrolApiMetadataByEntityTypesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApiaccesscontrolApiMetadataByEntityTypesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:oci/getApiaccesscontrolApiMetadataByEntityTypes:getApiaccesscontrolApiMetadataByEntityTypes", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "resourceType": args.resourceType,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiaccesscontrolApiMetadataByEntityTypes.
 */
export interface GetApiaccesscontrolApiMetadataByEntityTypesOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.oci.GetApiaccesscontrolApiMetadataByEntityTypesFilterArgs>[]>;
    /**
     * A filter to return only lists of resources that match the entire given service type.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
