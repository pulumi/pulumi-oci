// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Privileged Api Request resource in Oracle Cloud Infrastructure Apiaccesscontrol service.
 *
 * Gets information about a PrivilegedApiRequest.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPrivilegedApiRequest = oci.oci.getApiaccesscontrolPrivilegedApiRequest({
 *     privilegedApiRequestId: testPrivilegedApiRequestOciApiaccesscontrolPrivilegedApiRequest.id,
 * });
 * ```
 */
export function getApiaccesscontrolPrivilegedApiRequest(args: GetApiaccesscontrolPrivilegedApiRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetApiaccesscontrolPrivilegedApiRequestResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:oci/getApiaccesscontrolPrivilegedApiRequest:getApiaccesscontrolPrivilegedApiRequest", {
        "privilegedApiRequestId": args.privilegedApiRequestId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiaccesscontrolPrivilegedApiRequest.
 */
export interface GetApiaccesscontrolPrivilegedApiRequestArgs {
    /**
     * unique PrivilegedApiRequest identifier
     */
    privilegedApiRequestId: string;
}

/**
 * A collection of values returned by getApiaccesscontrolPrivilegedApiRequest.
 */
export interface GetApiaccesscontrolPrivilegedApiRequestResult {
    /**
     * Contains the approver details who have approved the privilegedApi Request during the initial request.
     */
    readonly approverDetails: outputs.oci.GetApiaccesscontrolPrivilegedApiRequestApproverDetail[];
    /**
     * The comment entered by the operator while closing the request.
     */
    readonly closureComment: string;
    /**
     * The OCID of the compartment that contains the access request.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Name of the privilegedApi control. The name must be unique.
     */
    readonly displayName: string;
    /**
     * Duration in hours for which access is sought on the target resource.
     */
    readonly durationInHrs: number;
    /**
     * entityType of resource for which the AccessRequest is applicable
     */
    readonly entityType: string;
    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The OCID of the privilegedApi request.
     */
    readonly id: string;
    /**
     * more in detail about the lifeCycleState.
     */
    readonly lifecycleDetails: string;
    /**
     * The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this privileged api request.
     */
    readonly notificationTopicId: string;
    /**
     * Number of approvers required to approve an privilegedApi request.
     */
    readonly numberOfApproversRequired: number;
    /**
     * The OCID of the privilegedApi control governing the target resource.
     */
    readonly privilegedApiControlId: string;
    /**
     * Name of the privilegedApi control governing the target resource.
     */
    readonly privilegedApiControlName: string;
    readonly privilegedApiRequestId: string;
    /**
     * List of api names, attributes for which approval is sought by the user.
     */
    readonly privilegedOperationLists: outputs.oci.GetApiaccesscontrolPrivilegedApiRequestPrivilegedOperationList[];
    /**
     * Reason in Detail for which the operator is requesting access on the target resource.
     */
    readonly reasonDetail: string;
    /**
     * Summary comment by the operator creating the access request.
     */
    readonly reasonSummary: string;
    /**
     * This is an automatic identifier generated by the system which is easier for human comprehension.
     */
    readonly requestId: string;
    /**
     * List of Users who has created this privilegedApiRequest.
     */
    readonly requestedBies: string[];
    /**
     * The OCID of the target resource associated with the access request. The operator raises an access request to get approval to access the target resource.
     */
    readonly resourceId: string;
    /**
     * resourceName for which the PrivilegedApiRequest is applicable
     */
    readonly resourceName: string;
    /**
     * resourceType for which the AccessRequest is applicable
     */
    readonly resourceType: string;
    /**
     * Priority assigned to the access request by the operator
     */
    readonly severity: string;
    /**
     * The current state of the PrivilegedApiRequest.
     */
    readonly state: string;
    /**
     * A message that describes the current state of the PrivilegedApiControl in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     */
    readonly stateDetails: string;
    /**
     * The subresource names requested for approval.
     */
    readonly subResourceNameLists: string[];
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * A list of ticket numbers related to this Privileged Api Access Request, e.g. Service Request (SR) number and JIRA ticket number.
     */
    readonly ticketNumbers: string[];
    /**
     * Time when the privilegedApi request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
     */
    readonly timeCreated: string;
    /**
     * Time in future when the user for the privilegedApi request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
     */
    readonly timeRequestedForFutureAccess: string;
    /**
     * Time when the privilegedApi request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Privileged Api Request resource in Oracle Cloud Infrastructure Apiaccesscontrol service.
 *
 * Gets information about a PrivilegedApiRequest.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testPrivilegedApiRequest = oci.oci.getApiaccesscontrolPrivilegedApiRequest({
 *     privilegedApiRequestId: testPrivilegedApiRequestOciApiaccesscontrolPrivilegedApiRequest.id,
 * });
 * ```
 */
export function getApiaccesscontrolPrivilegedApiRequestOutput(args: GetApiaccesscontrolPrivilegedApiRequestOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApiaccesscontrolPrivilegedApiRequestResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:oci/getApiaccesscontrolPrivilegedApiRequest:getApiaccesscontrolPrivilegedApiRequest", {
        "privilegedApiRequestId": args.privilegedApiRequestId,
    }, opts);
}

/**
 * A collection of arguments for invoking getApiaccesscontrolPrivilegedApiRequest.
 */
export interface GetApiaccesscontrolPrivilegedApiRequestOutputArgs {
    /**
     * unique PrivilegedApiRequest identifier
     */
    privilegedApiRequestId: pulumi.Input<string>;
}
