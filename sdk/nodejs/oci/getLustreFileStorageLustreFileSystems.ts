// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Lustre File Systems in Oracle Cloud Infrastructure Lustre File Storage service.
 *
 * Gets a list of Lustre file systems.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLustreFileSystems = oci.oci.getLustreFileStorageLustreFileSystems({
 *     availabilityDomain: lustreFileSystemAvailabilityDomain,
 *     compartmentId: compartmentId,
 *     displayName: lustreFileSystemDisplayName,
 *     id: lustreFileSystemId,
 *     state: lustreFileSystemState,
 * });
 * ```
 */
export function getLustreFileStorageLustreFileSystems(args?: GetLustreFileStorageLustreFileSystemsArgs, opts?: pulumi.InvokeOptions): Promise<GetLustreFileStorageLustreFileSystemsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:oci/getLustreFileStorageLustreFileSystems:getLustreFileStorageLustreFileSystems", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getLustreFileStorageLustreFileSystems.
 */
export interface GetLustreFileStorageLustreFileSystemsArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.oci.GetLustreFileStorageLustreFileSystemsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
     */
    id?: string;
    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getLustreFileStorageLustreFileSystems.
 */
export interface GetLustreFileStorageLustreFileSystemsResult {
    /**
     * The availability domain the file system is in. May be unset as a blank or NULL value.  Example: `Uocm:PHX-AD-1`
     */
    readonly availabilityDomain?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the Lustre file system.
     */
    readonly compartmentId?: string;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My Lustre file system`
     */
    readonly displayName?: string;
    readonly filters?: outputs.oci.GetLustreFileStorageLustreFileSystemsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
     */
    readonly id?: string;
    /**
     * The list of lustre_file_system_collection.
     */
    readonly lustreFileSystemCollections: outputs.oci.GetLustreFileStorageLustreFileSystemsLustreFileSystemCollection[];
    /**
     * The current state of the Lustre file system.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Lustre File Systems in Oracle Cloud Infrastructure Lustre File Storage service.
 *
 * Gets a list of Lustre file systems.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLustreFileSystems = oci.oci.getLustreFileStorageLustreFileSystems({
 *     availabilityDomain: lustreFileSystemAvailabilityDomain,
 *     compartmentId: compartmentId,
 *     displayName: lustreFileSystemDisplayName,
 *     id: lustreFileSystemId,
 *     state: lustreFileSystemState,
 * });
 * ```
 */
export function getLustreFileStorageLustreFileSystemsOutput(args?: GetLustreFileStorageLustreFileSystemsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLustreFileStorageLustreFileSystemsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:oci/getLustreFileStorageLustreFileSystems:getLustreFileStorageLustreFileSystems", {
        "availabilityDomain": args.availabilityDomain,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getLustreFileStorageLustreFileSystems.
 */
export interface GetLustreFileStorageLustreFileSystemsOutputArgs {
    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.oci.GetLustreFileStorageLustreFileSystemsFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
