// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ApiPlatformApiPlatformInstanceArgs, ApiPlatformApiPlatformInstanceState } from "./apiPlatformApiPlatformInstance";
export type ApiPlatformApiPlatformInstance = import("./apiPlatformApiPlatformInstance").ApiPlatformApiPlatformInstance;
export const ApiPlatformApiPlatformInstance: typeof import("./apiPlatformApiPlatformInstance").ApiPlatformApiPlatformInstance = null as any;
utilities.lazyLoad(exports, ["ApiPlatformApiPlatformInstance"], () => require("./apiPlatformApiPlatformInstance"));

export { ApiaccesscontrolPrivilegedApiControlArgs, ApiaccesscontrolPrivilegedApiControlState } from "./apiaccesscontrolPrivilegedApiControl";
export type ApiaccesscontrolPrivilegedApiControl = import("./apiaccesscontrolPrivilegedApiControl").ApiaccesscontrolPrivilegedApiControl;
export const ApiaccesscontrolPrivilegedApiControl: typeof import("./apiaccesscontrolPrivilegedApiControl").ApiaccesscontrolPrivilegedApiControl = null as any;
utilities.lazyLoad(exports, ["ApiaccesscontrolPrivilegedApiControl"], () => require("./apiaccesscontrolPrivilegedApiControl"));

export { ApiaccesscontrolPrivilegedApiRequestArgs, ApiaccesscontrolPrivilegedApiRequestState } from "./apiaccesscontrolPrivilegedApiRequest";
export type ApiaccesscontrolPrivilegedApiRequest = import("./apiaccesscontrolPrivilegedApiRequest").ApiaccesscontrolPrivilegedApiRequest;
export const ApiaccesscontrolPrivilegedApiRequest: typeof import("./apiaccesscontrolPrivilegedApiRequest").ApiaccesscontrolPrivilegedApiRequest = null as any;
utilities.lazyLoad(exports, ["ApiaccesscontrolPrivilegedApiRequest"], () => require("./apiaccesscontrolPrivilegedApiRequest"));

export { DbmulticloudMultiCloudResourceDiscoveryArgs, DbmulticloudMultiCloudResourceDiscoveryState } from "./dbmulticloudMultiCloudResourceDiscovery";
export type DbmulticloudMultiCloudResourceDiscovery = import("./dbmulticloudMultiCloudResourceDiscovery").DbmulticloudMultiCloudResourceDiscovery;
export const DbmulticloudMultiCloudResourceDiscovery: typeof import("./dbmulticloudMultiCloudResourceDiscovery").DbmulticloudMultiCloudResourceDiscovery = null as any;
utilities.lazyLoad(exports, ["DbmulticloudMultiCloudResourceDiscovery"], () => require("./dbmulticloudMultiCloudResourceDiscovery"));

export { DbmulticloudOracleDbAzureBlobContainerArgs, DbmulticloudOracleDbAzureBlobContainerState } from "./dbmulticloudOracleDbAzureBlobContainer";
export type DbmulticloudOracleDbAzureBlobContainer = import("./dbmulticloudOracleDbAzureBlobContainer").DbmulticloudOracleDbAzureBlobContainer;
export const DbmulticloudOracleDbAzureBlobContainer: typeof import("./dbmulticloudOracleDbAzureBlobContainer").DbmulticloudOracleDbAzureBlobContainer = null as any;
utilities.lazyLoad(exports, ["DbmulticloudOracleDbAzureBlobContainer"], () => require("./dbmulticloudOracleDbAzureBlobContainer"));

export { DbmulticloudOracleDbAzureBlobMountArgs, DbmulticloudOracleDbAzureBlobMountState } from "./dbmulticloudOracleDbAzureBlobMount";
export type DbmulticloudOracleDbAzureBlobMount = import("./dbmulticloudOracleDbAzureBlobMount").DbmulticloudOracleDbAzureBlobMount;
export const DbmulticloudOracleDbAzureBlobMount: typeof import("./dbmulticloudOracleDbAzureBlobMount").DbmulticloudOracleDbAzureBlobMount = null as any;
utilities.lazyLoad(exports, ["DbmulticloudOracleDbAzureBlobMount"], () => require("./dbmulticloudOracleDbAzureBlobMount"));

export { DbmulticloudOracleDbAzureConnectorArgs, DbmulticloudOracleDbAzureConnectorState } from "./dbmulticloudOracleDbAzureConnector";
export type DbmulticloudOracleDbAzureConnector = import("./dbmulticloudOracleDbAzureConnector").DbmulticloudOracleDbAzureConnector;
export const DbmulticloudOracleDbAzureConnector: typeof import("./dbmulticloudOracleDbAzureConnector").DbmulticloudOracleDbAzureConnector = null as any;
utilities.lazyLoad(exports, ["DbmulticloudOracleDbAzureConnector"], () => require("./dbmulticloudOracleDbAzureConnector"));

export { DbmulticloudOracleDbAzureVaultArgs, DbmulticloudOracleDbAzureVaultState } from "./dbmulticloudOracleDbAzureVault";
export type DbmulticloudOracleDbAzureVault = import("./dbmulticloudOracleDbAzureVault").DbmulticloudOracleDbAzureVault;
export const DbmulticloudOracleDbAzureVault: typeof import("./dbmulticloudOracleDbAzureVault").DbmulticloudOracleDbAzureVault = null as any;
utilities.lazyLoad(exports, ["DbmulticloudOracleDbAzureVault"], () => require("./dbmulticloudOracleDbAzureVault"));

export { DbmulticloudOracleDbAzureVaultAssociationArgs, DbmulticloudOracleDbAzureVaultAssociationState } from "./dbmulticloudOracleDbAzureVaultAssociation";
export type DbmulticloudOracleDbAzureVaultAssociation = import("./dbmulticloudOracleDbAzureVaultAssociation").DbmulticloudOracleDbAzureVaultAssociation;
export const DbmulticloudOracleDbAzureVaultAssociation: typeof import("./dbmulticloudOracleDbAzureVaultAssociation").DbmulticloudOracleDbAzureVaultAssociation = null as any;
utilities.lazyLoad(exports, ["DbmulticloudOracleDbAzureVaultAssociation"], () => require("./dbmulticloudOracleDbAzureVaultAssociation"));

export { GetApiPlatformApiPlatformInstanceArgs, GetApiPlatformApiPlatformInstanceResult, GetApiPlatformApiPlatformInstanceOutputArgs } from "./getApiPlatformApiPlatformInstance";
export const getApiPlatformApiPlatformInstance: typeof import("./getApiPlatformApiPlatformInstance").getApiPlatformApiPlatformInstance = null as any;
export const getApiPlatformApiPlatformInstanceOutput: typeof import("./getApiPlatformApiPlatformInstance").getApiPlatformApiPlatformInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getApiPlatformApiPlatformInstance","getApiPlatformApiPlatformInstanceOutput"], () => require("./getApiPlatformApiPlatformInstance"));

export { GetApiPlatformApiPlatformInstancesArgs, GetApiPlatformApiPlatformInstancesResult, GetApiPlatformApiPlatformInstancesOutputArgs } from "./getApiPlatformApiPlatformInstances";
export const getApiPlatformApiPlatformInstances: typeof import("./getApiPlatformApiPlatformInstances").getApiPlatformApiPlatformInstances = null as any;
export const getApiPlatformApiPlatformInstancesOutput: typeof import("./getApiPlatformApiPlatformInstances").getApiPlatformApiPlatformInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getApiPlatformApiPlatformInstances","getApiPlatformApiPlatformInstancesOutput"], () => require("./getApiPlatformApiPlatformInstances"));

export { GetApiaccesscontrolApiMetadataArgs, GetApiaccesscontrolApiMetadataResult, GetApiaccesscontrolApiMetadataOutputArgs } from "./getApiaccesscontrolApiMetadata";
export const getApiaccesscontrolApiMetadata: typeof import("./getApiaccesscontrolApiMetadata").getApiaccesscontrolApiMetadata = null as any;
export const getApiaccesscontrolApiMetadataOutput: typeof import("./getApiaccesscontrolApiMetadata").getApiaccesscontrolApiMetadataOutput = null as any;
utilities.lazyLoad(exports, ["getApiaccesscontrolApiMetadata","getApiaccesscontrolApiMetadataOutput"], () => require("./getApiaccesscontrolApiMetadata"));

export { GetApiaccesscontrolApiMetadataByEntityTypesArgs, GetApiaccesscontrolApiMetadataByEntityTypesResult, GetApiaccesscontrolApiMetadataByEntityTypesOutputArgs } from "./getApiaccesscontrolApiMetadataByEntityTypes";
export const getApiaccesscontrolApiMetadataByEntityTypes: typeof import("./getApiaccesscontrolApiMetadataByEntityTypes").getApiaccesscontrolApiMetadataByEntityTypes = null as any;
export const getApiaccesscontrolApiMetadataByEntityTypesOutput: typeof import("./getApiaccesscontrolApiMetadataByEntityTypes").getApiaccesscontrolApiMetadataByEntityTypesOutput = null as any;
utilities.lazyLoad(exports, ["getApiaccesscontrolApiMetadataByEntityTypes","getApiaccesscontrolApiMetadataByEntityTypesOutput"], () => require("./getApiaccesscontrolApiMetadataByEntityTypes"));

export { GetApiaccesscontrolApiMetadatasArgs, GetApiaccesscontrolApiMetadatasResult, GetApiaccesscontrolApiMetadatasOutputArgs } from "./getApiaccesscontrolApiMetadatas";
export const getApiaccesscontrolApiMetadatas: typeof import("./getApiaccesscontrolApiMetadatas").getApiaccesscontrolApiMetadatas = null as any;
export const getApiaccesscontrolApiMetadatasOutput: typeof import("./getApiaccesscontrolApiMetadatas").getApiaccesscontrolApiMetadatasOutput = null as any;
utilities.lazyLoad(exports, ["getApiaccesscontrolApiMetadatas","getApiaccesscontrolApiMetadatasOutput"], () => require("./getApiaccesscontrolApiMetadatas"));

export { GetApiaccesscontrolPrivilegedApiControlArgs, GetApiaccesscontrolPrivilegedApiControlResult, GetApiaccesscontrolPrivilegedApiControlOutputArgs } from "./getApiaccesscontrolPrivilegedApiControl";
export const getApiaccesscontrolPrivilegedApiControl: typeof import("./getApiaccesscontrolPrivilegedApiControl").getApiaccesscontrolPrivilegedApiControl = null as any;
export const getApiaccesscontrolPrivilegedApiControlOutput: typeof import("./getApiaccesscontrolPrivilegedApiControl").getApiaccesscontrolPrivilegedApiControlOutput = null as any;
utilities.lazyLoad(exports, ["getApiaccesscontrolPrivilegedApiControl","getApiaccesscontrolPrivilegedApiControlOutput"], () => require("./getApiaccesscontrolPrivilegedApiControl"));

export { GetApiaccesscontrolPrivilegedApiControlsArgs, GetApiaccesscontrolPrivilegedApiControlsResult, GetApiaccesscontrolPrivilegedApiControlsOutputArgs } from "./getApiaccesscontrolPrivilegedApiControls";
export const getApiaccesscontrolPrivilegedApiControls: typeof import("./getApiaccesscontrolPrivilegedApiControls").getApiaccesscontrolPrivilegedApiControls = null as any;
export const getApiaccesscontrolPrivilegedApiControlsOutput: typeof import("./getApiaccesscontrolPrivilegedApiControls").getApiaccesscontrolPrivilegedApiControlsOutput = null as any;
utilities.lazyLoad(exports, ["getApiaccesscontrolPrivilegedApiControls","getApiaccesscontrolPrivilegedApiControlsOutput"], () => require("./getApiaccesscontrolPrivilegedApiControls"));

export { GetApiaccesscontrolPrivilegedApiRequestArgs, GetApiaccesscontrolPrivilegedApiRequestResult, GetApiaccesscontrolPrivilegedApiRequestOutputArgs } from "./getApiaccesscontrolPrivilegedApiRequest";
export const getApiaccesscontrolPrivilegedApiRequest: typeof import("./getApiaccesscontrolPrivilegedApiRequest").getApiaccesscontrolPrivilegedApiRequest = null as any;
export const getApiaccesscontrolPrivilegedApiRequestOutput: typeof import("./getApiaccesscontrolPrivilegedApiRequest").getApiaccesscontrolPrivilegedApiRequestOutput = null as any;
utilities.lazyLoad(exports, ["getApiaccesscontrolPrivilegedApiRequest","getApiaccesscontrolPrivilegedApiRequestOutput"], () => require("./getApiaccesscontrolPrivilegedApiRequest"));

export { GetApiaccesscontrolPrivilegedApiRequestsArgs, GetApiaccesscontrolPrivilegedApiRequestsResult, GetApiaccesscontrolPrivilegedApiRequestsOutputArgs } from "./getApiaccesscontrolPrivilegedApiRequests";
export const getApiaccesscontrolPrivilegedApiRequests: typeof import("./getApiaccesscontrolPrivilegedApiRequests").getApiaccesscontrolPrivilegedApiRequests = null as any;
export const getApiaccesscontrolPrivilegedApiRequestsOutput: typeof import("./getApiaccesscontrolPrivilegedApiRequests").getApiaccesscontrolPrivilegedApiRequestsOutput = null as any;
utilities.lazyLoad(exports, ["getApiaccesscontrolPrivilegedApiRequests","getApiaccesscontrolPrivilegedApiRequestsOutput"], () => require("./getApiaccesscontrolPrivilegedApiRequests"));

export { GetDbmulticloudMultiCloudResourceDiscoveriesArgs, GetDbmulticloudMultiCloudResourceDiscoveriesResult, GetDbmulticloudMultiCloudResourceDiscoveriesOutputArgs } from "./getDbmulticloudMultiCloudResourceDiscoveries";
export const getDbmulticloudMultiCloudResourceDiscoveries: typeof import("./getDbmulticloudMultiCloudResourceDiscoveries").getDbmulticloudMultiCloudResourceDiscoveries = null as any;
export const getDbmulticloudMultiCloudResourceDiscoveriesOutput: typeof import("./getDbmulticloudMultiCloudResourceDiscoveries").getDbmulticloudMultiCloudResourceDiscoveriesOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudMultiCloudResourceDiscoveries","getDbmulticloudMultiCloudResourceDiscoveriesOutput"], () => require("./getDbmulticloudMultiCloudResourceDiscoveries"));

export { GetDbmulticloudMultiCloudResourceDiscoveryArgs, GetDbmulticloudMultiCloudResourceDiscoveryResult, GetDbmulticloudMultiCloudResourceDiscoveryOutputArgs } from "./getDbmulticloudMultiCloudResourceDiscovery";
export const getDbmulticloudMultiCloudResourceDiscovery: typeof import("./getDbmulticloudMultiCloudResourceDiscovery").getDbmulticloudMultiCloudResourceDiscovery = null as any;
export const getDbmulticloudMultiCloudResourceDiscoveryOutput: typeof import("./getDbmulticloudMultiCloudResourceDiscovery").getDbmulticloudMultiCloudResourceDiscoveryOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudMultiCloudResourceDiscovery","getDbmulticloudMultiCloudResourceDiscoveryOutput"], () => require("./getDbmulticloudMultiCloudResourceDiscovery"));

export { GetDbmulticloudOracleDbAzureBlobContainerArgs, GetDbmulticloudOracleDbAzureBlobContainerResult, GetDbmulticloudOracleDbAzureBlobContainerOutputArgs } from "./getDbmulticloudOracleDbAzureBlobContainer";
export const getDbmulticloudOracleDbAzureBlobContainer: typeof import("./getDbmulticloudOracleDbAzureBlobContainer").getDbmulticloudOracleDbAzureBlobContainer = null as any;
export const getDbmulticloudOracleDbAzureBlobContainerOutput: typeof import("./getDbmulticloudOracleDbAzureBlobContainer").getDbmulticloudOracleDbAzureBlobContainerOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureBlobContainer","getDbmulticloudOracleDbAzureBlobContainerOutput"], () => require("./getDbmulticloudOracleDbAzureBlobContainer"));

export { GetDbmulticloudOracleDbAzureBlobContainersArgs, GetDbmulticloudOracleDbAzureBlobContainersResult, GetDbmulticloudOracleDbAzureBlobContainersOutputArgs } from "./getDbmulticloudOracleDbAzureBlobContainers";
export const getDbmulticloudOracleDbAzureBlobContainers: typeof import("./getDbmulticloudOracleDbAzureBlobContainers").getDbmulticloudOracleDbAzureBlobContainers = null as any;
export const getDbmulticloudOracleDbAzureBlobContainersOutput: typeof import("./getDbmulticloudOracleDbAzureBlobContainers").getDbmulticloudOracleDbAzureBlobContainersOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureBlobContainers","getDbmulticloudOracleDbAzureBlobContainersOutput"], () => require("./getDbmulticloudOracleDbAzureBlobContainers"));

export { GetDbmulticloudOracleDbAzureBlobMountArgs, GetDbmulticloudOracleDbAzureBlobMountResult, GetDbmulticloudOracleDbAzureBlobMountOutputArgs } from "./getDbmulticloudOracleDbAzureBlobMount";
export const getDbmulticloudOracleDbAzureBlobMount: typeof import("./getDbmulticloudOracleDbAzureBlobMount").getDbmulticloudOracleDbAzureBlobMount = null as any;
export const getDbmulticloudOracleDbAzureBlobMountOutput: typeof import("./getDbmulticloudOracleDbAzureBlobMount").getDbmulticloudOracleDbAzureBlobMountOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureBlobMount","getDbmulticloudOracleDbAzureBlobMountOutput"], () => require("./getDbmulticloudOracleDbAzureBlobMount"));

export { GetDbmulticloudOracleDbAzureBlobMountsArgs, GetDbmulticloudOracleDbAzureBlobMountsResult, GetDbmulticloudOracleDbAzureBlobMountsOutputArgs } from "./getDbmulticloudOracleDbAzureBlobMounts";
export const getDbmulticloudOracleDbAzureBlobMounts: typeof import("./getDbmulticloudOracleDbAzureBlobMounts").getDbmulticloudOracleDbAzureBlobMounts = null as any;
export const getDbmulticloudOracleDbAzureBlobMountsOutput: typeof import("./getDbmulticloudOracleDbAzureBlobMounts").getDbmulticloudOracleDbAzureBlobMountsOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureBlobMounts","getDbmulticloudOracleDbAzureBlobMountsOutput"], () => require("./getDbmulticloudOracleDbAzureBlobMounts"));

export { GetDbmulticloudOracleDbAzureConnectorArgs, GetDbmulticloudOracleDbAzureConnectorResult, GetDbmulticloudOracleDbAzureConnectorOutputArgs } from "./getDbmulticloudOracleDbAzureConnector";
export const getDbmulticloudOracleDbAzureConnector: typeof import("./getDbmulticloudOracleDbAzureConnector").getDbmulticloudOracleDbAzureConnector = null as any;
export const getDbmulticloudOracleDbAzureConnectorOutput: typeof import("./getDbmulticloudOracleDbAzureConnector").getDbmulticloudOracleDbAzureConnectorOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureConnector","getDbmulticloudOracleDbAzureConnectorOutput"], () => require("./getDbmulticloudOracleDbAzureConnector"));

export { GetDbmulticloudOracleDbAzureConnectorsArgs, GetDbmulticloudOracleDbAzureConnectorsResult, GetDbmulticloudOracleDbAzureConnectorsOutputArgs } from "./getDbmulticloudOracleDbAzureConnectors";
export const getDbmulticloudOracleDbAzureConnectors: typeof import("./getDbmulticloudOracleDbAzureConnectors").getDbmulticloudOracleDbAzureConnectors = null as any;
export const getDbmulticloudOracleDbAzureConnectorsOutput: typeof import("./getDbmulticloudOracleDbAzureConnectors").getDbmulticloudOracleDbAzureConnectorsOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureConnectors","getDbmulticloudOracleDbAzureConnectorsOutput"], () => require("./getDbmulticloudOracleDbAzureConnectors"));

export { GetDbmulticloudOracleDbAzureKeyArgs, GetDbmulticloudOracleDbAzureKeyResult, GetDbmulticloudOracleDbAzureKeyOutputArgs } from "./getDbmulticloudOracleDbAzureKey";
export const getDbmulticloudOracleDbAzureKey: typeof import("./getDbmulticloudOracleDbAzureKey").getDbmulticloudOracleDbAzureKey = null as any;
export const getDbmulticloudOracleDbAzureKeyOutput: typeof import("./getDbmulticloudOracleDbAzureKey").getDbmulticloudOracleDbAzureKeyOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureKey","getDbmulticloudOracleDbAzureKeyOutput"], () => require("./getDbmulticloudOracleDbAzureKey"));

export { GetDbmulticloudOracleDbAzureKeysArgs, GetDbmulticloudOracleDbAzureKeysResult, GetDbmulticloudOracleDbAzureKeysOutputArgs } from "./getDbmulticloudOracleDbAzureKeys";
export const getDbmulticloudOracleDbAzureKeys: typeof import("./getDbmulticloudOracleDbAzureKeys").getDbmulticloudOracleDbAzureKeys = null as any;
export const getDbmulticloudOracleDbAzureKeysOutput: typeof import("./getDbmulticloudOracleDbAzureKeys").getDbmulticloudOracleDbAzureKeysOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureKeys","getDbmulticloudOracleDbAzureKeysOutput"], () => require("./getDbmulticloudOracleDbAzureKeys"));

export { GetDbmulticloudOracleDbAzureVaultArgs, GetDbmulticloudOracleDbAzureVaultResult, GetDbmulticloudOracleDbAzureVaultOutputArgs } from "./getDbmulticloudOracleDbAzureVault";
export const getDbmulticloudOracleDbAzureVault: typeof import("./getDbmulticloudOracleDbAzureVault").getDbmulticloudOracleDbAzureVault = null as any;
export const getDbmulticloudOracleDbAzureVaultOutput: typeof import("./getDbmulticloudOracleDbAzureVault").getDbmulticloudOracleDbAzureVaultOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureVault","getDbmulticloudOracleDbAzureVaultOutput"], () => require("./getDbmulticloudOracleDbAzureVault"));

export { GetDbmulticloudOracleDbAzureVaultAssociationArgs, GetDbmulticloudOracleDbAzureVaultAssociationResult, GetDbmulticloudOracleDbAzureVaultAssociationOutputArgs } from "./getDbmulticloudOracleDbAzureVaultAssociation";
export const getDbmulticloudOracleDbAzureVaultAssociation: typeof import("./getDbmulticloudOracleDbAzureVaultAssociation").getDbmulticloudOracleDbAzureVaultAssociation = null as any;
export const getDbmulticloudOracleDbAzureVaultAssociationOutput: typeof import("./getDbmulticloudOracleDbAzureVaultAssociation").getDbmulticloudOracleDbAzureVaultAssociationOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureVaultAssociation","getDbmulticloudOracleDbAzureVaultAssociationOutput"], () => require("./getDbmulticloudOracleDbAzureVaultAssociation"));

export { GetDbmulticloudOracleDbAzureVaultAssociationsArgs, GetDbmulticloudOracleDbAzureVaultAssociationsResult, GetDbmulticloudOracleDbAzureVaultAssociationsOutputArgs } from "./getDbmulticloudOracleDbAzureVaultAssociations";
export const getDbmulticloudOracleDbAzureVaultAssociations: typeof import("./getDbmulticloudOracleDbAzureVaultAssociations").getDbmulticloudOracleDbAzureVaultAssociations = null as any;
export const getDbmulticloudOracleDbAzureVaultAssociationsOutput: typeof import("./getDbmulticloudOracleDbAzureVaultAssociations").getDbmulticloudOracleDbAzureVaultAssociationsOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureVaultAssociations","getDbmulticloudOracleDbAzureVaultAssociationsOutput"], () => require("./getDbmulticloudOracleDbAzureVaultAssociations"));

export { GetDbmulticloudOracleDbAzureVaultsArgs, GetDbmulticloudOracleDbAzureVaultsResult, GetDbmulticloudOracleDbAzureVaultsOutputArgs } from "./getDbmulticloudOracleDbAzureVaults";
export const getDbmulticloudOracleDbAzureVaults: typeof import("./getDbmulticloudOracleDbAzureVaults").getDbmulticloudOracleDbAzureVaults = null as any;
export const getDbmulticloudOracleDbAzureVaultsOutput: typeof import("./getDbmulticloudOracleDbAzureVaults").getDbmulticloudOracleDbAzureVaultsOutput = null as any;
utilities.lazyLoad(exports, ["getDbmulticloudOracleDbAzureVaults","getDbmulticloudOracleDbAzureVaultsOutput"], () => require("./getDbmulticloudOracleDbAzureVaults"));

export { GetWlmsManagedInstanceArgs, GetWlmsManagedInstanceResult, GetWlmsManagedInstanceOutputArgs } from "./getWlmsManagedInstance";
export const getWlmsManagedInstance: typeof import("./getWlmsManagedInstance").getWlmsManagedInstance = null as any;
export const getWlmsManagedInstanceOutput: typeof import("./getWlmsManagedInstance").getWlmsManagedInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsManagedInstance","getWlmsManagedInstanceOutput"], () => require("./getWlmsManagedInstance"));

export { GetWlmsManagedInstanceScanResultsArgs, GetWlmsManagedInstanceScanResultsResult, GetWlmsManagedInstanceScanResultsOutputArgs } from "./getWlmsManagedInstanceScanResults";
export const getWlmsManagedInstanceScanResults: typeof import("./getWlmsManagedInstanceScanResults").getWlmsManagedInstanceScanResults = null as any;
export const getWlmsManagedInstanceScanResultsOutput: typeof import("./getWlmsManagedInstanceScanResults").getWlmsManagedInstanceScanResultsOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsManagedInstanceScanResults","getWlmsManagedInstanceScanResultsOutput"], () => require("./getWlmsManagedInstanceScanResults"));

export { GetWlmsManagedInstanceServerArgs, GetWlmsManagedInstanceServerResult, GetWlmsManagedInstanceServerOutputArgs } from "./getWlmsManagedInstanceServer";
export const getWlmsManagedInstanceServer: typeof import("./getWlmsManagedInstanceServer").getWlmsManagedInstanceServer = null as any;
export const getWlmsManagedInstanceServerOutput: typeof import("./getWlmsManagedInstanceServer").getWlmsManagedInstanceServerOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsManagedInstanceServer","getWlmsManagedInstanceServerOutput"], () => require("./getWlmsManagedInstanceServer"));

export { GetWlmsManagedInstanceServerInstalledPatchesArgs, GetWlmsManagedInstanceServerInstalledPatchesResult, GetWlmsManagedInstanceServerInstalledPatchesOutputArgs } from "./getWlmsManagedInstanceServerInstalledPatches";
export const getWlmsManagedInstanceServerInstalledPatches: typeof import("./getWlmsManagedInstanceServerInstalledPatches").getWlmsManagedInstanceServerInstalledPatches = null as any;
export const getWlmsManagedInstanceServerInstalledPatchesOutput: typeof import("./getWlmsManagedInstanceServerInstalledPatches").getWlmsManagedInstanceServerInstalledPatchesOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsManagedInstanceServerInstalledPatches","getWlmsManagedInstanceServerInstalledPatchesOutput"], () => require("./getWlmsManagedInstanceServerInstalledPatches"));

export { GetWlmsManagedInstanceServersArgs, GetWlmsManagedInstanceServersResult, GetWlmsManagedInstanceServersOutputArgs } from "./getWlmsManagedInstanceServers";
export const getWlmsManagedInstanceServers: typeof import("./getWlmsManagedInstanceServers").getWlmsManagedInstanceServers = null as any;
export const getWlmsManagedInstanceServersOutput: typeof import("./getWlmsManagedInstanceServers").getWlmsManagedInstanceServersOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsManagedInstanceServers","getWlmsManagedInstanceServersOutput"], () => require("./getWlmsManagedInstanceServers"));

export { GetWlmsManagedInstancesArgs, GetWlmsManagedInstancesResult, GetWlmsManagedInstancesOutputArgs } from "./getWlmsManagedInstances";
export const getWlmsManagedInstances: typeof import("./getWlmsManagedInstances").getWlmsManagedInstances = null as any;
export const getWlmsManagedInstancesOutput: typeof import("./getWlmsManagedInstances").getWlmsManagedInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsManagedInstances","getWlmsManagedInstancesOutput"], () => require("./getWlmsManagedInstances"));

export { GetWlmsWlsDomainArgs, GetWlmsWlsDomainResult, GetWlmsWlsDomainOutputArgs } from "./getWlmsWlsDomain";
export const getWlmsWlsDomain: typeof import("./getWlmsWlsDomain").getWlmsWlsDomain = null as any;
export const getWlmsWlsDomainOutput: typeof import("./getWlmsWlsDomain").getWlmsWlsDomainOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomain","getWlmsWlsDomainOutput"], () => require("./getWlmsWlsDomain"));

export { GetWlmsWlsDomainAgreementRecordsArgs, GetWlmsWlsDomainAgreementRecordsResult, GetWlmsWlsDomainAgreementRecordsOutputArgs } from "./getWlmsWlsDomainAgreementRecords";
export const getWlmsWlsDomainAgreementRecords: typeof import("./getWlmsWlsDomainAgreementRecords").getWlmsWlsDomainAgreementRecords = null as any;
export const getWlmsWlsDomainAgreementRecordsOutput: typeof import("./getWlmsWlsDomainAgreementRecords").getWlmsWlsDomainAgreementRecordsOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainAgreementRecords","getWlmsWlsDomainAgreementRecordsOutput"], () => require("./getWlmsWlsDomainAgreementRecords"));

export { GetWlmsWlsDomainApplicablePatchesArgs, GetWlmsWlsDomainApplicablePatchesResult, GetWlmsWlsDomainApplicablePatchesOutputArgs } from "./getWlmsWlsDomainApplicablePatches";
export const getWlmsWlsDomainApplicablePatches: typeof import("./getWlmsWlsDomainApplicablePatches").getWlmsWlsDomainApplicablePatches = null as any;
export const getWlmsWlsDomainApplicablePatchesOutput: typeof import("./getWlmsWlsDomainApplicablePatches").getWlmsWlsDomainApplicablePatchesOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainApplicablePatches","getWlmsWlsDomainApplicablePatchesOutput"], () => require("./getWlmsWlsDomainApplicablePatches"));

export { GetWlmsWlsDomainScanResultsArgs, GetWlmsWlsDomainScanResultsResult, GetWlmsWlsDomainScanResultsOutputArgs } from "./getWlmsWlsDomainScanResults";
export const getWlmsWlsDomainScanResults: typeof import("./getWlmsWlsDomainScanResults").getWlmsWlsDomainScanResults = null as any;
export const getWlmsWlsDomainScanResultsOutput: typeof import("./getWlmsWlsDomainScanResults").getWlmsWlsDomainScanResultsOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainScanResults","getWlmsWlsDomainScanResultsOutput"], () => require("./getWlmsWlsDomainScanResults"));

export { GetWlmsWlsDomainServerArgs, GetWlmsWlsDomainServerResult, GetWlmsWlsDomainServerOutputArgs } from "./getWlmsWlsDomainServer";
export const getWlmsWlsDomainServer: typeof import("./getWlmsWlsDomainServer").getWlmsWlsDomainServer = null as any;
export const getWlmsWlsDomainServerOutput: typeof import("./getWlmsWlsDomainServer").getWlmsWlsDomainServerOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainServer","getWlmsWlsDomainServerOutput"], () => require("./getWlmsWlsDomainServer"));

export { GetWlmsWlsDomainServerBackupArgs, GetWlmsWlsDomainServerBackupResult, GetWlmsWlsDomainServerBackupOutputArgs } from "./getWlmsWlsDomainServerBackup";
export const getWlmsWlsDomainServerBackup: typeof import("./getWlmsWlsDomainServerBackup").getWlmsWlsDomainServerBackup = null as any;
export const getWlmsWlsDomainServerBackupOutput: typeof import("./getWlmsWlsDomainServerBackup").getWlmsWlsDomainServerBackupOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainServerBackup","getWlmsWlsDomainServerBackupOutput"], () => require("./getWlmsWlsDomainServerBackup"));

export { GetWlmsWlsDomainServerBackupContentArgs, GetWlmsWlsDomainServerBackupContentResult, GetWlmsWlsDomainServerBackupContentOutputArgs } from "./getWlmsWlsDomainServerBackupContent";
export const getWlmsWlsDomainServerBackupContent: typeof import("./getWlmsWlsDomainServerBackupContent").getWlmsWlsDomainServerBackupContent = null as any;
export const getWlmsWlsDomainServerBackupContentOutput: typeof import("./getWlmsWlsDomainServerBackupContent").getWlmsWlsDomainServerBackupContentOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainServerBackupContent","getWlmsWlsDomainServerBackupContentOutput"], () => require("./getWlmsWlsDomainServerBackupContent"));

export { GetWlmsWlsDomainServerBackupsArgs, GetWlmsWlsDomainServerBackupsResult, GetWlmsWlsDomainServerBackupsOutputArgs } from "./getWlmsWlsDomainServerBackups";
export const getWlmsWlsDomainServerBackups: typeof import("./getWlmsWlsDomainServerBackups").getWlmsWlsDomainServerBackups = null as any;
export const getWlmsWlsDomainServerBackupsOutput: typeof import("./getWlmsWlsDomainServerBackups").getWlmsWlsDomainServerBackupsOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainServerBackups","getWlmsWlsDomainServerBackupsOutput"], () => require("./getWlmsWlsDomainServerBackups"));

export { GetWlmsWlsDomainServerInstalledPatchesArgs, GetWlmsWlsDomainServerInstalledPatchesResult, GetWlmsWlsDomainServerInstalledPatchesOutputArgs } from "./getWlmsWlsDomainServerInstalledPatches";
export const getWlmsWlsDomainServerInstalledPatches: typeof import("./getWlmsWlsDomainServerInstalledPatches").getWlmsWlsDomainServerInstalledPatches = null as any;
export const getWlmsWlsDomainServerInstalledPatchesOutput: typeof import("./getWlmsWlsDomainServerInstalledPatches").getWlmsWlsDomainServerInstalledPatchesOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainServerInstalledPatches","getWlmsWlsDomainServerInstalledPatchesOutput"], () => require("./getWlmsWlsDomainServerInstalledPatches"));

export { GetWlmsWlsDomainServersArgs, GetWlmsWlsDomainServersResult, GetWlmsWlsDomainServersOutputArgs } from "./getWlmsWlsDomainServers";
export const getWlmsWlsDomainServers: typeof import("./getWlmsWlsDomainServers").getWlmsWlsDomainServers = null as any;
export const getWlmsWlsDomainServersOutput: typeof import("./getWlmsWlsDomainServers").getWlmsWlsDomainServersOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomainServers","getWlmsWlsDomainServersOutput"], () => require("./getWlmsWlsDomainServers"));

export { GetWlmsWlsDomainsArgs, GetWlmsWlsDomainsResult, GetWlmsWlsDomainsOutputArgs } from "./getWlmsWlsDomains";
export const getWlmsWlsDomains: typeof import("./getWlmsWlsDomains").getWlmsWlsDomains = null as any;
export const getWlmsWlsDomainsOutput: typeof import("./getWlmsWlsDomains").getWlmsWlsDomainsOutput = null as any;
utilities.lazyLoad(exports, ["getWlmsWlsDomains","getWlmsWlsDomainsOutput"], () => require("./getWlmsWlsDomains"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:oci/apiPlatformApiPlatformInstance:ApiPlatformApiPlatformInstance":
                return new ApiPlatformApiPlatformInstance(name, <any>undefined, { urn })
            case "oci:oci/apiaccesscontrolPrivilegedApiControl:ApiaccesscontrolPrivilegedApiControl":
                return new ApiaccesscontrolPrivilegedApiControl(name, <any>undefined, { urn })
            case "oci:oci/apiaccesscontrolPrivilegedApiRequest:ApiaccesscontrolPrivilegedApiRequest":
                return new ApiaccesscontrolPrivilegedApiRequest(name, <any>undefined, { urn })
            case "oci:oci/dbmulticloudMultiCloudResourceDiscovery:DbmulticloudMultiCloudResourceDiscovery":
                return new DbmulticloudMultiCloudResourceDiscovery(name, <any>undefined, { urn })
            case "oci:oci/dbmulticloudOracleDbAzureBlobContainer:DbmulticloudOracleDbAzureBlobContainer":
                return new DbmulticloudOracleDbAzureBlobContainer(name, <any>undefined, { urn })
            case "oci:oci/dbmulticloudOracleDbAzureBlobMount:DbmulticloudOracleDbAzureBlobMount":
                return new DbmulticloudOracleDbAzureBlobMount(name, <any>undefined, { urn })
            case "oci:oci/dbmulticloudOracleDbAzureConnector:DbmulticloudOracleDbAzureConnector":
                return new DbmulticloudOracleDbAzureConnector(name, <any>undefined, { urn })
            case "oci:oci/dbmulticloudOracleDbAzureVault:DbmulticloudOracleDbAzureVault":
                return new DbmulticloudOracleDbAzureVault(name, <any>undefined, { urn })
            case "oci:oci/dbmulticloudOracleDbAzureVaultAssociation:DbmulticloudOracleDbAzureVaultAssociation":
                return new DbmulticloudOracleDbAzureVaultAssociation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "oci/apiPlatformApiPlatformInstance", _module)
pulumi.runtime.registerResourceModule("oci", "oci/apiaccesscontrolPrivilegedApiControl", _module)
pulumi.runtime.registerResourceModule("oci", "oci/apiaccesscontrolPrivilegedApiRequest", _module)
pulumi.runtime.registerResourceModule("oci", "oci/dbmulticloudMultiCloudResourceDiscovery", _module)
pulumi.runtime.registerResourceModule("oci", "oci/dbmulticloudOracleDbAzureBlobContainer", _module)
pulumi.runtime.registerResourceModule("oci", "oci/dbmulticloudOracleDbAzureBlobMount", _module)
pulumi.runtime.registerResourceModule("oci", "oci/dbmulticloudOracleDbAzureConnector", _module)
pulumi.runtime.registerResourceModule("oci", "oci/dbmulticloudOracleDbAzureVault", _module)
pulumi.runtime.registerResourceModule("oci", "oci/dbmulticloudOracleDbAzureVaultAssociation", _module)
