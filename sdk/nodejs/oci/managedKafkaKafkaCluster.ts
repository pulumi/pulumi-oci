// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Kafka Cluster resource in Oracle Cloud Infrastructure Managed Kafka service.
 *
 * Creates a KafkaCluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testKafkaCluster = new oci.oci.ManagedKafkaKafkaCluster("test_kafka_cluster", {
 *     accessSubnets: [{
 *         subnets: kafkaClusterAccessSubnetsSubnets,
 *     }],
 *     brokerShape: {
 *         nodeCount: kafkaClusterBrokerShapeNodeCount,
 *         ocpuCount: kafkaClusterBrokerShapeOcpuCount,
 *         storageSizeInGbs: kafkaClusterBrokerShapeStorageSizeInGbs,
 *     },
 *     clusterConfigId: testConfig.id,
 *     clusterConfigVersion: kafkaClusterClusterConfigVersion,
 *     clusterType: kafkaClusterClusterType,
 *     compartmentId: compartmentId,
 *     coordinationType: kafkaClusterCoordinationType,
 *     kafkaVersion: kafkaClusterKafkaVersion,
 *     clientCertificateBundle: kafkaClusterClientCertificateBundle,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     displayName: kafkaClusterDisplayName,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * KafkaClusters can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:oci/managedKafkaKafkaCluster:ManagedKafkaKafkaCluster test_kafka_cluster "id"
 * ```
 */
export class ManagedKafkaKafkaCluster extends pulumi.CustomResource {
    /**
     * Get an existing ManagedKafkaKafkaCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedKafkaKafkaClusterState, opts?: pulumi.CustomResourceOptions): ManagedKafkaKafkaCluster {
        return new ManagedKafkaKafkaCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:oci/managedKafkaKafkaCluster:ManagedKafkaKafkaCluster';

    /**
     * Returns true if the given object is an instance of ManagedKafkaKafkaCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedKafkaKafkaCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedKafkaKafkaCluster.__pulumiType;
    }

    /**
     * (Updatable) Subnets where broker/coordinator VNICs will be created.
     */
    public readonly accessSubnets!: pulumi.Output<outputs.oci.ManagedKafkaKafkaClusterAccessSubnet[]>;
    /**
     * (Updatable) Configuration of the broker node.
     */
    public readonly brokerShape!: pulumi.Output<outputs.oci.ManagedKafkaKafkaClusterBrokerShape>;
    /**
     * (Updatable) CA certificate bundle for mTLS broker authentication.
     */
    public readonly clientCertificateBundle!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
     */
    public readonly clusterConfigId!: pulumi.Output<string>;
    /**
     * (Updatable) The version of configuration object
     */
    public readonly clusterConfigVersion!: pulumi.Output<number>;
    /**
     * Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
     */
    public readonly clusterType!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Kafka coordination type. Set of available types depends on Kafka version
     */
    public readonly coordinationType!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * Bootstrap URL that can be used to connect to Kafka
     */
    public /*out*/ readonly kafkaBootstrapUrls!: pulumi.Output<outputs.oci.ManagedKafkaKafkaClusterKafkaBootstrapUrl[]>;
    /**
     * Version of Kafka to use to spin up the cluster
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly kafkaVersion!: pulumi.Output<string>;
    /**
     * A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
     */
    public /*out*/ readonly secretId!: pulumi.Output<string>;
    /**
     * The current state of the KafkaCluster.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a ManagedKafkaKafkaCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedKafkaKafkaClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedKafkaKafkaClusterArgs | ManagedKafkaKafkaClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedKafkaKafkaClusterState | undefined;
            resourceInputs["accessSubnets"] = state ? state.accessSubnets : undefined;
            resourceInputs["brokerShape"] = state ? state.brokerShape : undefined;
            resourceInputs["clientCertificateBundle"] = state ? state.clientCertificateBundle : undefined;
            resourceInputs["clusterConfigId"] = state ? state.clusterConfigId : undefined;
            resourceInputs["clusterConfigVersion"] = state ? state.clusterConfigVersion : undefined;
            resourceInputs["clusterType"] = state ? state.clusterType : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["coordinationType"] = state ? state.coordinationType : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["kafkaBootstrapUrls"] = state ? state.kafkaBootstrapUrls : undefined;
            resourceInputs["kafkaVersion"] = state ? state.kafkaVersion : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["secretId"] = state ? state.secretId : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as ManagedKafkaKafkaClusterArgs | undefined;
            if ((!args || args.accessSubnets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessSubnets'");
            }
            if ((!args || args.brokerShape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'brokerShape'");
            }
            if ((!args || args.clusterConfigId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterConfigId'");
            }
            if ((!args || args.clusterConfigVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterConfigVersion'");
            }
            if ((!args || args.clusterType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterType'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.coordinationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'coordinationType'");
            }
            if ((!args || args.kafkaVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kafkaVersion'");
            }
            resourceInputs["accessSubnets"] = args ? args.accessSubnets : undefined;
            resourceInputs["brokerShape"] = args ? args.brokerShape : undefined;
            resourceInputs["clientCertificateBundle"] = args ? args.clientCertificateBundle : undefined;
            resourceInputs["clusterConfigId"] = args ? args.clusterConfigId : undefined;
            resourceInputs["clusterConfigVersion"] = args ? args.clusterConfigVersion : undefined;
            resourceInputs["clusterType"] = args ? args.clusterType : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["coordinationType"] = args ? args.coordinationType : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["kafkaVersion"] = args ? args.kafkaVersion : undefined;
            resourceInputs["kafkaBootstrapUrls"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["secretId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedKafkaKafkaCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedKafkaKafkaCluster resources.
 */
export interface ManagedKafkaKafkaClusterState {
    /**
     * (Updatable) Subnets where broker/coordinator VNICs will be created.
     */
    accessSubnets?: pulumi.Input<pulumi.Input<inputs.oci.ManagedKafkaKafkaClusterAccessSubnet>[]>;
    /**
     * (Updatable) Configuration of the broker node.
     */
    brokerShape?: pulumi.Input<inputs.oci.ManagedKafkaKafkaClusterBrokerShape>;
    /**
     * (Updatable) CA certificate bundle for mTLS broker authentication.
     */
    clientCertificateBundle?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
     */
    clusterConfigId?: pulumi.Input<string>;
    /**
     * (Updatable) The version of configuration object
     */
    clusterConfigVersion?: pulumi.Input<number>;
    /**
     * Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
     */
    clusterType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Kafka coordination type. Set of available types depends on Kafka version
     */
    coordinationType?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Bootstrap URL that can be used to connect to Kafka
     */
    kafkaBootstrapUrls?: pulumi.Input<pulumi.Input<inputs.oci.ManagedKafkaKafkaClusterKafkaBootstrapUrl>[]>;
    /**
     * Version of Kafka to use to spin up the cluster
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    kafkaVersion?: pulumi.Input<string>;
    /**
     * A message that describes the current state of the KafkaCluster in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret that contains superuser password.
     */
    secretId?: pulumi.Input<string>;
    /**
     * The current state of the KafkaCluster.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the KafkaCluster was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the KafkaCluster was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagedKafkaKafkaCluster resource.
 */
export interface ManagedKafkaKafkaClusterArgs {
    /**
     * (Updatable) Subnets where broker/coordinator VNICs will be created.
     */
    accessSubnets: pulumi.Input<pulumi.Input<inputs.oci.ManagedKafkaKafkaClusterAccessSubnet>[]>;
    /**
     * (Updatable) Configuration of the broker node.
     */
    brokerShape: pulumi.Input<inputs.oci.ManagedKafkaKafkaClusterBrokerShape>;
    /**
     * (Updatable) CA certificate bundle for mTLS broker authentication.
     */
    clientCertificateBundle?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of Kafka Cluster configuration object
     */
    clusterConfigId: pulumi.Input<string>;
    /**
     * (Updatable) The version of configuration object
     */
    clusterConfigVersion: pulumi.Input<number>;
    /**
     * Type of the cluster to spin up.  DEVELOPMENT - setting that allows to sacrifice HA and spin up cluster on single node PRODUCTION - Minimum allowed broker count is 3
     */
    clusterType: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to create the KafkaCluster in.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Kafka coordination type. Set of available types depends on Kafka version
     */
    coordinationType: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Version of Kafka to use to spin up the cluster
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    kafkaVersion: pulumi.Input<string>;
}
