// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Esxi Hosts in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
 *
 * Lists the ESXi hosts in the specified SDDC. The list can be filtered
 * by Compute instance OCID or ESXi display name.
 *
 * Remember that in terms of implementation, an ESXi host is a Compute instance that
 * is configured with the chosen bundle of VMware software. Each `EsxiHost`
 * object has its own OCID (`id`), and a separate attribute for the OCID of
 * the Compute instance (`computeInstanceId`). When filtering the list of
 * ESXi hosts, you can specify the OCID of the Compute instance, not the
 * ESXi host OCID.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEsxiHosts = oci.Ocvp.getExsiHosts({
 *     clusterId: testCluster.id,
 *     compartmentId: compartmentId,
 *     computeInstanceId: testInstance.id,
 *     displayName: esxiHostDisplayName,
 *     isBillingDonorsOnly: esxiHostIsBillingDonorsOnly,
 *     isSwapBillingOnly: esxiHostIsSwapBillingOnly,
 *     sddcId: testSddc.id,
 *     state: esxiHostState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getExsiHosts(args?: GetExsiHostsArgs, opts?: pulumi.InvokeOptions): Promise<GetExsiHostsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Ocvp/getExsiHosts:getExsiHosts", {
        "clusterId": args.clusterId,
        "compartmentId": args.compartmentId,
        "computeInstanceId": args.computeInstanceId,
        "displayName": args.displayName,
        "filters": args.filters,
        "isBillingDonorsOnly": args.isBillingDonorsOnly,
        "isSwapBillingOnly": args.isSwapBillingOnly,
        "sddcId": args.sddcId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getExsiHosts.
 */
export interface GetExsiHostsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster.
     */
    clusterId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment as optional parameter.
     */
    compartmentId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
     */
    computeInstanceId?: string;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: string;
    filters?: inputs.Ocvp.GetExsiHostsFilter[];
    /**
     * If this flag/param is set to True, we return only deleted hosts with LeftOver billingCycle.
     */
    isBillingDonorsOnly?: boolean;
    /**
     * If this flag/param is set to True, we return only active hosts.
     */
    isSwapBillingOnly?: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     */
    sddcId?: string;
    /**
     * The lifecycle state of the resource.
     */
    state?: string;
}

/**
 * A collection of values returned by getExsiHosts.
 */
export interface GetExsiHostsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster that the ESXi host belongs to.
     */
    readonly clusterId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the Cluster.
     */
    readonly compartmentId?: string;
    /**
     * In terms of implementation, an ESXi host is a Compute instance that is configured with the chosen bundle of VMware software. The `computeInstanceId` is the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that Compute instance.
     */
    readonly computeInstanceId?: string;
    /**
     * A descriptive name for the ESXi host. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    /**
     * The list of esxi_host_collection.
     */
    readonly esxiHostCollections: outputs.Ocvp.GetExsiHostsEsxiHostCollection[];
    readonly filters?: outputs.Ocvp.GetExsiHostsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isBillingDonorsOnly?: boolean;
    readonly isSwapBillingOnly?: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC that the ESXi host belongs to.
     */
    readonly sddcId?: string;
    /**
     * The current state of the ESXi host.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Esxi Hosts in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
 *
 * Lists the ESXi hosts in the specified SDDC. The list can be filtered
 * by Compute instance OCID or ESXi display name.
 *
 * Remember that in terms of implementation, an ESXi host is a Compute instance that
 * is configured with the chosen bundle of VMware software. Each `EsxiHost`
 * object has its own OCID (`id`), and a separate attribute for the OCID of
 * the Compute instance (`computeInstanceId`). When filtering the list of
 * ESXi hosts, you can specify the OCID of the Compute instance, not the
 * ESXi host OCID.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEsxiHosts = oci.Ocvp.getExsiHosts({
 *     clusterId: testCluster.id,
 *     compartmentId: compartmentId,
 *     computeInstanceId: testInstance.id,
 *     displayName: esxiHostDisplayName,
 *     isBillingDonorsOnly: esxiHostIsBillingDonorsOnly,
 *     isSwapBillingOnly: esxiHostIsSwapBillingOnly,
 *     sddcId: testSddc.id,
 *     state: esxiHostState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getExsiHostsOutput(args?: GetExsiHostsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExsiHostsResult> {
    return pulumi.output(args).apply((a: any) => getExsiHosts(a, opts))
}

/**
 * A collection of arguments for invoking getExsiHosts.
 */
export interface GetExsiHostsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment as optional parameter.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
     */
    computeInstanceId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given display name exactly.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Ocvp.GetExsiHostsFilterArgs>[]>;
    /**
     * If this flag/param is set to True, we return only deleted hosts with LeftOver billingCycle.
     */
    isBillingDonorsOnly?: pulumi.Input<boolean>;
    /**
     * If this flag/param is set to True, we return only active hosts.
     */
    isSwapBillingOnly?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     */
    sddcId?: pulumi.Input<string>;
    /**
     * The lifecycle state of the resource.
     */
    state?: pulumi.Input<string>;
}
