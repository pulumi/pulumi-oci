// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Supported Host Shapes in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
 *
 * Lists supported compute shapes for ESXi hosts.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSupportedHostShapes = oci.Ocvp.getSupportedHostShapes({
 *     compartmentId: compartmentId,
 *     initialHostShapeName: testShape.name,
 *     isSingleHostSddcSupported: supportedHostShapeIsSingleHostSddcSupported,
 *     name: supportedHostShapeName,
 * });
 * ```
 */
export function getSupportedHostShapes(args: GetSupportedHostShapesArgs, opts?: pulumi.InvokeOptions): Promise<GetSupportedHostShapesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Ocvp/getSupportedHostShapes:getSupportedHostShapes", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "initialHostShapeName": args.initialHostShapeName,
        "isSingleHostSddcSupported": args.isSingleHostSddcSupported,
        "name": args.name,
        "sddcType": args.sddcType,
    }, opts);
}

/**
 * A collection of arguments for invoking getSupportedHostShapes.
 */
export interface GetSupportedHostShapesArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    filters?: inputs.Ocvp.GetSupportedHostShapesFilter[];
    /**
     * A filter to return only the shapes compatible with the initial host shape of the Cluster.
     */
    initialHostShapeName?: string;
    /**
     * A filter to return only resources that support single host SDDC.
     */
    isSingleHostSddcSupported?: boolean;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name?: string;
    /**
     * (Optional) A filter to return only resources that match the given SDDC type exactly.
     *
     * @deprecated The 'sddc_type' field has been deprecated. Please use 'is_single_host_sddc_supported' instead.
     */
    sddcType?: string;
}

/**
 * A collection of values returned by getSupportedHostShapes.
 */
export interface GetSupportedHostShapesResult {
    readonly compartmentId: string;
    readonly filters?: outputs.Ocvp.GetSupportedHostShapesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly initialHostShapeName?: string;
    /**
     * Indicates whether the shape supports single host SDDCs.
     */
    readonly isSingleHostSddcSupported?: boolean;
    /**
     * A list of the supported compute shapes for ESXi hosts.
     */
    readonly items: outputs.Ocvp.GetSupportedHostShapesItem[];
    /**
     * The name of the supported compute shape.
     */
    readonly name?: string;
    /**
     * @deprecated The 'sddc_type' field has been deprecated. Please use 'is_single_host_sddc_supported' instead.
     */
    readonly sddcType?: string;
}
/**
 * This data source provides the list of Supported Host Shapes in Oracle Cloud Infrastructure Oracle Cloud VMware Solution service.
 *
 * Lists supported compute shapes for ESXi hosts.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSupportedHostShapes = oci.Ocvp.getSupportedHostShapes({
 *     compartmentId: compartmentId,
 *     initialHostShapeName: testShape.name,
 *     isSingleHostSddcSupported: supportedHostShapeIsSingleHostSddcSupported,
 *     name: supportedHostShapeName,
 * });
 * ```
 */
export function getSupportedHostShapesOutput(args: GetSupportedHostShapesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSupportedHostShapesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Ocvp/getSupportedHostShapes:getSupportedHostShapes", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "initialHostShapeName": args.initialHostShapeName,
        "isSingleHostSddcSupported": args.isSingleHostSddcSupported,
        "name": args.name,
        "sddcType": args.sddcType,
    }, opts);
}

/**
 * A collection of arguments for invoking getSupportedHostShapes.
 */
export interface GetSupportedHostShapesOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Ocvp.GetSupportedHostShapesFilterArgs>[]>;
    /**
     * A filter to return only the shapes compatible with the initial host shape of the Cluster.
     */
    initialHostShapeName?: pulumi.Input<string>;
    /**
     * A filter to return only resources that support single host SDDC.
     */
    isSingleHostSddcSupported?: pulumi.Input<boolean>;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name?: pulumi.Input<string>;
    /**
     * (Optional) A filter to return only resources that match the given SDDC type exactly.
     *
     * @deprecated The 'sddc_type' field has been deprecated. Please use 'is_single_host_sddc_supported' instead.
     */
    sddcType?: pulumi.Input<string>;
}
