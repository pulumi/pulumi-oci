// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Oda Instance resource in Oracle Cloud Infrastructure Digital Assistant service.
 *
 * Starts an asynchronous job to create a Digital Assistant instance.
 *
 * To monitor the status of the job, take the `opc-work-request-id` response
 * header value and use it to call `GET /workRequests/{workRequestId}`.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOdaInstance = new oci.oda.OdaInstance("test_oda_instance", {
 *     compartmentId: compartmentId,
 *     shapeName: "DEVELOPMENT",
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: odaInstanceDescription,
 *     displayName: odaInstanceDisplayName,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     identityDomain: odaInstanceIdentityDomain,
 *     isRoleBasedAccess: odaInstanceIsRoleBasedAccess,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * OdaInstances can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Oda/odaInstance:OdaInstance test_oda_instance "id"
 * ```
 */
export class OdaInstance extends pulumi.CustomResource {
    /**
     * Get an existing OdaInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OdaInstanceState, opts?: pulumi.CustomResourceOptions): OdaInstance {
        return new OdaInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Oda/odaInstance:OdaInstance';

    /**
     * Returns true if the given object is an instance of OdaInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OdaInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OdaInstance.__pulumiType;
    }

    /**
     * A list of attachment identifiers for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
     */
    public /*out*/ readonly attachmentIds!: pulumi.Output<string[]>;
    /**
     * A list of attachment types for this instance (if any). Use attachmentIds to get the details of the attachments.
     */
    public /*out*/ readonly attachmentTypes!: pulumi.Output<string[]>;
    /**
     * (Updatable) Identifier of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * URL for the connector's endpoint.
     */
    public /*out*/ readonly connectorUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Description of the Digital Assistant instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * If isRoleBasedAccess is set to true, this property specifies the URL for the administration console used to manage the Identity Application instance Digital Assistant has created inside the user-specified identity domain.
     */
    public /*out*/ readonly identityAppConsoleUrl!: pulumi.Output<string>;
    /**
     * If isRoleBasedAccess is set to true, this property specifies the GUID of the Identity Application instance Digital Assistant has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this Digital Assistant instance for users within the identity domain.
     */
    public /*out*/ readonly identityAppGuid!: pulumi.Output<string>;
    /**
     * If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
     */
    public readonly identityDomain!: pulumi.Output<string>;
    /**
     * A list of package ids imported into this instance (if any). Use GetImportedPackage to get the details of the imported packages.
     */
    public /*out*/ readonly importedPackageIds!: pulumi.Output<string[]>;
    /**
     * A list of package names imported into this instance (if any). Use importedPackageIds field to get the details of the imported packages.
     */
    public /*out*/ readonly importedPackageNames!: pulumi.Output<string[]>;
    /**
     * Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
     */
    public readonly isRoleBasedAccess!: pulumi.Output<boolean>;
    /**
     * The current sub-state of the Digital Assistant instance.
     */
    public /*out*/ readonly lifecycleSubState!: pulumi.Output<string>;
    /**
     * A list of restricted operations (across all attachments) for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
     */
    public /*out*/ readonly restrictedOperations!: pulumi.Output<outputs.Oda.OdaInstanceRestrictedOperation[]>;
    /**
     * Shape or size of the instance.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly shapeName!: pulumi.Output<string>;
    /**
     * The current state of the Digital Assistant instance.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * A message that describes the current state in more detail. For example, actionable information about an instance that's in the `FAILED` state.
     */
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    /**
     * When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * URL for the Digital Assistant web application that's associated with the instance.
     */
    public /*out*/ readonly webAppUrl!: pulumi.Output<string>;

    /**
     * Create a OdaInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OdaInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OdaInstanceArgs | OdaInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OdaInstanceState | undefined;
            resourceInputs["attachmentIds"] = state ? state.attachmentIds : undefined;
            resourceInputs["attachmentTypes"] = state ? state.attachmentTypes : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectorUrl"] = state ? state.connectorUrl : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["identityAppConsoleUrl"] = state ? state.identityAppConsoleUrl : undefined;
            resourceInputs["identityAppGuid"] = state ? state.identityAppGuid : undefined;
            resourceInputs["identityDomain"] = state ? state.identityDomain : undefined;
            resourceInputs["importedPackageIds"] = state ? state.importedPackageIds : undefined;
            resourceInputs["importedPackageNames"] = state ? state.importedPackageNames : undefined;
            resourceInputs["isRoleBasedAccess"] = state ? state.isRoleBasedAccess : undefined;
            resourceInputs["lifecycleSubState"] = state ? state.lifecycleSubState : undefined;
            resourceInputs["restrictedOperations"] = state ? state.restrictedOperations : undefined;
            resourceInputs["shapeName"] = state ? state.shapeName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["webAppUrl"] = state ? state.webAppUrl : undefined;
        } else {
            const args = argsOrState as OdaInstanceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.shapeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shapeName'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["identityDomain"] = args ? args.identityDomain : undefined;
            resourceInputs["isRoleBasedAccess"] = args ? args.isRoleBasedAccess : undefined;
            resourceInputs["shapeName"] = args ? args.shapeName : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["attachmentIds"] = undefined /*out*/;
            resourceInputs["attachmentTypes"] = undefined /*out*/;
            resourceInputs["connectorUrl"] = undefined /*out*/;
            resourceInputs["identityAppConsoleUrl"] = undefined /*out*/;
            resourceInputs["identityAppGuid"] = undefined /*out*/;
            resourceInputs["importedPackageIds"] = undefined /*out*/;
            resourceInputs["importedPackageNames"] = undefined /*out*/;
            resourceInputs["lifecycleSubState"] = undefined /*out*/;
            resourceInputs["restrictedOperations"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["webAppUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OdaInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OdaInstance resources.
 */
export interface OdaInstanceState {
    /**
     * A list of attachment identifiers for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
     */
    attachmentIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of attachment types for this instance (if any). Use attachmentIds to get the details of the attachments.
     */
    attachmentTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Identifier of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * URL for the connector's endpoint.
     */
    connectorUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Description of the Digital Assistant instance.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * If isRoleBasedAccess is set to true, this property specifies the URL for the administration console used to manage the Identity Application instance Digital Assistant has created inside the user-specified identity domain.
     */
    identityAppConsoleUrl?: pulumi.Input<string>;
    /**
     * If isRoleBasedAccess is set to true, this property specifies the GUID of the Identity Application instance Digital Assistant has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this Digital Assistant instance for users within the identity domain.
     */
    identityAppGuid?: pulumi.Input<string>;
    /**
     * If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
     */
    identityDomain?: pulumi.Input<string>;
    /**
     * A list of package ids imported into this instance (if any). Use GetImportedPackage to get the details of the imported packages.
     */
    importedPackageIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of package names imported into this instance (if any). Use importedPackageIds field to get the details of the imported packages.
     */
    importedPackageNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
     */
    isRoleBasedAccess?: pulumi.Input<boolean>;
    /**
     * The current sub-state of the Digital Assistant instance.
     */
    lifecycleSubState?: pulumi.Input<string>;
    /**
     * A list of restricted operations (across all attachments) for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
     */
    restrictedOperations?: pulumi.Input<pulumi.Input<inputs.Oda.OdaInstanceRestrictedOperation>[]>;
    /**
     * Shape or size of the instance.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    shapeName?: pulumi.Input<string>;
    /**
     * The current state of the Digital Assistant instance.
     */
    state?: pulumi.Input<string>;
    /**
     * A message that describes the current state in more detail. For example, actionable information about an instance that's in the `FAILED` state.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * URL for the Digital Assistant web application that's associated with the instance.
     */
    webAppUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OdaInstance resource.
 */
export interface OdaInstanceArgs {
    /**
     * (Updatable) Identifier of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Description of the Digital Assistant instance.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
     */
    identityDomain?: pulumi.Input<string>;
    /**
     * Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
     */
    isRoleBasedAccess?: pulumi.Input<boolean>;
    /**
     * Shape or size of the instance.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    shapeName: pulumi.Input<string>;
    /**
     * The current state of the Digital Assistant instance.
     */
    state?: pulumi.Input<string>;
}
