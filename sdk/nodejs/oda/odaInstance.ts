// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Oda Instance resource in Oracle Cloud Infrastructure Digital Assistant service.
 *
 * Starts an asynchronous job to create a Digital Assistant instance.
 *
 * To monitor the status of the job, take the `opc-work-request-id` response
 * header value and use it to call `GET /workRequests/{workRequestID}`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOdaInstance = new oci.oda.OdaInstance("testOdaInstance", {
 *     compartmentId: _var.compartment_id,
 *     shapeName: "DEVELOPMENT",
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.oda_instance_description,
 *     displayName: _var.oda_instance_display_name,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * OdaInstances can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import oci:Oda/odaInstance:OdaInstance test_oda_instance "id"
 * ```
 */
export class OdaInstance extends pulumi.CustomResource {
    /**
     * Get an existing OdaInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OdaInstanceState, opts?: pulumi.CustomResourceOptions): OdaInstance {
        return new OdaInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Oda/odaInstance:OdaInstance';

    /**
     * Returns true if the given object is an instance of OdaInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OdaInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OdaInstance.__pulumiType;
    }

    /**
     * (Updatable) Identifier of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * URL for the connector's endpoint.
     */
    public /*out*/ readonly connectorUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Description of the Digital Assistant instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The current sub-state of the Digital Assistant instance.
     */
    public /*out*/ readonly lifecycleSubState!: pulumi.Output<string>;
    /**
     * Shape or size of the instance.
     */
    public readonly shapeName!: pulumi.Output<string>;
    /**
     * The current state of the Digital Assistant instance.
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * A message that describes the current state in more detail. For example, actionable information about an instance that's in the `FAILED` state.
     */
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    /**
     * When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * URL for the Digital Assistant web application that's associated with the instance.
     */
    public /*out*/ readonly webAppUrl!: pulumi.Output<string>;

    /**
     * Create a OdaInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OdaInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OdaInstanceArgs | OdaInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OdaInstanceState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["connectorUrl"] = state ? state.connectorUrl : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleSubState"] = state ? state.lifecycleSubState : undefined;
            resourceInputs["shapeName"] = state ? state.shapeName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["webAppUrl"] = state ? state.webAppUrl : undefined;
        } else {
            const args = argsOrState as OdaInstanceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.shapeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shapeName'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["shapeName"] = args ? args.shapeName : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["connectorUrl"] = undefined /*out*/;
            resourceInputs["lifecycleSubState"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["webAppUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OdaInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OdaInstance resources.
 */
export interface OdaInstanceState {
    /**
     * (Updatable) Identifier of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * URL for the connector's endpoint.
     */
    connectorUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Description of the Digital Assistant instance.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The current sub-state of the Digital Assistant instance.
     */
    lifecycleSubState?: pulumi.Input<string>;
    /**
     * Shape or size of the instance.
     */
    shapeName?: pulumi.Input<string>;
    /**
     * The current state of the Digital Assistant instance.
     */
    state?: pulumi.Input<string>;
    /**
     * A message that describes the current state in more detail. For example, actionable information about an instance that's in the `FAILED` state.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * URL for the Digital Assistant web application that's associated with the instance.
     */
    webAppUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OdaInstance resource.
 */
export interface OdaInstanceArgs {
    /**
     * (Updatable) Identifier of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Description of the Digital Assistant instance.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Shape or size of the instance.
     */
    shapeName: pulumi.Input<string>;
    /**
     * The current state of the Digital Assistant instance.
     */
    state?: pulumi.Input<string>;
}
