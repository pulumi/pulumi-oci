// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Notifications service.
 *
 * Lists the subscriptions in the specified compartment or topic.
 *
 * Transactions Per Minute (TPM) per-tenancy limit for this operation: 60.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptions = oci.Ons.getSubscriptions({
 *     compartmentId: compartmentId,
 *     topicId: testNotificationTopic.id,
 * });
 * ```
 */
export function getSubscriptions(args: GetSubscriptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Ons/getSubscriptions:getSubscriptions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "topicId": args.topicId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptions.
 */
export interface GetSubscriptionsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    filters?: inputs.Ons.GetSubscriptionsFilter[];
    /**
     * Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
     */
    topicId?: string;
}

/**
 * A collection of values returned by getSubscriptions.
 */
export interface GetSubscriptionsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for the subscription.
     */
    readonly compartmentId: string;
    readonly filters?: outputs.Ons.GetSubscriptionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of subscriptions.
     */
    readonly subscriptions: outputs.Ons.GetSubscriptionsSubscription[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated topic.
     */
    readonly topicId?: string;
}
/**
 * This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Notifications service.
 *
 * Lists the subscriptions in the specified compartment or topic.
 *
 * Transactions Per Minute (TPM) per-tenancy limit for this operation: 60.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptions = oci.Ons.getSubscriptions({
 *     compartmentId: compartmentId,
 *     topicId: testNotificationTopic.id,
 * });
 * ```
 */
export function getSubscriptionsOutput(args: GetSubscriptionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSubscriptionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Ons/getSubscriptions:getSubscriptions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "topicId": args.topicId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptions.
 */
export interface GetSubscriptionsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Ons.GetSubscriptionsFilterArgs>[]>;
    /**
     * Return all subscriptions that are subscribed to the given topic OCID. Either this query parameter or the compartmentId query parameter must be set.
     */
    topicId?: pulumi.Input<string>;
}
