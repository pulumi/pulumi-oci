// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetNotificationTopicArgs, GetNotificationTopicResult, GetNotificationTopicOutputArgs } from "./getNotificationTopic";
export const getNotificationTopic: typeof import("./getNotificationTopic").getNotificationTopic = null as any;
export const getNotificationTopicOutput: typeof import("./getNotificationTopic").getNotificationTopicOutput = null as any;
utilities.lazyLoad(exports, ["getNotificationTopic","getNotificationTopicOutput"], () => require("./getNotificationTopic"));

export { GetNotificationTopicsArgs, GetNotificationTopicsResult, GetNotificationTopicsOutputArgs } from "./getNotificationTopics";
export const getNotificationTopics: typeof import("./getNotificationTopics").getNotificationTopics = null as any;
export const getNotificationTopicsOutput: typeof import("./getNotificationTopics").getNotificationTopicsOutput = null as any;
utilities.lazyLoad(exports, ["getNotificationTopics","getNotificationTopicsOutput"], () => require("./getNotificationTopics"));

export { GetSubscriptionArgs, GetSubscriptionResult, GetSubscriptionOutputArgs } from "./getSubscription";
export const getSubscription: typeof import("./getSubscription").getSubscription = null as any;
export const getSubscriptionOutput: typeof import("./getSubscription").getSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getSubscription","getSubscriptionOutput"], () => require("./getSubscription"));

export { GetSubscriptionsArgs, GetSubscriptionsResult, GetSubscriptionsOutputArgs } from "./getSubscriptions";
export const getSubscriptions: typeof import("./getSubscriptions").getSubscriptions = null as any;
export const getSubscriptionsOutput: typeof import("./getSubscriptions").getSubscriptionsOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptions","getSubscriptionsOutput"], () => require("./getSubscriptions"));

export { NotificationTopicArgs, NotificationTopicState } from "./notificationTopic";
export type NotificationTopic = import("./notificationTopic").NotificationTopic;
export const NotificationTopic: typeof import("./notificationTopic").NotificationTopic = null as any;
utilities.lazyLoad(exports, ["NotificationTopic"], () => require("./notificationTopic"));

export { SubscriptionArgs, SubscriptionState } from "./subscription";
export type Subscription = import("./subscription").Subscription;
export const Subscription: typeof import("./subscription").Subscription = null as any;
utilities.lazyLoad(exports, ["Subscription"], () => require("./subscription"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Ons/notificationTopic:NotificationTopic":
                return new NotificationTopic(name, <any>undefined, { urn })
            case "oci:Ons/subscription:Subscription":
                return new Subscription(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Ons/notificationTopic", _module)
pulumi.runtime.registerResourceModule("oci", "Ons/subscription", _module)
