// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Opensearch Cluster Pipeline resource in Oracle Cloud Infrastructure Opensearch service.
 *
 * Gets a OpensearchCluster Pipeline by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOpensearchClusterPipeline = oci.Opensearch.getOpensearchClusterPipeline({
 *     opensearchClusterPipelineId: testOpensearchClusterPipelineOciOpensearchOpensearchClusterPipeline.id,
 * });
 * ```
 */
export function getOpensearchClusterPipeline(args: GetOpensearchClusterPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchClusterPipelineResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Opensearch/getOpensearchClusterPipeline:getOpensearchClusterPipeline", {
        "opensearchClusterPipelineId": args.opensearchClusterPipelineId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOpensearchClusterPipeline.
 */
export interface GetOpensearchClusterPipelineArgs {
    /**
     * unique OpensearchClusterPipeline identifier
     */
    opensearchClusterPipelineId: string;
}

/**
 * A collection of values returned by getOpensearchClusterPipeline.
 */
export interface GetOpensearchClusterPipelineResult {
    /**
     * The OCID of the compartment where the pipeline is located.
     */
    readonly compartmentId: string;
    /**
     * The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     */
    readonly dataPrepperConfigurationBody: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * The name of the pipeline. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The OCID of the cluster pipeline.
     */
    readonly id: string;
    /**
     * The amount of memory in GB, for each pipeline node.
     */
    readonly memoryGb: number;
    /**
     * The number of nodes configured for the pipeline.
     */
    readonly nodeCount: number;
    /**
     * The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     */
    readonly nsgId: string;
    /**
     * The number of OCPUs configured for each pipeline node.
     */
    readonly ocpuCount: number;
    readonly opcDryRun: boolean;
    readonly opensearchClusterPipelineId: string;
    /**
     * The fully qualified domain name (FQDN) for the cluster's API endpoint.
     */
    readonly opensearchPipelineFqdn: string;
    /**
     * The pipeline's private IP address.
     */
    readonly opensearchPipelinePrivateIp: string;
    /**
     * The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     */
    readonly pipelineConfigurationBody: string;
    /**
     * The current state of the pipeline.
     */
    readonly pipelineMode: string;
    /**
     * The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     */
    readonly reverseConnectionEndpoints: outputs.Opensearch.GetOpensearchClusterPipelineReverseConnectionEndpoint[];
    /**
     * The current state of the cluster backup.
     */
    readonly state: string;
    /**
     * The OCID for the compartment where the pipeline's subnet is located.
     */
    readonly subnetCompartmentId: string;
    /**
     * The OCID of the pipeline's subnet.
     */
    readonly subnetId: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    readonly timeCreated: string;
    /**
     * The amount of time in milliseconds since the pipeline was updated.
     */
    readonly timeUpdated: string;
    /**
     * The OCID for the compartment where the pipeline's VCN is located.
     */
    readonly vcnCompartmentId: string;
    /**
     * The OCID of the pipeline's VCN.
     */
    readonly vcnId: string;
}
/**
 * This data source provides details about a specific Opensearch Cluster Pipeline resource in Oracle Cloud Infrastructure Opensearch service.
 *
 * Gets a OpensearchCluster Pipeline by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOpensearchClusterPipeline = oci.Opensearch.getOpensearchClusterPipeline({
 *     opensearchClusterPipelineId: testOpensearchClusterPipelineOciOpensearchOpensearchClusterPipeline.id,
 * });
 * ```
 */
export function getOpensearchClusterPipelineOutput(args: GetOpensearchClusterPipelineOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOpensearchClusterPipelineResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Opensearch/getOpensearchClusterPipeline:getOpensearchClusterPipeline", {
        "opensearchClusterPipelineId": args.opensearchClusterPipelineId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOpensearchClusterPipeline.
 */
export interface GetOpensearchClusterPipelineOutputArgs {
    /**
     * unique OpensearchClusterPipeline identifier
     */
    opensearchClusterPipelineId: pulumi.Input<string>;
}
