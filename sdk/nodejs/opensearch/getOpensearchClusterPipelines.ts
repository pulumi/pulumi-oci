// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Opensearch Cluster Pipelines in Oracle Cloud Infrastructure Opensearch service.
 *
 * Returns a list of OpensearchClusterPipelines.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOpensearchClusterPipelines = oci.Opensearch.getOpensearchClusterPipelines({
 *     compartmentId: compartmentId,
 *     displayName: opensearchClusterPipelineDisplayName,
 *     id: opensearchClusterPipelineId,
 *     pipelineComponentId: testPipelineComponent.id,
 *     state: opensearchClusterPipelineState,
 * });
 * ```
 */
export function getOpensearchClusterPipelines(args: GetOpensearchClusterPipelinesArgs, opts?: pulumi.InvokeOptions): Promise<GetOpensearchClusterPipelinesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Opensearch/getOpensearchClusterPipelines:getOpensearchClusterPipelines", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "pipelineComponentId": args.pipelineComponentId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getOpensearchClusterPipelines.
 */
export interface GetOpensearchClusterPipelinesArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.Opensearch.GetOpensearchClusterPipelinesFilter[];
    /**
     * unique OpensearchClusterPipeline identifier
     */
    id?: string;
    /**
     * A filter to return pipelines whose any component has the given pipelineComponentId.
     */
    pipelineComponentId?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getOpensearchClusterPipelines.
 */
export interface GetOpensearchClusterPipelinesResult {
    /**
     * The OCID of the compartment where the pipeline is located.
     */
    readonly compartmentId: string;
    /**
     * The name of the pipeline. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Opensearch.GetOpensearchClusterPipelinesFilter[];
    /**
     * The OCID of the cluster pipeline.
     */
    readonly id?: string;
    /**
     * The list of opensearch_cluster_pipeline_collection.
     */
    readonly opensearchClusterPipelineCollections: outputs.Opensearch.GetOpensearchClusterPipelinesOpensearchClusterPipelineCollection[];
    readonly pipelineComponentId?: string;
    /**
     * The current state of the cluster backup.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Opensearch Cluster Pipelines in Oracle Cloud Infrastructure Opensearch service.
 *
 * Returns a list of OpensearchClusterPipelines.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOpensearchClusterPipelines = oci.Opensearch.getOpensearchClusterPipelines({
 *     compartmentId: compartmentId,
 *     displayName: opensearchClusterPipelineDisplayName,
 *     id: opensearchClusterPipelineId,
 *     pipelineComponentId: testPipelineComponent.id,
 *     state: opensearchClusterPipelineState,
 * });
 * ```
 */
export function getOpensearchClusterPipelinesOutput(args: GetOpensearchClusterPipelinesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOpensearchClusterPipelinesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Opensearch/getOpensearchClusterPipelines:getOpensearchClusterPipelines", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "pipelineComponentId": args.pipelineComponentId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getOpensearchClusterPipelines.
 */
export interface GetOpensearchClusterPipelinesOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Opensearch.GetOpensearchClusterPipelinesFilterArgs>[]>;
    /**
     * unique OpensearchClusterPipeline identifier
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return pipelines whose any component has the given pipelineComponentId.
     */
    pipelineComponentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
