// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Opensearch Cluster Pipeline resource in Oracle Cloud Infrastructure Opensearch service.
 *
 * Creates a new OpensearchCluster Pipeline.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOpensearchClusterPipeline = new oci.opensearch.OpensearchClusterPipeline("test_opensearch_cluster_pipeline", {
 *     compartmentId: compartmentId,
 *     dataPrepperConfigurationBody: opensearchClusterPipelineDataPrepperConfigurationBody,
 *     displayName: opensearchClusterPipelineDisplayName,
 *     memoryGb: opensearchClusterPipelineMemoryGb,
 *     nodeCount: opensearchClusterPipelineNodeCount,
 *     ocpuCount: opensearchClusterPipelineOcpuCount,
 *     pipelineConfigurationBody: opensearchClusterPipelinePipelineConfigurationBody,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     nodeShape: opensearchClusterPipelineNodeShape,
 *     nsgId: testNsg.id,
 *     opcDryRun: opensearchClusterPipelineOpcDryRun,
 *     reverseConnectionEndpoints: [{
 *         customerFqdn: opensearchClusterPipelineReverseConnectionEndpointsCustomerFqdn,
 *         customerIp: opensearchClusterPipelineReverseConnectionEndpointsCustomerIp,
 *     }],
 *     subnetCompartmentId: testCompartment.id,
 *     subnetId: testSubnet.id,
 *     vcnCompartmentId: testCompartment.id,
 *     vcnId: testVcn.id,
 * });
 * ```
 *
 * ## Import
 *
 * OpensearchClusterPipelines can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Opensearch/opensearchClusterPipeline:OpensearchClusterPipeline test_opensearch_cluster_pipeline "id"
 * ```
 */
export class OpensearchClusterPipeline extends pulumi.CustomResource {
    /**
     * Get an existing OpensearchClusterPipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpensearchClusterPipelineState, opts?: pulumi.CustomResourceOptions): OpensearchClusterPipeline {
        return new OpensearchClusterPipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Opensearch/opensearchClusterPipeline:OpensearchClusterPipeline';

    /**
     * Returns true if the given object is an instance of OpensearchClusterPipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpensearchClusterPipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpensearchClusterPipeline.__pulumiType;
    }

    /**
     * The OCID of the compartment to create the pipeline in.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     */
    public readonly dataPrepperConfigurationBody!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The amount of memory in GB, for each pipeline node.
     */
    public readonly memoryGb!: pulumi.Output<number>;
    /**
     * (Updatable) The number of nodes configured for the pipeline.
     */
    public readonly nodeCount!: pulumi.Output<number>;
    /**
     * (Updatable) The pipeline node shape.
     */
    public readonly nodeShape!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     */
    public readonly nsgId!: pulumi.Output<string>;
    /**
     * (Updatable) The number of OCPUs configured for each pipeline node.
     */
    public readonly ocpuCount!: pulumi.Output<number>;
    /**
     * (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     */
    public readonly opcDryRun!: pulumi.Output<boolean>;
    /**
     * The fully qualified domain name (FQDN) for the cluster's API endpoint.
     */
    public /*out*/ readonly opensearchPipelineFqdn!: pulumi.Output<string>;
    /**
     * The pipeline's private IP address.
     */
    public /*out*/ readonly opensearchPipelinePrivateIp!: pulumi.Output<string>;
    /**
     * (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     */
    public readonly pipelineConfigurationBody!: pulumi.Output<string>;
    /**
     * The current state of the pipeline.
     */
    public /*out*/ readonly pipelineMode!: pulumi.Output<string>;
    /**
     * (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     */
    public readonly reverseConnectionEndpoints!: pulumi.Output<outputs.Opensearch.OpensearchClusterPipelineReverseConnectionEndpoint[]>;
    /**
     * The current state of the cluster backup.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID for the compartment where the pipeline's subnet is located.
     */
    public readonly subnetCompartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the pipeline's subnet.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The amount of time in milliseconds since the pipeline was updated.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID for the compartment where the pipeline's VCN is located.
     */
    public readonly vcnCompartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the pipeline's VCN.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly vcnId!: pulumi.Output<string>;

    /**
     * Create a OpensearchClusterPipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpensearchClusterPipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpensearchClusterPipelineArgs | OpensearchClusterPipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpensearchClusterPipelineState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["dataPrepperConfigurationBody"] = state ? state.dataPrepperConfigurationBody : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["memoryGb"] = state ? state.memoryGb : undefined;
            resourceInputs["nodeCount"] = state ? state.nodeCount : undefined;
            resourceInputs["nodeShape"] = state ? state.nodeShape : undefined;
            resourceInputs["nsgId"] = state ? state.nsgId : undefined;
            resourceInputs["ocpuCount"] = state ? state.ocpuCount : undefined;
            resourceInputs["opcDryRun"] = state ? state.opcDryRun : undefined;
            resourceInputs["opensearchPipelineFqdn"] = state ? state.opensearchPipelineFqdn : undefined;
            resourceInputs["opensearchPipelinePrivateIp"] = state ? state.opensearchPipelinePrivateIp : undefined;
            resourceInputs["pipelineConfigurationBody"] = state ? state.pipelineConfigurationBody : undefined;
            resourceInputs["pipelineMode"] = state ? state.pipelineMode : undefined;
            resourceInputs["reverseConnectionEndpoints"] = state ? state.reverseConnectionEndpoints : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subnetCompartmentId"] = state ? state.subnetCompartmentId : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["vcnCompartmentId"] = state ? state.vcnCompartmentId : undefined;
            resourceInputs["vcnId"] = state ? state.vcnId : undefined;
        } else {
            const args = argsOrState as OpensearchClusterPipelineArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.dataPrepperConfigurationBody === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataPrepperConfigurationBody'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.memoryGb === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memoryGb'");
            }
            if ((!args || args.nodeCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeCount'");
            }
            if ((!args || args.ocpuCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ocpuCount'");
            }
            if ((!args || args.pipelineConfigurationBody === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pipelineConfigurationBody'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["dataPrepperConfigurationBody"] = args ? args.dataPrepperConfigurationBody : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["memoryGb"] = args ? args.memoryGb : undefined;
            resourceInputs["nodeCount"] = args ? args.nodeCount : undefined;
            resourceInputs["nodeShape"] = args ? args.nodeShape : undefined;
            resourceInputs["nsgId"] = args ? args.nsgId : undefined;
            resourceInputs["ocpuCount"] = args ? args.ocpuCount : undefined;
            resourceInputs["opcDryRun"] = args ? args.opcDryRun : undefined;
            resourceInputs["pipelineConfigurationBody"] = args ? args.pipelineConfigurationBody : undefined;
            resourceInputs["reverseConnectionEndpoints"] = args ? args.reverseConnectionEndpoints : undefined;
            resourceInputs["subnetCompartmentId"] = args ? args.subnetCompartmentId : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["vcnCompartmentId"] = args ? args.vcnCompartmentId : undefined;
            resourceInputs["vcnId"] = args ? args.vcnId : undefined;
            resourceInputs["opensearchPipelineFqdn"] = undefined /*out*/;
            resourceInputs["opensearchPipelinePrivateIp"] = undefined /*out*/;
            resourceInputs["pipelineMode"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OpensearchClusterPipeline.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OpensearchClusterPipeline resources.
 */
export interface OpensearchClusterPipelineState {
    /**
     * The OCID of the compartment to create the pipeline in.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     */
    dataPrepperConfigurationBody?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The amount of memory in GB, for each pipeline node.
     */
    memoryGb?: pulumi.Input<number>;
    /**
     * (Updatable) The number of nodes configured for the pipeline.
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * (Updatable) The pipeline node shape.
     */
    nodeShape?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     */
    nsgId?: pulumi.Input<string>;
    /**
     * (Updatable) The number of OCPUs configured for each pipeline node.
     */
    ocpuCount?: pulumi.Input<number>;
    /**
     * (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     */
    opcDryRun?: pulumi.Input<boolean>;
    /**
     * The fully qualified domain name (FQDN) for the cluster's API endpoint.
     */
    opensearchPipelineFqdn?: pulumi.Input<string>;
    /**
     * The pipeline's private IP address.
     */
    opensearchPipelinePrivateIp?: pulumi.Input<string>;
    /**
     * (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     */
    pipelineConfigurationBody?: pulumi.Input<string>;
    /**
     * The current state of the pipeline.
     */
    pipelineMode?: pulumi.Input<string>;
    /**
     * (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     */
    reverseConnectionEndpoints?: pulumi.Input<pulumi.Input<inputs.Opensearch.OpensearchClusterPipelineReverseConnectionEndpoint>[]>;
    /**
     * The current state of the cluster backup.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID for the compartment where the pipeline's subnet is located.
     */
    subnetCompartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the pipeline's subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the cluster pipeline was created. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The amount of time in milliseconds since the pipeline was updated.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID for the compartment where the pipeline's VCN is located.
     */
    vcnCompartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the pipeline's VCN.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    vcnId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OpensearchClusterPipeline resource.
 */
export interface OpensearchClusterPipelineArgs {
    /**
     * The OCID of the compartment to create the pipeline in.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) The data prepper config in YAML format. The command accepts the data prepper config as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     */
    dataPrepperConfigurationBody: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The name of the cluster pipeline. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The amount of memory in GB, for each pipeline node.
     */
    memoryGb: pulumi.Input<number>;
    /**
     * (Updatable) The number of nodes configured for the pipeline.
     */
    nodeCount: pulumi.Input<number>;
    /**
     * (Updatable) The pipeline node shape.
     */
    nodeShape?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the NSG where the pipeline private endpoint vnic will be attached.
     */
    nsgId?: pulumi.Input<string>;
    /**
     * (Updatable) The number of OCPUs configured for each pipeline node.
     */
    ocpuCount: pulumi.Input<number>;
    /**
     * (Updatable) Indicates that the request is a dry run, if set to "true". A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     */
    opcDryRun?: pulumi.Input<boolean>;
    /**
     * (Updatable) The pipeline configuration in YAML format. The command accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \.
     */
    pipelineConfigurationBody: pulumi.Input<string>;
    /**
     * (Updatable) The customer IP and the corresponding fully qualified domain name that the pipeline will connect to.
     */
    reverseConnectionEndpoints?: pulumi.Input<pulumi.Input<inputs.Opensearch.OpensearchClusterPipelineReverseConnectionEndpoint>[]>;
    /**
     * (Updatable) The OCID for the compartment where the pipeline's subnet is located.
     */
    subnetCompartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the pipeline's subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID for the compartment where the pipeline's VCN is located.
     */
    vcnCompartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the pipeline's VCN.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    vcnId?: pulumi.Input<string>;
}
