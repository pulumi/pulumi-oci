// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Operator Actions in Oracle Cloud Infrastructure Operator Access Control service.
 *
 * Lists all the OperatorActions available in the system.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOperatorActions = oci.OperatorAccessControl.getActions({
 *     compartmentId: compartmentId,
 *     name: operatorActionName,
 *     resourceType: operatorActionResourceType,
 *     state: operatorActionState,
 * });
 * ```
 */
export function getActions(args: GetActionsArgs, opts?: pulumi.InvokeOptions): Promise<GetActionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OperatorAccessControl/getActions:getActions", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "resourceType": args.resourceType,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getActions.
 */
export interface GetActionsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    filters?: inputs.OperatorAccessControl.GetActionsFilter[];
    /**
     * A filter to return only resources that match the entire display name given.
     */
    name?: string;
    /**
     * A filter to return only lists of resources that match the entire given service type.
     */
    resourceType?: string;
    /**
     * A filter to return only resources whose lifecycleState matches the given OperatorAction lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getActions.
 */
export interface GetActionsResult {
    readonly compartmentId: string;
    readonly filters?: outputs.OperatorAccessControl.GetActionsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the property
     */
    readonly name?: string;
    /**
     * The list of operator_action_collection.
     */
    readonly operatorActionCollections: outputs.OperatorAccessControl.GetActionsOperatorActionCollection[];
    /**
     * resourceType for which the OperatorAction is applicable
     */
    readonly resourceType?: string;
    readonly state?: string;
}
/**
 * This data source provides the list of Operator Actions in Oracle Cloud Infrastructure Operator Access Control service.
 *
 * Lists all the OperatorActions available in the system.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOperatorActions = oci.OperatorAccessControl.getActions({
 *     compartmentId: compartmentId,
 *     name: operatorActionName,
 *     resourceType: operatorActionResourceType,
 *     state: operatorActionState,
 * });
 * ```
 */
export function getActionsOutput(args: GetActionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetActionsResult> {
    return pulumi.output(args).apply((a: any) => getActions(a, opts))
}

/**
 * A collection of arguments for invoking getActions.
 */
export interface GetActionsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OperatorAccessControl.GetActionsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only lists of resources that match the entire given service type.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * A filter to return only resources whose lifecycleState matches the given OperatorAction lifecycleState.
     */
    state?: pulumi.Input<string>;
}
