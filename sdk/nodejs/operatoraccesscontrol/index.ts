// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetAccessRequestArgs, GetAccessRequestResult, GetAccessRequestOutputArgs } from "./getAccessRequest";
export const getAccessRequest: typeof import("./getAccessRequest").getAccessRequest = null as any;
export const getAccessRequestOutput: typeof import("./getAccessRequest").getAccessRequestOutput = null as any;
utilities.lazyLoad(exports, ["getAccessRequest","getAccessRequestOutput"], () => require("./getAccessRequest"));

export { GetAccessRequestAuditLogReportArgs, GetAccessRequestAuditLogReportResult, GetAccessRequestAuditLogReportOutputArgs } from "./getAccessRequestAuditLogReport";
export const getAccessRequestAuditLogReport: typeof import("./getAccessRequestAuditLogReport").getAccessRequestAuditLogReport = null as any;
export const getAccessRequestAuditLogReportOutput: typeof import("./getAccessRequestAuditLogReport").getAccessRequestAuditLogReportOutput = null as any;
utilities.lazyLoad(exports, ["getAccessRequestAuditLogReport","getAccessRequestAuditLogReportOutput"], () => require("./getAccessRequestAuditLogReport"));

export { GetAccessRequestHistoryArgs, GetAccessRequestHistoryResult, GetAccessRequestHistoryOutputArgs } from "./getAccessRequestHistory";
export const getAccessRequestHistory: typeof import("./getAccessRequestHistory").getAccessRequestHistory = null as any;
export const getAccessRequestHistoryOutput: typeof import("./getAccessRequestHistory").getAccessRequestHistoryOutput = null as any;
utilities.lazyLoad(exports, ["getAccessRequestHistory","getAccessRequestHistoryOutput"], () => require("./getAccessRequestHistory"));

export { GetAccessRequestsArgs, GetAccessRequestsResult, GetAccessRequestsOutputArgs } from "./getAccessRequests";
export const getAccessRequests: typeof import("./getAccessRequests").getAccessRequests = null as any;
export const getAccessRequestsOutput: typeof import("./getAccessRequests").getAccessRequestsOutput = null as any;
utilities.lazyLoad(exports, ["getAccessRequests","getAccessRequestsOutput"], () => require("./getAccessRequests"));

export { GetActionArgs, GetActionResult, GetActionOutputArgs } from "./getAction";
export const getAction: typeof import("./getAction").getAction = null as any;
export const getActionOutput: typeof import("./getAction").getActionOutput = null as any;
utilities.lazyLoad(exports, ["getAction","getActionOutput"], () => require("./getAction"));

export { GetActionsArgs, GetActionsResult, GetActionsOutputArgs } from "./getActions";
export const getActions: typeof import("./getActions").getActions = null as any;
export const getActionsOutput: typeof import("./getActions").getActionsOutput = null as any;
utilities.lazyLoad(exports, ["getActions","getActionsOutput"], () => require("./getActions"));

export { GetControlArgs, GetControlResult, GetControlOutputArgs } from "./getControl";
export const getControl: typeof import("./getControl").getControl = null as any;
export const getControlOutput: typeof import("./getControl").getControlOutput = null as any;
utilities.lazyLoad(exports, ["getControl","getControlOutput"], () => require("./getControl"));

export { GetControlAssignmentArgs, GetControlAssignmentResult, GetControlAssignmentOutputArgs } from "./getControlAssignment";
export const getControlAssignment: typeof import("./getControlAssignment").getControlAssignment = null as any;
export const getControlAssignmentOutput: typeof import("./getControlAssignment").getControlAssignmentOutput = null as any;
utilities.lazyLoad(exports, ["getControlAssignment","getControlAssignmentOutput"], () => require("./getControlAssignment"));

export { GetControlAssignmentsArgs, GetControlAssignmentsResult, GetControlAssignmentsOutputArgs } from "./getControlAssignments";
export const getControlAssignments: typeof import("./getControlAssignments").getControlAssignments = null as any;
export const getControlAssignmentsOutput: typeof import("./getControlAssignments").getControlAssignmentsOutput = null as any;
utilities.lazyLoad(exports, ["getControlAssignments","getControlAssignmentsOutput"], () => require("./getControlAssignments"));

export { GetControlsArgs, GetControlsResult, GetControlsOutputArgs } from "./getControls";
export const getControls: typeof import("./getControls").getControls = null as any;
export const getControlsOutput: typeof import("./getControls").getControlsOutput = null as any;
utilities.lazyLoad(exports, ["getControls","getControlsOutput"], () => require("./getControls"));

export { OperatorControlArgs, OperatorControlState } from "./operatorControl";
export type OperatorControl = import("./operatorControl").OperatorControl;
export const OperatorControl: typeof import("./operatorControl").OperatorControl = null as any;
utilities.lazyLoad(exports, ["OperatorControl"], () => require("./operatorControl"));

export { OperatorControlAssignmentArgs, OperatorControlAssignmentState } from "./operatorControlAssignment";
export type OperatorControlAssignment = import("./operatorControlAssignment").OperatorControlAssignment;
export const OperatorControlAssignment: typeof import("./operatorControlAssignment").OperatorControlAssignment = null as any;
utilities.lazyLoad(exports, ["OperatorControlAssignment"], () => require("./operatorControlAssignment"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:OperatorAccessControl/operatorControl:OperatorControl":
                return new OperatorControl(name, <any>undefined, { urn })
            case "oci:OperatorAccessControl/operatorControlAssignment:OperatorControlAssignment":
                return new OperatorControlAssignment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "OperatorAccessControl/operatorControl", _module)
pulumi.runtime.registerResourceModule("oci", "OperatorAccessControl/operatorControlAssignment", _module)
