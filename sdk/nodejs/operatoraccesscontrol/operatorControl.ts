// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Operator Control resource in Oracle Cloud Infrastructure Operator Access Control service.
 *
 * Creates an Operator Control.
 *
 * ## Import
 *
 * OperatorControls can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OperatorAccessControl/operatorControl:OperatorControl test_operator_control "id"
 * ```
 */
export class OperatorControl extends pulumi.CustomResource {
    /**
     * Get an existing OperatorControl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OperatorControlState, opts?: pulumi.CustomResourceOptions): OperatorControl {
        return new OperatorControl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OperatorAccessControl/operatorControl:OperatorControl';

    /**
     * Returns true if the given object is an instance of OperatorControl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OperatorControl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OperatorControl.__pulumiType;
    }

    /**
     * List of operator actions that need explicit approval. Any operator action not in the pre-approved list will require explicit approval. Access requests associated with a resource governed by this operator control will be require explicit approval if the access request contains any operator action in this list.
     */
    declare public /*out*/ readonly approvalRequiredOpActionLists: pulumi.Output<string[]>;
    /**
     * (Updatable) List of user groups who can approve an access request associated with a resource governed by this operator control.
     */
    declare public readonly approverGroupsLists: pulumi.Output<string[]>;
    /**
     * (Updatable) List of users who can approve an access request associated with a resource governed by this operator control.
     */
    declare public readonly approversLists: pulumi.Output<string[]>;
    /**
     * (Updatable) The OCID of the compartment that contains this operator control.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Description of the operator control.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) List of emailId.
     */
    declare public readonly emailIdLists: pulumi.Output<string[]>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Whether the operator control is a default Operator Control.
     */
    declare public /*out*/ readonly isDefaultOperatorControl: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
     */
    declare public readonly isFullyPreApproved: pulumi.Output<boolean>;
    /**
     * Description associated with the latest modification of the operator control.
     */
    declare public /*out*/ readonly lastModifiedInfo: pulumi.Output<string>;
    /**
     * (Updatable) Number of approvers required to approve an access request.
     */
    declare public readonly numberOfApprovers: pulumi.Output<number>;
    /**
     * (Updatable) Name of the operator control.
     */
    declare public readonly operatorControlName: pulumi.Output<string>;
    /**
     * (Updatable) List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be auto-approved if the access request only contain operator actions in the pre-approved list.
     */
    declare public readonly preApprovedOpActionLists: pulumi.Output<string[]>;
    /**
     * resourceType for which the OperatorControl is applicable
     */
    declare public readonly resourceType: pulumi.Output<string>;
    /**
     * The current lifecycle state of the operator control.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * (Updatable) This is the message that will be displayed to the operator users while accessing the system.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly systemMessage: pulumi.Output<string>;
    /**
     * Time when the operator control was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
     */
    declare public /*out*/ readonly timeOfCreation: pulumi.Output<string>;
    /**
     * Time when deleted expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'. Note a deleted operator control still stays in the system, so that you can still audit operator actions associated with access requests raised on target resources governed by the deleted operator control.
     */
    declare public /*out*/ readonly timeOfDeletion: pulumi.Output<string>;
    /**
     * Time when the operator control was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
     */
    declare public /*out*/ readonly timeOfModification: pulumi.Output<string>;

    /**
     * Create a OperatorControl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OperatorControlArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OperatorControlArgs | OperatorControlState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OperatorControlState | undefined;
            resourceInputs["approvalRequiredOpActionLists"] = state?.approvalRequiredOpActionLists;
            resourceInputs["approverGroupsLists"] = state?.approverGroupsLists;
            resourceInputs["approversLists"] = state?.approversLists;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["emailIdLists"] = state?.emailIdLists;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["isDefaultOperatorControl"] = state?.isDefaultOperatorControl;
            resourceInputs["isFullyPreApproved"] = state?.isFullyPreApproved;
            resourceInputs["lastModifiedInfo"] = state?.lastModifiedInfo;
            resourceInputs["numberOfApprovers"] = state?.numberOfApprovers;
            resourceInputs["operatorControlName"] = state?.operatorControlName;
            resourceInputs["preApprovedOpActionLists"] = state?.preApprovedOpActionLists;
            resourceInputs["resourceType"] = state?.resourceType;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemMessage"] = state?.systemMessage;
            resourceInputs["timeOfCreation"] = state?.timeOfCreation;
            resourceInputs["timeOfDeletion"] = state?.timeOfDeletion;
            resourceInputs["timeOfModification"] = state?.timeOfModification;
        } else {
            const args = argsOrState as OperatorControlArgs | undefined;
            if (args?.approverGroupsLists === undefined && !opts.urn) {
                throw new Error("Missing required property 'approverGroupsLists'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.isFullyPreApproved === undefined && !opts.urn) {
                throw new Error("Missing required property 'isFullyPreApproved'");
            }
            if (args?.operatorControlName === undefined && !opts.urn) {
                throw new Error("Missing required property 'operatorControlName'");
            }
            if (args?.resourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["approverGroupsLists"] = args?.approverGroupsLists;
            resourceInputs["approversLists"] = args?.approversLists;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["emailIdLists"] = args?.emailIdLists;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["isFullyPreApproved"] = args?.isFullyPreApproved;
            resourceInputs["numberOfApprovers"] = args?.numberOfApprovers;
            resourceInputs["operatorControlName"] = args?.operatorControlName;
            resourceInputs["preApprovedOpActionLists"] = args?.preApprovedOpActionLists;
            resourceInputs["resourceType"] = args?.resourceType;
            resourceInputs["systemMessage"] = args?.systemMessage;
            resourceInputs["approvalRequiredOpActionLists"] = undefined /*out*/;
            resourceInputs["isDefaultOperatorControl"] = undefined /*out*/;
            resourceInputs["lastModifiedInfo"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeOfCreation"] = undefined /*out*/;
            resourceInputs["timeOfDeletion"] = undefined /*out*/;
            resourceInputs["timeOfModification"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OperatorControl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OperatorControl resources.
 */
export interface OperatorControlState {
    /**
     * List of operator actions that need explicit approval. Any operator action not in the pre-approved list will require explicit approval. Access requests associated with a resource governed by this operator control will be require explicit approval if the access request contains any operator action in this list.
     */
    approvalRequiredOpActionLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) List of user groups who can approve an access request associated with a resource governed by this operator control.
     */
    approverGroupsLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) List of users who can approve an access request associated with a resource governed by this operator control.
     */
    approversLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The OCID of the compartment that contains this operator control.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Description of the operator control.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) List of emailId.
     */
    emailIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether the operator control is a default Operator Control.
     */
    isDefaultOperatorControl?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
     */
    isFullyPreApproved?: pulumi.Input<boolean>;
    /**
     * Description associated with the latest modification of the operator control.
     */
    lastModifiedInfo?: pulumi.Input<string>;
    /**
     * (Updatable) Number of approvers required to approve an access request.
     */
    numberOfApprovers?: pulumi.Input<number>;
    /**
     * (Updatable) Name of the operator control.
     */
    operatorControlName?: pulumi.Input<string>;
    /**
     * (Updatable) List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be auto-approved if the access request only contain operator actions in the pre-approved list.
     */
    preApprovedOpActionLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * resourceType for which the OperatorControl is applicable
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the operator control.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) This is the message that will be displayed to the operator users while accessing the system.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    systemMessage?: pulumi.Input<string>;
    /**
     * Time when the operator control was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
     */
    timeOfCreation?: pulumi.Input<string>;
    /**
     * Time when deleted expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'. Note a deleted operator control still stays in the system, so that you can still audit operator actions associated with access requests raised on target resources governed by the deleted operator control.
     */
    timeOfDeletion?: pulumi.Input<string>;
    /**
     * Time when the operator control was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: '2020-05-22T21:10:29.600Z'
     */
    timeOfModification?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OperatorControl resource.
 */
export interface OperatorControlArgs {
    /**
     * (Updatable) List of user groups who can approve an access request associated with a resource governed by this operator control.
     */
    approverGroupsLists: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) List of users who can approve an access request associated with a resource governed by this operator control.
     */
    approversLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The OCID of the compartment that contains this operator control.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Description of the operator control.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) List of emailId.
     */
    emailIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
     */
    isFullyPreApproved: pulumi.Input<boolean>;
    /**
     * (Updatable) Number of approvers required to approve an access request.
     */
    numberOfApprovers?: pulumi.Input<number>;
    /**
     * (Updatable) Name of the operator control.
     */
    operatorControlName: pulumi.Input<string>;
    /**
     * (Updatable) List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be auto-approved if the access request only contain operator actions in the pre-approved list.
     */
    preApprovedOpActionLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * resourceType for which the OperatorControl is applicable
     */
    resourceType: pulumi.Input<string>;
    /**
     * (Updatable) This is the message that will be displayed to the operator users while accessing the system.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    systemMessage?: pulumi.Input<string>;
}
