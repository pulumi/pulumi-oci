// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Awr Hub Source Awrhubsources Management resource in Oracle Cloud Infrastructure Opsi service.
 *
 * Enables a Awr Hub source database in Operations Insights. This will resume the Awr data flow for the given Awr Hub source if it was stopped earlier.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAwrHubSourceAwrhubsourcesManagement = new oci.opsi.AwrHubSourceAwrhubsourcesManagement("test_awr_hub_source_awrhubsources_management", {
 *     awrHubSourceId: testAwrHubSource.id,
 *     enableAwrhubsource: enableAwrhubsource,
 * });
 * ```
 */
export class AwrHubSourceAwrhubsourcesManagement extends pulumi.CustomResource {
    /**
     * Get an existing AwrHubSourceAwrhubsourcesManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwrHubSourceAwrhubsourcesManagementState, opts?: pulumi.CustomResourceOptions): AwrHubSourceAwrhubsourcesManagement {
        return new AwrHubSourceAwrhubsourcesManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Opsi/awrHubSourceAwrhubsourcesManagement:AwrHubSourceAwrhubsourcesManagement';

    /**
     * Returns true if the given object is an instance of AwrHubSourceAwrhubsourcesManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwrHubSourceAwrhubsourcesManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwrHubSourceAwrhubsourcesManagement.__pulumiType;
    }

    /**
     * Unique Awr Hub Source identifier
     */
    public readonly awrHubSourceId!: pulumi.Output<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly enableAwrhubsource!: pulumi.Output<boolean>;

    /**
     * Create a AwrHubSourceAwrhubsourcesManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwrHubSourceAwrhubsourcesManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwrHubSourceAwrhubsourcesManagementArgs | AwrHubSourceAwrhubsourcesManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwrHubSourceAwrhubsourcesManagementState | undefined;
            resourceInputs["awrHubSourceId"] = state ? state.awrHubSourceId : undefined;
            resourceInputs["enableAwrhubsource"] = state ? state.enableAwrhubsource : undefined;
        } else {
            const args = argsOrState as AwrHubSourceAwrhubsourcesManagementArgs | undefined;
            if ((!args || args.awrHubSourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'awrHubSourceId'");
            }
            if ((!args || args.enableAwrhubsource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableAwrhubsource'");
            }
            resourceInputs["awrHubSourceId"] = args ? args.awrHubSourceId : undefined;
            resourceInputs["enableAwrhubsource"] = args ? args.enableAwrhubsource : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwrHubSourceAwrhubsourcesManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwrHubSourceAwrhubsourcesManagement resources.
 */
export interface AwrHubSourceAwrhubsourcesManagementState {
    /**
     * Unique Awr Hub Source identifier
     */
    awrHubSourceId?: pulumi.Input<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    enableAwrhubsource?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AwrHubSourceAwrhubsourcesManagement resource.
 */
export interface AwrHubSourceAwrhubsourcesManagementArgs {
    /**
     * Unique Awr Hub Source identifier
     */
    awrHubSourceId: pulumi.Input<string>;
    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    enableAwrhubsource: pulumi.Input<boolean>;
}
