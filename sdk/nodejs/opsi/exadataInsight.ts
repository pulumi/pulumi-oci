// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Exadata Insight resource in Oracle Cloud Infrastructure Opsi service.
 *
 * Create an Exadata insight resource for an Exadata system in Operations Insights. The Exadata system will be enabled in Operations Insights. Exadata-related metric collection and analysis will be started.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExadataInsight = new oci.opsi.ExadataInsight("test_exadata_insight", {
 *     compartmentId: compartmentId,
 *     enterpriseManagerBridgeId: testEnterpriseManagerBridge.id,
 *     enterpriseManagerEntityIdentifier: exadataInsightEnterpriseManagerEntityIdentifier,
 *     enterpriseManagerIdentifier: exadataInsightEnterpriseManagerIdentifier,
 *     entitySource: exadataInsightEntitySource,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     isAutoSyncEnabled: exadataInsightIsAutoSyncEnabled,
 *     memberVmClusterDetails: [{
 *         compartmentId: compartmentId,
 *         dbmPrivateEndpointId: testPrivateEndpoint.id,
 *         memberDatabaseDetails: [{
 *             compartmentId: compartmentId,
 *             connectionDetails: {
 *                 hosts: [{
 *                     hostIp: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsHostsHostIp,
 *                     port: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsHostsPort,
 *                 }],
 *                 protocol: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsConnectionDetailsProtocol,
 *                 serviceName: testService.name,
 *             },
 *             credentialDetails: {
 *                 credentialType: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsCredentialType,
 *                 credentialSourceName: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsCredentialSourceName,
 *                 passwordSecretId: testSecret.id,
 *                 role: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsCredentialDetailsRole,
 *                 userName: testUser.name,
 *                 walletSecretId: testSecret.id,
 *             },
 *             databaseId: testDatabase.id,
 *             databaseResourceType: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDatabaseResourceType,
 *             dbmPrivateEndpointId: testPrivateEndpoint.id,
 *             definedTags: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDefinedTags,
 *             deploymentType: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsDeploymentType,
 *             entitySource: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsEntitySource,
 *             freeformTags: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsFreeformTags,
 *             opsiPrivateEndpointId: testPrivateEndpoint.id,
 *             serviceName: testService.name,
 *             systemTags: exadataInsightMemberVmClusterDetailsMemberDatabaseDetailsSystemTags,
 *         }],
 *         opsiPrivateEndpointId: testPrivateEndpoint.id,
 *         vmclusterId: testVmcluster.id,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ExadataInsights can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Opsi/exadataInsight:ExadataInsight test_exadata_insight "id"
 * ```
 */
export class ExadataInsight extends pulumi.CustomResource {
    /**
     * Get an existing ExadataInsight resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExadataInsightState, opts?: pulumi.CustomResourceOptions): ExadataInsight {
        return new ExadataInsight(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Opsi/exadataInsight:ExadataInsight';

    /**
     * Returns true if the given object is an instance of ExadataInsight.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExadataInsight {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExadataInsight.__pulumiType;
    }

    /**
     * (Updatable) Compartment Identifier of Exadata insight
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * OPSI Enterprise Manager Bridge OCID
     */
    public readonly enterpriseManagerBridgeId!: pulumi.Output<string>;
    /**
     * Enterprise Manager Entity Display Name
     */
    public /*out*/ readonly enterpriseManagerEntityDisplayName!: pulumi.Output<string>;
    /**
     * Enterprise Manager Entity Unique Identifier
     */
    public readonly enterpriseManagerEntityIdentifier!: pulumi.Output<string>;
    /**
     * Enterprise Manager Entity Name
     */
    public /*out*/ readonly enterpriseManagerEntityName!: pulumi.Output<string>;
    /**
     * Enterprise Manager Entity Type
     */
    public /*out*/ readonly enterpriseManagerEntityType!: pulumi.Output<string>;
    /**
     * Enterprise Manager Unique Identifier
     */
    public readonly enterpriseManagerIdentifier!: pulumi.Output<string>;
    /**
     * (Updatable) Source of the Exadata system.
     */
    public readonly entitySource!: pulumi.Output<string>;
    /**
     * The user-friendly name for the Exadata system. The name does not have to be unique.
     */
    public /*out*/ readonly exadataDisplayName!: pulumi.Output<string>;
    public readonly exadataInfraId!: pulumi.Output<string>;
    public /*out*/ readonly exadataInfraResourceType!: pulumi.Output<string>;
    /**
     * The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
     */
    public /*out*/ readonly exadataName!: pulumi.Output<string>;
    /**
     * Exadata rack type.
     */
    public /*out*/ readonly exadataRackType!: pulumi.Output<string>;
    public /*out*/ readonly exadataShape!: pulumi.Output<string>;
    /**
     * Operations Insights internal representation of the the Exadata system type.
     */
    public /*out*/ readonly exadataType!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
     */
    public readonly isAutoSyncEnabled!: pulumi.Output<boolean>;
    /**
     * true if virtualization is used in the Exadata system
     */
    public /*out*/ readonly isVirtualizedExadata!: pulumi.Output<boolean>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    public readonly memberVmClusterDetails!: pulumi.Output<outputs.Opsi.ExadataInsightMemberVmClusterDetail[]>;
    /**
     * The current state of the Exadata insight.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time the Exadata insight was updated. An RFC3339 formatted datetime string
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a ExadataInsight resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExadataInsightArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExadataInsightArgs | ExadataInsightState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExadataInsightState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["enterpriseManagerBridgeId"] = state ? state.enterpriseManagerBridgeId : undefined;
            resourceInputs["enterpriseManagerEntityDisplayName"] = state ? state.enterpriseManagerEntityDisplayName : undefined;
            resourceInputs["enterpriseManagerEntityIdentifier"] = state ? state.enterpriseManagerEntityIdentifier : undefined;
            resourceInputs["enterpriseManagerEntityName"] = state ? state.enterpriseManagerEntityName : undefined;
            resourceInputs["enterpriseManagerEntityType"] = state ? state.enterpriseManagerEntityType : undefined;
            resourceInputs["enterpriseManagerIdentifier"] = state ? state.enterpriseManagerIdentifier : undefined;
            resourceInputs["entitySource"] = state ? state.entitySource : undefined;
            resourceInputs["exadataDisplayName"] = state ? state.exadataDisplayName : undefined;
            resourceInputs["exadataInfraId"] = state ? state.exadataInfraId : undefined;
            resourceInputs["exadataInfraResourceType"] = state ? state.exadataInfraResourceType : undefined;
            resourceInputs["exadataName"] = state ? state.exadataName : undefined;
            resourceInputs["exadataRackType"] = state ? state.exadataRackType : undefined;
            resourceInputs["exadataShape"] = state ? state.exadataShape : undefined;
            resourceInputs["exadataType"] = state ? state.exadataType : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isAutoSyncEnabled"] = state ? state.isAutoSyncEnabled : undefined;
            resourceInputs["isVirtualizedExadata"] = state ? state.isVirtualizedExadata : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["memberVmClusterDetails"] = state ? state.memberVmClusterDetails : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as ExadataInsightArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.entitySource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entitySource'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["enterpriseManagerBridgeId"] = args ? args.enterpriseManagerBridgeId : undefined;
            resourceInputs["enterpriseManagerEntityIdentifier"] = args ? args.enterpriseManagerEntityIdentifier : undefined;
            resourceInputs["enterpriseManagerIdentifier"] = args ? args.enterpriseManagerIdentifier : undefined;
            resourceInputs["entitySource"] = args ? args.entitySource : undefined;
            resourceInputs["exadataInfraId"] = args ? args.exadataInfraId : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isAutoSyncEnabled"] = args ? args.isAutoSyncEnabled : undefined;
            resourceInputs["memberVmClusterDetails"] = args ? args.memberVmClusterDetails : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["enterpriseManagerEntityDisplayName"] = undefined /*out*/;
            resourceInputs["enterpriseManagerEntityName"] = undefined /*out*/;
            resourceInputs["enterpriseManagerEntityType"] = undefined /*out*/;
            resourceInputs["exadataDisplayName"] = undefined /*out*/;
            resourceInputs["exadataInfraResourceType"] = undefined /*out*/;
            resourceInputs["exadataName"] = undefined /*out*/;
            resourceInputs["exadataRackType"] = undefined /*out*/;
            resourceInputs["exadataShape"] = undefined /*out*/;
            resourceInputs["exadataType"] = undefined /*out*/;
            resourceInputs["isVirtualizedExadata"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExadataInsight.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExadataInsight resources.
 */
export interface ExadataInsightState {
    /**
     * (Updatable) Compartment Identifier of Exadata insight
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * OPSI Enterprise Manager Bridge OCID
     */
    enterpriseManagerBridgeId?: pulumi.Input<string>;
    /**
     * Enterprise Manager Entity Display Name
     */
    enterpriseManagerEntityDisplayName?: pulumi.Input<string>;
    /**
     * Enterprise Manager Entity Unique Identifier
     */
    enterpriseManagerEntityIdentifier?: pulumi.Input<string>;
    /**
     * Enterprise Manager Entity Name
     */
    enterpriseManagerEntityName?: pulumi.Input<string>;
    /**
     * Enterprise Manager Entity Type
     */
    enterpriseManagerEntityType?: pulumi.Input<string>;
    /**
     * Enterprise Manager Unique Identifier
     */
    enterpriseManagerIdentifier?: pulumi.Input<string>;
    /**
     * (Updatable) Source of the Exadata system.
     */
    entitySource?: pulumi.Input<string>;
    /**
     * The user-friendly name for the Exadata system. The name does not have to be unique.
     */
    exadataDisplayName?: pulumi.Input<string>;
    exadataInfraId?: pulumi.Input<string>;
    exadataInfraResourceType?: pulumi.Input<string>;
    /**
     * The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
     */
    exadataName?: pulumi.Input<string>;
    /**
     * Exadata rack type.
     */
    exadataRackType?: pulumi.Input<string>;
    exadataShape?: pulumi.Input<string>;
    /**
     * Operations Insights internal representation of the the Exadata system type.
     */
    exadataType?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
     */
    isAutoSyncEnabled?: pulumi.Input<boolean>;
    /**
     * true if virtualization is used in the Exadata system
     */
    isVirtualizedExadata?: pulumi.Input<boolean>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    memberVmClusterDetails?: pulumi.Input<pulumi.Input<inputs.Opsi.ExadataInsightMemberVmClusterDetail>[]>;
    /**
     * The current state of the Exadata insight.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    status?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the Exadata insight was updated. An RFC3339 formatted datetime string
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExadataInsight resource.
 */
export interface ExadataInsightArgs {
    /**
     * (Updatable) Compartment Identifier of Exadata insight
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * OPSI Enterprise Manager Bridge OCID
     */
    enterpriseManagerBridgeId?: pulumi.Input<string>;
    /**
     * Enterprise Manager Entity Unique Identifier
     */
    enterpriseManagerEntityIdentifier?: pulumi.Input<string>;
    /**
     * Enterprise Manager Unique Identifier
     */
    enterpriseManagerIdentifier?: pulumi.Input<string>;
    /**
     * (Updatable) Source of the Exadata system.
     */
    entitySource: pulumi.Input<string>;
    exadataInfraId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Set to true to enable automatic enablement and disablement of related targets from Enterprise Manager. New resources (e.g. Database Insights) will be placed in the same compartment as the related Exadata Insight.
     */
    isAutoSyncEnabled?: pulumi.Input<boolean>;
    memberVmClusterDetails?: pulumi.Input<pulumi.Input<inputs.Opsi.ExadataInsightMemberVmClusterDetail>[]>;
    /**
     * (Updatable) Status of the resource. Example: "ENABLED", "DISABLED". Resource can be either enabled or disabled by updating the value of status field to either "ENABLED" or "DISABLED"
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    status?: pulumi.Input<string>;
}
