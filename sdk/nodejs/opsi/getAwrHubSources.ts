// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Awr Hub Sources in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of Awr Hub source objects.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAwrHubSources = oci.Opsi.getAwrHubSources({
 *     awrHubId: oci_opsi_awr_hub.test_awr_hub.id,
 *     awrHubSourceId: oci_opsi_awr_hub_source.test_awr_hub_source.id,
 *     compartmentId: _var.compartment_id,
 *     name: _var.awr_hub_source_name,
 *     sourceTypes: _var.awr_hub_source_source_type,
 *     states: _var.awr_hub_source_state,
 *     statuses: _var.awr_hub_source_status,
 * });
 * ```
 */
export function getAwrHubSources(args: GetAwrHubSourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetAwrHubSourcesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Opsi/getAwrHubSources:getAwrHubSources", {
        "awrHubId": args.awrHubId,
        "awrHubSourceId": args.awrHubSourceId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "sourceTypes": args.sourceTypes,
        "states": args.states,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getAwrHubSources.
 */
export interface GetAwrHubSourcesArgs {
    /**
     * Unique Awr Hub identifier
     */
    awrHubId: string;
    /**
     * Awr Hub source identifier
     */
    awrHubSourceId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: string;
    filters?: inputs.Opsi.GetAwrHubSourcesFilter[];
    /**
     * Awr Hub source database name
     */
    name?: string;
    /**
     * Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
     */
    sourceTypes?: string[];
    /**
     * Lifecycle states
     */
    states?: string[];
    /**
     * Resource Status
     */
    statuses?: string[];
}

/**
 * A collection of values returned by getAwrHubSources.
 */
export interface GetAwrHubSourcesResult {
    /**
     * AWR Hub OCID
     */
    readonly awrHubId: string;
    readonly awrHubSourceId?: string;
    /**
     * The list of awr_hub_source_summary_collection.
     */
    readonly awrHubSourceSummaryCollections: outputs.Opsi.GetAwrHubSourcesAwrHubSourceSummaryCollection[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId?: string;
    readonly filters?: outputs.Opsi.GetAwrHubSourcesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the Awr Hub source database.
     */
    readonly name?: string;
    readonly sourceTypes?: string[];
    /**
     * the current state of the source database
     */
    readonly states?: string[];
    /**
     * Indicates the status of a source database in Operations Insights
     */
    readonly statuses?: string[];
}
/**
 * This data source provides the list of Awr Hub Sources in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of Awr Hub source objects.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testAwrHubSources = oci.Opsi.getAwrHubSources({
 *     awrHubId: oci_opsi_awr_hub.test_awr_hub.id,
 *     awrHubSourceId: oci_opsi_awr_hub_source.test_awr_hub_source.id,
 *     compartmentId: _var.compartment_id,
 *     name: _var.awr_hub_source_name,
 *     sourceTypes: _var.awr_hub_source_source_type,
 *     states: _var.awr_hub_source_state,
 *     statuses: _var.awr_hub_source_status,
 * });
 * ```
 */
export function getAwrHubSourcesOutput(args: GetAwrHubSourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAwrHubSourcesResult> {
    return pulumi.output(args).apply((a: any) => getAwrHubSources(a, opts))
}

/**
 * A collection of arguments for invoking getAwrHubSources.
 */
export interface GetAwrHubSourcesOutputArgs {
    /**
     * Unique Awr Hub identifier
     */
    awrHubId: pulumi.Input<string>;
    /**
     * Awr Hub source identifier
     */
    awrHubSourceId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Opsi.GetAwrHubSourcesFilterArgs>[]>;
    /**
     * Awr Hub source database name
     */
    name?: pulumi.Input<string>;
    /**
     * Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
     */
    sourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Lifecycle states
     */
    states?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource Status
     */
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
