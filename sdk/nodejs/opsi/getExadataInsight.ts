// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Exadata Insight resource in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets details of an Exadata insight.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExadataInsight = oci.Opsi.getExadataInsight({
 *     exadataInsightId: oci_opsi_exadata_insight.test_exadata_insight.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getExadataInsight(args: GetExadataInsightArgs, opts?: pulumi.InvokeOptions): Promise<GetExadataInsightResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Opsi/getExadataInsight:getExadataInsight", {
        "exadataInsightId": args.exadataInsightId,
    }, opts);
}

/**
 * A collection of arguments for invoking getExadataInsight.
 */
export interface GetExadataInsightArgs {
    /**
     * Unique Exadata insight identifier
     */
    exadataInsightId: string;
}

/**
 * A collection of values returned by getExadataInsight.
 */
export interface GetExadataInsightResult {
    /**
     * Compartment identifier of the Exadata insight resource
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * OPSI Enterprise Manager Bridge OCID
     */
    readonly enterpriseManagerBridgeId: string;
    /**
     * Enterprise Manager Entity Display Name
     */
    readonly enterpriseManagerEntityDisplayName: string;
    /**
     * Enterprise Manager Entity Unique Identifier
     */
    readonly enterpriseManagerEntityIdentifier: string;
    /**
     * Enterprise Manager Entity Name
     */
    readonly enterpriseManagerEntityName: string;
    /**
     * Enterprise Manager Entity Type
     */
    readonly enterpriseManagerEntityType: string;
    /**
     * Enterprise Manager Unique Identifier
     */
    readonly enterpriseManagerIdentifier: string;
    /**
     * Source of the Exadata system.
     */
    readonly entitySource: string;
    /**
     * The user-friendly name for the Exadata system. The name does not have to be unique.
     */
    readonly exadataDisplayName: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Infrastructure.
     */
    readonly exadataInfraId: string;
    /**
     * Oracle Cloud Infrastructure exadata infrastructure resource type
     */
    readonly exadataInfraResourceType: string;
    readonly exadataInsightId: string;
    /**
     * The Exadata system name. If the Exadata systems managed by Enterprise Manager, the name is unique amongst the Exadata systems managed by the same Enterprise Manager.
     */
    readonly exadataName: string;
    /**
     * Exadata rack type.
     */
    readonly exadataRackType: string;
    /**
     * The shape of the Exadata Infrastructure.
     */
    readonly exadataShape: string;
    /**
     * Operations Insights internal representation of the the Exadata system type.
     */
    readonly exadataType: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * Exadata insight identifier
     */
    readonly id: string;
    readonly isAutoSyncEnabled: boolean;
    /**
     * true if virtualization is used in the Exadata system
     */
    readonly isVirtualizedExadata: boolean;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    readonly memberVmClusterDetails: outputs.Opsi.GetExadataInsightMemberVmClusterDetail[];
    /**
     * The current state of the Exadata insight.
     */
    readonly state: string;
    /**
     * Indicates the status of an Exadata insight in Operations Insights
     */
    readonly status: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The time the the Exadata insight was first enabled. An RFC3339 formatted datetime string
     */
    readonly timeCreated: string;
    /**
     * The time the Exadata insight was updated. An RFC3339 formatted datetime string
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Exadata Insight resource in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets details of an Exadata insight.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testExadataInsight = oci.Opsi.getExadataInsight({
 *     exadataInsightId: oci_opsi_exadata_insight.test_exadata_insight.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getExadataInsightOutput(args: GetExadataInsightOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetExadataInsightResult> {
    return pulumi.output(args).apply((a: any) => getExadataInsight(a, opts))
}

/**
 * A collection of arguments for invoking getExadataInsight.
 */
export interface GetExadataInsightOutputArgs {
    /**
     * Unique Exadata insight identifier
     */
    exadataInsightId: pulumi.Input<string>;
}
