// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Importable Compute Entities in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of available compute intances running cloud agent to add a new hostInsight.  An Compute entity is "available"
 * and will be shown if all the following conditions are true:
 *    1. Compute is running OCA
 *    2. Oracle Cloud Infrastructure Management Agent is not enabled or If Oracle Cloud Infrastructure Management Agent is enabled
 *       2.1 The agent OCID is not already being used for an existing hostInsight.
 *       2.2 The agent availabilityStatus = 'ACTIVE'
 *       2.3 The agent lifecycleState = 'ACTIVE'
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testImportableComputeEntities = oci.Opsi.getImportableComputeEntities({
 *     compartmentId: _var.compartment_id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getImportableComputeEntities(args: GetImportableComputeEntitiesArgs, opts?: pulumi.InvokeOptions): Promise<GetImportableComputeEntitiesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Opsi/getImportableComputeEntities:getImportableComputeEntities", {
        "compartmentId": args.compartmentId,
    }, opts);
}

/**
 * A collection of arguments for invoking getImportableComputeEntities.
 */
export interface GetImportableComputeEntitiesArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
}

/**
 * A collection of values returned by getImportableComputeEntities.
 */
export interface GetImportableComputeEntitiesResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Array of importable compute entity objects.
     */
    readonly items: outputs.Opsi.GetImportableComputeEntitiesItem[];
}
/**
 * This data source provides the list of Importable Compute Entities in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of available compute intances running cloud agent to add a new hostInsight.  An Compute entity is "available"
 * and will be shown if all the following conditions are true:
 *    1. Compute is running OCA
 *    2. Oracle Cloud Infrastructure Management Agent is not enabled or If Oracle Cloud Infrastructure Management Agent is enabled
 *       2.1 The agent OCID is not already being used for an existing hostInsight.
 *       2.2 The agent availabilityStatus = 'ACTIVE'
 *       2.3 The agent lifecycleState = 'ACTIVE'
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testImportableComputeEntities = oci.Opsi.getImportableComputeEntities({
 *     compartmentId: _var.compartment_id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getImportableComputeEntitiesOutput(args: GetImportableComputeEntitiesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImportableComputeEntitiesResult> {
    return pulumi.output(args).apply((a: any) => getImportableComputeEntities(a, opts))
}

/**
 * A collection of arguments for invoking getImportableComputeEntities.
 */
export interface GetImportableComputeEntitiesOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
}
