// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific News Report resource in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets details of a news report.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNewsReport = oci.Opsi.getNewsReport({
 *     newsReportId: testNewsReportOciOpsiNewsReport.id,
 * });
 * ```
 */
export function getNewsReport(args: GetNewsReportArgs, opts?: pulumi.InvokeOptions): Promise<GetNewsReportResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Opsi/getNewsReport:getNewsReport", {
        "newsReportId": args.newsReportId,
    }, opts);
}

/**
 * A collection of arguments for invoking getNewsReport.
 */
export interface GetNewsReportArgs {
    /**
     * Unique news report identifier.
     */
    newsReportId: string;
}

/**
 * A collection of values returned by getNewsReport.
 */
export interface GetNewsReportResult {
    /**
     * A flag to consider the resources within a given compartment and all sub-compartments.
     */
    readonly areChildCompartmentsIncluded: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * Content types that the news report can handle.
     */
    readonly contentTypes: outputs.Opsi.GetNewsReportContentType[];
    /**
     * Day of the week in which the news report will be sent if the frequency is set to WEEKLY.
     */
    readonly dayOfWeek: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * The description of the news report.
     */
    readonly description: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the news report resource.
     */
    readonly id: string;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    readonly lifecycleDetails: string;
    /**
     * Language of the news report.
     */
    readonly locale: string;
    /**
     * The news report name.
     */
    readonly name: string;
    /**
     * News report frequency.
     */
    readonly newsFrequency: string;
    readonly newsReportId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ONS topic.
     */
    readonly onsTopicId: string;
    /**
     * The current state of the news report.
     */
    readonly state: string;
    /**
     * Indicates the status of a news report in Ops Insights.
     */
    readonly status: string;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The time the the news report was first enabled. An RFC3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time the news report was updated. An RFC3339 formatted datetime string.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific News Report resource in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets details of a news report.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNewsReport = oci.Opsi.getNewsReport({
 *     newsReportId: testNewsReportOciOpsiNewsReport.id,
 * });
 * ```
 */
export function getNewsReportOutput(args: GetNewsReportOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNewsReportResult> {
    return pulumi.output(args).apply((a: any) => getNewsReport(a, opts))
}

/**
 * A collection of arguments for invoking getNewsReport.
 */
export interface GetNewsReportOutputArgs {
    /**
     * Unique news report identifier.
     */
    newsReportId: pulumi.Input<string>;
}
