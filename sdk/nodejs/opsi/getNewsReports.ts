// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of News Reports in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of news reports based on the query parameters specified. Either compartmentId or id query parameter must be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNewsReports = oci.Opsi.getNewsReports({
 *     compartmentId: compartmentId,
 *     compartmentIdInSubtree: newsReportCompartmentIdInSubtree,
 *     newsReportId: testNewsReport.id,
 *     states: newsReportState,
 *     statuses: newsReportStatus,
 * });
 * ```
 */
export function getNewsReports(args?: GetNewsReportsArgs, opts?: pulumi.InvokeOptions): Promise<GetNewsReportsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Opsi/getNewsReports:getNewsReports", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "newsReportId": args.newsReportId,
        "states": args.states,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getNewsReports.
 */
export interface GetNewsReportsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: string;
    /**
     * A flag to search all resources within a given compartment and all sub-compartments.
     */
    compartmentIdInSubtree?: boolean;
    filters?: inputs.Opsi.GetNewsReportsFilter[];
    /**
     * Unique Ops Insights news report identifier
     */
    newsReportId?: string;
    /**
     * Lifecycle states
     */
    states?: string[];
    /**
     * Resource Status
     */
    statuses?: string[];
}

/**
 * A collection of values returned by getNewsReports.
 */
export interface GetNewsReportsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.Opsi.GetNewsReportsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of news_report_collection.
     */
    readonly newsReportCollections: outputs.Opsi.GetNewsReportsNewsReportCollection[];
    readonly newsReportId?: string;
    /**
     * The current state of the news report.
     */
    readonly states?: string[];
    /**
     * Indicates the status of a news report in Ops Insights.
     */
    readonly statuses?: string[];
}
/**
 * This data source provides the list of News Reports in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of news reports based on the query parameters specified. Either compartmentId or id query parameter must be specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNewsReports = oci.Opsi.getNewsReports({
 *     compartmentId: compartmentId,
 *     compartmentIdInSubtree: newsReportCompartmentIdInSubtree,
 *     newsReportId: testNewsReport.id,
 *     states: newsReportState,
 *     statuses: newsReportStatus,
 * });
 * ```
 */
export function getNewsReportsOutput(args?: GetNewsReportsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNewsReportsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Opsi/getNewsReports:getNewsReports", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "newsReportId": args.newsReportId,
        "states": args.states,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getNewsReports.
 */
export interface GetNewsReportsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A flag to search all resources within a given compartment and all sub-compartments.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.Opsi.GetNewsReportsFilterArgs>[]>;
    /**
     * Unique Ops Insights news report identifier
     */
    newsReportId?: pulumi.Input<string>;
    /**
     * Lifecycle states
     */
    states?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource Status
     */
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
