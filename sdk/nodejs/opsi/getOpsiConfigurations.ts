// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Opsi Configurations in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of OPSI configuration resources based on the query parameters specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOpsiConfigurations = oci.Opsi.getOpsiConfigurations({
 *     compartmentId: compartmentId,
 *     displayName: opsiConfigurationDisplayName,
 *     opsiConfigTypes: opsiConfigurationOpsiConfigType,
 *     states: opsiConfigurationState,
 * });
 * ```
 */
export function getOpsiConfigurations(args: GetOpsiConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetOpsiConfigurationsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Opsi/getOpsiConfigurations:getOpsiConfigurations", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "opsiConfigTypes": args.opsiConfigTypes,
        "states": args.states,
    }, opts);
}

/**
 * A collection of arguments for invoking getOpsiConfigurations.
 */
export interface GetOpsiConfigurationsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: string;
    /**
     * Filter to return based on resources that match the entire display name.
     */
    displayName?: string;
    filters?: inputs.Opsi.GetOpsiConfigurationsFilter[];
    /**
     * Filter to return based on configuration type of OPSI configuration.
     */
    opsiConfigTypes?: string[];
    /**
     * Filter to return based on Lifecycle state of OPSI configuration.
     */
    states?: string[];
}

/**
 * A collection of values returned by getOpsiConfigurations.
 */
export interface GetOpsiConfigurationsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    readonly compartmentId: string;
    /**
     * User-friendly display name for the OPSI configuration. The name does not have to be unique.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Opsi.GetOpsiConfigurationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * OPSI configuration type.
     */
    readonly opsiConfigTypes?: string[];
    /**
     * The list of opsi_configurations_collection.
     */
    readonly opsiConfigurationsCollections: outputs.Opsi.GetOpsiConfigurationsOpsiConfigurationsCollection[];
    /**
     * OPSI configuration resource lifecycle state.
     */
    readonly states?: string[];
}
/**
 * This data source provides the list of Opsi Configurations in Oracle Cloud Infrastructure Opsi service.
 *
 * Gets a list of OPSI configuration resources based on the query parameters specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOpsiConfigurations = oci.Opsi.getOpsiConfigurations({
 *     compartmentId: compartmentId,
 *     displayName: opsiConfigurationDisplayName,
 *     opsiConfigTypes: opsiConfigurationOpsiConfigType,
 *     states: opsiConfigurationState,
 * });
 * ```
 */
export function getOpsiConfigurationsOutput(args: GetOpsiConfigurationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetOpsiConfigurationsResult> {
    return pulumi.output(args).apply((a: any) => getOpsiConfigurations(a, opts))
}

/**
 * A collection of arguments for invoking getOpsiConfigurations.
 */
export interface GetOpsiConfigurationsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Filter to return based on resources that match the entire display name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Opsi.GetOpsiConfigurationsFilterArgs>[]>;
    /**
     * Filter to return based on configuration type of OPSI configuration.
     */
    opsiConfigTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter to return based on Lifecycle state of OPSI configuration.
     */
    states?: pulumi.Input<pulumi.Input<string>[]>;
}
