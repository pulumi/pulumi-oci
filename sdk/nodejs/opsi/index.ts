// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AwrHubArgs, AwrHubState } from "./awrHub";
export type AwrHub = import("./awrHub").AwrHub;
export const AwrHub: typeof import("./awrHub").AwrHub = null as any;
utilities.lazyLoad(exports, ["AwrHub"], () => require("./awrHub"));

export { AwrHubSourceArgs, AwrHubSourceState } from "./awrHubSource";
export type AwrHubSource = import("./awrHubSource").AwrHubSource;
export const AwrHubSource: typeof import("./awrHubSource").AwrHubSource = null as any;
utilities.lazyLoad(exports, ["AwrHubSource"], () => require("./awrHubSource"));

export { AwrHubSourceAwrhubsourcesManagementArgs, AwrHubSourceAwrhubsourcesManagementState } from "./awrHubSourceAwrhubsourcesManagement";
export type AwrHubSourceAwrhubsourcesManagement = import("./awrHubSourceAwrhubsourcesManagement").AwrHubSourceAwrhubsourcesManagement;
export const AwrHubSourceAwrhubsourcesManagement: typeof import("./awrHubSourceAwrhubsourcesManagement").AwrHubSourceAwrhubsourcesManagement = null as any;
utilities.lazyLoad(exports, ["AwrHubSourceAwrhubsourcesManagement"], () => require("./awrHubSourceAwrhubsourcesManagement"));

export { DatabaseInsightArgs, DatabaseInsightState } from "./databaseInsight";
export type DatabaseInsight = import("./databaseInsight").DatabaseInsight;
export const DatabaseInsight: typeof import("./databaseInsight").DatabaseInsight = null as any;
utilities.lazyLoad(exports, ["DatabaseInsight"], () => require("./databaseInsight"));

export { EnterpriseManagerBridgeArgs, EnterpriseManagerBridgeState } from "./enterpriseManagerBridge";
export type EnterpriseManagerBridge = import("./enterpriseManagerBridge").EnterpriseManagerBridge;
export const EnterpriseManagerBridge: typeof import("./enterpriseManagerBridge").EnterpriseManagerBridge = null as any;
utilities.lazyLoad(exports, ["EnterpriseManagerBridge"], () => require("./enterpriseManagerBridge"));

export { ExadataInsightArgs, ExadataInsightState } from "./exadataInsight";
export type ExadataInsight = import("./exadataInsight").ExadataInsight;
export const ExadataInsight: typeof import("./exadataInsight").ExadataInsight = null as any;
utilities.lazyLoad(exports, ["ExadataInsight"], () => require("./exadataInsight"));

export { GetAwrHubArgs, GetAwrHubResult, GetAwrHubOutputArgs } from "./getAwrHub";
export const getAwrHub: typeof import("./getAwrHub").getAwrHub = null as any;
export const getAwrHubOutput: typeof import("./getAwrHub").getAwrHubOutput = null as any;
utilities.lazyLoad(exports, ["getAwrHub","getAwrHubOutput"], () => require("./getAwrHub"));

export { GetAwrHubAwrSnapshotArgs, GetAwrHubAwrSnapshotResult, GetAwrHubAwrSnapshotOutputArgs } from "./getAwrHubAwrSnapshot";
export const getAwrHubAwrSnapshot: typeof import("./getAwrHubAwrSnapshot").getAwrHubAwrSnapshot = null as any;
export const getAwrHubAwrSnapshotOutput: typeof import("./getAwrHubAwrSnapshot").getAwrHubAwrSnapshotOutput = null as any;
utilities.lazyLoad(exports, ["getAwrHubAwrSnapshot","getAwrHubAwrSnapshotOutput"], () => require("./getAwrHubAwrSnapshot"));

export { GetAwrHubAwrSnapshotsArgs, GetAwrHubAwrSnapshotsResult, GetAwrHubAwrSnapshotsOutputArgs } from "./getAwrHubAwrSnapshots";
export const getAwrHubAwrSnapshots: typeof import("./getAwrHubAwrSnapshots").getAwrHubAwrSnapshots = null as any;
export const getAwrHubAwrSnapshotsOutput: typeof import("./getAwrHubAwrSnapshots").getAwrHubAwrSnapshotsOutput = null as any;
utilities.lazyLoad(exports, ["getAwrHubAwrSnapshots","getAwrHubAwrSnapshotsOutput"], () => require("./getAwrHubAwrSnapshots"));

export { GetAwrHubAwrSourcesSummaryArgs, GetAwrHubAwrSourcesSummaryResult, GetAwrHubAwrSourcesSummaryOutputArgs } from "./getAwrHubAwrSourcesSummary";
export const getAwrHubAwrSourcesSummary: typeof import("./getAwrHubAwrSourcesSummary").getAwrHubAwrSourcesSummary = null as any;
export const getAwrHubAwrSourcesSummaryOutput: typeof import("./getAwrHubAwrSourcesSummary").getAwrHubAwrSourcesSummaryOutput = null as any;
utilities.lazyLoad(exports, ["getAwrHubAwrSourcesSummary","getAwrHubAwrSourcesSummaryOutput"], () => require("./getAwrHubAwrSourcesSummary"));

export { GetAwrHubSourceArgs, GetAwrHubSourceResult, GetAwrHubSourceOutputArgs } from "./getAwrHubSource";
export const getAwrHubSource: typeof import("./getAwrHubSource").getAwrHubSource = null as any;
export const getAwrHubSourceOutput: typeof import("./getAwrHubSource").getAwrHubSourceOutput = null as any;
utilities.lazyLoad(exports, ["getAwrHubSource","getAwrHubSourceOutput"], () => require("./getAwrHubSource"));

export { GetAwrHubSourcesArgs, GetAwrHubSourcesResult, GetAwrHubSourcesOutputArgs } from "./getAwrHubSources";
export const getAwrHubSources: typeof import("./getAwrHubSources").getAwrHubSources = null as any;
export const getAwrHubSourcesOutput: typeof import("./getAwrHubSources").getAwrHubSourcesOutput = null as any;
utilities.lazyLoad(exports, ["getAwrHubSources","getAwrHubSourcesOutput"], () => require("./getAwrHubSources"));

export { GetAwrHubsArgs, GetAwrHubsResult, GetAwrHubsOutputArgs } from "./getAwrHubs";
export const getAwrHubs: typeof import("./getAwrHubs").getAwrHubs = null as any;
export const getAwrHubsOutput: typeof import("./getAwrHubs").getAwrHubsOutput = null as any;
utilities.lazyLoad(exports, ["getAwrHubs","getAwrHubsOutput"], () => require("./getAwrHubs"));

export { GetDatabaseInsightArgs, GetDatabaseInsightResult, GetDatabaseInsightOutputArgs } from "./getDatabaseInsight";
export const getDatabaseInsight: typeof import("./getDatabaseInsight").getDatabaseInsight = null as any;
export const getDatabaseInsightOutput: typeof import("./getDatabaseInsight").getDatabaseInsightOutput = null as any;
utilities.lazyLoad(exports, ["getDatabaseInsight","getDatabaseInsightOutput"], () => require("./getDatabaseInsight"));

export { GetDatabaseInsightsArgs, GetDatabaseInsightsResult, GetDatabaseInsightsOutputArgs } from "./getDatabaseInsights";
export const getDatabaseInsights: typeof import("./getDatabaseInsights").getDatabaseInsights = null as any;
export const getDatabaseInsightsOutput: typeof import("./getDatabaseInsights").getDatabaseInsightsOutput = null as any;
utilities.lazyLoad(exports, ["getDatabaseInsights","getDatabaseInsightsOutput"], () => require("./getDatabaseInsights"));

export { GetEnterpriseManagerBridgeArgs, GetEnterpriseManagerBridgeResult, GetEnterpriseManagerBridgeOutputArgs } from "./getEnterpriseManagerBridge";
export const getEnterpriseManagerBridge: typeof import("./getEnterpriseManagerBridge").getEnterpriseManagerBridge = null as any;
export const getEnterpriseManagerBridgeOutput: typeof import("./getEnterpriseManagerBridge").getEnterpriseManagerBridgeOutput = null as any;
utilities.lazyLoad(exports, ["getEnterpriseManagerBridge","getEnterpriseManagerBridgeOutput"], () => require("./getEnterpriseManagerBridge"));

export { GetEnterpriseManagerBridgesArgs, GetEnterpriseManagerBridgesResult, GetEnterpriseManagerBridgesOutputArgs } from "./getEnterpriseManagerBridges";
export const getEnterpriseManagerBridges: typeof import("./getEnterpriseManagerBridges").getEnterpriseManagerBridges = null as any;
export const getEnterpriseManagerBridgesOutput: typeof import("./getEnterpriseManagerBridges").getEnterpriseManagerBridgesOutput = null as any;
utilities.lazyLoad(exports, ["getEnterpriseManagerBridges","getEnterpriseManagerBridgesOutput"], () => require("./getEnterpriseManagerBridges"));

export { GetExadataInsightArgs, GetExadataInsightResult, GetExadataInsightOutputArgs } from "./getExadataInsight";
export const getExadataInsight: typeof import("./getExadataInsight").getExadataInsight = null as any;
export const getExadataInsightOutput: typeof import("./getExadataInsight").getExadataInsightOutput = null as any;
utilities.lazyLoad(exports, ["getExadataInsight","getExadataInsightOutput"], () => require("./getExadataInsight"));

export { GetExadataInsightsArgs, GetExadataInsightsResult, GetExadataInsightsOutputArgs } from "./getExadataInsights";
export const getExadataInsights: typeof import("./getExadataInsights").getExadataInsights = null as any;
export const getExadataInsightsOutput: typeof import("./getExadataInsights").getExadataInsightsOutput = null as any;
utilities.lazyLoad(exports, ["getExadataInsights","getExadataInsightsOutput"], () => require("./getExadataInsights"));

export { GetHostInsightArgs, GetHostInsightResult, GetHostInsightOutputArgs } from "./getHostInsight";
export const getHostInsight: typeof import("./getHostInsight").getHostInsight = null as any;
export const getHostInsightOutput: typeof import("./getHostInsight").getHostInsightOutput = null as any;
utilities.lazyLoad(exports, ["getHostInsight","getHostInsightOutput"], () => require("./getHostInsight"));

export { GetHostInsightsArgs, GetHostInsightsResult, GetHostInsightsOutputArgs } from "./getHostInsights";
export const getHostInsights: typeof import("./getHostInsights").getHostInsights = null as any;
export const getHostInsightsOutput: typeof import("./getHostInsights").getHostInsightsOutput = null as any;
utilities.lazyLoad(exports, ["getHostInsights","getHostInsightsOutput"], () => require("./getHostInsights"));

export { GetImportableAgentEntitiesArgs, GetImportableAgentEntitiesResult, GetImportableAgentEntitiesOutputArgs } from "./getImportableAgentEntities";
export const getImportableAgentEntities: typeof import("./getImportableAgentEntities").getImportableAgentEntities = null as any;
export const getImportableAgentEntitiesOutput: typeof import("./getImportableAgentEntities").getImportableAgentEntitiesOutput = null as any;
utilities.lazyLoad(exports, ["getImportableAgentEntities","getImportableAgentEntitiesOutput"], () => require("./getImportableAgentEntities"));

export { GetImportableAgentEntityArgs, GetImportableAgentEntityResult, GetImportableAgentEntityOutputArgs } from "./getImportableAgentEntity";
export const getImportableAgentEntity: typeof import("./getImportableAgentEntity").getImportableAgentEntity = null as any;
export const getImportableAgentEntityOutput: typeof import("./getImportableAgentEntity").getImportableAgentEntityOutput = null as any;
utilities.lazyLoad(exports, ["getImportableAgentEntity","getImportableAgentEntityOutput"], () => require("./getImportableAgentEntity"));

export { GetImportableComputeEntitiesArgs, GetImportableComputeEntitiesResult, GetImportableComputeEntitiesOutputArgs } from "./getImportableComputeEntities";
export const getImportableComputeEntities: typeof import("./getImportableComputeEntities").getImportableComputeEntities = null as any;
export const getImportableComputeEntitiesOutput: typeof import("./getImportableComputeEntities").getImportableComputeEntitiesOutput = null as any;
utilities.lazyLoad(exports, ["getImportableComputeEntities","getImportableComputeEntitiesOutput"], () => require("./getImportableComputeEntities"));

export { GetImportableComputeEntityArgs, GetImportableComputeEntityResult, GetImportableComputeEntityOutputArgs } from "./getImportableComputeEntity";
export const getImportableComputeEntity: typeof import("./getImportableComputeEntity").getImportableComputeEntity = null as any;
export const getImportableComputeEntityOutput: typeof import("./getImportableComputeEntity").getImportableComputeEntityOutput = null as any;
utilities.lazyLoad(exports, ["getImportableComputeEntity","getImportableComputeEntityOutput"], () => require("./getImportableComputeEntity"));

export { GetNewsReportArgs, GetNewsReportResult, GetNewsReportOutputArgs } from "./getNewsReport";
export const getNewsReport: typeof import("./getNewsReport").getNewsReport = null as any;
export const getNewsReportOutput: typeof import("./getNewsReport").getNewsReportOutput = null as any;
utilities.lazyLoad(exports, ["getNewsReport","getNewsReportOutput"], () => require("./getNewsReport"));

export { GetNewsReportsArgs, GetNewsReportsResult, GetNewsReportsOutputArgs } from "./getNewsReports";
export const getNewsReports: typeof import("./getNewsReports").getNewsReports = null as any;
export const getNewsReportsOutput: typeof import("./getNewsReports").getNewsReportsOutput = null as any;
utilities.lazyLoad(exports, ["getNewsReports","getNewsReportsOutput"], () => require("./getNewsReports"));

export { GetOperationsInsightsPrivateEndpointArgs, GetOperationsInsightsPrivateEndpointResult, GetOperationsInsightsPrivateEndpointOutputArgs } from "./getOperationsInsightsPrivateEndpoint";
export const getOperationsInsightsPrivateEndpoint: typeof import("./getOperationsInsightsPrivateEndpoint").getOperationsInsightsPrivateEndpoint = null as any;
export const getOperationsInsightsPrivateEndpointOutput: typeof import("./getOperationsInsightsPrivateEndpoint").getOperationsInsightsPrivateEndpointOutput = null as any;
utilities.lazyLoad(exports, ["getOperationsInsightsPrivateEndpoint","getOperationsInsightsPrivateEndpointOutput"], () => require("./getOperationsInsightsPrivateEndpoint"));

export { GetOperationsInsightsPrivateEndpointsArgs, GetOperationsInsightsPrivateEndpointsResult, GetOperationsInsightsPrivateEndpointsOutputArgs } from "./getOperationsInsightsPrivateEndpoints";
export const getOperationsInsightsPrivateEndpoints: typeof import("./getOperationsInsightsPrivateEndpoints").getOperationsInsightsPrivateEndpoints = null as any;
export const getOperationsInsightsPrivateEndpointsOutput: typeof import("./getOperationsInsightsPrivateEndpoints").getOperationsInsightsPrivateEndpointsOutput = null as any;
utilities.lazyLoad(exports, ["getOperationsInsightsPrivateEndpoints","getOperationsInsightsPrivateEndpointsOutput"], () => require("./getOperationsInsightsPrivateEndpoints"));

export { GetOperationsInsightsWarehouseArgs, GetOperationsInsightsWarehouseResult, GetOperationsInsightsWarehouseOutputArgs } from "./getOperationsInsightsWarehouse";
export const getOperationsInsightsWarehouse: typeof import("./getOperationsInsightsWarehouse").getOperationsInsightsWarehouse = null as any;
export const getOperationsInsightsWarehouseOutput: typeof import("./getOperationsInsightsWarehouse").getOperationsInsightsWarehouseOutput = null as any;
utilities.lazyLoad(exports, ["getOperationsInsightsWarehouse","getOperationsInsightsWarehouseOutput"], () => require("./getOperationsInsightsWarehouse"));

export { GetOperationsInsightsWarehouseResourceUsageSummaryArgs, GetOperationsInsightsWarehouseResourceUsageSummaryResult, GetOperationsInsightsWarehouseResourceUsageSummaryOutputArgs } from "./getOperationsInsightsWarehouseResourceUsageSummary";
export const getOperationsInsightsWarehouseResourceUsageSummary: typeof import("./getOperationsInsightsWarehouseResourceUsageSummary").getOperationsInsightsWarehouseResourceUsageSummary = null as any;
export const getOperationsInsightsWarehouseResourceUsageSummaryOutput: typeof import("./getOperationsInsightsWarehouseResourceUsageSummary").getOperationsInsightsWarehouseResourceUsageSummaryOutput = null as any;
utilities.lazyLoad(exports, ["getOperationsInsightsWarehouseResourceUsageSummary","getOperationsInsightsWarehouseResourceUsageSummaryOutput"], () => require("./getOperationsInsightsWarehouseResourceUsageSummary"));

export { GetOperationsInsightsWarehouseUserArgs, GetOperationsInsightsWarehouseUserResult, GetOperationsInsightsWarehouseUserOutputArgs } from "./getOperationsInsightsWarehouseUser";
export const getOperationsInsightsWarehouseUser: typeof import("./getOperationsInsightsWarehouseUser").getOperationsInsightsWarehouseUser = null as any;
export const getOperationsInsightsWarehouseUserOutput: typeof import("./getOperationsInsightsWarehouseUser").getOperationsInsightsWarehouseUserOutput = null as any;
utilities.lazyLoad(exports, ["getOperationsInsightsWarehouseUser","getOperationsInsightsWarehouseUserOutput"], () => require("./getOperationsInsightsWarehouseUser"));

export { GetOperationsInsightsWarehouseUsersArgs, GetOperationsInsightsWarehouseUsersResult, GetOperationsInsightsWarehouseUsersOutputArgs } from "./getOperationsInsightsWarehouseUsers";
export const getOperationsInsightsWarehouseUsers: typeof import("./getOperationsInsightsWarehouseUsers").getOperationsInsightsWarehouseUsers = null as any;
export const getOperationsInsightsWarehouseUsersOutput: typeof import("./getOperationsInsightsWarehouseUsers").getOperationsInsightsWarehouseUsersOutput = null as any;
utilities.lazyLoad(exports, ["getOperationsInsightsWarehouseUsers","getOperationsInsightsWarehouseUsersOutput"], () => require("./getOperationsInsightsWarehouseUsers"));

export { GetOperationsInsightsWarehousesArgs, GetOperationsInsightsWarehousesResult, GetOperationsInsightsWarehousesOutputArgs } from "./getOperationsInsightsWarehouses";
export const getOperationsInsightsWarehouses: typeof import("./getOperationsInsightsWarehouses").getOperationsInsightsWarehouses = null as any;
export const getOperationsInsightsWarehousesOutput: typeof import("./getOperationsInsightsWarehouses").getOperationsInsightsWarehousesOutput = null as any;
utilities.lazyLoad(exports, ["getOperationsInsightsWarehouses","getOperationsInsightsWarehousesOutput"], () => require("./getOperationsInsightsWarehouses"));

export { GetOpsiConfigurationArgs, GetOpsiConfigurationResult, GetOpsiConfigurationOutputArgs } from "./getOpsiConfiguration";
export const getOpsiConfiguration: typeof import("./getOpsiConfiguration").getOpsiConfiguration = null as any;
export const getOpsiConfigurationOutput: typeof import("./getOpsiConfiguration").getOpsiConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getOpsiConfiguration","getOpsiConfigurationOutput"], () => require("./getOpsiConfiguration"));

export { GetOpsiConfigurationConfigurationItemArgs, GetOpsiConfigurationConfigurationItemResult, GetOpsiConfigurationConfigurationItemOutputArgs } from "./getOpsiConfigurationConfigurationItem";
export const getOpsiConfigurationConfigurationItem: typeof import("./getOpsiConfigurationConfigurationItem").getOpsiConfigurationConfigurationItem = null as any;
export const getOpsiConfigurationConfigurationItemOutput: typeof import("./getOpsiConfigurationConfigurationItem").getOpsiConfigurationConfigurationItemOutput = null as any;
utilities.lazyLoad(exports, ["getOpsiConfigurationConfigurationItem","getOpsiConfigurationConfigurationItemOutput"], () => require("./getOpsiConfigurationConfigurationItem"));

export { GetOpsiConfigurationsArgs, GetOpsiConfigurationsResult, GetOpsiConfigurationsOutputArgs } from "./getOpsiConfigurations";
export const getOpsiConfigurations: typeof import("./getOpsiConfigurations").getOpsiConfigurations = null as any;
export const getOpsiConfigurationsOutput: typeof import("./getOpsiConfigurations").getOpsiConfigurationsOutput = null as any;
utilities.lazyLoad(exports, ["getOpsiConfigurations","getOpsiConfigurationsOutput"], () => require("./getOpsiConfigurations"));

export { HostInsightArgs, HostInsightState } from "./hostInsight";
export type HostInsight = import("./hostInsight").HostInsight;
export const HostInsight: typeof import("./hostInsight").HostInsight = null as any;
utilities.lazyLoad(exports, ["HostInsight"], () => require("./hostInsight"));

export { NewsReportArgs, NewsReportState } from "./newsReport";
export type NewsReport = import("./newsReport").NewsReport;
export const NewsReport: typeof import("./newsReport").NewsReport = null as any;
utilities.lazyLoad(exports, ["NewsReport"], () => require("./newsReport"));

export { OperationsInsightsPrivateEndpointArgs, OperationsInsightsPrivateEndpointState } from "./operationsInsightsPrivateEndpoint";
export type OperationsInsightsPrivateEndpoint = import("./operationsInsightsPrivateEndpoint").OperationsInsightsPrivateEndpoint;
export const OperationsInsightsPrivateEndpoint: typeof import("./operationsInsightsPrivateEndpoint").OperationsInsightsPrivateEndpoint = null as any;
utilities.lazyLoad(exports, ["OperationsInsightsPrivateEndpoint"], () => require("./operationsInsightsPrivateEndpoint"));

export { OperationsInsightsWarehouseArgs, OperationsInsightsWarehouseState } from "./operationsInsightsWarehouse";
export type OperationsInsightsWarehouse = import("./operationsInsightsWarehouse").OperationsInsightsWarehouse;
export const OperationsInsightsWarehouse: typeof import("./operationsInsightsWarehouse").OperationsInsightsWarehouse = null as any;
utilities.lazyLoad(exports, ["OperationsInsightsWarehouse"], () => require("./operationsInsightsWarehouse"));

export { OperationsInsightsWarehouseDownloadWarehouseWalletArgs, OperationsInsightsWarehouseDownloadWarehouseWalletState } from "./operationsInsightsWarehouseDownloadWarehouseWallet";
export type OperationsInsightsWarehouseDownloadWarehouseWallet = import("./operationsInsightsWarehouseDownloadWarehouseWallet").OperationsInsightsWarehouseDownloadWarehouseWallet;
export const OperationsInsightsWarehouseDownloadWarehouseWallet: typeof import("./operationsInsightsWarehouseDownloadWarehouseWallet").OperationsInsightsWarehouseDownloadWarehouseWallet = null as any;
utilities.lazyLoad(exports, ["OperationsInsightsWarehouseDownloadWarehouseWallet"], () => require("./operationsInsightsWarehouseDownloadWarehouseWallet"));

export { OperationsInsightsWarehouseRotateWarehouseWalletArgs, OperationsInsightsWarehouseRotateWarehouseWalletState } from "./operationsInsightsWarehouseRotateWarehouseWallet";
export type OperationsInsightsWarehouseRotateWarehouseWallet = import("./operationsInsightsWarehouseRotateWarehouseWallet").OperationsInsightsWarehouseRotateWarehouseWallet;
export const OperationsInsightsWarehouseRotateWarehouseWallet: typeof import("./operationsInsightsWarehouseRotateWarehouseWallet").OperationsInsightsWarehouseRotateWarehouseWallet = null as any;
utilities.lazyLoad(exports, ["OperationsInsightsWarehouseRotateWarehouseWallet"], () => require("./operationsInsightsWarehouseRotateWarehouseWallet"));

export { OperationsInsightsWarehouseUserArgs, OperationsInsightsWarehouseUserState } from "./operationsInsightsWarehouseUser";
export type OperationsInsightsWarehouseUser = import("./operationsInsightsWarehouseUser").OperationsInsightsWarehouseUser;
export const OperationsInsightsWarehouseUser: typeof import("./operationsInsightsWarehouseUser").OperationsInsightsWarehouseUser = null as any;
utilities.lazyLoad(exports, ["OperationsInsightsWarehouseUser"], () => require("./operationsInsightsWarehouseUser"));

export { OpsiConfigurationArgs, OpsiConfigurationState } from "./opsiConfiguration";
export type OpsiConfiguration = import("./opsiConfiguration").OpsiConfiguration;
export const OpsiConfiguration: typeof import("./opsiConfiguration").OpsiConfiguration = null as any;
utilities.lazyLoad(exports, ["OpsiConfiguration"], () => require("./opsiConfiguration"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Opsi/awrHub:AwrHub":
                return new AwrHub(name, <any>undefined, { urn })
            case "oci:Opsi/awrHubSource:AwrHubSource":
                return new AwrHubSource(name, <any>undefined, { urn })
            case "oci:Opsi/awrHubSourceAwrhubsourcesManagement:AwrHubSourceAwrhubsourcesManagement":
                return new AwrHubSourceAwrhubsourcesManagement(name, <any>undefined, { urn })
            case "oci:Opsi/databaseInsight:DatabaseInsight":
                return new DatabaseInsight(name, <any>undefined, { urn })
            case "oci:Opsi/enterpriseManagerBridge:EnterpriseManagerBridge":
                return new EnterpriseManagerBridge(name, <any>undefined, { urn })
            case "oci:Opsi/exadataInsight:ExadataInsight":
                return new ExadataInsight(name, <any>undefined, { urn })
            case "oci:Opsi/hostInsight:HostInsight":
                return new HostInsight(name, <any>undefined, { urn })
            case "oci:Opsi/newsReport:NewsReport":
                return new NewsReport(name, <any>undefined, { urn })
            case "oci:Opsi/operationsInsightsPrivateEndpoint:OperationsInsightsPrivateEndpoint":
                return new OperationsInsightsPrivateEndpoint(name, <any>undefined, { urn })
            case "oci:Opsi/operationsInsightsWarehouse:OperationsInsightsWarehouse":
                return new OperationsInsightsWarehouse(name, <any>undefined, { urn })
            case "oci:Opsi/operationsInsightsWarehouseDownloadWarehouseWallet:OperationsInsightsWarehouseDownloadWarehouseWallet":
                return new OperationsInsightsWarehouseDownloadWarehouseWallet(name, <any>undefined, { urn })
            case "oci:Opsi/operationsInsightsWarehouseRotateWarehouseWallet:OperationsInsightsWarehouseRotateWarehouseWallet":
                return new OperationsInsightsWarehouseRotateWarehouseWallet(name, <any>undefined, { urn })
            case "oci:Opsi/operationsInsightsWarehouseUser:OperationsInsightsWarehouseUser":
                return new OperationsInsightsWarehouseUser(name, <any>undefined, { urn })
            case "oci:Opsi/opsiConfiguration:OpsiConfiguration":
                return new OpsiConfiguration(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Opsi/awrHub", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/awrHubSource", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/awrHubSourceAwrhubsourcesManagement", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/databaseInsight", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/enterpriseManagerBridge", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/exadataInsight", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/hostInsight", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/newsReport", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/operationsInsightsPrivateEndpoint", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/operationsInsightsWarehouse", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/operationsInsightsWarehouseDownloadWarehouseWallet", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/operationsInsightsWarehouseRotateWarehouseWallet", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/operationsInsightsWarehouseUser", _module)
pulumi.runtime.registerResourceModule("oci", "Opsi/opsiConfiguration", _module)
