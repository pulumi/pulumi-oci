// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the News Report resource in Oracle Cloud Infrastructure Opsi service.
 *
 * Create a news report in Ops Insights. The report will be enabled in Ops Insights. Insights will be emailed as per selected frequency.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testNewsReport = new oci.opsi.NewsReport("test_news_report", {
 *     compartmentId: compartmentId,
 *     contentTypes: {
 *         actionableInsightsResources: newsReportContentTypesActionableInsightsResources,
 *         capacityPlanningResources: newsReportContentTypesCapacityPlanningResources,
 *         sqlInsightsFleetAnalysisResources: newsReportContentTypesSqlInsightsFleetAnalysisResources,
 *         sqlInsightsPerformanceDegradationResources: newsReportContentTypesSqlInsightsPerformanceDegradationResources,
 *         sqlInsightsPlanChangesResources: newsReportContentTypesSqlInsightsPlanChangesResources,
 *         sqlInsightsTopDatabasesResources: newsReportContentTypesSqlInsightsTopDatabasesResources,
 *         sqlInsightsTopSqlByInsightsResources: newsReportContentTypesSqlInsightsTopSqlByInsightsResources,
 *         sqlInsightsTopSqlResources: newsReportContentTypesSqlInsightsTopSqlResources,
 *     },
 *     description: newsReportDescription,
 *     locale: newsReportLocale,
 *     name: newsReportName,
 *     newsFrequency: newsReportNewsFrequency,
 *     onsTopicId: testOnsTopic.id,
 *     areChildCompartmentsIncluded: newsReportAreChildCompartmentsIncluded,
 *     dayOfWeek: newsReportDayOfWeek,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     matchRule: newsReportMatchRule,
 *     status: newsReportStatus,
 *     tagFilters: newsReportTagFilters,
 * });
 * ```
 *
 * ## Import
 *
 * NewsReports can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Opsi/newsReport:NewsReport test_news_report "id"
 * ```
 */
export class NewsReport extends pulumi.CustomResource {
    /**
     * Get an existing NewsReport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NewsReportState, opts?: pulumi.CustomResourceOptions): NewsReport {
        return new NewsReport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Opsi/newsReport:NewsReport';

    /**
     * Returns true if the given object is an instance of NewsReport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NewsReport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NewsReport.__pulumiType;
    }

    /**
     * (Updatable) A flag to consider the resources within a given compartment and all sub-compartments.
     */
    declare public readonly areChildCompartmentsIncluded: pulumi.Output<boolean>;
    /**
     * (Updatable) Compartment Identifier where the news report will be created.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Content types that the news report can handle.
     */
    declare public readonly contentTypes: pulumi.Output<outputs.Opsi.NewsReportContentTypes>;
    /**
     * (Updatable) Day of the week in which the news report will be sent if the frequency is set to WEEKLY.
     */
    declare public readonly dayOfWeek: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) The description of the news report.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * (Updatable) Language of the news report.
     */
    declare public readonly locale: pulumi.Output<string>;
    /**
     * (Updatable) Match rule used for tag filters.
     */
    declare public readonly matchRule: pulumi.Output<string>;
    /**
     * (Updatable) The news report name.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * (Updatable) News report frequency.
     */
    declare public readonly newsFrequency: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ONS topic.
     */
    declare public readonly onsTopicId: pulumi.Output<string>;
    /**
     * The current state of the news report.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * (Updatable) Defines if the news report will be enabled or disabled.
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) List of tag filters; each filter composed by a namespace, key, and value. Example for defined tags - '<TagNamespace>.<TagKey>=<TagValue>'. Example for freeform tags - '<TagKey>=<TagValue>' 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly tagFilters: pulumi.Output<string[]>;
    /**
     * The time the the news report was first enabled. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The time the news report was updated. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a NewsReport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NewsReportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NewsReportArgs | NewsReportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NewsReportState | undefined;
            resourceInputs["areChildCompartmentsIncluded"] = state?.areChildCompartmentsIncluded;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["contentTypes"] = state?.contentTypes;
            resourceInputs["dayOfWeek"] = state?.dayOfWeek;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["locale"] = state?.locale;
            resourceInputs["matchRule"] = state?.matchRule;
            resourceInputs["name"] = state?.name;
            resourceInputs["newsFrequency"] = state?.newsFrequency;
            resourceInputs["onsTopicId"] = state?.onsTopicId;
            resourceInputs["state"] = state?.state;
            resourceInputs["status"] = state?.status;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["tagFilters"] = state?.tagFilters;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as NewsReportArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.contentTypes === undefined && !opts.urn) {
                throw new Error("Missing required property 'contentTypes'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.locale === undefined && !opts.urn) {
                throw new Error("Missing required property 'locale'");
            }
            if (args?.newsFrequency === undefined && !opts.urn) {
                throw new Error("Missing required property 'newsFrequency'");
            }
            if (args?.onsTopicId === undefined && !opts.urn) {
                throw new Error("Missing required property 'onsTopicId'");
            }
            resourceInputs["areChildCompartmentsIncluded"] = args?.areChildCompartmentsIncluded;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["contentTypes"] = args?.contentTypes;
            resourceInputs["dayOfWeek"] = args?.dayOfWeek;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["locale"] = args?.locale;
            resourceInputs["matchRule"] = args?.matchRule;
            resourceInputs["name"] = args?.name;
            resourceInputs["newsFrequency"] = args?.newsFrequency;
            resourceInputs["onsTopicId"] = args?.onsTopicId;
            resourceInputs["status"] = args?.status;
            resourceInputs["tagFilters"] = args?.tagFilters;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NewsReport.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NewsReport resources.
 */
export interface NewsReportState {
    /**
     * (Updatable) A flag to consider the resources within a given compartment and all sub-compartments.
     */
    areChildCompartmentsIncluded?: pulumi.Input<boolean>;
    /**
     * (Updatable) Compartment Identifier where the news report will be created.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Content types that the news report can handle.
     */
    contentTypes?: pulumi.Input<inputs.Opsi.NewsReportContentTypes>;
    /**
     * (Updatable) Day of the week in which the news report will be sent if the frequency is set to WEEKLY.
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The description of the news report.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Language of the news report.
     */
    locale?: pulumi.Input<string>;
    /**
     * (Updatable) Match rule used for tag filters.
     */
    matchRule?: pulumi.Input<string>;
    /**
     * (Updatable) The news report name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) News report frequency.
     */
    newsFrequency?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ONS topic.
     */
    onsTopicId?: pulumi.Input<string>;
    /**
     * The current state of the news report.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) Defines if the news report will be enabled or disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) List of tag filters; each filter composed by a namespace, key, and value. Example for defined tags - '<TagNamespace>.<TagKey>=<TagValue>'. Example for freeform tags - '<TagKey>=<TagValue>' 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    tagFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time the the news report was first enabled. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time the news report was updated. An RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NewsReport resource.
 */
export interface NewsReportArgs {
    /**
     * (Updatable) A flag to consider the resources within a given compartment and all sub-compartments.
     */
    areChildCompartmentsIncluded?: pulumi.Input<boolean>;
    /**
     * (Updatable) Compartment Identifier where the news report will be created.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Content types that the news report can handle.
     */
    contentTypes: pulumi.Input<inputs.Opsi.NewsReportContentTypes>;
    /**
     * (Updatable) Day of the week in which the news report will be sent if the frequency is set to WEEKLY.
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The description of the news report.
     */
    description: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Language of the news report.
     */
    locale: pulumi.Input<string>;
    /**
     * (Updatable) Match rule used for tag filters.
     */
    matchRule?: pulumi.Input<string>;
    /**
     * (Updatable) The news report name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) News report frequency.
     */
    newsFrequency: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ONS topic.
     */
    onsTopicId: pulumi.Input<string>;
    /**
     * (Updatable) Defines if the news report will be enabled or disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * (Updatable) List of tag filters; each filter composed by a namespace, key, and value. Example for defined tags - '<TagNamespace>.<TagKey>=<TagValue>'. Example for freeform tags - '<TagKey>=<TagValue>' 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    tagFilters?: pulumi.Input<pulumi.Input<string>[]>;
}
