// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Category resource in Oracle Cloud Infrastructure Optimizer service.
 *
 * Gets the category that corresponds to the specified OCID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCategory = oci.Optimizer.getCategory({
 *     categoryId: testCategoryOciOptimizerCategory.id,
 * });
 * ```
 */
export function getCategory(args: GetCategoryArgs, opts?: pulumi.InvokeOptions): Promise<GetCategoryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Optimizer/getCategory:getCategory", {
        "categoryId": args.categoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCategory.
 */
export interface GetCategoryArgs {
    /**
     * The unique OCID associated with the category.
     */
    categoryId: string;
}

/**
 * A collection of values returned by getCategory.
 */
export interface GetCategoryResult {
    readonly categoryId: string;
    /**
     * The OCID of the tenancy. The tenancy is the root compartment.
     */
    readonly compartmentId: string;
    /**
     * The name associated with the compartment.
     */
    readonly compartmentName: string;
    /**
     * Text describing the category.
     */
    readonly description: string;
    /**
     * The estimated cost savings, in dollars, for the category.
     */
    readonly estimatedCostSaving: number;
    /**
     * Additional metadata key/value pairs for the category.
     */
    readonly extendedMetadata: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name assigned to the category.
     */
    readonly name: string;
    /**
     * An array of `RecommendationCount` objects grouped by the level of importance assigned to the recommendation.
     */
    readonly recommendationCounts: outputs.Optimizer.GetCategoryRecommendationCount[];
    /**
     * An array of `ResourceCount` objects grouped by the status of the recommendation.
     */
    readonly resourceCounts: outputs.Optimizer.GetCategoryResourceCount[];
    /**
     * The category's current state.
     */
    readonly state: string;
    /**
     * The date and time the category details were created, in the format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the category details were last updated, in the format defined by RFC3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Category resource in Oracle Cloud Infrastructure Optimizer service.
 *
 * Gets the category that corresponds to the specified OCID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testCategory = oci.Optimizer.getCategory({
 *     categoryId: testCategoryOciOptimizerCategory.id,
 * });
 * ```
 */
export function getCategoryOutput(args: GetCategoryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCategoryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Optimizer/getCategory:getCategory", {
        "categoryId": args.categoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCategory.
 */
export interface GetCategoryOutputArgs {
    /**
     * The unique OCID associated with the category.
     */
    categoryId: pulumi.Input<string>;
}
