// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Enrollment Statuses in Oracle Cloud Infrastructure Optimizer service.
 *
 * Lists the Cloud Advisor enrollment statuses.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testEnrollmentStatuses = oci.Optimizer.getEnrollmentStatuses({
 *     compartmentId: _var.compartment_id,
 *     state: _var.enrollment_status_state,
 *     status: _var.enrollment_status_status,
 * });
 * ```
 */
export function getEnrollmentStatuses(args: GetEnrollmentStatusesArgs, opts?: pulumi.InvokeOptions): Promise<GetEnrollmentStatusesResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Optimizer/getEnrollmentStatuses:getEnrollmentStatuses", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "state": args.state,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnrollmentStatuses.
 */
export interface GetEnrollmentStatusesArgs {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    filters?: inputs.Optimizer.GetEnrollmentStatusesFilter[];
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state?: string;
    /**
     * A filter that returns results that match the Cloud Advisor enrollment status specified.
     */
    status?: string;
}

/**
 * A collection of values returned by getEnrollmentStatuses.
 */
export interface GetEnrollmentStatusesResult {
    /**
     * The OCID of the compartment.
     */
    readonly compartmentId: string;
    /**
     * The list of enrollment_status_collection.
     */
    readonly enrollmentStatusCollections: outputs.Optimizer.GetEnrollmentStatusesEnrollmentStatusCollection[];
    readonly filters?: outputs.Optimizer.GetEnrollmentStatusesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The enrollment status' current state.
     */
    readonly state?: string;
    /**
     * The current Cloud Advisor enrollment status.
     */
    readonly status?: string;
}

export function getEnrollmentStatusesOutput(args: GetEnrollmentStatusesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEnrollmentStatusesResult> {
    return pulumi.output(args).apply(a => getEnrollmentStatuses(a, opts))
}

/**
 * A collection of arguments for invoking getEnrollmentStatuses.
 */
export interface GetEnrollmentStatusesOutputArgs {
    /**
     * The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Optimizer.GetEnrollmentStatusesFilterArgs>[]>;
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter that returns results that match the Cloud Advisor enrollment status specified.
     */
    status?: pulumi.Input<string>;
}
