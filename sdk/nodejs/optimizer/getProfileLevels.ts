// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Profile Levels in Oracle Cloud Infrastructure Optimizer service.
 *
 * Lists the existing profile levels.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProfileLevels = oci.Optimizer.getProfileLevels({
 *     compartmentId: _var.compartment_id,
 *     compartmentIdInSubtree: _var.profile_level_compartment_id_in_subtree,
 *     name: _var.profile_level_name,
 *     recommendationName: oci_optimizer_recommendation.test_recommendation.name,
 * });
 * ```
 */
export function getProfileLevels(args: GetProfileLevelsArgs, opts?: pulumi.InvokeOptions): Promise<GetProfileLevelsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Optimizer/getProfileLevels:getProfileLevels", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "name": args.name,
        "recommendationName": args.recommendationName,
    }, opts);
}

/**
 * A collection of arguments for invoking getProfileLevels.
 */
export interface GetProfileLevelsArgs {
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
     *
     * Can only be set to true when performing ListCompartments on the tenancy (root compartment).
     */
    compartmentIdInSubtree: boolean;
    filters?: inputs.Optimizer.GetProfileLevelsFilter[];
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name?: string;
    /**
     * Optional. A filter that returns results that match the recommendation name specified.
     */
    recommendationName?: string;
}

/**
 * A collection of values returned by getProfileLevels.
 */
export interface GetProfileLevelsResult {
    readonly compartmentId: string;
    readonly compartmentIdInSubtree: boolean;
    readonly filters?: outputs.Optimizer.GetProfileLevelsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A unique name for the profile level.
     */
    readonly name?: string;
    /**
     * The list of profile_level_collection.
     */
    readonly profileLevelCollections: outputs.Optimizer.GetProfileLevelsProfileLevelCollection[];
    /**
     * The name of the recommendation this profile level applies to.
     */
    readonly recommendationName?: string;
}
/**
 * This data source provides the list of Profile Levels in Oracle Cloud Infrastructure Optimizer service.
 *
 * Lists the existing profile levels.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProfileLevels = oci.Optimizer.getProfileLevels({
 *     compartmentId: _var.compartment_id,
 *     compartmentIdInSubtree: _var.profile_level_compartment_id_in_subtree,
 *     name: _var.profile_level_name,
 *     recommendationName: oci_optimizer_recommendation.test_recommendation.name,
 * });
 * ```
 */
export function getProfileLevelsOutput(args: GetProfileLevelsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProfileLevelsResult> {
    return pulumi.output(args).apply((a: any) => getProfileLevels(a, opts))
}

/**
 * A collection of arguments for invoking getProfileLevels.
 */
export interface GetProfileLevelsOutputArgs {
    /**
     * The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
     *
     * Can only be set to true when performing ListCompartments on the tenancy (root compartment).
     */
    compartmentIdInSubtree: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.Optimizer.GetProfileLevelsFilterArgs>[]>;
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name?: pulumi.Input<string>;
    /**
     * Optional. A filter that returns results that match the recommendation name specified.
     */
    recommendationName?: pulumi.Input<string>;
}
