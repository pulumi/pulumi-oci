// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Recommendation resource in Oracle Cloud Infrastructure Optimizer service.
 *
 * Gets the recommendation for the specified OCID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRecommendation = oci.Optimizer.getRecommendation({
 *     recommendationId: testRecommendationOciOptimizerRecommendation.id,
 * });
 * ```
 */
export function getRecommendation(args: GetRecommendationArgs, opts?: pulumi.InvokeOptions): Promise<GetRecommendationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Optimizer/getRecommendation:getRecommendation", {
        "recommendationId": args.recommendationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecommendation.
 */
export interface GetRecommendationArgs {
    /**
     * The unique OCID associated with the recommendation.
     */
    recommendationId: string;
}

/**
 * A collection of values returned by getRecommendation.
 */
export interface GetRecommendationResult {
    /**
     * The unique OCID associated with the category.
     */
    readonly categoryId: string;
    /**
     * The OCID of the tenancy. The tenancy is the root compartment.
     */
    readonly compartmentId: string;
    /**
     * Text describing the recommendation.
     */
    readonly description: string;
    /**
     * The estimated cost savings, in dollars, for the recommendation.
     */
    readonly estimatedCostSaving: number;
    /**
     * Additional metadata key/value pairs for the recommendation.
     */
    readonly extendedMetadata: {[key: string]: string};
    /**
     * The unique OCID associated with the recommendation.
     */
    readonly id: string;
    /**
     * The level of importance assigned to the recommendation.
     */
    readonly importance: string;
    /**
     * The name of the profile level.
     */
    readonly name: string;
    readonly recommendationId: string;
    /**
     * An array of `ResourceCount` objects grouped by the status of the resource actions.
     */
    readonly resourceCounts: outputs.Optimizer.GetRecommendationResourceCount[];
    /**
     * The recommendation's current state.
     */
    readonly state: string;
    /**
     * The current status of the recommendation.
     */
    readonly status: string;
    /**
     * Optional. The profile levels supported by a recommendation. For example, profile level values could be `Low`, `Medium`, and `High`. Not all recommendations support this field.
     */
    readonly supportedLevels: outputs.Optimizer.GetRecommendationSupportedLevel[];
    /**
     * The date and time the recommendation details were created, in the format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time that the recommendation entered its current status. The format is defined by RFC3339.
     */
    readonly timeStatusBegin: string;
    /**
     * The date and time the current status will change. The format is defined by RFC3339.
     */
    readonly timeStatusEnd: string;
    /**
     * The date and time the recommendation details were last updated, in the format defined by RFC3339.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Recommendation resource in Oracle Cloud Infrastructure Optimizer service.
 *
 * Gets the recommendation for the specified OCID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRecommendation = oci.Optimizer.getRecommendation({
 *     recommendationId: testRecommendationOciOptimizerRecommendation.id,
 * });
 * ```
 */
export function getRecommendationOutput(args: GetRecommendationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRecommendationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Optimizer/getRecommendation:getRecommendation", {
        "recommendationId": args.recommendationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecommendation.
 */
export interface GetRecommendationOutputArgs {
    /**
     * The unique OCID associated with the recommendation.
     */
    recommendationId: pulumi.Input<string>;
}
