// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Recommendations in Oracle Cloud Infrastructure Optimizer service.
 *
 * Lists the Cloud Advisor recommendations that are currently supported in the specified category.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRecommendations = oci.Optimizer.getRecommendations({
 *     categoryId: oci_optimizer_category.test_category.id,
 *     compartmentId: _var.compartment_id,
 *     compartmentIdInSubtree: _var.recommendation_compartment_id_in_subtree,
 *     name: _var.recommendation_name,
 *     state: _var.recommendation_state,
 *     status: _var.recommendation_status,
 * });
 * ```
 */
export function getRecommendations(args: GetRecommendationsArgs, opts?: pulumi.InvokeOptions): Promise<GetRecommendationsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("oci:Optimizer/getRecommendations:getRecommendations", {
        "categoryId": args.categoryId,
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getRecommendations.
 */
export interface GetRecommendationsArgs {
    /**
     * The unique OCID associated with the category.
     */
    categoryId: string;
    /**
     * The OCID of the compartment.
     */
    compartmentId: string;
    /**
     * When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
     */
    compartmentIdInSubtree: boolean;
    filters?: inputs.Optimizer.GetRecommendationsFilter[];
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name?: string;
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state?: string;
    /**
     * A filter that returns recommendations that match the status specified.
     */
    status?: string;
}

/**
 * A collection of values returned by getRecommendations.
 */
export interface GetRecommendationsResult {
    /**
     * The unique OCID associated with the category.
     */
    readonly categoryId: string;
    /**
     * The OCID of the tenancy. The tenancy is the root compartment.
     */
    readonly compartmentId: string;
    readonly compartmentIdInSubtree: boolean;
    readonly filters?: outputs.Optimizer.GetRecommendationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the profile level.
     */
    readonly name?: string;
    /**
     * The list of recommendation_collection.
     */
    readonly recommendationCollections: outputs.Optimizer.GetRecommendationsRecommendationCollection[];
    /**
     * The recommendation's current state.
     */
    readonly state?: string;
    /**
     * The current status of the recommendation.
     */
    readonly status?: string;
}

export function getRecommendationsOutput(args: GetRecommendationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRecommendationsResult> {
    return pulumi.output(args).apply(a => getRecommendations(a, opts))
}

/**
 * A collection of arguments for invoking getRecommendations.
 */
export interface GetRecommendationsOutputArgs {
    /**
     * The unique OCID associated with the category.
     */
    categoryId: pulumi.Input<string>;
    /**
     * The OCID of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
     */
    compartmentIdInSubtree: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.Optimizer.GetRecommendationsFilterArgs>[]>;
    /**
     * Optional. A filter that returns results that match the name specified.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter that returns results that match the lifecycle state specified.
     */
    state?: pulumi.Input<string>;
    /**
     * A filter that returns recommendations that match the status specified.
     */
    status?: pulumi.Input<string>;
}
