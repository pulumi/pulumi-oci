// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Profile resource in Oracle Cloud Infrastructure Optimizer service.
 *
 * Creates a new profile.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProfile = new oci.optimizer.Profile("test_profile", {
 *     compartmentId: compartmentId,
 *     description: profileDescription,
 *     levelsConfiguration: {
 *         items: [{
 *             level: profileLevelsConfigurationItemsLevel,
 *             recommendationId: testRecommendation.id,
 *         }],
 *     },
 *     name: profileName,
 *     aggregationIntervalInDays: profileAggregationIntervalInDays,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     targetCompartments: {
 *         items: profileTargetCompartmentsItems,
 *     },
 *     targetTags: {
 *         items: [{
 *             tagDefinitionName: profileTargetTagsItemsTagDefinitionName,
 *             tagNamespaceName: testTagNamespace.name,
 *             tagValueType: profileTargetTagsItemsTagValueType,
 *             tagValues: profileTargetTagsItemsTagValues,
 *         }],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Profiles can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Optimizer/profile:Profile test_profile "id"
 * ```
 */
export class Profile extends pulumi.CustomResource {
    /**
     * Get an existing Profile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileState, opts?: pulumi.CustomResourceOptions): Profile {
        return new Profile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Optimizer/profile:Profile';

    /**
     * Returns true if the given object is an instance of Profile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Profile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Profile.__pulumiType;
    }

    /**
     * (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
     */
    declare public readonly aggregationIntervalInDays: pulumi.Output<number>;
    /**
     * The OCID of the tenancy. The tenancy is the root compartment.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Text describing the profile. Avoid entering confidential information.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A list of configuration levels for each recommendation.
     */
    declare public readonly levelsConfiguration: pulumi.Output<outputs.Optimizer.ProfileLevelsConfiguration>;
    /**
     * (Updatable) The name assigned to the profile. Avoid entering confidential information.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The profile's current state.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Optional. The compartments specified in the profile override for a recommendation.
     */
    declare public readonly targetCompartments: pulumi.Output<outputs.Optimizer.ProfileTargetCompartments>;
    /**
     * (Updatable) Optional. The tags specified in the profile override for a recommendation.
     */
    declare public readonly targetTags: pulumi.Output<outputs.Optimizer.ProfileTargetTags>;
    /**
     * The date and time the profile was created, in the format defined by RFC3339.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the profile was last updated, in the format defined by RFC3339.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a Profile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileArgs | ProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProfileState | undefined;
            resourceInputs["aggregationIntervalInDays"] = state?.aggregationIntervalInDays;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["levelsConfiguration"] = state?.levelsConfiguration;
            resourceInputs["name"] = state?.name;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["targetCompartments"] = state?.targetCompartments;
            resourceInputs["targetTags"] = state?.targetTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as ProfileArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.description === undefined && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if (args?.levelsConfiguration === undefined && !opts.urn) {
                throw new Error("Missing required property 'levelsConfiguration'");
            }
            resourceInputs["aggregationIntervalInDays"] = args?.aggregationIntervalInDays;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["levelsConfiguration"] = args?.levelsConfiguration;
            resourceInputs["name"] = args?.name;
            resourceInputs["targetCompartments"] = args?.targetCompartments;
            resourceInputs["targetTags"] = args?.targetTags;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Profile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Profile resources.
 */
export interface ProfileState {
    /**
     * (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
     */
    aggregationIntervalInDays?: pulumi.Input<number>;
    /**
     * The OCID of the tenancy. The tenancy is the root compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Text describing the profile. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A list of configuration levels for each recommendation.
     */
    levelsConfiguration?: pulumi.Input<inputs.Optimizer.ProfileLevelsConfiguration>;
    /**
     * (Updatable) The name assigned to the profile. Avoid entering confidential information.
     */
    name?: pulumi.Input<string>;
    /**
     * The profile's current state.
     */
    state?: pulumi.Input<string>;
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Optional. The compartments specified in the profile override for a recommendation.
     */
    targetCompartments?: pulumi.Input<inputs.Optimizer.ProfileTargetCompartments>;
    /**
     * (Updatable) Optional. The tags specified in the profile override for a recommendation.
     */
    targetTags?: pulumi.Input<inputs.Optimizer.ProfileTargetTags>;
    /**
     * The date and time the profile was created, in the format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the profile was last updated, in the format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Profile resource.
 */
export interface ProfileArgs {
    /**
     * (Updatable) The time period over which to collect data for the recommendations, measured in number of days.
     */
    aggregationIntervalInDays?: pulumi.Input<number>;
    /**
     * The OCID of the tenancy. The tenancy is the root compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Text describing the profile. Avoid entering confidential information.
     */
    description: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair applied without any predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Exists for cross-compatibility only.  Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A list of configuration levels for each recommendation.
     */
    levelsConfiguration: pulumi.Input<inputs.Optimizer.ProfileLevelsConfiguration>;
    /**
     * (Updatable) The name assigned to the profile. Avoid entering confidential information.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Optional. The compartments specified in the profile override for a recommendation.
     */
    targetCompartments?: pulumi.Input<inputs.Optimizer.ProfileTargetCompartments>;
    /**
     * (Updatable) Optional. The tags specified in the profile override for a recommendation.
     */
    targetTags?: pulumi.Input<inputs.Optimizer.ProfileTargetTags>;
}
