// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Resource Action resource in Oracle Cloud Infrastructure Optimizer service.
 *
 * Updates the resource action that corresponds to the specified OCID.
 * Use this operation to implement the following actions:
 *
 *   * Postpone resource action
 *   * Ignore resource action
 *   * Reactivate resource action
 *
 * ## Import
 *
 * ResourceActions can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Optimizer/resourceAction:ResourceAction test_resource_action "id"
 * ```
 */
export class ResourceAction extends pulumi.CustomResource {
    /**
     * Get an existing ResourceAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceActionState, opts?: pulumi.CustomResourceOptions): ResourceAction {
        return new ResourceAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Optimizer/resourceAction:ResourceAction';

    /**
     * Returns true if the given object is an instance of ResourceAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceAction.__pulumiType;
    }

    /**
     * Details about the recommended action.
     */
    declare public /*out*/ readonly actions: pulumi.Output<outputs.Optimizer.ResourceActionAction[]>;
    /**
     * The unique OCID associated with the category.
     */
    declare public /*out*/ readonly categoryId: pulumi.Output<string>;
    /**
     * The OCID of the compartment.
     */
    declare public /*out*/ readonly compartmentId: pulumi.Output<string>;
    /**
     * The name associated with the compartment.
     */
    declare public /*out*/ readonly compartmentName: pulumi.Output<string>;
    /**
     * The estimated cost savings, in dollars, for the resource action.
     */
    declare public /*out*/ readonly estimatedCostSaving: pulumi.Output<number>;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    declare public /*out*/ readonly extendedMetadata: pulumi.Output<{[key: string]: string}>;
    /**
     * Custom metadata key/value pairs for the resource action.
     */
    declare public /*out*/ readonly metadata: pulumi.Output<{[key: string]: string}>;
    /**
     * The name assigned to the resource.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The unique OCID associated with the recommendation.
     */
    declare public /*out*/ readonly recommendationId: pulumi.Output<string>;
    /**
     * The unique OCID associated with the resource action.
     */
    declare public readonly resourceActionId: pulumi.Output<string>;
    /**
     * The unique OCID associated with the resource.
     */
    declare public /*out*/ readonly resourceId: pulumi.Output<string>;
    /**
     * The kind of resource.
     */
    declare public /*out*/ readonly resourceType: pulumi.Output<string>;
    /**
     * The resource action's current state.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * (Updatable) The status of the resource action.
     */
    declare public readonly status: pulumi.Output<string>;
    /**
     * The date and time the resource action details were created, in the format defined by RFC3339.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time that the resource action entered its current status. The format is defined by RFC3339.
     */
    declare public /*out*/ readonly timeStatusBegin: pulumi.Output<string>;
    /**
     * (Updatable) The date and time the current status will change. The format is defined by RFC3339.
     *
     * For example, "The current `postponed` status of the resource action will end and change to `pending` on this date and time."
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly timeStatusEnd: pulumi.Output<string>;
    /**
     * The date and time the resource action details were last updated, in the format defined by RFC3339.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a ResourceAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceActionArgs | ResourceActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceActionState | undefined;
            resourceInputs["actions"] = state?.actions;
            resourceInputs["categoryId"] = state?.categoryId;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["compartmentName"] = state?.compartmentName;
            resourceInputs["estimatedCostSaving"] = state?.estimatedCostSaving;
            resourceInputs["extendedMetadata"] = state?.extendedMetadata;
            resourceInputs["metadata"] = state?.metadata;
            resourceInputs["name"] = state?.name;
            resourceInputs["recommendationId"] = state?.recommendationId;
            resourceInputs["resourceActionId"] = state?.resourceActionId;
            resourceInputs["resourceId"] = state?.resourceId;
            resourceInputs["resourceType"] = state?.resourceType;
            resourceInputs["state"] = state?.state;
            resourceInputs["status"] = state?.status;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeStatusBegin"] = state?.timeStatusBegin;
            resourceInputs["timeStatusEnd"] = state?.timeStatusEnd;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as ResourceActionArgs | undefined;
            if (args?.resourceActionId === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceActionId'");
            }
            if (args?.status === undefined && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            resourceInputs["resourceActionId"] = args?.resourceActionId;
            resourceInputs["status"] = args?.status;
            resourceInputs["timeStatusEnd"] = args?.timeStatusEnd;
            resourceInputs["actions"] = undefined /*out*/;
            resourceInputs["categoryId"] = undefined /*out*/;
            resourceInputs["compartmentId"] = undefined /*out*/;
            resourceInputs["compartmentName"] = undefined /*out*/;
            resourceInputs["estimatedCostSaving"] = undefined /*out*/;
            resourceInputs["extendedMetadata"] = undefined /*out*/;
            resourceInputs["metadata"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["recommendationId"] = undefined /*out*/;
            resourceInputs["resourceId"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeStatusBegin"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceAction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceAction resources.
 */
export interface ResourceActionState {
    /**
     * Details about the recommended action.
     */
    actions?: pulumi.Input<pulumi.Input<inputs.Optimizer.ResourceActionAction>[]>;
    /**
     * The unique OCID associated with the category.
     */
    categoryId?: pulumi.Input<string>;
    /**
     * The OCID of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The name associated with the compartment.
     */
    compartmentName?: pulumi.Input<string>;
    /**
     * The estimated cost savings, in dollars, for the resource action.
     */
    estimatedCostSaving?: pulumi.Input<number>;
    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     */
    extendedMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Custom metadata key/value pairs for the resource action.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name assigned to the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique OCID associated with the recommendation.
     */
    recommendationId?: pulumi.Input<string>;
    /**
     * The unique OCID associated with the resource action.
     */
    resourceActionId?: pulumi.Input<string>;
    /**
     * The unique OCID associated with the resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * The kind of resource.
     */
    resourceType?: pulumi.Input<string>;
    /**
     * The resource action's current state.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The status of the resource action.
     */
    status?: pulumi.Input<string>;
    /**
     * The date and time the resource action details were created, in the format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time that the resource action entered its current status. The format is defined by RFC3339.
     */
    timeStatusBegin?: pulumi.Input<string>;
    /**
     * (Updatable) The date and time the current status will change. The format is defined by RFC3339.
     *
     * For example, "The current `postponed` status of the resource action will end and change to `pending` on this date and time."
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeStatusEnd?: pulumi.Input<string>;
    /**
     * The date and time the resource action details were last updated, in the format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourceAction resource.
 */
export interface ResourceActionArgs {
    /**
     * The unique OCID associated with the resource action.
     */
    resourceActionId: pulumi.Input<string>;
    /**
     * (Updatable) The status of the resource action.
     */
    status: pulumi.Input<string>;
    /**
     * (Updatable) The date and time the current status will change. The format is defined by RFC3339.
     *
     * For example, "The current `postponed` status of the resource action will end and change to `pending` on this date and time."
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeStatusEnd?: pulumi.Input<string>;
}
