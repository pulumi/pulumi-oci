// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
 *
 * Returns a list of all Managed Instance Groups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceGroups = oci.OsManagement.getManagedInstanceGroups({
 *     compartmentId: compartmentId,
 *     displayName: managedInstanceGroupDisplayName,
 *     osFamily: managedInstanceGroupOsFamily,
 *     state: managedInstanceGroupState,
 * });
 * ```
 */
export function getManagedInstanceGroups(args: GetManagedInstanceGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedInstanceGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "osFamily": args.osFamily,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceGroups.
 */
export interface GetManagedInstanceGroupsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName?: string;
    filters?: inputs.OsManagement.GetManagedInstanceGroupsFilter[];
    /**
     * The OS family for which to list resources.
     */
    osFamily?: string;
    /**
     * The current lifecycle state for the object.
     */
    state?: string;
}

/**
 * A collection of values returned by getManagedInstanceGroups.
 */
export interface GetManagedInstanceGroupsResult {
    /**
     * OCID for the Compartment
     */
    readonly compartmentId: string;
    /**
     * User friendly name
     */
    readonly displayName?: string;
    readonly filters?: outputs.OsManagement.GetManagedInstanceGroupsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of managed_instance_groups.
     */
    readonly managedInstanceGroups: outputs.OsManagement.GetManagedInstanceGroupsManagedInstanceGroup[];
    /**
     * The Operating System type of the managed instance.
     */
    readonly osFamily?: string;
    /**
     * The current state of the Software Source.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Managed Instance Groups in Oracle Cloud Infrastructure OS Management service.
 *
 * Returns a list of all Managed Instance Groups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceGroups = oci.OsManagement.getManagedInstanceGroups({
 *     compartmentId: compartmentId,
 *     displayName: managedInstanceGroupDisplayName,
 *     osFamily: managedInstanceGroupOsFamily,
 *     state: managedInstanceGroupState,
 * });
 * ```
 */
export function getManagedInstanceGroupsOutput(args: GetManagedInstanceGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedInstanceGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:OsManagement/getManagedInstanceGroups:getManagedInstanceGroups", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "osFamily": args.osFamily,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceGroups.
 */
export interface GetManagedInstanceGroupsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagement.GetManagedInstanceGroupsFilterArgs>[]>;
    /**
     * The OS family for which to list resources.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * The current lifecycle state for the object.
     */
    state?: pulumi.Input<string>;
}
