// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Managed Instance Stream Profiles in Oracle Cloud Infrastructure OS Management service.
 *
 * Retrieve a list of module stream profiles, along with a summary of their
 * of their status, from a managed instance.  Filters may be applied to
 * select a subset of profiles based on the filter criteria.
 *
 * The "moduleName", "streamName", and "profileName" attributes combine
 * to form a set of filters on the list of module stream profiles.  If
 * a "modulName" is provided, only profiles that belong to that module
 * are returned.  If both a "moduleName" and "streamName" are given,
 * only profiles belonging to that module stream are returned.  Finally,
 * if all three are given then only the particular profile indicated
 * by the triple is returned.  It is not valid to supply a "streamName"
 * without a "moduleName".  It is also not valid to supply a "profileName"
 * without a "streamName".
 *
 * The "status" attribute filters against the state of a module stream
 * profile.  Valid values are "INSTALLED" and "AVAILABLE".  If the
 * attribute is set to "INSTALLED", only module stream profiles that
 * are installed are included in the result set.  If the attribute is
 * set to "AVAILABLE", only module stream profiles that are not
 * installed are included in the result set.  If the attribute is not
 * defined, the request is not subject to this filter.
 *
 * When sorting by display name, the result set is sorted first by
 * module name, then by stream name, and finally by profile name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceStreamProfiles = oci.OsManagement.getManagedInstanceStreamProfile({
 *     managedInstanceId: managedInstanceId,
 *     compartmentId: compartmentId,
 *     moduleName: managedInstanceModuleName,
 *     profileName: managedInstanceModuleStreamProfileName,
 *     profileStatus: managedInstanceProfileStatus,
 *     streamName: managedInstanceModuleStreamName,
 * });
 * ```
 */
export function getManagedInstanceStreamProfile(args: GetManagedInstanceStreamProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedInstanceStreamProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagement/getManagedInstanceStreamProfile:getManagedInstanceStreamProfile", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "managedInstanceId": args.managedInstanceId,
        "moduleName": args.moduleName,
        "profileName": args.profileName,
        "profileStatus": args.profileStatus,
        "streamName": args.streamName,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceStreamProfile.
 */
export interface GetManagedInstanceStreamProfileArgs {
    /**
     * The ID of the compartment in which to list resources. This parameter is optional and in some cases may have no effect.
     */
    compartmentId?: string;
    filters?: inputs.OsManagement.GetManagedInstanceStreamProfileFilter[];
    /**
     * OCID for the managed instance
     */
    managedInstanceId: string;
    /**
     * The name of a module.  This parameter is required if a streamName is specified.
     */
    moduleName?: string;
    /**
     * The name of the profile of the containing module stream
     */
    profileName?: string;
    /**
     * The status of the profile.
     *
     * A profile with the "INSTALLED" status indicates that the profile has been installed.
     *
     * A profile with the "AVAILABLE" status indicates that the profile is not installed, but can be.
     */
    profileStatus?: string;
    /**
     * The name of the stream of the containing module.  This parameter is required if a profileName is specified.
     */
    streamName?: string;
}

/**
 * A collection of values returned by getManagedInstanceStreamProfile.
 */
export interface GetManagedInstanceStreamProfileResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.OsManagement.GetManagedInstanceStreamProfileFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedInstanceId: string;
    /**
     * The name of the module that contains the stream profile
     */
    readonly moduleName?: string;
    /**
     * The list of module_stream_profile_on_managed_instances.
     */
    readonly moduleStreamProfileOnManagedInstances: outputs.OsManagement.GetManagedInstanceStreamProfileModuleStreamProfileOnManagedInstance[];
    /**
     * The name of the profile
     */
    readonly profileName?: string;
    readonly profileStatus?: string;
    /**
     * The name of the stream that contains the profile
     */
    readonly streamName?: string;
}
/**
 * This data source provides the list of Managed Instance Stream Profiles in Oracle Cloud Infrastructure OS Management service.
 *
 * Retrieve a list of module stream profiles, along with a summary of their
 * of their status, from a managed instance.  Filters may be applied to
 * select a subset of profiles based on the filter criteria.
 *
 * The "moduleName", "streamName", and "profileName" attributes combine
 * to form a set of filters on the list of module stream profiles.  If
 * a "modulName" is provided, only profiles that belong to that module
 * are returned.  If both a "moduleName" and "streamName" are given,
 * only profiles belonging to that module stream are returned.  Finally,
 * if all three are given then only the particular profile indicated
 * by the triple is returned.  It is not valid to supply a "streamName"
 * without a "moduleName".  It is also not valid to supply a "profileName"
 * without a "streamName".
 *
 * The "status" attribute filters against the state of a module stream
 * profile.  Valid values are "INSTALLED" and "AVAILABLE".  If the
 * attribute is set to "INSTALLED", only module stream profiles that
 * are installed are included in the result set.  If the attribute is
 * set to "AVAILABLE", only module stream profiles that are not
 * installed are included in the result set.  If the attribute is not
 * defined, the request is not subject to this filter.
 *
 * When sorting by display name, the result set is sorted first by
 * module name, then by stream name, and finally by profile name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceStreamProfiles = oci.OsManagement.getManagedInstanceStreamProfile({
 *     managedInstanceId: managedInstanceId,
 *     compartmentId: compartmentId,
 *     moduleName: managedInstanceModuleName,
 *     profileName: managedInstanceModuleStreamProfileName,
 *     profileStatus: managedInstanceProfileStatus,
 *     streamName: managedInstanceModuleStreamName,
 * });
 * ```
 */
export function getManagedInstanceStreamProfileOutput(args: GetManagedInstanceStreamProfileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedInstanceStreamProfileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:OsManagement/getManagedInstanceStreamProfile:getManagedInstanceStreamProfile", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "managedInstanceId": args.managedInstanceId,
        "moduleName": args.moduleName,
        "profileName": args.profileName,
        "profileStatus": args.profileStatus,
        "streamName": args.streamName,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceStreamProfile.
 */
export interface GetManagedInstanceStreamProfileOutputArgs {
    /**
     * The ID of the compartment in which to list resources. This parameter is optional and in some cases may have no effect.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagement.GetManagedInstanceStreamProfileFilterArgs>[]>;
    /**
     * OCID for the managed instance
     */
    managedInstanceId: pulumi.Input<string>;
    /**
     * The name of a module.  This parameter is required if a streamName is specified.
     */
    moduleName?: pulumi.Input<string>;
    /**
     * The name of the profile of the containing module stream
     */
    profileName?: pulumi.Input<string>;
    /**
     * The status of the profile.
     *
     * A profile with the "INSTALLED" status indicates that the profile has been installed.
     *
     * A profile with the "AVAILABLE" status indicates that the profile is not installed, but can be.
     */
    profileStatus?: pulumi.Input<string>;
    /**
     * The name of the stream of the containing module.  This parameter is required if a profileName is specified.
     */
    streamName?: pulumi.Input<string>;
}
