// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Software Source Stream Profiles in Oracle Cloud Infrastructure OS Management service.
 *
 * Retrieve a list of module stream profiles from a software source.
 * Filters may be applied to select a subset of module stream profiles
 * based on the filter criteria.
 *
 * The "moduleName", "streamName", and "profileName" attributes combine
 * to form a set of filters on the list of module stream profiles.  If
 * a "moduleName" is provided, only profiles that belong to that module
 * are returned.  If both a "moduleName" and "streamName" are given,
 * only profiles belonging to that module stream are returned.  Finally,
 * if all three are given then only the particular profile indicated
 * by the triple is returned.  It is not valid to supply a "streamName"
 * without a "moduleName".  It is also not valid to supply a "profileName"
 * without a "streamName".
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourceStreamProfiles = oci.OsManagement.getSoftwareSourceStreamProfile({
 *     softwareSourceId: _var.software_source.id,
 *     compartmentId: _var.compartment_id,
 *     moduleName: _var.software_source_module_name,
 *     profileName: _var.software_source_module_stream_profile_name,
 *     streamName: _var.software_source_module_stream_name,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSoftwareSourceStreamProfile(args: GetSoftwareSourceStreamProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwareSourceStreamProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagement/getSoftwareSourceStreamProfile:getSoftwareSourceStreamProfile", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "moduleName": args.moduleName,
        "profileName": args.profileName,
        "softwareSourceId": args.softwareSourceId,
        "streamName": args.streamName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwareSourceStreamProfile.
 */
export interface GetSoftwareSourceStreamProfileArgs {
    /**
     * The ID of the compartment in which to list resources. This parameter is optional and in some cases may have no effect.
     */
    compartmentId?: string;
    filters?: inputs.OsManagement.GetSoftwareSourceStreamProfileFilter[];
    /**
     * The name of a module.  This parameter is required if a streamName is specified.
     */
    moduleName?: string;
    /**
     * The name of the profile of the containing module stream
     */
    profileName?: string;
    /**
     * The OCID of the software source.
     */
    softwareSourceId: string;
    /**
     * The name of the stream of the containing module.  This parameter is required if a profileName is specified.
     */
    streamName?: string;
}

/**
 * A collection of values returned by getSoftwareSourceStreamProfile.
 */
export interface GetSoftwareSourceStreamProfileResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.OsManagement.GetSoftwareSourceStreamProfileFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the module that contains the stream profile
     */
    readonly moduleName?: string;
    /**
     * The list of module_stream_profiles.
     */
    readonly moduleStreamProfiles: outputs.OsManagement.GetSoftwareSourceStreamProfileModuleStreamProfile[];
    /**
     * The name of the profile
     */
    readonly profileName?: string;
    readonly softwareSourceId: string;
    /**
     * The name of the stream that contains the profile
     */
    readonly streamName?: string;
}
/**
 * This data source provides the list of Software Source Stream Profiles in Oracle Cloud Infrastructure OS Management service.
 *
 * Retrieve a list of module stream profiles from a software source.
 * Filters may be applied to select a subset of module stream profiles
 * based on the filter criteria.
 *
 * The "moduleName", "streamName", and "profileName" attributes combine
 * to form a set of filters on the list of module stream profiles.  If
 * a "moduleName" is provided, only profiles that belong to that module
 * are returned.  If both a "moduleName" and "streamName" are given,
 * only profiles belonging to that module stream are returned.  Finally,
 * if all three are given then only the particular profile indicated
 * by the triple is returned.  It is not valid to supply a "streamName"
 * without a "moduleName".  It is also not valid to supply a "profileName"
 * without a "streamName".
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourceStreamProfiles = oci.OsManagement.getSoftwareSourceStreamProfile({
 *     softwareSourceId: _var.software_source.id,
 *     compartmentId: _var.compartment_id,
 *     moduleName: _var.software_source_module_name,
 *     profileName: _var.software_source_module_stream_profile_name,
 *     streamName: _var.software_source_module_stream_name,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSoftwareSourceStreamProfileOutput(args: GetSoftwareSourceStreamProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwareSourceStreamProfileResult> {
    return pulumi.output(args).apply((a: any) => getSoftwareSourceStreamProfile(a, opts))
}

/**
 * A collection of arguments for invoking getSoftwareSourceStreamProfile.
 */
export interface GetSoftwareSourceStreamProfileOutputArgs {
    /**
     * The ID of the compartment in which to list resources. This parameter is optional and in some cases may have no effect.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagement.GetSoftwareSourceStreamProfileFilterArgs>[]>;
    /**
     * The name of a module.  This parameter is required if a streamName is specified.
     */
    moduleName?: pulumi.Input<string>;
    /**
     * The name of the profile of the containing module stream
     */
    profileName?: pulumi.Input<string>;
    /**
     * The OCID of the software source.
     */
    softwareSourceId: pulumi.Input<string>;
    /**
     * The name of the stream of the containing module.  This parameter is required if a profileName is specified.
     */
    streamName?: pulumi.Input<string>;
}
