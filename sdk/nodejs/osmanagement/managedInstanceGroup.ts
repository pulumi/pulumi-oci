// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Managed Instance Group resource in Oracle Cloud Infrastructure OS Management service.
 *
 * Creates a new Managed Instance Group on the management system.
 * This will not contain any managed instances after it is first created,
 * and they must be added later.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceGroup = new oci.osmanagement.ManagedInstanceGroup("test_managed_instance_group", {
 *     compartmentId: compartmentId,
 *     displayName: managedInstanceGroupDisplayName,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: managedInstanceGroupDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     osFamily: managedInstanceGroupOsFamily,
 *     managedInstanceIds: managedInstanceGroupManagedInstanceIds,
 * });
 * ```
 *
 * ## Import
 *
 * ManagedInstanceGroups can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagement/managedInstanceGroup:ManagedInstanceGroup test_managed_instance_group "id"
 * ```
 */
export class ManagedInstanceGroup extends pulumi.CustomResource {
    /**
     * Get an existing ManagedInstanceGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedInstanceGroupState, opts?: pulumi.CustomResourceOptions): ManagedInstanceGroup {
        return new ManagedInstanceGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagement/managedInstanceGroup:ManagedInstanceGroup';

    /**
     * Returns true if the given object is an instance of ManagedInstanceGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedInstanceGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedInstanceGroup.__pulumiType;
    }

    /**
     * (Updatable) OCID for the Compartment
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Information specified by the user about the managed instance group
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Managed Instance Group identifier
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    public /*out*/ readonly managedInstanceCount!: pulumi.Output<number>;
    /**
     * The list of managed instance OCIDs to be added to the managed instance group.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly managedInstanceIds!: pulumi.Output<string[]>;
    /**
     * list of Managed Instances in the group
     */
    public /*out*/ readonly managedInstances!: pulumi.Output<outputs.OsManagement.ManagedInstanceGroupManagedInstance[]>;
    /**
     * The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
     */
    public readonly osFamily!: pulumi.Output<string>;
    /**
     * The current state of the Software Source.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a ManagedInstanceGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedInstanceGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedInstanceGroupArgs | ManagedInstanceGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedInstanceGroupState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["managedInstanceCount"] = state ? state.managedInstanceCount : undefined;
            resourceInputs["managedInstanceIds"] = state ? state.managedInstanceIds : undefined;
            resourceInputs["managedInstances"] = state ? state.managedInstances : undefined;
            resourceInputs["osFamily"] = state ? state.osFamily : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as ManagedInstanceGroupArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["managedInstanceIds"] = args ? args.managedInstanceIds : undefined;
            resourceInputs["osFamily"] = args ? args.osFamily : undefined;
            resourceInputs["managedInstanceCount"] = undefined /*out*/;
            resourceInputs["managedInstances"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedInstanceGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedInstanceGroup resources.
 */
export interface ManagedInstanceGroupState {
    /**
     * (Updatable) OCID for the Compartment
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Information specified by the user about the managed instance group
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Managed Instance Group identifier
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    managedInstanceCount?: pulumi.Input<number>;
    /**
     * The list of managed instance OCIDs to be added to the managed instance group.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    managedInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * list of Managed Instances in the group
     */
    managedInstances?: pulumi.Input<pulumi.Input<inputs.OsManagement.ManagedInstanceGroupManagedInstance>[]>;
    /**
     * The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * The current state of the Software Source.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagedInstanceGroup resource.
 */
export interface ManagedInstanceGroupArgs {
    /**
     * (Updatable) OCID for the Compartment
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Information specified by the user about the managed instance group
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Managed Instance Group identifier
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The list of managed instance OCIDs to be added to the managed instance group.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    managedInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
     */
    osFamily?: pulumi.Input<string>;
}
