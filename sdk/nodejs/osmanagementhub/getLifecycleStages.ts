// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Lifecycle Stages in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists lifecycle stages that match the specified compartment or lifecycle stage OCID. Filter the list against
 * a variety of criteria including but not limited to its name, status, architecture, and OS family.
 */
export function getLifecycleStages(args?: GetLifecycleStagesArgs, opts?: pulumi.InvokeOptions): Promise<GetLifecycleStagesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getLifecycleStages:getLifecycleStages", {
        "archType": args.archType,
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "lifecycleStageId": args.lifecycleStageId,
        "osFamily": args.osFamily,
        "softwareSourceId": args.softwareSourceId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getLifecycleStages.
 */
export interface GetLifecycleStagesArgs {
    /**
     * A filter to return only profiles that match the given archType.
     */
    archType?: string;
    /**
     * The OCID of the compartment that contains the resources to list.
     */
    compartmentId?: string;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: string;
    /**
     * A filter to return resources that match the given display names.
     */
    displayNames?: string[];
    filters?: inputs.OsManagementHub.GetLifecycleStagesFilter[];
    /**
     * The OCID of the lifecycle stage.
     */
    lifecycleStageId?: string;
    /**
     * A filter to return only profiles that match the given osFamily.
     */
    osFamily?: string;
    /**
     * The OCID for the software source.
     */
    softwareSourceId?: string;
    /**
     * A filter to return only lifecycle stage whose lifecycle state matches the given lifecycle state.
     */
    state?: string;
}

/**
 * A collection of values returned by getLifecycleStages.
 */
export interface GetLifecycleStagesResult {
    /**
     * The CPU architecture of the target instances.
     */
    readonly archType?: string;
    /**
     * The OCID of the tenancy containing the lifecycle stage.
     */
    readonly compartmentId?: string;
    readonly displayNameContains?: string;
    /**
     * Software source name.
     */
    readonly displayNames?: string[];
    readonly filters?: outputs.OsManagementHub.GetLifecycleStagesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * The list of lifecycle_stage_collection.
     */
    readonly lifecycleStageCollections?: outputs.OsManagementHub.GetLifecycleStagesLifecycleStageCollection[];
    readonly lifecycleStageId?: string;
    /**
     * The operating system type of the target instances.
     */
    readonly osFamily?: string;
    /**
     * Identifying information for the specified software source.
     */
    readonly softwareSourceId?: string;
    /**
     * The current state of the lifecycle stage.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Lifecycle Stages in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists lifecycle stages that match the specified compartment or lifecycle stage OCID. Filter the list against
 * a variety of criteria including but not limited to its name, status, architecture, and OS family.
 */
export function getLifecycleStagesOutput(args?: GetLifecycleStagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLifecycleStagesResult> {
    return pulumi.output(args).apply((a: any) => getLifecycleStages(a, opts))
}

/**
 * A collection of arguments for invoking getLifecycleStages.
 */
export interface GetLifecycleStagesOutputArgs {
    /**
     * A filter to return only profiles that match the given archType.
     */
    archType?: pulumi.Input<string>;
    /**
     * The OCID of the compartment that contains the resources to list.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: pulumi.Input<string>;
    /**
     * A filter to return resources that match the given display names.
     */
    displayNames?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetLifecycleStagesFilterArgs>[]>;
    /**
     * The OCID of the lifecycle stage.
     */
    lifecycleStageId?: pulumi.Input<string>;
    /**
     * A filter to return only profiles that match the given osFamily.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * The OCID for the software source.
     */
    softwareSourceId?: pulumi.Input<string>;
    /**
     * A filter to return only lifecycle stage whose lifecycle state matches the given lifecycle state.
     */
    state?: pulumi.Input<string>;
}
