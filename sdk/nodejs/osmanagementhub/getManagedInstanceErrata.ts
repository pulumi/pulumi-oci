// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Managed Instance Errata in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Returns a list of applicable errata on the managed instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceErrata = oci.OsManagementHub.getManagedInstanceErrata({
 *     managedInstanceId: testManagedInstance.id,
 *     classificationTypes: managedInstanceErrataClassificationType,
 *     compartmentId: compartmentId,
 *     names: managedInstanceErrataName,
 *     nameContains: managedInstanceErrataNameContains,
 * });
 * ```
 */
export function getManagedInstanceErrata(args: GetManagedInstanceErrataArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedInstanceErrataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getManagedInstanceErrata:getManagedInstanceErrata", {
        "classificationTypes": args.classificationTypes,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "managedInstanceId": args.managedInstanceId,
        "nameContains": args.nameContains,
        "names": args.names,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceErrata.
 */
export interface GetManagedInstanceErrataArgs {
    /**
     * A filter to return only packages that match the given update classification type.
     */
    classificationTypes?: string[];
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: string;
    filters?: inputs.OsManagementHub.GetManagedInstanceErrataFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     */
    managedInstanceId: string;
    /**
     * A filter to return resources that may partially match the erratum name given.
     */
    nameContains?: string;
    /**
     * The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
     */
    names?: string[];
}

/**
 * A collection of values returned by getManagedInstanceErrata.
 */
export interface GetManagedInstanceErrataResult {
    readonly classificationTypes?: string[];
    readonly compartmentId?: string;
    readonly filters?: outputs.OsManagementHub.GetManagedInstanceErrataFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of managed_instance_erratum_summary_collection.
     */
    readonly managedInstanceErratumSummaryCollections: outputs.OsManagementHub.GetManagedInstanceErrataManagedInstanceErratumSummaryCollection[];
    readonly managedInstanceId: string;
    readonly nameContains?: string;
    /**
     * The name of the software package.
     */
    readonly names?: string[];
}
/**
 * This data source provides the list of Managed Instance Errata in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Returns a list of applicable errata on the managed instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceErrata = oci.OsManagementHub.getManagedInstanceErrata({
 *     managedInstanceId: testManagedInstance.id,
 *     classificationTypes: managedInstanceErrataClassificationType,
 *     compartmentId: compartmentId,
 *     names: managedInstanceErrataName,
 *     nameContains: managedInstanceErrataNameContains,
 * });
 * ```
 */
export function getManagedInstanceErrataOutput(args: GetManagedInstanceErrataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedInstanceErrataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:OsManagementHub/getManagedInstanceErrata:getManagedInstanceErrata", {
        "classificationTypes": args.classificationTypes,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "managedInstanceId": args.managedInstanceId,
        "nameContains": args.nameContains,
        "names": args.names,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceErrata.
 */
export interface GetManagedInstanceErrataOutputArgs {
    /**
     * A filter to return only packages that match the given update classification type.
     */
    classificationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetManagedInstanceErrataFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     */
    managedInstanceId: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the erratum name given.
     */
    nameContains?: pulumi.Input<string>;
    /**
     * The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
     */
    names?: pulumi.Input<pulumi.Input<string>[]>;
}
