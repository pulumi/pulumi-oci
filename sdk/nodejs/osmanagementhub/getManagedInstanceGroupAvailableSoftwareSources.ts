// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Managed Instance Group Available Software Sources in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists available software sources for a specified managed instance group. Filter the list against a variety of
 * criteria including but not limited to its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceGroupAvailableSoftwareSources = oci.OsManagementHub.getManagedInstanceGroupAvailableSoftwareSources({
 *     managedInstanceGroupId: oci_os_management_hub_managed_instance_group.test_managed_instance_group.id,
 *     compartmentId: _var.compartment_id,
 *     displayNames: _var.managed_instance_group_available_software_source_display_name,
 *     displayNameContains: _var.managed_instance_group_available_software_source_display_name_contains,
 * });
 * ```
 */
export function getManagedInstanceGroupAvailableSoftwareSources(args: GetManagedInstanceGroupAvailableSoftwareSourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedInstanceGroupAvailableSoftwareSourcesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getManagedInstanceGroupAvailableSoftwareSources:getManagedInstanceGroupAvailableSoftwareSources", {
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "managedInstanceGroupId": args.managedInstanceGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceGroupAvailableSoftwareSources.
 */
export interface GetManagedInstanceGroupAvailableSoftwareSourcesArgs {
    /**
     * The OCID of the compartment that contains the resources to list.
     */
    compartmentId?: string;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: string;
    /**
     * A filter to return resources that match the given display names.
     */
    displayNames?: string[];
    filters?: inputs.OsManagementHub.GetManagedInstanceGroupAvailableSoftwareSourcesFilter[];
    /**
     * The managed instance group OCID.
     */
    managedInstanceGroupId: string;
}

/**
 * A collection of values returned by getManagedInstanceGroupAvailableSoftwareSources.
 */
export interface GetManagedInstanceGroupAvailableSoftwareSourcesResult {
    /**
     * The list of available_software_source_collection.
     */
    readonly availableSoftwareSourceCollections: outputs.OsManagementHub.GetManagedInstanceGroupAvailableSoftwareSourcesAvailableSoftwareSourceCollection[];
    /**
     * The OCID for the compartment.
     */
    readonly compartmentId?: string;
    readonly displayNameContains?: string;
    /**
     * User friendly name for the software source.
     */
    readonly displayNames?: string[];
    readonly filters?: outputs.OsManagementHub.GetManagedInstanceGroupAvailableSoftwareSourcesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedInstanceGroupId: string;
}
/**
 * This data source provides the list of Managed Instance Group Available Software Sources in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists available software sources for a specified managed instance group. Filter the list against a variety of
 * criteria including but not limited to its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceGroupAvailableSoftwareSources = oci.OsManagementHub.getManagedInstanceGroupAvailableSoftwareSources({
 *     managedInstanceGroupId: oci_os_management_hub_managed_instance_group.test_managed_instance_group.id,
 *     compartmentId: _var.compartment_id,
 *     displayNames: _var.managed_instance_group_available_software_source_display_name,
 *     displayNameContains: _var.managed_instance_group_available_software_source_display_name_contains,
 * });
 * ```
 */
export function getManagedInstanceGroupAvailableSoftwareSourcesOutput(args: GetManagedInstanceGroupAvailableSoftwareSourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedInstanceGroupAvailableSoftwareSourcesResult> {
    return pulumi.output(args).apply((a: any) => getManagedInstanceGroupAvailableSoftwareSources(a, opts))
}

/**
 * A collection of arguments for invoking getManagedInstanceGroupAvailableSoftwareSources.
 */
export interface GetManagedInstanceGroupAvailableSoftwareSourcesOutputArgs {
    /**
     * The OCID of the compartment that contains the resources to list.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: pulumi.Input<string>;
    /**
     * A filter to return resources that match the given display names.
     */
    displayNames?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetManagedInstanceGroupAvailableSoftwareSourcesFilterArgs>[]>;
    /**
     * The managed instance group OCID.
     */
    managedInstanceGroupId: pulumi.Input<string>;
}
