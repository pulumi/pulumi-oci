// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Managed Instance Group Modules in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Retrieve a list of module streams, along with a summary of their
 * status, from a managed instance group.  Filters may be applied to select
 * a subset of module streams based on the filter criteria.
 *
 * The 'moduleName' attribute filters against the name of a module.
 * It accepts strings of the format "<module>".  If this attribute
 * is defined, only streams that belong to the specified module are
 * included in the result set.  If it is not defined, the request is
 * not subject to this filter.
 *
 * The "status" attribute filters against the state of a module stream.
 * Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
 * attribute is set to "ENABLED", only module streams that are enabled
 * are included in the result set.  If the attribute is set to "DISABLED",
 * only module streams that are not enabled are included in the result
 * set.  If the attribute is set to "ACTIVE", only module streams that
 * are active are included in the result set.  If the attribute is not
 * defined, the request is not subject to this filter.
 *
 * When sorting by the display name, the result set is sorted first
 * by the module name and then by the stream name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceGroupModules = oci.OsManagementHub.getManagedInstanceGroupModules({
 *     managedInstanceGroupId: testManagedInstanceGroup.id,
 *     compartmentId: compartmentId,
 *     name: managedInstanceGroupModuleName,
 *     nameContains: managedInstanceGroupModuleNameContains,
 *     streamName: testStream.name,
 * });
 * ```
 */
export function getManagedInstanceGroupModules(args: GetManagedInstanceGroupModulesArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedInstanceGroupModulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getManagedInstanceGroupModules:getManagedInstanceGroupModules", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "managedInstanceGroupId": args.managedInstanceGroupId,
        "name": args.name,
        "nameContains": args.nameContains,
        "streamName": args.streamName,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceGroupModules.
 */
export interface GetManagedInstanceGroupModulesArgs {
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: string;
    filters?: inputs.OsManagementHub.GetManagedInstanceGroupModulesFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     */
    managedInstanceGroupId: string;
    /**
     * The resource name.
     */
    name?: string;
    /**
     * A filter to return resources that may partially match the name given.
     */
    nameContains?: string;
    /**
     * The name of the module stream. This parameter is required if a profile name is specified.
     */
    streamName?: string;
}

/**
 * A collection of values returned by getManagedInstanceGroupModules.
 */
export interface GetManagedInstanceGroupModulesResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.OsManagementHub.GetManagedInstanceGroupModulesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedInstanceGroupId: string;
    /**
     * The list of managed_instance_group_module_collection.
     */
    readonly managedInstanceGroupModuleCollections: outputs.OsManagementHub.GetManagedInstanceGroupModulesManagedInstanceGroupModuleCollection[];
    /**
     * The name of the module.
     */
    readonly name?: string;
    readonly nameContains?: string;
    readonly streamName?: string;
}
/**
 * This data source provides the list of Managed Instance Group Modules in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Retrieve a list of module streams, along with a summary of their
 * status, from a managed instance group.  Filters may be applied to select
 * a subset of module streams based on the filter criteria.
 *
 * The 'moduleName' attribute filters against the name of a module.
 * It accepts strings of the format "<module>".  If this attribute
 * is defined, only streams that belong to the specified module are
 * included in the result set.  If it is not defined, the request is
 * not subject to this filter.
 *
 * The "status" attribute filters against the state of a module stream.
 * Valid values are "ENABLED", "DISABLED", and "ACTIVE".  If the
 * attribute is set to "ENABLED", only module streams that are enabled
 * are included in the result set.  If the attribute is set to "DISABLED",
 * only module streams that are not enabled are included in the result
 * set.  If the attribute is set to "ACTIVE", only module streams that
 * are active are included in the result set.  If the attribute is not
 * defined, the request is not subject to this filter.
 *
 * When sorting by the display name, the result set is sorted first
 * by the module name and then by the stream name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceGroupModules = oci.OsManagementHub.getManagedInstanceGroupModules({
 *     managedInstanceGroupId: testManagedInstanceGroup.id,
 *     compartmentId: compartmentId,
 *     name: managedInstanceGroupModuleName,
 *     nameContains: managedInstanceGroupModuleNameContains,
 *     streamName: testStream.name,
 * });
 * ```
 */
export function getManagedInstanceGroupModulesOutput(args: GetManagedInstanceGroupModulesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedInstanceGroupModulesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:OsManagementHub/getManagedInstanceGroupModules:getManagedInstanceGroupModules", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "managedInstanceGroupId": args.managedInstanceGroupId,
        "name": args.name,
        "nameContains": args.nameContains,
        "streamName": args.streamName,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstanceGroupModules.
 */
export interface GetManagedInstanceGroupModulesOutputArgs {
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetManagedInstanceGroupModulesFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     */
    managedInstanceGroupId: pulumi.Input<string>;
    /**
     * The resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the name given.
     */
    nameContains?: pulumi.Input<string>;
    /**
     * The name of the module stream. This parameter is required if a profile name is specified.
     */
    streamName?: pulumi.Input<string>;
}
