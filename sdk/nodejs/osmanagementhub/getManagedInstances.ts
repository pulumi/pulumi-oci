// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Managed Instances in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists managed instances that match the specified compartment or managed instance OCID. Filter the list against a variety of criteria including but not limited to its name, status, architecture, and OS version.
 */
export function getManagedInstances(args?: GetManagedInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedInstancesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getManagedInstances:getManagedInstances", {
        "advisoryNames": args.advisoryNames,
        "agentVersion": args.agentVersion,
        "archTypes": args.archTypes,
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "group": args.group,
        "groupNotEqualTo": args.groupNotEqualTo,
        "isAttachedToGroupOrLifecycleStage": args.isAttachedToGroupOrLifecycleStage,
        "isManagedByAutonomousLinux": args.isManagedByAutonomousLinux,
        "isManagementStation": args.isManagementStation,
        "isProfileAttached": args.isProfileAttached,
        "isRebootRequired": args.isRebootRequired,
        "lifecycleEnvironment": args.lifecycleEnvironment,
        "lifecycleEnvironmentNotEqualTo": args.lifecycleEnvironmentNotEqualTo,
        "lifecycleStage": args.lifecycleStage,
        "lifecycleStageNotEqualTo": args.lifecycleStageNotEqualTo,
        "locationNotEqualTos": args.locationNotEqualTos,
        "locations": args.locations,
        "managedInstanceId": args.managedInstanceId,
        "managementStationNotEqualTos": args.managementStationNotEqualTos,
        "managementStations": args.managementStations,
        "osFamilies": args.osFamilies,
        "profileNotEqualTos": args.profileNotEqualTos,
        "profiles": args.profiles,
        "softwareSourceId": args.softwareSourceId,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstances.
 */
export interface GetManagedInstancesArgs {
    /**
     * The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
     */
    advisoryNames?: string[];
    /**
     * A filter to return only managed instances with the specified version of osmh-agent running.
     */
    agentVersion?: string;
    /**
     * A filter to return only instances whose architecture type matches the given architecture.
     */
    archTypes?: string[];
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: string;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: string;
    /**
     * A filter to return resources that match the given display names.
     */
    displayNames?: string[];
    filters?: inputs.OsManagementHub.GetManagedInstancesFilter[];
    /**
     * A filter to return only managed instances that are attached to the specified group.
     */
    group?: string;
    /**
     * A filter to return only managed instances that are NOT attached to the specified group.
     */
    groupNotEqualTo?: string;
    /**
     * A filter to return only managed instances that are attached to the specified group or lifecycle environment.
     */
    isAttachedToGroupOrLifecycleStage?: boolean;
    /**
     * Indicates whether to list only resources managed by the Autonomous Linux service.
     */
    isManagedByAutonomousLinux?: boolean;
    /**
     * A filter to return only managed instances that are acting as management stations.
     */
    isManagementStation?: boolean;
    /**
     * A filter to return only managed instances with a registration profile attached.
     */
    isProfileAttached?: boolean;
    /**
     * A filter to return only managed instances that require a reboot to install updates.
     */
    isRebootRequired?: boolean;
    /**
     * A filter to return only managed instances in a specific lifecycle environment.
     */
    lifecycleEnvironment?: string;
    /**
     * A filter to return only managed instances that aren't in a specific lifecycle environment.
     */
    lifecycleEnvironmentNotEqualTo?: string;
    /**
     * A filter to return only managed instances that are associated with the specified lifecycle environment.
     */
    lifecycleStage?: string;
    /**
     * A filter to return only managed instances that are NOT associated with the specified lifecycle environment.
     */
    lifecycleStageNotEqualTo?: string;
    /**
     * A filter to return only resources whose location does not match the given value.
     */
    locationNotEqualTos?: string[];
    /**
     * A filter to return only resources whose location matches the given value.
     */
    locations?: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
     */
    managedInstanceId?: string;
    /**
     * A filter to return resources that aren't associated with the specified management  station [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    managementStationNotEqualTos?: string[];
    /**
     * A filter to return resources that are associated with the specified management  station [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    managementStations?: string[];
    /**
     * A filter to return only resources that match the given operating system family.
     */
    osFamilies?: string[];
    /**
     * A multi filter to return only managed instances that don't contain the given profile [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    profileNotEqualTos?: string[];
    /**
     * A multi filter to return only managed instances that match the given profile ids.
     */
    profiles?: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
     */
    softwareSourceId?: string;
    /**
     * A filter to return only managed instances whose status matches the status provided.
     */
    statuses?: string[];
}

/**
 * A collection of values returned by getManagedInstances.
 */
export interface GetManagedInstancesResult {
    readonly advisoryNames?: string[];
    /**
     * The version of osmh-agent running on the managed instance
     */
    readonly agentVersion?: string;
    readonly archTypes?: string[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance.
     */
    readonly compartmentId?: string;
    readonly displayNameContains?: string;
    /**
     * Software source name.
     */
    readonly displayNames?: string[];
    readonly filters?: outputs.OsManagementHub.GetManagedInstancesFilter[];
    readonly group?: string;
    readonly groupNotEqualTo?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isAttachedToGroupOrLifecycleStage?: boolean;
    /**
     * Indicates whether the Autonomous Linux service manages the instance.
     */
    readonly isManagedByAutonomousLinux?: boolean;
    /**
     * Indicates whether this managed instance is acting as an on-premises management station.
     */
    readonly isManagementStation?: boolean;
    readonly isProfileAttached?: boolean;
    /**
     * Indicates whether a reboot is required to complete installation of updates.
     */
    readonly isRebootRequired?: boolean;
    /**
     * Id and name of a resource to simplify the display for the user.
     */
    readonly lifecycleEnvironment?: string;
    readonly lifecycleEnvironmentNotEqualTo?: string;
    /**
     * Id and name of a resource to simplify the display for the user.
     */
    readonly lifecycleStage?: string;
    readonly lifecycleStageNotEqualTo?: string;
    readonly locationNotEqualTos?: string[];
    /**
     * The location of the managed instance.
     */
    readonly locations?: string[];
    /**
     * The list of managed_instance_collection.
     */
    readonly managedInstanceCollections: outputs.OsManagementHub.GetManagedInstancesManagedInstanceCollection[];
    readonly managedInstanceId?: string;
    readonly managementStationNotEqualTos?: string[];
    readonly managementStations?: string[];
    /**
     * The operating system type of the managed instance.
     */
    readonly osFamilies?: string[];
    readonly profileNotEqualTos?: string[];
    /**
     * The profile that was used to register this instance with the service.
     */
    readonly profiles?: string[];
    readonly softwareSourceId?: string;
    /**
     * Current status of the managed instance.
     */
    readonly statuses?: string[];
}
/**
 * This data source provides the list of Managed Instances in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists managed instances that match the specified compartment or managed instance OCID. Filter the list against a variety of criteria including but not limited to its name, status, architecture, and OS version.
 */
export function getManagedInstancesOutput(args?: GetManagedInstancesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedInstancesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:OsManagementHub/getManagedInstances:getManagedInstances", {
        "advisoryNames": args.advisoryNames,
        "agentVersion": args.agentVersion,
        "archTypes": args.archTypes,
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "group": args.group,
        "groupNotEqualTo": args.groupNotEqualTo,
        "isAttachedToGroupOrLifecycleStage": args.isAttachedToGroupOrLifecycleStage,
        "isManagedByAutonomousLinux": args.isManagedByAutonomousLinux,
        "isManagementStation": args.isManagementStation,
        "isProfileAttached": args.isProfileAttached,
        "isRebootRequired": args.isRebootRequired,
        "lifecycleEnvironment": args.lifecycleEnvironment,
        "lifecycleEnvironmentNotEqualTo": args.lifecycleEnvironmentNotEqualTo,
        "lifecycleStage": args.lifecycleStage,
        "lifecycleStageNotEqualTo": args.lifecycleStageNotEqualTo,
        "locationNotEqualTos": args.locationNotEqualTos,
        "locations": args.locations,
        "managedInstanceId": args.managedInstanceId,
        "managementStationNotEqualTos": args.managementStationNotEqualTos,
        "managementStations": args.managementStations,
        "osFamilies": args.osFamilies,
        "profileNotEqualTos": args.profileNotEqualTos,
        "profiles": args.profiles,
        "softwareSourceId": args.softwareSourceId,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstances.
 */
export interface GetManagedInstancesOutputArgs {
    /**
     * The assigned erratum name. It's unique and not changeable.  Example: `ELSA-2020-5804`
     */
    advisoryNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return only managed instances with the specified version of osmh-agent running.
     */
    agentVersion?: pulumi.Input<string>;
    /**
     * A filter to return only instances whose architecture type matches the given architecture.
     */
    archTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: pulumi.Input<string>;
    /**
     * A filter to return resources that match the given display names.
     */
    displayNames?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetManagedInstancesFilterArgs>[]>;
    /**
     * A filter to return only managed instances that are attached to the specified group.
     */
    group?: pulumi.Input<string>;
    /**
     * A filter to return only managed instances that are NOT attached to the specified group.
     */
    groupNotEqualTo?: pulumi.Input<string>;
    /**
     * A filter to return only managed instances that are attached to the specified group or lifecycle environment.
     */
    isAttachedToGroupOrLifecycleStage?: pulumi.Input<boolean>;
    /**
     * Indicates whether to list only resources managed by the Autonomous Linux service.
     */
    isManagedByAutonomousLinux?: pulumi.Input<boolean>;
    /**
     * A filter to return only managed instances that are acting as management stations.
     */
    isManagementStation?: pulumi.Input<boolean>;
    /**
     * A filter to return only managed instances with a registration profile attached.
     */
    isProfileAttached?: pulumi.Input<boolean>;
    /**
     * A filter to return only managed instances that require a reboot to install updates.
     */
    isRebootRequired?: pulumi.Input<boolean>;
    /**
     * A filter to return only managed instances in a specific lifecycle environment.
     */
    lifecycleEnvironment?: pulumi.Input<string>;
    /**
     * A filter to return only managed instances that aren't in a specific lifecycle environment.
     */
    lifecycleEnvironmentNotEqualTo?: pulumi.Input<string>;
    /**
     * A filter to return only managed instances that are associated with the specified lifecycle environment.
     */
    lifecycleStage?: pulumi.Input<string>;
    /**
     * A filter to return only managed instances that are NOT associated with the specified lifecycle environment.
     */
    lifecycleStageNotEqualTo?: pulumi.Input<string>;
    /**
     * A filter to return only resources whose location does not match the given value.
     */
    locationNotEqualTos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return only resources whose location matches the given value.
     */
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance. This filter returns resources associated with this managed instance.
     */
    managedInstanceId?: pulumi.Input<string>;
    /**
     * A filter to return resources that aren't associated with the specified management  station [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    managementStationNotEqualTos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return resources that are associated with the specified management  station [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    managementStations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A filter to return only resources that match the given operating system family.
     */
    osFamilies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A multi filter to return only managed instances that don't contain the given profile [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    profileNotEqualTos?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A multi filter to return only managed instances that match the given profile ids.
     */
    profiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
     */
    softwareSourceId?: pulumi.Input<string>;
    /**
     * A filter to return only managed instances whose status matches the status provided.
     */
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
