// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Management Station Mirrors in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists all software source mirrors associated with a specified management station.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagementStationMirrors = oci.OsManagementHub.getManagementStationMirrors({
 *     managementStationId: oci_os_management_hub_management_station.test_management_station.id,
 *     displayName: _var.management_station_mirror_display_name,
 *     displayNameContains: _var.management_station_mirror_display_name_contains,
 *     mirrorStates: _var.management_station_mirror_mirror_states,
 * });
 * ```
 */
export function getManagementStationMirrors(args: GetManagementStationMirrorsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementStationMirrorsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getManagementStationMirrors:getManagementStationMirrors", {
        "displayName": args.displayName,
        "displayNameContains": args.displayNameContains,
        "filters": args.filters,
        "managementStationId": args.managementStationId,
        "mirrorStates": args.mirrorStates,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagementStationMirrors.
 */
export interface GetManagementStationMirrorsArgs {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName?: string;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: string;
    filters?: inputs.OsManagementHub.GetManagementStationMirrorsFilter[];
    /**
     * The OCID of the management station.
     */
    managementStationId: string;
    /**
     * List of Mirror state to filter by
     */
    mirrorStates?: string[];
}

/**
 * A collection of values returned by getManagementStationMirrors.
 */
export interface GetManagementStationMirrorsResult {
    /**
     * Display name of the mirror
     */
    readonly displayName?: string;
    readonly displayNameContains?: string;
    readonly filters?: outputs.OsManagementHub.GetManagementStationMirrorsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    readonly managementStationId: string;
    readonly mirrorStates?: string[];
    /**
     * The list of mirrors_collection.
     */
    readonly mirrorsCollections?: outputs.OsManagementHub.GetManagementStationMirrorsMirrorsCollection[];
}
/**
 * This data source provides the list of Management Station Mirrors in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists all software source mirrors associated with a specified management station.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagementStationMirrors = oci.OsManagementHub.getManagementStationMirrors({
 *     managementStationId: oci_os_management_hub_management_station.test_management_station.id,
 *     displayName: _var.management_station_mirror_display_name,
 *     displayNameContains: _var.management_station_mirror_display_name_contains,
 *     mirrorStates: _var.management_station_mirror_mirror_states,
 * });
 * ```
 */
export function getManagementStationMirrorsOutput(args: GetManagementStationMirrorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementStationMirrorsResult> {
    return pulumi.output(args).apply((a: any) => getManagementStationMirrors(a, opts))
}

/**
 * A collection of arguments for invoking getManagementStationMirrors.
 */
export interface GetManagementStationMirrorsOutputArgs {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetManagementStationMirrorsFilterArgs>[]>;
    /**
     * The OCID of the management station.
     */
    managementStationId: pulumi.Input<string>;
    /**
     * List of Mirror state to filter by
     */
    mirrorStates?: pulumi.Input<pulumi.Input<string>[]>;
}
