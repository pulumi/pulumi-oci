// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Management Stations in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists management stations in a compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagementStations = oci.OsManagementHub.getManagementStations({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.management_station_display_name,
 *     displayNameContains: _var.management_station_display_name_contains,
 *     id: _var.management_station_id,
 *     managedInstanceId: oci_osmanagement_managed_instance.test_managed_instance.id,
 *     state: _var.management_station_state,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getManagementStations(args?: GetManagementStationsArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementStationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getManagementStations:getManagementStations", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "displayNameContains": args.displayNameContains,
        "filters": args.filters,
        "id": args.id,
        "managedInstanceId": args.managedInstanceId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagementStations.
 */
export interface GetManagementStationsArgs {
    /**
     * The OCID of the compartment that contains the resources to list.
     */
    compartmentId?: string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName?: string;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: string;
    filters?: inputs.OsManagementHub.GetManagementStationsFilter[];
    /**
     * The OCID of the management station.
     */
    id?: string;
    /**
     * The OCID of the managed instance for which to list resources.
     */
    managedInstanceId?: string;
    /**
     * The current lifecycle state for the object.
     */
    state?: string;
}

/**
 * A collection of values returned by getManagementStations.
 */
export interface GetManagementStationsResult {
    /**
     * The OCID of the tenancy containing the Management Station.
     */
    readonly compartmentId?: string;
    /**
     * ManagementStation name
     */
    readonly displayName?: string;
    readonly displayNameContains?: string;
    readonly filters?: outputs.OsManagementHub.GetManagementStationsFilter[];
    /**
     * OCID for the ManagementStation config
     */
    readonly id?: string;
    /**
     * OCID for the Instance associated with the Management Station.
     */
    readonly managedInstanceId?: string;
    /**
     * The list of management_station_collection.
     */
    readonly managementStationCollections: outputs.OsManagementHub.GetManagementStationsManagementStationCollection[];
    /**
     * The current state of the Management Station config.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Management Stations in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists management stations in a compartment.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagementStations = oci.OsManagementHub.getManagementStations({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.management_station_display_name,
 *     displayNameContains: _var.management_station_display_name_contains,
 *     id: _var.management_station_id,
 *     managedInstanceId: oci_osmanagement_managed_instance.test_managed_instance.id,
 *     state: _var.management_station_state,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getManagementStationsOutput(args?: GetManagementStationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementStationsResult> {
    return pulumi.output(args).apply((a: any) => getManagementStations(a, opts))
}

/**
 * A collection of arguments for invoking getManagementStations.
 */
export interface GetManagementStationsOutputArgs {
    /**
     * The OCID of the compartment that contains the resources to list.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetManagementStationsFilterArgs>[]>;
    /**
     * The OCID of the management station.
     */
    id?: pulumi.Input<string>;
    /**
     * The OCID of the managed instance for which to list resources.
     */
    managedInstanceId?: pulumi.Input<string>;
    /**
     * The current lifecycle state for the object.
     */
    state?: pulumi.Input<string>;
}
