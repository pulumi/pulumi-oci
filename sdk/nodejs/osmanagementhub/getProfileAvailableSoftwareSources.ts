// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Profile Available Software Sources in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists available software sources for a specified profile. Filter the list against a variety of criteria including but not limited to the software source name. The results list only software sources that have not already been added to the profile.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProfileAvailableSoftwareSources = oci.OsManagementHub.getProfileAvailableSoftwareSources({
 *     profileId: testProfile.id,
 *     compartmentId: compartmentId,
 *     displayNames: profileAvailableSoftwareSourceDisplayName,
 *     displayNameContains: profileAvailableSoftwareSourceDisplayNameContains,
 * });
 * ```
 */
export function getProfileAvailableSoftwareSources(args: GetProfileAvailableSoftwareSourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetProfileAvailableSoftwareSourcesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getProfileAvailableSoftwareSources:getProfileAvailableSoftwareSources", {
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "profileId": args.profileId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProfileAvailableSoftwareSources.
 */
export interface GetProfileAvailableSoftwareSourcesArgs {
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: string;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: string;
    /**
     * A filter to return resources that match the given display names.
     */
    displayNames?: string[];
    filters?: inputs.OsManagementHub.GetProfileAvailableSoftwareSourcesFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
     */
    profileId: string;
}

/**
 * A collection of values returned by getProfileAvailableSoftwareSources.
 */
export interface GetProfileAvailableSoftwareSourcesResult {
    /**
     * The list of available_software_source_collection.
     */
    readonly availableSoftwareSourceCollections: outputs.OsManagementHub.GetProfileAvailableSoftwareSourcesAvailableSoftwareSourceCollection[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     */
    readonly compartmentId?: string;
    readonly displayNameContains?: string;
    /**
     * User-friendly name for the software source.
     */
    readonly displayNames?: string[];
    readonly filters?: outputs.OsManagementHub.GetProfileAvailableSoftwareSourcesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly profileId: string;
}
/**
 * This data source provides the list of Profile Available Software Sources in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists available software sources for a specified profile. Filter the list against a variety of criteria including but not limited to the software source name. The results list only software sources that have not already been added to the profile.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProfileAvailableSoftwareSources = oci.OsManagementHub.getProfileAvailableSoftwareSources({
 *     profileId: testProfile.id,
 *     compartmentId: compartmentId,
 *     displayNames: profileAvailableSoftwareSourceDisplayName,
 *     displayNameContains: profileAvailableSoftwareSourceDisplayNameContains,
 * });
 * ```
 */
export function getProfileAvailableSoftwareSourcesOutput(args: GetProfileAvailableSoftwareSourcesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProfileAvailableSoftwareSourcesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:OsManagementHub/getProfileAvailableSoftwareSources:getProfileAvailableSoftwareSources", {
        "compartmentId": args.compartmentId,
        "displayNameContains": args.displayNameContains,
        "displayNames": args.displayNames,
        "filters": args.filters,
        "profileId": args.profileId,
    }, opts);
}

/**
 * A collection of arguments for invoking getProfileAvailableSoftwareSources.
 */
export interface GetProfileAvailableSoftwareSourcesOutputArgs {
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: pulumi.Input<string>;
    /**
     * A filter to return resources that match the given display names.
     */
    displayNames?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetProfileAvailableSoftwareSourcesFilterArgs>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile.
     */
    profileId: pulumi.Input<string>;
}
