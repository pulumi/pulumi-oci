// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Software Package resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Returns information about the specified software package based on its fully qualified name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwarePackage = oci.OsManagementHub.getSoftwarePackage({
 *     softwarePackageName: testSoftwarePackageOciOsManagementHubSoftwarePackage.name,
 * });
 * ```
 */
export function getSoftwarePackage(args: GetSoftwarePackageArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwarePackageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getSoftwarePackage:getSoftwarePackage", {
        "softwarePackageName": args.softwarePackageName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwarePackage.
 */
export interface GetSoftwarePackageArgs {
    /**
     * The name of the software package.
     */
    softwarePackageName: string;
}

/**
 * A collection of values returned by getSoftwarePackage.
 */
export interface GetSoftwarePackageResult {
    /**
     * The architecture for which this software was built
     */
    readonly architecture: string;
    /**
     * Checksum of the file.
     */
    readonly checksum: string;
    /**
     * Type of the checksum.
     */
    readonly checksumType: string;
    /**
     * List of dependencies for the software package.
     */
    readonly dependencies: outputs.OsManagementHub.GetSoftwarePackageDependency[];
    /**
     * Software source description.
     */
    readonly description: string;
    /**
     * Software source name.
     */
    readonly displayName: string;
    /**
     * List of files for the software package.
     */
    readonly files: outputs.OsManagementHub.GetSoftwarePackageFile[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates whether this package is the latest version.
     */
    readonly isLatest: boolean;
    /**
     * The date and time the package was last modified (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    readonly lastModifiedDate: string;
    /**
     * Unique identifier for the package. Note that this is not an OCID.
     */
    readonly name: string;
    /**
     * The OS families the package belongs to.
     */
    readonly osFamilies: string[];
    /**
     * Size of the package in bytes.
     */
    readonly sizeInBytes: string;
    readonly softwarePackageName: string;
    /**
     * List of software sources that provide the software package. This property is deprecated and it will be removed in a future API release.
     */
    readonly softwareSources: outputs.OsManagementHub.GetSoftwarePackageSoftwareSource[];
    /**
     * Type of the package.
     */
    readonly type: string;
    /**
     * Version of the package.
     */
    readonly version: string;
}
/**
 * This data source provides details about a specific Software Package resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Returns information about the specified software package based on its fully qualified name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwarePackage = oci.OsManagementHub.getSoftwarePackage({
 *     softwarePackageName: testSoftwarePackageOciOsManagementHubSoftwarePackage.name,
 * });
 * ```
 */
export function getSoftwarePackageOutput(args: GetSoftwarePackageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwarePackageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:OsManagementHub/getSoftwarePackage:getSoftwarePackage", {
        "softwarePackageName": args.softwarePackageName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwarePackage.
 */
export interface GetSoftwarePackageOutputArgs {
    /**
     * The name of the software package.
     */
    softwarePackageName: pulumi.Input<string>;
}
