// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Software Source Module Stream Profile resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Gets information about the specified module stream profile in a software source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourceModuleStreamProfile = oci.OsManagementHub.getSoftwareSourceModuleStreamProfile({
 *     moduleName: _var.software_source_module_stream_profile_module_name,
 *     profileName: oci_os_management_hub_profile.test_profile.name,
 *     softwareSourceId: oci_os_management_hub_software_source.test_software_source.id,
 *     streamName: oci_streaming_stream.test_stream.name,
 * });
 * ```
 */
export function getSoftwareSourceModuleStreamProfile(args: GetSoftwareSourceModuleStreamProfileArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwareSourceModuleStreamProfileResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getSoftwareSourceModuleStreamProfile:getSoftwareSourceModuleStreamProfile", {
        "moduleName": args.moduleName,
        "profileName": args.profileName,
        "softwareSourceId": args.softwareSourceId,
        "streamName": args.streamName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwareSourceModuleStreamProfile.
 */
export interface GetSoftwareSourceModuleStreamProfileArgs {
    /**
     * The name of a module.
     */
    moduleName: string;
    /**
     * The name of the profile of the containing module stream.
     */
    profileName: string;
    /**
     * The software source OCID.
     */
    softwareSourceId: string;
    /**
     * The name of the stream of the containing module.
     */
    streamName: string;
}

/**
 * A collection of values returned by getSoftwareSourceModuleStreamProfile.
 */
export interface GetSoftwareSourceModuleStreamProfileResult {
    /**
     * A description of the contents of the module stream profile.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates if this profile is the default for its module stream.
     */
    readonly isDefault: boolean;
    /**
     * The name of the module that contains the stream profile.
     */
    readonly moduleName: string;
    /**
     * The name of the profile.
     */
    readonly name: string;
    /**
     * A list of packages that constitute the profile.  Each element in the list is the name of a package.  The name is suitable to use as an argument to other OS Management Hub APIs that interact directly with packages.
     */
    readonly packages: string[];
    readonly profileName: string;
    readonly softwareSourceId: string;
    /**
     * The name of the stream that contains the profile.
     */
    readonly streamName: string;
}
/**
 * This data source provides details about a specific Software Source Module Stream Profile resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Gets information about the specified module stream profile in a software source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourceModuleStreamProfile = oci.OsManagementHub.getSoftwareSourceModuleStreamProfile({
 *     moduleName: _var.software_source_module_stream_profile_module_name,
 *     profileName: oci_os_management_hub_profile.test_profile.name,
 *     softwareSourceId: oci_os_management_hub_software_source.test_software_source.id,
 *     streamName: oci_streaming_stream.test_stream.name,
 * });
 * ```
 */
export function getSoftwareSourceModuleStreamProfileOutput(args: GetSoftwareSourceModuleStreamProfileOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwareSourceModuleStreamProfileResult> {
    return pulumi.output(args).apply((a: any) => getSoftwareSourceModuleStreamProfile(a, opts))
}

/**
 * A collection of arguments for invoking getSoftwareSourceModuleStreamProfile.
 */
export interface GetSoftwareSourceModuleStreamProfileOutputArgs {
    /**
     * The name of a module.
     */
    moduleName: pulumi.Input<string>;
    /**
     * The name of the profile of the containing module stream.
     */
    profileName: pulumi.Input<string>;
    /**
     * The software source OCID.
     */
    softwareSourceId: pulumi.Input<string>;
    /**
     * The name of the stream of the containing module.
     */
    streamName: pulumi.Input<string>;
}
