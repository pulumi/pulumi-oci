// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Software Source Package Group resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Gets information about the specified package group from a software source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourcePackageGroup = oci.OsManagementHub.getSoftwareSourcePackageGroup({
 *     packageGroupId: oci_identity_group.test_group.id,
 *     softwareSourceId: oci_os_management_hub_software_source.test_software_source.id,
 * });
 * ```
 */
export function getSoftwareSourcePackageGroup(args: GetSoftwareSourcePackageGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwareSourcePackageGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getSoftwareSourcePackageGroup:getSoftwareSourcePackageGroup", {
        "packageGroupId": args.packageGroupId,
        "softwareSourceId": args.softwareSourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwareSourcePackageGroup.
 */
export interface GetSoftwareSourcePackageGroupArgs {
    /**
     * The unique package group identifier.
     */
    packageGroupId: string;
    /**
     * The software source OCID.
     */
    softwareSourceId: string;
}

/**
 * A collection of values returned by getSoftwareSourcePackageGroup.
 */
export interface GetSoftwareSourcePackageGroupResult {
    /**
     * description of the package group.
     */
    readonly description: string;
    /**
     * Indicates the order to display category or environment.
     */
    readonly displayOrder: number;
    /**
     * Indicates if this is a group, category or environment.
     */
    readonly groupType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates if this package group is the default.
     */
    readonly isDefault: boolean;
    /**
     * Indicates if this package group is visible by users.
     */
    readonly isUserVisible: boolean;
    /**
     * Package group name.
     */
    readonly name: string;
    readonly packageGroupId: string;
    /**
     * The list of packages in the package group.
     */
    readonly packages: string[];
    /**
     * the IDs of the package group's repositories.
     */
    readonly repositories: string[];
    readonly softwareSourceId: string;
}
/**
 * This data source provides details about a specific Software Source Package Group resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Gets information about the specified package group from a software source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourcePackageGroup = oci.OsManagementHub.getSoftwareSourcePackageGroup({
 *     packageGroupId: oci_identity_group.test_group.id,
 *     softwareSourceId: oci_os_management_hub_software_source.test_software_source.id,
 * });
 * ```
 */
export function getSoftwareSourcePackageGroupOutput(args: GetSoftwareSourcePackageGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwareSourcePackageGroupResult> {
    return pulumi.output(args).apply((a: any) => getSoftwareSourcePackageGroup(a, opts))
}

/**
 * A collection of arguments for invoking getSoftwareSourcePackageGroup.
 */
export interface GetSoftwareSourcePackageGroupOutputArgs {
    /**
     * The unique package group identifier.
     */
    packageGroupId: pulumi.Input<string>;
    /**
     * The software source OCID.
     */
    softwareSourceId: pulumi.Input<string>;
}
