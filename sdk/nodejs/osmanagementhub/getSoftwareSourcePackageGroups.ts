// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Software Source Package Groups in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists package groups that are associated with the specified software source [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Filter the list against a
 * variety of criteria including but not limited to its name, and package group type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourcePackageGroups = oci.OsManagementHub.getSoftwareSourcePackageGroups({
 *     softwareSourceId: testSoftwareSource.id,
 *     compartmentId: compartmentId,
 *     groupTypes: softwareSourcePackageGroupGroupType,
 *     name: softwareSourcePackageGroupName,
 *     nameContains: softwareSourcePackageGroupNameContains,
 * });
 * ```
 */
export function getSoftwareSourcePackageGroups(args: GetSoftwareSourcePackageGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwareSourcePackageGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getSoftwareSourcePackageGroups:getSoftwareSourcePackageGroups", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "groupTypes": args.groupTypes,
        "name": args.name,
        "nameContains": args.nameContains,
        "softwareSourceId": args.softwareSourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwareSourcePackageGroups.
 */
export interface GetSoftwareSourcePackageGroupsArgs {
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: string;
    filters?: inputs.OsManagementHub.GetSoftwareSourcePackageGroupsFilter[];
    /**
     * A filter to return only package groups of the specified type.
     */
    groupTypes?: string[];
    /**
     * The name of the entity to be queried.
     */
    name?: string;
    /**
     * A filter to return resources that may partially match the name given.
     */
    nameContains?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     */
    softwareSourceId: string;
}

/**
 * A collection of values returned by getSoftwareSourcePackageGroups.
 */
export interface GetSoftwareSourcePackageGroupsResult {
    readonly compartmentId?: string;
    readonly filters?: outputs.OsManagementHub.GetSoftwareSourcePackageGroupsFilter[];
    /**
     * Indicates if this is a group, category, or environment.
     */
    readonly groupTypes?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Package group name.
     */
    readonly name?: string;
    readonly nameContains?: string;
    /**
     * The list of package_group_collection.
     */
    readonly packageGroupCollections: outputs.OsManagementHub.GetSoftwareSourcePackageGroupsPackageGroupCollection[];
    readonly softwareSourceId: string;
}
/**
 * This data source provides the list of Software Source Package Groups in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists package groups that are associated with the specified software source [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Filter the list against a
 * variety of criteria including but not limited to its name, and package group type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourcePackageGroups = oci.OsManagementHub.getSoftwareSourcePackageGroups({
 *     softwareSourceId: testSoftwareSource.id,
 *     compartmentId: compartmentId,
 *     groupTypes: softwareSourcePackageGroupGroupType,
 *     name: softwareSourcePackageGroupName,
 *     nameContains: softwareSourcePackageGroupNameContains,
 * });
 * ```
 */
export function getSoftwareSourcePackageGroupsOutput(args: GetSoftwareSourcePackageGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwareSourcePackageGroupsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:OsManagementHub/getSoftwareSourcePackageGroups:getSoftwareSourcePackageGroups", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "groupTypes": args.groupTypes,
        "name": args.name,
        "nameContains": args.nameContains,
        "softwareSourceId": args.softwareSourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwareSourcePackageGroups.
 */
export interface GetSoftwareSourcePackageGroupsOutputArgs {
    /**
     * The OCID of the compartment that contains the resources to list. This filter returns only resources contained within the specified compartment.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetSoftwareSourcePackageGroupsFilterArgs>[]>;
    /**
     * A filter to return only package groups of the specified type.
     */
    groupTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the entity to be queried.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the name given.
     */
    nameContains?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     */
    softwareSourceId: pulumi.Input<string>;
}
