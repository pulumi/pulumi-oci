// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Software Source Software Packages in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists software packages in the specified software source.  Filter the list against a variety of criteria
 * including but not limited to its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourceSoftwarePackages = oci.OsManagementHub.getSoftwareSourceSoftwarePackages({
 *     softwareSourceId: testSoftwareSource.id,
 *     displayName: softwareSourceSoftwarePackageDisplayName,
 *     displayNameContains: softwareSourceSoftwarePackageDisplayNameContains,
 *     isLatest: softwareSourceSoftwarePackageIsLatest,
 * });
 * ```
 */
export function getSoftwareSourceSoftwarePackages(args: GetSoftwareSourceSoftwarePackagesArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwareSourceSoftwarePackagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:OsManagementHub/getSoftwareSourceSoftwarePackages:getSoftwareSourceSoftwarePackages", {
        "displayName": args.displayName,
        "displayNameContains": args.displayNameContains,
        "filters": args.filters,
        "isLatest": args.isLatest,
        "softwareSourceId": args.softwareSourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwareSourceSoftwarePackages.
 */
export interface GetSoftwareSourceSoftwarePackagesArgs {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName?: string;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: string;
    filters?: inputs.OsManagementHub.GetSoftwareSourceSoftwarePackagesFilter[];
    /**
     * A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
     */
    isLatest?: boolean;
    /**
     * The software source OCID.
     */
    softwareSourceId: string;
}

/**
 * A collection of values returned by getSoftwareSourceSoftwarePackages.
 */
export interface GetSoftwareSourceSoftwarePackagesResult {
    /**
     * Software source name.
     */
    readonly displayName?: string;
    readonly displayNameContains?: string;
    readonly filters?: outputs.OsManagementHub.GetSoftwareSourceSoftwarePackagesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates whether this package is the latest version.
     */
    readonly isLatest?: boolean;
    /**
     * The list of software_package_collection.
     */
    readonly softwarePackageCollections: outputs.OsManagementHub.GetSoftwareSourceSoftwarePackagesSoftwarePackageCollection[];
    readonly softwareSourceId: string;
}
/**
 * This data source provides the list of Software Source Software Packages in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Lists software packages in the specified software source.  Filter the list against a variety of criteria
 * including but not limited to its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourceSoftwarePackages = oci.OsManagementHub.getSoftwareSourceSoftwarePackages({
 *     softwareSourceId: testSoftwareSource.id,
 *     displayName: softwareSourceSoftwarePackageDisplayName,
 *     displayNameContains: softwareSourceSoftwarePackageDisplayNameContains,
 *     isLatest: softwareSourceSoftwarePackageIsLatest,
 * });
 * ```
 */
export function getSoftwareSourceSoftwarePackagesOutput(args: GetSoftwareSourceSoftwarePackagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSoftwareSourceSoftwarePackagesResult> {
    return pulumi.output(args).apply((a: any) => getSoftwareSourceSoftwarePackages(a, opts))
}

/**
 * A collection of arguments for invoking getSoftwareSourceSoftwarePackages.
 */
export interface GetSoftwareSourceSoftwarePackagesOutputArgs {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.  Example: `My new resource`
     */
    displayName?: pulumi.Input<string>;
    /**
     * A filter to return resources that may partially match the given display name.
     */
    displayNameContains?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.GetSoftwareSourceSoftwarePackagesFilterArgs>[]>;
    /**
     * A boolean variable that is used to list only the latest versions of packages, module streams, and stream profiles when set to true. All packages, module streams, and stream profiles are returned when set to false.
     */
    isLatest?: pulumi.Input<boolean>;
    /**
     * The software source OCID.
     */
    softwareSourceId: pulumi.Input<string>;
}
