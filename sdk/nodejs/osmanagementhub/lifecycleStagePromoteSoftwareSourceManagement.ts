// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Lifecycle Stage Promote Software Source Management resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Updates the versioned custom software source content to the specified lifecycle stage.
 * A versioned custom software source OCID (softwareSourceId) is required when promoting content to the first lifecycle stage. You must promote content to the first stage before promoting to subsequent stages, otherwise the service returns an error.
 * The softwareSourceId is optional when promoting content to the second, third, forth, or fifth stages. If you provide a softwareSourceId, the service validates that it matches the softwareSourceId of the previous stage. If it does not match, the service returns an error. If you don't provide a softwareSourceId, the service promotes the versioned software source from the previous lifecycle stage. If the previous lifecycle stage has no software source, the service returns an error.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testLifecycleStagePromoteSoftwareSourceManagement = new oci.osmanagementhub.LifecycleStagePromoteSoftwareSourceManagement("test_lifecycle_stage_promote_software_source_management", {
 *     lifecycleStageId: testLifecycleStage.id,
 *     softwareSourceId: testSoftwareSource.id,
 *     workRequestDetails: {
 *         description: lifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsDescription,
 *         displayName: lifecycleStagePromoteSoftwareSourceManagementWorkRequestDetailsDisplayName,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * LifecycleStagePromoteSoftwareSourceManagement can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/lifecycleStagePromoteSoftwareSourceManagement:LifecycleStagePromoteSoftwareSourceManagement test_lifecycle_stage_promote_software_source_management "id"
 * ```
 */
export class LifecycleStagePromoteSoftwareSourceManagement extends pulumi.CustomResource {
    /**
     * Get an existing LifecycleStagePromoteSoftwareSourceManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LifecycleStagePromoteSoftwareSourceManagementState, opts?: pulumi.CustomResourceOptions): LifecycleStagePromoteSoftwareSourceManagement {
        return new LifecycleStagePromoteSoftwareSourceManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/lifecycleStagePromoteSoftwareSourceManagement:LifecycleStagePromoteSoftwareSourceManagement';

    /**
     * Returns true if the given object is an instance of LifecycleStagePromoteSoftwareSourceManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LifecycleStagePromoteSoftwareSourceManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LifecycleStagePromoteSoftwareSourceManagement.__pulumiType;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
     */
    public readonly lifecycleStageId!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
     */
    public readonly softwareSourceId!: pulumi.Output<string>;
    /**
     * Provides the name and description of the job.
     */
    public readonly workRequestDetails!: pulumi.Output<outputs.OsManagementHub.LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetails>;

    /**
     * Create a LifecycleStagePromoteSoftwareSourceManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LifecycleStagePromoteSoftwareSourceManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LifecycleStagePromoteSoftwareSourceManagementArgs | LifecycleStagePromoteSoftwareSourceManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LifecycleStagePromoteSoftwareSourceManagementState | undefined;
            resourceInputs["lifecycleStageId"] = state ? state.lifecycleStageId : undefined;
            resourceInputs["softwareSourceId"] = state ? state.softwareSourceId : undefined;
            resourceInputs["workRequestDetails"] = state ? state.workRequestDetails : undefined;
        } else {
            const args = argsOrState as LifecycleStagePromoteSoftwareSourceManagementArgs | undefined;
            if ((!args || args.lifecycleStageId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lifecycleStageId'");
            }
            resourceInputs["lifecycleStageId"] = args ? args.lifecycleStageId : undefined;
            resourceInputs["softwareSourceId"] = args ? args.softwareSourceId : undefined;
            resourceInputs["workRequestDetails"] = args ? args.workRequestDetails : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LifecycleStagePromoteSoftwareSourceManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LifecycleStagePromoteSoftwareSourceManagement resources.
 */
export interface LifecycleStagePromoteSoftwareSourceManagementState {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
     */
    lifecycleStageId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
     */
    softwareSourceId?: pulumi.Input<string>;
    /**
     * Provides the name and description of the job.
     */
    workRequestDetails?: pulumi.Input<inputs.OsManagementHub.LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetails>;
}

/**
 * The set of arguments for constructing a LifecycleStagePromoteSoftwareSourceManagement resource.
 */
export interface LifecycleStagePromoteSoftwareSourceManagementArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the lifecycle stage.
     */
    lifecycleStageId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source. This filter returns resources associated with this software source.
     */
    softwareSourceId?: pulumi.Input<string>;
    /**
     * Provides the name and description of the job.
     */
    workRequestDetails?: pulumi.Input<inputs.OsManagementHub.LifecycleStagePromoteSoftwareSourceManagementWorkRequestDetails>;
}
