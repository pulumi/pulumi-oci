// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Managed Instance Group Manage Module Streams Management resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Enables or disables module streams and installs or removes module stream profiles. Once complete, the state of the modules, streams, and profiles will match the state indicated in the operation. See [ManageModuleStreamsOnManagedInstanceGroupDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/ManageModuleStreamsOnManagedInstanceGroupDetails) for more information.
 * You can preform this operation as a dry run. For a dry run, the service evaluates the operation against the current module, stream, and profile state on the managed instance, but does not commit the changes. Instead, the service returns work request log or error entries indicating the impact of the operation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceGroupManageModuleStreamsManagement = new oci.osmanagementhub.ManagedInstanceGroupManageModuleStreamsManagement("test_managed_instance_group_manage_module_streams_management", {
 *     managedInstanceGroupId: testManagedInstanceGroup.id,
 *     disables: [{
 *         moduleName: managedInstanceGroupManageModuleStreamsManagementDisableModuleName,
 *         streamName: testStream.name,
 *         softwareSourceId: testSoftwareSource.id,
 *     }],
 *     enables: [{
 *         moduleName: managedInstanceGroupManageModuleStreamsManagementEnableModuleName,
 *         streamName: testStream.name,
 *         softwareSourceId: testSoftwareSource.id,
 *     }],
 *     installs: [{
 *         moduleName: managedInstanceGroupManageModuleStreamsManagementInstallModuleName,
 *         profileName: testProfile.name,
 *         streamName: testStream.name,
 *         softwareSourceId: testSoftwareSource.id,
 *     }],
 *     isDryRun: managedInstanceGroupManageModuleStreamsManagementIsDryRun,
 *     removes: [{
 *         moduleName: managedInstanceGroupManageModuleStreamsManagementRemoveModuleName,
 *         profileName: testProfile.name,
 *         streamName: testStream.name,
 *         softwareSourceId: testSoftwareSource.id,
 *     }],
 *     workRequestDetails: {
 *         description: managedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsDescription,
 *         displayName: managedInstanceGroupManageModuleStreamsManagementWorkRequestDetailsDisplayName,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ManagedInstanceGroupManageModuleStreamsManagement can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement test_managed_instance_group_manage_module_streams_management "id"
 * ```
 */
export class ManagedInstanceGroupManageModuleStreamsManagement extends pulumi.CustomResource {
    /**
     * Get an existing ManagedInstanceGroupManageModuleStreamsManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedInstanceGroupManageModuleStreamsManagementState, opts?: pulumi.CustomResourceOptions): ManagedInstanceGroupManageModuleStreamsManagement {
        return new ManagedInstanceGroupManageModuleStreamsManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/managedInstanceGroupManageModuleStreamsManagement:ManagedInstanceGroupManageModuleStreamsManagement';

    /**
     * Returns true if the given object is an instance of ManagedInstanceGroupManageModuleStreamsManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedInstanceGroupManageModuleStreamsManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedInstanceGroupManageModuleStreamsManagement.__pulumiType;
    }

    /**
     * The set of module streams to disable.
     */
    declare public readonly disables: pulumi.Output<outputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementDisable[]>;
    /**
     * The set of module streams to enable.
     */
    declare public readonly enables: pulumi.Output<outputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementEnable[]>;
    /**
     * The set of module stream profiles to install.
     */
    declare public readonly installs: pulumi.Output<outputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementInstall[]>;
    /**
     * Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
     */
    declare public readonly isDryRun: pulumi.Output<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     */
    declare public readonly managedInstanceGroupId: pulumi.Output<string>;
    /**
     * The set of module stream profiles to remove.
     */
    declare public readonly removes: pulumi.Output<outputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementRemove[]>;
    /**
     * Provides the name and description of the job.
     */
    declare public readonly workRequestDetails: pulumi.Output<outputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails>;

    /**
     * Create a ManagedInstanceGroupManageModuleStreamsManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedInstanceGroupManageModuleStreamsManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedInstanceGroupManageModuleStreamsManagementArgs | ManagedInstanceGroupManageModuleStreamsManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedInstanceGroupManageModuleStreamsManagementState | undefined;
            resourceInputs["disables"] = state?.disables;
            resourceInputs["enables"] = state?.enables;
            resourceInputs["installs"] = state?.installs;
            resourceInputs["isDryRun"] = state?.isDryRun;
            resourceInputs["managedInstanceGroupId"] = state?.managedInstanceGroupId;
            resourceInputs["removes"] = state?.removes;
            resourceInputs["workRequestDetails"] = state?.workRequestDetails;
        } else {
            const args = argsOrState as ManagedInstanceGroupManageModuleStreamsManagementArgs | undefined;
            if (args?.managedInstanceGroupId === undefined && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceGroupId'");
            }
            resourceInputs["disables"] = args?.disables;
            resourceInputs["enables"] = args?.enables;
            resourceInputs["installs"] = args?.installs;
            resourceInputs["isDryRun"] = args?.isDryRun;
            resourceInputs["managedInstanceGroupId"] = args?.managedInstanceGroupId;
            resourceInputs["removes"] = args?.removes;
            resourceInputs["workRequestDetails"] = args?.workRequestDetails;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedInstanceGroupManageModuleStreamsManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedInstanceGroupManageModuleStreamsManagement resources.
 */
export interface ManagedInstanceGroupManageModuleStreamsManagementState {
    /**
     * The set of module streams to disable.
     */
    disables?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementDisable>[]>;
    /**
     * The set of module streams to enable.
     */
    enables?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementEnable>[]>;
    /**
     * The set of module stream profiles to install.
     */
    installs?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementInstall>[]>;
    /**
     * Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
     */
    isDryRun?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     */
    managedInstanceGroupId?: pulumi.Input<string>;
    /**
     * The set of module stream profiles to remove.
     */
    removes?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementRemove>[]>;
    /**
     * Provides the name and description of the job.
     */
    workRequestDetails?: pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails>;
}

/**
 * The set of arguments for constructing a ManagedInstanceGroupManageModuleStreamsManagement resource.
 */
export interface ManagedInstanceGroupManageModuleStreamsManagementArgs {
    /**
     * The set of module streams to disable.
     */
    disables?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementDisable>[]>;
    /**
     * The set of module streams to enable.
     */
    enables?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementEnable>[]>;
    /**
     * The set of module stream profiles to install.
     */
    installs?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementInstall>[]>;
    /**
     * Indicates if this operation is a dry run or if the operation should be committed.  If set to true, the result of the operation will be evaluated but not committed.  If set to false, the operation is committed to the managed instance(s).  The default is false.
     */
    isDryRun?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance group.
     */
    managedInstanceGroupId: pulumi.Input<string>;
    /**
     * The set of module stream profiles to remove.
     */
    removes?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementRemove>[]>;
    /**
     * Provides the name and description of the job.
     */
    workRequestDetails?: pulumi.Input<inputs.OsManagementHub.ManagedInstanceGroupManageModuleStreamsManagementWorkRequestDetails>;
}
