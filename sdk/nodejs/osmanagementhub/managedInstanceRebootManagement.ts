// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Managed Instance Reboot Management resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Initiates a reboot of the specified managed instance. You can also specify the number of minutes the service
 * waits before marking the reboot operation as failed.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagedInstanceRebootManagement = new oci.osmanagementhub.ManagedInstanceRebootManagement("test_managed_instance_reboot_management", {
 *     managedInstanceId: testManagedInstance.id,
 *     rebootTimeoutInMins: managedInstanceRebootManagementRebootTimeoutInMins,
 *     workRequestDetails: {
 *         description: managedInstanceRebootManagementWorkRequestDetailsDescription,
 *         displayName: managedInstanceRebootManagementWorkRequestDetailsDisplayName,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ManagedInstanceRebootManagement can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/managedInstanceRebootManagement:ManagedInstanceRebootManagement test_managed_instance_reboot_management "id"
 * ```
 */
export class ManagedInstanceRebootManagement extends pulumi.CustomResource {
    /**
     * Get an existing ManagedInstanceRebootManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedInstanceRebootManagementState, opts?: pulumi.CustomResourceOptions): ManagedInstanceRebootManagement {
        return new ManagedInstanceRebootManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/managedInstanceRebootManagement:ManagedInstanceRebootManagement';

    /**
     * Returns true if the given object is an instance of ManagedInstanceRebootManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedInstanceRebootManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedInstanceRebootManagement.__pulumiType;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     */
    declare public readonly managedInstanceId: pulumi.Output<string>;
    /**
     * The number of minutes the service waits for the reboot to complete. If the instance doesn't reboot within this  time, the reboot job status is set to failed.
     */
    declare public readonly rebootTimeoutInMins: pulumi.Output<number>;
    /**
     * Provides the name and description of the job.
     */
    declare public readonly workRequestDetails: pulumi.Output<outputs.OsManagementHub.ManagedInstanceRebootManagementWorkRequestDetails>;

    /**
     * Create a ManagedInstanceRebootManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedInstanceRebootManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedInstanceRebootManagementArgs | ManagedInstanceRebootManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedInstanceRebootManagementState | undefined;
            resourceInputs["managedInstanceId"] = state?.managedInstanceId;
            resourceInputs["rebootTimeoutInMins"] = state?.rebootTimeoutInMins;
            resourceInputs["workRequestDetails"] = state?.workRequestDetails;
        } else {
            const args = argsOrState as ManagedInstanceRebootManagementArgs | undefined;
            if (args?.managedInstanceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceId'");
            }
            resourceInputs["managedInstanceId"] = args?.managedInstanceId;
            resourceInputs["rebootTimeoutInMins"] = args?.rebootTimeoutInMins;
            resourceInputs["workRequestDetails"] = args?.workRequestDetails;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedInstanceRebootManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedInstanceRebootManagement resources.
 */
export interface ManagedInstanceRebootManagementState {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     */
    managedInstanceId?: pulumi.Input<string>;
    /**
     * The number of minutes the service waits for the reboot to complete. If the instance doesn't reboot within this  time, the reboot job status is set to failed.
     */
    rebootTimeoutInMins?: pulumi.Input<number>;
    /**
     * Provides the name and description of the job.
     */
    workRequestDetails?: pulumi.Input<inputs.OsManagementHub.ManagedInstanceRebootManagementWorkRequestDetails>;
}

/**
 * The set of arguments for constructing a ManagedInstanceRebootManagement resource.
 */
export interface ManagedInstanceRebootManagementArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     */
    managedInstanceId: pulumi.Input<string>;
    /**
     * The number of minutes the service waits for the reboot to complete. If the instance doesn't reboot within this  time, the reboot job status is set to failed.
     */
    rebootTimeoutInMins?: pulumi.Input<number>;
    /**
     * Provides the name and description of the job.
     */
    workRequestDetails?: pulumi.Input<inputs.OsManagementHub.ManagedInstanceRebootManagementWorkRequestDetails>;
}
