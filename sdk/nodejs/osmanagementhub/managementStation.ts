// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Management Station resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Creates a management station using the proxy and mirror configuration information provided.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testManagementStation = new oci.osmanagementhub.ManagementStation("test_management_station", {
 *     compartmentId: compartmentId,
 *     displayName: managementStationDisplayName,
 *     hostname: managementStationHostname,
 *     mirror: {
 *         directory: managementStationMirrorDirectory,
 *         port: managementStationMirrorPort,
 *         sslport: managementStationMirrorSslport,
 *         isSslverifyEnabled: managementStationMirrorIsSslverifyEnabled,
 *         sslcert: managementStationMirrorSslcert,
 *     },
 *     proxy: {
 *         isEnabled: managementStationProxyIsEnabled,
 *         forward: managementStationProxyForward,
 *         hosts: managementStationProxyHosts,
 *         port: managementStationProxyPort,
 *     },
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     description: managementStationDescription,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     isAutoConfigEnabled: managementStationIsAutoConfigEnabled,
 * });
 * ```
 *
 * ## Import
 *
 * ManagementStations can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/managementStation:ManagementStation test_management_station "id"
 * ```
 */
export class ManagementStation extends pulumi.CustomResource {
    /**
     * Get an existing ManagementStation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementStationState, opts?: pulumi.CustomResourceOptions): ManagementStation {
        return new ManagementStation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/managementStation:ManagementStation';

    /**
     * Returns true if the given object is an instance of ManagementStation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementStation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementStation.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) User-specified description of the management station. Avoid entering confidential information.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Overall health information of the management station.
     */
    declare public /*out*/ readonly healths: pulumi.Output<outputs.OsManagementHub.ManagementStationHealth[]>;
    /**
     * (Updatable) Hostname of the management station.
     */
    declare public readonly hostname: pulumi.Output<string>;
    /**
     * (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
     */
    declare public readonly isAutoConfigEnabled: pulumi.Output<boolean>;
    /**
     * The location of the instance that is acting as the management station.
     */
    declare public /*out*/ readonly location: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
     */
    declare public /*out*/ readonly managedInstanceId: pulumi.Output<string>;
    /**
     * (Updatable) Information used to create the mirror configuration for a management station.
     */
    declare public readonly mirror: pulumi.Output<outputs.OsManagementHub.ManagementStationMirror>;
    /**
     * A decimal number representing the amount of mirror capacity used by the sync.
     */
    declare public /*out*/ readonly mirrorCapacity: pulumi.Output<number>;
    /**
     * The total number of all packages within the mirrored software sources.
     */
    declare public /*out*/ readonly mirrorPackageCount: pulumi.Output<number>;
    /**
     * The total size of all software source mirrors in bytes.
     */
    declare public /*out*/ readonly mirrorSize: pulumi.Output<string>;
    /**
     * Amount of available mirror storage in bytes.
     */
    declare public /*out*/ readonly mirrorStorageAvailableSize: pulumi.Output<string>;
    /**
     * Total mirror storage size in bytes.
     */
    declare public /*out*/ readonly mirrorStorageSize: pulumi.Output<string>;
    /**
     * Status summary of the mirror sync.
     */
    declare public /*out*/ readonly mirrorSyncStatuses: pulumi.Output<outputs.OsManagementHub.ManagementStationMirrorSyncStatus[]>;
    /**
     * The total number of unique packages within the mirrored software sources on the station. Each package is counted only once, regardless of how many versions it has.
     */
    declare public /*out*/ readonly mirrorUniquePackageCount: pulumi.Output<number>;
    /**
     * A decimal number representing the progress of the current mirror sync.
     */
    declare public /*out*/ readonly overallPercentage: pulumi.Output<number>;
    /**
     * Current state of the mirror sync for the management station.
     */
    declare public /*out*/ readonly overallState: pulumi.Output<string>;
    /**
     * A list of other management stations that are behind the same load balancer within a high availability configuration. Stations are identified as peers if they have the same hostname and compartment.
     */
    declare public /*out*/ readonly peerManagementStations: pulumi.Output<outputs.OsManagementHub.ManagementStationPeerManagementStation[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
     */
    declare public /*out*/ readonly profileId: pulumi.Output<string>;
    /**
     * (Updatable) Information used to create the proxy configuration for a management station.
     */
    declare public readonly proxy: pulumi.Output<outputs.OsManagementHub.ManagementStationProxy>;
    /**
     * (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly refreshTrigger: pulumi.Output<number | undefined>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
     */
    declare public /*out*/ readonly scheduledJobId: pulumi.Output<string>;
    /**
     * The current state of the management station.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The number of software sources that the station is mirroring.
     */
    declare public /*out*/ readonly totalMirrors: pulumi.Output<number>;

    /**
     * Create a ManagementStation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementStationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementStationArgs | ManagementStationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementStationState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["healths"] = state?.healths;
            resourceInputs["hostname"] = state?.hostname;
            resourceInputs["isAutoConfigEnabled"] = state?.isAutoConfigEnabled;
            resourceInputs["location"] = state?.location;
            resourceInputs["managedInstanceId"] = state?.managedInstanceId;
            resourceInputs["mirror"] = state?.mirror;
            resourceInputs["mirrorCapacity"] = state?.mirrorCapacity;
            resourceInputs["mirrorPackageCount"] = state?.mirrorPackageCount;
            resourceInputs["mirrorSize"] = state?.mirrorSize;
            resourceInputs["mirrorStorageAvailableSize"] = state?.mirrorStorageAvailableSize;
            resourceInputs["mirrorStorageSize"] = state?.mirrorStorageSize;
            resourceInputs["mirrorSyncStatuses"] = state?.mirrorSyncStatuses;
            resourceInputs["mirrorUniquePackageCount"] = state?.mirrorUniquePackageCount;
            resourceInputs["overallPercentage"] = state?.overallPercentage;
            resourceInputs["overallState"] = state?.overallState;
            resourceInputs["peerManagementStations"] = state?.peerManagementStations;
            resourceInputs["profileId"] = state?.profileId;
            resourceInputs["proxy"] = state?.proxy;
            resourceInputs["refreshTrigger"] = state?.refreshTrigger;
            resourceInputs["scheduledJobId"] = state?.scheduledJobId;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["totalMirrors"] = state?.totalMirrors;
        } else {
            const args = argsOrState as ManagementStationArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.hostname === undefined && !opts.urn) {
                throw new Error("Missing required property 'hostname'");
            }
            if (args?.mirror === undefined && !opts.urn) {
                throw new Error("Missing required property 'mirror'");
            }
            if (args?.proxy === undefined && !opts.urn) {
                throw new Error("Missing required property 'proxy'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["hostname"] = args?.hostname;
            resourceInputs["isAutoConfigEnabled"] = args?.isAutoConfigEnabled;
            resourceInputs["mirror"] = args?.mirror;
            resourceInputs["proxy"] = args?.proxy;
            resourceInputs["refreshTrigger"] = args?.refreshTrigger;
            resourceInputs["healths"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["managedInstanceId"] = undefined /*out*/;
            resourceInputs["mirrorCapacity"] = undefined /*out*/;
            resourceInputs["mirrorPackageCount"] = undefined /*out*/;
            resourceInputs["mirrorSize"] = undefined /*out*/;
            resourceInputs["mirrorStorageAvailableSize"] = undefined /*out*/;
            resourceInputs["mirrorStorageSize"] = undefined /*out*/;
            resourceInputs["mirrorSyncStatuses"] = undefined /*out*/;
            resourceInputs["mirrorUniquePackageCount"] = undefined /*out*/;
            resourceInputs["overallPercentage"] = undefined /*out*/;
            resourceInputs["overallState"] = undefined /*out*/;
            resourceInputs["peerManagementStations"] = undefined /*out*/;
            resourceInputs["profileId"] = undefined /*out*/;
            resourceInputs["scheduledJobId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["totalMirrors"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementStation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagementStation resources.
 */
export interface ManagementStationState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) User-specified description of the management station. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Overall health information of the management station.
     */
    healths?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagementStationHealth>[]>;
    /**
     * (Updatable) Hostname of the management station.
     */
    hostname?: pulumi.Input<string>;
    /**
     * (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
     */
    isAutoConfigEnabled?: pulumi.Input<boolean>;
    /**
     * The location of the instance that is acting as the management station.
     */
    location?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
     */
    managedInstanceId?: pulumi.Input<string>;
    /**
     * (Updatable) Information used to create the mirror configuration for a management station.
     */
    mirror?: pulumi.Input<inputs.OsManagementHub.ManagementStationMirror>;
    /**
     * A decimal number representing the amount of mirror capacity used by the sync.
     */
    mirrorCapacity?: pulumi.Input<number>;
    /**
     * The total number of all packages within the mirrored software sources.
     */
    mirrorPackageCount?: pulumi.Input<number>;
    /**
     * The total size of all software source mirrors in bytes.
     */
    mirrorSize?: pulumi.Input<string>;
    /**
     * Amount of available mirror storage in bytes.
     */
    mirrorStorageAvailableSize?: pulumi.Input<string>;
    /**
     * Total mirror storage size in bytes.
     */
    mirrorStorageSize?: pulumi.Input<string>;
    /**
     * Status summary of the mirror sync.
     */
    mirrorSyncStatuses?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagementStationMirrorSyncStatus>[]>;
    /**
     * The total number of unique packages within the mirrored software sources on the station. Each package is counted only once, regardless of how many versions it has.
     */
    mirrorUniquePackageCount?: pulumi.Input<number>;
    /**
     * A decimal number representing the progress of the current mirror sync.
     */
    overallPercentage?: pulumi.Input<number>;
    /**
     * Current state of the mirror sync for the management station.
     */
    overallState?: pulumi.Input<string>;
    /**
     * A list of other management stations that are behind the same load balancer within a high availability configuration. Stations are identified as peers if they have the same hostname and compartment.
     */
    peerManagementStations?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ManagementStationPeerManagementStation>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
     */
    profileId?: pulumi.Input<string>;
    /**
     * (Updatable) Information used to create the proxy configuration for a management station.
     */
    proxy?: pulumi.Input<inputs.OsManagementHub.ManagementStationProxy>;
    /**
     * (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    refreshTrigger?: pulumi.Input<number>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
     */
    scheduledJobId?: pulumi.Input<string>;
    /**
     * The current state of the management station.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The number of software sources that the station is mirroring.
     */
    totalMirrors?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ManagementStation resource.
 */
export interface ManagementStationArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) User-specified description of the management station. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the management station. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Hostname of the management station.
     */
    hostname: pulumi.Input<string>;
    /**
     * (Updatable) When enabled, the station setup script automatically runs to configure the firewall and SELinux settings on the station.
     */
    isAutoConfigEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Information used to create the mirror configuration for a management station.
     */
    mirror: pulumi.Input<inputs.OsManagementHub.ManagementStationMirror>;
    /**
     * (Updatable) Information used to create the proxy configuration for a management station.
     */
    proxy: pulumi.Input<inputs.OsManagementHub.ManagementStationProxy>;
    /**
     * (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    refreshTrigger?: pulumi.Input<number>;
}
