// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Scheduled Job resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Creates a new scheduled job.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testScheduledJob = new oci.osmanagementhub.ScheduledJob("test_scheduled_job", {
 *     compartmentId: compartmentId,
 *     operations: [{
 *         operationType: scheduledJobOperationsOperationType,
 *         manageModuleStreamsDetails: {
 *             disables: [{
 *                 moduleName: scheduledJobOperationsManageModuleStreamsDetailsDisableModuleName,
 *                 streamName: testStream.name,
 *                 softwareSourceId: testSoftwareSource.id,
 *             }],
 *             enables: [{
 *                 moduleName: scheduledJobOperationsManageModuleStreamsDetailsEnableModuleName,
 *                 streamName: testStream.name,
 *                 softwareSourceId: testSoftwareSource.id,
 *             }],
 *             installs: [{
 *                 moduleName: scheduledJobOperationsManageModuleStreamsDetailsInstallModuleName,
 *                 profileName: testProfile.name,
 *                 streamName: testStream.name,
 *                 softwareSourceId: testSoftwareSource.id,
 *             }],
 *             removes: [{
 *                 moduleName: scheduledJobOperationsManageModuleStreamsDetailsRemoveModuleName,
 *                 profileName: testProfile.name,
 *                 streamName: testStream.name,
 *                 softwareSourceId: testSoftwareSource.id,
 *             }],
 *         },
 *         packageNames: scheduledJobOperationsPackageNames,
 *         softwareSourceIds: scheduledJobOperationsSoftwareSourceIds,
 *         switchModuleStreamsDetails: {
 *             moduleName: scheduledJobOperationsSwitchModuleStreamsDetailsModuleName,
 *             streamName: testStream.name,
 *             softwareSourceId: testSoftwareSource.id,
 *         },
 *         windowsUpdateNames: scheduledJobOperationsWindowsUpdateNames,
 *     }],
 *     scheduleType: scheduledJobScheduleType,
 *     timeNextExecution: scheduledJobTimeNextExecution,
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     description: scheduledJobDescription,
 *     displayName: scheduledJobDisplayName,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     isManagedByAutonomousLinux: scheduledJobIsManagedByAutonomousLinux,
 *     isSubcompartmentIncluded: scheduledJobIsSubcompartmentIncluded,
 *     lifecycleStageIds: scheduledJobLifecycleStageIds,
 *     locations: scheduledJobLocations,
 *     managedCompartmentIds: scheduledJobManagedCompartmentIds,
 *     managedInstanceGroupIds: scheduledJobManagedInstanceGroupIds,
 *     managedInstanceIds: scheduledJobManagedInstanceIds,
 *     recurringRule: scheduledJobRecurringRule,
 *     retryIntervals: scheduledJobRetryIntervals,
 * });
 * ```
 *
 * ## Import
 *
 * ScheduledJobs can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/scheduledJob:ScheduledJob test_scheduled_job "id"
 * ```
 */
export class ScheduledJob extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduledJobState, opts?: pulumi.CustomResourceOptions): ScheduledJob {
        return new ScheduledJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/scheduledJob:ScheduledJob';

    /**
     * Returns true if the given object is an instance of ScheduledJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScheduledJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduledJob.__pulumiType;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Indicates whether this scheduled job is managed by the Autonomous Linux service.
     */
    public readonly isManagedByAutonomousLinux!: pulumi.Output<boolean>;
    /**
     * Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
     */
    public /*out*/ readonly isRestricted!: pulumi.Output<boolean>;
    /**
     * Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
     */
    public readonly isSubcompartmentIncluded!: pulumi.Output<boolean>;
    /**
     * The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
     */
    public readonly lifecycleStageIds!: pulumi.Output<string[]>;
    /**
     * The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
     */
    public readonly locations!: pulumi.Output<string[]>;
    /**
     * The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
     */
    public readonly managedCompartmentIds!: pulumi.Output<string[]>;
    /**
     * The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
     */
    public readonly managedInstanceGroupIds!: pulumi.Output<string[]>;
    /**
     * The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
     */
    public readonly managedInstanceIds!: pulumi.Output<string[]>;
    /**
     * (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
     * * UPDATE_PACKAGES
     * * UPDATE_ALL
     * * UPDATE_SECURITY
     * * UPDATE_BUGFIX
     * * UPDATE_ENHANCEMENT
     * * UPDATE_OTHER
     * * UPDATE_KSPLICE_USERSPACE
     * * UPDATE_KSPLICE_KERNEL
     */
    public readonly operations!: pulumi.Output<outputs.OsManagementHub.ScheduledJobOperation[]>;
    /**
     * (Updatable) The frequency schedule for a recurring scheduled job.
     */
    public readonly recurringRule!: pulumi.Output<string>;
    /**
     * (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
     */
    public readonly retryIntervals!: pulumi.Output<number[]>;
    /**
     * (Updatable) The type of scheduling frequency for the scheduled job.
     */
    public readonly scheduleType!: pulumi.Output<string>;
    /**
     * The current state of the scheduled job.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    public /*out*/ readonly timeLastExecution!: pulumi.Output<string>;
    /**
     * (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly timeNextExecution!: pulumi.Output<string>;
    /**
     * The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
     */
    public /*out*/ readonly workRequestIds!: pulumi.Output<string[]>;

    /**
     * Create a ScheduledJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduledJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduledJobArgs | ScheduledJobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScheduledJobState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isManagedByAutonomousLinux"] = state ? state.isManagedByAutonomousLinux : undefined;
            resourceInputs["isRestricted"] = state ? state.isRestricted : undefined;
            resourceInputs["isSubcompartmentIncluded"] = state ? state.isSubcompartmentIncluded : undefined;
            resourceInputs["lifecycleStageIds"] = state ? state.lifecycleStageIds : undefined;
            resourceInputs["locations"] = state ? state.locations : undefined;
            resourceInputs["managedCompartmentIds"] = state ? state.managedCompartmentIds : undefined;
            resourceInputs["managedInstanceGroupIds"] = state ? state.managedInstanceGroupIds : undefined;
            resourceInputs["managedInstanceIds"] = state ? state.managedInstanceIds : undefined;
            resourceInputs["operations"] = state ? state.operations : undefined;
            resourceInputs["recurringRule"] = state ? state.recurringRule : undefined;
            resourceInputs["retryIntervals"] = state ? state.retryIntervals : undefined;
            resourceInputs["scheduleType"] = state ? state.scheduleType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeLastExecution"] = state ? state.timeLastExecution : undefined;
            resourceInputs["timeNextExecution"] = state ? state.timeNextExecution : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["workRequestIds"] = state ? state.workRequestIds : undefined;
        } else {
            const args = argsOrState as ScheduledJobArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.operations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'operations'");
            }
            if ((!args || args.scheduleType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleType'");
            }
            if ((!args || args.timeNextExecution === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeNextExecution'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isManagedByAutonomousLinux"] = args ? args.isManagedByAutonomousLinux : undefined;
            resourceInputs["isSubcompartmentIncluded"] = args ? args.isSubcompartmentIncluded : undefined;
            resourceInputs["lifecycleStageIds"] = args ? args.lifecycleStageIds : undefined;
            resourceInputs["locations"] = args ? args.locations : undefined;
            resourceInputs["managedCompartmentIds"] = args ? args.managedCompartmentIds : undefined;
            resourceInputs["managedInstanceGroupIds"] = args ? args.managedInstanceGroupIds : undefined;
            resourceInputs["managedInstanceIds"] = args ? args.managedInstanceIds : undefined;
            resourceInputs["operations"] = args ? args.operations : undefined;
            resourceInputs["recurringRule"] = args ? args.recurringRule : undefined;
            resourceInputs["retryIntervals"] = args ? args.retryIntervals : undefined;
            resourceInputs["scheduleType"] = args ? args.scheduleType : undefined;
            resourceInputs["timeNextExecution"] = args ? args.timeNextExecution : undefined;
            resourceInputs["isRestricted"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastExecution"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["workRequestIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScheduledJob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScheduledJob resources.
 */
export interface ScheduledJobState {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Indicates whether this scheduled job is managed by the Autonomous Linux service.
     */
    isManagedByAutonomousLinux?: pulumi.Input<boolean>;
    /**
     * Indicates if the schedule job has restricted update and deletion capabilities. For restricted scheduled jobs,  you can update only the timeNextExecution, recurringRule, and tags.
     */
    isRestricted?: pulumi.Input<boolean>;
    /**
     * Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
     */
    isSubcompartmentIncluded?: pulumi.Input<boolean>;
    /**
     * The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
     */
    lifecycleStageIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
     */
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
     */
    managedCompartmentIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
     */
    managedInstanceGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
     */
    managedInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
     * * UPDATE_PACKAGES
     * * UPDATE_ALL
     * * UPDATE_SECURITY
     * * UPDATE_BUGFIX
     * * UPDATE_ENHANCEMENT
     * * UPDATE_OTHER
     * * UPDATE_KSPLICE_USERSPACE
     * * UPDATE_KSPLICE_KERNEL
     */
    operations?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ScheduledJobOperation>[]>;
    /**
     * (Updatable) The frequency schedule for a recurring scheduled job.
     */
    recurringRule?: pulumi.Input<string>;
    /**
     * (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
     */
    retryIntervals?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * (Updatable) The type of scheduling frequency for the scheduled job.
     */
    scheduleType?: pulumi.Input<string>;
    /**
     * The current state of the scheduled job.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The time this scheduled job was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time of the last execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    timeLastExecution?: pulumi.Input<string>;
    /**
     * (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeNextExecution?: pulumi.Input<string>;
    /**
     * The time this scheduled job was updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The list of work request [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this scheduled job.
     */
    workRequestIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ScheduledJob resource.
 */
export interface ScheduledJobArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) User-specified description of the scheduled job. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Indicates whether this scheduled job is managed by the Autonomous Linux service.
     */
    isManagedByAutonomousLinux?: pulumi.Input<boolean>;
    /**
     * Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies  the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
     */
    isSubcompartmentIncluded?: pulumi.Input<boolean>;
    /**
     * The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,  or managedInstanceGroupIds, or managedCompartmentIds.
     */
    lifecycleStageIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
     */
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set  isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must  supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
     */
    managedCompartmentIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds.
     */
    managedInstanceGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on.  A scheduled job can only operate on one type of target, therefore you must supply either this or  managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
     */
    managedInstanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The list of operations this scheduled job needs to perform. A scheduled job supports only one operation type, unless it is one of the following:
     * * UPDATE_PACKAGES
     * * UPDATE_ALL
     * * UPDATE_SECURITY
     * * UPDATE_BUGFIX
     * * UPDATE_ENHANCEMENT
     * * UPDATE_OTHER
     * * UPDATE_KSPLICE_USERSPACE
     * * UPDATE_KSPLICE_KERNEL
     */
    operations: pulumi.Input<pulumi.Input<inputs.OsManagementHub.ScheduledJobOperation>[]>;
    /**
     * (Updatable) The frequency schedule for a recurring scheduled job.
     */
    recurringRule?: pulumi.Input<string>;
    /**
     * (Updatable) The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically  retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service  waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
     */
    retryIntervals?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * (Updatable) The type of scheduling frequency for the scheduled job.
     */
    scheduleType: pulumi.Input<string>;
    /**
     * (Updatable) The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    timeNextExecution: pulumi.Input<string>;
}
