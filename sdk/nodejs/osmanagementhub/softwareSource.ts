// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Software Source resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Creates a new versioned or custom software source.
 *
 * ## Import
 *
 * SoftwareSources can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/softwareSource:SoftwareSource test_software_source "id"
 * ```
 */
export class SoftwareSource extends pulumi.CustomResource {
    /**
     * Get an existing SoftwareSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SoftwareSourceState, opts?: pulumi.CustomResourceOptions): SoftwareSource {
        return new SoftwareSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/softwareSource:SoftwareSource';

    /**
     * Returns true if the given object is an instance of SoftwareSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SoftwareSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SoftwareSource.__pulumiType;
    }

    /**
     * The architecture type supported by the software source.
     */
    public /*out*/ readonly archType!: pulumi.Output<string>;
    /**
     * Availability of the software source (for non-OCI environments).
     */
    public /*out*/ readonly availability!: pulumi.Output<string>;
    /**
     * Availability of the software source (for Oracle Cloud Infrastructure environments).
     */
    public /*out*/ readonly availabilityAtOci!: pulumi.Output<string>;
    /**
     * The yum repository checksum type used by this software source.
     */
    public /*out*/ readonly checksumType!: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Provides the information used to apply filters to a vendor software source to create or update a custom software source.
     */
    public readonly customSoftwareSourceFilter!: pulumi.Output<outputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) User-specified description for the software source. Avoid entering confidential information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) User-friendly name for the software source. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * Fingerprint of the GPG key for this software source.
     */
    public /*out*/ readonly gpgKeyFingerprint!: pulumi.Output<string>;
    /**
     * ID of the GPG key for this software source.
     */
    public /*out*/ readonly gpgKeyId!: pulumi.Output<string>;
    /**
     * URL of the GPG key for this software source.
     */
    public /*out*/ readonly gpgKeyUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates whether the service should automatically resolve package dependencies when including specific packages in the software source.
     */
    public readonly isAutoResolveDependencies!: pulumi.Output<boolean>;
    /**
     * (Updatable) Indicates whether the service should automatically update the custom software source to use the latest package versions available. The service reviews packages levels once a day.
     */
    public readonly isAutomaticallyUpdated!: pulumi.Output<boolean>;
    /**
     * Indicates whether the service should create the software source from a list of packages provided by the user.
     */
    public readonly isCreatedFromPackageList!: pulumi.Output<boolean>;
    /**
     * (Updatable) Indicates whether the software source will include only the latest versions of content from vendor software sources, while accounting for other constraints set in the custom or versioned custom software source (such as a package list or filters).
     * * For a module filter that does not specify a stream, this will include all available streams, and within each stream only the latest version of packages.
     * * For a module filter that does specify a stream, this will include only the latest version of packages for the specified stream.
     * * For a package filter that does not specify a version, this will include only the latest available version of the package.
     * * For a package filter that does specify a version, this will include only the specified version of the package (the isLatestContentOnly attribute is ignored).
     * * For a package list, this will include only the specified version of packages and modules in the list (the isLatestContentOnly attribute is ignored).
     */
    public readonly isLatestContentOnly!: pulumi.Output<boolean>;
    /**
     * Indicates whether the software source is required for the Autonomous Linux service.
     */
    public /*out*/ readonly isMandatoryForAutonomousLinux!: pulumi.Output<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vendor software source in the root compartment that is being replicated.
     */
    public readonly originSoftwareSourceId!: pulumi.Output<string>;
    /**
     * The OS family the software source belongs to.
     */
    public /*out*/ readonly osFamily!: pulumi.Output<string>;
    /**
     * Number of packages the software source contains.
     */
    public /*out*/ readonly packageCount!: pulumi.Output<string>;
    /**
     * A property used for compatibility only. It doesn't provide a complete list of packages. See [AddPackagesToSoftwareSourceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/AddPackagesToSoftwareSourceDetails) for providing the list of packages used to create the software source when isCreatedFromPackageList is set to true.
     */
    public readonly packages!: pulumi.Output<string[]>;
    /**
     * The repository ID for the software source.
     */
    public /*out*/ readonly repoId!: pulumi.Output<string>;
    /**
     * The size of the software source in gigabytes (GB).
     */
    public /*out*/ readonly size!: pulumi.Output<number>;
    /**
     * (Updatable) Type of software source.
     */
    public readonly softwareSourceType!: pulumi.Output<string>;
    /**
     * The version to assign to this custom software source.
     */
    public readonly softwareSourceVersion!: pulumi.Output<string>;
    /**
     * The current state of the software source.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the software source was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * URL for the repository. For vendor software sources, this is the URL to the regional yum server. For custom software sources, this is 'custom/<repoId>'.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;
    /**
     * Name of the vendor providing the software source.
     */
    public /*out*/ readonly vendorName!: pulumi.Output<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    public readonly vendorSoftwareSources!: pulumi.Output<outputs.OsManagementHub.SoftwareSourceVendorSoftwareSource[]>;

    /**
     * Create a SoftwareSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SoftwareSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SoftwareSourceArgs | SoftwareSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SoftwareSourceState | undefined;
            resourceInputs["archType"] = state ? state.archType : undefined;
            resourceInputs["availability"] = state ? state.availability : undefined;
            resourceInputs["availabilityAtOci"] = state ? state.availabilityAtOci : undefined;
            resourceInputs["checksumType"] = state ? state.checksumType : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["customSoftwareSourceFilter"] = state ? state.customSoftwareSourceFilter : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["gpgKeyFingerprint"] = state ? state.gpgKeyFingerprint : undefined;
            resourceInputs["gpgKeyId"] = state ? state.gpgKeyId : undefined;
            resourceInputs["gpgKeyUrl"] = state ? state.gpgKeyUrl : undefined;
            resourceInputs["isAutoResolveDependencies"] = state ? state.isAutoResolveDependencies : undefined;
            resourceInputs["isAutomaticallyUpdated"] = state ? state.isAutomaticallyUpdated : undefined;
            resourceInputs["isCreatedFromPackageList"] = state ? state.isCreatedFromPackageList : undefined;
            resourceInputs["isLatestContentOnly"] = state ? state.isLatestContentOnly : undefined;
            resourceInputs["isMandatoryForAutonomousLinux"] = state ? state.isMandatoryForAutonomousLinux : undefined;
            resourceInputs["originSoftwareSourceId"] = state ? state.originSoftwareSourceId : undefined;
            resourceInputs["osFamily"] = state ? state.osFamily : undefined;
            resourceInputs["packageCount"] = state ? state.packageCount : undefined;
            resourceInputs["packages"] = state ? state.packages : undefined;
            resourceInputs["repoId"] = state ? state.repoId : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["softwareSourceType"] = state ? state.softwareSourceType : undefined;
            resourceInputs["softwareSourceVersion"] = state ? state.softwareSourceVersion : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["vendorName"] = state ? state.vendorName : undefined;
            resourceInputs["vendorSoftwareSources"] = state ? state.vendorSoftwareSources : undefined;
        } else {
            const args = argsOrState as SoftwareSourceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.softwareSourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'softwareSourceType'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["customSoftwareSourceFilter"] = args ? args.customSoftwareSourceFilter : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isAutoResolveDependencies"] = args ? args.isAutoResolveDependencies : undefined;
            resourceInputs["isAutomaticallyUpdated"] = args ? args.isAutomaticallyUpdated : undefined;
            resourceInputs["isCreatedFromPackageList"] = args ? args.isCreatedFromPackageList : undefined;
            resourceInputs["isLatestContentOnly"] = args ? args.isLatestContentOnly : undefined;
            resourceInputs["originSoftwareSourceId"] = args ? args.originSoftwareSourceId : undefined;
            resourceInputs["packages"] = args ? args.packages : undefined;
            resourceInputs["softwareSourceType"] = args ? args.softwareSourceType : undefined;
            resourceInputs["softwareSourceVersion"] = args ? args.softwareSourceVersion : undefined;
            resourceInputs["vendorSoftwareSources"] = args ? args.vendorSoftwareSources : undefined;
            resourceInputs["archType"] = undefined /*out*/;
            resourceInputs["availability"] = undefined /*out*/;
            resourceInputs["availabilityAtOci"] = undefined /*out*/;
            resourceInputs["checksumType"] = undefined /*out*/;
            resourceInputs["gpgKeyFingerprint"] = undefined /*out*/;
            resourceInputs["gpgKeyId"] = undefined /*out*/;
            resourceInputs["gpgKeyUrl"] = undefined /*out*/;
            resourceInputs["isMandatoryForAutonomousLinux"] = undefined /*out*/;
            resourceInputs["osFamily"] = undefined /*out*/;
            resourceInputs["packageCount"] = undefined /*out*/;
            resourceInputs["repoId"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
            resourceInputs["vendorName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SoftwareSource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SoftwareSource resources.
 */
export interface SoftwareSourceState {
    /**
     * The architecture type supported by the software source.
     */
    archType?: pulumi.Input<string>;
    /**
     * Availability of the software source (for non-OCI environments).
     */
    availability?: pulumi.Input<string>;
    /**
     * Availability of the software source (for Oracle Cloud Infrastructure environments).
     */
    availabilityAtOci?: pulumi.Input<string>;
    /**
     * The yum repository checksum type used by this software source.
     */
    checksumType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Provides the information used to apply filters to a vendor software source to create or update a custom software source.
     */
    customSoftwareSourceFilter?: pulumi.Input<inputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) User-specified description for the software source. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the software source. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Fingerprint of the GPG key for this software source.
     */
    gpgKeyFingerprint?: pulumi.Input<string>;
    /**
     * ID of the GPG key for this software source.
     */
    gpgKeyId?: pulumi.Input<string>;
    /**
     * URL of the GPG key for this software source.
     */
    gpgKeyUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether the service should automatically resolve package dependencies when including specific packages in the software source.
     */
    isAutoResolveDependencies?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether the service should automatically update the custom software source to use the latest package versions available. The service reviews packages levels once a day.
     */
    isAutomaticallyUpdated?: pulumi.Input<boolean>;
    /**
     * Indicates whether the service should create the software source from a list of packages provided by the user.
     */
    isCreatedFromPackageList?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether the software source will include only the latest versions of content from vendor software sources, while accounting for other constraints set in the custom or versioned custom software source (such as a package list or filters).
     * * For a module filter that does not specify a stream, this will include all available streams, and within each stream only the latest version of packages.
     * * For a module filter that does specify a stream, this will include only the latest version of packages for the specified stream.
     * * For a package filter that does not specify a version, this will include only the latest available version of the package.
     * * For a package filter that does specify a version, this will include only the specified version of the package (the isLatestContentOnly attribute is ignored).
     * * For a package list, this will include only the specified version of packages and modules in the list (the isLatestContentOnly attribute is ignored).
     */
    isLatestContentOnly?: pulumi.Input<boolean>;
    /**
     * Indicates whether the software source is required for the Autonomous Linux service.
     */
    isMandatoryForAutonomousLinux?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vendor software source in the root compartment that is being replicated.
     */
    originSoftwareSourceId?: pulumi.Input<string>;
    /**
     * The OS family the software source belongs to.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * Number of packages the software source contains.
     */
    packageCount?: pulumi.Input<string>;
    /**
     * A property used for compatibility only. It doesn't provide a complete list of packages. See [AddPackagesToSoftwareSourceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/AddPackagesToSoftwareSourceDetails) for providing the list of packages used to create the software source when isCreatedFromPackageList is set to true.
     */
    packages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The repository ID for the software source.
     */
    repoId?: pulumi.Input<string>;
    /**
     * The size of the software source in gigabytes (GB).
     */
    size?: pulumi.Input<number>;
    /**
     * (Updatable) Type of software source.
     */
    softwareSourceType?: pulumi.Input<string>;
    /**
     * The version to assign to this custom software source.
     */
    softwareSourceVersion?: pulumi.Input<string>;
    /**
     * The current state of the software source.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the software source was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * URL for the repository. For vendor software sources, this is the URL to the regional yum server. For custom software sources, this is 'custom/<repoId>'.
     */
    url?: pulumi.Input<string>;
    /**
     * Name of the vendor providing the software source.
     */
    vendorName?: pulumi.Input<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    vendorSoftwareSources?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.SoftwareSourceVendorSoftwareSource>[]>;
}

/**
 * The set of arguments for constructing a SoftwareSource resource.
 */
export interface SoftwareSourceArgs {
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Provides the information used to apply filters to a vendor software source to create or update a custom software source.
     */
    customSoftwareSourceFilter?: pulumi.Input<inputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) User-specified description for the software source. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the software source. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Indicates whether the service should automatically resolve package dependencies when including specific packages in the software source.
     */
    isAutoResolveDependencies?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether the service should automatically update the custom software source to use the latest package versions available. The service reviews packages levels once a day.
     */
    isAutomaticallyUpdated?: pulumi.Input<boolean>;
    /**
     * Indicates whether the service should create the software source from a list of packages provided by the user.
     */
    isCreatedFromPackageList?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether the software source will include only the latest versions of content from vendor software sources, while accounting for other constraints set in the custom or versioned custom software source (such as a package list or filters).
     * * For a module filter that does not specify a stream, this will include all available streams, and within each stream only the latest version of packages.
     * * For a module filter that does specify a stream, this will include only the latest version of packages for the specified stream.
     * * For a package filter that does not specify a version, this will include only the latest available version of the package.
     * * For a package filter that does specify a version, this will include only the specified version of the package (the isLatestContentOnly attribute is ignored).
     * * For a package list, this will include only the specified version of packages and modules in the list (the isLatestContentOnly attribute is ignored).
     */
    isLatestContentOnly?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vendor software source in the root compartment that is being replicated.
     */
    originSoftwareSourceId?: pulumi.Input<string>;
    /**
     * A property used for compatibility only. It doesn't provide a complete list of packages. See [AddPackagesToSoftwareSourceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/AddPackagesToSoftwareSourceDetails) for providing the list of packages used to create the software source when isCreatedFromPackageList is set to true.
     */
    packages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) Type of software source.
     */
    softwareSourceType: pulumi.Input<string>;
    /**
     * The version to assign to this custom software source.
     */
    softwareSourceVersion?: pulumi.Input<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    vendorSoftwareSources?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.SoftwareSourceVendorSoftwareSource>[]>;
}
