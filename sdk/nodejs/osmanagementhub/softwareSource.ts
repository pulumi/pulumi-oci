// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Software Source resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Creates a new software source.
 *
 * ## Import
 *
 * SoftwareSources can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/softwareSource:SoftwareSource test_software_source "id"
 * ```
 */
export class SoftwareSource extends pulumi.CustomResource {
    /**
     * Get an existing SoftwareSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SoftwareSourceState, opts?: pulumi.CustomResourceOptions): SoftwareSource {
        return new SoftwareSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/softwareSource:SoftwareSource';

    /**
     * Returns true if the given object is an instance of SoftwareSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SoftwareSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SoftwareSource.__pulumiType;
    }

    /**
     * (Updatable) Advanced repository options for the software source
     */
    declare public readonly advancedRepoOptions: pulumi.Output<string>;
    /**
     * The architecture type supported by the third-party software source.
     */
    declare public readonly archType: pulumi.Output<string>;
    /**
     * Availability of the software source (for non-OCI environments).
     */
    declare public /*out*/ readonly availability: pulumi.Output<string>;
    /**
     * Availability of the software source (for Oracle Cloud Infrastructure environments).
     */
    declare public /*out*/ readonly availabilityAtOci: pulumi.Output<string>;
    /**
     * The yum repository checksum type used by this software source.
     */
    declare public /*out*/ readonly checksumType: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Provides the information used to apply filters to a vendor software source to create or update a custom software source.
     */
    declare public readonly customSoftwareSourceFilter: pulumi.Output<outputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) User-specified description for the software source. Avoid entering confidential information.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) User-friendly name for the software source. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Fingerprint of the GPG key for this software source.
     */
    declare public /*out*/ readonly gpgKeyFingerprint: pulumi.Output<string>;
    /**
     * ID of the GPG key for this software source.
     */
    declare public /*out*/ readonly gpgKeyId: pulumi.Output<string>;
    /**
     * (Updatable) URI of the GPG key for this software source.
     */
    declare public readonly gpgKeyUrl: pulumi.Output<string>;
    /**
     * (Updatable) Indicates whether the service should automatically resolve package dependencies when including specific packages in the software source.
     */
    declare public readonly isAutoResolveDependencies: pulumi.Output<boolean>;
    /**
     * (Updatable) Indicates whether the service should automatically update the custom software source to use the latest package versions available. The service reviews packages levels once a day.
     */
    declare public readonly isAutomaticallyUpdated: pulumi.Output<boolean>;
    /**
     * Indicates whether the service should create the software source from a list of packages provided by the user.
     */
    declare public readonly isCreatedFromPackageList: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether signature verification should be done for the software source.
     */
    declare public readonly isGpgCheckEnabled: pulumi.Output<boolean>;
    /**
     * (Updatable) Indicates whether the software source will include only the latest versions of content from vendor software sources, while accounting for other constraints set in the custom or versioned custom software source (such as a package list or filters).
     * * For a module filter that does not specify a stream, this will include all available streams, and within each stream only the latest version of packages.
     * * For a module filter that does specify a stream, this will include only the latest version of packages for the specified stream.
     * * For a package filter that does not specify a version, this will include only the latest available version of the package.
     * * For a package filter that does specify a version, this will include only the specified version of the package (the isLatestContentOnly attribute is ignored).
     * * For a package list, this will include only the specified version of packages and modules in the list (the isLatestContentOnly attribute is ignored).
     */
    declare public readonly isLatestContentOnly: pulumi.Output<boolean>;
    /**
     * Indicates whether the software source is required for the Autonomous Linux service.
     */
    declare public /*out*/ readonly isMandatoryForAutonomousLinux: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether this software source can be synced to a management station
     */
    declare public readonly isMirrorSyncAllowed: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether SSL validation needs to be turned on
     */
    declare public readonly isSslVerifyEnabled: pulumi.Output<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vendor software source in the root compartment that is being replicated.
     */
    declare public readonly originSoftwareSourceId: pulumi.Output<string>;
    /**
     * The OS family for the third-party software source.
     */
    declare public readonly osFamily: pulumi.Output<string>;
    /**
     * Number of packages the software source contains.
     */
    declare public /*out*/ readonly packageCount: pulumi.Output<string>;
    /**
     * A property used for compatibility only. It doesn't provide a complete list of packages. See [AddPackagesToSoftwareSourceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/AddPackagesToSoftwareSourceDetails) for providing the list of packages used to create the software source when isCreatedFromPackageList is set to true.
     */
    declare public readonly packages: pulumi.Output<string[]>;
    /**
     * The repository ID for the software source.
     */
    declare public /*out*/ readonly repoId: pulumi.Output<string>;
    /**
     * The size of the software source in bytes (B).
     */
    declare public /*out*/ readonly size: pulumi.Output<number>;
    /**
     * The creation type of a software source.
     */
    declare public readonly softwareSourceSubType: pulumi.Output<string>;
    /**
     * (Updatable) Type of software source.
     */
    declare public readonly softwareSourceType: pulumi.Output<string>;
    /**
     * The version to assign to this custom software source.
     */
    declare public readonly softwareSourceVersion: pulumi.Output<string>;
    /**
     * The current state of the software source.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the software source was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the metadata for this software source was last updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    declare public /*out*/ readonly timeMetadataUpdated: pulumi.Output<string>;
    /**
     * (Updatable) URL for the third-party software source.
     */
    declare public readonly url: pulumi.Output<string>;
    /**
     * Name of the vendor providing the software source.
     */
    declare public /*out*/ readonly vendorName: pulumi.Output<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    declare public readonly vendorSoftwareSources: pulumi.Output<outputs.OsManagementHub.SoftwareSourceVendorSoftwareSource[]>;

    /**
     * Create a SoftwareSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SoftwareSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SoftwareSourceArgs | SoftwareSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SoftwareSourceState | undefined;
            resourceInputs["advancedRepoOptions"] = state?.advancedRepoOptions;
            resourceInputs["archType"] = state?.archType;
            resourceInputs["availability"] = state?.availability;
            resourceInputs["availabilityAtOci"] = state?.availabilityAtOci;
            resourceInputs["checksumType"] = state?.checksumType;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["customSoftwareSourceFilter"] = state?.customSoftwareSourceFilter;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["gpgKeyFingerprint"] = state?.gpgKeyFingerprint;
            resourceInputs["gpgKeyId"] = state?.gpgKeyId;
            resourceInputs["gpgKeyUrl"] = state?.gpgKeyUrl;
            resourceInputs["isAutoResolveDependencies"] = state?.isAutoResolveDependencies;
            resourceInputs["isAutomaticallyUpdated"] = state?.isAutomaticallyUpdated;
            resourceInputs["isCreatedFromPackageList"] = state?.isCreatedFromPackageList;
            resourceInputs["isGpgCheckEnabled"] = state?.isGpgCheckEnabled;
            resourceInputs["isLatestContentOnly"] = state?.isLatestContentOnly;
            resourceInputs["isMandatoryForAutonomousLinux"] = state?.isMandatoryForAutonomousLinux;
            resourceInputs["isMirrorSyncAllowed"] = state?.isMirrorSyncAllowed;
            resourceInputs["isSslVerifyEnabled"] = state?.isSslVerifyEnabled;
            resourceInputs["originSoftwareSourceId"] = state?.originSoftwareSourceId;
            resourceInputs["osFamily"] = state?.osFamily;
            resourceInputs["packageCount"] = state?.packageCount;
            resourceInputs["packages"] = state?.packages;
            resourceInputs["repoId"] = state?.repoId;
            resourceInputs["size"] = state?.size;
            resourceInputs["softwareSourceSubType"] = state?.softwareSourceSubType;
            resourceInputs["softwareSourceType"] = state?.softwareSourceType;
            resourceInputs["softwareSourceVersion"] = state?.softwareSourceVersion;
            resourceInputs["state"] = state?.state;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeMetadataUpdated"] = state?.timeMetadataUpdated;
            resourceInputs["url"] = state?.url;
            resourceInputs["vendorName"] = state?.vendorName;
            resourceInputs["vendorSoftwareSources"] = state?.vendorSoftwareSources;
        } else {
            const args = argsOrState as SoftwareSourceArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.softwareSourceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'softwareSourceType'");
            }
            resourceInputs["advancedRepoOptions"] = args?.advancedRepoOptions;
            resourceInputs["archType"] = args?.archType;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["customSoftwareSourceFilter"] = args?.customSoftwareSourceFilter;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["gpgKeyUrl"] = args?.gpgKeyUrl;
            resourceInputs["isAutoResolveDependencies"] = args?.isAutoResolveDependencies;
            resourceInputs["isAutomaticallyUpdated"] = args?.isAutomaticallyUpdated;
            resourceInputs["isCreatedFromPackageList"] = args?.isCreatedFromPackageList;
            resourceInputs["isGpgCheckEnabled"] = args?.isGpgCheckEnabled;
            resourceInputs["isLatestContentOnly"] = args?.isLatestContentOnly;
            resourceInputs["isMirrorSyncAllowed"] = args?.isMirrorSyncAllowed;
            resourceInputs["isSslVerifyEnabled"] = args?.isSslVerifyEnabled;
            resourceInputs["originSoftwareSourceId"] = args?.originSoftwareSourceId;
            resourceInputs["osFamily"] = args?.osFamily;
            resourceInputs["packages"] = args?.packages;
            resourceInputs["softwareSourceSubType"] = args?.softwareSourceSubType;
            resourceInputs["softwareSourceType"] = args?.softwareSourceType;
            resourceInputs["softwareSourceVersion"] = args?.softwareSourceVersion;
            resourceInputs["url"] = args?.url;
            resourceInputs["vendorSoftwareSources"] = args?.vendorSoftwareSources;
            resourceInputs["availability"] = undefined /*out*/;
            resourceInputs["availabilityAtOci"] = undefined /*out*/;
            resourceInputs["checksumType"] = undefined /*out*/;
            resourceInputs["gpgKeyFingerprint"] = undefined /*out*/;
            resourceInputs["gpgKeyId"] = undefined /*out*/;
            resourceInputs["isMandatoryForAutonomousLinux"] = undefined /*out*/;
            resourceInputs["packageCount"] = undefined /*out*/;
            resourceInputs["repoId"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeMetadataUpdated"] = undefined /*out*/;
            resourceInputs["vendorName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SoftwareSource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SoftwareSource resources.
 */
export interface SoftwareSourceState {
    /**
     * (Updatable) Advanced repository options for the software source
     */
    advancedRepoOptions?: pulumi.Input<string>;
    /**
     * The architecture type supported by the third-party software source.
     */
    archType?: pulumi.Input<string>;
    /**
     * Availability of the software source (for non-OCI environments).
     */
    availability?: pulumi.Input<string>;
    /**
     * Availability of the software source (for Oracle Cloud Infrastructure environments).
     */
    availabilityAtOci?: pulumi.Input<string>;
    /**
     * The yum repository checksum type used by this software source.
     */
    checksumType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Provides the information used to apply filters to a vendor software source to create or update a custom software source.
     */
    customSoftwareSourceFilter?: pulumi.Input<inputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) User-specified description for the software source. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the software source. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Fingerprint of the GPG key for this software source.
     */
    gpgKeyFingerprint?: pulumi.Input<string>;
    /**
     * ID of the GPG key for this software source.
     */
    gpgKeyId?: pulumi.Input<string>;
    /**
     * (Updatable) URI of the GPG key for this software source.
     */
    gpgKeyUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether the service should automatically resolve package dependencies when including specific packages in the software source.
     */
    isAutoResolveDependencies?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether the service should automatically update the custom software source to use the latest package versions available. The service reviews packages levels once a day.
     */
    isAutomaticallyUpdated?: pulumi.Input<boolean>;
    /**
     * Indicates whether the service should create the software source from a list of packages provided by the user.
     */
    isCreatedFromPackageList?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether signature verification should be done for the software source.
     */
    isGpgCheckEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether the software source will include only the latest versions of content from vendor software sources, while accounting for other constraints set in the custom or versioned custom software source (such as a package list or filters).
     * * For a module filter that does not specify a stream, this will include all available streams, and within each stream only the latest version of packages.
     * * For a module filter that does specify a stream, this will include only the latest version of packages for the specified stream.
     * * For a package filter that does not specify a version, this will include only the latest available version of the package.
     * * For a package filter that does specify a version, this will include only the specified version of the package (the isLatestContentOnly attribute is ignored).
     * * For a package list, this will include only the specified version of packages and modules in the list (the isLatestContentOnly attribute is ignored).
     */
    isLatestContentOnly?: pulumi.Input<boolean>;
    /**
     * Indicates whether the software source is required for the Autonomous Linux service.
     */
    isMandatoryForAutonomousLinux?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether this software source can be synced to a management station
     */
    isMirrorSyncAllowed?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether SSL validation needs to be turned on
     */
    isSslVerifyEnabled?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vendor software source in the root compartment that is being replicated.
     */
    originSoftwareSourceId?: pulumi.Input<string>;
    /**
     * The OS family for the third-party software source.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * Number of packages the software source contains.
     */
    packageCount?: pulumi.Input<string>;
    /**
     * A property used for compatibility only. It doesn't provide a complete list of packages. See [AddPackagesToSoftwareSourceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/AddPackagesToSoftwareSourceDetails) for providing the list of packages used to create the software source when isCreatedFromPackageList is set to true.
     */
    packages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The repository ID for the software source.
     */
    repoId?: pulumi.Input<string>;
    /**
     * The size of the software source in bytes (B).
     */
    size?: pulumi.Input<number>;
    /**
     * The creation type of a software source.
     */
    softwareSourceSubType?: pulumi.Input<string>;
    /**
     * (Updatable) Type of software source.
     */
    softwareSourceType?: pulumi.Input<string>;
    /**
     * The version to assign to this custom software source.
     */
    softwareSourceVersion?: pulumi.Input<string>;
    /**
     * The current state of the software source.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the software source was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the metadata for this software source was last updated (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
     */
    timeMetadataUpdated?: pulumi.Input<string>;
    /**
     * (Updatable) URL for the third-party software source.
     */
    url?: pulumi.Input<string>;
    /**
     * Name of the vendor providing the software source.
     */
    vendorName?: pulumi.Input<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    vendorSoftwareSources?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.SoftwareSourceVendorSoftwareSource>[]>;
}

/**
 * The set of arguments for constructing a SoftwareSource resource.
 */
export interface SoftwareSourceArgs {
    /**
     * (Updatable) Advanced repository options for the software source
     */
    advancedRepoOptions?: pulumi.Input<string>;
    /**
     * The architecture type supported by the third-party software source.
     */
    archType?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the software source.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Provides the information used to apply filters to a vendor software source to create or update a custom software source.
     */
    customSoftwareSourceFilter?: pulumi.Input<inputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) User-specified description for the software source. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User-friendly name for the software source. Does not have to be unique and you can change the name later. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) URI of the GPG key for this software source.
     */
    gpgKeyUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether the service should automatically resolve package dependencies when including specific packages in the software source.
     */
    isAutoResolveDependencies?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether the service should automatically update the custom software source to use the latest package versions available. The service reviews packages levels once a day.
     */
    isAutomaticallyUpdated?: pulumi.Input<boolean>;
    /**
     * Indicates whether the service should create the software source from a list of packages provided by the user.
     */
    isCreatedFromPackageList?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether signature verification should be done for the software source.
     */
    isGpgCheckEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Indicates whether the software source will include only the latest versions of content from vendor software sources, while accounting for other constraints set in the custom or versioned custom software source (such as a package list or filters).
     * * For a module filter that does not specify a stream, this will include all available streams, and within each stream only the latest version of packages.
     * * For a module filter that does specify a stream, this will include only the latest version of packages for the specified stream.
     * * For a package filter that does not specify a version, this will include only the latest available version of the package.
     * * For a package filter that does specify a version, this will include only the specified version of the package (the isLatestContentOnly attribute is ignored).
     * * For a package list, this will include only the specified version of packages and modules in the list (the isLatestContentOnly attribute is ignored).
     */
    isLatestContentOnly?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether this software source can be synced to a management station
     */
    isMirrorSyncAllowed?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether SSL validation needs to be turned on
     */
    isSslVerifyEnabled?: pulumi.Input<boolean>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the vendor software source in the root compartment that is being replicated.
     */
    originSoftwareSourceId?: pulumi.Input<string>;
    /**
     * The OS family for the third-party software source.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * A property used for compatibility only. It doesn't provide a complete list of packages. See [AddPackagesToSoftwareSourceDetails](https://docs.cloud.oracle.com/iaas/api/#/en/osmh/latest/datatypes/AddPackagesToSoftwareSourceDetails) for providing the list of packages used to create the software source when isCreatedFromPackageList is set to true.
     */
    packages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The creation type of a software source.
     */
    softwareSourceSubType?: pulumi.Input<string>;
    /**
     * (Updatable) Type of software source.
     */
    softwareSourceType: pulumi.Input<string>;
    /**
     * The version to assign to this custom software source.
     */
    softwareSourceVersion?: pulumi.Input<string>;
    /**
     * (Updatable) URL for the third-party software source.
     */
    url?: pulumi.Input<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    vendorSoftwareSources?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.SoftwareSourceVendorSoftwareSource>[]>;
}
