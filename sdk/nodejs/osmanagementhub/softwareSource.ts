// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Software Source resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Creates a new versioned or custom software source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSource = new oci.osmanagementhub.SoftwareSource("testSoftwareSource", {
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.software_source_display_name,
 *     softwareSourceType: _var.software_source_software_source_type,
 *     vendorSoftwareSources: [{
 *         displayName: _var.software_source_vendor_software_sources_display_name,
 *         id: _var.software_source_vendor_software_sources_id,
 *     }],
 *     customSoftwareSourceFilter: {
 *         moduleStreamProfileFilters: [{
 *             filterType: _var.software_source_custom_software_source_filter_module_stream_profile_filters_filter_type,
 *             moduleName: _var.software_source_custom_software_source_filter_module_stream_profile_filters_module_name,
 *             profileName: oci_os_management_hub_profile.test_profile.name,
 *             streamName: oci_streaming_stream.test_stream.name,
 *         }],
 *         packageFilters: [{
 *             filterType: _var.software_source_custom_software_source_filter_package_filters_filter_type,
 *             packageName: _var.software_source_custom_software_source_filter_package_filters_package_name,
 *             packageNamePattern: _var.software_source_custom_software_source_filter_package_filters_package_name_pattern,
 *             packageVersion: _var.software_source_custom_software_source_filter_package_filters_package_version,
 *         }],
 *         packageGroupFilters: [{
 *             filterType: _var.software_source_custom_software_source_filter_package_group_filters_filter_type,
 *             packageGroups: _var.software_source_custom_software_source_filter_package_group_filters_package_groups,
 *         }],
 *     },
 *     definedTags: {
 *         "Operations.CostCenter": "42",
 *     },
 *     description: _var.software_source_description,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     isAutomaticallyUpdated: _var.software_source_is_automatically_updated,
 *     softwareSourceVersion: _var.software_source_software_source_version,
 * });
 * ```
 *
 * ## Import
 *
 * SoftwareSources can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/softwareSource:SoftwareSource test_software_source "id"
 * ```
 */
export class SoftwareSource extends pulumi.CustomResource {
    /**
     * Get an existing SoftwareSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SoftwareSourceState, opts?: pulumi.CustomResourceOptions): SoftwareSource {
        return new SoftwareSource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/softwareSource:SoftwareSource';

    /**
     * Returns true if the given object is an instance of SoftwareSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SoftwareSource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SoftwareSource.__pulumiType;
    }

    /**
     * The architecture type supported by the software source.
     */
    public /*out*/ readonly archType!: pulumi.Output<string>;
    /**
     * Possible availabilities of a software source.
     */
    public /*out*/ readonly availability!: pulumi.Output<string>;
    /**
     * The yum repository checksum type used by this software source.
     */
    public /*out*/ readonly checksumType!: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the tenancy containing the software source.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     */
    public readonly customSoftwareSourceFilter!: pulumi.Output<outputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) Information specified by the user about the software source.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) User friendly name.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * Fingerprint of the GPG key for this software source.
     */
    public /*out*/ readonly gpgKeyFingerprint!: pulumi.Output<string>;
    /**
     * ID of the GPG key for this software source.
     */
    public /*out*/ readonly gpgKeyId!: pulumi.Output<string>;
    /**
     * URL of the GPG key for this software source.
     */
    public /*out*/ readonly gpgKeyUrl!: pulumi.Output<string>;
    /**
     * (Updatable) Indicates whether service should automatically update the custom software source for the user.
     */
    public readonly isAutomaticallyUpdated!: pulumi.Output<boolean>;
    /**
     * The OS family the software source belongs to.
     */
    public /*out*/ readonly osFamily!: pulumi.Output<string>;
    /**
     * Number of packages.
     */
    public /*out*/ readonly packageCount!: pulumi.Output<string>;
    /**
     * The Repo ID for the software source.
     */
    public /*out*/ readonly repoId!: pulumi.Output<string>;
    /**
     * (Updatable) Type of the software source.
     */
    public readonly softwareSourceType!: pulumi.Output<string>;
    /**
     * The version to assign to this custom software source.
     */
    public readonly softwareSourceVersion!: pulumi.Output<string>;
    /**
     * The current state of the software source.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * URL for the repository.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;
    /**
     * Name of the vendor providing the software source.
     */
    public /*out*/ readonly vendorName!: pulumi.Output<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    public readonly vendorSoftwareSources!: pulumi.Output<outputs.OsManagementHub.SoftwareSourceVendorSoftwareSource[]>;

    /**
     * Create a SoftwareSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SoftwareSourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SoftwareSourceArgs | SoftwareSourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SoftwareSourceState | undefined;
            resourceInputs["archType"] = state ? state.archType : undefined;
            resourceInputs["availability"] = state ? state.availability : undefined;
            resourceInputs["checksumType"] = state ? state.checksumType : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["customSoftwareSourceFilter"] = state ? state.customSoftwareSourceFilter : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["gpgKeyFingerprint"] = state ? state.gpgKeyFingerprint : undefined;
            resourceInputs["gpgKeyId"] = state ? state.gpgKeyId : undefined;
            resourceInputs["gpgKeyUrl"] = state ? state.gpgKeyUrl : undefined;
            resourceInputs["isAutomaticallyUpdated"] = state ? state.isAutomaticallyUpdated : undefined;
            resourceInputs["osFamily"] = state ? state.osFamily : undefined;
            resourceInputs["packageCount"] = state ? state.packageCount : undefined;
            resourceInputs["repoId"] = state ? state.repoId : undefined;
            resourceInputs["softwareSourceType"] = state ? state.softwareSourceType : undefined;
            resourceInputs["softwareSourceVersion"] = state ? state.softwareSourceVersion : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
            resourceInputs["vendorName"] = state ? state.vendorName : undefined;
            resourceInputs["vendorSoftwareSources"] = state ? state.vendorSoftwareSources : undefined;
        } else {
            const args = argsOrState as SoftwareSourceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.softwareSourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'softwareSourceType'");
            }
            if ((!args || args.vendorSoftwareSources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vendorSoftwareSources'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["customSoftwareSourceFilter"] = args ? args.customSoftwareSourceFilter : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isAutomaticallyUpdated"] = args ? args.isAutomaticallyUpdated : undefined;
            resourceInputs["softwareSourceType"] = args ? args.softwareSourceType : undefined;
            resourceInputs["softwareSourceVersion"] = args ? args.softwareSourceVersion : undefined;
            resourceInputs["vendorSoftwareSources"] = args ? args.vendorSoftwareSources : undefined;
            resourceInputs["archType"] = undefined /*out*/;
            resourceInputs["availability"] = undefined /*out*/;
            resourceInputs["checksumType"] = undefined /*out*/;
            resourceInputs["gpgKeyFingerprint"] = undefined /*out*/;
            resourceInputs["gpgKeyId"] = undefined /*out*/;
            resourceInputs["gpgKeyUrl"] = undefined /*out*/;
            resourceInputs["osFamily"] = undefined /*out*/;
            resourceInputs["packageCount"] = undefined /*out*/;
            resourceInputs["repoId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
            resourceInputs["vendorName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SoftwareSource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SoftwareSource resources.
 */
export interface SoftwareSourceState {
    /**
     * The architecture type supported by the software source.
     */
    archType?: pulumi.Input<string>;
    /**
     * Possible availabilities of a software source.
     */
    availability?: pulumi.Input<string>;
    /**
     * The yum repository checksum type used by this software source.
     */
    checksumType?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the tenancy containing the software source.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     */
    customSoftwareSourceFilter?: pulumi.Input<inputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Information specified by the user about the software source.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User friendly name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Fingerprint of the GPG key for this software source.
     */
    gpgKeyFingerprint?: pulumi.Input<string>;
    /**
     * ID of the GPG key for this software source.
     */
    gpgKeyId?: pulumi.Input<string>;
    /**
     * URL of the GPG key for this software source.
     */
    gpgKeyUrl?: pulumi.Input<string>;
    /**
     * (Updatable) Indicates whether service should automatically update the custom software source for the user.
     */
    isAutomaticallyUpdated?: pulumi.Input<boolean>;
    /**
     * The OS family the software source belongs to.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * Number of packages.
     */
    packageCount?: pulumi.Input<string>;
    /**
     * The Repo ID for the software source.
     */
    repoId?: pulumi.Input<string>;
    /**
     * (Updatable) Type of the software source.
     */
    softwareSourceType?: pulumi.Input<string>;
    /**
     * The version to assign to this custom software source.
     */
    softwareSourceVersion?: pulumi.Input<string>;
    /**
     * The current state of the software source.
     */
    state?: pulumi.Input<string>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The date and time the software source was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * URL for the repository.
     */
    url?: pulumi.Input<string>;
    /**
     * Name of the vendor providing the software source.
     */
    vendorName?: pulumi.Input<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    vendorSoftwareSources?: pulumi.Input<pulumi.Input<inputs.OsManagementHub.SoftwareSourceVendorSoftwareSource>[]>;
}

/**
 * The set of arguments for constructing a SoftwareSource resource.
 */
export interface SoftwareSourceArgs {
    /**
     * (Updatable) The OCID of the tenancy containing the software source.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Used to apply filters to a VendorSoftwareSource to create/update CustomSoftwareSources.
     */
    customSoftwareSourceFilter?: pulumi.Input<inputs.OsManagementHub.SoftwareSourceCustomSoftwareSourceFilter>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Information specified by the user about the software source.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) User friendly name.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) Indicates whether service should automatically update the custom software source for the user.
     */
    isAutomaticallyUpdated?: pulumi.Input<boolean>;
    /**
     * (Updatable) Type of the software source.
     */
    softwareSourceType: pulumi.Input<string>;
    /**
     * The version to assign to this custom software source.
     */
    softwareSourceVersion?: pulumi.Input<string>;
    /**
     * (Updatable) List of vendor software sources.
     */
    vendorSoftwareSources: pulumi.Input<pulumi.Input<inputs.OsManagementHub.SoftwareSourceVendorSoftwareSource>[]>;
}
