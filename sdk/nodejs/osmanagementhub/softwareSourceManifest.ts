// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Software Source Manifest resource in Oracle Cloud Infrastructure Os Management Hub service.
 *
 * Updates the package list document for the software source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSoftwareSourceManifest = new oci.osmanagementhub.SoftwareSourceManifest("test_software_source_manifest", {
 *     softwareSourceId: testSoftwareSource.id,
 *     content: content,
 * });
 * ```
 *
 * ## Import
 *
 * SoftwareSourceManifests can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:OsManagementHub/softwareSourceManifest:SoftwareSourceManifest test_software_source_manifest "id"
 * ```
 */
export class SoftwareSourceManifest extends pulumi.CustomResource {
    /**
     * Get an existing SoftwareSourceManifest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SoftwareSourceManifestState, opts?: pulumi.CustomResourceOptions): SoftwareSourceManifest {
        return new SoftwareSourceManifest(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:OsManagementHub/softwareSourceManifest:SoftwareSourceManifest';

    /**
     * Returns true if the given object is an instance of SoftwareSourceManifest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SoftwareSourceManifest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SoftwareSourceManifest.__pulumiType;
    }

    /**
     * (Updatable) Provides the manifest content used to update the package list of the software source.
     */
    declare public readonly content: pulumi.Output<string | undefined>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly softwareSourceId: pulumi.Output<string>;

    /**
     * Create a SoftwareSourceManifest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SoftwareSourceManifestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SoftwareSourceManifestArgs | SoftwareSourceManifestState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SoftwareSourceManifestState | undefined;
            resourceInputs["content"] = state?.content;
            resourceInputs["softwareSourceId"] = state?.softwareSourceId;
        } else {
            const args = argsOrState as SoftwareSourceManifestArgs | undefined;
            if (args?.softwareSourceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'softwareSourceId'");
            }
            resourceInputs["content"] = args?.content;
            resourceInputs["softwareSourceId"] = args?.softwareSourceId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SoftwareSourceManifest.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SoftwareSourceManifest resources.
 */
export interface SoftwareSourceManifestState {
    /**
     * (Updatable) Provides the manifest content used to update the package list of the software source.
     */
    content?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    softwareSourceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SoftwareSourceManifest resource.
 */
export interface SoftwareSourceManifestArgs {
    /**
     * (Updatable) Provides the manifest content used to update the package list of the software source.
     */
    content?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the software source.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    softwareSourceId: pulumi.Input<string>;
}
