// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AddressActionVerificationArgs, AddressActionVerificationState } from "./addressActionVerification";
export type AddressActionVerification = import("./addressActionVerification").AddressActionVerification;
export const AddressActionVerification: typeof import("./addressActionVerification").AddressActionVerification = null as any;
utilities.lazyLoad(exports, ["AddressActionVerification"], () => require("./addressActionVerification"));

export { GetAddressArgs, GetAddressResult, GetAddressOutputArgs } from "./getAddress";
export const getAddress: typeof import("./getAddress").getAddress = null as any;
export const getAddressOutput: typeof import("./getAddress").getAddressOutput = null as any;
utilities.lazyLoad(exports, ["getAddress","getAddressOutput"], () => require("./getAddress"));

export { GetAddressRuleArgs, GetAddressRuleResult, GetAddressRuleOutputArgs } from "./getAddressRule";
export const getAddressRule: typeof import("./getAddressRule").getAddressRule = null as any;
export const getAddressRuleOutput: typeof import("./getAddressRule").getAddressRuleOutput = null as any;
utilities.lazyLoad(exports, ["getAddressRule","getAddressRuleOutput"], () => require("./getAddressRule"));

export { GetInvoiceArgs, GetInvoiceResult, GetInvoiceOutputArgs } from "./getInvoice";
export const getInvoice: typeof import("./getInvoice").getInvoice = null as any;
export const getInvoiceOutput: typeof import("./getInvoice").getInvoiceOutput = null as any;
utilities.lazyLoad(exports, ["getInvoice","getInvoiceOutput"], () => require("./getInvoice"));

export { GetInvoicesArgs, GetInvoicesResult, GetInvoicesOutputArgs } from "./getInvoices";
export const getInvoices: typeof import("./getInvoices").getInvoices = null as any;
export const getInvoicesOutput: typeof import("./getInvoices").getInvoicesOutput = null as any;
utilities.lazyLoad(exports, ["getInvoices","getInvoicesOutput"], () => require("./getInvoices"));

export { GetInvoicesInvoiceLineArgs, GetInvoicesInvoiceLineResult, GetInvoicesInvoiceLineOutputArgs } from "./getInvoicesInvoiceLine";
export const getInvoicesInvoiceLine: typeof import("./getInvoicesInvoiceLine").getInvoicesInvoiceLine = null as any;
export const getInvoicesInvoiceLineOutput: typeof import("./getInvoicesInvoiceLine").getInvoicesInvoiceLineOutput = null as any;
utilities.lazyLoad(exports, ["getInvoicesInvoiceLine","getInvoicesInvoiceLineOutput"], () => require("./getInvoicesInvoiceLine"));

export { GetInvoicesInvoiceLinesArgs, GetInvoicesInvoiceLinesResult, GetInvoicesInvoiceLinesOutputArgs } from "./getInvoicesInvoiceLines";
export const getInvoicesInvoiceLines: typeof import("./getInvoicesInvoiceLines").getInvoicesInvoiceLines = null as any;
export const getInvoicesInvoiceLinesOutput: typeof import("./getInvoicesInvoiceLines").getInvoicesInvoiceLinesOutput = null as any;
utilities.lazyLoad(exports, ["getInvoicesInvoiceLines","getInvoicesInvoiceLinesOutput"], () => require("./getInvoicesInvoiceLines"));

export { GetSubscriptionArgs, GetSubscriptionResult, GetSubscriptionOutputArgs } from "./getSubscription";
export const getSubscription: typeof import("./getSubscription").getSubscription = null as any;
export const getSubscriptionOutput: typeof import("./getSubscription").getSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getSubscription","getSubscriptionOutput"], () => require("./getSubscription"));

export { GetSubscriptionsArgs, GetSubscriptionsResult, GetSubscriptionsOutputArgs } from "./getSubscriptions";
export const getSubscriptions: typeof import("./getSubscriptions").getSubscriptions = null as any;
export const getSubscriptionsOutput: typeof import("./getSubscriptions").getSubscriptionsOutput = null as any;
utilities.lazyLoad(exports, ["getSubscriptions","getSubscriptionsOutput"], () => require("./getSubscriptions"));

export { SubscriptionArgs, SubscriptionState } from "./subscription";
export type Subscription = import("./subscription").Subscription;
export const Subscription: typeof import("./subscription").Subscription = null as any;
utilities.lazyLoad(exports, ["Subscription"], () => require("./subscription"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:OspGateway/addressActionVerification:AddressActionVerification":
                return new AddressActionVerification(name, <any>undefined, { urn })
            case "oci:OspGateway/subscription:Subscription":
                return new Subscription(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "OspGateway/addressActionVerification", _module)
pulumi.runtime.registerResourceModule("oci", "OspGateway/subscription", _module)
