// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Db System resource in Oracle Cloud Infrastructure Psql service.
 *
 * Creates a new database system.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDbSystem = new oci.psql.DbSystem("test_db_system", {
 *     compartmentId: compartmentId,
 *     credentials: {
 *         passwordDetails: {
 *             passwordType: dbSystemCredentialsPasswordDetailsPasswordType,
 *             password: dbSystemCredentialsPasswordDetailsPassword,
 *             secretId: testSecret.id,
 *             secretVersion: dbSystemCredentialsPasswordDetailsSecretVersion,
 *         },
 *         username: dbSystemCredentialsUsername,
 *     },
 *     dbVersion: dbSystemDbVersion,
 *     displayName: dbSystemDisplayName,
 *     networkDetails: {
 *         subnetId: testSubnet.id,
 *         isReaderEndpointEnabled: dbSystemNetworkDetailsIsReaderEndpointEnabled,
 *         nsgIds: dbSystemNetworkDetailsNsgIds,
 *         primaryDbEndpointPrivateIp: dbSystemNetworkDetailsPrimaryDbEndpointPrivateIp,
 *     },
 *     shape: dbSystemShape,
 *     storageDetails: {
 *         isRegionallyDurable: dbSystemStorageDetailsIsRegionallyDurable,
 *         systemType: dbSystemStorageDetailsSystemType,
 *         availabilityDomain: dbSystemStorageDetailsAvailabilityDomain,
 *         iops: dbSystemStorageDetailsIops,
 *     },
 *     configId: testConfig.id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: dbSystemDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     instanceCount: dbSystemInstanceCount,
 *     instanceMemorySizeInGbs: dbSystemInstanceMemorySizeInGbs,
 *     instanceOcpuCount: dbSystemInstanceOcpuCount,
 *     instancesDetails: [{
 *         description: dbSystemInstancesDetailsDescription,
 *         displayName: dbSystemInstancesDetailsDisplayName,
 *         privateIp: dbSystemInstancesDetailsPrivateIp,
 *     }],
 *     managementPolicy: {
 *         backupPolicy: {
 *             backupStart: dbSystemManagementPolicyBackupPolicyBackupStart,
 *             copyPolicy: {
 *                 compartmentId: compartmentId,
 *                 regions: dbSystemManagementPolicyBackupPolicyCopyPolicyRegions,
 *                 retentionPeriod: dbSystemManagementPolicyBackupPolicyCopyPolicyRetentionPeriod,
 *             },
 *             daysOfTheMonths: dbSystemManagementPolicyBackupPolicyDaysOfTheMonth,
 *             daysOfTheWeeks: dbSystemManagementPolicyBackupPolicyDaysOfTheWeek,
 *             kind: dbSystemManagementPolicyBackupPolicyKind,
 *             retentionDays: dbSystemManagementPolicyBackupPolicyRetentionDays,
 *         },
 *         maintenanceWindowStart: dbSystemManagementPolicyMaintenanceWindowStart,
 *     },
 *     source: {
 *         sourceType: dbSystemSourceSourceType,
 *         backupId: testBackup.id,
 *         isHavingRestoreConfigOverrides: dbSystemSourceIsHavingRestoreConfigOverrides,
 *     },
 *     systemType: dbSystemSystemType,
 *     patchOperations: [{
 *         operation: dbSystemPatchOperationsOperation,
 *         selection: dbSystemPatchOperationsSelection,
 *         value: dbSystemPatchOperationsValue,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * DbSystems can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Psql/dbSystem:DbSystem test_db_system "id"
 * ```
 */
export class DbSystem extends pulumi.CustomResource {
    /**
     * Get an existing DbSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DbSystemState, opts?: pulumi.CustomResourceOptions): DbSystem {
        return new DbSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Psql/dbSystem:DbSystem';

    /**
     * Returns true if the given object is an instance of DbSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DbSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DbSystem.__pulumiType;
    }

    /**
     * The database system administrator username.
     */
    declare public /*out*/ readonly adminUsername: pulumi.Output<string>;
    /**
     * Whether a configuration update requires a restart of the database instance or a reload of the configuration. Some configuration changes require a restart of database instances to be applied. Apply config can be passed as `RESTART` or `RELOAD`
     */
    declare public readonly applyConfig: pulumi.Output<string | undefined>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the database system.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration associated with the database system.
     */
    declare public readonly configId: pulumi.Output<string>;
    /**
     * Initial database system credentials that the database system will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
     */
    declare public readonly credentials: pulumi.Output<outputs.Psql.DbSystemCredentials | undefined>;
    /**
     * Version of database system software.
     */
    declare public readonly dbVersion: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A user-provided description of a database system.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly display name for the database system. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Count of database instances nodes to be created in the database system.
     */
    declare public readonly instanceCount: pulumi.Output<number>;
    /**
     * (Updatable) The total amount of memory available to each database instance node, in gigabytes.
     */
    declare public readonly instanceMemorySizeInGbs: pulumi.Output<number>;
    /**
     * (Updatable) The total number of OCPUs available to each database instance node.
     */
    declare public readonly instanceOcpuCount: pulumi.Output<number>;
    /**
     * The list of instances, or nodes, in the database system.
     */
    declare public /*out*/ readonly instances: pulumi.Output<outputs.Psql.DbSystemInstance[]>;
    /**
     * Details of database instances nodes to be created. This parameter is optional. If specified, its size must match `instanceCount`.
     */
    declare public readonly instancesDetails: pulumi.Output<outputs.Psql.DbSystemInstancesDetail[]>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * (Updatable) PostgreSQL database system management policy update details.
     */
    declare public readonly managementPolicy: pulumi.Output<outputs.Psql.DbSystemManagementPolicy>;
    /**
     * (Updatable) Network details for the database system.
     */
    declare public readonly networkDetails: pulumi.Output<outputs.Psql.DbSystemNetworkDetails>;
    /**
     * (Updatable) For adding and removing from read replica database instances. Please remove the patchOperations after it is applied. Update the instanceCount arrodrandly. Cannot be specified when creating the resource.
     */
    declare public readonly patchOperations: pulumi.Output<outputs.Psql.DbSystemPatchOperation[] | undefined>;
    /**
     * (Updatable) The name of the shape for the database instance node. Use the /shapes API for accepted shapes. Example: `VM.Standard.E4.Flex`
     */
    declare public readonly shape: pulumi.Output<string>;
    /**
     * The source of the database system.
     */
    declare public readonly source: pulumi.Output<outputs.Psql.DbSystemSource>;
    /**
     * The current state of the database system.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * (Updatable) Storage details of the database system.
     */
    declare public readonly storageDetails: pulumi.Output<outputs.Psql.DbSystemStorageDetails>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Type of the database system.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly systemType: pulumi.Output<string>;
    /**
     * The date and time that the database system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time that the database system was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a DbSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DbSystemArgs | DbSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DbSystemState | undefined;
            resourceInputs["adminUsername"] = state?.adminUsername;
            resourceInputs["applyConfig"] = state?.applyConfig;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["configId"] = state?.configId;
            resourceInputs["credentials"] = state?.credentials;
            resourceInputs["dbVersion"] = state?.dbVersion;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["instanceCount"] = state?.instanceCount;
            resourceInputs["instanceMemorySizeInGbs"] = state?.instanceMemorySizeInGbs;
            resourceInputs["instanceOcpuCount"] = state?.instanceOcpuCount;
            resourceInputs["instances"] = state?.instances;
            resourceInputs["instancesDetails"] = state?.instancesDetails;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["managementPolicy"] = state?.managementPolicy;
            resourceInputs["networkDetails"] = state?.networkDetails;
            resourceInputs["patchOperations"] = state?.patchOperations;
            resourceInputs["shape"] = state?.shape;
            resourceInputs["source"] = state?.source;
            resourceInputs["state"] = state?.state;
            resourceInputs["storageDetails"] = state?.storageDetails;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["systemType"] = state?.systemType;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as DbSystemArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.dbVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'dbVersion'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.networkDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkDetails'");
            }
            if (args?.shape === undefined && !opts.urn) {
                throw new Error("Missing required property 'shape'");
            }
            if (args?.storageDetails === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageDetails'");
            }
            resourceInputs["applyConfig"] = args?.applyConfig;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["configId"] = args?.configId;
            resourceInputs["credentials"] = args?.credentials;
            resourceInputs["dbVersion"] = args?.dbVersion;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["instanceCount"] = args?.instanceCount;
            resourceInputs["instanceMemorySizeInGbs"] = args?.instanceMemorySizeInGbs;
            resourceInputs["instanceOcpuCount"] = args?.instanceOcpuCount;
            resourceInputs["instancesDetails"] = args?.instancesDetails;
            resourceInputs["managementPolicy"] = args?.managementPolicy;
            resourceInputs["networkDetails"] = args?.networkDetails;
            resourceInputs["patchOperations"] = args?.patchOperations;
            resourceInputs["shape"] = args?.shape;
            resourceInputs["source"] = args?.source;
            resourceInputs["storageDetails"] = args?.storageDetails;
            resourceInputs["systemType"] = args?.systemType;
            resourceInputs["adminUsername"] = undefined /*out*/;
            resourceInputs["instances"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DbSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DbSystem resources.
 */
export interface DbSystemState {
    /**
     * The database system administrator username.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * Whether a configuration update requires a restart of the database instance or a reload of the configuration. Some configuration changes require a restart of database instances to be applied. Apply config can be passed as `RESTART` or `RELOAD`
     */
    applyConfig?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the database system.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration associated with the database system.
     */
    configId?: pulumi.Input<string>;
    /**
     * Initial database system credentials that the database system will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
     */
    credentials?: pulumi.Input<inputs.Psql.DbSystemCredentials>;
    /**
     * Version of database system software.
     */
    dbVersion?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-provided description of a database system.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly display name for the database system. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Count of database instances nodes to be created in the database system.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * (Updatable) The total amount of memory available to each database instance node, in gigabytes.
     */
    instanceMemorySizeInGbs?: pulumi.Input<number>;
    /**
     * (Updatable) The total number of OCPUs available to each database instance node.
     */
    instanceOcpuCount?: pulumi.Input<number>;
    /**
     * The list of instances, or nodes, in the database system.
     */
    instances?: pulumi.Input<pulumi.Input<inputs.Psql.DbSystemInstance>[]>;
    /**
     * Details of database instances nodes to be created. This parameter is optional. If specified, its size must match `instanceCount`.
     */
    instancesDetails?: pulumi.Input<pulumi.Input<inputs.Psql.DbSystemInstancesDetail>[]>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) PostgreSQL database system management policy update details.
     */
    managementPolicy?: pulumi.Input<inputs.Psql.DbSystemManagementPolicy>;
    /**
     * (Updatable) Network details for the database system.
     */
    networkDetails?: pulumi.Input<inputs.Psql.DbSystemNetworkDetails>;
    /**
     * (Updatable) For adding and removing from read replica database instances. Please remove the patchOperations after it is applied. Update the instanceCount arrodrandly. Cannot be specified when creating the resource.
     */
    patchOperations?: pulumi.Input<pulumi.Input<inputs.Psql.DbSystemPatchOperation>[]>;
    /**
     * (Updatable) The name of the shape for the database instance node. Use the /shapes API for accepted shapes. Example: `VM.Standard.E4.Flex`
     */
    shape?: pulumi.Input<string>;
    /**
     * The source of the database system.
     */
    source?: pulumi.Input<inputs.Psql.DbSystemSource>;
    /**
     * The current state of the database system.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) Storage details of the database system.
     */
    storageDetails?: pulumi.Input<inputs.Psql.DbSystemStorageDetails>;
    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Type of the database system.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    systemType?: pulumi.Input<string>;
    /**
     * The date and time that the database system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time that the database system was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DbSystem resource.
 */
export interface DbSystemArgs {
    /**
     * Whether a configuration update requires a restart of the database instance or a reload of the configuration. Some configuration changes require a restart of database instances to be applied. Apply config can be passed as `RESTART` or `RELOAD`
     */
    applyConfig?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the database system.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the configuration associated with the database system.
     */
    configId?: pulumi.Input<string>;
    /**
     * Initial database system credentials that the database system will be provisioned with. The password details are not visible on any subsequent operation, such as GET /dbSystems/{dbSystemId}.
     */
    credentials?: pulumi.Input<inputs.Psql.DbSystemCredentials>;
    /**
     * Version of database system software.
     */
    dbVersion: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-provided description of a database system.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly display name for the database system. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Count of database instances nodes to be created in the database system.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * (Updatable) The total amount of memory available to each database instance node, in gigabytes.
     */
    instanceMemorySizeInGbs?: pulumi.Input<number>;
    /**
     * (Updatable) The total number of OCPUs available to each database instance node.
     */
    instanceOcpuCount?: pulumi.Input<number>;
    /**
     * Details of database instances nodes to be created. This parameter is optional. If specified, its size must match `instanceCount`.
     */
    instancesDetails?: pulumi.Input<pulumi.Input<inputs.Psql.DbSystemInstancesDetail>[]>;
    /**
     * (Updatable) PostgreSQL database system management policy update details.
     */
    managementPolicy?: pulumi.Input<inputs.Psql.DbSystemManagementPolicy>;
    /**
     * (Updatable) Network details for the database system.
     */
    networkDetails: pulumi.Input<inputs.Psql.DbSystemNetworkDetails>;
    /**
     * (Updatable) For adding and removing from read replica database instances. Please remove the patchOperations after it is applied. Update the instanceCount arrodrandly. Cannot be specified when creating the resource.
     */
    patchOperations?: pulumi.Input<pulumi.Input<inputs.Psql.DbSystemPatchOperation>[]>;
    /**
     * (Updatable) The name of the shape for the database instance node. Use the /shapes API for accepted shapes. Example: `VM.Standard.E4.Flex`
     */
    shape: pulumi.Input<string>;
    /**
     * The source of the database system.
     */
    source?: pulumi.Input<inputs.Psql.DbSystemSource>;
    /**
     * (Updatable) Storage details of the database system.
     */
    storageDetails: pulumi.Input<inputs.Psql.DbSystemStorageDetails>;
    /**
     * Type of the database system.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    systemType?: pulumi.Input<string>;
}
