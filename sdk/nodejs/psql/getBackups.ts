// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Backups in Oracle Cloud Infrastructure Psql service.
 *
 * Returns a list of backups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBackups = oci.Psql.getBackups({
 *     backupId: oci_psql_backup.test_backup.id,
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.backup_display_name,
 *     id: _var.backup_id,
 *     state: _var.backup_state,
 *     timeEnded: _var.backup_time_ended,
 *     timeStarted: _var.backup_time_started,
 * });
 * ```
 */
export function getBackups(args?: GetBackupsArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Psql/getBackups:getBackups", {
        "backupId": args.backupId,
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
        "timeEnded": args.timeEnded,
        "timeStarted": args.timeStarted,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackups.
 */
export interface GetBackupsArgs {
    /**
     * A unique identifier for the backup.
     */
    backupId?: string;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.Psql.GetBackupsFilter[];
    /**
     * A unique identifier for the database system.
     */
    id?: string;
    /**
     * A filter to return only resources if their `lifecycleState` matches the given `lifecycleState`.
     */
    state?: string;
    /**
     * The end date for getting backups. An [RFC 3339](https://tools.ietf.org/rfc/rfc3339) formatted datetime string.
     */
    timeEnded?: string;
    /**
     * The start date for getting backups. An [RFC 3339](https://tools.ietf.org/rfc/rfc3339) formatted datetime string.
     */
    timeStarted?: string;
}

/**
 * A collection of values returned by getBackups.
 */
export interface GetBackupsResult {
    /**
     * The list of backup_collection.
     */
    readonly backupCollections: outputs.Psql.GetBackupsBackupCollection[];
    readonly backupId?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the backup.
     */
    readonly compartmentId?: string;
    /**
     * A user-friendly display name for the backup. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Psql.GetBackupsFilter[];
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup.
     */
    readonly id?: string;
    /**
     * The current state of the backup.
     */
    readonly state?: string;
    readonly timeEnded?: string;
    readonly timeStarted?: string;
}
/**
 * This data source provides the list of Backups in Oracle Cloud Infrastructure Psql service.
 *
 * Returns a list of backups.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBackups = oci.Psql.getBackups({
 *     backupId: oci_psql_backup.test_backup.id,
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.backup_display_name,
 *     id: _var.backup_id,
 *     state: _var.backup_state,
 *     timeEnded: _var.backup_time_ended,
 *     timeStarted: _var.backup_time_started,
 * });
 * ```
 */
export function getBackupsOutput(args?: GetBackupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupsResult> {
    return pulumi.output(args).apply((a: any) => getBackups(a, opts))
}

/**
 * A collection of arguments for invoking getBackups.
 */
export interface GetBackupsOutputArgs {
    /**
     * A unique identifier for the backup.
     */
    backupId?: pulumi.Input<string>;
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Psql.GetBackupsFilterArgs>[]>;
    /**
     * A unique identifier for the database system.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources if their `lifecycleState` matches the given `lifecycleState`.
     */
    state?: pulumi.Input<string>;
    /**
     * The end date for getting backups. An [RFC 3339](https://tools.ietf.org/rfc/rfc3339) formatted datetime string.
     */
    timeEnded?: pulumi.Input<string>;
    /**
     * The start date for getting backups. An [RFC 3339](https://tools.ietf.org/rfc/rfc3339) formatted datetime string.
     */
    timeStarted?: pulumi.Input<string>;
}
