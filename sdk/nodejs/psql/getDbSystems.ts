// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Db Systems in Oracle Cloud Infrastructure Psql service.
 *
 * Returns a list of DbSystems.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDbSystems = oci.Psql.getDbSystems({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.db_system_display_name,
 *     id: _var.db_system_id,
 *     state: _var.db_system_state,
 * });
 * ```
 */
export function getDbSystems(args?: GetDbSystemsArgs, opts?: pulumi.InvokeOptions): Promise<GetDbSystemsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Psql/getDbSystems:getDbSystems", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbSystems.
 */
export interface GetDbSystemsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.Psql.GetDbSystemsFilter[];
    /**
     * unique DbSystem identifier
     */
    id?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getDbSystems.
 */
export interface GetDbSystemsResult {
    /**
     * Compartment identifier
     */
    readonly compartmentId?: string;
    /**
     * The list of db_system_collection.
     */
    readonly dbSystemCollections: outputs.Psql.GetDbSystemsDbSystemCollection[];
    /**
     * Display name of the DbInstance.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Psql.GetDbSystemsFilter[];
    /**
     * Unique identifier that is immutable on creation.
     */
    readonly id?: string;
    /**
     * The current state of the DbSystem.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Db Systems in Oracle Cloud Infrastructure Psql service.
 *
 * Returns a list of DbSystems.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDbSystems = oci.Psql.getDbSystems({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.db_system_display_name,
 *     id: _var.db_system_id,
 *     state: _var.db_system_state,
 * });
 * ```
 */
export function getDbSystemsOutput(args?: GetDbSystemsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDbSystemsResult> {
    return pulumi.output(args).apply((a: any) => getDbSystems(a, opts))
}

/**
 * A collection of arguments for invoking getDbSystems.
 */
export interface GetDbSystemsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Psql.GetDbSystemsFilterArgs>[]>;
    /**
     * unique DbSystem identifier
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
