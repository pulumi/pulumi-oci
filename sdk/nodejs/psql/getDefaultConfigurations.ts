// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Default Configurations in Oracle Cloud Infrastructure Psql service.
 *
 * Returns a list of Default Configurations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDefaultConfigurations = oci.Psql.getDefaultConfigurations({
 *     configurationId: oci_psql_configuration.test_configuration.id,
 *     dbVersion: _var.default_configuration_db_version,
 *     displayName: _var.default_configuration_display_name,
 *     shape: _var.default_configuration_shape,
 *     state: _var.default_configuration_state,
 * });
 * ```
 */
export function getDefaultConfigurations(args?: GetDefaultConfigurationsArgs, opts?: pulumi.InvokeOptions): Promise<GetDefaultConfigurationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Psql/getDefaultConfigurations:getDefaultConfigurations", {
        "configurationId": args.configurationId,
        "dbVersion": args.dbVersion,
        "displayName": args.displayName,
        "filters": args.filters,
        "shape": args.shape,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getDefaultConfigurations.
 */
export interface GetDefaultConfigurationsArgs {
    /**
     * unique Configuration identifier
     */
    configurationId?: string;
    /**
     * Verison of the Postgresql DB like 14.5
     */
    dbVersion?: string;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: string;
    filters?: inputs.Psql.GetDefaultConfigurationsFilter[];
    /**
     * Shape name of the compute like VM.Standard.E4.Flex or VM.Standard3.Flex
     */
    shape?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getDefaultConfigurations.
 */
export interface GetDefaultConfigurationsResult {
    readonly configurationId?: string;
    /**
     * Version of the Postgresql DB
     */
    readonly dbVersion?: string;
    /**
     * The list of default_configuration_collection.
     */
    readonly defaultConfigurationCollections: outputs.Psql.GetDefaultConfigurationsDefaultConfigurationCollection[];
    /**
     * Config display name
     */
    readonly displayName?: string;
    readonly filters?: outputs.Psql.GetDefaultConfigurationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Compute Shape Name like VM.Standard3.Flex.
     */
    readonly shape?: string;
    /**
     * The current state of the Configuration.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Default Configurations in Oracle Cloud Infrastructure Psql service.
 *
 * Returns a list of Default Configurations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDefaultConfigurations = oci.Psql.getDefaultConfigurations({
 *     configurationId: oci_psql_configuration.test_configuration.id,
 *     dbVersion: _var.default_configuration_db_version,
 *     displayName: _var.default_configuration_display_name,
 *     shape: _var.default_configuration_shape,
 *     state: _var.default_configuration_state,
 * });
 * ```
 */
export function getDefaultConfigurationsOutput(args?: GetDefaultConfigurationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDefaultConfigurationsResult> {
    return pulumi.output(args).apply((a: any) => getDefaultConfigurations(a, opts))
}

/**
 * A collection of arguments for invoking getDefaultConfigurations.
 */
export interface GetDefaultConfigurationsOutputArgs {
    /**
     * unique Configuration identifier
     */
    configurationId?: pulumi.Input<string>;
    /**
     * Verison of the Postgresql DB like 14.5
     */
    dbVersion?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Psql.GetDefaultConfigurationsFilterArgs>[]>;
    /**
     * Shape name of the compute like VM.Standard.E4.Flex or VM.Standard3.Flex
     */
    shape?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
