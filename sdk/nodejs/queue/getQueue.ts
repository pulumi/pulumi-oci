// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Queue resource in Oracle Cloud Infrastructure Queue service.
 *
 * Gets a queue by identifier.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testQueue = oci.Queue.getQueue({
 *     queueId: oci_queue_queue.test_queue.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getQueue(args: GetQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetQueueResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Queue/getQueue:getQueue", {
        "queueId": args.queueId,
    }, opts);
}

/**
 * A collection of arguments for invoking getQueue.
 */
export interface GetQueueArgs {
    /**
     * The unique queue identifier.
     */
    queueId: string;
}

/**
 * A collection of values returned by getQueue.
 */
export interface GetQueueResult {
    /**
     * The percentage of allocated queue resources that can be consumed by a single channel. For example, if a queue has a storage limit of 2Gb, and a single channel consumption limit is 0.1 (10%!)(MISSING), that means data size of a single channel  can't exceed 200Mb. Consumption limit of 100%!((MISSING)default) means that a single channel can consume up-to all allocated queue's resources.
     */
    readonly channelConsumptionLimit: number;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the queue.
     */
    readonly compartmentId: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the custom encryption key to be used to encrypt messages content.
     */
    readonly customEncryptionKeyId: string;
    /**
     * The number of times a message can be delivered to a consumer before being moved to the dead letter queue. A value of 0 indicates that the DLQ is not used.
     */
    readonly deadLetterQueueDeliveryCount: number;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * A user-friendly name for the queue. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * A unique identifier for the queue that is immutable on creation.
     */
    readonly id: string;
    /**
     * Any additional details about the current state of the queue.
     */
    readonly lifecycleDetails: string;
    /**
     * The endpoint to use to consume or publish messages in the queue.
     */
    readonly messagesEndpoint: string;
    readonly purgeQueue: boolean;
    readonly purgeType: string;
    readonly queueId: string;
    /**
     * The retention period of the messages in the queue, in seconds.
     */
    readonly retentionInSeconds: number;
    /**
     * The current state of the queue.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The time that the queue was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     */
    readonly timeCreated: string;
    /**
     * The time that the queue was updated, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     */
    readonly timeUpdated: string;
    /**
     * The default polling timeout of the messages in the queue, in seconds.
     */
    readonly timeoutInSeconds: number;
    /**
     * The default visibility timeout of the messages consumed from the queue, in seconds.
     */
    readonly visibilityInSeconds: number;
}
/**
 * This data source provides details about a specific Queue resource in Oracle Cloud Infrastructure Queue service.
 *
 * Gets a queue by identifier.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testQueue = oci.Queue.getQueue({
 *     queueId: oci_queue_queue.test_queue.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getQueueOutput(args: GetQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueueResult> {
    return pulumi.output(args).apply((a: any) => getQueue(a, opts))
}

/**
 * A collection of arguments for invoking getQueue.
 */
export interface GetQueueOutputArgs {
    /**
     * The unique queue identifier.
     */
    queueId: pulumi.Input<string>;
}
