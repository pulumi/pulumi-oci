// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Protected Databases in Oracle Cloud Infrastructure Recovery service.
 *
 * Lists the protected databases based on the specified parameters.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProtectedDatabases = oci.RecoveryMod.getProtectedDatabases({
 *     compartmentId: compartmentId,
 *     displayName: protectedDatabaseDisplayName,
 *     id: protectedDatabaseId,
 *     protectionPolicyId: testProtectionPolicy.id,
 *     recoveryServiceSubnetId: testRecoveryServiceSubnet.id,
 *     state: protectedDatabaseState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getProtectedDatabases(args: GetProtectedDatabasesArgs, opts?: pulumi.InvokeOptions): Promise<GetProtectedDatabasesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:RecoveryMod/getProtectedDatabases:getProtectedDatabases", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "id": args.id,
        "protectionPolicyId": args.protectionPolicyId,
        "recoveryServiceSubnetId": args.recoveryServiceSubnetId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectedDatabases.
 */
export interface GetProtectedDatabasesArgs {
    /**
     * The compartment OCID.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire 'displayname' given.
     */
    displayName?: string;
    filters?: inputs.RecoveryMod.GetProtectedDatabasesFilter[];
    /**
     * The protected database OCID.
     */
    id?: string;
    /**
     * The protection policy OCID.
     */
    protectionPolicyId?: string;
    /**
     * The recovery service subnet OCID.
     */
    recoveryServiceSubnetId?: string;
    /**
     * A filter to return only the resources that match the specified lifecycle state.
     */
    state?: string;
}

/**
 * A collection of values returned by getProtectedDatabases.
 */
export interface GetProtectedDatabasesResult {
    /**
     * The OCID of the compartment that contains the protected database.
     */
    readonly compartmentId: string;
    /**
     * The protected database name. You can change the displayName. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.RecoveryMod.GetProtectedDatabasesFilter[];
    /**
     * The OCID of the protected database.
     */
    readonly id?: string;
    /**
     * The list of protected_database_collection.
     */
    readonly protectedDatabaseCollections: outputs.RecoveryMod.GetProtectedDatabasesProtectedDatabaseCollection[];
    /**
     * The OCID of the protection policy associated with the protected database.
     */
    readonly protectionPolicyId?: string;
    /**
     * Recovery Service Subnet Identifier.
     */
    readonly recoveryServiceSubnetId?: string;
    /**
     * The current state of the Protected Database.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Protected Databases in Oracle Cloud Infrastructure Recovery service.
 *
 * Lists the protected databases based on the specified parameters.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProtectedDatabases = oci.RecoveryMod.getProtectedDatabases({
 *     compartmentId: compartmentId,
 *     displayName: protectedDatabaseDisplayName,
 *     id: protectedDatabaseId,
 *     protectionPolicyId: testProtectionPolicy.id,
 *     recoveryServiceSubnetId: testRecoveryServiceSubnet.id,
 *     state: protectedDatabaseState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getProtectedDatabasesOutput(args: GetProtectedDatabasesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProtectedDatabasesResult> {
    return pulumi.output(args).apply((a: any) => getProtectedDatabases(a, opts))
}

/**
 * A collection of arguments for invoking getProtectedDatabases.
 */
export interface GetProtectedDatabasesOutputArgs {
    /**
     * The compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire 'displayname' given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.RecoveryMod.GetProtectedDatabasesFilterArgs>[]>;
    /**
     * The protected database OCID.
     */
    id?: pulumi.Input<string>;
    /**
     * The protection policy OCID.
     */
    protectionPolicyId?: pulumi.Input<string>;
    /**
     * The recovery service subnet OCID.
     */
    recoveryServiceSubnetId?: pulumi.Input<string>;
    /**
     * A filter to return only the resources that match the specified lifecycle state.
     */
    state?: pulumi.Input<string>;
}
