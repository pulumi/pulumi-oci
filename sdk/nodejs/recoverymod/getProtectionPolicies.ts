// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Protection Policies in Oracle Cloud Infrastructure Recovery service.
 *
 * Gets a list of protection policies based on the specified parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProtectionPolicies = oci.RecoveryMod.getProtectionPolicies({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.protection_policy_display_name,
 *     owner: _var.protection_policy_owner,
 *     protectionPolicyId: oci_recovery_protection_policy.test_protection_policy.id,
 *     state: _var.protection_policy_state,
 * });
 * ```
 */
export function getProtectionPolicies(args: GetProtectionPoliciesArgs, opts?: pulumi.InvokeOptions): Promise<GetProtectionPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:RecoveryMod/getProtectionPolicies:getProtectionPolicies", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "owner": args.owner,
        "protectionPolicyId": args.protectionPolicyId,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getProtectionPolicies.
 */
export interface GetProtectionPoliciesArgs {
    /**
     * The compartment OCID.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the entire 'displayname' given.
     */
    displayName?: string;
    filters?: inputs.RecoveryMod.GetProtectionPoliciesFilter[];
    /**
     * A filter to return only the policies that match the owner as 'Customer' or 'Oracle'.
     */
    owner?: string;
    /**
     * The protection policy OCID.
     */
    protectionPolicyId?: string;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: string;
}

/**
 * A collection of values returned by getProtectionPolicies.
 */
export interface GetProtectionPoliciesResult {
    /**
     * The OCID of the compartment that contains the protection policy.
     */
    readonly compartmentId: string;
    /**
     * A user provided name for the protection policy.
     */
    readonly displayName?: string;
    readonly filters?: outputs.RecoveryMod.GetProtectionPoliciesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    readonly owner?: string;
    /**
     * The list of protection_policy_collection.
     */
    readonly protectionPolicyCollections?: outputs.RecoveryMod.GetProtectionPoliciesProtectionPolicyCollection[];
    readonly protectionPolicyId?: string;
    /**
     * The current state of the protection policy. Allowed values are:
     * * CREATING
     * * UPDATING
     * * ACTIVE
     * * DELETING
     * * DELETED
     * * FAILED
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Protection Policies in Oracle Cloud Infrastructure Recovery service.
 *
 * Gets a list of protection policies based on the specified parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testProtectionPolicies = oci.RecoveryMod.getProtectionPolicies({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.protection_policy_display_name,
 *     owner: _var.protection_policy_owner,
 *     protectionPolicyId: oci_recovery_protection_policy.test_protection_policy.id,
 *     state: _var.protection_policy_state,
 * });
 * ```
 */
export function getProtectionPoliciesOutput(args: GetProtectionPoliciesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProtectionPoliciesResult> {
    return pulumi.output(args).apply((a: any) => getProtectionPolicies(a, opts))
}

/**
 * A collection of arguments for invoking getProtectionPolicies.
 */
export interface GetProtectionPoliciesOutputArgs {
    /**
     * The compartment OCID.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire 'displayname' given.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.RecoveryMod.GetProtectionPoliciesFilterArgs>[]>;
    /**
     * A filter to return only the policies that match the owner as 'Customer' or 'Oracle'.
     */
    owner?: pulumi.Input<string>;
    /**
     * The protection policy OCID.
     */
    protectionPolicyId?: pulumi.Input<string>;
    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     */
    state?: pulumi.Input<string>;
}
