// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
 *
 * Get an existing Oracle Cloud Infrastructure Cache users based on the ID (OCID).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOciCacheUser = oci.Redis.getOciCacheUser({
 *     ociCacheUserId: testOciCacheUserOciRedisOciCacheUser.id,
 * });
 * ```
 */
export function getOciCacheUser(args: GetOciCacheUserArgs, opts?: pulumi.InvokeOptions): Promise<GetOciCacheUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Redis/getOciCacheUser:getOciCacheUser", {
        "ociCacheUserId": args.ociCacheUserId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOciCacheUser.
 */
export interface GetOciCacheUserArgs {
    /**
     * A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
     */
    ociCacheUserId: string;
}

/**
 * A collection of values returned by getOciCacheUser.
 */
export interface GetOciCacheUserResult {
    /**
     * ACL string of Oracle Cloud Infrastructure cache user.
     */
    readonly aclString: string;
    /**
     * These are the Authentication details of an Oracle Cloud Infrastructure cache user.
     */
    readonly authenticationModes: outputs.Redis.GetOciCacheUserAuthenticationMode[];
    /**
     * Oracle Cloud Infrastructure Cache user compartment ID.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Description of Oracle Cloud Infrastructure cache user.
     */
    readonly description: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * Oracle Cloud Infrastructure Cache user unique ID.
     */
    readonly id: string;
    /**
     * Oracle Cloud Infrastructure Cache user name.
     */
    readonly name: string;
    readonly ociCacheUserId: string;
    /**
     * Oracle Cloud Infrastructure Cache user lifecycle state.
     */
    readonly state: string;
    /**
     * Oracle Cloud Infrastructure Cache user status. ON enables and OFF disables the Oracle Cloud Infrastructure cache user to login to the cluster.
     */
    readonly status: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * The date and time, when the Oracle Cloud Infrastructure cache user was created.
     */
    readonly timeCreated: string;
    /**
     * The date and time, when the Oracle Cloud Infrastructure cache user was updated.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
 *
 * Get an existing Oracle Cloud Infrastructure Cache users based on the ID (OCID).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testOciCacheUser = oci.Redis.getOciCacheUser({
 *     ociCacheUserId: testOciCacheUserOciRedisOciCacheUser.id,
 * });
 * ```
 */
export function getOciCacheUserOutput(args: GetOciCacheUserOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOciCacheUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Redis/getOciCacheUser:getOciCacheUser", {
        "ociCacheUserId": args.ociCacheUserId,
    }, opts);
}

/**
 * A collection of arguments for invoking getOciCacheUser.
 */
export interface GetOciCacheUserOutputArgs {
    /**
     * A filter to return only resources, that match with the given Oracle Cloud Infrastructure cache user ID (OCID).
     */
    ociCacheUserId: pulumi.Input<string>;
}
