// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetRedisClusterArgs, GetRedisClusterResult, GetRedisClusterOutputArgs } from "./getRedisCluster";
export const getRedisCluster: typeof import("./getRedisCluster").getRedisCluster = null as any;
export const getRedisClusterOutput: typeof import("./getRedisCluster").getRedisClusterOutput = null as any;
utilities.lazyLoad(exports, ["getRedisCluster","getRedisClusterOutput"], () => require("./getRedisCluster"));

export { GetRedisClusterNodesArgs, GetRedisClusterNodesResult, GetRedisClusterNodesOutputArgs } from "./getRedisClusterNodes";
export const getRedisClusterNodes: typeof import("./getRedisClusterNodes").getRedisClusterNodes = null as any;
export const getRedisClusterNodesOutput: typeof import("./getRedisClusterNodes").getRedisClusterNodesOutput = null as any;
utilities.lazyLoad(exports, ["getRedisClusterNodes","getRedisClusterNodesOutput"], () => require("./getRedisClusterNodes"));

export { GetRedisClustersArgs, GetRedisClustersResult, GetRedisClustersOutputArgs } from "./getRedisClusters";
export const getRedisClusters: typeof import("./getRedisClusters").getRedisClusters = null as any;
export const getRedisClustersOutput: typeof import("./getRedisClusters").getRedisClustersOutput = null as any;
utilities.lazyLoad(exports, ["getRedisClusters","getRedisClustersOutput"], () => require("./getRedisClusters"));

export { RedisClusterArgs, RedisClusterState } from "./redisCluster";
export type RedisCluster = import("./redisCluster").RedisCluster;
export const RedisCluster: typeof import("./redisCluster").RedisCluster = null as any;
utilities.lazyLoad(exports, ["RedisCluster"], () => require("./redisCluster"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Redis/redisCluster:RedisCluster":
                return new RedisCluster(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Redis/redisCluster", _module)
