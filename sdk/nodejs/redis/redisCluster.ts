// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Redis Cluster resource in Oracle Cloud Infrastructure Redis service.
 *
 * Creates a new Oracle Cloud Infrastructure Cache cluster. A cluster is a memory-based storage solution. For more information, see [OCI Cache](https://docs.cloud.oracle.com/iaas/Content/ocicache/home.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRedisCluster = new oci.redis.RedisCluster("test_redis_cluster", {
 *     compartmentId: compartmentId,
 *     displayName: redisClusterDisplayName,
 *     nodeCount: redisClusterNodeCount,
 *     nodeMemoryInGbs: redisClusterNodeMemoryInGbs,
 *     softwareVersion: redisClusterSoftwareVersion,
 *     subnetId: testSubnet.id,
 *     clusterMode: redisClusterClusterMode,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     nsgIds: redisClusterNsgIds,
 *     ociCacheConfigSetId: testOciCacheConfigSet.id,
 *     shardCount: redisClusterShardCount,
 * });
 * ```
 *
 * ## Import
 *
 * RedisClusters can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Redis/redisCluster:RedisCluster test_redis_cluster "id"
 * ```
 */
export class RedisCluster extends pulumi.CustomResource {
    /**
     * Get an existing RedisCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RedisClusterState, opts?: pulumi.CustomResourceOptions): RedisCluster {
        return new RedisCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Redis/redisCluster:RedisCluster';

    /**
     * Returns true if the given object is an instance of RedisCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RedisCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RedisCluster.__pulumiType;
    }

    /**
     * Specifies whether the cluster is sharded or non-sharded.
     */
    declare public readonly clusterMode: pulumi.Output<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the cluster.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The private IP address of the API endpoint for sharded cluster discovery.
     */
    declare public /*out*/ readonly discoveryEndpointIpAddress: pulumi.Output<string>;
    /**
     * The fully qualified domain name (FQDN) of the API endpoint for sharded cluster discovery.
     */
    declare public /*out*/ readonly discoveryFqdn: pulumi.Output<string>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
     */
    declare public /*out*/ readonly lifecycleDetails: pulumi.Output<string>;
    /**
     * The collection of  cluster nodes.
     */
    declare public /*out*/ readonly nodeCollections: pulumi.Output<outputs.Redis.RedisClusterNodeCollection[]>;
    /**
     * (Updatable) The number of nodes per shard in the cluster when clusterMode is SHARDED. This is the total number of nodes when clusterMode is NONSHARDED.
     */
    declare public readonly nodeCount: pulumi.Output<number>;
    /**
     * (Updatable) The amount of memory allocated to the cluster's nodes, in gigabytes.
     */
    declare public readonly nodeMemoryInGbs: pulumi.Output<number>;
    /**
     * (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Clusters](https://docs.cloud.oracle.com/iaas/Content/ocicache/connecttocluster.htm#connecttocluster__networksecuritygroup).
     */
    declare public readonly nsgIds: pulumi.Output<string[]>;
    /**
     * (Updatable) The ID of the corresponding Oracle Cloud Infrastructure Cache Config Set for the cluster.
     */
    declare public readonly ociCacheConfigSetId: pulumi.Output<string>;
    /**
     * The private IP address of the API endpoint for the cluster's primary node.
     */
    declare public /*out*/ readonly primaryEndpointIpAddress: pulumi.Output<string>;
    /**
     * The fully qualified domain name (FQDN) of the API endpoint for the cluster's primary node.
     */
    declare public /*out*/ readonly primaryFqdn: pulumi.Output<string>;
    /**
     * The private IP address of the API endpoint for the cluster's replica nodes.
     */
    declare public /*out*/ readonly replicasEndpointIpAddress: pulumi.Output<string>;
    /**
     * The fully qualified domain name (FQDN) of the API endpoint for the cluster's replica nodes.
     */
    declare public /*out*/ readonly replicasFqdn: pulumi.Output<string>;
    /**
     * (Updatable) The number of shards in sharded cluster. Only applicable when clusterMode is SHARDED.
     */
    declare public readonly shardCount: pulumi.Output<number>;
    /**
     * (Updatable) The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
     */
    declare public readonly softwareVersion: pulumi.Output<string>;
    /**
     * The current state of the cluster.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster's subnet.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    declare public /*out*/ readonly systemTags: pulumi.Output<{[key: string]: string}>;
    /**
     * The date and time the cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;
    /**
     * The date and time the cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     */
    declare public /*out*/ readonly timeUpdated: pulumi.Output<string>;

    /**
     * Create a RedisCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RedisClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RedisClusterArgs | RedisClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RedisClusterState | undefined;
            resourceInputs["clusterMode"] = state?.clusterMode;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["discoveryEndpointIpAddress"] = state?.discoveryEndpointIpAddress;
            resourceInputs["discoveryFqdn"] = state?.discoveryFqdn;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleDetails"] = state?.lifecycleDetails;
            resourceInputs["nodeCollections"] = state?.nodeCollections;
            resourceInputs["nodeCount"] = state?.nodeCount;
            resourceInputs["nodeMemoryInGbs"] = state?.nodeMemoryInGbs;
            resourceInputs["nsgIds"] = state?.nsgIds;
            resourceInputs["ociCacheConfigSetId"] = state?.ociCacheConfigSetId;
            resourceInputs["primaryEndpointIpAddress"] = state?.primaryEndpointIpAddress;
            resourceInputs["primaryFqdn"] = state?.primaryFqdn;
            resourceInputs["replicasEndpointIpAddress"] = state?.replicasEndpointIpAddress;
            resourceInputs["replicasFqdn"] = state?.replicasFqdn;
            resourceInputs["shardCount"] = state?.shardCount;
            resourceInputs["softwareVersion"] = state?.softwareVersion;
            resourceInputs["state"] = state?.state;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["systemTags"] = state?.systemTags;
            resourceInputs["timeCreated"] = state?.timeCreated;
            resourceInputs["timeUpdated"] = state?.timeUpdated;
        } else {
            const args = argsOrState as RedisClusterArgs | undefined;
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.nodeCount === undefined && !opts.urn) {
                throw new Error("Missing required property 'nodeCount'");
            }
            if (args?.nodeMemoryInGbs === undefined && !opts.urn) {
                throw new Error("Missing required property 'nodeMemoryInGbs'");
            }
            if (args?.softwareVersion === undefined && !opts.urn) {
                throw new Error("Missing required property 'softwareVersion'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["clusterMode"] = args?.clusterMode;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["nodeCount"] = args?.nodeCount;
            resourceInputs["nodeMemoryInGbs"] = args?.nodeMemoryInGbs;
            resourceInputs["nsgIds"] = args?.nsgIds;
            resourceInputs["ociCacheConfigSetId"] = args?.ociCacheConfigSetId;
            resourceInputs["shardCount"] = args?.shardCount;
            resourceInputs["softwareVersion"] = args?.softwareVersion;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["discoveryEndpointIpAddress"] = undefined /*out*/;
            resourceInputs["discoveryFqdn"] = undefined /*out*/;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["nodeCollections"] = undefined /*out*/;
            resourceInputs["primaryEndpointIpAddress"] = undefined /*out*/;
            resourceInputs["primaryFqdn"] = undefined /*out*/;
            resourceInputs["replicasEndpointIpAddress"] = undefined /*out*/;
            resourceInputs["replicasFqdn"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RedisCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RedisCluster resources.
 */
export interface RedisClusterState {
    /**
     * Specifies whether the cluster is sharded or non-sharded.
     */
    clusterMode?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the cluster.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The private IP address of the API endpoint for sharded cluster discovery.
     */
    discoveryEndpointIpAddress?: pulumi.Input<string>;
    /**
     * The fully qualified domain name (FQDN) of the API endpoint for sharded cluster discovery.
     */
    discoveryFqdn?: pulumi.Input<string>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, the message might provide actionable information for a resource in `FAILED` state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * The collection of  cluster nodes.
     */
    nodeCollections?: pulumi.Input<pulumi.Input<inputs.Redis.RedisClusterNodeCollection>[]>;
    /**
     * (Updatable) The number of nodes per shard in the cluster when clusterMode is SHARDED. This is the total number of nodes when clusterMode is NONSHARDED.
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * (Updatable) The amount of memory allocated to the cluster's nodes, in gigabytes.
     */
    nodeMemoryInGbs?: pulumi.Input<number>;
    /**
     * (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Clusters](https://docs.cloud.oracle.com/iaas/Content/ocicache/connecttocluster.htm#connecttocluster__networksecuritygroup).
     */
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The ID of the corresponding Oracle Cloud Infrastructure Cache Config Set for the cluster.
     */
    ociCacheConfigSetId?: pulumi.Input<string>;
    /**
     * The private IP address of the API endpoint for the cluster's primary node.
     */
    primaryEndpointIpAddress?: pulumi.Input<string>;
    /**
     * The fully qualified domain name (FQDN) of the API endpoint for the cluster's primary node.
     */
    primaryFqdn?: pulumi.Input<string>;
    /**
     * The private IP address of the API endpoint for the cluster's replica nodes.
     */
    replicasEndpointIpAddress?: pulumi.Input<string>;
    /**
     * The fully qualified domain name (FQDN) of the API endpoint for the cluster's replica nodes.
     */
    replicasFqdn?: pulumi.Input<string>;
    /**
     * (Updatable) The number of shards in sharded cluster. Only applicable when clusterMode is SHARDED.
     */
    shardCount?: pulumi.Input<number>;
    /**
     * (Updatable) The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
     */
    softwareVersion?: pulumi.Input<string>;
    /**
     * The current state of the cluster.
     */
    state?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster's subnet.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The date and time the cluster was created. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the cluster was updated. An [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339) formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RedisCluster resource.
 */
export interface RedisClusterArgs {
    /**
     * Specifies whether the cluster is sharded or non-sharded.
     */
    clusterMode?: pulumi.Input<string>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the compartment that contains the cluster.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The number of nodes per shard in the cluster when clusterMode is SHARDED. This is the total number of nodes when clusterMode is NONSHARDED.
     */
    nodeCount: pulumi.Input<number>;
    /**
     * (Updatable) The amount of memory allocated to the cluster's nodes, in gigabytes.
     */
    nodeMemoryInGbs: pulumi.Input<number>;
    /**
     * (Updatable) A list of Network Security Group (NSG) [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this cluster. For more information, see [Using an NSG for Clusters](https://docs.cloud.oracle.com/iaas/Content/ocicache/connecttocluster.htm#connecttocluster__networksecuritygroup).
     */
    nsgIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) The ID of the corresponding Oracle Cloud Infrastructure Cache Config Set for the cluster.
     */
    ociCacheConfigSetId?: pulumi.Input<string>;
    /**
     * (Updatable) The number of shards in sharded cluster. Only applicable when clusterMode is SHARDED.
     */
    shardCount?: pulumi.Input<number>;
    /**
     * (Updatable) The Oracle Cloud Infrastructure Cache engine version that the cluster is running.
     */
    softwareVersion: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster's subnet.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    subnetId: pulumi.Input<string>;
}
