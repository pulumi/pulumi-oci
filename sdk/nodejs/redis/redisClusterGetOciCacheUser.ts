// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Redis Cluster Get Oci Cache User resource in Oracle Cloud Infrastructure Redis service.
 *
 * Gets a list of associated Oracle Cloud Infrastructure cache users for a redis cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testRedisClusterGetOciCacheUser = new oci.redis.RedisClusterGetOciCacheUser("test_redis_cluster_get_oci_cache_user", {
 *     redisClusterId: testRedisCluster.id,
 *     compartmentId: compartmentId,
 *     displayName: redisClusterGetOciCacheUserDisplayName,
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class RedisClusterGetOciCacheUser extends pulumi.CustomResource {
    /**
     * Get an existing RedisClusterGetOciCacheUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RedisClusterGetOciCacheUserState, opts?: pulumi.CustomResourceOptions): RedisClusterGetOciCacheUser {
        return new RedisClusterGetOciCacheUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Redis/redisClusterGetOciCacheUser:RedisClusterGetOciCacheUser';

    /**
     * Returns true if the given object is an instance of RedisClusterGetOciCacheUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RedisClusterGetOciCacheUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RedisClusterGetOciCacheUser.__pulumiType;
    }

    /**
     * The ID of the compartment in which to list resources.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    public readonly displayName!: pulumi.Output<string>;
    public /*out*/ readonly ociCacheUsers!: pulumi.Output<outputs.Redis.RedisClusterGetOciCacheUserOciCacheUser[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly redisClusterId!: pulumi.Output<string>;

    /**
     * Create a RedisClusterGetOciCacheUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RedisClusterGetOciCacheUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RedisClusterGetOciCacheUserArgs | RedisClusterGetOciCacheUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RedisClusterGetOciCacheUserState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["ociCacheUsers"] = state ? state.ociCacheUsers : undefined;
            resourceInputs["redisClusterId"] = state ? state.redisClusterId : undefined;
        } else {
            const args = argsOrState as RedisClusterGetOciCacheUserArgs | undefined;
            if ((!args || args.redisClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'redisClusterId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["redisClusterId"] = args ? args.redisClusterId : undefined;
            resourceInputs["ociCacheUsers"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RedisClusterGetOciCacheUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RedisClusterGetOciCacheUser resources.
 */
export interface RedisClusterGetOciCacheUserState {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    ociCacheUsers?: pulumi.Input<pulumi.Input<inputs.Redis.RedisClusterGetOciCacheUserOciCacheUser>[]>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    redisClusterId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RedisClusterGetOciCacheUser resource.
 */
export interface RedisClusterGetOciCacheUserArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm#Oracle) of the cluster.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    redisClusterId: pulumi.Input<string>;
}
