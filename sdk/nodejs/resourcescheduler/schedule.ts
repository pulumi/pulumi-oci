// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Schedule resource in Oracle Cloud Infrastructure Resource Scheduler service.
 *
 * This API creates a schedule. You must provide either resources or resourceFilters.
 *
 * ## Import
 *
 * Schedules can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:ResourceScheduler/schedule:Schedule test_schedule "id"
 * ```
 */
export class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduleState, opts?: pulumi.CustomResourceOptions): Schedule {
        return new Schedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:ResourceScheduler/schedule:Schedule';

    /**
     * Returns true if the given object is an instance of Schedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Schedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Schedule.__pulumiType;
    }

    /**
     * (Updatable) This is the action that will be executed by the schedule.
     * <<<<<<< ours
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the schedule is created
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) These are defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) This is the description of the schedule.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) This is a user-friendly name for the schedule. It does not have to be unique, and it's changeable.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) These are free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     * >>>>>>> theirs
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * This is the status of the last work request.
     */
    public /*out*/ readonly lastRunStatus!: pulumi.Output<string>;
    /**
     * (Updatable) This is the frequency of recurrence of a schedule. The frequency field can either conform to RFC-5545 formatting or UNIX cron formatting for recurrences, based on the value specified by the recurrenceType field. Example: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1`
     *
     * >>>>>>> theirs
     */
    public readonly recurrenceDetails!: pulumi.Output<string>;
    /**
     * (Updatable) Type of recurrence of a schedule. Could be set to `ICAL`, `CRON`
     */
    public readonly recurrenceType!: pulumi.Output<string>;
    /**
     * (Updatable) This is a list of resources filters.  The schedule will be applied to resources matching all of them.
     */
    public readonly resourceFilters!: pulumi.Output<outputs.ResourceScheduler.ScheduleResourceFilter[]>;
    /**
     * (Updatable) This is the list of resources to which the scheduled operation is applied.
     */
    public readonly resources!: pulumi.Output<outputs.ResourceScheduler.ScheduleResource[]>;
    /**
     * (Updatable) The target state for the Schedule. Could be set to `ACTIVE` or `INACTIVE`. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly state!: pulumi.Output<string>;
    /**
     * These are system tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * This is the date and time the schedule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * (Updatable) This is the date and time the schedule ends, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
     */
    public readonly timeEnds!: pulumi.Output<string>;
    /**
     * This is the date and time the schedule runs last time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeLastRun!: pulumi.Output<string>;
    /**
     * This is the date and time the schedule run the next time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeNextRun!: pulumi.Output<string>;
    /**
     * (Updatable) This is the date and time the schedule starts, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
     */
    public readonly timeStarts!: pulumi.Output<string>;
    /**
     * This is the date and time the schedule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduleArgs | ScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScheduleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lastRunStatus"] = state ? state.lastRunStatus : undefined;
            resourceInputs["recurrenceDetails"] = state ? state.recurrenceDetails : undefined;
            resourceInputs["recurrenceType"] = state ? state.recurrenceType : undefined;
            resourceInputs["resourceFilters"] = state ? state.resourceFilters : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeEnds"] = state ? state.timeEnds : undefined;
            resourceInputs["timeLastRun"] = state ? state.timeLastRun : undefined;
            resourceInputs["timeNextRun"] = state ? state.timeNextRun : undefined;
            resourceInputs["timeStarts"] = state ? state.timeStarts : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as ScheduleArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.recurrenceDetails === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recurrenceDetails'");
            }
            if ((!args || args.recurrenceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recurrenceType'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["recurrenceDetails"] = args ? args.recurrenceDetails : undefined;
            resourceInputs["recurrenceType"] = args ? args.recurrenceType : undefined;
            resourceInputs["resourceFilters"] = args ? args.resourceFilters : undefined;
            resourceInputs["resources"] = args ? args.resources : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["timeEnds"] = args ? args.timeEnds : undefined;
            resourceInputs["timeStarts"] = args ? args.timeStarts : undefined;
            resourceInputs["lastRunStatus"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeLastRun"] = undefined /*out*/;
            resourceInputs["timeNextRun"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Schedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Schedule resources.
 */
export interface ScheduleState {
    /**
     * (Updatable) This is the action that will be executed by the schedule.
     * <<<<<<< ours
     */
    action?: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the schedule is created
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) These are defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) This is the description of the schedule.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) This is a user-friendly name for the schedule. It does not have to be unique, and it's changeable.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) These are free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     * >>>>>>> theirs
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * This is the status of the last work request.
     */
    lastRunStatus?: pulumi.Input<string>;
    /**
     * (Updatable) This is the frequency of recurrence of a schedule. The frequency field can either conform to RFC-5545 formatting or UNIX cron formatting for recurrences, based on the value specified by the recurrenceType field. Example: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1`
     *
     * >>>>>>> theirs
     */
    recurrenceDetails?: pulumi.Input<string>;
    /**
     * (Updatable) Type of recurrence of a schedule. Could be set to `ICAL`, `CRON`
     */
    recurrenceType?: pulumi.Input<string>;
    /**
     * (Updatable) This is a list of resources filters.  The schedule will be applied to resources matching all of them.
     */
    resourceFilters?: pulumi.Input<pulumi.Input<inputs.ResourceScheduler.ScheduleResourceFilter>[]>;
    /**
     * (Updatable) This is the list of resources to which the scheduled operation is applied.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ResourceScheduler.ScheduleResource>[]>;
    /**
     * (Updatable) The target state for the Schedule. Could be set to `ACTIVE` or `INACTIVE`. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    state?: pulumi.Input<string>;
    /**
     * These are system tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * This is the date and time the schedule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * (Updatable) This is the date and time the schedule ends, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
     */
    timeEnds?: pulumi.Input<string>;
    /**
     * This is the date and time the schedule runs last time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeLastRun?: pulumi.Input<string>;
    /**
     * This is the date and time the schedule run the next time, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeNextRun?: pulumi.Input<string>;
    /**
     * (Updatable) This is the date and time the schedule starts, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
     */
    timeStarts?: pulumi.Input<string>;
    /**
     * This is the date and time the schedule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    /**
     * (Updatable) This is the action that will be executed by the schedule.
     * <<<<<<< ours
     */
    action: pulumi.Input<string>;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the schedule is created
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) These are defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) This is the description of the schedule.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) This is a user-friendly name for the schedule. It does not have to be unique, and it's changeable.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) These are free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     * >>>>>>> theirs
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) This is the frequency of recurrence of a schedule. The frequency field can either conform to RFC-5545 formatting or UNIX cron formatting for recurrences, based on the value specified by the recurrenceType field. Example: `FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1`
     *
     * >>>>>>> theirs
     */
    recurrenceDetails: pulumi.Input<string>;
    /**
     * (Updatable) Type of recurrence of a schedule. Could be set to `ICAL`, `CRON`
     */
    recurrenceType: pulumi.Input<string>;
    /**
     * (Updatable) This is a list of resources filters.  The schedule will be applied to resources matching all of them.
     */
    resourceFilters?: pulumi.Input<pulumi.Input<inputs.ResourceScheduler.ScheduleResourceFilter>[]>;
    /**
     * (Updatable) This is the list of resources to which the scheduled operation is applied.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.ResourceScheduler.ScheduleResource>[]>;
    /**
     * (Updatable) The target state for the Schedule. Could be set to `ACTIVE` or `INACTIVE`. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) This is the date and time the schedule ends, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
     */
    timeEnds?: pulumi.Input<string>;
    /**
     * (Updatable) This is the date and time the schedule starts, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339)  Example: `2016-08-25T21:10:29.600Z`
     */
    timeStarts?: pulumi.Input<string>;
}
