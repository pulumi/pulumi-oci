// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Connector Plugin resource in Oracle Cloud Infrastructure Service Connector Hub service.
 *
 * Gets the specified connector plugin configuration information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConnectorPlugin = oci.Sch.getConnectorPlugin({
 *     connectorPluginName: testConnectorPluginOciSchConnectorPlugin.name,
 * });
 * ```
 */
export function getConnectorPlugin(args: GetConnectorPluginArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorPluginResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Sch/getConnectorPlugin:getConnectorPlugin", {
        "connectorPluginName": args.connectorPluginName,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectorPlugin.
 */
export interface GetConnectorPluginArgs {
    /**
     * The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
     */
    connectorPluginName: string;
}

/**
 * A collection of values returned by getConnectorPlugin.
 */
export interface GetConnectorPluginResult {
    readonly connectorPluginName: string;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * The estimated throughput range (LOW, MEDIUM, HIGH).
     */
    readonly estimatedThroughput: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The plugin type discriminator.
     */
    readonly kind: string;
    /**
     * The estimated maximum period of time the data will be kept at the source. The duration is specified as a string in ISO 8601 format (P1D for one day or P30D for thrity days).
     */
    readonly maxRetention: string;
    /**
     * The service to be called by the connector plugin. Example: `QueueSource`
     */
    readonly name: string;
    /**
     * Gets the specified connector plugin configuration information in OpenAPI specification format.
     */
    readonly schema: string;
    /**
     * The current state of the service connector.
     */
    readonly state: string;
    /**
     * The date and time when this plugin became available. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2023-09-09T21:10:29.600Z`
     */
    readonly timeCreated: string;
}
/**
 * This data source provides details about a specific Connector Plugin resource in Oracle Cloud Infrastructure Service Connector Hub service.
 *
 * Gets the specified connector plugin configuration information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConnectorPlugin = oci.Sch.getConnectorPlugin({
 *     connectorPluginName: testConnectorPluginOciSchConnectorPlugin.name,
 * });
 * ```
 */
export function getConnectorPluginOutput(args: GetConnectorPluginOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConnectorPluginResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Sch/getConnectorPlugin:getConnectorPlugin", {
        "connectorPluginName": args.connectorPluginName,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectorPlugin.
 */
export interface GetConnectorPluginOutputArgs {
    /**
     * The name of the connector plugin. This name indicates the service to be called by the connector plugin. For example, `QueueSource` indicates the Queue service.
     */
    connectorPluginName: pulumi.Input<string>;
}
