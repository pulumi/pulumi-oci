// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Connector Plugins in Oracle Cloud Infrastructure Service Connector Hub service.
 *
 * Lists connector plugins according to the specified filter.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConnectorPlugins = oci.Sch.getConnectorPlugins({
 *     displayName: connectorPluginDisplayName,
 *     name: connectorPluginName,
 *     state: connectorPluginState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getConnectorPlugins(args?: GetConnectorPluginsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorPluginsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Sch/getConnectorPlugins:getConnectorPlugins", {
        "displayName": args.displayName,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectorPlugins.
 */
export interface GetConnectorPluginsArgs {
    /**
     * A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
     */
    displayName?: string;
    filters?: inputs.Sch.GetConnectorPluginsFilter[];
    /**
     * A filter to return only resources that match the given connector plugin name ignoring case.  Example: `QueueSource`
     */
    name?: string;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
     */
    state?: string;
}

/**
 * A collection of values returned by getConnectorPlugins.
 */
export interface GetConnectorPluginsResult {
    /**
     * The list of connector_plugin_collection.
     */
    readonly connectorPluginCollections: outputs.Sch.GetConnectorPluginsConnectorPluginCollection[];
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Sch.GetConnectorPluginsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The service to be called by the connector plugin. Example: `QueueSource`
     */
    readonly name?: string;
    /**
     * The current state of the service connector.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Connector Plugins in Oracle Cloud Infrastructure Service Connector Hub service.
 *
 * Lists connector plugins according to the specified filter.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConnectorPlugins = oci.Sch.getConnectorPlugins({
 *     displayName: connectorPluginDisplayName,
 *     name: connectorPluginName,
 *     state: connectorPluginState,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getConnectorPluginsOutput(args?: GetConnectorPluginsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorPluginsResult> {
    return pulumi.output(args).apply((a: any) => getConnectorPlugins(a, opts))
}

/**
 * A collection of arguments for invoking getConnectorPlugins.
 */
export interface GetConnectorPluginsOutputArgs {
    /**
     * A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Sch.GetConnectorPluginsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the given connector plugin name ignoring case.  Example: `QueueSource`
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
     */
    state?: pulumi.Input<string>;
}
