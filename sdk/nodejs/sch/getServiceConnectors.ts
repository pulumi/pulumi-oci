// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Service Connectors in Oracle Cloud Infrastructure Service Connector Hub service.
 *
 * Lists service connectors in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceConnectors = oci.Sch.getServiceConnectors({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.service_connector_display_name,
 *     state: _var.service_connector_state,
 * });
 * ```
 */
export function getServiceConnectors(args: GetServiceConnectorsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceConnectorsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Sch/getServiceConnectors:getServiceConnectors", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceConnectors.
 */
export interface GetServiceConnectorsArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
     */
    compartmentId: string;
    /**
     * A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
     */
    displayName?: string;
    filters?: inputs.Sch.GetServiceConnectorsFilter[];
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
     */
    state?: string;
}

/**
 * A collection of values returned by getServiceConnectors.
 */
export interface GetServiceConnectorsResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric.
     */
    readonly compartmentId: string;
    /**
     * A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     */
    readonly displayName?: string;
    readonly filters?: outputs.Sch.GetServiceConnectorsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id?: string;
    /**
     * The list of service_connector_collection.
     */
    readonly serviceConnectorCollections?: outputs.Sch.GetServiceConnectorsServiceConnectorCollection[];
    /**
     * The current state of the service connector.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Service Connectors in Oracle Cloud Infrastructure Service Connector Hub service.
 *
 * Lists service connectors in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceConnectors = oci.Sch.getServiceConnectors({
 *     compartmentId: _var.compartment_id,
 *     displayName: _var.service_connector_display_name,
 *     state: _var.service_connector_state,
 * });
 * ```
 */
export function getServiceConnectorsOutput(args: GetServiceConnectorsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceConnectorsResult> {
    return pulumi.output(args).apply((a: any) => getServiceConnectors(a, opts))
}

/**
 * A collection of arguments for invoking getServiceConnectors.
 */
export interface GetServiceConnectorsOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment for this request.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given display name exactly.  Example: `exampleServiceConnector`
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Sch.GetServiceConnectorsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the given lifecycle state.  Example: `ACTIVE`
     */
    state?: pulumi.Input<string>;
}
