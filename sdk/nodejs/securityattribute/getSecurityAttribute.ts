// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Security Attribute resource in Oracle Cloud Infrastructure Security Attribute service.
 *
 * Gets the specified security attribute's information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityAttribute = oci.SecurityAttribute.getSecurityAttribute({
 *     securityAttributeName: testSecurityAttributeOciSecurityAttributeSecurityAttribute.name,
 *     securityAttributeNamespaceId: testSecurityAttributeNamespace.id,
 * });
 * ```
 */
export function getSecurityAttribute(args: GetSecurityAttributeArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityAttributeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:SecurityAttribute/getSecurityAttribute:getSecurityAttribute", {
        "securityAttributeName": args.securityAttributeName,
        "securityAttributeNamespaceId": args.securityAttributeNamespaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityAttribute.
 */
export interface GetSecurityAttributeArgs {
    /**
     * The name of the security attribute.
     */
    securityAttributeName: string;
    /**
     * The OCID of the security attribute namespace.
     */
    securityAttributeNamespaceId: string;
}

/**
 * A collection of values returned by getSecurityAttribute.
 */
export interface GetSecurityAttributeResult {
    /**
     * The OCID of the compartment that contains the security attribute definition.
     */
    readonly compartmentId: string;
    /**
     * The description you assign to the security attribute.
     */
    readonly description: string;
    /**
     * The OCID of the security attribute definition.
     */
    readonly id: string;
    /**
     * Indicates whether the security attribute is retired. See [Managing Security Attribute Namespaces](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/managing-security-attribute-namespaces.htm).
     */
    readonly isRetired: boolean;
    /**
     * The name assigned to the security attribute during creation. This is the security attribute key. The name must be unique within the security attribute namespace and cannot be changed.
     */
    readonly name: string;
    readonly securityAttributeName: string;
    /**
     * The OCID of the security attribute namespace that contains the security attribute definition.
     */
    readonly securityAttributeNamespaceId: string;
    /**
     * The name of the security attribute namespace that contains the security attribute.
     */
    readonly securityAttributeNamespaceName: string;
    /**
     * The security attribute's current state. After creating a security attribute, make sure its `lifecycleState` is ACTIVE before using it. After retiring a security attribute, make sure its `lifecycleState` is INACTIVE before using it. If you delete a security attribute, you cannot delete another security attribute until the deleted security attribute's `lifecycleState` changes from DELETING to DELETED.
     */
    readonly state: string;
    /**
     * Date and time the security attribute was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     */
    readonly timeCreated: string;
    /**
     * The data type of the security attribute.
     */
    readonly type: string;
    /**
     * Validates a security attribute value. Each validator performs validation steps in addition to the standard validation for security attribute values. For more information, see [Limits on Security Attributes](https://docs.cloud.oracle.com/iaas/Content/zero-trust-packet-routing/overview.htm).
     */
    readonly validators: outputs.SecurityAttribute.GetSecurityAttributeValidator[];
}
/**
 * This data source provides details about a specific Security Attribute resource in Oracle Cloud Infrastructure Security Attribute service.
 *
 * Gets the specified security attribute's information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityAttribute = oci.SecurityAttribute.getSecurityAttribute({
 *     securityAttributeName: testSecurityAttributeOciSecurityAttributeSecurityAttribute.name,
 *     securityAttributeNamespaceId: testSecurityAttributeNamespace.id,
 * });
 * ```
 */
export function getSecurityAttributeOutput(args: GetSecurityAttributeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecurityAttributeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:SecurityAttribute/getSecurityAttribute:getSecurityAttribute", {
        "securityAttributeName": args.securityAttributeName,
        "securityAttributeNamespaceId": args.securityAttributeNamespaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityAttribute.
 */
export interface GetSecurityAttributeOutputArgs {
    /**
     * The name of the security attribute.
     */
    securityAttributeName: pulumi.Input<string>;
    /**
     * The OCID of the security attribute namespace.
     */
    securityAttributeNamespaceId: pulumi.Input<string>;
}
