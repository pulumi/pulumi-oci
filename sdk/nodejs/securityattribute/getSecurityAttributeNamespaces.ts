// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Security Attribute Namespaces in Oracle Cloud Infrastructure Security Attribute service.
 *
 * Lists the security attribute namespaces in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityAttributeNamespaces = oci.SecurityAttribute.getSecurityAttributeNamespaces({
 *     compartmentId: compartmentId,
 *     compartmentIdInSubtree: securityAttributeNamespaceCompartmentIdInSubtree,
 *     name: securityAttributeNamespaceName,
 *     state: securityAttributeNamespaceState,
 * });
 * ```
 */
export function getSecurityAttributeNamespaces(args?: GetSecurityAttributeNamespacesArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityAttributeNamespacesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:SecurityAttribute/getSecurityAttributeNamespaces:getSecurityAttributeNamespaces", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityAttributeNamespaces.
 */
export interface GetSecurityAttributeNamespacesArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: string;
    /**
     * An optional boolean parameter indicating whether to retrieve all security attribute namespaces in subcompartments. If this parameter is not specified, only the namespaces defined in the specified compartment are retrieved.
     */
    compartmentIdInSubtree?: boolean;
    filters?: inputs.SecurityAttribute.GetSecurityAttributeNamespacesFilter[];
    /**
     * A filter to return only resources that match the entire display name given.
     */
    name?: string;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state?: string;
}

/**
 * A collection of values returned by getSecurityAttributeNamespaces.
 */
export interface GetSecurityAttributeNamespacesResult {
    /**
     * The OCID of the compartment that contains the security attribute namespace.
     */
    readonly compartmentId?: string;
    readonly compartmentIdInSubtree?: boolean;
    readonly filters?: outputs.SecurityAttribute.GetSecurityAttributeNamespacesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the security attribute namespace. It must be unique across all security attribute namespaces in the tenancy and cannot be changed.
     */
    readonly name?: string;
    /**
     * The list of security_attribute_namespaces.
     */
    readonly securityAttributeNamespaces: outputs.SecurityAttribute.GetSecurityAttributeNamespacesSecurityAttributeNamespace[];
    /**
     * The security attribute namespace's current state. After creating a security attribute namespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a security attribute namespace, make sure its `lifecycleState` is INACTIVE.
     */
    readonly state?: string;
}
/**
 * This data source provides the list of Security Attribute Namespaces in Oracle Cloud Infrastructure Security Attribute service.
 *
 * Lists the security attribute namespaces in the specified compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSecurityAttributeNamespaces = oci.SecurityAttribute.getSecurityAttributeNamespaces({
 *     compartmentId: compartmentId,
 *     compartmentIdInSubtree: securityAttributeNamespaceCompartmentIdInSubtree,
 *     name: securityAttributeNamespaceName,
 *     state: securityAttributeNamespaceState,
 * });
 * ```
 */
export function getSecurityAttributeNamespacesOutput(args?: GetSecurityAttributeNamespacesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecurityAttributeNamespacesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:SecurityAttribute/getSecurityAttributeNamespaces:getSecurityAttributeNamespaces", {
        "compartmentId": args.compartmentId,
        "compartmentIdInSubtree": args.compartmentIdInSubtree,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecurityAttributeNamespaces.
 */
export interface GetSecurityAttributeNamespacesOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * An optional boolean parameter indicating whether to retrieve all security attribute namespaces in subcompartments. If this parameter is not specified, only the namespaces defined in the specified compartment are retrieved.
     */
    compartmentIdInSubtree?: pulumi.Input<boolean>;
    filters?: pulumi.Input<pulumi.Input<inputs.SecurityAttribute.GetSecurityAttributeNamespacesFilterArgs>[]>;
    /**
     * A filter to return only resources that match the entire display name given.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
}
