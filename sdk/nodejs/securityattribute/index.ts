// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetSecurityAttributeArgs, GetSecurityAttributeResult, GetSecurityAttributeOutputArgs } from "./getSecurityAttribute";
export const getSecurityAttribute: typeof import("./getSecurityAttribute").getSecurityAttribute = null as any;
export const getSecurityAttributeOutput: typeof import("./getSecurityAttribute").getSecurityAttributeOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityAttribute","getSecurityAttributeOutput"], () => require("./getSecurityAttribute"));

export { GetSecurityAttributeNamespaceArgs, GetSecurityAttributeNamespaceResult, GetSecurityAttributeNamespaceOutputArgs } from "./getSecurityAttributeNamespace";
export const getSecurityAttributeNamespace: typeof import("./getSecurityAttributeNamespace").getSecurityAttributeNamespace = null as any;
export const getSecurityAttributeNamespaceOutput: typeof import("./getSecurityAttributeNamespace").getSecurityAttributeNamespaceOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityAttributeNamespace","getSecurityAttributeNamespaceOutput"], () => require("./getSecurityAttributeNamespace"));

export { GetSecurityAttributeNamespacesArgs, GetSecurityAttributeNamespacesResult, GetSecurityAttributeNamespacesOutputArgs } from "./getSecurityAttributeNamespaces";
export const getSecurityAttributeNamespaces: typeof import("./getSecurityAttributeNamespaces").getSecurityAttributeNamespaces = null as any;
export const getSecurityAttributeNamespacesOutput: typeof import("./getSecurityAttributeNamespaces").getSecurityAttributeNamespacesOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityAttributeNamespaces","getSecurityAttributeNamespacesOutput"], () => require("./getSecurityAttributeNamespaces"));

export { GetSecurityAttributesArgs, GetSecurityAttributesResult, GetSecurityAttributesOutputArgs } from "./getSecurityAttributes";
export const getSecurityAttributes: typeof import("./getSecurityAttributes").getSecurityAttributes = null as any;
export const getSecurityAttributesOutput: typeof import("./getSecurityAttributes").getSecurityAttributesOutput = null as any;
utilities.lazyLoad(exports, ["getSecurityAttributes","getSecurityAttributesOutput"], () => require("./getSecurityAttributes"));

export { SecurityAttributeArgs, SecurityAttributeState } from "./securityAttribute";
export type SecurityAttribute = import("./securityAttribute").SecurityAttribute;
export const SecurityAttribute: typeof import("./securityAttribute").SecurityAttribute = null as any;
utilities.lazyLoad(exports, ["SecurityAttribute"], () => require("./securityAttribute"));

export { SecurityAttributeNamespaceArgs, SecurityAttributeNamespaceState } from "./securityAttributeNamespace";
export type SecurityAttributeNamespace = import("./securityAttributeNamespace").SecurityAttributeNamespace;
export const SecurityAttributeNamespace: typeof import("./securityAttributeNamespace").SecurityAttributeNamespace = null as any;
utilities.lazyLoad(exports, ["SecurityAttributeNamespace"], () => require("./securityAttributeNamespace"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:SecurityAttribute/securityAttribute:SecurityAttribute":
                return new SecurityAttribute(name, <any>undefined, { urn })
            case "oci:SecurityAttribute/securityAttributeNamespace:SecurityAttributeNamespace":
                return new SecurityAttributeNamespace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "SecurityAttribute/securityAttribute", _module)
pulumi.runtime.registerResourceModule("oci", "SecurityAttribute/securityAttributeNamespace", _module)
