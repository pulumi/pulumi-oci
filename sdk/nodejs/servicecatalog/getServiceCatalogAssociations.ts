// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Service Catalog Associations in Oracle Cloud Infrastructure Service Catalog service.
 *
 * Lists all the resource associations for a specific service catalog.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceCatalogAssociations = oci.ServiceCatalog.getServiceCatalogAssociations({
 *     entityId: testEntity.id,
 *     entityType: serviceCatalogAssociationEntityType,
 *     serviceCatalogAssociationId: testServiceCatalogAssociation.id,
 *     serviceCatalogId: testServiceCatalog.id,
 * });
 * ```
 */
export function getServiceCatalogAssociations(args?: GetServiceCatalogAssociationsArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceCatalogAssociationsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:ServiceCatalog/getServiceCatalogAssociations:getServiceCatalogAssociations", {
        "entityId": args.entityId,
        "entityType": args.entityType,
        "filters": args.filters,
        "serviceCatalogAssociationId": args.serviceCatalogAssociationId,
        "serviceCatalogId": args.serviceCatalogId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceCatalogAssociations.
 */
export interface GetServiceCatalogAssociationsArgs {
    /**
     * The unique identifier of the entity associated with service catalog.
     */
    entityId?: string;
    /**
     * The type of the application in the service catalog.
     */
    entityType?: string;
    filters?: inputs.ServiceCatalog.GetServiceCatalogAssociationsFilter[];
    /**
     * The unique identifier for the service catalog association.
     */
    serviceCatalogAssociationId?: string;
    /**
     * The unique identifier for the service catalog.
     */
    serviceCatalogId?: string;
}

/**
 * A collection of values returned by getServiceCatalogAssociations.
 */
export interface GetServiceCatalogAssociationsResult {
    /**
     * Identifier of the entity being associated with service catalog.
     */
    readonly entityId?: string;
    /**
     * The type of the entity that is associated with the service catalog.
     */
    readonly entityType?: string;
    readonly filters?: outputs.ServiceCatalog.GetServiceCatalogAssociationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of service_catalog_association_collection.
     */
    readonly serviceCatalogAssociationCollections: outputs.ServiceCatalog.GetServiceCatalogAssociationsServiceCatalogAssociationCollection[];
    readonly serviceCatalogAssociationId?: string;
    /**
     * Identifier of the service catalog.
     */
    readonly serviceCatalogId?: string;
}
/**
 * This data source provides the list of Service Catalog Associations in Oracle Cloud Infrastructure Service Catalog service.
 *
 * Lists all the resource associations for a specific service catalog.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testServiceCatalogAssociations = oci.ServiceCatalog.getServiceCatalogAssociations({
 *     entityId: testEntity.id,
 *     entityType: serviceCatalogAssociationEntityType,
 *     serviceCatalogAssociationId: testServiceCatalogAssociation.id,
 *     serviceCatalogId: testServiceCatalog.id,
 * });
 * ```
 */
export function getServiceCatalogAssociationsOutput(args?: GetServiceCatalogAssociationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceCatalogAssociationsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:ServiceCatalog/getServiceCatalogAssociations:getServiceCatalogAssociations", {
        "entityId": args.entityId,
        "entityType": args.entityType,
        "filters": args.filters,
        "serviceCatalogAssociationId": args.serviceCatalogAssociationId,
        "serviceCatalogId": args.serviceCatalogId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceCatalogAssociations.
 */
export interface GetServiceCatalogAssociationsOutputArgs {
    /**
     * The unique identifier of the entity associated with service catalog.
     */
    entityId?: pulumi.Input<string>;
    /**
     * The type of the application in the service catalog.
     */
    entityType?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.ServiceCatalog.GetServiceCatalogAssociationsFilterArgs>[]>;
    /**
     * The unique identifier for the service catalog association.
     */
    serviceCatalogAssociationId?: pulumi.Input<string>;
    /**
     * The unique identifier for the service catalog.
     */
    serviceCatalogId?: pulumi.Input<string>;
}
