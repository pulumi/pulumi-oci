// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CatalogArgs, CatalogState } from "./catalog";
export type Catalog = import("./catalog").Catalog;
export const Catalog: typeof import("./catalog").Catalog = null as any;
utilities.lazyLoad(exports, ["Catalog"], () => require("./catalog"));

export { CatalogAssociationArgs, CatalogAssociationState } from "./catalogAssociation";
export type CatalogAssociation = import("./catalogAssociation").CatalogAssociation;
export const CatalogAssociation: typeof import("./catalogAssociation").CatalogAssociation = null as any;
utilities.lazyLoad(exports, ["CatalogAssociation"], () => require("./catalogAssociation"));

export { GetPrivateApplicationArgs, GetPrivateApplicationResult, GetPrivateApplicationOutputArgs } from "./getPrivateApplication";
export const getPrivateApplication: typeof import("./getPrivateApplication").getPrivateApplication = null as any;
export const getPrivateApplicationOutput: typeof import("./getPrivateApplication").getPrivateApplicationOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateApplication","getPrivateApplicationOutput"], () => require("./getPrivateApplication"));

export { GetPrivateApplicationPackageArgs, GetPrivateApplicationPackageResult, GetPrivateApplicationPackageOutputArgs } from "./getPrivateApplicationPackage";
export const getPrivateApplicationPackage: typeof import("./getPrivateApplicationPackage").getPrivateApplicationPackage = null as any;
export const getPrivateApplicationPackageOutput: typeof import("./getPrivateApplicationPackage").getPrivateApplicationPackageOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateApplicationPackage","getPrivateApplicationPackageOutput"], () => require("./getPrivateApplicationPackage"));

export { GetPrivateApplicationPackagesArgs, GetPrivateApplicationPackagesResult, GetPrivateApplicationPackagesOutputArgs } from "./getPrivateApplicationPackages";
export const getPrivateApplicationPackages: typeof import("./getPrivateApplicationPackages").getPrivateApplicationPackages = null as any;
export const getPrivateApplicationPackagesOutput: typeof import("./getPrivateApplicationPackages").getPrivateApplicationPackagesOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateApplicationPackages","getPrivateApplicationPackagesOutput"], () => require("./getPrivateApplicationPackages"));

export { GetPrivateApplicationsArgs, GetPrivateApplicationsResult, GetPrivateApplicationsOutputArgs } from "./getPrivateApplications";
export const getPrivateApplications: typeof import("./getPrivateApplications").getPrivateApplications = null as any;
export const getPrivateApplicationsOutput: typeof import("./getPrivateApplications").getPrivateApplicationsOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateApplications","getPrivateApplicationsOutput"], () => require("./getPrivateApplications"));

export { GetServiceCatalogArgs, GetServiceCatalogResult, GetServiceCatalogOutputArgs } from "./getServiceCatalog";
export const getServiceCatalog: typeof import("./getServiceCatalog").getServiceCatalog = null as any;
export const getServiceCatalogOutput: typeof import("./getServiceCatalog").getServiceCatalogOutput = null as any;
utilities.lazyLoad(exports, ["getServiceCatalog","getServiceCatalogOutput"], () => require("./getServiceCatalog"));

export { GetServiceCatalogAssociationArgs, GetServiceCatalogAssociationResult, GetServiceCatalogAssociationOutputArgs } from "./getServiceCatalogAssociation";
export const getServiceCatalogAssociation: typeof import("./getServiceCatalogAssociation").getServiceCatalogAssociation = null as any;
export const getServiceCatalogAssociationOutput: typeof import("./getServiceCatalogAssociation").getServiceCatalogAssociationOutput = null as any;
utilities.lazyLoad(exports, ["getServiceCatalogAssociation","getServiceCatalogAssociationOutput"], () => require("./getServiceCatalogAssociation"));

export { GetServiceCatalogAssociationsArgs, GetServiceCatalogAssociationsResult, GetServiceCatalogAssociationsOutputArgs } from "./getServiceCatalogAssociations";
export const getServiceCatalogAssociations: typeof import("./getServiceCatalogAssociations").getServiceCatalogAssociations = null as any;
export const getServiceCatalogAssociationsOutput: typeof import("./getServiceCatalogAssociations").getServiceCatalogAssociationsOutput = null as any;
utilities.lazyLoad(exports, ["getServiceCatalogAssociations","getServiceCatalogAssociationsOutput"], () => require("./getServiceCatalogAssociations"));

export { GetServiceCatalogsArgs, GetServiceCatalogsResult, GetServiceCatalogsOutputArgs } from "./getServiceCatalogs";
export const getServiceCatalogs: typeof import("./getServiceCatalogs").getServiceCatalogs = null as any;
export const getServiceCatalogsOutput: typeof import("./getServiceCatalogs").getServiceCatalogsOutput = null as any;
utilities.lazyLoad(exports, ["getServiceCatalogs","getServiceCatalogsOutput"], () => require("./getServiceCatalogs"));

export { PrivateApplicationArgs, PrivateApplicationState } from "./privateApplication";
export type PrivateApplication = import("./privateApplication").PrivateApplication;
export const PrivateApplication: typeof import("./privateApplication").PrivateApplication = null as any;
utilities.lazyLoad(exports, ["PrivateApplication"], () => require("./privateApplication"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:ServiceCatalog/catalog:Catalog":
                return new Catalog(name, <any>undefined, { urn })
            case "oci:ServiceCatalog/catalogAssociation:CatalogAssociation":
                return new CatalogAssociation(name, <any>undefined, { urn })
            case "oci:ServiceCatalog/privateApplication:PrivateApplication":
                return new PrivateApplication(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "ServiceCatalog/catalog", _module)
pulumi.runtime.registerResourceModule("oci", "ServiceCatalog/catalogAssociation", _module)
pulumi.runtime.registerResourceModule("oci", "ServiceCatalog/privateApplication", _module)
