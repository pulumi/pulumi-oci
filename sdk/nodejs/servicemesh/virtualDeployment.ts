// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Virtual Deployment resource in Oracle Cloud Infrastructure Service Mesh service.
 *
 * Creates a new VirtualDeployment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testVirtualDeployment = new oci.servicemesh.VirtualDeployment("test_virtual_deployment", {
 *     compartmentId: compartmentId,
 *     name: virtualDeploymentName,
 *     virtualServiceId: testVirtualService.id,
 *     accessLogging: {
 *         isEnabled: virtualDeploymentAccessLoggingIsEnabled,
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: virtualDeploymentDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     listeners: [{
 *         port: virtualDeploymentListenersPort,
 *         protocol: virtualDeploymentListenersProtocol,
 *         idleTimeoutInMs: virtualDeploymentListenersIdleTimeoutInMs,
 *         requestTimeoutInMs: virtualDeploymentListenersRequestTimeoutInMs,
 *     }],
 *     serviceDiscovery: {
 *         type: virtualDeploymentServiceDiscoveryType,
 *         hostname: virtualDeploymentServiceDiscoveryHostname,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * VirtualDeployments can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:ServiceMesh/virtualDeployment:VirtualDeployment test_virtual_deployment "id"
 * ```
 */
export class VirtualDeployment extends pulumi.CustomResource {
    /**
     * Get an existing VirtualDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualDeploymentState, opts?: pulumi.CustomResourceOptions): VirtualDeployment {
        return new VirtualDeployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:ServiceMesh/virtualDeployment:VirtualDeployment';

    /**
     * Returns true if the given object is an instance of VirtualDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualDeployment.__pulumiType;
    }

    /**
     * (Updatable) This configuration determines if logging is enabled and where the logs will be output.
     */
    public readonly accessLogging!: pulumi.Output<outputs.ServiceMesh.VirtualDeploymentAccessLogging>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     */
    public /*out*/ readonly lifecycleDetails!: pulumi.Output<string>;
    /**
     * (Updatable) The listeners for the virtual deployment.
     */
    public readonly listeners!: pulumi.Output<outputs.ServiceMesh.VirtualDeploymentListener[]>;
    /**
     * A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) Service Discovery configuration for virtual deployments.
     */
    public readonly serviceDiscovery!: pulumi.Output<outputs.ServiceMesh.VirtualDeploymentServiceDiscovery>;
    /**
     * The current state of the Resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The time when this resource was created in an RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The time when this resource was updated in an RFC3339 formatted datetime string.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * The OCID of the service mesh in which this access policy is created.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly virtualServiceId!: pulumi.Output<string>;

    /**
     * Create a VirtualDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualDeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualDeploymentArgs | VirtualDeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VirtualDeploymentState | undefined;
            resourceInputs["accessLogging"] = state ? state.accessLogging : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["lifecycleDetails"] = state ? state.lifecycleDetails : undefined;
            resourceInputs["listeners"] = state ? state.listeners : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serviceDiscovery"] = state ? state.serviceDiscovery : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["virtualServiceId"] = state ? state.virtualServiceId : undefined;
        } else {
            const args = argsOrState as VirtualDeploymentArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.virtualServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualServiceId'");
            }
            resourceInputs["accessLogging"] = args ? args.accessLogging : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["listeners"] = args ? args.listeners : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serviceDiscovery"] = args ? args.serviceDiscovery : undefined;
            resourceInputs["virtualServiceId"] = args ? args.virtualServiceId : undefined;
            resourceInputs["lifecycleDetails"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualDeployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualDeployment resources.
 */
export interface VirtualDeploymentState {
    /**
     * (Updatable) This configuration determines if logging is enabled and where the logs will be output.
     */
    accessLogging?: pulumi.Input<inputs.ServiceMesh.VirtualDeploymentAccessLogging>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in a Failed state.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * (Updatable) The listeners for the virtual deployment.
     */
    listeners?: pulumi.Input<pulumi.Input<inputs.ServiceMesh.VirtualDeploymentListener>[]>;
    /**
     * A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Service Discovery configuration for virtual deployments.
     */
    serviceDiscovery?: pulumi.Input<inputs.ServiceMesh.VirtualDeploymentServiceDiscovery>;
    /**
     * The current state of the Resource.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time when this resource was created in an RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The time when this resource was updated in an RFC3339 formatted datetime string.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * The OCID of the service mesh in which this access policy is created.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    virtualServiceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualDeployment resource.
 */
export interface VirtualDeploymentArgs {
    /**
     * (Updatable) This configuration determines if logging is enabled and where the logs will be output.
     */
    accessLogging?: pulumi.Input<inputs.ServiceMesh.VirtualDeploymentAccessLogging>;
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Description of the resource. It can be changed after creation. Avoid entering confidential information.  Example: `This is my new resource`
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) The listeners for the virtual deployment.
     */
    listeners?: pulumi.Input<pulumi.Input<inputs.ServiceMesh.VirtualDeploymentListener>[]>;
    /**
     * A user-friendly name. The name must be unique within the same virtual service and cannot be changed after creation. Avoid entering confidential information.  Example: `My unique resource name`
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Service Discovery configuration for virtual deployments.
     */
    serviceDiscovery?: pulumi.Input<inputs.ServiceMesh.VirtualDeploymentServiceDiscovery>;
    /**
     * The OCID of the service mesh in which this access policy is created.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    virtualServiceId: pulumi.Input<string>;
}
