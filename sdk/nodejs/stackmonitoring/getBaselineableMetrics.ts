// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Baselineable Metrics in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * List of summary of baseline-able metrics for a given resource group if specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBaselineableMetrics = oci.StackMonitoring.getBaselineableMetrics({
 *     baselineableMetricId: testBaselineableMetric.id,
 *     compartmentId: compartmentId,
 *     metricNamespace: baselineableMetricMetricNamespace,
 *     name: baselineableMetricName,
 *     resourceGroup: baselineableMetricResourceGroup,
 * });
 * ```
 */
export function getBaselineableMetrics(args?: GetBaselineableMetricsArgs, opts?: pulumi.InvokeOptions): Promise<GetBaselineableMetricsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getBaselineableMetrics:getBaselineableMetrics", {
        "baselineableMetricId": args.baselineableMetricId,
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "metricNamespace": args.metricNamespace,
        "name": args.name,
        "resourceGroup": args.resourceGroup,
    }, opts);
}

/**
 * A collection of arguments for invoking getBaselineableMetrics.
 */
export interface GetBaselineableMetricsArgs {
    /**
     * Identifier for the metric
     */
    baselineableMetricId?: string;
    /**
     * The ID of the compartment in which data is listed.
     */
    compartmentId?: string;
    filters?: inputs.StackMonitoring.GetBaselineableMetricsFilter[];
    /**
     * A filter to return monitored resource types that has the matching namespace.
     */
    metricNamespace?: string;
    /**
     * Metric Name
     */
    name?: string;
    /**
     * Resource Group
     */
    resourceGroup?: string;
}

/**
 * A collection of values returned by getBaselineableMetrics.
 */
export interface GetBaselineableMetricsResult {
    readonly baselineableMetricId?: string;
    /**
     * The list of baselineable_metric_summary_collection.
     */
    readonly baselineableMetricSummaryCollections: outputs.StackMonitoring.GetBaselineableMetricsBaselineableMetricSummaryCollection[];
    /**
     * OCID of the compartment
     */
    readonly compartmentId?: string;
    readonly filters?: outputs.StackMonitoring.GetBaselineableMetricsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly metricNamespace?: string;
    /**
     * name of the metric
     */
    readonly name?: string;
    /**
     * Resource group of the metric
     */
    readonly resourceGroup?: string;
}
/**
 * This data source provides the list of Baselineable Metrics in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * List of summary of baseline-able metrics for a given resource group if specified.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBaselineableMetrics = oci.StackMonitoring.getBaselineableMetrics({
 *     baselineableMetricId: testBaselineableMetric.id,
 *     compartmentId: compartmentId,
 *     metricNamespace: baselineableMetricMetricNamespace,
 *     name: baselineableMetricName,
 *     resourceGroup: baselineableMetricResourceGroup,
 * });
 * ```
 */
export function getBaselineableMetricsOutput(args?: GetBaselineableMetricsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBaselineableMetricsResult> {
    return pulumi.output(args).apply((a: any) => getBaselineableMetrics(a, opts))
}

/**
 * A collection of arguments for invoking getBaselineableMetrics.
 */
export interface GetBaselineableMetricsOutputArgs {
    /**
     * Identifier for the metric
     */
    baselineableMetricId?: pulumi.Input<string>;
    /**
     * The ID of the compartment in which data is listed.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.GetBaselineableMetricsFilterArgs>[]>;
    /**
     * A filter to return monitored resource types that has the matching namespace.
     */
    metricNamespace?: pulumi.Input<string>;
    /**
     * Metric Name
     */
    name?: pulumi.Input<string>;
    /**
     * Resource Group
     */
    resourceGroup?: pulumi.Input<string>;
}
