// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Baselineable Metrics Evaluate resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Evaluates metric for anomalies for the given data points
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBaselineableMetricsEvaluate = oci.StackMonitoring.getBaselineableMetricsEvaluate({
 *     baselineableMetricId: oci_stack_monitoring_baselineable_metric.test_baselineable_metric.id,
 *     items: [{
 *         evaluationDataPoints: [{
 *             timestamp: _var.baselineable_metrics_evaluate_items_evaluation_data_points_timestamp,
 *             value: _var.baselineable_metrics_evaluate_items_evaluation_data_points_value,
 *         }],
 *         trainingDataPoints: [{
 *             timestamp: _var.baselineable_metrics_evaluate_items_training_data_points_timestamp,
 *             value: _var.baselineable_metrics_evaluate_items_training_data_points_value,
 *         }],
 *         dimensions: _var.baselineable_metrics_evaluate_items_dimensions,
 *     }],
 *     resourceId: oci_usage_proxy_resource.test_resource.id,
 * });
 * ```
 */
export function getBaselineableMetricsEvaluate(args: GetBaselineableMetricsEvaluateArgs, opts?: pulumi.InvokeOptions): Promise<GetBaselineableMetricsEvaluateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getBaselineableMetricsEvaluate:getBaselineableMetricsEvaluate", {
        "baselineableMetricId": args.baselineableMetricId,
        "items": args.items,
        "resourceId": args.resourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBaselineableMetricsEvaluate.
 */
export interface GetBaselineableMetricsEvaluateArgs {
    /**
     * Identifier for the metric
     */
    baselineableMetricId: string;
    /**
     * List of Metric data
     */
    items: inputs.StackMonitoring.GetBaselineableMetricsEvaluateItem[];
    /**
     * OCID of the resource
     */
    resourceId: string;
}

/**
 * A collection of values returned by getBaselineableMetricsEvaluate.
 */
export interface GetBaselineableMetricsEvaluateResult {
    readonly baselineableMetricId: string;
    /**
     * list of anomaly data points for the metric
     */
    readonly dataPoints: outputs.StackMonitoring.GetBaselineableMetricsEvaluateDataPoint[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of Metric data
     */
    readonly items: outputs.StackMonitoring.GetBaselineableMetricsEvaluateItem[];
    /**
     * OCID of the resource
     */
    readonly resourceId: string;
}
/**
 * This data source provides details about a specific Baselineable Metrics Evaluate resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Evaluates metric for anomalies for the given data points
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testBaselineableMetricsEvaluate = oci.StackMonitoring.getBaselineableMetricsEvaluate({
 *     baselineableMetricId: oci_stack_monitoring_baselineable_metric.test_baselineable_metric.id,
 *     items: [{
 *         evaluationDataPoints: [{
 *             timestamp: _var.baselineable_metrics_evaluate_items_evaluation_data_points_timestamp,
 *             value: _var.baselineable_metrics_evaluate_items_evaluation_data_points_value,
 *         }],
 *         trainingDataPoints: [{
 *             timestamp: _var.baselineable_metrics_evaluate_items_training_data_points_timestamp,
 *             value: _var.baselineable_metrics_evaluate_items_training_data_points_value,
 *         }],
 *         dimensions: _var.baselineable_metrics_evaluate_items_dimensions,
 *     }],
 *     resourceId: oci_usage_proxy_resource.test_resource.id,
 * });
 * ```
 */
export function getBaselineableMetricsEvaluateOutput(args: GetBaselineableMetricsEvaluateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBaselineableMetricsEvaluateResult> {
    return pulumi.output(args).apply((a: any) => getBaselineableMetricsEvaluate(a, opts))
}

/**
 * A collection of arguments for invoking getBaselineableMetricsEvaluate.
 */
export interface GetBaselineableMetricsEvaluateOutputArgs {
    /**
     * Identifier for the metric
     */
    baselineableMetricId: pulumi.Input<string>;
    /**
     * List of Metric data
     */
    items: pulumi.Input<pulumi.Input<inputs.StackMonitoring.GetBaselineableMetricsEvaluateItemArgs>[]>;
    /**
     * OCID of the resource
     */
    resourceId: pulumi.Input<string>;
}
