// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Config resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Gets the details of a configuration.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConfig = oci.StackMonitoring.getConfig({
 *     configId: oci_stack_monitoring_config.test_config.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getConfig(args: GetConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getConfig:getConfig", {
        "configId": args.configId,
    }, opts);
}

/**
 * A collection of arguments for invoking getConfig.
 */
export interface GetConfigArgs {
    /**
     * Unique Config identifier.
     */
    configId: string;
}

/**
 * A collection of values returned by getConfig.
 */
export interface GetConfigResult {
    /**
     * The OCID of the compartment containing the configuration.
     */
    readonly compartmentId: string;
    readonly configId: string;
    /**
     * The type of configuration.
     */
    readonly configType: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: any};
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: any};
    /**
     * The Unique Oracle ID (OCID) that is immutable on creation.
     */
    readonly id: string;
    /**
     * True if automatic promotion or enterprise extensibility is enabled, false if it is not enabled.
     */
    readonly isEnabled: boolean;
    /**
     * License edition.
     */
    readonly license: string;
    /**
     * The type of resource to configure for automatic promotion.
     */
    readonly resourceType: string;
    /**
     * The current state of the configuration.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: any};
    /**
     * The time the configuration was created. An RFC3339 formatted datetime string.
     */
    readonly timeCreated: string;
    /**
     * The time the Config was updated.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Config resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Gets the details of a configuration.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testConfig = oci.StackMonitoring.getConfig({
 *     configId: oci_stack_monitoring_config.test_config.id,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getConfigOutput(args: GetConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigResult> {
    return pulumi.output(args).apply((a: any) => getConfig(a, opts))
}

/**
 * A collection of arguments for invoking getConfig.
 */
export interface GetConfigOutputArgs {
    /**
     * Unique Config identifier.
     */
    configId: pulumi.Input<string>;
}
