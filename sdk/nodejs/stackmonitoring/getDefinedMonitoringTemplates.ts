// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Defined Monitoring Templates in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * List Defined Monitoring Templates.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDefinedMonitoringTemplates = oci.StackMonitoring.getDefinedMonitoringTemplates({
 *     compartmentId: compartmentId,
 *     displayName: definedMonitoringTemplateDisplayName,
 *     resourceTypes: definedMonitoringTemplateResourceTypes,
 * });
 * ```
 */
export function getDefinedMonitoringTemplates(args: GetDefinedMonitoringTemplatesArgs, opts?: pulumi.InvokeOptions): Promise<GetDefinedMonitoringTemplatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getDefinedMonitoringTemplates:getDefinedMonitoringTemplates", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "resourceTypes": args.resourceTypes,
    }, opts);
}

/**
 * A collection of arguments for invoking getDefinedMonitoringTemplates.
 */
export interface GetDefinedMonitoringTemplatesArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy(root) for which  defined monitored templates should be listed.
     */
    compartmentId: string;
    /**
     * A filter to return monitoring template based on name.
     */
    displayName?: string;
    filters?: inputs.StackMonitoring.GetDefinedMonitoringTemplatesFilter[];
    /**
     * Multiple resource types filter.
     */
    resourceTypes?: string[];
}

/**
 * A collection of values returned by getDefinedMonitoringTemplates.
 */
export interface GetDefinedMonitoringTemplatesResult {
    readonly compartmentId: string;
    /**
     * The list of defined_monitoring_template_collection.
     */
    readonly definedMonitoringTemplateCollections: outputs.StackMonitoring.GetDefinedMonitoringTemplatesDefinedMonitoringTemplateCollection[];
    /**
     * The name of the definedMonitoringTemplate.
     */
    readonly displayName?: string;
    readonly filters?: outputs.StackMonitoring.GetDefinedMonitoringTemplatesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resourceTypes?: string[];
}
/**
 * This data source provides the list of Defined Monitoring Templates in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * List Defined Monitoring Templates.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDefinedMonitoringTemplates = oci.StackMonitoring.getDefinedMonitoringTemplates({
 *     compartmentId: compartmentId,
 *     displayName: definedMonitoringTemplateDisplayName,
 *     resourceTypes: definedMonitoringTemplateResourceTypes,
 * });
 * ```
 */
export function getDefinedMonitoringTemplatesOutput(args: GetDefinedMonitoringTemplatesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDefinedMonitoringTemplatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:StackMonitoring/getDefinedMonitoringTemplates:getDefinedMonitoringTemplates", {
        "compartmentId": args.compartmentId,
        "displayName": args.displayName,
        "filters": args.filters,
        "resourceTypes": args.resourceTypes,
    }, opts);
}

/**
 * A collection of arguments for invoking getDefinedMonitoringTemplates.
 */
export interface GetDefinedMonitoringTemplatesOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy(root) for which  defined monitored templates should be listed.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * A filter to return monitoring template based on name.
     */
    displayName?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.GetDefinedMonitoringTemplatesFilterArgs>[]>;
    /**
     * Multiple resource types filter.
     */
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
}
