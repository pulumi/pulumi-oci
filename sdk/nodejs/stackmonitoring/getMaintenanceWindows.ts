// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Maintenance Windows in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Returns a list of maintenance windows.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaintenanceWindows = oci.StackMonitoring.getMaintenanceWindows({
 *     compartmentId: compartmentId,
 *     lifecycleDetails: maintenanceWindowLifecycleDetails,
 *     name: maintenanceWindowName,
 *     status: maintenanceWindowStatus,
 * });
 * ```
 */
export function getMaintenanceWindows(args: GetMaintenanceWindowsArgs, opts?: pulumi.InvokeOptions): Promise<GetMaintenanceWindowsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getMaintenanceWindows:getMaintenanceWindows", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "lifecycleDetails": args.lifecycleDetails,
        "name": args.name,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaintenanceWindows.
 */
export interface GetMaintenanceWindowsArgs {
    /**
     * The ID of the compartment in which data is listed.
     */
    compartmentId: string;
    filters?: inputs.StackMonitoring.GetMaintenanceWindowsFilter[];
    /**
     * A filter to return maintenance windows with matching lifecycleDetails.
     */
    lifecycleDetails?: string;
    /**
     * A filter to return maintenance windows that match exact resource name.
     */
    name?: string;
    /**
     * A filter to return only maintenance windows with matching lifecycleState.
     */
    status?: string;
}

/**
 * A collection of values returned by getMaintenanceWindows.
 */
export interface GetMaintenanceWindowsResult {
    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly compartmentId: string;
    readonly filters?: outputs.StackMonitoring.GetMaintenanceWindowsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Lifecycle Details of the Maintenance Window.
     */
    readonly lifecycleDetails?: string;
    /**
     * The list of maintenance_window_collection.
     */
    readonly maintenanceWindowCollections: outputs.StackMonitoring.GetMaintenanceWindowsMaintenanceWindowCollection[];
    /**
     * Name of the monitored resource
     */
    readonly name?: string;
    readonly status?: string;
}
/**
 * This data source provides the list of Maintenance Windows in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Returns a list of maintenance windows.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMaintenanceWindows = oci.StackMonitoring.getMaintenanceWindows({
 *     compartmentId: compartmentId,
 *     lifecycleDetails: maintenanceWindowLifecycleDetails,
 *     name: maintenanceWindowName,
 *     status: maintenanceWindowStatus,
 * });
 * ```
 */
export function getMaintenanceWindowsOutput(args: GetMaintenanceWindowsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMaintenanceWindowsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:StackMonitoring/getMaintenanceWindows:getMaintenanceWindows", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "lifecycleDetails": args.lifecycleDetails,
        "name": args.name,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getMaintenanceWindows.
 */
export interface GetMaintenanceWindowsOutputArgs {
    /**
     * The ID of the compartment in which data is listed.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.GetMaintenanceWindowsFilterArgs>[]>;
    /**
     * A filter to return maintenance windows with matching lifecycleDetails.
     */
    lifecycleDetails?: pulumi.Input<string>;
    /**
     * A filter to return maintenance windows that match exact resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only maintenance windows with matching lifecycleState.
     */
    status?: pulumi.Input<string>;
}
