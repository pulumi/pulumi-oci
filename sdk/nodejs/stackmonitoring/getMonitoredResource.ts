// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Monitored Resource resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Get monitored resource for the given identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResource = oci.StackMonitoring.getMonitoredResource({
 *     monitoredResourceId: testMonitoredResourceOciStackMonitoringMonitoredResource.id,
 * });
 * ```
 */
export function getMonitoredResource(args: GetMonitoredResourceArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoredResourceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getMonitoredResource:getMonitoredResource", {
        "monitoredResourceId": args.monitoredResourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoredResource.
 */
export interface GetMonitoredResourceArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource.
     */
    monitoredResourceId: string;
}

/**
 * A collection of values returned by getMonitoredResource.
 */
export interface GetMonitoredResourceResult {
    readonly additionalAliases: outputs.StackMonitoring.GetMonitoredResourceAdditionalAlias[];
    readonly additionalCredentials: outputs.StackMonitoring.GetMonitoredResourceAdditionalCredential[];
    /**
     * Monitored Resource Alias Credential Details
     */
    readonly aliases: outputs.StackMonitoring.GetMonitoredResourceAlias[];
    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly compartmentId: string;
    /**
     * Monitored Resource Credential Details.
     */
    readonly credentials: outputs.StackMonitoring.GetMonitoredResourceCredential[];
    /**
     * Connection details for the database.
     */
    readonly databaseConnectionDetails: outputs.StackMonitoring.GetMonitoredResourceDatabaseConnectionDetail[];
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Monitored resource display name.
     */
    readonly displayName: string;
    /**
     * The external resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). External resource is any Oracle Cloud Infrastructure resource which is not a Stack Monitoring service resource. Currently supports only following resource types - Container database, non-container database,  pluggable database and Oracle Cloud Infrastructure compute instance.
     */
    readonly externalId: string;
    readonly externalResourceId: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * Monitored resource host name.
     */
    readonly hostName: string;
    /**
     * Monitored resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly id: string;
    /**
     * License edition of the monitored resource.
     */
    readonly license: string;
    /**
     * Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly managementAgentId: string;
    readonly monitoredResourceId: string;
    /**
     * Property Name.
     */
    readonly name: string;
    /**
     * List of monitored resource properties.
     */
    readonly properties: outputs.StackMonitoring.GetMonitoredResourceProperty[];
    /**
     * Resource Category to indicate the kind of resource type.
     */
    readonly resourceCategory: string;
    /**
     * Time zone in the form of tz database canonical zone ID.
     */
    readonly resourceTimeZone: string;
    /**
     * Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     */
    readonly sourceType: string;
    /**
     * Lifecycle state of the monitored resource.
     */
    readonly state: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly tenantId: string;
    /**
     * The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    readonly timeCreated: string;
    /**
     * The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    readonly timeUpdated: string;
    /**
     * Monitored Resource Type.
     */
    readonly type: string;
}
/**
 * This data source provides details about a specific Monitored Resource resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Get monitored resource for the given identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResource = oci.StackMonitoring.getMonitoredResource({
 *     monitoredResourceId: testMonitoredResourceOciStackMonitoringMonitoredResource.id,
 * });
 * ```
 */
export function getMonitoredResourceOutput(args: GetMonitoredResourceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMonitoredResourceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:StackMonitoring/getMonitoredResource:getMonitoredResource", {
        "monitoredResourceId": args.monitoredResourceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoredResource.
 */
export interface GetMonitoredResourceOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource.
     */
    monitoredResourceId: pulumi.Input<string>;
}
