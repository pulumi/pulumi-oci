// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Monitored Resource Types in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Returns list of resource types accessible to the customer.
 * There are two types of resource types - System resource types and User resource types.
 * System resource types are available out of the box in the stack monitoring resource service
 * and are accessible to all the tenant users. User resource types are created in the context
 * of a tenancy and are visible only for the tenancy. By default, both System resource types
 * and User resource types are returned.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResourceTypes = oci.StackMonitoring.getMonitoredResourceTypes({
 *     compartmentId: compartmentId,
 *     excludeFields: monitoredResourceTypeExcludeFields,
 *     fields: monitoredResourceTypeFields,
 *     isExcludeSystemTypes: monitoredResourceTypeIsExcludeSystemTypes,
 *     metricNamespace: monitoredResourceTypeMetricNamespace,
 *     name: monitoredResourceTypeName,
 *     status: monitoredResourceTypeStatus,
 * });
 * ```
 */
export function getMonitoredResourceTypes(args: GetMonitoredResourceTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoredResourceTypesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getMonitoredResourceTypes:getMonitoredResourceTypes", {
        "compartmentId": args.compartmentId,
        "excludeFields": args.excludeFields,
        "fields": args.fields,
        "filters": args.filters,
        "isExcludeSystemTypes": args.isExcludeSystemTypes,
        "metricNamespace": args.metricNamespace,
        "name": args.name,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoredResourceTypes.
 */
export interface GetMonitoredResourceTypesArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy for which  monitored resource types should be listed.
     */
    compartmentId: string;
    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called "excludeFields" of an array type, provide the values as enums, and use collectionFormat.
     */
    excludeFields?: string[];
    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called "fields" of an array type, provide the values as enums, and use collectionFormat.
     *
     * MonitoredResourceType Id, name and compartment will be added by default.
     */
    fields?: string[];
    filters?: inputs.StackMonitoring.GetMonitoredResourceTypesFilter[];
    /**
     * A filter to exclude system resource types. If set to true, system resource types will be excluded.
     */
    isExcludeSystemTypes?: boolean;
    /**
     * A filter to return monitored resource types that has the matching namespace.
     */
    metricNamespace?: string;
    /**
     * A filter to return monitored resource types that match exactly with the resource type name given.
     */
    name?: string;
    /**
     * A filter to return only resources that matches with lifecycleState given.
     */
    status?: string;
}

/**
 * A collection of values returned by getMonitoredResourceTypes.
 */
export interface GetMonitoredResourceTypesResult {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
     */
    readonly compartmentId: string;
    readonly excludeFields?: string[];
    readonly fields?: string[];
    readonly filters?: outputs.StackMonitoring.GetMonitoredResourceTypesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isExcludeSystemTypes?: boolean;
    /**
     * Metric namespace for resource type.
     */
    readonly metricNamespace?: string;
    /**
     * The list of monitored_resource_types_collection.
     */
    readonly monitoredResourceTypesCollections: outputs.StackMonitoring.GetMonitoredResourceTypesMonitoredResourceTypesCollection[];
    /**
     * A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
     */
    readonly name?: string;
    readonly status?: string;
}
/**
 * This data source provides the list of Monitored Resource Types in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Returns list of resource types accessible to the customer.
 * There are two types of resource types - System resource types and User resource types.
 * System resource types are available out of the box in the stack monitoring resource service
 * and are accessible to all the tenant users. User resource types are created in the context
 * of a tenancy and are visible only for the tenancy. By default, both System resource types
 * and User resource types are returned.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResourceTypes = oci.StackMonitoring.getMonitoredResourceTypes({
 *     compartmentId: compartmentId,
 *     excludeFields: monitoredResourceTypeExcludeFields,
 *     fields: monitoredResourceTypeFields,
 *     isExcludeSystemTypes: monitoredResourceTypeIsExcludeSystemTypes,
 *     metricNamespace: monitoredResourceTypeMetricNamespace,
 *     name: monitoredResourceTypeName,
 *     status: monitoredResourceTypeStatus,
 * });
 * ```
 */
export function getMonitoredResourceTypesOutput(args: GetMonitoredResourceTypesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoredResourceTypesResult> {
    return pulumi.output(args).apply((a: any) => getMonitoredResourceTypes(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoredResourceTypes.
 */
export interface GetMonitoredResourceTypesOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy for which  monitored resource types should be listed.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs, to return all the information except the fields requested to be excluded (excludeFields) by the client. In this mechanism, the client sends the exclude field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to exlude and to return and should be a query string parameter called "excludeFields" of an array type, provide the values as enums, and use collectionFormat.
     */
    excludeFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs, to return only the information (fields) required by the client. In this mechanism, the client sends the required field names as the query parameters for an API to the server, and the server trims down the default response content by removing the fields that are not required by the client. The parameter controls which fields to return and should be a query string parameter called "fields" of an array type, provide the values as enums, and use collectionFormat.
     *
     * MonitoredResourceType Id, name and compartment will be added by default.
     */
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.GetMonitoredResourceTypesFilterArgs>[]>;
    /**
     * A filter to exclude system resource types. If set to true, system resource types will be excluded.
     */
    isExcludeSystemTypes?: pulumi.Input<boolean>;
    /**
     * A filter to return monitored resource types that has the matching namespace.
     */
    metricNamespace?: pulumi.Input<string>;
    /**
     * A filter to return monitored resource types that match exactly with the resource type name given.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only resources that matches with lifecycleState given.
     */
    status?: pulumi.Input<string>;
}
