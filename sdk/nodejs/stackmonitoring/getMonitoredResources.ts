// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Monitored Resources in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Returns a list of monitored resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResources = oci.StackMonitoring.getMonitoredResources({
 *     compartmentId: _var.compartment_id,
 *     name: _var.monitored_resource_name,
 *     status: _var.monitored_resource_status,
 *     workRequestId: oci_containerengine_work_request.test_work_request.id,
 * });
 * ```
 */
export function getMonitoredResources(args: GetMonitoredResourcesArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoredResourcesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getMonitoredResources:getMonitoredResources", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "name": args.name,
        "status": args.status,
        "workRequestId": args.workRequestId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoredResources.
 */
export interface GetMonitoredResourcesArgs {
    /**
     * The ID of the compartment in which data is listed.
     */
    compartmentId: string;
    filters?: inputs.StackMonitoring.GetMonitoredResourcesFilter[];
    /**
     * A filter to return resources that match exact resource name.
     */
    name?: string;
    /**
     * A filter to return only resources with matching lifecycleState.
     */
    status?: string;
    /**
     * A filter to return resources which were impacted as part of this work request identifier.
     */
    workRequestId?: string;
}

/**
 * A collection of values returned by getMonitoredResources.
 */
export interface GetMonitoredResourcesResult {
    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    readonly compartmentId: string;
    readonly filters?: outputs.StackMonitoring.GetMonitoredResourcesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The list of monitored_resource_collection.
     */
    readonly monitoredResourceCollections: outputs.StackMonitoring.GetMonitoredResourcesMonitoredResourceCollection[];
    /**
     * Property Name.
     */
    readonly name?: string;
    readonly status?: string;
    readonly workRequestId?: string;
}
/**
 * This data source provides the list of Monitored Resources in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Returns a list of monitored resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResources = oci.StackMonitoring.getMonitoredResources({
 *     compartmentId: _var.compartment_id,
 *     name: _var.monitored_resource_name,
 *     status: _var.monitored_resource_status,
 *     workRequestId: oci_containerengine_work_request.test_work_request.id,
 * });
 * ```
 */
export function getMonitoredResourcesOutput(args: GetMonitoredResourcesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitoredResourcesResult> {
    return pulumi.output(args).apply((a: any) => getMonitoredResources(a, opts))
}

/**
 * A collection of arguments for invoking getMonitoredResources.
 */
export interface GetMonitoredResourcesOutputArgs {
    /**
     * The ID of the compartment in which data is listed.
     */
    compartmentId: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.GetMonitoredResourcesFilterArgs>[]>;
    /**
     * A filter to return resources that match exact resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to return only resources with matching lifecycleState.
     */
    status?: pulumi.Input<string>;
    /**
     * A filter to return resources which were impacted as part of this work request identifier.
     */
    workRequestId?: pulumi.Input<string>;
}
