// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Monitoring Template resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Gets a Monitoring Template by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoringTemplate = oci.StackMonitoring.getMonitoringTemplate({
 *     monitoringTemplateId: testMonitoringTemplateOciStackMonitoringMonitoringTemplate.id,
 * });
 * ```
 */
export function getMonitoringTemplate(args: GetMonitoringTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringTemplateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:StackMonitoring/getMonitoringTemplate:getMonitoringTemplate", {
        "monitoringTemplateId": args.monitoringTemplateId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoringTemplate.
 */
export interface GetMonitoringTemplateArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     */
    monitoringTemplateId: string;
}

/**
 * A collection of values returned by getMonitoringTemplate.
 */
export interface GetMonitoringTemplateResult {
    /**
     * The OCID of the compartment containing the monitoringTemplate.
     */
    readonly compartmentId: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    readonly description: string;
    /**
     * A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource.
     */
    readonly destinations: string[];
    /**
     * A user-friendly name for the monitoring template. It should be unique, and it's mutable in nature. Avoid entering confidential information.
     */
    readonly displayName: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The OCID of the resourceInstance/resourceType/resourceGroup
     */
    readonly id: string;
    /**
     * Whether the alarm is enabled or disabled. Default value is enabled.
     */
    readonly isAlarmsEnabled: boolean;
    /**
     * Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     */
    readonly isSplitNotificationEnabled: boolean;
    /**
     * List of members of this monitoring template.
     */
    readonly members: outputs.StackMonitoring.GetMonitoringTemplateMember[];
    /**
     * The format to use for alarm notifications.
     */
    readonly messageFormat: string;
    readonly monitoringTemplateId: string;
    /**
     * The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     */
    readonly repeatNotificationDuration: string;
    /**
     * The current lifecycle state of the monitoring template.
     */
    readonly state: string;
    /**
     * The current status of the monitoring template i.e. whether it is Applied or NotApplied.
     */
    readonly status: string;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    readonly systemTags: {[key: string]: string};
    /**
     * Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    readonly tenantId: string;
    /**
     * The date and time the monitoringTemplate was created. Format defined by RFC3339.
     */
    readonly timeCreated: string;
    /**
     * The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
     */
    readonly timeUpdated: string;
    /**
     * Total Alarm Conditions
     */
    readonly totalAlarmConditions: number;
    /**
     * Total Applied Alarm Conditions
     */
    readonly totalAppliedAlarmConditions: number;
}
/**
 * This data source provides details about a specific Monitoring Template resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Gets a Monitoring Template by identifier
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoringTemplate = oci.StackMonitoring.getMonitoringTemplate({
 *     monitoringTemplateId: testMonitoringTemplateOciStackMonitoringMonitoringTemplate.id,
 * });
 * ```
 */
export function getMonitoringTemplateOutput(args: GetMonitoringTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMonitoringTemplateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:StackMonitoring/getMonitoringTemplate:getMonitoringTemplate", {
        "monitoringTemplateId": args.monitoringTemplateId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMonitoringTemplate.
 */
export interface GetMonitoringTemplateOutputArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the monitoring template.
     */
    monitoringTemplateId: pulumi.Input<string>;
}
