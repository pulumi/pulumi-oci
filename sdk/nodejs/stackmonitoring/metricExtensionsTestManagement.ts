// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Metric Extensions Test Management resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Performs test of Metric Extension on a specific resource Id
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMetricExtensionsTestManagement = new oci.stackmonitoring.MetricExtensionsTestManagement("test_metric_extensions_test_management", {
 *     metricExtensionId: testMetricExtension.id,
 *     resourceIds: metricExtensionsTestManagementResourceIds[0],
 * });
 * ```
 *
 * ## Import
 *
 * Import is not supported for this resource.
 */
export class MetricExtensionsTestManagement extends pulumi.CustomResource {
    /**
     * Get an existing MetricExtensionsTestManagement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MetricExtensionsTestManagementState, opts?: pulumi.CustomResourceOptions): MetricExtensionsTestManagement {
        return new MetricExtensionsTestManagement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:StackMonitoring/metricExtensionsTestManagement:MetricExtensionsTestManagement';

    /**
     * Returns true if the given object is an instance of MetricExtensionsTestManagement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MetricExtensionsTestManagement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MetricExtensionsTestManagement.__pulumiType;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
     */
    public readonly metricExtensionId!: pulumi.Output<string>;
    /**
     * List of Resource IDs [OCID]. Currently, supports only one resource id per request.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly resourceIds!: pulumi.Output<string>;
    /**
     * Test Run Id
     */
    public /*out*/ readonly testRunId!: pulumi.Output<string>;
    /**
     * Test Run Metric Suffix
     */
    public /*out*/ readonly testRunMetricSuffix!: pulumi.Output<string>;
    /**
     * Test Run Namespace name
     */
    public /*out*/ readonly testRunNamespaceName!: pulumi.Output<string>;
    /**
     * Test Run Resource Group name
     */
    public /*out*/ readonly testRunResourceGroupName!: pulumi.Output<string>;

    /**
     * Create a MetricExtensionsTestManagement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetricExtensionsTestManagementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MetricExtensionsTestManagementArgs | MetricExtensionsTestManagementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MetricExtensionsTestManagementState | undefined;
            resourceInputs["metricExtensionId"] = state ? state.metricExtensionId : undefined;
            resourceInputs["resourceIds"] = state ? state.resourceIds : undefined;
            resourceInputs["testRunId"] = state ? state.testRunId : undefined;
            resourceInputs["testRunMetricSuffix"] = state ? state.testRunMetricSuffix : undefined;
            resourceInputs["testRunNamespaceName"] = state ? state.testRunNamespaceName : undefined;
            resourceInputs["testRunResourceGroupName"] = state ? state.testRunResourceGroupName : undefined;
        } else {
            const args = argsOrState as MetricExtensionsTestManagementArgs | undefined;
            if ((!args || args.metricExtensionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metricExtensionId'");
            }
            if ((!args || args.resourceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceIds'");
            }
            resourceInputs["metricExtensionId"] = args ? args.metricExtensionId : undefined;
            resourceInputs["resourceIds"] = args ? args.resourceIds : undefined;
            resourceInputs["testRunId"] = undefined /*out*/;
            resourceInputs["testRunMetricSuffix"] = undefined /*out*/;
            resourceInputs["testRunNamespaceName"] = undefined /*out*/;
            resourceInputs["testRunResourceGroupName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MetricExtensionsTestManagement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MetricExtensionsTestManagement resources.
 */
export interface MetricExtensionsTestManagementState {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
     */
    metricExtensionId?: pulumi.Input<string>;
    /**
     * List of Resource IDs [OCID]. Currently, supports only one resource id per request.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    resourceIds?: pulumi.Input<string>;
    /**
     * Test Run Id
     */
    testRunId?: pulumi.Input<string>;
    /**
     * Test Run Metric Suffix
     */
    testRunMetricSuffix?: pulumi.Input<string>;
    /**
     * Test Run Namespace name
     */
    testRunNamespaceName?: pulumi.Input<string>;
    /**
     * Test Run Resource Group name
     */
    testRunResourceGroupName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MetricExtensionsTestManagement resource.
 */
export interface MetricExtensionsTestManagementArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the metric extension resource.
     */
    metricExtensionId: pulumi.Input<string>;
    /**
     * List of Resource IDs [OCID]. Currently, supports only one resource id per request.
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    resourceIds: pulumi.Input<string>;
}
