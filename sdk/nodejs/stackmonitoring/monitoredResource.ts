// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Monitored Resource resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Creates a new monitored resource for the given resource type with the details and submits
 * a work request for promoting the resource to agent. Once the resource is successfully
 * added to agent, resource state will be marked active.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResource = new oci.stackmonitoring.MonitoredResource("test_monitored_resource", {
 *     compartmentId: compartmentId,
 *     name: monitoredResourceName,
 *     type: monitoredResourceType,
 *     additionalAliases: [{
 *         credential: {
 *             name: monitoredResourceAdditionalAliasesCredentialName,
 *             service: monitoredResourceAdditionalAliasesCredentialService,
 *             source: monitoredResourceAdditionalAliasesCredentialSource,
 *         },
 *         name: monitoredResourceAdditionalAliasesName,
 *         source: monitoredResourceAdditionalAliasesSource,
 *     }],
 *     additionalCredentials: [{
 *         credentialType: monitoredResourceAdditionalCredentialsCredentialType,
 *         description: monitoredResourceAdditionalCredentialsDescription,
 *         keyId: testKey.id,
 *         name: monitoredResourceAdditionalCredentialsName,
 *         properties: [{
 *             name: monitoredResourceAdditionalCredentialsPropertiesName,
 *             value: monitoredResourceAdditionalCredentialsPropertiesValue,
 *         }],
 *         source: monitoredResourceAdditionalCredentialsSource,
 *         type: monitoredResourceAdditionalCredentialsType,
 *     }],
 *     aliases: {
 *         credential: {
 *             name: monitoredResourceAliasesCredentialName,
 *             service: monitoredResourceAliasesCredentialService,
 *             source: monitoredResourceAliasesCredentialSource,
 *         },
 *         name: monitoredResourceAliasesName,
 *         source: monitoredResourceAliasesSource,
 *     },
 *     credentials: {
 *         credentialType: monitoredResourceCredentialsCredentialType,
 *         description: monitoredResourceCredentialsDescription,
 *         keyId: monitoredResourceCredentialsKeyId,
 *         name: monitoredResourceCredentialsName,
 *         properties: [{
 *             name: monitoredResourceCredentialsPropertiesName,
 *             value: monitoredResourceCredentialsPropertiesValue,
 *         }],
 *         source: monitoredResourceCredentialsSource,
 *         type: monitoredResourceCredentialsType,
 *     },
 *     databaseConnectionDetails: {
 *         port: monitoredResourceDatabaseConnectionDetailsPort,
 *         protocol: monitoredResourceDatabaseConnectionDetailsProtocol,
 *         serviceName: monitoredResourceDatabaseServiceName,
 *         connectorId: monitoredResourceDatabaseConnectorId,
 *         dbId: monitoredResourceDatabaseId,
 *         dbUniqueName: monitoredResourceDatabaseConnectionDetailsDbUniqueName,
 *         sslSecretId: testSecret.id,
 *     },
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     displayName: monitoredResourceDisplayName,
 *     externalResourceId: monitoredResourceExternalResourceId,
 *     externalId: testExternal.id,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     hostName: monitoredResourceHostName,
 *     license: monitoredResourceLicense,
 *     managementAgentId: testManagementAgent.id,
 *     properties: [{
 *         name: monitoredResourcePropertiesName,
 *         value: monitoredResourcePropertiesValue,
 *     }],
 *     resourceTimeZone: monitoredResourceResourceTimeZone,
 * });
 * ```
 *
 * ## Import
 *
 * MonitoredResources can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:StackMonitoring/monitoredResource:MonitoredResource test_monitored_resource "id"
 * ```
 */
export class MonitoredResource extends pulumi.CustomResource {
    /**
     * Get an existing MonitoredResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitoredResourceState, opts?: pulumi.CustomResourceOptions): MonitoredResource {
        return new MonitoredResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:StackMonitoring/monitoredResource:MonitoredResource';

    /**
     * Returns true if the given object is an instance of MonitoredResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MonitoredResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitoredResource.__pulumiType;
    }

    /**
     * (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
     */
    public readonly additionalAliases!: pulumi.Output<outputs.StackMonitoring.MonitoredResourceAdditionalAlias[] | undefined>;
    /**
     * (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
     */
    public readonly additionalCredentials!: pulumi.Output<outputs.StackMonitoring.MonitoredResourceAdditionalCredential[] | undefined>;
    /**
     * (Updatable) Monitored Resource Alias Credential Details
     */
    public readonly aliases!: pulumi.Output<outputs.StackMonitoring.MonitoredResourceAliases | undefined>;
    /**
     * (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Monitored Resource Credential Details.
     */
    public readonly credentials!: pulumi.Output<outputs.StackMonitoring.MonitoredResourceCredentials | undefined>;
    /**
     * (Updatable) Connection details for the database.
     */
    public readonly databaseConnectionDetails!: pulumi.Output<outputs.StackMonitoring.MonitoredResourceDatabaseConnectionDetails | undefined>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Monitored resource display name.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
     */
    public readonly externalId!: pulumi.Output<string | undefined>;
    /**
     * Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
     */
    public readonly externalResourceId!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Host name of the monitored resource.
     */
    public readonly hostName!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
     */
    public readonly license!: pulumi.Output<string>;
    /**
     * Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    public readonly managementAgentId!: pulumi.Output<string | undefined>;
    /**
     * Monitored Resource Name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) List of monitored resource properties.
     */
    public readonly properties!: pulumi.Output<outputs.StackMonitoring.MonitoredResourceProperty[] | undefined>;
    /**
     * Resource Category to indicate the kind of resource type.
     */
    public /*out*/ readonly resourceCategory!: pulumi.Output<string>;
    /**
     * (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     */
    public readonly resourceTimeZone!: pulumi.Output<string | undefined>;
    /**
     * Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     */
    public /*out*/ readonly sourceType!: pulumi.Output<string>;
    /**
     * Lifecycle state of the monitored resource.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    /**
     * The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * Monitored Resource Type. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a MonitoredResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitoredResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MonitoredResourceArgs | MonitoredResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MonitoredResourceState | undefined;
            resourceInputs["additionalAliases"] = state ? state.additionalAliases : undefined;
            resourceInputs["additionalCredentials"] = state ? state.additionalCredentials : undefined;
            resourceInputs["aliases"] = state ? state.aliases : undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["credentials"] = state ? state.credentials : undefined;
            resourceInputs["databaseConnectionDetails"] = state ? state.databaseConnectionDetails : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["externalResourceId"] = state ? state.externalResourceId : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["license"] = state ? state.license : undefined;
            resourceInputs["managementAgentId"] = state ? state.managementAgentId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["resourceCategory"] = state ? state.resourceCategory : undefined;
            resourceInputs["resourceTimeZone"] = state ? state.resourceTimeZone : undefined;
            resourceInputs["sourceType"] = state ? state.sourceType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as MonitoredResourceArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["additionalAliases"] = args ? args.additionalAliases : undefined;
            resourceInputs["additionalCredentials"] = args ? args.additionalCredentials : undefined;
            resourceInputs["aliases"] = args ? args.aliases : undefined;
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["credentials"] = args ? args.credentials : undefined;
            resourceInputs["databaseConnectionDetails"] = args ? args.databaseConnectionDetails : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["externalId"] = args ? args.externalId : undefined;
            resourceInputs["externalResourceId"] = args ? args.externalResourceId : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["license"] = args ? args.license : undefined;
            resourceInputs["managementAgentId"] = args ? args.managementAgentId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["resourceTimeZone"] = args ? args.resourceTimeZone : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["resourceCategory"] = undefined /*out*/;
            resourceInputs["sourceType"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitoredResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MonitoredResource resources.
 */
export interface MonitoredResourceState {
    /**
     * (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
     */
    additionalAliases?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoredResourceAdditionalAlias>[]>;
    /**
     * (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
     */
    additionalCredentials?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoredResourceAdditionalCredential>[]>;
    /**
     * (Updatable) Monitored Resource Alias Credential Details
     */
    aliases?: pulumi.Input<inputs.StackMonitoring.MonitoredResourceAliases>;
    /**
     * (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Monitored Resource Credential Details.
     */
    credentials?: pulumi.Input<inputs.StackMonitoring.MonitoredResourceCredentials>;
    /**
     * (Updatable) Connection details for the database.
     */
    databaseConnectionDetails?: pulumi.Input<inputs.StackMonitoring.MonitoredResourceDatabaseConnectionDetails>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Monitored resource display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
     */
    externalId?: pulumi.Input<string>;
    /**
     * Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
     */
    externalResourceId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Host name of the monitored resource.
     */
    hostName?: pulumi.Input<string>;
    /**
     * (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
     */
    license?: pulumi.Input<string>;
    /**
     * Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    managementAgentId?: pulumi.Input<string>;
    /**
     * Monitored Resource Name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) List of monitored resource properties.
     */
    properties?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoredResourceProperty>[]>;
    /**
     * Resource Category to indicate the kind of resource type.
     */
    resourceCategory?: pulumi.Input<string>;
    /**
     * (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     */
    resourceTimeZone?: pulumi.Input<string>;
    /**
     * Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc.
     */
    sourceType?: pulumi.Input<string>;
    /**
     * Lifecycle state of the monitored resource.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The date and time when the monitored resource was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time when the monitored resource was last updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * Monitored Resource Type. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MonitoredResource resource.
 */
export interface MonitoredResourceArgs {
    /**
     * (Updatable) List of MonitoredResourceAliasCredentials. This property complements the existing  "aliases" property by allowing user to specify more than one credential alias.  If both "aliases" and "additionalAliases" are specified, union of the  values is used as list of aliases applicable for this resource. If any duplicate found in the combined list of "alias" and "additionalAliases",  an error will be thrown.
     */
    additionalAliases?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoredResourceAdditionalAlias>[]>;
    /**
     * (Updatable) List of MonitoredResourceCredentials. This property complements the existing  "credentials" property by allowing user to specify more than one credential.  If both "credential" and "additionalCredentials" are specified, union of the  values is used as list of credentials applicable for this resource. If any duplicate found in the combined list of "credentials" and "additionalCredentials",  an error will be thrown.
     */
    additionalCredentials?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoredResourceAdditionalCredential>[]>;
    /**
     * (Updatable) Monitored Resource Alias Credential Details
     */
    aliases?: pulumi.Input<inputs.StackMonitoring.MonitoredResourceAliases>;
    /**
     * (Updatable) Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Monitored Resource Credential Details.
     */
    credentials?: pulumi.Input<inputs.StackMonitoring.MonitoredResourceCredentials>;
    /**
     * (Updatable) Connection details for the database.
     */
    databaseConnectionDetails?: pulumi.Input<inputs.StackMonitoring.MonitoredResourceDatabaseConnectionDetails>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Monitored resource display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * External resource is any Oracle Cloud Infrastructure resource identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) which is not a Stack Monitoring service resource. Currently supports only Oracle Cloud Infrastructure compute instance.
     */
    externalId?: pulumi.Input<string>;
    /**
     * Generally used by DBaaS to send the Database OCID stored on the DBaaS. The same will be passed to resource service to enable Stack Monitoring Service on DBM. This will be stored in Stack Monitoring Resource Service data store as identifier for monitored resource. If this header is not set as part of the request, then an id will be generated and stored for the resource.
     */
    externalResourceId?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Host name of the monitored resource.
     */
    hostName?: pulumi.Input<string>;
    /**
     * (Updatable) License edition of the monitored resource. If not provided  the default license type for the compartment will be used.
     */
    license?: pulumi.Input<string>;
    /**
     * Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    managementAgentId?: pulumi.Input<string>;
    /**
     * Monitored Resource Name.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) List of monitored resource properties.
     */
    properties?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoredResourceProperty>[]>;
    /**
     * (Updatable) Time zone in the form of tz database canonical zone ID. Specifies the preference with a value that uses the IANA Time Zone Database format (x-obmcs-time-zone). For example - America/Los_Angeles
     */
    resourceTimeZone?: pulumi.Input<string>;
    /**
     * Monitored Resource Type. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    type: pulumi.Input<string>;
}
