// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Monitored Resource Type resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Creates a new monitored resource type.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResourceType = new oci.stackmonitoring.MonitoredResourceType("testMonitoredResourceType", {
 *     compartmentId: _var.compartment_id,
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: _var.monitored_resource_type_description,
 *     displayName: _var.monitored_resource_type_display_name,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     metadata: {
 *         format: _var.monitored_resource_type_metadata_format,
 *         agentProperties: _var.monitored_resource_type_metadata_agent_properties,
 *         requiredProperties: _var.monitored_resource_type_metadata_required_properties,
 *         uniquePropertySets: [{
 *             properties: _var.monitored_resource_type_metadata_unique_property_sets_properties,
 *         }],
 *         validPropertiesForCreates: _var.monitored_resource_type_metadata_valid_properties_for_create,
 *         validPropertiesForUpdates: _var.monitored_resource_type_metadata_valid_properties_for_update,
 *         validPropertyValues: _var.monitored_resource_type_metadata_valid_property_values,
 *     },
 *     metricNamespace: _var.monitored_resource_type_metric_namespace,
 *     resourceCategory: _var.monitored_resource_type_resource_category,
 *     sourceType: _var.monitored_resource_type_source_type,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * MonitoredResourceTypes can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:StackMonitoring/monitoredResourceType:MonitoredResourceType test_monitored_resource_type "id"
 * ```
 */
export class MonitoredResourceType extends pulumi.CustomResource {
    /**
     * Get an existing MonitoredResourceType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitoredResourceTypeState, opts?: pulumi.CustomResourceOptions): MonitoredResourceType {
        return new MonitoredResourceType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:StackMonitoring/monitoredResourceType:MonitoredResourceType';

    /**
     * Returns true if the given object is an instance of MonitoredResourceType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MonitoredResourceType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitoredResourceType.__pulumiType;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) A friendly description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Monitored resource type display name.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Updatable) The metadata details for resource type.
     */
    public readonly metadata!: pulumi.Output<outputs.StackMonitoring.MonitoredResourceTypeMetadata>;
    /**
     * (Updatable) Metric namespace for resource type.
     */
    public readonly metricNamespace!: pulumi.Output<string>;
    /**
     * A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Updatable) Resource Category to indicate the kind of resource type.
     */
    public readonly resourceCategory!: pulumi.Output<string>;
    /**
     * (Updatable) Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly sourceType!: pulumi.Output<string>;
    /**
     * Lifecycle state of the monitored resource type.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: any}>;
    /**
     * The date and time when the monitored resource type was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time when the monitored resource was updated, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;

    /**
     * Create a MonitoredResourceType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitoredResourceTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MonitoredResourceTypeArgs | MonitoredResourceTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MonitoredResourceTypeState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["metricNamespace"] = state ? state.metricNamespace : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceCategory"] = state ? state.resourceCategory : undefined;
            resourceInputs["sourceType"] = state ? state.sourceType : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
        } else {
            const args = argsOrState as MonitoredResourceTypeArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["metricNamespace"] = args ? args.metricNamespace : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceCategory"] = args ? args.resourceCategory : undefined;
            resourceInputs["sourceType"] = args ? args.sourceType : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitoredResourceType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MonitoredResourceType resources.
 */
export interface MonitoredResourceTypeState {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Monitored resource type display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The metadata details for resource type.
     */
    metadata?: pulumi.Input<inputs.StackMonitoring.MonitoredResourceTypeMetadata>;
    /**
     * (Updatable) Metric namespace for resource type.
     */
    metricNamespace?: pulumi.Input<string>;
    /**
     * A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Resource Category to indicate the kind of resource type.
     */
    resourceCategory?: pulumi.Input<string>;
    /**
     * (Updatable) Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    sourceType?: pulumi.Input<string>;
    /**
     * Lifecycle state of the monitored resource type.
     */
    state?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The date and time when the monitored resource type was created, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time when the monitored resource was updated, expressed in  [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
     */
    timeUpdated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MonitoredResourceType resource.
 */
export interface MonitoredResourceTypeArgs {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy containing the resource type.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) A friendly description.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) Monitored resource type display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Updatable) The metadata details for resource type.
     */
    metadata?: pulumi.Input<inputs.StackMonitoring.MonitoredResourceTypeMetadata>;
    /**
     * (Updatable) Metric namespace for resource type.
     */
    metricNamespace?: pulumi.Input<string>;
    /**
     * A unique monitored resource type name. The name must be unique across tenancy.  Name can not be changed.
     */
    name?: pulumi.Input<string>;
    /**
     * (Updatable) Resource Category to indicate the kind of resource type.
     */
    resourceCategory?: pulumi.Input<string>;
    /**
     * (Updatable) Source type to indicate if the resource is stack monitoring discovered, Oracle Cloud Infrastructure native resource, etc. 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    sourceType?: pulumi.Input<string>;
}
