// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Monitored Resources Associate Monitored Resource resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Create an association between two monitored resources. Associations can be created
 * between resources from different compartments as long they are in same tenancy.
 * User should have required access in both the compartments.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoredResourcesAssociateMonitoredResource = new oci.stackmonitoring.MonitoredResourcesAssociateMonitoredResource("test_monitored_resources_associate_monitored_resource", {
 *     associationType: monitoredResourcesAssociateMonitoredResourceAssociationType,
 *     compartmentId: compartmentId,
 *     destinationResourceId: testDestinationResource.id,
 *     sourceResourceId: testSourceResource.id,
 * });
 * ```
 *
 * ## Import
 *
 * MonitoredResourcesAssociateMonitoredResources can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:StackMonitoring/monitoredResourcesAssociateMonitoredResource:MonitoredResourcesAssociateMonitoredResource test_monitored_resources_associate_monitored_resource "id"
 * ```
 */
export class MonitoredResourcesAssociateMonitoredResource extends pulumi.CustomResource {
    /**
     * Get an existing MonitoredResourcesAssociateMonitoredResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitoredResourcesAssociateMonitoredResourceState, opts?: pulumi.CustomResourceOptions): MonitoredResourcesAssociateMonitoredResource {
        return new MonitoredResourcesAssociateMonitoredResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:StackMonitoring/monitoredResourcesAssociateMonitoredResource:MonitoredResourcesAssociateMonitoredResource';

    /**
     * Returns true if the given object is an instance of MonitoredResourcesAssociateMonitoredResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MonitoredResourcesAssociateMonitoredResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitoredResourcesAssociateMonitoredResource.__pulumiType;
    }

    /**
     * Association type to be created between source and destination resources.
     */
    declare public readonly associationType: pulumi.Output<string>;
    /**
     * Association category. Possible values are:
     * * System created (SYSTEM),
     * * User created using API (USER_API)
     * * User created using tags (USER_TAG_ASSOC).
     */
    declare public /*out*/ readonly category: pulumi.Output<string>;
    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * Association Resource Details.
     */
    declare public /*out*/ readonly destinationResourceDetails: pulumi.Output<outputs.StackMonitoring.MonitoredResourcesAssociateMonitoredResourceDestinationResourceDetail[]>;
    /**
     * Destination Monitored Resource Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public readonly destinationResourceId: pulumi.Output<string>;
    /**
     * Association Resource Details.
     */
    declare public /*out*/ readonly sourceResourceDetails: pulumi.Output<outputs.StackMonitoring.MonitoredResourcesAssociateMonitoredResourceSourceResourceDetail[]>;
    /**
     * Source Monitored Resource Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly sourceResourceId: pulumi.Output<string>;
    /**
     * Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    declare public /*out*/ readonly tenantId: pulumi.Output<string>;
    /**
     * The time when the association was created. An RFC3339 formatted datetime string.
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;

    /**
     * Create a MonitoredResourcesAssociateMonitoredResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitoredResourcesAssociateMonitoredResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MonitoredResourcesAssociateMonitoredResourceArgs | MonitoredResourcesAssociateMonitoredResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MonitoredResourcesAssociateMonitoredResourceState | undefined;
            resourceInputs["associationType"] = state?.associationType;
            resourceInputs["category"] = state?.category;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["destinationResourceDetails"] = state?.destinationResourceDetails;
            resourceInputs["destinationResourceId"] = state?.destinationResourceId;
            resourceInputs["sourceResourceDetails"] = state?.sourceResourceDetails;
            resourceInputs["sourceResourceId"] = state?.sourceResourceId;
            resourceInputs["tenantId"] = state?.tenantId;
            resourceInputs["timeCreated"] = state?.timeCreated;
        } else {
            const args = argsOrState as MonitoredResourcesAssociateMonitoredResourceArgs | undefined;
            if (args?.associationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'associationType'");
            }
            if (args?.compartmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if (args?.destinationResourceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationResourceId'");
            }
            if (args?.sourceResourceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'sourceResourceId'");
            }
            resourceInputs["associationType"] = args?.associationType;
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["destinationResourceId"] = args?.destinationResourceId;
            resourceInputs["sourceResourceId"] = args?.sourceResourceId;
            resourceInputs["category"] = undefined /*out*/;
            resourceInputs["destinationResourceDetails"] = undefined /*out*/;
            resourceInputs["sourceResourceDetails"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitoredResourcesAssociateMonitoredResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MonitoredResourcesAssociateMonitoredResource resources.
 */
export interface MonitoredResourcesAssociateMonitoredResourceState {
    /**
     * Association type to be created between source and destination resources.
     */
    associationType?: pulumi.Input<string>;
    /**
     * Association category. Possible values are:
     * * System created (SYSTEM),
     * * User created using API (USER_API)
     * * User created using tags (USER_TAG_ASSOC).
     */
    category?: pulumi.Input<string>;
    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * Association Resource Details.
     */
    destinationResourceDetails?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoredResourcesAssociateMonitoredResourceDestinationResourceDetail>[]>;
    /**
     * Destination Monitored Resource Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    destinationResourceId?: pulumi.Input<string>;
    /**
     * Association Resource Details.
     */
    sourceResourceDetails?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoredResourcesAssociateMonitoredResourceSourceResourceDetail>[]>;
    /**
     * Source Monitored Resource Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The time when the association was created. An RFC3339 formatted datetime string.
     */
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MonitoredResourcesAssociateMonitoredResource resource.
 */
export interface MonitoredResourcesAssociateMonitoredResourceArgs {
    /**
     * Association type to be created between source and destination resources.
     */
    associationType: pulumi.Input<string>;
    /**
     * Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    compartmentId: pulumi.Input<string>;
    /**
     * Destination Monitored Resource Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     */
    destinationResourceId: pulumi.Input<string>;
    /**
     * Source Monitored Resource Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). 
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    sourceResourceId: pulumi.Input<string>;
}
