// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource provides the Monitoring Template resource in Oracle Cloud Infrastructure Stack Monitoring service.
 *
 * Creates a new monitoring template for a given compartment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testMonitoringTemplate = new oci.stackmonitoring.MonitoringTemplate("test_monitoring_template", {
 *     compartmentId: compartmentId,
 *     destinations: monitoringTemplateDestinations,
 *     displayName: monitoringTemplateDisplayName,
 *     members: [{
 *         id: monitoringTemplateMembersId,
 *         type: monitoringTemplateMembersType,
 *         compositeType: monitoringTemplateMembersCompositeType,
 *     }],
 *     definedTags: {
 *         "foo-namespace.bar-key": "value",
 *     },
 *     description: monitoringTemplateDescription,
 *     freeformTags: {
 *         "bar-key": "value",
 *     },
 *     isAlarmsEnabled: monitoringTemplateIsAlarmsEnabled,
 *     isSplitNotificationEnabled: monitoringTemplateIsSplitNotificationEnabled,
 *     messageFormat: monitoringTemplateMessageFormat,
 *     repeatNotificationDuration: monitoringTemplateRepeatNotificationDuration,
 * });
 * ```
 *
 * ## Import
 *
 * MonitoringTemplates can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:StackMonitoring/monitoringTemplate:MonitoringTemplate test_monitoring_template "id"
 * ```
 */
export class MonitoringTemplate extends pulumi.CustomResource {
    /**
     * Get an existing MonitoringTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitoringTemplateState, opts?: pulumi.CustomResourceOptions): MonitoringTemplate {
        return new MonitoringTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:StackMonitoring/monitoringTemplate:MonitoringTemplate';

    /**
     * Returns true if the given object is an instance of MonitoringTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MonitoringTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MonitoringTemplate.__pulumiType;
    }

    /**
     * The OCID of the compartment containing the monitoringTemplate.
     */
    public readonly compartmentId!: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    public readonly definedTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
     */
    public readonly destinations!: pulumi.Output<string[]>;
    /**
     * (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    public readonly freeformTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
     */
    public readonly isAlarmsEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     */
    public readonly isSplitNotificationEnabled!: pulumi.Output<boolean>;
    /**
     * (Updatable) List of members of this monitoring template
     */
    public readonly members!: pulumi.Output<outputs.StackMonitoring.MonitoringTemplateMember[]>;
    /**
     * (Updatable) The format to use for alarm notifications.
     */
    public readonly messageFormat!: pulumi.Output<string>;
    /**
     * (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    public readonly repeatNotificationDuration!: pulumi.Output<string>;
    /**
     * The current lifecycle state of the monitoring template.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The current status of the monitoring template i.e. whether it is Applied or NotApplied.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    public /*out*/ readonly systemTags!: pulumi.Output<{[key: string]: string}>;
    /**
     * Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    /**
     * The date and time the monitoringTemplate was created. Format defined by RFC3339.
     */
    public /*out*/ readonly timeCreated!: pulumi.Output<string>;
    /**
     * The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
     */
    public /*out*/ readonly timeUpdated!: pulumi.Output<string>;
    /**
     * Total Alarm Conditions
     */
    public /*out*/ readonly totalAlarmConditions!: pulumi.Output<number>;
    /**
     * Total Applied Alarm Conditions
     */
    public /*out*/ readonly totalAppliedAlarmConditions!: pulumi.Output<number>;

    /**
     * Create a MonitoringTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitoringTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MonitoringTemplateArgs | MonitoringTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MonitoringTemplateState | undefined;
            resourceInputs["compartmentId"] = state ? state.compartmentId : undefined;
            resourceInputs["definedTags"] = state ? state.definedTags : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinations"] = state ? state.destinations : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["freeformTags"] = state ? state.freeformTags : undefined;
            resourceInputs["isAlarmsEnabled"] = state ? state.isAlarmsEnabled : undefined;
            resourceInputs["isSplitNotificationEnabled"] = state ? state.isSplitNotificationEnabled : undefined;
            resourceInputs["members"] = state ? state.members : undefined;
            resourceInputs["messageFormat"] = state ? state.messageFormat : undefined;
            resourceInputs["repeatNotificationDuration"] = state ? state.repeatNotificationDuration : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["systemTags"] = state ? state.systemTags : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeCreated"] = state ? state.timeCreated : undefined;
            resourceInputs["timeUpdated"] = state ? state.timeUpdated : undefined;
            resourceInputs["totalAlarmConditions"] = state ? state.totalAlarmConditions : undefined;
            resourceInputs["totalAppliedAlarmConditions"] = state ? state.totalAppliedAlarmConditions : undefined;
        } else {
            const args = argsOrState as MonitoringTemplateArgs | undefined;
            if ((!args || args.compartmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'compartmentId'");
            }
            if ((!args || args.destinations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinations'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.members === undefined) && !opts.urn) {
                throw new Error("Missing required property 'members'");
            }
            resourceInputs["compartmentId"] = args ? args.compartmentId : undefined;
            resourceInputs["definedTags"] = args ? args.definedTags : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinations"] = args ? args.destinations : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["freeformTags"] = args ? args.freeformTags : undefined;
            resourceInputs["isAlarmsEnabled"] = args ? args.isAlarmsEnabled : undefined;
            resourceInputs["isSplitNotificationEnabled"] = args ? args.isSplitNotificationEnabled : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["messageFormat"] = args ? args.messageFormat : undefined;
            resourceInputs["repeatNotificationDuration"] = args ? args.repeatNotificationDuration : undefined;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["systemTags"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
            resourceInputs["timeUpdated"] = undefined /*out*/;
            resourceInputs["totalAlarmConditions"] = undefined /*out*/;
            resourceInputs["totalAppliedAlarmConditions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MonitoringTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MonitoringTemplate resources.
 */
export interface MonitoringTemplateState {
    /**
     * The OCID of the compartment containing the monitoringTemplate.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
     */
    destinations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
     */
    displayName?: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
     */
    isAlarmsEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     */
    isSplitNotificationEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) List of members of this monitoring template
     */
    members?: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoringTemplateMember>[]>;
    /**
     * (Updatable) The format to use for alarm notifications.
     */
    messageFormat?: pulumi.Input<string>;
    /**
     * (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    repeatNotificationDuration?: pulumi.Input<string>;
    /**
     * The current lifecycle state of the monitoring template.
     */
    state?: pulumi.Input<string>;
    /**
     * The current status of the monitoring template i.e. whether it is Applied or NotApplied.
     */
    status?: pulumi.Input<string>;
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{"orcl-cloud.free-tier-retained": "true"}`
     */
    systemTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Tenant Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The date and time the monitoringTemplate was created. Format defined by RFC3339.
     */
    timeCreated?: pulumi.Input<string>;
    /**
     * The date and time the monitoringTemplate was last updated. Format defined by RFC3339.
     */
    timeUpdated?: pulumi.Input<string>;
    /**
     * Total Alarm Conditions
     */
    totalAlarmConditions?: pulumi.Input<number>;
    /**
     * Total Applied Alarm Conditions
     */
    totalAppliedAlarmConditions?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a MonitoringTemplate resource.
 */
export interface MonitoringTemplateArgs {
    /**
     * The OCID of the compartment containing the monitoringTemplate.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) A user-friendly description for the monitoring template. It does not have to be unique, and it's changeable. Avoid entering confidential information.
     */
    description?: pulumi.Input<string>;
    /**
     * (Updatable) A list of destinations for alarm notifications. Each destination is represented by the OCID of a related resource, such as a topic.
     */
    destinations: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Updatable) A user-friendly name for the monitoring template. It is unique and mutable in nature. Avoid entering confidential information.
     */
    displayName: pulumi.Input<string>;
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Whether the alarm is enabled or disabled, it will be Enabled by default.
     */
    isAlarmsEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) Whether the alarm notification is enabled or disabled, it will be Enabled by default.
     */
    isSplitNotificationEnabled?: pulumi.Input<boolean>;
    /**
     * (Updatable) List of members of this monitoring template
     */
    members: pulumi.Input<pulumi.Input<inputs.StackMonitoring.MonitoringTemplateMember>[]>;
    /**
     * (Updatable) The format to use for alarm notifications.
     */
    messageFormat?: pulumi.Input<string>;
    /**
     * (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, PT4H indicates four hours. Minimum- PT1M. Maximum - P30D.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    repeatNotificationDuration?: pulumi.Input<string>;
}
