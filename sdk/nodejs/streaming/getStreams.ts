// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
 *
 * Lists the streams in the given compartment id.
 * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
 * If the stream pool id is specified, the action will be scoped to that stream pool.
 * The compartment id and stream pool id cannot be specified at the same time.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreams = oci.Streaming.getStreams({
 *     compartmentId: compartmentId,
 *     id: streamId,
 *     name: streamName,
 *     state: streamState,
 *     streamPoolId: testStreamPool.id,
 * });
 * ```
 */
export function getStreams(args?: GetStreamsArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Streaming/getStreams:getStreams", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "state": args.state,
        "streamPoolId": args.streamPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreams.
 */
export interface GetStreamsArgs {
    /**
     * The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
     */
    compartmentId?: string;
    filters?: inputs.Streaming.GetStreamsFilter[];
    /**
     * A filter to return only resources that match the given ID exactly.
     */
    id?: string;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name?: string;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: string;
    /**
     * The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
     */
    streamPoolId?: string;
}

/**
 * A collection of values returned by getStreams.
 */
export interface GetStreamsResult {
    /**
     * The OCID of the compartment that contains the stream.
     */
    readonly compartmentId?: string;
    readonly filters?: outputs.Streaming.GetStreamsFilter[];
    /**
     * The OCID of the stream.
     */
    readonly id?: string;
    /**
     * The name of the stream. Avoid entering confidential information.  Example: `TelemetryEvents`
     */
    readonly name?: string;
    /**
     * The current state of the stream.
     */
    readonly state?: string;
    /**
     * The OCID of the stream pool that contains the stream.
     */
    readonly streamPoolId?: string;
    /**
     * The list of streams.
     */
    readonly streams: outputs.Streaming.GetStreamsStream[];
}
/**
 * This data source provides the list of Streams in Oracle Cloud Infrastructure Streaming service.
 *
 * Lists the streams in the given compartment id.
 * If the compartment id is specified, it will list streams in the compartment, regardless of their stream pool.
 * If the stream pool id is specified, the action will be scoped to that stream pool.
 * The compartment id and stream pool id cannot be specified at the same time.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStreams = oci.Streaming.getStreams({
 *     compartmentId: compartmentId,
 *     id: streamId,
 *     name: streamName,
 *     state: streamState,
 *     streamPoolId: testStreamPool.id,
 * });
 * ```
 */
export function getStreamsOutput(args?: GetStreamsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStreamsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Streaming/getStreams:getStreams", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "id": args.id,
        "name": args.name,
        "state": args.state,
        "streamPoolId": args.streamPoolId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreams.
 */
export interface GetStreamsOutputArgs {
    /**
     * The OCID of the compartment. Is exclusive with the `streamPoolId` parameter. One of them is required.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Streaming.GetStreamsFilterArgs>[]>;
    /**
     * A filter to return only resources that match the given ID exactly.
     */
    id?: pulumi.Input<string>;
    /**
     * A filter to return only resources that match the given name exactly.
     */
    name?: pulumi.Input<string>;
    /**
     * A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     */
    state?: pulumi.Input<string>;
    /**
     * The OCID of the stream pool. Is exclusive with the `compartmentId` parameter. One of them is required.
     */
    streamPoolId?: pulumi.Input<string>;
}
