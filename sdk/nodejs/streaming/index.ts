// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConnectHarnessArgs, ConnectHarnessState } from "./connectHarness";
export type ConnectHarness = import("./connectHarness").ConnectHarness;
export const ConnectHarness: typeof import("./connectHarness").ConnectHarness = null as any;
utilities.lazyLoad(exports, ["ConnectHarness"], () => require("./connectHarness"));

export { GetConnectHarnessArgs, GetConnectHarnessResult, GetConnectHarnessOutputArgs } from "./getConnectHarness";
export const getConnectHarness: typeof import("./getConnectHarness").getConnectHarness = null as any;
export const getConnectHarnessOutput: typeof import("./getConnectHarness").getConnectHarnessOutput = null as any;
utilities.lazyLoad(exports, ["getConnectHarness","getConnectHarnessOutput"], () => require("./getConnectHarness"));

export { GetConnectHarnessesArgs, GetConnectHarnessesResult, GetConnectHarnessesOutputArgs } from "./getConnectHarnesses";
export const getConnectHarnesses: typeof import("./getConnectHarnesses").getConnectHarnesses = null as any;
export const getConnectHarnessesOutput: typeof import("./getConnectHarnesses").getConnectHarnessesOutput = null as any;
utilities.lazyLoad(exports, ["getConnectHarnesses","getConnectHarnessesOutput"], () => require("./getConnectHarnesses"));

export { GetStreamArgs, GetStreamResult, GetStreamOutputArgs } from "./getStream";
export const getStream: typeof import("./getStream").getStream = null as any;
export const getStreamOutput: typeof import("./getStream").getStreamOutput = null as any;
utilities.lazyLoad(exports, ["getStream","getStreamOutput"], () => require("./getStream"));

export { GetStreamPoolArgs, GetStreamPoolResult, GetStreamPoolOutputArgs } from "./getStreamPool";
export const getStreamPool: typeof import("./getStreamPool").getStreamPool = null as any;
export const getStreamPoolOutput: typeof import("./getStreamPool").getStreamPoolOutput = null as any;
utilities.lazyLoad(exports, ["getStreamPool","getStreamPoolOutput"], () => require("./getStreamPool"));

export { GetStreamPoolsArgs, GetStreamPoolsResult, GetStreamPoolsOutputArgs } from "./getStreamPools";
export const getStreamPools: typeof import("./getStreamPools").getStreamPools = null as any;
export const getStreamPoolsOutput: typeof import("./getStreamPools").getStreamPoolsOutput = null as any;
utilities.lazyLoad(exports, ["getStreamPools","getStreamPoolsOutput"], () => require("./getStreamPools"));

export { GetStreamsArgs, GetStreamsResult, GetStreamsOutputArgs } from "./getStreams";
export const getStreams: typeof import("./getStreams").getStreams = null as any;
export const getStreamsOutput: typeof import("./getStreams").getStreamsOutput = null as any;
utilities.lazyLoad(exports, ["getStreams","getStreamsOutput"], () => require("./getStreams"));

export { StreamArgs, StreamState } from "./stream";
export type Stream = import("./stream").Stream;
export const Stream: typeof import("./stream").Stream = null as any;
utilities.lazyLoad(exports, ["Stream"], () => require("./stream"));

export { StreamPoolArgs, StreamPoolState } from "./streamPool";
export type StreamPool = import("./streamPool").StreamPool;
export const StreamPool: typeof import("./streamPool").StreamPool = null as any;
utilities.lazyLoad(exports, ["StreamPool"], () => require("./streamPool"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "oci:Streaming/connectHarness:ConnectHarness":
                return new ConnectHarness(name, <any>undefined, { urn })
            case "oci:Streaming/stream:Stream":
                return new Stream(name, <any>undefined, { urn })
            case "oci:Streaming/streamPool:StreamPool":
                return new StreamPool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("oci", "Streaming/connectHarness", _module)
pulumi.runtime.registerResourceModule("oci", "Streaming/stream", _module)
pulumi.runtime.registerResourceModule("oci", "Streaming/streamPool", _module)
