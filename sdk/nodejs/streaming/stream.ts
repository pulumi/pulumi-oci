// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource provides the Stream resource in Oracle Cloud Infrastructure Streaming service.
 *
 * Starts the provisioning of a new stream.
 * The stream will be created in the given compartment id or stream pool id, depending on which parameter is specified.
 * Compartment id and stream pool id cannot be specified at the same time.
 * To track the progress of the provisioning, you can periodically call [GetStream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream/GetStream).
 * In the response, the `lifecycleState` parameter of the [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream/) object tells you its current state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testStream = new oci.streaming.Stream("test_stream", {
 *     name: streamName,
 *     partitions: streamPartitions,
 *     compartmentId: compartmentId,
 *     definedTags: streamDefinedTags,
 *     freeformTags: {
 *         Department: "Finance",
 *     },
 *     retentionInHours: streamRetentionInHours,
 *     streamPoolId: testStreamPool.id,
 * });
 * ```
 *
 * ## Import
 *
 * Streams can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import oci:Streaming/stream:Stream test_stream "id"
 * ```
 */
export class Stream extends pulumi.CustomResource {
    /**
     * Get an existing Stream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StreamState, opts?: pulumi.CustomResourceOptions): Stream {
        return new Stream(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'oci:Streaming/stream:Stream';

    /**
     * Returns true if the given object is an instance of Stream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Stream {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Stream.__pulumiType;
    }

    /**
     * (Updatable) The OCID of the compartment that contains the stream.
     */
    declare public readonly compartmentId: pulumi.Output<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    declare public readonly definedTags: pulumi.Output<{[key: string]: string}>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    declare public readonly freeformTags: pulumi.Output<{[key: string]: string}>;
    /**
     * Any additional details about the current state of the stream.
     */
    declare public /*out*/ readonly lifecycleStateDetails: pulumi.Output<string>;
    /**
     * The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool's associated subnet.
     */
    declare public /*out*/ readonly messagesEndpoint: pulumi.Output<string>;
    /**
     * The name of the stream. Avoid entering confidential information.  Example: `TelemetryEvents`
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The number of partitions in the stream.
     */
    declare public readonly partitions: pulumi.Output<number>;
    /**
     * The retention period of the stream, in hours. Accepted values are between 24 and 168 (7 days). If not specified, the stream will have a retention period of 24 hours.
     */
    declare public readonly retentionInHours: pulumi.Output<number>;
    /**
     * The current state of the stream.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * (Updatable) The OCID of the stream pool that contains the stream.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    declare public readonly streamPoolId: pulumi.Output<string>;
    /**
     * The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     */
    declare public /*out*/ readonly timeCreated: pulumi.Output<string>;

    /**
     * Create a Stream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StreamArgs | StreamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StreamState | undefined;
            resourceInputs["compartmentId"] = state?.compartmentId;
            resourceInputs["definedTags"] = state?.definedTags;
            resourceInputs["freeformTags"] = state?.freeformTags;
            resourceInputs["lifecycleStateDetails"] = state?.lifecycleStateDetails;
            resourceInputs["messagesEndpoint"] = state?.messagesEndpoint;
            resourceInputs["name"] = state?.name;
            resourceInputs["partitions"] = state?.partitions;
            resourceInputs["retentionInHours"] = state?.retentionInHours;
            resourceInputs["state"] = state?.state;
            resourceInputs["streamPoolId"] = state?.streamPoolId;
            resourceInputs["timeCreated"] = state?.timeCreated;
        } else {
            const args = argsOrState as StreamArgs | undefined;
            if (args?.partitions === undefined && !opts.urn) {
                throw new Error("Missing required property 'partitions'");
            }
            resourceInputs["compartmentId"] = args?.compartmentId;
            resourceInputs["definedTags"] = args?.definedTags;
            resourceInputs["freeformTags"] = args?.freeformTags;
            resourceInputs["name"] = args?.name;
            resourceInputs["partitions"] = args?.partitions;
            resourceInputs["retentionInHours"] = args?.retentionInHours;
            resourceInputs["streamPoolId"] = args?.streamPoolId;
            resourceInputs["lifecycleStateDetails"] = undefined /*out*/;
            resourceInputs["messagesEndpoint"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["timeCreated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Stream.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Stream resources.
 */
export interface StreamState {
    /**
     * (Updatable) The OCID of the compartment that contains the stream.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Any additional details about the current state of the stream.
     */
    lifecycleStateDetails?: pulumi.Input<string>;
    /**
     * The endpoint to use when creating the StreamClient to consume or publish messages in the stream. If the associated stream pool is private, the endpoint is also private and can only be accessed from inside the stream pool's associated subnet.
     */
    messagesEndpoint?: pulumi.Input<string>;
    /**
     * The name of the stream. Avoid entering confidential information.  Example: `TelemetryEvents`
     */
    name?: pulumi.Input<string>;
    /**
     * The number of partitions in the stream.
     */
    partitions?: pulumi.Input<number>;
    /**
     * The retention period of the stream, in hours. Accepted values are between 24 and 168 (7 days). If not specified, the stream will have a retention period of 24 hours.
     */
    retentionInHours?: pulumi.Input<number>;
    /**
     * The current state of the stream.
     */
    state?: pulumi.Input<string>;
    /**
     * (Updatable) The OCID of the stream pool that contains the stream.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    streamPoolId?: pulumi.Input<string>;
    /**
     * The date and time the stream was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     */
    timeCreated?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Stream resource.
 */
export interface StreamArgs {
    /**
     * (Updatable) The OCID of the compartment that contains the stream.
     */
    compartmentId?: pulumi.Input<string>;
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Operations.CostCenter": "42"}`
     */
    definedTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{"Department": "Finance"}`
     */
    freeformTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the stream. Avoid entering confidential information.  Example: `TelemetryEvents`
     */
    name?: pulumi.Input<string>;
    /**
     * The number of partitions in the stream.
     */
    partitions: pulumi.Input<number>;
    /**
     * The retention period of the stream, in hours. Accepted values are between 24 and 168 (7 days). If not specified, the stream will have a retention period of 24 hours.
     */
    retentionInHours?: pulumi.Input<number>;
    /**
     * (Updatable) The OCID of the stream pool that contains the stream.
     *
     *
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     */
    streamPoolId?: pulumi.Input<string>;
}
