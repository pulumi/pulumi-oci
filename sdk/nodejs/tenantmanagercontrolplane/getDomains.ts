// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Domains in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
 *
 * Return a (paginated) list of domains.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDomains = oci.Tenantmanagercontrolplane.getDomains({
 *     compartmentId: compartmentId,
 *     domainId: testDomain.id,
 *     name: domainName,
 *     state: domainState,
 *     status: domainStatus,
 * });
 * ```
 */
export function getDomains(args: GetDomainsArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Tenantmanagercontrolplane/getDomains:getDomains", {
        "compartmentId": args.compartmentId,
        "domainId": args.domainId,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomains.
 */
export interface GetDomainsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: string;
    /**
     * The domain OCID.
     */
    domainId?: string;
    filters?: inputs.Tenantmanagercontrolplane.GetDomainsFilter[];
    /**
     * A filter to return only resources that exactly match the name given.
     */
    name?: string;
    /**
     * The lifecycle state of the resource.
     */
    state?: string;
    /**
     * The status of the domain.
     */
    status?: string;
}

/**
 * A collection of values returned by getDomains.
 */
export interface GetDomainsResult {
    readonly compartmentId: string;
    /**
     * The list of domain_collection.
     */
    readonly domainCollections: outputs.Tenantmanagercontrolplane.GetDomainsDomainCollection[];
    readonly domainId?: string;
    readonly filters?: outputs.Tenantmanagercontrolplane.GetDomainsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    /**
     * Lifecycle state of the domain.
     */
    readonly state?: string;
    /**
     * Status of the domain.
     */
    readonly status?: string;
}
/**
 * This data source provides the list of Domains in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
 *
 * Return a (paginated) list of domains.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testDomains = oci.Tenantmanagercontrolplane.getDomains({
 *     compartmentId: compartmentId,
 *     domainId: testDomain.id,
 *     name: domainName,
 *     state: domainState,
 *     status: domainStatus,
 * });
 * ```
 */
export function getDomainsOutput(args: GetDomainsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDomainsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Tenantmanagercontrolplane/getDomains:getDomains", {
        "compartmentId": args.compartmentId,
        "domainId": args.domainId,
        "filters": args.filters,
        "name": args.name,
        "state": args.state,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomains.
 */
export interface GetDomainsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId: pulumi.Input<string>;
    /**
     * The domain OCID.
     */
    domainId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Tenantmanagercontrolplane.GetDomainsFilterArgs>[]>;
    /**
     * A filter to return only resources that exactly match the name given.
     */
    name?: pulumi.Input<string>;
    /**
     * The lifecycle state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * The status of the domain.
     */
    status?: pulumi.Input<string>;
}
