// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
 *
 * Gets the subscription details by subscription ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscription = oci.Tenantmanagercontrolplane.getSubscription({
 *     subscriptionId: testSubscriptionOciTenantmanagercontrolplaneSubscription.id,
 * });
 * ```
 */
export function getSubscription(args: GetSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Tenantmanagercontrolplane/getSubscription:getSubscription", {
        "subscriptionId": args.subscriptionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscription.
 */
export interface GetSubscriptionArgs {
    /**
     * OCID of the subscription.
     */
    subscriptionId: string;
}

/**
 * A collection of values returned by getSubscription.
 */
export interface GetSubscriptionResult {
    /**
     * Classic subscription ID.
     */
    readonly classicSubscriptionId: string;
    /**
     * The currency code for the customer associated with the subscription.
     */
    readonly cloudAmountCurrency: string;
    /**
     * The Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)) of the owning compartment. Always a tenancy OCID.
     */
    readonly compartmentId: string;
    /**
     * Customer service identifier for the customer associated with the subscription.
     */
    readonly csiNumber: string;
    /**
     * Currency code. For example USD, MXN.
     */
    readonly currencyCode: string;
    /**
     * The country code for the customer associated with the subscription.
     */
    readonly customerCountryCode: string;
    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{"foo-namespace.bar-key": "value"}`
     */
    readonly definedTags: {[key: string]: string};
    /**
     * Date and time when the SKU ended.
     */
    readonly endDate: string;
    /**
     * The entity version of the subscription, whether V1 (the legacy schema version), or V2 (the latest 20230401 API version).
     */
    readonly entityVersion: string;
    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{"bar-key": "value"}`
     */
    readonly freeformTags: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Specifies whether or not the subscription is from classic systems.
     */
    readonly isClassicSubscription: boolean;
    /**
     * Specifies whether or not the subscription is a government subscription.
     */
    readonly isGovernmentSubscription: boolean;
    /**
     * The pay model of the subscription, such as 'Pay as you go' or 'Monthly'.
     */
    readonly paymentModel: string;
    /**
     * Specifies any program that is associated with the subscription.
     */
    readonly programType: string;
    /**
     * List of promotions related to the subscription.
     */
    readonly promotions: outputs.Tenantmanagercontrolplane.GetSubscriptionPromotion[];
    /**
     * Purchase entitlement ID associated with the subscription.
     */
    readonly purchaseEntitlementId: string;
    /**
     * Region for the subscription.
     */
    readonly regionAssignment: string;
    /**
     * The type of subscription, such as 'UCM', 'SAAS', 'ERP', 'CRM'.
     */
    readonly serviceName: string;
    /**
     * List of SKUs linked to this subscription.
     */
    readonly skuses: outputs.Tenantmanagercontrolplane.GetSubscriptionSkus[];
    /**
     * Subscription start time.
     */
    readonly startDate: string;
    /**
     * Lifecycle state of the subscription.
     */
    readonly state: string;
    readonly subscriptionId: string;
    /**
     * Unique Oracle Cloud Subscriptions identifier that is immutable on creation.
     */
    readonly subscriptionNumber: string;
    /**
     * Tier for the subscription, whether a free promotion subscription or a paid subscription.
     */
    readonly subscriptionTier: string;
    /**
     * The date and time of creation, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    readonly timeCreated: string;
    /**
     * The date and time of update, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     */
    readonly timeUpdated: string;
}
/**
 * This data source provides details about a specific Subscription resource in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
 *
 * Gets the subscription details by subscription ID.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscription = oci.Tenantmanagercontrolplane.getSubscription({
 *     subscriptionId: testSubscriptionOciTenantmanagercontrolplaneSubscription.id,
 * });
 * ```
 */
export function getSubscriptionOutput(args: GetSubscriptionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSubscriptionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Tenantmanagercontrolplane/getSubscription:getSubscription", {
        "subscriptionId": args.subscriptionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscription.
 */
export interface GetSubscriptionOutputArgs {
    /**
     * OCID of the subscription.
     */
    subscriptionId: pulumi.Input<string>;
}
