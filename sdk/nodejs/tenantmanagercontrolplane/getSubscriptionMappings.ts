// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This data source provides the list of Subscription Mappings in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
 *
 * Lists the subscription mappings for all the subscriptions owned by a given compartmentId. Only the root compartment is allowed.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionMappings = oci.Tenantmanagercontrolplane.getSubscriptionMappings({
 *     subscriptionId: testSubscription.id,
 *     compartmentId: compartmentId,
 *     state: subscriptionMappingState,
 *     subscriptionMappingId: testSubscriptionMapping.id,
 * });
 * ```
 */
export function getSubscriptionMappings(args: GetSubscriptionMappingsArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionMappingsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("oci:Tenantmanagercontrolplane/getSubscriptionMappings:getSubscriptionMappings", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "state": args.state,
        "subscriptionId": args.subscriptionId,
        "subscriptionMappingId": args.subscriptionMappingId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptionMappings.
 */
export interface GetSubscriptionMappingsArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: string;
    filters?: inputs.Tenantmanagercontrolplane.GetSubscriptionMappingsFilter[];
    /**
     * The lifecycle state of the resource.
     */
    state?: string;
    /**
     * OCID of the subscription.
     */
    subscriptionId: string;
    /**
     * A unique ID for subscription and tenancy mapping.
     */
    subscriptionMappingId?: string;
}

/**
 * A collection of values returned by getSubscriptionMappings.
 */
export interface GetSubscriptionMappingsResult {
    /**
     * OCID of the compartment. Always a tenancy OCID.
     */
    readonly compartmentId?: string;
    readonly filters?: outputs.Tenantmanagercontrolplane.GetSubscriptionMappingsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Lifecycle state of the subscriptionMapping.
     */
    readonly state?: string;
    /**
     * OCID of the subscription.
     */
    readonly subscriptionId: string;
    /**
     * The list of subscription_mapping_collection.
     */
    readonly subscriptionMappingCollections: outputs.Tenantmanagercontrolplane.GetSubscriptionMappingsSubscriptionMappingCollection[];
    readonly subscriptionMappingId?: string;
}
/**
 * This data source provides the list of Subscription Mappings in Oracle Cloud Infrastructure Tenantmanagercontrolplane service.
 *
 * Lists the subscription mappings for all the subscriptions owned by a given compartmentId. Only the root compartment is allowed.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as oci from "@pulumi/oci";
 *
 * const testSubscriptionMappings = oci.Tenantmanagercontrolplane.getSubscriptionMappings({
 *     subscriptionId: testSubscription.id,
 *     compartmentId: compartmentId,
 *     state: subscriptionMappingState,
 *     subscriptionMappingId: testSubscriptionMapping.id,
 * });
 * ```
 */
export function getSubscriptionMappingsOutput(args: GetSubscriptionMappingsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSubscriptionMappingsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("oci:Tenantmanagercontrolplane/getSubscriptionMappings:getSubscriptionMappings", {
        "compartmentId": args.compartmentId,
        "filters": args.filters,
        "state": args.state,
        "subscriptionId": args.subscriptionId,
        "subscriptionMappingId": args.subscriptionMappingId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptionMappings.
 */
export interface GetSubscriptionMappingsOutputArgs {
    /**
     * The ID of the compartment in which to list resources.
     */
    compartmentId?: pulumi.Input<string>;
    filters?: pulumi.Input<pulumi.Input<inputs.Tenantmanagercontrolplane.GetSubscriptionMappingsFilterArgs>[]>;
    /**
     * The lifecycle state of the resource.
     */
    state?: pulumi.Input<string>;
    /**
     * OCID of the subscription.
     */
    subscriptionId: pulumi.Input<string>;
    /**
     * A unique ID for subscription and tenancy mapping.
     */
    subscriptionMappingId?: pulumi.Input<string>;
}
